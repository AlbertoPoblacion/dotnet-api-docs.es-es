<Type Name="XmlStreamStore" FullName="System.Windows.Annotations.Storage.XmlStreamStore">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="72573dc58ce518e155bf22754475684a7e107efd" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39768494" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlStreamStore : System.Windows.Annotations.Storage.AnnotationStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlStreamStore extends System.Windows.Annotations.Storage.AnnotationStore" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Annotations.Storage.XmlStreamStore" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlStreamStore&#xA;Inherits AnnotationStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlStreamStore sealed : System::Windows::Annotations::Storage::AnnotationStore" />
  <TypeSignature Language="F#" Value="type XmlStreamStore = class&#xA;    inherit AnnotationStore" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Annotations.Storage.AnnotationStore</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="55765-101">Representa un almacén de datos XML para escribir y leer anotaciones de usuario.</span>
      <span class="sxs-lookup">
        <span data-stu-id="55765-101">Represents an XML data store for writing and reading user annotations.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="55765-102">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-102">Initializes a new instance of the <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlStreamStore (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlStreamStore(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Windows.Annotations.Storage.XmlStreamStore : System.IO.Stream -&gt; System.Windows.Annotations.Storage.XmlStreamStore" Usage="new System.Windows.Annotations.Storage.XmlStreamStore stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="55765-103">Secuencia de E/S para leer y escribir anotaciones de usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-103">The I/O stream for reading and writing user annotations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55765-104">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> con una <see cref="T:System.IO.Stream" /> de E/S especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-104">Initializes a new instance of the <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> class with a specified I/O <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55765-105">`stream` debe estar en formato XML válido y cumplir con los [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)] esquema.</span><span class="sxs-lookup"><span data-stu-id="55765-105">`stream` must be in valid XML format and comply with the [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)] schema.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlStreamStore (System.IO.Stream stream, System.Collections.Generic.IDictionary&lt;Uri,System.Collections.Generic.IList&lt;Uri&gt;&gt; knownNamespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Collections.Generic.IDictionary`2&lt;class System.Uri, class System.Collections.Generic.IList`1&lt;class System.Uri&gt;&gt; knownNamespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.#ctor(System.IO.Stream,System.Collections.Generic.IDictionary{System.Uri,System.Collections.Generic.IList{System.Uri}})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlStreamStore(System::IO::Stream ^ stream, System::Collections::Generic::IDictionary&lt;Uri ^, System::Collections::Generic::IList&lt;Uri ^&gt; ^&gt; ^ knownNamespaces);" />
      <MemberSignature Language="F#" Value="new System.Windows.Annotations.Storage.XmlStreamStore : System.IO.Stream * System.Collections.Generic.IDictionary&lt;Uri, System.Collections.Generic.IList&lt;Uri&gt;&gt; -&gt; System.Windows.Annotations.Storage.XmlStreamStore" Usage="new System.Windows.Annotations.Storage.XmlStreamStore (stream, knownNamespaces)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="knownNamespaces" Type="System.Collections.Generic.IDictionary&lt;System.Uri,System.Collections.Generic.IList&lt;System.Uri&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="55765-106">Secuencia de E/S para leer y escribir anotaciones de usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-106">The I/O stream for reading and writing user annotations.</span>
          </span>
        </param>
        <param name="knownNamespaces">
          <span data-ttu-id="55765-107">Diccionario con una lista de espacios de nombres compatibles conocidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-107">A dictionary with a list of known compatible namespaces.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55765-108">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> con una <see cref="T:System.IO.Stream" /> de E/S especificada y un diccionario de espacios de nombres compatibles conocidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-108">Initializes a new instance of the <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> class with a specified I/O <see cref="T:System.IO.Stream" /> and dictionary of known compatible namespaces.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55765-109">Esto <xref:System.Windows.Annotations.Storage.XmlStreamStore.%23ctor%2A> constructor habilita el registro de específicos de la aplicación conocida los espacios de nombres.</span><span class="sxs-lookup"><span data-stu-id="55765-109">This <xref:System.Windows.Annotations.Storage.XmlStreamStore.%23ctor%2A> constructor enables the registration of application-specific known namespaces.</span></span>  
  
 <span data-ttu-id="55765-110">El `knownNamespace` diccionario define los espacios de nombres de aplicación que se utilizan al almacenar el contenido personalizado como parte de una anotación.</span><span class="sxs-lookup"><span data-stu-id="55765-110">The `knownNamespace` dictionary defines application namespaces that are used when you store custom content as part of an annotation.</span></span>  <span data-ttu-id="55765-111">La clave del diccionario es el espacio de nombres principal sabe que el programa de aplicación.</span><span class="sxs-lookup"><span data-stu-id="55765-111">The dictionary key is the primary namespace known to the application program.</span></span>  <span data-ttu-id="55765-112">La clave de espacio de nombres está asociada a una lista de valores de los anteriores espacios de nombres que son compatibles con el espacio de nombres "clave".</span><span class="sxs-lookup"><span data-stu-id="55765-112">The namespace key is associated with a value list of older namespaces that are compatible with the "key" namespace.</span></span>  <span data-ttu-id="55765-113">Cuando se cargan los espacios de nombres de todas las anotaciones de esta lista se reemplazará por el espacio de nombres "clave".</span><span class="sxs-lookup"><span data-stu-id="55765-113">When annotations are loaded all namespaces from this list will be replaced by the "key" namespace.</span></span>  
  
 <span data-ttu-id="55765-114">`stream` debe estar en formato XML válido y cumplir con los [esquema en anotaciones](~/docs/framework/wpf/advanced/annotations-schema.md).</span><span class="sxs-lookup"><span data-stu-id="55765-114">`stream` must be in valid XML format and comply with the [Annotations Schema](~/docs/framework/wpf/advanced/annotations-schema.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="55765-115">
            <paramref name="stream" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-115">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="55765-116">
            <paramref name="stream" /> contiene XML no válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-116">
              <paramref name="stream" /> contains invalid XML.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="55765-117">El diccionario <paramref name="knownNamespaces" /> contiene un espacio de nombres duplicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-117">The <paramref name="knownNamespaces" /> dictionary contains a duplicate namespace.</span>
          </span>
          <span data-ttu-id="55765-118">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-118">-or-</span>
          </span>
          <span data-ttu-id="55765-119">El diccionario <paramref name="knownNamespaces" /> contiene un elemento que tiene una clave <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-119">The <paramref name="knownNamespaces" /> dictionary contains an element that has a <see langword="null" /> key.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddAnnotation">
      <MemberSignature Language="C#" Value="public override void AddAnnotation (System.Windows.Annotations.Annotation newAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddAnnotation(class System.Windows.Annotations.Annotation newAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation(System.Windows.Annotations.Annotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddAnnotation (newAnnotation As Annotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddAnnotation(System::Windows::Annotations::Annotation ^ newAnnotation);" />
      <MemberSignature Language="F#" Value="override this.AddAnnotation : System.Windows.Annotations.Annotation -&gt; unit" Usage="xmlStreamStore.AddAnnotation newAnnotation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newAnnotation" Type="System.Windows.Annotations.Annotation" />
      </Parameters>
      <Docs>
        <param name="newAnnotation">
          <span data-ttu-id="55765-120">Anotación que se va a agregar al almacén.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-120">The annotation to add to the store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55765-121">Agrega un nuevo objeto <see cref="T:System.Windows.Annotations.Annotation" /> al almacén.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-121">Adds a new <see cref="T:System.Windows.Annotations.Annotation" /> to the store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55765-122">Cuando <xref:System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation%2A> se llama, el <xref:System.Windows.Annotations.Annotation.Id%2A> de la <xref:System.Windows.Annotations.Annotation> se comprueba para ver si el <xref:System.Windows.Annotations.Annotation> ya se ha agregado al almacén.</span><span class="sxs-lookup"><span data-stu-id="55765-122">When <xref:System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation%2A> is called, the <xref:System.Windows.Annotations.Annotation.Id%2A> of the <xref:System.Windows.Annotations.Annotation> is checked to see whether the <xref:System.Windows.Annotations.Annotation> already has been added to the store.</span></span>  <span data-ttu-id="55765-123">Si el <xref:System.Windows.Annotations.Annotation> ya se ha agregado y está en el almacén un <xref:System.ArgumentException> se produce el error.</span><span class="sxs-lookup"><span data-stu-id="55765-123">If the <xref:System.Windows.Annotations.Annotation> already has been added and is in the store an <xref:System.ArgumentException> error is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="55765-124">
            <paramref name="newAnnotation" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-124">
              <paramref name="newAnnotation" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="55765-125">Ya existe una <see cref="T:System.Windows.Annotations.Annotation" /> con el mismo <see cref="P:System.Windows.Annotations.Annotation.Id" /> en el almacén.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-125">An <see cref="T:System.Windows.Annotations.Annotation" /> with the same <see cref="P:System.Windows.Annotations.Annotation.Id" /> already is in the store.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="55765-126">No se ha establecido una <see cref="T:System.IO.Stream" /> de E/S para el almacén.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-126">An I/O <see cref="T:System.IO.Stream" /> has not been set for the store.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="55765-127">
            <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> se ha llamado en el almacén.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-127">
              <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation(System.Guid)" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public override bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.Storage.XmlStreamStore.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="System.Windows.Annotations.Storage.XmlStreamStore.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="55765-128">Obtiene o establece un valor que indica si los datos en búferes de anotación se escriben de inmediato en el almacén de datos físico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-128">Gets or sets a value that indicates whether data in annotation buffers is to be written immediately to the physical data store.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="55765-129">
            <see langword="true" /> si los datos en búferes de anotación se escriben de inmediato en el almacén de datos físico para cada operación; en caso contrario, <see langword="false" /> si los datos en búferes de anotación se escriben cuando la aplicación llame explícitamente a <see cref="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-129">
              <see langword="true" /> if data in annotation buffers is to be written immediately to the physical data store for each operation; otherwise, <see langword="false" /> if data in the annotation buffers is to be written when the application explicitly calls <see cref="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush" />
      </Docs>
    </Member>
    <Member MemberName="DeleteAnnotation">
      <MemberSignature Language="C#" Value="public override System.Windows.Annotations.Annotation DeleteAnnotation (Guid annotationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Windows.Annotations.Annotation DeleteAnnotation(valuetype System.Guid annotationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteAnnotation (annotationId As Guid) As Annotation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Windows::Annotations::Annotation ^ DeleteAnnotation(Guid annotationId);" />
      <MemberSignature Language="F#" Value="override this.DeleteAnnotation : Guid -&gt; System.Windows.Annotations.Annotation" Usage="xmlStreamStore.DeleteAnnotation annotationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Annotations.Annotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="annotationId">
          <span data-ttu-id="55765-130">Propiedad <see cref="P:System.Windows.Annotations.Annotation.Id" /> del identificador único global (GUID) de la anotación que se va a eliminar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-130">The globally unique identifier (GUID) <see cref="P:System.Windows.Annotations.Annotation.Id" /> property of the annotation to be deleted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55765-131">Elimina la anotación con el <see cref="P:System.Windows.Annotations.Annotation.Id" /> especificado del almacén.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-131">Deletes the annotation with the specified <see cref="P:System.Windows.Annotations.Annotation.Id" /> from the store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55765-132">Anotación eliminada; en caso contrario, <see langword="null" /> si no se encuentra ninguna anotación con el <paramref name="annotationId" /> especificado en el almacén.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-132">The annotation that was deleted; otherwise, <see langword="null" /> if an annotation with the specified <paramref name="annotationId" /> was not found in the store.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="55765-133">El ejemplo siguiente muestra el uso de la <xref:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation%2A> y <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="55765-133">The following example shows use of the <xref:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation%2A> and <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> methods.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerDelete](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserdelete)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="55765-134">
            <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> se ha llamado en el almacén.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-134">
              <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="55765-135">No se ha establecido una <see cref="T:System.IO.Stream" /> de E/S para el almacén.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-135">An I/O <see cref="T:System.IO.Stream" /> has not been set for the store.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation(System.Windows.Annotations.Annotation)" />
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)" />
        <altmember cref="Overload:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="xmlStreamStore.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="xmlStreamStore.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="55765-136">Fuerza a que cualquier dato de anotación retenido en búferes internos se escriba en el dispositivo de almacenamiento subyacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-136">Forces any annotation data retained in internal buffers to be written to the underlying storage device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="55765-137">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> método cuando se cierra la aplicación la <xref:System.Windows.Annotations.AnnotationService>.</span><span class="sxs-lookup"><span data-stu-id="55765-137">The following example shows how to use the <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> method when the application closes the <xref:System.Windows.Annotations.AnnotationService>.</span></span>  
  
 [!code-csharp[DocViewerAnnotationsXps#StopAnnotations](~/samples/snippets/csharp/VS_Snippets_Wpf/DocViewerAnnotationsXps/CSharp/AnnotationsHelperXps.cs#stopannotations)]
 [!code-vb[DocViewerAnnotationsXps#StopAnnotations](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DocViewerAnnotationsXps/visualbasic/annotationshelperxps.vb#stopannotations)]  
  
 <span data-ttu-id="55765-138">El ejemplo siguiente muestra el uso de la <xref:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation%2A> y <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="55765-138">The following example shows use of the <xref:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation%2A> and <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> methods.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerDelete](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserdelete)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="55765-139">
            <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> se ha llamado en el almacén.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-139">
              <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="55765-140">No se ha establecido una <see cref="T:System.IO.Stream" /> de E/S para el almacén.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-140">An I/O <see cref="T:System.IO.Stream" /> has not been set for the store.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="55765-141">La <see cref="T:System.IO.Stream" /> de E/S del almacén es de sólo lectura y no se puede tener acceso a ella para el resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-141">The store I/O <see cref="T:System.IO.Stream" /> is read-only and cannot be accessed for output.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Annotations.Storage.XmlStreamStore.AutoFlush" />
      </Docs>
    </Member>
    <Member MemberName="GetAnnotation">
      <MemberSignature Language="C#" Value="public override System.Windows.Annotations.Annotation GetAnnotation (Guid annotationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Windows.Annotations.Annotation GetAnnotation(valuetype System.Guid annotationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAnnotation (annotationId As Guid) As Annotation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Windows::Annotations::Annotation ^ GetAnnotation(Guid annotationId);" />
      <MemberSignature Language="F#" Value="override this.GetAnnotation : Guid -&gt; System.Windows.Annotations.Annotation" Usage="xmlStreamStore.GetAnnotation annotationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Annotations.Annotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="annotationId">
          <span data-ttu-id="55765-142">Propiedad <see cref="P:System.Windows.Annotations.Annotation.Id" /> del GUID de la anotación que se va a devolver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-142">The GUID <see cref="P:System.Windows.Annotations.Annotation.Id" /> property of the annotation to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55765-143">Devuelve del almacén la anotación con el <see cref="P:System.Windows.Annotations.Annotation.Id" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-143">Returns the annotation with the specified <see cref="P:System.Windows.Annotations.Annotation.Id" /> from the store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55765-144">Anotación con el <paramref name="annotationId" /> determinado; de lo contrario, <see langword="null" /> si no se encuentra ninguna anotación con el <paramref name="annotationId" /> especificado en el almacén.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-144">The annotation with the given <paramref name="annotationId" />; otherwise, <see langword="null" /> if an annotation with the specified <paramref name="annotationId" /> was not found in the store.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="55765-145">
            <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> se ha llamado en el almacén.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-145">
              <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations" />
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation(System.Guid)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAnnotations">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="55765-146">Devuelve una lista de todas las anotaciones del almacén.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-146">Returns a list of all the annotations in the store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="55765-147">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> método para determinar si hay cualquier anotación contenida en el almacén.</span><span class="sxs-lookup"><span data-stu-id="55765-147">The following example shows how to use the <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> method to determine whether there are any annotations contained in the store.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerCloseFile](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserclosefile)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAnnotations">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt; GetAnnotations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Windows.Annotations.Annotation&gt; GetAnnotations() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAnnotations () As IList(Of Annotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::Windows::Annotations::Annotation ^&gt; ^ GetAnnotations();" />
      <MemberSignature Language="F#" Value="override this.GetAnnotations : unit -&gt; System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt;" Usage="xmlStreamStore.GetAnnotations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="55765-148">Devuelve una lista de todas las anotaciones del almacén.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-148">Returns a list of all the annotations in the store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55765-149">Lista de todas las anotaciones que hay actualmente en el almacén.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-149">The list of all annotations that are currently in the store.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55765-150">El <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> método nunca devuelve `null`; sin embargo, la lista puede estar vacía si el almacén no contiene ninguna anotación.</span><span class="sxs-lookup"><span data-stu-id="55765-150">The <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> method will never return `null`; however the list may be empty if the store contains no annotations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55765-151">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> método para determinar si hay cualquier anotación en el almacén.</span><span class="sxs-lookup"><span data-stu-id="55765-151">The following example shows how to use the <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> method to determine whether there are any annotations in the store.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerCloseFile](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserclosefile)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="55765-152">
            <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> se ha llamado en el almacén.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-152">
              <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)" />
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations(System.Windows.Annotations.ContentLocator)" />
      </Docs>
    </Member>
    <Member MemberName="GetAnnotations">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt; GetAnnotations (System.Windows.Annotations.ContentLocator anchorLocator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Windows.Annotations.Annotation&gt; GetAnnotations(class System.Windows.Annotations.ContentLocator anchorLocator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations(System.Windows.Annotations.ContentLocator)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAnnotations (anchorLocator As ContentLocator) As IList(Of Annotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::Windows::Annotations::Annotation ^&gt; ^ GetAnnotations(System::Windows::Annotations::ContentLocator ^ anchorLocator);" />
      <MemberSignature Language="F#" Value="override this.GetAnnotations : System.Windows.Annotations.ContentLocator -&gt; System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt;" Usage="xmlStreamStore.GetAnnotations anchorLocator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anchorLocator" Type="System.Windows.Annotations.ContentLocator" />
      </Parameters>
      <Docs>
        <param name="anchorLocator">
          <span data-ttu-id="55765-153">Secuencia <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> inicial para la que se devuelven anotaciones que coinciden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-153">The starting <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> sequence to return matching annotations for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55765-154">Devuelve una lista de anotaciones que tienen <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> con localizadores que comienzan con una secuencia <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> que coincide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-154">Returns a list of annotations that have <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> with locators that begin with a matching <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55765-155">Lista de anotaciones que tienen <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> con localizadores que se inician y coinciden con el <paramref name="anchorLocator" /> determinado; en caso contrario, <see langword="null" /> si no se encuentra ninguna anotación que coincida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-155">The list of annotations that have <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> with locators that start and match the given <paramref name="anchorLocator" />; otherwise, <see langword="null" /> if no matching annotations were found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55765-156">Esto <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> método usa internamente el <xref:System.Windows.Annotations.ContentLocator.StartsWith%2A> método de la <xref:System.Windows.Annotations.ContentLocator> class para buscar y hacer coincidir las anotaciones devolver.</span><span class="sxs-lookup"><span data-stu-id="55765-156">This <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> method internally uses the <xref:System.Windows.Annotations.ContentLocator.StartsWith%2A> method of the <xref:System.Windows.Annotations.ContentLocator> class to search and match for the annotations to return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55765-157">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> método para determinar si hay cualquier anotación en el almacén.</span><span class="sxs-lookup"><span data-stu-id="55765-157">The following example shows how to use the <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> method to determine whether there are any annotations in the store.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerCloseFile](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserclosefile)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)" />
        <altmember cref="M:System.Windows.Annotations.ContentLocator.StartsWith(System.Windows.Annotations.ContentLocator)" />
      </Docs>
    </Member>
    <Member MemberName="GetWellKnownCompatibleNamespaces">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Uri&gt; GetWellKnownCompatibleNamespaces (Uri name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Uri&gt; GetWellKnownCompatibleNamespaces(class System.Uri name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetWellKnownCompatibleNamespaces (name As Uri) As IList(Of Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;Uri ^&gt; ^ GetWellKnownCompatibleNamespaces(Uri ^ name);" />
      <MemberSignature Language="F#" Value="static member GetWellKnownCompatibleNamespaces : Uri -&gt; System.Collections.Generic.IList&lt;Uri&gt;" Usage="System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Uri&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="55765-158">Secuencia del URI de inicio para la que se devuelve la lista de espacios de nombres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-158">The starting URI sequence to return the list of namespaces for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55765-159">Devuelve una lista de espacios de nombres que son compatibles como espacio de nombres de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-159">Returns a list of namespaces that are compatible as an input namespace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55765-160">Lista de espacios de nombres compatibles que coinciden con el <paramref name="name" />; de lo contrario, <see langword="null" /> si no se ha encontrado ningún espacio de nombres compatible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-160">A list of compatible namespaces that match <paramref name="name" />; otherwise, <see langword="null" /> if there are no compatible namespaces found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55765-161">El `name` parámetro funciona solo para predefinidos [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)] espacios de nombres.</span><span class="sxs-lookup"><span data-stu-id="55765-161">The `name` parameter works only for predefined [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)] namespaces.</span></span>  <span data-ttu-id="55765-162">Para cualquier otro espacio de nombres dado en el `name` parámetro <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces%2A> devolverá `null`, incluidos los espacios de nombres registrado a través de la `knownNamespaces` parámetro de la <xref:System.Windows.Annotations.Storage.XmlStreamStore.%23ctor%2A> constructor.</span><span class="sxs-lookup"><span data-stu-id="55765-162">For any other namespace given in the `name` parameter <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces%2A> will return `null`, even those namespaces registered through the `knownNamespaces` parameter of the <xref:System.Windows.Annotations.Storage.XmlStreamStore.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="55765-163">Los espacios de nombres predefinidos por el [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)] incluyen lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="55765-163">The namespaces predefined by the [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)] include the following:</span></span>  
  
-   http://schemas.microsoft.com/windows/annotations/2003/11/core  
  
-   http://schemas.microsoft.com/windows/annotations/2003/11/base  
  
-   http://schemas.microsoft.com/winfx/2006/xaml/presentation  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces" />
        <altmember cref="P:System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces" />
      </Docs>
    </Member>
    <Member MemberName="IgnoredNamespaces">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Uri&gt; IgnoredNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Uri&gt; IgnoredNamespaces" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IgnoredNamespaces As IList(Of Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Uri ^&gt; ^ IgnoredNamespaces { System::Collections::Generic::IList&lt;Uri ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IgnoredNamespaces : System.Collections.Generic.IList&lt;Uri&gt;" Usage="System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Uri&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="55765-164">Obtiene una lista de los espacios de nombres que se omitieron cuando se cargó el flujo XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-164">Gets a list of the namespaces that were ignored when the XML stream was loaded.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="55765-165">Lista de los espacios de nombres que se omitieron cuando se cargó el flujo XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-165">The list of the namespaces that were ignored when the XML stream was loaded.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55765-166">El <xref:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces%2A> propiedad nunca devolverá `null`; sin embargo, la lista devuelta puede estar vacía si no se omiten espacios de nombres.</span><span class="sxs-lookup"><span data-stu-id="55765-166">The <xref:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces%2A> property will never return `null`, however the returned list can be empty if no namespaces are ignored.</span></span>  
  
 <span data-ttu-id="55765-167"><xref:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces%2A> Ayuda en la compatibilidad de marcado XML cuando el programa lee el contenido de anotación creado con versiones diferentes de la [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)].</span><span class="sxs-lookup"><span data-stu-id="55765-167"><xref:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces%2A> helps in XML markup compatibility when the program reads annotation content created by different versions of the [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)].</span></span>  <span data-ttu-id="55765-168">Cuando una aplicación anterior no se especifica contenido de la anotación creado con una versión más reciente de la [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)], <xref:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces%2A> devuelve una lista de los espacios de nombres XML para los elementos y atributos no se sabe que el marco de trabajo anterior.</span><span class="sxs-lookup"><span data-stu-id="55765-168">When an older application is given annotation content created using a newer version of the [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)], <xref:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces%2A> returns a list of the XML namespaces for elements and attributes not known to the older framework.</span></span>  <span data-ttu-id="55765-169">Atributos asociados a espacios de nombres más reciente y elementos XML desconocidos se omiten cuando el contenido de la anotación se lee y se puede deserializar en la aplicación anterior.</span><span class="sxs-lookup"><span data-stu-id="55765-169">Unknown XML elements and attributes associated with newer namespaces are ignored when the annotation content is read and deserialized by the older application.</span></span>  <span data-ttu-id="55765-170">Para obtener más información, consulte el *especificación de compatibilidad de marcado XML* disponible en [ http://go.microsoft.com/fwlink/?LinkId=73824 ](http://go.microsoft.com/fwlink/?LinkId=73824).</span><span class="sxs-lookup"><span data-stu-id="55765-170">For more information see the *XML Markup Compatibility Specification* available at [http://go.microsoft.com/fwlink/?LinkId=73824](http://go.microsoft.com/fwlink/?LinkId=73824).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces" />
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="OnStoreContentChanged">
      <MemberSignature Language="C#" Value="protected override void OnStoreContentChanged (System.Windows.Annotations.Storage.StoreContentChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStoreContentChanged(class System.Windows.Annotations.Storage.StoreContentChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStoreContentChanged (e As StoreContentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStoreContentChanged(System::Windows::Annotations::Storage::StoreContentChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnStoreContentChanged : System.Windows.Annotations.Storage.StoreContentChangedEventArgs -&gt; unit" Usage="xmlStreamStore.OnStoreContentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Annotations.Storage.StoreContentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WellKnownNamespaces">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Uri&gt; WellKnownNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;class System.Uri&gt; WellKnownNamespaces" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property WellKnownNamespaces As IList(Of Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::IList&lt;Uri ^&gt; ^ WellKnownNamespaces { System::Collections::Generic::IList&lt;Uri ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WellKnownNamespaces : System.Collections.Generic.IList&lt;Uri&gt;" Usage="System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Uri&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="55765-171">Obtiene una lista de todos los espacios de nombres predefinidos por [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-171">Gets a list of all namespaces that are predefined by the [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)].</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="55765-172">Lista de espacios de nombres predefinidos por [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="55765-172">The list of namespaces that are predefined by the [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)].</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55765-173">Los espacios de nombres predefinidos por el [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)] incluyen lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="55765-173">The namespaces predefined by the [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)] include the following:</span></span>  
  
-   http://schemas.microsoft.com/windows/annotations/2003/11/core  
  
-   http://schemas.microsoft.com/windows/annotations/2003/11/base  
  
-   http://schemas.microsoft.com/winfx/2006/xaml/presentation  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces" />
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces(System.Uri)" />
      </Docs>
    </Member>
  </Members>
</Type>