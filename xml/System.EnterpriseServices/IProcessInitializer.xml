<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IProcessInitializer.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac571de6c95b5ac06ee9ff4c5ad83a05ad3542abd35.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">71de6c95b5ac06ee9ff4c5ad83a05ad3542abd35</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>Supports methods that can be called when a COM component starts up or shuts down.</source>
          <target state="translated">Admite métodos a los que se puede llamar cuando se inicia o cierra un componente COM.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>Implement the <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph> interface methods on serviced components if you want to run initialization or shutdown code when a server process (Dllhost.exe) starts up or shuts down, respectively.</source>
          <target state="translated">Implemente el <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph> métodos de interfaz de componentes con servicio si desea ejecutar la inicialización o el código de cierre cuando un proceso de servidor (Dllhost.exe) se inicia o se cierra, respectivamente.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>COM+ provides <ph id="ph1">`Startup`</ph> and <ph id="ph2">`Shutdown`</ph> events when Dllhost.exe starts and ends.</source>
          <target state="translated">COM + proporciona <ph id="ph1">`Startup`</ph> y <ph id="ph2">`Shutdown`</ph> eventos cuando Dllhost.exe se inicia y finaliza.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>This feature enables any COM+ components that are installed in a COM+ server application (referred to as server components hereafter) to run custom initialization and clean up code.</source>
          <target state="translated">Esta característica permite a cualquier componente de COM + que se instala en una aplicación de servidor COM + (denominada componentes de servidor de ahora en adelante) para ejecutar la inicialización personalizada y limpiar el código.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>An instance of each component that implements the <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph> interface will be created and stored for the duration of the process, and called on the interface methods during startup and shutdown.</source>
          <target state="translated">Una instancia de cada componente que implementa la <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph> interfaz se creará y almacenada para la duración del proceso y llama en los métodos de interfaz durante el inicio y cierre.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>When implemented on a <ph id="ph1">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph>, during registration of the component, the <ph id="ph2">`InitializesServerApplication`</ph> parameter in the <ph id="ph3">`COMAdminCatalogObject`</ph> within the Components collection is set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Cuando se implementa en una <ph id="ph1">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph>, durante el registro del componente, el <ph id="ph2">`InitializesServerApplication`</ph> parámetro en el <ph id="ph3">`COMAdminCatalogObject`</ph> dentro de los componentes de la colección está establecida en <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>Using the <ph id="ph1">`Startup`</ph> and <ph id="ph2">`Shutdown`</ph> events, you can initialize resources, create connections, initialize shared data, and run cleanup code.</source>
          <target state="translated">Mediante el <ph id="ph1">`Startup`</ph> y <ph id="ph2">`Shutdown`</ph> eventos, puede inicializar recursos, crear conexiones, inicializar datos compartidos y ejecuta código de limpieza.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>However, you must not access states that are specific to COM+ because instances of server components have not yet been created.</source>
          <target state="translated">Sin embargo, no debe tener acceso a los Estados que son específicos de COM + porque aún no se han creado instancias de componentes de servidor.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>In addition, the code in the <ph id="ph1">`Startup`</ph> and <ph id="ph2">`Shutdown`</ph> events should return as quickly as possible, because the system waits only 90 seconds for Dllhost.exe to prepare to accept activations after the system starts the process.</source>
          <target state="translated">Además, el código en el <ph id="ph1">`Startup`</ph> y <ph id="ph2">`Shutdown`</ph> eventos deben devolver lo más rápido posible, porque el sistema sólo espera 90 segundos para que Dllhost.exe se prepare para aceptar activaciones después de que el sistema inicia el proceso.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>If Dllhost.exe does not signal that it is ready within 90 seconds, the system ends the process; thus, all initialization processing needs to be completed within this time frame.</source>
          <target state="translated">Si Dllhost.exe no indica que está listo dentro de 90 segundos, el sistema termina el proceso; por lo tanto, todo el proceso de inicialización debe realizarse dentro de este período de tiempo.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>Each server component that participates in initialization must support the <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph> interface.</source>
          <target state="translated">Cada componente de servidor que participa en la inicialización debe ser compatible con la <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph> interfaz.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>On DllHost.exe startup, COM+ creates all server components that requested this service, calls <ph id="ph1">`QueryInterface`</ph> for the <ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph> interface, and calls the <ph id="ph3">&lt;xref:System.EnterpriseServices.IProcessInitializer.Startup%2A&gt;</ph> function.</source>
          <target state="translated">En el inicio de DllHost.exe, COM + crea la todos los componentes de servidor que solicitó este servicio, las llamadas <ph id="ph1">`QueryInterface`</ph> para el <ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph> interfaz y llama el <ph id="ph3">&lt;xref:System.EnterpriseServices.IProcessInitializer.Startup%2A&gt;</ph> función.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>Similarly, when the DllHost.exe process is shut down, it calls the <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A&gt;</ph> function on those previously stored interface pointers.</source>
          <target state="translated">De forma similar, cuando se cierra el proceso DllHost.exe, llama el <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A&gt;</ph> función en las que almacenó previamente punteros de interfaz.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IProcessInitializer.Shutdown">
          <source>Performs shutdown actions.</source>
          <target state="translated">Realiza acciones de cierre.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IProcessInitializer.Shutdown">
          <source>Called when Dllhost.exe is shut down.</source>
          <target state="translated">Se le llama cuando se cierra Dllhost.exe.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IProcessInitializer.Shutdown">
          <source><ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A&gt;</ph> is not called during a failfast or other catastrophic shutdown events.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A&gt;</ph> no se llama durante failfast u otros eventos de apagado grave.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source>In Microsoft Windows XP, a pointer to the <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> interface of the COM component starting up.</source>
          <target state="translated">En Microsoft Windows XP, puntero a la interfaz <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> del componente COM que se inicia.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source>In Microsoft Windows 2000, this argument is always <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">En Microsoft Windows 2000, este argumento siempre es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source>Performs initialization at startup.</source>
          <target state="translated">Realiza la inicialización cuando se inicia.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source>Called when Dllhost.exe is started.</source>
          <target state="translated">Se le llama cuando se inicia Dllhost.exe.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source>The object referenced by <ph id="ph1">`punkProcessControl`</ph> implements an <ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitControl&gt;</ph> interface.</source>
          <target state="translated">El objeto al que hace referencia <ph id="ph1">`punkProcessControl`</ph> implementa un <ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitControl&gt;</ph> interfaz.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source><ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitControl&gt;</ph> supports the single method <ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitControl&gt;</ph> es compatible con el único método <ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source>The initialization code in <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer.Startup%2A&gt;</ph> can call the <ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;</ph>, with the time-out set equal to the number of seconds remaining before the startup of the component times out.</source>
          <target state="translated">El código de inicialización <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer.Startup%2A&gt;</ph> puede llamar a la <ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;</ph>, con el tiempo de espera establecido igual que el número de segundos que quedan antes de iniciar el componente se agote.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>