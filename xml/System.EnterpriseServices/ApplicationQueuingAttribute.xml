<Type Name="ApplicationQueuingAttribute" FullName="System.EnterpriseServices.ApplicationQueuingAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b18cf5d0ffe8399fc88689943329c4e733b2d160" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55341278" /></Metadata><TypeSignature Language="C#" Value="public sealed class ApplicationQueuingAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationQueuingAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.ApplicationQueuingAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ApplicationQueuingAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationQueuingAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ApplicationQueuingAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Habilita el uso de una cola para el ensamblado marcado y permite a la aplicación leer llamadas a métodos desde colas de Message Queue Server. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener una lista de valores de propiedad iniciales de una instancia de <xref:System.EnterpriseServices.ApplicationQueuingAttribute>, consulte el <xref:System.EnterpriseServices.ApplicationQueuingAttribute.%23ctor%2A> constructor.  
  
 Para obtener más información sobre el uso de atributos, vea [atributos](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de la <xref:System.EnterpriseServices.ApplicationQueuingAttribute> tipo.  
  
 [!code-csharp[EnterpriseServicesApplicationQueuingAttribute#0](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/CS/class1.cs#0)]
 [!code-vb[EnterpriseServicesApplicationQueuingAttribute#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/VB/class1.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationQueuingAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ApplicationQueuingAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationQueuingAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.EnterpriseServices.ApplicationQueuingAttribute" /> y habilita el uso de una cola para el ensamblado e inicializa <see cref="P:System.EnterpriseServices.ApplicationQueuingAttribute.Enabled" />, <see cref="P:System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled" /> y <see cref="P:System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La siguiente tabla muestra los valores de propiedad iniciales de una instancia de <xref:System.EnterpriseServices.ApplicationQueuingAttribute>.  
  
|Propiedad.|Valor|  
|--------------|-----------|  
|`Enabled`|`true`|  
|`QueueListenerEnabled`|`false`|  
|`MaxListenerThreads`|zero (0)|  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un nuevo <xref:System.EnterpriseServices.ApplicationQueuingAttribute>.  
  
 [!code-csharp[EnterpriseServicesApplicationQueuingAttribute#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/CS/class1.cs#1)]
 [!code-vb[EnterpriseServicesApplicationQueuingAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ApplicationQueuingAttribute.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.EnterpriseServices.ApplicationQueuingAttribute.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si la capacidad de utilización de una cola está habilitada.</summary>
        <value><see langword="true" /> si está habilitada; en caso contrario, <see langword="false" />. El valor predeterminado establecido por el constructor es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las aplicaciones no pueden utilizar componentes en cola de forma predeterminada. Creación de instancias <xref:System.EnterpriseServices.ApplicationQueuingAttribute> permite que una aplicación usar los componentes en cola; sin embargo, no permite la aplicación realizar escuchas de mensajes en cola de los clientes.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se obtiene y establece el valor de un `ApplicationQueuing` del atributo <xref:System.EnterpriseServices.ApplicationQueuingAttribute.Enabled%2A> propiedad.  
  
 [!code-csharp[EnterpriseServicesApplicationQueuingAttribute#2](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/CS/class1.cs#2)]
 [!code-vb[EnterpriseServicesApplicationQueuingAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxListenerThreads">
      <MemberSignature Language="C#" Value="public int MaxListenerThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxListenerThreads" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxListenerThreads As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxListenerThreads { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxListenerThreads : int with get, set" Usage="System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el número de subprocesos usados para extraer mensajes de la cola y activar el componente correspondiente.</summary>
        <value>Número máximo de subprocesos que se usarán para procesar mensajes que llegan a la cola. El valor predeterminado es cero.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El intervalo válido para esta propiedad es de 0 a 1000. El valor predeterminado es cero. Para una aplicación recién creada, el valor se deriva del algoritmo utilizado para determinar el número predeterminado de subprocesos de agente de escucha: 16 veces el número de CPU en el servidor.  
  
 Para obtener más información, consulte `QcListenerMaxThreads` en [Applications (COM +)](https://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/c0c46592-5282-412d-8f54-67637be8218a.asp).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se obtiene y establece el valor de un `ApplicationQueuing` del atributo <xref:System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads%2A> propiedad.  
  
 [!code-csharp[EnterpriseServicesApplicationQueuingAttribute#4](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/CS/class1.cs#4)]
 [!code-vb[EnterpriseServicesApplicationQueuingAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueListenerEnabled">
      <MemberSignature Language="C#" Value="public bool QueueListenerEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool QueueListenerEnabled" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property QueueListenerEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool QueueListenerEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.QueueListenerEnabled : bool with get, set" Usage="System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si la aplicación aceptará llamadas de componentes en cola desde clientes.</summary>
        <value><see langword="true" /> si la aplicación acepta llamadas de componentes en cola; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se obtiene y establece el valor de un `ApplicationQueuing` del atributo <xref:System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled%2A> propiedad.  
  
 [!code-csharp[EnterpriseServicesApplicationQueuingAttribute#3](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/CS/class1.cs#3)]
 [!code-vb[EnterpriseServicesApplicationQueuingAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>