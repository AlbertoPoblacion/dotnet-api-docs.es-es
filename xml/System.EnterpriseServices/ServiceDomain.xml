<Type Name="ServiceDomain" FullName="System.EnterpriseServices.ServiceDomain">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a5b9fb677db63a2b92f36b41c91ebb70cd4c0c3f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30408169" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ServiceDomain" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceDomain extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.ServiceDomain" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServiceDomain" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceDomain sealed" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Permite que un segmento de código identificado por <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /> y <see cref="M:System.EnterpriseServices.ServiceDomain.Leave" /> se ejecute en su propio contexto y se comporte como si se tratase de un método al que se llama en un objeto creado dentro del contexto. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> y <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> métodos se usan en pares para rodear el código que, a continuación, puede usar los servicios COM +. Código incluido entre las llamadas a <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> y <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> se ejecuta en su propio contexto y se comporta como si fuera un método que se llama en un objeto creado en el contexto. El <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> y <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> se pueden anidar pares. Es el usuario quien debe asegurarse de que están equilibrados pares de llamadas para que todas las llamadas a <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> coincide con una llamada anterior a <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Enter">
      <MemberSignature Language="C#" Value="public static void Enter (System.EnterpriseServices.ServiceConfig cfg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Enter(class System.EnterpriseServices.ServiceConfig cfg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Enter (cfg As ServiceConfig)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Enter(System::EnterpriseServices::ServiceConfig ^ cfg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cfg" Type="System.EnterpriseServices.ServiceConfig" />
      </Parameters>
      <Docs>
        <param name="cfg">
          <see cref="T:System.EnterpriseServices.ServiceConfig" /> que contiene la información de configuración para los servicios que se van a usar en el código delimitado.</param>
        <summary>Crea el contexto especificado por el objeto <see cref="T:System.EnterpriseServices.ServiceConfig" /> y lo inserta en la pila de contexto que se convierte en el contexto actual.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> primero se crea un contexto configurado según lo especificado por el <xref:System.EnterpriseServices.ServiceConfig> objeto que se pasa como el `cfg` parámetro. A continuación, se activan las directivas en los lados del cliente y el servidor como si se hubiera producido una llamada al método. El nuevo contexto, a continuación, se inserta en una pila de contexto y se convierte en el contexto actual. Debido a su diseño eficaz y porque ningún cálculo de referencias de subproceso está implicado, con <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> y <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> implica reduce considerablemente la sobrecarga en comparación con una llamada al método equivalente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          El objeto <see cref="T:System.EnterpriseServices.ServiceConfig" /> no es compatible con la plataforma actual.</exception>
      </Docs>
    </Member>
    <Member MemberName="Leave">
      <MemberSignature Language="C#" Value="public static System.EnterpriseServices.TransactionStatus Leave ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.EnterpriseServices.TransactionStatus Leave() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServiceDomain.Leave" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Leave () As TransactionStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::EnterpriseServices::TransactionStatus Leave();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Desencadena las directivas de servidor y, después, las de cliente, al igual que si se devolviese una llamada a un método. Después, el contexto actual se extrae de la pila de contexto y el contexto que se estaba ejecutando cuando se llamó a <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /> se convierte en el contexto actual.</summary>
        <returns>Uno de los valores de <see cref="T:System.EnterpriseServices.TransactionStatus" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          El objeto <see cref="T:System.EnterpriseServices.ServiceConfig" /> no es compatible con la plataforma actual.</exception>
      </Docs>
    </Member>
  </Members>
</Type>