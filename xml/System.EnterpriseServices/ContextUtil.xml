<Type Name="ContextUtil" FullName="System.EnterpriseServices.ContextUtil">
  <TypeSignature Language="C#" Value="public sealed class ContextUtil" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ContextUtil extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.ContextUtil" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ContextUtil" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextUtil sealed" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="98108-101">Obtiene información acerca del contexto de objetos de COM+.</span><span class="sxs-lookup"><span data-stu-id="98108-101">Obtains information about the COM+ object context.</span></span> <span data-ttu-id="98108-102">Esta clase no puede heredarse.</span><span class="sxs-lookup"><span data-stu-id="98108-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98108-103"><xref:System.EnterpriseServices.ContextUtil> es la clase preferida que se debe utilizar para obtener información de contexto de COM +.</span><span class="sxs-lookup"><span data-stu-id="98108-103"><xref:System.EnterpriseServices.ContextUtil> is the preferred class to use for obtaining COM+ context information.</span></span> <span data-ttu-id="98108-104">Dado que los miembros de esta clase son todos los `static` (`shared` en Visual Basic), no es necesario crear instancias de él antes de usarlos.</span><span class="sxs-lookup"><span data-stu-id="98108-104">Because the members of this class are all `static` (`shared` in Visual Basic), it is not necessary to instantiate it before using them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98108-105">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.EnterpriseServices.ContextUtil> para crear un transaccional <xref:System.EnterpriseServices.ServicedComponent>.</span><span class="sxs-lookup"><span data-stu-id="98108-105">The following code example demonstrates how to use <xref:System.EnterpriseServices.ContextUtil> to create a transactional <xref:System.EnterpriseServices.ServicedComponent>.</span></span>  
  
 [!code-cpp[EnterpriseServices_Transaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CPP/transaction.cpp#1)]
 [!code-csharp[EnterpriseServices_Transaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CS/transaction.cs#1)]
 [!code-vb[EnterpriseServices_Transaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Transaction/VB/transaction.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ActivityId">
      <MemberSignature Language="C#" Value="public static Guid ActivityId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid ActivityId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.ActivityId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ActivityId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid ActivityId { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98108-106">Obtiene un identificador GUID que representa la actividad que contiene el componente.</span><span class="sxs-lookup"><span data-stu-id="98108-106">Gets a GUID representing the activity containing the component.</span></span></summary>
        <value><span data-ttu-id="98108-107">El identificador GUID de una actividad si el contexto actual forma parte de una actividad; en caso contrario, devuelve <see langword="GUID_NULL" />.</span><span class="sxs-lookup"><span data-stu-id="98108-107">The GUID for an activity if the current context is part of an activity; otherwise, <see langword="GUID_NULL" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="98108-108">En el ejemplo de código siguiente se obtiene el valor de un <xref:System.EnterpriseServices.ContextUtil.ActivityId%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="98108-108">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.ActivityId%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#1)]
 [!code-csharp[EnterpriseServicesContextUtil#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#1)]
 [!code-vb[EnterpriseServicesContextUtil#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="98108-109">No hay contexto de COM+ disponible.</span><span class="sxs-lookup"><span data-stu-id="98108-109">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="98108-110">La plataforma no es Windows 2000 o posterior.</span><span class="sxs-lookup"><span data-stu-id="98108-110">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationId">
      <MemberSignature Language="C#" Value="public static Guid ApplicationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid ApplicationId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.ApplicationId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid ApplicationId { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98108-111">Obtiene un identificador GUID para la aplicación actual.</span><span class="sxs-lookup"><span data-stu-id="98108-111">Gets a GUID for the current application.</span></span></summary>
        <value><span data-ttu-id="98108-112">El identificador GUID para la aplicación actual.</span><span class="sxs-lookup"><span data-stu-id="98108-112">The GUID for the current application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="98108-113">En el ejemplo de código siguiente se muestra el uso de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="98108-113">The following code example demonstrates the use of this property.</span></span>  
  
 [!code-cpp[EnterpriseServices_Pooling#3](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CPP/inspector.cpp#3)]
 [!code-csharp[EnterpriseServices_Pooling#3](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CS/inspector.cs#3)]
 [!code-vb[EnterpriseServices_Pooling#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Pooling/VB/inspector.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="98108-114">No hay contexto de COM+ disponible.</span><span class="sxs-lookup"><span data-stu-id="98108-114">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="98108-115">La plataforma no es Windows XP o una versión posterior.</span><span class="sxs-lookup"><span data-stu-id="98108-115">The platform is not Windows XP or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationInstanceId">
      <MemberSignature Language="C#" Value="public static Guid ApplicationInstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid ApplicationInstanceId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.ApplicationInstanceId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationInstanceId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid ApplicationInstanceId { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98108-116">Obtiene un identificador GUID para la instancia de aplicación actual.</span><span class="sxs-lookup"><span data-stu-id="98108-116">Gets a GUID for the current application instance.</span></span></summary>
        <value><span data-ttu-id="98108-117">El identificador GUID para la instancia de aplicación actual.</span><span class="sxs-lookup"><span data-stu-id="98108-117">The GUID for the current application instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="98108-118">En el ejemplo de código siguiente se obtiene el valor de un <xref:System.EnterpriseServices.ContextUtil.ApplicationInstanceId%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="98108-118">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.ApplicationInstanceId%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#2](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#2)]
 [!code-csharp[EnterpriseServicesContextUtil#2](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#2)]
 [!code-vb[EnterpriseServicesContextUtil#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="98108-119">No hay contexto de COM+ disponible.</span><span class="sxs-lookup"><span data-stu-id="98108-119">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="98108-120">La plataforma no es Windows XP o una versión posterior.</span><span class="sxs-lookup"><span data-stu-id="98108-120">The platform is not Windows XP or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContextId">
      <MemberSignature Language="C#" Value="public static Guid ContextId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid ContextId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.ContextId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ContextId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid ContextId { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98108-121">Obtiene un identificador GUID para el contexto actual.</span><span class="sxs-lookup"><span data-stu-id="98108-121">Gets a GUID for the current context.</span></span></summary>
        <value><span data-ttu-id="98108-122">El identificador GUID para el contexto actual.</span><span class="sxs-lookup"><span data-stu-id="98108-122">The GUID for the current context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="98108-123">Ejemplo de código siguiente muestra el uso de este atributo.</span><span class="sxs-lookup"><span data-stu-id="98108-123">The following example code demonstrates the use of this attribute.</span></span>  
  
 [!code-cpp[EnterpriseServices_Pooling#3](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CPP/inspector.cpp#3)]
 [!code-csharp[EnterpriseServices_Pooling#3](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CS/inspector.cs#3)]
 [!code-vb[EnterpriseServices_Pooling#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Pooling/VB/inspector.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="98108-124">No hay contexto de COM+ disponible.</span><span class="sxs-lookup"><span data-stu-id="98108-124">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="98108-125">La plataforma no es Windows 2000 o posterior.</span><span class="sxs-lookup"><span data-stu-id="98108-125">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeactivateOnReturn">
      <MemberSignature Language="C#" Value="public static bool DeactivateOnReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool DeactivateOnReturn" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.DeactivateOnReturn" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DeactivateOnReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool DeactivateOnReturn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98108-126">Obtiene o establece el bit <see langword="done" /> en el contexto de COM+.</span><span class="sxs-lookup"><span data-stu-id="98108-126">Gets or sets the <see langword="done" /> bit in the COM+ context.</span></span></summary>
        <value>
          <span data-ttu-id="98108-127">Es <see langword="true" /> si el objeto debe desactivarse cuando el método devuelva el control; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="98108-127"><see langword="true" /> if the object is to be deactivated when the method returns; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="98108-128">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="98108-128">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98108-129">COM + `done` bit determina cuánto tiempo permanece activo el objeto después de finalizar su trabajo y puede afectar a la duración de una transacción.</span><span class="sxs-lookup"><span data-stu-id="98108-129">The COM+ `done` bit determines how long the object remains active after finishing its work and can affect the duration of a transaction.</span></span> <span data-ttu-id="98108-130">Cuando se devuelve una llamada al método, COM + examina el `done` bits.</span><span class="sxs-lookup"><span data-stu-id="98108-130">When a method call returns, COM+ inspects the `done` bit.</span></span> <span data-ttu-id="98108-131">Si el `done` bit es `true`, COM + desactiva el objeto.</span><span class="sxs-lookup"><span data-stu-id="98108-131">If the `done` bit is `true`, COM+ deactivates the object.</span></span> <span data-ttu-id="98108-132">Si el `done` bit es `false`, el objeto no se desactiva.</span><span class="sxs-lookup"><span data-stu-id="98108-132">If the `done` bit is `false`, the object is not deactivated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98108-133">En el ejemplo de código siguiente se muestra el uso de la <xref:System.EnterpriseServices.ContextUtil.DeactivateOnReturn%2A> propiedad para asegurarse de que un <xref:System.EnterpriseServices.ServicedComponent> se desactiva después de una llamada al método.</span><span class="sxs-lookup"><span data-stu-id="98108-133">The following code example demonstrates the use of the <xref:System.EnterpriseServices.ContextUtil.DeactivateOnReturn%2A> property to ensure that a <xref:System.EnterpriseServices.ServicedComponent> is deactivated after a method call.</span></span>  
  
 [!code-cpp[EnterpriseServices_Transaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CPP/transaction.cpp#1)]
 [!code-csharp[EnterpriseServices_Transaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CS/transaction.cs#1)]
 [!code-vb[EnterpriseServices_Transaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Transaction/VB/transaction.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="98108-134">No hay contexto de COM+ disponible.</span><span class="sxs-lookup"><span data-stu-id="98108-134">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="98108-135">La plataforma no es Windows 2000 o posterior.</span><span class="sxs-lookup"><span data-stu-id="98108-135">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DisableCommit">
      <MemberSignature Language="C#" Value="public static void DisableCommit ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisableCommit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.DisableCommit" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DisableCommit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DisableCommit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98108-136">Asigna a los bits <see langword="consistent" /> y <see langword="done" /> el valor <see langword="false" /> en el contexto de COM+.</span><span class="sxs-lookup"><span data-stu-id="98108-136">Sets both the <see langword="consistent" /> bit and the <see langword="done" /> bit to <see langword="false" /> in the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98108-137">Si se le solicita, el contexto de COM + vota anular la transacción actual, pero el objeto no se desactiva en el valor devuelto del método.</span><span class="sxs-lookup"><span data-stu-id="98108-137">If asked, the COM+ context votes to abort the current transaction, but the object is not deactivated on method return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98108-138">El siguiente ejemplo de código llama el <xref:System.EnterpriseServices.ContextUtil.DisableCommit%2A> método.</span><span class="sxs-lookup"><span data-stu-id="98108-138">The following code example calls the <xref:System.EnterpriseServices.ContextUtil.DisableCommit%2A> method.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#3](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#3)]
 [!code-csharp[EnterpriseServicesContextUtil#3](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#3)]
 [!code-vb[EnterpriseServicesContextUtil#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="98108-139">No hay contexto de COM+ disponible.</span><span class="sxs-lookup"><span data-stu-id="98108-139">No COM+ context is available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnableCommit">
      <MemberSignature Language="C#" Value="public static void EnableCommit ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableCommit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.EnableCommit" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableCommit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableCommit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98108-140">Asigna al bit <see langword="consistent" /> el valor <see langword="true" />, y al bit <see langword="done" /> el valor <see langword="false" />, en el contexto de COM+.</span><span class="sxs-lookup"><span data-stu-id="98108-140">Sets the <see langword="consistent" /> bit to <see langword="true" /> and the <see langword="done" /> bit to <see langword="false" /> in the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98108-141">Si se le solicita, el contexto de COM + confirmará la transacción actual, pero el objeto no se desactiva en el valor devuelto del método.</span><span class="sxs-lookup"><span data-stu-id="98108-141">If asked, the COM+ context will commit the current transaction, but the object is not deactivated on method return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98108-142">El siguiente ejemplo de código llama el <xref:System.EnterpriseServices.ContextUtil.EnableCommit%2A> método.</span><span class="sxs-lookup"><span data-stu-id="98108-142">The following code example calls the <xref:System.EnterpriseServices.ContextUtil.EnableCommit%2A> method.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#4](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#4)]
 [!code-csharp[EnterpriseServicesContextUtil#4](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#4)]
 [!code-vb[EnterpriseServicesContextUtil#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="98108-143">No hay contexto de COM+ disponible.</span><span class="sxs-lookup"><span data-stu-id="98108-143">No COM+ context is available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNamedProperty">
      <MemberSignature Language="C#" Value="public static object GetNamedProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetNamedProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.GetNamedProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNamedProperty (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetNamedProperty(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="98108-144">Nombre de la propiedad solicitada.</span><span class="sxs-lookup"><span data-stu-id="98108-144">The name of the requested property.</span></span></param>
        <summary><span data-ttu-id="98108-145">Devuelve una propiedad con nombre desde el contexto COM+.</span><span class="sxs-lookup"><span data-stu-id="98108-145">Returns a named property from the COM+ context.</span></span></summary>
        <returns><span data-ttu-id="98108-146">Propiedad con nombre para el contexto.</span><span class="sxs-lookup"><span data-stu-id="98108-146">The named property for the context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98108-147">Esto es útil para obtener los objetos intrínsecos de Internet Information Services (IIS) proporcionados por páginas Active Server (ASP).</span><span class="sxs-lookup"><span data-stu-id="98108-147">This is useful for obtaining the Internet Information Services (IIS) intrinsic objects provided by Active Server Pages (ASP).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="98108-148">No hay contexto de COM+ disponible.</span><span class="sxs-lookup"><span data-stu-id="98108-148">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="98108-149">La plataforma no es Windows 2000 o posterior.</span><span class="sxs-lookup"><span data-stu-id="98108-149">The platform is not Windows 2000 or later.</span></span></exception>
        <altmember cref="M:System.EnterpriseServices.ContextUtil.SetNamedProperty(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsCallerInRole">
      <MemberSignature Language="C#" Value="public static bool IsCallerInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsCallerInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.IsCallerInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsCallerInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsCallerInRole(System::String ^ role);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role"><span data-ttu-id="98108-150">Nombre del rol que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="98108-150">The name of the role to check.</span></span></param>
        <summary><span data-ttu-id="98108-151">Determina si el llamador se incluye en el rol especificado.</span><span class="sxs-lookup"><span data-stu-id="98108-151">Determines whether the caller is in the specified role.</span></span></summary>
        <returns>
          <span data-ttu-id="98108-152"><see langword="true" /> si el llamador se incluye en el rol específico; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="98108-152"><see langword="true" /> if the caller is in the specified role; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="98108-153">No hay contexto de COM+ disponible.</span><span class="sxs-lookup"><span data-stu-id="98108-153">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultContext">
      <MemberSignature Language="C#" Value="public static bool IsDefaultContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefaultContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.IsDefaultContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefaultContext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefaultContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98108-154">Determina si el componente con servicio está activo en el contexto predeterminado.</span><span class="sxs-lookup"><span data-stu-id="98108-154">Determines whether the serviced component is activated in the default context.</span></span> <span data-ttu-id="98108-155">Los componentes con servicio que no tienen información de catálogo de COM+ están activos en el contexto predeterminado.</span><span class="sxs-lookup"><span data-stu-id="98108-155">Serviced components that do not have COM+ catalog information are activated in the default context.</span></span></summary>
        <returns><span data-ttu-id="98108-156">Es **true** si el componente con servicio está activo en el contexto predeterminado; en caso contrario, es **false**.</span><span class="sxs-lookup"><span data-stu-id="98108-156">**true** if the serviced component is activated in the default context; otherwise, **false**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInTransaction">
      <MemberSignature Language="C#" Value="public static bool IsInTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsInTransaction" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.IsInTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsInTransaction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsInTransaction { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98108-157">Obtiene un valor que indica si el contexto actual es transaccional.</span><span class="sxs-lookup"><span data-stu-id="98108-157">Gets a value that indicates whether the current context is transactional.</span></span></summary>
        <value>
          <span data-ttu-id="98108-158"><see langword="true" /> si el contexto actual es transaccional; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="98108-158"><see langword="true" /> if the current context is transactional; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="98108-159">En el ejemplo de código siguiente se obtiene el valor de un <xref:System.EnterpriseServices.ContextUtil.IsInTransaction%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="98108-159">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.IsInTransaction%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#5](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#5)]
 [!code-csharp[EnterpriseServicesContextUtil#5](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#5)]
 [!code-vb[EnterpriseServicesContextUtil#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="98108-160">No hay contexto de COM+ disponible.</span><span class="sxs-lookup"><span data-stu-id="98108-160">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSecurityEnabled">
      <MemberSignature Language="C#" Value="public static bool IsSecurityEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsSecurityEnabled" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.IsSecurityEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsSecurityEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsSecurityEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98108-161">Obtiene un valor que indica si la seguridad basada en roles está activa en el contexto actual.</span><span class="sxs-lookup"><span data-stu-id="98108-161">Gets a value that indicates whether role-based security is active in the current context.</span></span></summary>
        <value>
          <span data-ttu-id="98108-162">Es <see langword="true" /> si el contexto actual tiene la seguridad habilitada; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="98108-162"><see langword="true" /> if the current context has security enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="98108-163">En el ejemplo de código siguiente se obtiene el valor de un <xref:System.EnterpriseServices.ContextUtil.IsSecurityEnabled%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="98108-163">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.IsSecurityEnabled%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#6](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#6)]
 [!code-csharp[EnterpriseServicesContextUtil#6](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#6)]
 [!code-vb[EnterpriseServicesContextUtil#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="98108-164">No hay contexto de COM+ disponible.</span><span class="sxs-lookup"><span data-stu-id="98108-164">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MyTransactionVote">
      <MemberSignature Language="C#" Value="public static System.EnterpriseServices.TransactionVote MyTransactionVote { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.EnterpriseServices.TransactionVote MyTransactionVote" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.MyTransactionVote" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property MyTransactionVote As TransactionVote" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::EnterpriseServices::TransactionVote MyTransactionVote { System::EnterpriseServices::TransactionVote get(); void set(System::EnterpriseServices::TransactionVote value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionVote</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98108-165">Obtiene o establece el bit <see langword="consistent" /> en el contexto de COM+.</span><span class="sxs-lookup"><span data-stu-id="98108-165">Gets or sets the <see langword="consistent" /> bit in the COM+ context.</span></span></summary>
        <value><span data-ttu-id="98108-166">Uno de los valores de <see cref="T:System.EnterpriseServices.TransactionVote" />, bien sea <see langword="Commit" /> o <see langword="Abort" />.</span><span class="sxs-lookup"><span data-stu-id="98108-166">One of the <see cref="T:System.EnterpriseServices.TransactionVote" /> values, either <see langword="Commit" /> or <see langword="Abort" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98108-167">Cuando <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> está establecido en `Commit`, COM + `consistent` bit se establece en `true` y el contexto de COM + aprueba confirmar la transacción.</span><span class="sxs-lookup"><span data-stu-id="98108-167">When <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> is set to `Commit`, the COM+ `consistent` bit is set to `true` and the COM+ context votes to commit the transaction.</span></span> <span data-ttu-id="98108-168">Si <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> está establecido en `Abort`, `consistent` bit se establece en `false` y el contexto de COM + vota anular la transacción.</span><span class="sxs-lookup"><span data-stu-id="98108-168">If <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> is set to `Abort`, the `consistent` bit is set to `false` and the COM+ context votes to abort the transaction.</span></span> <span data-ttu-id="98108-169">El valor predeterminado de la `consistent` bit es `true`.</span><span class="sxs-lookup"><span data-stu-id="98108-169">The default value of the `consistent` bit is `true`.</span></span>  
  
 <span data-ttu-id="98108-170">El `consistent` bits emite una aprobación para confirmar o anular la transacción en el que se ejecuta, y la `done` bits finaliza el voto.</span><span class="sxs-lookup"><span data-stu-id="98108-170">The `consistent` bit casts a vote to commit or abort the transaction in which it executes, and the `done` bit finalizes the vote.</span></span> <span data-ttu-id="98108-171">COM + examina el `consistent` bits cuando el `done` bit se establece en `true` la llamada al método devuelto o cuando se desactiva el objeto.</span><span class="sxs-lookup"><span data-stu-id="98108-171">COM+ inspects the `consistent` bit when the `done` bit is set to `true` on a method call return or when the object deactivates.</span></span> <span data-ttu-id="98108-172">Aunque un objeto `consistent` bits solo pueden cambiar varias veces dentro de cada llamada al método, el último cambio recuentos.</span><span class="sxs-lookup"><span data-stu-id="98108-172">Although an object's `consistent` bit can change repeatedly within each method call, only the last change counts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98108-173">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> propiedad que se va a crear un transaccional <xref:System.EnterpriseServices.ServicedComponent>.</span><span class="sxs-lookup"><span data-stu-id="98108-173">The following code example demonstrates how to use <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> property to create a transactional <xref:System.EnterpriseServices.ServicedComponent>.</span></span>  
  
 [!code-cpp[EnterpriseServices_Transaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CPP/transaction.cpp#1)]
 [!code-csharp[EnterpriseServices_Transaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CS/transaction.cs#1)]
 [!code-vb[EnterpriseServices_Transaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Transaction/VB/transaction.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="98108-174">No hay contexto de COM+ disponible.</span><span class="sxs-lookup"><span data-stu-id="98108-174">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="98108-175">La plataforma no es Windows 2000 o posterior.</span><span class="sxs-lookup"><span data-stu-id="98108-175">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PartitionId">
      <MemberSignature Language="C#" Value="public static Guid PartitionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid PartitionId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.PartitionId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PartitionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid PartitionId { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98108-176">Obtiene un identificador GUID para la partición actual.</span><span class="sxs-lookup"><span data-stu-id="98108-176">Gets a GUID for the current partition.</span></span></summary>
        <value><span data-ttu-id="98108-177">GUID para la partición actual.</span><span class="sxs-lookup"><span data-stu-id="98108-177">The GUID for the current partition.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="98108-178">No hay contexto de COM+ disponible.</span><span class="sxs-lookup"><span data-stu-id="98108-178">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="98108-179">La plataforma no es Windows XP o una versión posterior.</span><span class="sxs-lookup"><span data-stu-id="98108-179">The platform is not Windows XP or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAbort">
      <MemberSignature Language="C#" Value="public static void SetAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.SetAbort" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAbort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAbort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98108-180">Asigna al bit <see langword="consistent" /> el valor <see langword="false" />, y al bit <see langword="done" /> el valor <see langword="true" />, en el contexto de COM+.</span><span class="sxs-lookup"><span data-stu-id="98108-180">Sets the <see langword="consistent" /> bit to <see langword="false" /> and the <see langword="done" /> bit to <see langword="true" /> in the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98108-181">Si se le solicita, el contexto de los votos se anule la transacción actual y el objeto se desactiva en el valor devuelto del método.</span><span class="sxs-lookup"><span data-stu-id="98108-181">If asked, the context votes to abort the current transaction, and the object is deactivated on method return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98108-182">En el ejemplo de código siguiente se muestra el uso de este método.</span><span class="sxs-lookup"><span data-stu-id="98108-182">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#13](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#13)]
 [!code-csharp[EnterpriseServices_Crm#13](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#13)]
 [!code-vb[EnterpriseServices_Crm#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="98108-183">No hay contexto de COM+ disponible.</span><span class="sxs-lookup"><span data-stu-id="98108-183">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetComplete">
      <MemberSignature Language="C#" Value="public static void SetComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.SetComplete" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetComplete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetComplete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98108-184">Asigna a los bits <see langword="consistent" /> y <see langword="done" /> el valor <see langword="true" /> en el contexto de COM+.</span><span class="sxs-lookup"><span data-stu-id="98108-184">Sets the <see langword="consistent" /> bit and the <see langword="done" /> bit to <see langword="true" /> in the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98108-185">Si se le solicita, el contexto de COM + confirmará la transacción actual y el objeto se desactiva en el valor devuelto del método.</span><span class="sxs-lookup"><span data-stu-id="98108-185">If asked, the COM+ context will commit the current transaction, and the object is deactivated on method return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98108-186">En el ejemplo de código siguiente se muestra el uso de este método.</span><span class="sxs-lookup"><span data-stu-id="98108-186">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#13](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#13)]
 [!code-csharp[EnterpriseServices_Crm#13](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#13)]
 [!code-vb[EnterpriseServices_Crm#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="98108-187">No hay contexto de COM+ disponible.</span><span class="sxs-lookup"><span data-stu-id="98108-187">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetNamedProperty">
      <MemberSignature Language="C#" Value="public static void SetNamedProperty (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetNamedProperty(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.SetNamedProperty(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetNamedProperty (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetNamedProperty(System::String ^ name, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="98108-188">Nombre de la propiedad que se va a establecer.</span><span class="sxs-lookup"><span data-stu-id="98108-188">The name of the property to set.</span></span></param>
        <param name="value"><span data-ttu-id="98108-189">Objeto que representa el valor de la propiedad que se va a establecer.</span><span class="sxs-lookup"><span data-stu-id="98108-189">Object that represents the property value to set.</span></span></param>
        <summary><span data-ttu-id="98108-190">Establece la propiedad con nombre para el contexto de COM+.</span><span class="sxs-lookup"><span data-stu-id="98108-190">Sets the named property for the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98108-191">Esto es útil para obtener los objetos intrínsecos de Internet Information Services (IIS) proporcionados por páginas Active Server (ASP).</span><span class="sxs-lookup"><span data-stu-id="98108-191">This is useful for obtaining the Internet Information Services (IIS) intrinsic objects provided by Active Server Pages (ASP).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="98108-192">No hay contexto de COM+ disponible.</span><span class="sxs-lookup"><span data-stu-id="98108-192">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="98108-193">La plataforma no es Windows 2000 o posterior.</span><span class="sxs-lookup"><span data-stu-id="98108-193">The platform is not Windows 2000 or later.</span></span></exception>
        <altmember cref="M:System.EnterpriseServices.ContextUtil.GetNamedProperty(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SystemTransaction">
      <MemberSignature Language="C#" Value="public static System.Transactions.Transaction SystemTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Transactions.Transaction SystemTransaction" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.SystemTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SystemTransaction As Transaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Transactions::Transaction ^ SystemTransaction { System::Transactions::Transaction ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Transactions.Transaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98108-194">Obtiene el contexto de transacción actual.</span><span class="sxs-lookup"><span data-stu-id="98108-194">Gets the current transaction context.</span></span></summary>
        <value><span data-ttu-id="98108-195">Un valor de <see cref="T:System.Transactions.Transaction" /> que representa el contexto de transacción actual.</span><span class="sxs-lookup"><span data-stu-id="98108-195">A <see cref="T:System.Transactions.Transaction" /> that represents the current transaction context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98108-196">Si no existe ningún contexto de transacción cuando se tiene acceso a esta propiedad, se crea un nuevo contexto de transacción y se devuelve.</span><span class="sxs-lookup"><span data-stu-id="98108-196">If no transaction context exists when this property is accessed, a new transaction context is created and returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="98108-197">No hay contexto de COM+ disponible.</span><span class="sxs-lookup"><span data-stu-id="98108-197">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="98108-198">La plataforma no es Windows 2000 o posterior.</span><span class="sxs-lookup"><span data-stu-id="98108-198">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public static object Transaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property object Transaction" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Transaction As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Object ^ Transaction { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98108-199">Obtiene un objeto que describe la transacción de DTC (Coordinador de transacciones distribuidas) actual de COM+.</span><span class="sxs-lookup"><span data-stu-id="98108-199">Gets an object describing the current COM+ DTC transaction.</span></span></summary>
        <value><span data-ttu-id="98108-200">Un objeto que representa la transacción actual.</span><span class="sxs-lookup"><span data-stu-id="98108-200">An object that represents the current transaction.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98108-201">El objeto devuelto es compatible con la <xref:System.EnterpriseServices.ITransaction> interfaz si la transacción es una transacción de DTC de COM +.</span><span class="sxs-lookup"><span data-stu-id="98108-201">The returned object supports the <xref:System.EnterpriseServices.ITransaction> interface if the transaction is a COM+ DTC transaction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="98108-202">No hay contexto de COM+ disponible.</span><span class="sxs-lookup"><span data-stu-id="98108-202">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="98108-203">La plataforma no es Windows 2000 o posterior.</span><span class="sxs-lookup"><span data-stu-id="98108-203">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionId">
      <MemberSignature Language="C#" Value="public static Guid TransactionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid TransactionId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.TransactionId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TransactionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid TransactionId { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98108-204">Obtiene el identificador GUID de la transacción de DTC (Coordinador de transacciones distribuidas) actual de COM+.</span><span class="sxs-lookup"><span data-stu-id="98108-204">Gets the GUID of the current COM+ DTC transaction.</span></span></summary>
        <value><span data-ttu-id="98108-205">GUID que representa la transacción de DTC (Coordinador de transacciones distribuidas) de COM+ actual, si existe.</span><span class="sxs-lookup"><span data-stu-id="98108-205">A GUID representing the current COM+ DTC transaction, if one exists.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="98108-206">En el ejemplo de código siguiente se obtiene el valor de un <xref:System.EnterpriseServices.ContextUtil.TransactionId%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="98108-206">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.TransactionId%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#7](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#7)]
 [!code-csharp[EnterpriseServicesContextUtil#7](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#7)]
 [!code-vb[EnterpriseServicesContextUtil#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="98108-207">No hay contexto de COM+ disponible.</span><span class="sxs-lookup"><span data-stu-id="98108-207">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="98108-208">La plataforma no es Windows 2000 o posterior.</span><span class="sxs-lookup"><span data-stu-id="98108-208">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>