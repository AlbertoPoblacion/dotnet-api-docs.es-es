<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IPlaybackControl.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac554fcf7590327e9d2356fc883bfae633d190f6a78.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">54fcf7590327e9d2356fc883bfae633d190f6a78</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>Functions in Queued Components in the abnormal handling of server-side playback errors and client-side failures of the Message Queuing delivery mechanism.</source>
          <target state="translated">Funciona en los Componentes en cola en el control anómalo de errores de reproducción del servidor y errores del mecanismo de entrega de Message Queuing del cliente.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>The exception class defined for the component in the COM+ catalog implements both <ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl&gt;</ph> and the interface for the original class.</source>
          <target state="translated">La clase de excepción definida para el componente en el catálogo COM + implementa tanto <ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl&gt;</ph> y la interfaz de la clase original.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>The method implementations of the original class interface are used to perform the exception handling for the failed methods in the class itself.</source>
          <target state="translated">Las implementaciones de método de la interfaz de clase original se utilizan para realizar el control de excepciones de los métodos que generan errores en la propia clase.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>They will be called after <ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A&gt;</ph> to process exceptions for the method originally called.</source>
          <target state="translated">Se llamará después <ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A&gt;</ph> para procesar las excepciones del método llamado originalmente.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>The Queued Components Player calls the methods of <ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl&gt;</ph> to inform the exception-handler object that a message is about to be placed on the final resting or dead letter queue.</source>
          <target state="translated">El Reproductor de componentes en cola llama a los métodos de <ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl&gt;</ph> para informar al objeto de controlador de excepciones que un mensaje se va a colocarse en la cola de mensajes no enviados.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>The Queued Components Player then calls the same method in the exception-handler object that had failed in the original method call.</source>
          <target state="translated">El Reproductor de componentes en cola, a continuación, llama al mismo método en el objeto de controlador de excepciones que generó el error en la llamada al método original.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>The exception-handler object can implement an alternative, for example, by gathering problem diagnosis information or generating an object or message that informs the client of the problem.</source>
          <target state="translated">El objeto de controlador de excepciones puede implementar una alternativa, por ejemplo, recopilar información de diagnóstico o generar un objeto o un mensaje que informa al cliente del problema.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>If the application does not implement <ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl&gt;</ph>, the poison message is placed on the final resting or dead letter queue when the Queued Components Player exhausts all retries.</source>
          <target state="translated">Si la aplicación no implementa <ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl&gt;</ph>, el mensaje dudoso se coloca en la cola de mensajes no enviados cuando el Reproductor de componentes en cola agota todos los reintentos.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>A poison message is a message that cannot be processed for some reason, perhaps because of a problem with the server or queuing system.</source>
          <target state="translated">Un mensaje dudoso es un mensaje que no se puede procesar por alguna razón, quizás debido a un problema con el servidor o el sistema de cola.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>The transaction is rolled back, and the poison message goes to the top of the queue.</source>
          <target state="translated">Se revierte la transacción, y el mensaje dudoso llega a la parte superior de la cola.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>When the message is dequeued again, the same condition occurs.</source>
          <target state="translated">Cuando el mensaje se quita de la cola de nuevo, se produce la misma condición.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>This message can continue looping indefinitely until something is done to correct the problem.</source>
          <target state="translated">Este mensaje puede continuar indefinidamente hasta que algo se realiza para corregir el problema.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>The Queued Components service handles the poison message by using a series of retries.</source>
          <target state="translated">El servicio de componentes en cola controla el mensaje dudoso mediante una serie de reintentos.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>After several unsuccessful retries, the message is moved to a final resting queue.</source>
          <target state="translated">Después de varios reintentos sin éxito, el mensaje se mueve a una cola definitiva de almacenamiento.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>Poison messages remain in the resting queue until manually moved by using the Queued Components Message Mover tool.</source>
          <target state="translated">Los mensajes dudosos permanecen en la cola definitiva de almacenamiento hasta que mueva manualmente mediante la herramienta Mover mensajes de componentes en cola.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>The poison message situation can also be resolved programmatically, using the <ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A&gt;</ph> method, which informs the server-side component author that all attempts to play back the deferred activation have failed.</source>
          <target state="translated">La situación de los mensajes dudosos también se puede resolver mediante programación, utilizando la <ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A&gt;</ph> método, que informa al autor del componente de servidor que todos los intentos de volver a reproducir la activación aplazada han fallado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>If you discover a poison message, you might be able to solve the underlying cause of the problem quickly.</source>
          <target state="translated">Si detecta un mensaje dudoso, es posible que pueda resolver la causa subyacente del problema con rapidez.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>For example, if the server was offline for some reason, you can bring the server back online.</source>
          <target state="translated">Por ejemplo, si el servidor estaba desconectado por alguna razón, puede poner el servidor en línea.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>If you cannot solve the problem quickly, you can automatically generate another transaction that notifies the requestor that the transaction did not occur.</source>
          <target state="translated">Si no puede resolver el problema rápidamente, puede generar automáticamente otra transacción que se notificará al solicitante que no se producía la transacción.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>The requestor can then make a compensating transaction that reverses the effect of a transaction that has already committed.</source>
          <target state="translated">El solicitante puede hacer que una transacción de compensación que invierte el efecto de una transacción que ya se ha confirmado.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IPlaybackControl.FinalClientRetry">
          <source>Informs the client-side exception-handling component that all Message Queuing attempts to deliver the message to the server were rejected, and the message ended up on the client-side Xact Dead Letter queue.</source>
          <target state="translated">Informa al componente controlador de excepciones del cliente de que todos los intentos de Message Queuing por entregar el mensaje al servidor se han rechazado y el mensaje ha terminado en la cola de mensajes no enviados Xact del cliente.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IPlaybackControl.FinalClientRetry">
          <source>As messages arrive in the Xact Dead Letter queue, COM+ attempts to invoke a client-side exception handler related to the server class to deliver this notification.</source>
          <target state="translated">A medida que llegan los mensajes en la cola de mensajes no enviados Xact, COM + intenta invocar un controlador de excepción del cliente asociado a la clase de servidor para enviar esta notificación.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IPlaybackControl.FinalClientRetry">
          <source>It does so by first calling <ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A&gt;</ph>, then calling the exception-handling version of the failed method in the exception-handler object.</source>
          <target state="translated">Para ello, llame a <ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A&gt;</ph>, a continuación, llamar a la versión de control de excepciones del método produce un error en el objeto de controlador de excepciones.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IPlaybackControl.FinalClientRetry">
          <source>This exception method can then take an exception action, such as recording the failure, sending a mail message to the administrator, or taking client-side compensating action (reversing the effect of an earlier transaction).</source>
          <target state="translated">Este método de excepciones, a continuación, puede realizar una acción de excepción, como registrar el error, enviar un mensaje de correo electrónico al administrador o realizar la acción de compensación del lado cliente (invertir el efecto de una transacción anterior).</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IPlaybackControl.FinalClientRetry">
          <source>If the exception method is not successful, the message is left on the Xact Dead Letter queue.</source>
          <target state="translated">Si el método de excepción no se realiza correctamente, el mensaje permanece en la cola de mensajes no enviados Xact.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IPlaybackControl.FinalClientRetry">
          <source>The Xact Dead Letter queue can be viewed in the Microsoft Message Queue (MSMQ) Explorer.</source>
          <target state="translated">La cola de mensajes no enviados Xact puede verse en el Explorador de Microsoft Message Queue (MSMQ).</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry">
          <source>Informs the server-side exception class implementation that all attempts to play back the deferred activation to the server have failed, and the message is about to be moved to its final resting queue.</source>
          <target state="translated">Informa a la implementación de la clase de excepción del servidor de que todos los intentos de reproducir una activación aplazada en el servidor han sido erróneos y el mensaje se va a mover a su cola definitiva de almacenamiento.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry">
          <source>As messages arrive on the Xact Dead Letter queue, COM+ attempts to invoke a server-side exception handler related to the server class to deliver this notification.</source>
          <target state="translated">A medida que llegan los mensajes en la cola de mensajes no enviados Xact, COM + intenta invocar un controlador de excepción de servidor asociado a la clase de servidor para enviar esta notificación.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry">
          <source>It does so by first calling <ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A&gt;</ph>, then calling the exception handling version of the failed method in the exception handler object.</source>
          <target state="translated">Para ello, llame a <ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A&gt;</ph>, a continuación, llamar a la versión del método errores en el objeto de controlador de excepción de control de excepciones.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry">
          <source>This exception method can then take an exception action, such as recording the failure, sending a mail message to the administrator, or taking client-side compensating action (reversing the effect of an earlier transaction).</source>
          <target state="translated">Este método de excepciones, a continuación, puede realizar una acción de excepción, como registrar el error, enviar un mensaje de correo electrónico al administrador o realizar la acción de compensación del lado cliente (invertir el efecto de una transacción anterior).</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry">
          <source>The server object should make every effort to complete this transaction successfully.</source>
          <target state="translated">El objeto de servidor debe realizar todo lo posible para completar esta transacción correctamente.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry">
          <source>Otherwise, manual intervention is required to reprocess the message.</source>
          <target state="translated">En caso contrario, se requiere la intervención manual para volver a procesar el mensaje.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry">
          <source>If the exception method is not successful, the message is moved to the final resting queue.</source>
          <target state="translated">Si el método de excepción no se realiza correctamente, el mensaje se mueve a la cola definitiva de almacenamiento.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>