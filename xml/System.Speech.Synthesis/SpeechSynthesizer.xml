<Type Name="SpeechSynthesizer" FullName="System.Speech.Synthesis.SpeechSynthesizer">
  <TypeSignature Language="C#" Value="public sealed class SpeechSynthesizer : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SpeechSynthesizer extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.SpeechSynthesizer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SpeechSynthesizer&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpeechSynthesizer sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="4950c-101">Proporciona acceso a la funcionalidad de un motor de síntesis de voz instalado.</span><span class="sxs-lookup"><span data-stu-id="4950c-101">Provides access to the functionality of an installed speech synthesis engine.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-102">Cuando se crea un nuevo <xref:System.Speech.Synthesis.SpeechSynthesizer> de objeto, usa la voz del sistema de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="4950c-102">When you create a new <xref:System.Speech.Synthesis.SpeechSynthesizer> object, it uses the default system voice.</span></span> <span data-ttu-id="4950c-103">Para configurar el <xref:System.Speech.Synthesis.SpeechSynthesizer> para utilizar una de las voces (texto a voz) de síntesis de voz instalada, utilice la <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> o <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4950c-103">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="4950c-104">Para obtener información sobre los cuales se instalan las voces, use la <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> método y la <xref:System.Speech.Synthesis.VoiceInfo> clase.</span><span class="sxs-lookup"><span data-stu-id="4950c-104">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 <span data-ttu-id="4950c-105">Esta clase también proporciona control sobre los siguientes aspectos de síntesis de voz:</span><span class="sxs-lookup"><span data-stu-id="4950c-105">This class also provides control over the following aspects of speech synthesis:</span></span>  
  
-   <span data-ttu-id="4950c-106">Para configurar la salida de la <xref:System.Speech.Synthesis.SpeechSynthesizer> objeto, utilice la <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, y <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="4950c-106">To configure the output for the <xref:System.Speech.Synthesis.SpeechSynthesizer> object, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
-   <span data-ttu-id="4950c-107">Para generar la voz, use la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4950c-107">To generate speech, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="4950c-108">El <xref:System.Speech.Synthesis.SpeechSynthesizer> puede generar la voz de texto, un <xref:System.Speech.Synthesis.Prompt> o <xref:System.Speech.Synthesis.PromptBuilder> objeto, o de [lenguaje de marcado de síntesis de voz (SSML) versión 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="4950c-108">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can produce speech from text, a <xref:System.Speech.Synthesis.Prompt> or <xref:System.Speech.Synthesis.PromptBuilder> object, or from [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span>  
  
-   <span data-ttu-id="4950c-109">Para pausar y reanudar la síntesis de voz, utilice el <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> y <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="4950c-109">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
-   <span data-ttu-id="4950c-110">Para agregar o quitar léxicos, use la <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> y <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="4950c-110">To add or remove lexicons, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> methods.</span></span> <span data-ttu-id="4950c-111">La <xref:System.Speech.Synthesis.SpeechSynthesizer> puede utilizar uno o más léxicos como guía su pronunciación de palabras.</span><span class="sxs-lookup"><span data-stu-id="4950c-111">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can use one or more lexicons to guide its pronunciation of words.</span></span>  
  
-   <span data-ttu-id="4950c-112">Para modificar la entrega de la salida de voz, utilice el <xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A> y <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="4950c-112">To modify the delivery of speech output, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> properties.</span></span>  
  
 <span data-ttu-id="4950c-113">El <xref:System.Speech.Synthesis.SpeechSynthesizer> genera eventos cuando encuentra determinadas características de mensajes: (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>, y <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>).</span><span class="sxs-lookup"><span data-stu-id="4950c-113">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises events when it encounters certain features in prompts: (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>).</span></span> <span data-ttu-id="4950c-114">También provoca eventos que informan sobre el inicio (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) y al final (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) de hablar de las operaciones y el cambio de la voz (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>).</span><span class="sxs-lookup"><span data-stu-id="4950c-114">It also raises events that report on the start (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) and end (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) of speak operations and on the change of the speaking voice (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4950c-115">Realice siempre una llamada a <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> antes de liberar la última referencia al objeto <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span><span class="sxs-lookup"><span data-stu-id="4950c-115">Always call <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> before you release your last reference to the <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span></span> <span data-ttu-id="4950c-116">En caso contrario, los recursos que está usando no se liberarán hasta que el recolector de elementos no utilizados llame al método <xref:System.Speech.Synthesis.SpeechSynthesizer> del objeto <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="4950c-116">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Speech.Synthesis.SpeechSynthesizer> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4950c-117">El siguiente ejemplo es parte de una aplicación de consola que inicializa un <xref:System.Speech.Synthesis.SpeechSynthesizer> de objetos y habla de una cadena.</span><span class="sxs-lookup"><span data-stu-id="4950c-117">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and speaks a string.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string.  
      synth.Speak("This example demonstrates a basic use of Speech Synthesizer");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
    <altmember cref="T:System.Speech.Synthesis.Prompt" />
    <altmember cref="T:System.Speech.Synthesis.PromptBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SpeechSynthesizer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4950c-118">Inicializa una nueva instancia de la clase <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="4950c-118">Initializes a new instance of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-119">Al inicializar una nueva <xref:System.Speech.Synthesis.SpeechSynthesizer> instancia, usa la voz del sistema de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="4950c-119">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer> instance, it uses the default system voice.</span></span> <span data-ttu-id="4950c-120">Para configurar el <xref:System.Speech.Synthesis.SpeechSynthesizer> para utilizar una de las voces (texto a voz) de síntesis de voz instalada, utilice la <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> o <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4950c-120">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="4950c-121">Para obtener información sobre los cuales se instalan las voces, use la <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> método y la <xref:System.Speech.Synthesis.VoiceInfo> clase.</span><span class="sxs-lookup"><span data-stu-id="4950c-121">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      </Docs>
    </Member>
    <Member MemberName="AddLexicon">
      <MemberSignature Language="C#" Value="public void AddLexicon (Uri uri, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLexicon(class System.Uri uri, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLexicon(Uri ^ uri, System::String ^ mediaType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="4950c-122">La ubicación de la información de léxico.</span><span class="sxs-lookup"><span data-stu-id="4950c-122">The location of the lexicon information.</span></span></param>
        <param name="mediaType"><span data-ttu-id="4950c-123">Tipo de medio del léxico.</span><span class="sxs-lookup"><span data-stu-id="4950c-123">The media type of the lexicon.</span></span> <span data-ttu-id="4950c-124">Los valores de tipo de medio no distinguen mayúsculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="4950c-124">Media type values are not case sensitive.</span></span></param>
        <summary><span data-ttu-id="4950c-125">Agrega un léxico al objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="4950c-125">Adds a lexicon to the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-126">Una biblioteca de objetos de pronunciación es una colección de palabras o frases junto con su pronunciación, que constan de letras y los caracteres de un alfabeto fonético admitido.</span><span class="sxs-lookup"><span data-stu-id="4950c-126">A pronunciation lexicon is a collection of words or phrases together with their pronunciations, which consist of letters and characters from a supported phonetic alphabet.</span></span> <span data-ttu-id="4950c-127">Puede utilizar una biblioteca de objetos para especificar pronunciaciones personalizadas para el vocabulario especializado en su aplicación.</span><span class="sxs-lookup"><span data-stu-id="4950c-127">You can use a lexicon to specify custom pronunciations for specialized vocabulary in your application.</span></span>  
  
 <span data-ttu-id="4950c-128">Pronunciaciones especificadas en un archivo de biblioteca de objetos externos tienen prioridad sobre las pronunciaciones del léxico interno el sintetizador de voz o el diccionario.</span><span class="sxs-lookup"><span data-stu-id="4950c-128">Pronunciations specified in an external lexicon file take precedence over the pronunciations of the speech synthesizer's internal lexicon or dictionary.</span></span> <span data-ttu-id="4950c-129">Sin embargo, las pronunciaciones especifican insertada en mensajes que haya creado con cualquiera de los <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, o <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> métodos tienen prioridad sobre las pronunciaciones especificadas en cualquier biblioteca de objetos.</span><span class="sxs-lookup"><span data-stu-id="4950c-129">However, pronunciations specified inline in prompts created with any of the <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> methods take precedence over pronunciations specified in any lexicon.</span></span> <span data-ttu-id="4950c-130">Pronunciaciones en línea solo se aplican a una sola aparición de una palabra.</span><span class="sxs-lookup"><span data-stu-id="4950c-130">Inline pronunciations apply only to a single occurrence of a word.</span></span> <span data-ttu-id="4950c-131">Vea [léxicos y alfabetos fonético](http://msdn.microsoft.com/library/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) para obtener más información.</span><span class="sxs-lookup"><span data-stu-id="4950c-131">See [Lexicons and Phonetic Alphabets](http://msdn.microsoft.com/library/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) for more information.</span></span>  
  
 <span data-ttu-id="4950c-132">Puede agregar varios léxicos a un <xref:System.Speech.Synthesis.SpeechSynthesizer> objeto. Actualmente se admiten dos valores para el `mediaType` parámetro:</span><span class="sxs-lookup"><span data-stu-id="4950c-132">You can add multiple lexicons to a <xref:System.Speech.Synthesis.SpeechSynthesizer> object.Two values are currently supported for the `mediaType` parameter:</span></span>  
  
-   <span data-ttu-id="4950c-133">El valor `application/pls+xml` indica que la biblioteca de objetos se ajusta a la [pronunciación léxico especificación (PLS) versión 1.0](http://go.microsoft.com/fwlink/?LinkId=201766).</span><span class="sxs-lookup"><span data-stu-id="4950c-133">The value `application/pls+xml` indicates that the lexicon conforms to the [Pronunciation Lexicon Specification (PLS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201766).</span></span> <span data-ttu-id="4950c-134">Este es el formato preferido para usar.</span><span class="sxs-lookup"><span data-stu-id="4950c-134">This is the preferred format to use.</span></span>  
  
-   <span data-ttu-id="4950c-135">El valor `application/vdn.ms-sapi-lex` indica que el formato de la biblioteca de objetos es léxico sin comprimir, que es un formato de propietario de Microsoft.</span><span class="sxs-lookup"><span data-stu-id="4950c-135">The value `application/vdn.ms-sapi-lex` indicates that the lexicon format is Uncompressed Lexicon, which is a Microsoft-proprietary format.</span></span> <span data-ttu-id="4950c-136">Se trata de un formato heredado y le recomendamos que use el formato PLS que se ha descrito anteriormente.</span><span class="sxs-lookup"><span data-stu-id="4950c-136">This is a legacy format and we recommend that you use the PLS format described above.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4950c-137">En el ejemplo siguiente se muestra el efecto de agregar y quitar una biblioteca de objetos que contiene una pronunciación personalizada para la palabra "blue".</span><span class="sxs-lookup"><span data-stu-id="4950c-137">The following example demonstrates the effect of adding and removing a lexicon that contains a custom pronunciation for the word "blue".</span></span> <span data-ttu-id="4950c-138">La biblioteca de objetos define la pronunciación de "blue" que parezca "bleep".</span><span class="sxs-lookup"><span data-stu-id="4950c-138">The lexicon defines the pronunciation of "blue" to sound like "bleep".</span></span> <span data-ttu-id="4950c-139">Mientras se carga la biblioteca de objetos, el sintetizador de voz usa la pronunciación definida en la biblioteca de objetos.</span><span class="sxs-lookup"><span data-stu-id="4950c-139">While the lexicon is loaded, the speech synthesizer uses the pronunciation defined in the lexicon.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Add a lexicon that changes the pronunciation of "blue".  
        synth.AddLexicon(new Uri("C:\\test\\Blue.pls"), "application/pls+xml");  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Remove the lexicon.  
        synth.RemoveLexicon(new Uri("C:\\test\\Blue.pls"));  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 <span data-ttu-id="4950c-140">Estos son el contenido del archivo de biblioteca de objetos Blue.pls:</span><span class="sxs-lookup"><span data-stu-id="4950c-140">Following are the contents of the lexicon file Blue.pls:</span></span>  
  
```xml  
<?xml version="1.0" encoding="UTF-8"?>  
  
<lexicon version="1.0"   
      xmlns="http://www.w3.org/2005/01/pronunciation-lexicon"  
      alphabet="x-microsoft-ups" xml:lang="en-US">  
  
  <lexeme>  
    <grapheme> blue </grapheme>  
    <phoneme> B L I P </phoneme>  
  </lexeme>  
  
</lexicon>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="BookmarkReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BookmarkReached As EventHandler(Of BookmarkReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::BookmarkReachedEventArgs ^&gt; ^ BookmarkReached;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4950c-141">Se genera cuando <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> encuentra un marcador en un mensaje.</span><span class="sxs-lookup"><span data-stu-id="4950c-141">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> encounters a bookmark in a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-142">El <xref:System.Speech.Synthesis.SpeechSynthesizer> genera este evento durante el procesamiento de cualquiera de los <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="4950c-142">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="4950c-143">Para obtener información acerca de los datos asociados al evento, consulte <xref:System.Speech.Synthesis.BookmarkReachedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="4950c-143">For information about data associated with the event, see <xref:System.Speech.Synthesis.BookmarkReachedEventArgs>.</span></span>  
  
 <span data-ttu-id="4950c-144">Puede agregar marcadores usando el <xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4950c-144">You can add bookmarks using the <xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4950c-145">En el ejemplo siguiente se crea un mensaje que incluye dos marcadores y envía la salida a un archivo WAV para su reproducción.</span><span class="sxs-lookup"><span data-stu-id="4950c-145">The following example creates a prompt that includes two bookmarks and sends the output to a WAV file for playback.</span></span> <span data-ttu-id="4950c-146">El controlador para el <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> evento escribe el nombre del marcador y su posición en la secuencia de audio cuando se produce el evento en la consola.</span><span class="sxs-lookup"><span data-stu-id="4950c-146">The handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> event writes the name of the bookmark and its position in the audio stream when the event was raised to the console.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt and append bookmarks.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
        builder.AppendBookmark("Daytime forecast");  
        builder.AppendText(  
          "Tonight's weather will be cloudy with a 30% chance of showers.");  
        builder.AppendBookmark("Nightime forecast");  
  
        // Add a handler for the BookmarkReached event.  
        synth.BookmarkReached +=  
          new EventHandler<BookmarkReachedEventArgs>(synth_BookmarkReached);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write the name and position of the bookmark to the console.  
    static void synth_BookmarkReached(object sender, BookmarkReachedEventArgs e)  
    {  
      Console.WriteLine("Bookmark ({0}) reached at: {1} ",  
        e.Bookmark, e.AudioPosition);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4950c-147">Desecha el objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> y libera los recursos utilizados durante la sesión.</span><span class="sxs-lookup"><span data-stu-id="4950c-147">Disposes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object and releases resources used during the session.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SpeechSynthesizer ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4950c-148">Actúa como medida de seguridad para limpiar los recursos en caso de que no se llame al método <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="4950c-148">Acts as a safeguard to clean up resources in the event that the <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" /> method is not called.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentlySpokenPrompt">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentlySpokenPrompt () As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ GetCurrentlySpokenPrompt();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4950c-149">Obtiene el marcador del que <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> está hablando.</span><span class="sxs-lookup"><span data-stu-id="4950c-149">Gets the prompt that the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> is speaking.</span></span></summary>
        <returns><span data-ttu-id="4950c-150">Devuelve el objeto de mensaje que se habla actualmente.</span><span class="sxs-lookup"><span data-stu-id="4950c-150">Returns the prompt object that is currently being spoken.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
  
```csharp  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInstalledVoices">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4950c-151">Devuelve la colección de voces de síntesis de voz (texto a voz) que están instaladas actualmente en el sistema.</span><span class="sxs-lookup"><span data-stu-id="4950c-151">Returns the collection of speech synthesis (text-to-speech) voices that are currently installed on the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-152">Cuando una aplicación llama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, el método comprueba que cada una de las voces (motores de texto a voz) encuentra en el registro cumple determinados criterios mínimos.</span><span class="sxs-lookup"><span data-stu-id="4950c-152">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices (engines for text-to-speech) it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="4950c-153">Para cualquier voz que no supera la comprobación, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> establece su <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad `False`.</span><span class="sxs-lookup"><span data-stu-id="4950c-153">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="4950c-154">Una aplicación no puede seleccionar una voz cuyo <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad es `False`.</span><span class="sxs-lookup"><span data-stu-id="4950c-154">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="4950c-155">Normalmente, las aplicaciones no establecerá una voz <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="4950c-155">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices () As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4950c-156">Devuelve todas las voces de síntesis de voz (texto a voz) instaladas.</span><span class="sxs-lookup"><span data-stu-id="4950c-156">Returns all of the installed speech synthesis (text-to-speech) voices.</span></span></summary>
        <returns><span data-ttu-id="4950c-157">Devuelve una colección de solo lectura de las voces instaladas actualmente en el sistema.</span><span class="sxs-lookup"><span data-stu-id="4950c-157">Returns a read-only collection of the voices currently installed on the system.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-158">Una voz es un motor de síntesis de voz (texto a voz o TTS) que está instalada en el sistema.</span><span class="sxs-lookup"><span data-stu-id="4950c-158">A voice is an engine for speech synthesis (text-to-speech or TTS) that is installed on the system.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4950c-159">El siguiente ejemplo es parte de una aplicación de consola que inicializa un <xref:System.Speech.Synthesis.SpeechSynthesizer> de objeto y los resultados en la consola de una lista de las voces instaladas (motores de síntesis de voz) y se muestra la información que está disponible para cada voz.</span><span class="sxs-lookup"><span data-stu-id="4950c-159">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices (engines for speech synthesis) and demonstrates the information that is available for each voice.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices.   
        Console.WriteLine("Installed voices -");  
        foreach (InstalledVoice voice in synth.GetInstalledVoices())  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          string AudioFormats = "";  
          foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)  
          {  
            AudioFormats += String.Format("{0}\n",  
            fmt.EncodingFormat.ToString());  
          }  
  
          Console.WriteLine(" Name:          " + info.Name);  
          Console.WriteLine(" Culture:       " + info.Culture);  
          Console.WriteLine(" Age:           " + info.Age);  
          Console.WriteLine(" Gender:        " + info.Gender);  
          Console.WriteLine(" Description:   " + info.Description);  
          Console.WriteLine(" ID:            " + info.Id);  
          Console.WriteLine(" Enabled:       " + voice.Enabled);  
          if (info.SupportedAudioFormats.Count != 0)  
          {  
            Console.WriteLine( " Audio formats: " + AudioFormats);  
          }  
          else  
          {  
            Console.WriteLine(" No supported audio formats found");  
          }  
  
          string AdditionalInfo = "";  
          foreach (string key in info.AdditionalInfo.Keys)  
          {  
            AdditionalInfo += String.Format("  {0}: {1}\n", key, info.AdditionalInfo[key]);  
          }  
  
          Console.WriteLine(" Additional Info - " + AdditionalInfo);  
          Console.WriteLine();  
        }  
      }  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints" />
        <altmember cref="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      </Docs>
    </Member>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices (culture As CultureInfo) As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="4950c-160">Configuración regional que la voz debe admitir.</span><span class="sxs-lookup"><span data-stu-id="4950c-160">The locale that the voice must support.</span></span></param>
        <summary><span data-ttu-id="4950c-161">Devuelve todas las voces de síntesis de voz (texto a voz) instaladas que admiten una configuración regional específica.</span><span class="sxs-lookup"><span data-stu-id="4950c-161">Returns all of the installed speech synthesis  (text-to-speech) voices that support a specific locale.</span></span></summary>
        <returns><span data-ttu-id="4950c-162">Devuelve una colección de solo lectura de las voces instaladas actualmente en el sistema que admite la configuración regional especificada.</span><span class="sxs-lookup"><span data-stu-id="4950c-162">Returns a read-only collection of the voices currently installed on the system that support the specified locale.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-163">Si no hay ninguno de la compatibilidad de voces instaladas la configuración regional especificada, este método devuelve una colección vacía.</span><span class="sxs-lookup"><span data-stu-id="4950c-163">If none of the installed voices support the specified locale, this method returns an empty collection.</span></span>  
  
 <span data-ttu-id="4950c-164">Microsoft Windows y la API de System.Speech Aceptar todos los códigos de país de idioma válidos.</span><span class="sxs-lookup"><span data-stu-id="4950c-164">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="4950c-165">Para llevar a cabo mediante el idioma especificado en la propiedad de la referencia cultural de texto a voz, debe instalarse un motor de síntesis de voz que admita ese código de país de lenguaje.</span><span class="sxs-lookup"><span data-stu-id="4950c-165">To perform text-to-speech using the language specified in the Culture property, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="4950c-166">Los motores de síntesis de voz que se incluye con Microsoft Windows 7 trabajar con los siguientes códigos de país de idioma:</span><span class="sxs-lookup"><span data-stu-id="4950c-166">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="4950c-167">en-US.</span><span class="sxs-lookup"><span data-stu-id="4950c-167">en-US.</span></span> <span data-ttu-id="4950c-168">Inglés (Estados Unidos)</span><span class="sxs-lookup"><span data-stu-id="4950c-168">English (United States)</span></span>  
  
-   <span data-ttu-id="4950c-169">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="4950c-169">zh-CN.</span></span> <span data-ttu-id="4950c-170">Chino (China)</span><span class="sxs-lookup"><span data-stu-id="4950c-170">Chinese (China)</span></span>  
  
-   <span data-ttu-id="4950c-171">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="4950c-171">zh-TW.</span></span> <span data-ttu-id="4950c-172">Chino (Taiwán)</span><span class="sxs-lookup"><span data-stu-id="4950c-172">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="4950c-173">También se permiten los códigos de idioma de dos letras como "es-es".</span><span class="sxs-lookup"><span data-stu-id="4950c-173">Two-letter language codes such as "en" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4950c-174">El siguiente ejemplo es parte de una aplicación de consola que inicializa un <xref:System.Speech.Synthesis.SpeechSynthesizer> de objetos y los resultados en la consola de una lista de las voces instaladas que admita la configuración regional en-US.</span><span class="sxs-lookup"><span data-stu-id="4950c-174">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices that support the en-US locale.</span></span>  
  
```csharp  
using System;  
using System.Globalization;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synthesizer = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices that  
        // support the en-US locacale.   
        Console.WriteLine("Installed voices for the en-US locale:");  
        foreach (InstalledVoice voice in  
          synthesizer.GetInstalledVoices(new CultureInfo("en-US")))  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          OutputVoiceInfo(info);  
        }  
  
        // Output information about the current voice.  
        Console.WriteLine();  
        Console.WriteLine("Current voice:");  
        OutputVoiceInfo(synthesizer.Voice);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Display information about a synthesizer voice.  
    private static void OutputVoiceInfo(VoiceInfo info)  
    {  
      Console.WriteLine("  Name: {0}, culture: {1}, gender: {2}, age: {3}.",  
        info.Name, info.Culture, info.Gender, info.Age);  
      Console.WriteLine("    Description: {0}", info.Description);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4950c-175">Hace una pausa en el objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="4950c-175">Pauses the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="PhonemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PhonemeReached As EventHandler(Of PhonemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::PhonemeReachedEventArgs ^&gt; ^ PhonemeReached;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4950c-176">Se genera cuando se alcanza un fonema.</span><span class="sxs-lookup"><span data-stu-id="4950c-176">Raised when a phoneme is reached.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-177">Un fonema es un componente básico de forma escrita del idioma, normalmente una letra de un alfabeto (o la combinación de dos letras) que representa uno o más sonidos distintos.</span><span class="sxs-lookup"><span data-stu-id="4950c-177">A phoneme is a basic component of written language, typically a letter of an alphabet (or the combination of two letters) that represents one or more distinct sounds.</span></span> <span data-ttu-id="4950c-178">Por ejemplo, la letra "c" es un fonema que puede parecer como "s" en "hormigón" o como "k" en "catch".</span><span class="sxs-lookup"><span data-stu-id="4950c-178">For example, the letter "c" is a phoneme that may sound like "s" in "cinder", or like "k" in "catch".</span></span> <span data-ttu-id="4950c-179">Una palabra escrita es una colección de fonemas.</span><span class="sxs-lookup"><span data-stu-id="4950c-179">A written word is an assemblage of phonemes.</span></span> <span data-ttu-id="4950c-180">Cambiar un fonema en una palabra modificará su ortografía.</span><span class="sxs-lookup"><span data-stu-id="4950c-180">Changing a phoneme in a word will alter its spelling.</span></span>  
  
 <span data-ttu-id="4950c-181">A <xref:System.Speech.Synthesis.SpeechSynthesizer> instancia genera un <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> eventos para cada parte de una palabra que constituye un fonema.</span><span class="sxs-lookup"><span data-stu-id="4950c-181">A <xref:System.Speech.Synthesis.SpeechSynthesizer> instance generates a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event for each portion of a word that constitutes a phoneme.</span></span> <span data-ttu-id="4950c-182">Por ejemplo, para la palabra "tema" generaría tres <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> eventos; uno para el sonido "th", uno para el sonido "e" y otro para el sonido "m" (me).</span><span class="sxs-lookup"><span data-stu-id="4950c-182">For example, for the word "theme" would generate three <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> events; one for the "th" sound, one for the "e" sound, and one for the "m" sound (me).</span></span>  
  
 <span data-ttu-id="4950c-183">Para un ejemplo y obtener información acerca de los datos asociados al evento, consulte <xref:System.Speech.Synthesis.PhonemeReachedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="4950c-183">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.PhonemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public int Rate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rate" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Rate" />
      <MemberSignature Language="VB.NET" Value="Public Property Rate As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rate { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4950c-184">Obtiene o establece la velocidad de habla del objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="4950c-184">Gets or sets the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="4950c-185">Devuelve la velocidad de habla del objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, de -10 a 10.</span><span class="sxs-lookup"><span data-stu-id="4950c-185">Returns the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object, from -10 through 10.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4950c-186">En el ejemplo siguiente, se habla una cadena con la velocidad de habla que se establece en -2.</span><span class="sxs-lookup"><span data-stu-id="4950c-186">The following example speaks a string with the speaking rate set to -2.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Set a value for the speaking rate.  
      synth.Rate = -2;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a text string synchronously.  
      synth.Speak("This example speaks a string with the speaking rate set to -2.");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }     
  }    
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.PromptStyle" />
        <altmember cref="T:System.Speech.Synthesis.PromptRate" />
      </Docs>
    </Member>
    <Member MemberName="RemoveLexicon">
      <MemberSignature Language="C#" Value="public void RemoveLexicon (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveLexicon(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveLexicon(Uri ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="4950c-187">Ubicación del documento de léxico.</span><span class="sxs-lookup"><span data-stu-id="4950c-187">The location of the lexicon document.</span></span></param>
        <summary><span data-ttu-id="4950c-188">Quita un léxico del objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="4950c-188">Removes a lexicon from the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-189">Vea <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> para obtener un ejemplo.</span><span class="sxs-lookup"><span data-stu-id="4950c-189">See <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4950c-190">Reanuda el objeto de <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> después de haberse pausado.</span><span class="sxs-lookup"><span data-stu-id="4950c-190">Resumes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object after it has been paused.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoice">
      <MemberSignature Language="C#" Value="public void SelectVoice (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoice(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoice (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoice(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4950c-191">Nombre de la voz que se va a seleccionar.</span><span class="sxs-lookup"><span data-stu-id="4950c-191">The name of the voice to select.</span></span></param>
        <summary><span data-ttu-id="4950c-192">Selecciona una voz concreta por nombre.</span><span class="sxs-lookup"><span data-stu-id="4950c-192">Selects a specific voice by name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-193">Use la <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> método y <xref:System.Speech.Synthesis.VoiceInfo> instalado de clase para obtener los nombres de las voces de texto a voz (TTS) que se pueden seleccionar.</span><span class="sxs-lookup"><span data-stu-id="4950c-193">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="4950c-194">Para seleccionar una voz, pasar todo el contenido de la <xref:System.Speech.Synthesis.VoiceInfo.Name%2A> propiedad como argumento para el <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4950c-194">To select a voice, pass the entire contents of the <xref:System.Speech.Synthesis.VoiceInfo.Name%2A> property as the argument for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span> <span data-ttu-id="4950c-195">El <xref:System.Speech.Synthesis.SpeechSynthesizer> objeto selecciona el primer voz instalada que contiene `name` en la voz <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="4950c-195">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that contains `name` in the voice's <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="4950c-196">El <xref:System.Speech.Synthesis.SpeechSynthesizer> realiza una comparación de subcadena distingue mayúsculas de minúsculas, para determinar si coincide con la voz del `name`.</span><span class="sxs-lookup"><span data-stu-id="4950c-196">The <xref:System.Speech.Synthesis.SpeechSynthesizer> performs a case-sensitive, substring comparison to determine if the voice matches the `name`.</span></span>  
  
 <span data-ttu-id="4950c-197">Cuando una aplicación llama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, el método comprueba que cada una de las voces lo busca en el registro cumple determinados criterios mínimos.</span><span class="sxs-lookup"><span data-stu-id="4950c-197">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="4950c-198">Para cualquier voz que no supera la comprobación, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> establece su <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad `False`.</span><span class="sxs-lookup"><span data-stu-id="4950c-198">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="4950c-199">Una aplicación no puede seleccionar una voz cuyo <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad es `False`.</span><span class="sxs-lookup"><span data-stu-id="4950c-199">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="4950c-200">Normalmente, las aplicaciones no establecerá una voz <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="4950c-200">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="4950c-201">Para seleccionar una voz por sexo, edad o configuración regional, utilice uno de los <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="4950c-201">To select a voice by gender, age, or locale, use one of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectVoiceByHints">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4950c-202">Selecciona una voz con características concretas.</span><span class="sxs-lookup"><span data-stu-id="4950c-202">Selects a voice with specific characteristics.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-203">Use la <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> método y <xref:System.Speech.Synthesis.VoiceInfo> instalado de clase para obtener los nombres de las voces de texto a voz (TTS) que se pueden seleccionar.</span><span class="sxs-lookup"><span data-stu-id="4950c-203">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="4950c-204">La <xref:System.Speech.Synthesis.SpeechSynthesizer> objeto selecciona el primer voz instalada que coincida con las características especificadas.</span><span class="sxs-lookup"><span data-stu-id="4950c-204">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that matches the specified characteristics.</span></span>  
  
 <span data-ttu-id="4950c-205">Cuando una aplicación llama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, el método comprueba que cada una de las voces lo busca en el registro cumple determinados criterios mínimos.</span><span class="sxs-lookup"><span data-stu-id="4950c-205">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="4950c-206">Para cualquier voz que no supera la comprobación, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> establece su <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad `False`.</span><span class="sxs-lookup"><span data-stu-id="4950c-206">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="4950c-207">Una aplicación no puede seleccionar una voz cuyo <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad es `False`.</span><span class="sxs-lookup"><span data-stu-id="4950c-207">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="4950c-208">Normalmente, las aplicaciones no establecerá una voz <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="4950c-208">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="4950c-209">Para seleccionar una voz por su nombre, use la <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> (método)</span><span class="sxs-lookup"><span data-stu-id="4950c-209">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="4950c-210">Género de la voz para seleccionar.</span><span class="sxs-lookup"><span data-stu-id="4950c-210">The gender of the voice to select.</span></span></param>
        <summary><span data-ttu-id="4950c-211">Selecciona una voz con un género concreto.</span><span class="sxs-lookup"><span data-stu-id="4950c-211">Selects a voice with a specific gender.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-212">Use la <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> método y <xref:System.Speech.Synthesis.VoiceInfo> instalado de clase para obtener los nombres de las voces de texto a voz (TTS) que se pueden seleccionar.</span><span class="sxs-lookup"><span data-stu-id="4950c-212">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="4950c-213">El <xref:System.Speech.Synthesis.SpeechSynthesizer> objeto selecciona el primer voz instalada cuyo <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> coincidencias de propiedad el `gender` parámetro.</span><span class="sxs-lookup"><span data-stu-id="4950c-213">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> property matches the `gender` parameter.</span></span>  
  
 <span data-ttu-id="4950c-214">Cuando una aplicación llama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, el método comprueba que cada una de las voces lo busca en el registro cumple determinados criterios mínimos.</span><span class="sxs-lookup"><span data-stu-id="4950c-214">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="4950c-215">Para cualquier voz que no supera la comprobación, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> establece su <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad `False`.</span><span class="sxs-lookup"><span data-stu-id="4950c-215">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="4950c-216">Una aplicación no puede seleccionar una voz cuyo <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad es `False`.</span><span class="sxs-lookup"><span data-stu-id="4950c-216">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="4950c-217">Normalmente, las aplicaciones no establecerá una voz <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="4950c-217">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="4950c-218">Para seleccionar una voz en función de otras características, vea el otro <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="4950c-218">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="4950c-219">Para seleccionar una voz por su nombre, use la <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4950c-219">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="4950c-220">Género de la voz para seleccionar.</span><span class="sxs-lookup"><span data-stu-id="4950c-220">The gender of the voice to select.</span></span></param>
        <param name="age"><span data-ttu-id="4950c-221">Edad de la voz para seleccionar.</span><span class="sxs-lookup"><span data-stu-id="4950c-221">The age of the voice to select.</span></span></param>
        <summary><span data-ttu-id="4950c-222">Selecciona una voz con un género y edad específicos.</span><span class="sxs-lookup"><span data-stu-id="4950c-222">Selects a voice with a specific gender and age.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-223">Use la <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> método y <xref:System.Speech.Synthesis.VoiceInfo> instalado de clase para obtener los nombres de las voces de texto a voz (TTS) que se pueden seleccionar.</span><span class="sxs-lookup"><span data-stu-id="4950c-223">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="4950c-224">El <xref:System.Speech.Synthesis.SpeechSynthesizer> objeto selecciona el primer voz instalada cuyo <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> y <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> coincidencia de propiedades el `gender` y `age` parámetros.</span><span class="sxs-lookup"><span data-stu-id="4950c-224">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span>  
  
 <span data-ttu-id="4950c-225">Cuando una aplicación llama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, el método comprueba que cada una de las voces lo busca en el registro cumple determinados criterios mínimos.</span><span class="sxs-lookup"><span data-stu-id="4950c-225">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="4950c-226">Para cualquier voz que no supera la comprobación, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> establece su <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad `False`.</span><span class="sxs-lookup"><span data-stu-id="4950c-226">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="4950c-227">Una aplicación no puede seleccionar una voz cuyo <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad es `False`.</span><span class="sxs-lookup"><span data-stu-id="4950c-227">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="4950c-228">Normalmente, las aplicaciones no establecerá una voz <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="4950c-228">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="4950c-229">Para seleccionar una voz en función de otras características, vea el otro <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="4950c-229">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="4950c-230">Para seleccionar una voz por su nombre, use la <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4950c-230">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="4950c-231">Género de la voz para seleccionar.</span><span class="sxs-lookup"><span data-stu-id="4950c-231">The gender of the voice to select.</span></span></param>
        <param name="age"><span data-ttu-id="4950c-232">Edad de la voz para seleccionar.</span><span class="sxs-lookup"><span data-stu-id="4950c-232">The age of the voice to select.</span></span></param>
        <param name="voiceAlternate"><span data-ttu-id="4950c-233">La posición de la voz para seleccionar.</span><span class="sxs-lookup"><span data-stu-id="4950c-233">The position of the voice to select.</span></span></param>
        <summary><span data-ttu-id="4950c-234">Selecciona una voz con un género y edad específicos, en función de la posición en la que se ordenan las voces.</span><span class="sxs-lookup"><span data-stu-id="4950c-234">Selects a voice with a specific gender and age, based on the position in which the voices are ordered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-235">Use la <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> método y <xref:System.Speech.Synthesis.VoiceInfo> instalado de clase para obtener los nombres de las voces de texto a voz (TTS) que se pueden seleccionar.</span><span class="sxs-lookup"><span data-stu-id="4950c-235">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="4950c-236">El <xref:System.Speech.Synthesis.SpeechSynthesizer> objeto busca instalado las voces cuya <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> y <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> coincidencia de propiedades el `gender` y `age` parámetros.</span><span class="sxs-lookup"><span data-stu-id="4950c-236">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds installed voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span> <span data-ttu-id="4950c-237">El <xref:System.Speech.Synthesis.SpeechSynthesizer> cuenta las coincidencias busca y devuelve la voz cuando el número alcanza la `voiceAlternate` parámetro.</span><span class="sxs-lookup"><span data-stu-id="4950c-237">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="4950c-238">Cuando una aplicación llama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, el método comprueba que cada una de las voces lo busca en el registro cumple determinados criterios mínimos.</span><span class="sxs-lookup"><span data-stu-id="4950c-238">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="4950c-239">Para cualquier voz que no supera la comprobación, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> establece su <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad `False`.</span><span class="sxs-lookup"><span data-stu-id="4950c-239">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="4950c-240">Una aplicación no puede seleccionar una voz cuyo <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad es `False`.</span><span class="sxs-lookup"><span data-stu-id="4950c-240">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="4950c-241">Normalmente, las aplicaciones no establecerá una voz <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="4950c-241">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="4950c-242">Para seleccionar una voz en función de otras características, vea el otro <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> sobrecargas.</span><span class="sxs-lookup"><span data-stu-id="4950c-242">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="4950c-243">Para seleccionar una voz por su nombre, use la <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4950c-243">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer, culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="4950c-244">Género de la voz para seleccionar.</span><span class="sxs-lookup"><span data-stu-id="4950c-244">The gender of the voice to select.</span></span></param>
        <param name="age"><span data-ttu-id="4950c-245">Edad de la voz para seleccionar.</span><span class="sxs-lookup"><span data-stu-id="4950c-245">The age of the voice to select.</span></span></param>
        <param name="voiceAlternate"><span data-ttu-id="4950c-246">La posición de la voz para seleccionar.</span><span class="sxs-lookup"><span data-stu-id="4950c-246">The position of the voice to select.</span></span></param>
        <param name="culture"><span data-ttu-id="4950c-247">Configuración regional de la voz para seleccionar.</span><span class="sxs-lookup"><span data-stu-id="4950c-247">The locale of the voice to select.</span></span></param>
        <summary><span data-ttu-id="4950c-248">Selecciona una voz con un género, edad y configuración regional específicos, en función de la posición en la que se ordenan las voces.</span><span class="sxs-lookup"><span data-stu-id="4950c-248">Selects a voice with a specific gender, age, and locale, based on the position in which the voices are ordered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-249">El <xref:System.Speech.Synthesis.SpeechSynthesizer> objeto busca las voces cuya <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>, <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>, y <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> coincidencia de propiedades el `gender`, `age`, y `culture` parámetros.</span><span class="sxs-lookup"><span data-stu-id="4950c-249">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>, <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>, and <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> properties match the `gender`, `age`, and `culture` parameters.</span></span> <span data-ttu-id="4950c-250">El <xref:System.Speech.Synthesis.SpeechSynthesizer> cuenta las coincidencias busca y devuelve la voz cuando el número alcanza la `voiceAlternate` parámetro.</span><span class="sxs-lookup"><span data-stu-id="4950c-250">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="4950c-251">Microsoft Windows y la API de System.Speech Aceptar todos los códigos de país de idioma válidos.</span><span class="sxs-lookup"><span data-stu-id="4950c-251">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="4950c-252">Para realizar el texto a voz con el idioma especificado en el `culture` parámetro, un motor de síntesis de voz que admite que se debe instalar el código de país de lenguaje.</span><span class="sxs-lookup"><span data-stu-id="4950c-252">To perform text-to-speech using the language specified in the `culture` parameter, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="4950c-253">Los motores de síntesis de voz que se incluye con Microsoft Windows 7 trabajar con los siguientes códigos de país de idioma:</span><span class="sxs-lookup"><span data-stu-id="4950c-253">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="4950c-254">en-US.</span><span class="sxs-lookup"><span data-stu-id="4950c-254">en-US.</span></span> <span data-ttu-id="4950c-255">Inglés (Estados Unidos)</span><span class="sxs-lookup"><span data-stu-id="4950c-255">English (United States)</span></span>  
  
-   <span data-ttu-id="4950c-256">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="4950c-256">zh-CN.</span></span> <span data-ttu-id="4950c-257">Chino (China)</span><span class="sxs-lookup"><span data-stu-id="4950c-257">Chinese (China)</span></span>  
  
-   <span data-ttu-id="4950c-258">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="4950c-258">zh-TW.</span></span> <span data-ttu-id="4950c-259">Chino (Taiwán)</span><span class="sxs-lookup"><span data-stu-id="4950c-259">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="4950c-260">También se permiten los códigos de idioma de dos letras como "es-es".</span><span class="sxs-lookup"><span data-stu-id="4950c-260">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 <span data-ttu-id="4950c-261">Cuando una aplicación llama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, el método comprueba que cada una de las voces lo busca en el registro cumple determinados criterios mínimos.</span><span class="sxs-lookup"><span data-stu-id="4950c-261">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="4950c-262">Para cualquier voz que no supera la comprobación, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> establece su <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad `False`.</span><span class="sxs-lookup"><span data-stu-id="4950c-262">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="4950c-263">Una aplicación no puede seleccionar una voz cuyo <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad es `False`.</span><span class="sxs-lookup"><span data-stu-id="4950c-263">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="4950c-264">Normalmente, las aplicaciones no establecerá una voz <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="4950c-264">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="4950c-265">Para seleccionar una voz en función de otras características, vea el otro <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> sobrecargas.</span><span class="sxs-lookup"><span data-stu-id="4950c-265">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="4950c-266">Para seleccionar una voz por su nombre, use la <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4950c-266">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToAudioStream">
      <MemberSignature Language="C#" Value="public void SetOutputToAudioStream (System.IO.Stream audioDestination, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToAudioStream(class System.IO.Stream audioDestination, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToAudioStream (audioDestination As Stream, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToAudioStream(System::IO::Stream ^ audioDestination, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="audioDestination"><span data-ttu-id="4950c-267">Flujo al que se va a anexar la salida de síntesis.</span><span class="sxs-lookup"><span data-stu-id="4950c-267">The stream to which to append synthesis output.</span></span></param>
        <param name="formatInfo"><span data-ttu-id="4950c-268">Formato que se va a usar para la salida de síntesis.</span><span class="sxs-lookup"><span data-stu-id="4950c-268">The format to use for the synthesis output.</span></span></param>
        <summary><span data-ttu-id="4950c-269">Configura el objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> para anexar el resultado a una secuencia de audio.</span><span class="sxs-lookup"><span data-stu-id="4950c-269">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to an audio stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-270">Llame a <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> para liberar el <xref:System.Speech.Synthesis.SpeechSynthesizer>de referencia a la secuencia.</span><span class="sxs-lookup"><span data-stu-id="4950c-270">Call <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> to release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s  reference to the stream.</span></span>  
  
 <span data-ttu-id="4950c-271">Para usar otras opciones de configuración de salida, vea el <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, y <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="4950c-271">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToDefaultAudioDevice">
      <MemberSignature Language="C#" Value="public void SetOutputToDefaultAudioDevice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToDefaultAudioDevice() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToDefaultAudioDevice ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToDefaultAudioDevice();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4950c-272">Configura el objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> para enviar la salida al dispositivo de audio predeterminado.</span><span class="sxs-lookup"><span data-stu-id="4950c-272">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to send output to the default audio device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-273">Puede usar el **sonido** ventana en las ventanas de **el Panel de Control** para configurar el dispositivo de audio predeterminado para el equipo.</span><span class="sxs-lookup"><span data-stu-id="4950c-273">You can use the  **Sound** window in the Windows **Control Panel** to configure the default audio device for the computer.</span></span>  
  
 <span data-ttu-id="4950c-274">Para usar otras opciones de configuración de salida, vea el <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, y <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="4950c-274">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4950c-275">En el ejemplo siguiente se utiliza el sintetizador hablar una frase a la salida de audio predeterminado.</span><span class="sxs-lookup"><span data-stu-id="4950c-275">The following example uses the synthesizer to speak a phrase to the default audio output.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the synthesizer to send output to the default audio device.  
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToNull">
      <MemberSignature Language="C#" Value="public void SetOutputToNull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToNull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToNull();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4950c-276">Configura el objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> para no enviar los resultados de las operaciones de síntesis a un dispositivo, un archivo o un flujo.</span><span class="sxs-lookup"><span data-stu-id="4950c-276">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to not send output from synthesis operations to a device, file, or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-277">Utilice este método para liberar el <xref:System.Speech.Synthesis.SpeechSynthesizer> de referencia a un archivo o secuencia.</span><span class="sxs-lookup"><span data-stu-id="4950c-277">Use this method to release the <xref:System.Speech.Synthesis.SpeechSynthesizer> ‘s reference to a file or stream.</span></span> <span data-ttu-id="4950c-278">Vea <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> para obtener un ejemplo.</span><span class="sxs-lookup"><span data-stu-id="4950c-278">See <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> for an example.</span></span>  
  
 <span data-ttu-id="4950c-279">Para usar otras opciones de configuración de salida, vea el <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, y <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="4950c-279">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputToWaveFile">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4950c-280">Configura el objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> para anexar la salida a un archivo con formato de audio de forma de onda.</span><span class="sxs-lookup"><span data-stu-id="4950c-280">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-281">Para liberar el <xref:System.Speech.Synthesis.SpeechSynthesizer>referencia en el archivo, vuelva a configurar el <xref:System.Speech.Synthesis.SpeechSynthesizer>de salida, por ejemplo, mediante una llamada a <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="4950c-281">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s  reference to the file, reconfigure the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="4950c-282">Para usar otras opciones de configuración de salida, vea el <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, y <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="4950c-282">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="4950c-283">Ruta de acceso al archivo.</span><span class="sxs-lookup"><span data-stu-id="4950c-283">The path to the file.</span></span></param>
        <summary><span data-ttu-id="4950c-284">Configura el objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> para anexar la salida a un archivo que contiene audio de formato de forma de onda.</span><span class="sxs-lookup"><span data-stu-id="4950c-284">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a file that contains Waveform format audio.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-285">Para configurar la salida y especificar el formato de audio, use la <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4950c-285">To configure the output and specify the audio format, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4950c-286">En el ejemplo siguiente se utiliza una instancia de <xref:System.Media.SoundPlayer> para reproducir un mensaje que ha sido la salida a un archivo WAV.</span><span class="sxs-lookup"><span data-stu-id="4950c-286">The following example uses an instance of <xref:System.Media.SoundPlayer> to play a prompt that has been output to a .wav file.</span></span> <span data-ttu-id="4950c-287">Dado que el <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> llamada es asincrónica, el <xref:System.Media.SoundPlayer> se crea la instancia (y el <xref:System.Media.SoundPlayer.Play%2A> método invocado) en el controlador de la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> eventos.</span><span class="sxs-lookup"><span data-stu-id="4950c-287">Because the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> call is asynchronous, the <xref:System.Media.SoundPlayer> instance is created (and the <xref:System.Media.SoundPlayer.Play%2A> method invoked) in the handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToWaveFile(@"C:\Test\Sample.wav");  
  
      // Register for the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Build a prompt.  
      PromptBuilder builder = new PromptBuilder();  
      builder.AppendText("This sample asynchronously speaks a prompt to a WAVE file.");  
  
      // Speak the string asynchronously.  
      synth.SpeakAsync(builder);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Handle the SpeakCompleted event.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
  
      // Create a SoundPlayer instance to play the output audio file.  
      System.Media.SoundPlayer m_SoundPlayer =  
        new System.Media.SoundPlayer(@"C:\Test\Sample.wav");  
  
      //  Play the output file.  
      m_SoundPlayer.Play();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="4950c-288">Ruta de acceso al archivo.</span><span class="sxs-lookup"><span data-stu-id="4950c-288">The path to the file.</span></span></param>
        <param name="formatInfo"><span data-ttu-id="4950c-289">Información de formato de audio.</span><span class="sxs-lookup"><span data-stu-id="4950c-289">The audio format information.</span></span></param>
        <summary><span data-ttu-id="4950c-290">Configura el objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> para anexar la salida a un archivo de formato de audio de forma de onda en un formato especificado.</span><span class="sxs-lookup"><span data-stu-id="4950c-290">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file in a specified format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4950c-291">En el ejemplo siguiente se especifica el formato de la salida de síntesis de voz y lo envía a un archivo WAV.</span><span class="sxs-lookup"><span data-stu-id="4950c-291">The following example specifies the format of the output of speech synthesis and sends it to a WAV file.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\temp\test.wav",   
          new SpeechAudioFormatInfo(32000, AudioBitsPerSample.Sixteen, AudioChannel.Mono));  
  
        // Create a SoundPlayer instance to play output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =   
          new System.Media.SoundPlayer(@"C:\temp\test.wav");  
  
        // Build a prompt.  
        PromptBuilder builder = new PromptBuilder();  
        builder.AppendText("This is sample output to a WAVE file.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveStream">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveStream (System.IO.Stream audioDestination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveStream(class System.IO.Stream audioDestination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveStream (audioDestination As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveStream(System::IO::Stream ^ audioDestination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioDestination"><span data-ttu-id="4950c-292">Flujo al que se va a anexar la salida de síntesis.</span><span class="sxs-lookup"><span data-stu-id="4950c-292">The stream to which to append synthesis output.</span></span></param>
        <summary><span data-ttu-id="4950c-293">Configura el objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> para anexar la salida a un flujo que contiene audio de formato de forma de onda.</span><span class="sxs-lookup"><span data-stu-id="4950c-293">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a stream that contains Waveform format audio.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-294">Para liberar el <xref:System.Speech.Synthesis.SpeechSynthesizer>de referencia en la secuencia, reconfigure el sintetizador de salida de, por ejemplo, mediante una llamada a <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="4950c-294">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s reference to the stream, reconfigure the synthesizer's output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="4950c-295">Para usar otras opciones de configuración de salida, vea el <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, y <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="4950c-295">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4950c-296">En el ejemplo siguiente se da como resultado una frase en una secuencia WAV.</span><span class="sxs-lookup"><span data-stu-id="4950c-296">The following example outputs a phrase to a WAV stream.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      using (MemoryStream stream = new MemoryStream())  
      {  
  
        // Create a SoundPlayer instance to play the output audio file.  
        MemoryStream streamAudio = new MemoryStream();  
        System.Media.SoundPlayer m_SoundPlayer = new System.Media.SoundPlayer();  
  
        // Configure the synthesizer to output to an audio stream.  
        synth.SetOutputToWaveStream(streamAudio);  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
        streamAudio.Position = 0;  
        m_SoundPlayer.Stream = streamAudio;  
        m_SoundPlayer.Play();  
  
        // Set the synthesizer output to null to release the stream.   
        synth.SetOutputToNull();  
  
        // Insert code to persist or process the stream contents here.  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Speak">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4950c-297">Genera voz emitida de forma sincrónica desde una cadena, un objeto <see cref="T:System.Speech.Synthesis.Prompt" /> o un objeto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="4950c-297">Generates speech output synchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-298">El <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> métodos generan voz de forma sincrónica.</span><span class="sxs-lookup"><span data-stu-id="4950c-298">The <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods generate speech synchronously.</span></span> <span data-ttu-id="4950c-299">Los métodos no devuelven hasta que el contenido de la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> instancia se ha hablado completamente.</span><span class="sxs-lookup"><span data-stu-id="4950c-299">The methods do not return until the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> instance has been completely spoken.</span></span> <span data-ttu-id="4950c-300">Se trata de la manera más sencilla de generar la voz.</span><span class="sxs-lookup"><span data-stu-id="4950c-300">This is the simplest way to generate speech.</span></span> <span data-ttu-id="4950c-301">Sin embargo, si la aplicación necesita realizar tareas mientras habla, por ejemplo texto resaltado, paint animación, controles de monitor u otras tareas, use la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> métodos o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> método para generar voz de forma asincrónica.</span><span class="sxs-lookup"><span data-stu-id="4950c-301">However, if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method to generate speech asynchronously.</span></span>  
  
 <span data-ttu-id="4950c-302">Durante una llamada a este método, el <xref:System.Speech.Synthesis.SpeechSynthesizer> puede provocar los eventos siguientes:</span><span class="sxs-lookup"><span data-stu-id="4950c-302">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="4950c-303"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="4950c-303"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="4950c-304">Se produce cuando cambia el estado de habla del sintetizador.</span><span class="sxs-lookup"><span data-stu-id="4950c-304">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="4950c-305"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="4950c-305"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="4950c-306">Se genera cuando el sintetizador empiece a generar la voz.</span><span class="sxs-lookup"><span data-stu-id="4950c-306">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="4950c-307"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="4950c-307"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="4950c-308">Genera cada vez que el sintetizador alcanza una letra o una combinación de letras que constituyen un sonido discreto de voz en un idioma.</span><span class="sxs-lookup"><span data-stu-id="4950c-308">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="4950c-309"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="4950c-309"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="4950c-310">Se desencadena cada vez que el sintetizador completa habla una palabra.</span><span class="sxs-lookup"><span data-stu-id="4950c-310">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="4950c-311"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="4950c-311"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="4950c-312">Genera cada vez salida de voz requiere un cambio en la posición de la boca o los músculos faciales que se usa para generar la voz.</span><span class="sxs-lookup"><span data-stu-id="4950c-312">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="4950c-313"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="4950c-313"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="4950c-314">Se desencadena cuando el sintetizador encuentra un marcador en un símbolo del sistema.</span><span class="sxs-lookup"><span data-stu-id="4950c-314">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="4950c-315"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="4950c-315"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="4950c-316">Se produce cuando cambia el tono de voz para el sintetizador.</span><span class="sxs-lookup"><span data-stu-id="4950c-316">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="4950c-317">El <xref:System.Speech.Synthesis.SpeechSynthesizer> no provoca la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> eventos durante el procesamiento de cualquiera de los <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="4950c-317">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt"><span data-ttu-id="4950c-318">El contenido para hablar.</span><span class="sxs-lookup"><span data-stu-id="4950c-318">The content to speak.</span></span></param>
        <summary><span data-ttu-id="4950c-319">De forma sincrónica habla el contenido de un objeto <see cref="T:System.Speech.Synthesis.Prompt" />.</span><span class="sxs-lookup"><span data-stu-id="4950c-319">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-320">Hablar de forma asincrónica el contenido de un <xref:System.Speech.Synthesis.Prompt> objeto, utilice <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="4950c-320">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4950c-321">En el ejemplo siguiente se crea un <xref:System.Speech.Synthesis.Prompt> objeto de una cadena y el objeto se pasa como argumento a la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4950c-321">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a prompt from a string.  
        Prompt color = new Prompt("What is your favorite color?");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(color);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder"><span data-ttu-id="4950c-322">El contenido para hablar.</span><span class="sxs-lookup"><span data-stu-id="4950c-322">The content to speak.</span></span></param>
        <summary><span data-ttu-id="4950c-323">De forma sincrónica habla el contenido de un objeto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="4950c-323">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-324">Hablar de forma asincrónica el contenido de un <xref:System.Speech.Synthesis.PromptBuilder> objeto, utilice <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="4950c-324">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4950c-325">En el ejemplo siguiente se crea un <xref:System.Speech.Synthesis.PromptBuilder> objeto de una cadena y el objeto se pasa como argumento a la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4950c-325">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a text string.  
        PromptBuilder song = new PromptBuilder();  
        song.AppendText("Say the name of the song you want to hear");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(song);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="4950c-326">Texto para hablar.</span><span class="sxs-lookup"><span data-stu-id="4950c-326">The text to speak.</span></span></param>
        <summary><span data-ttu-id="4950c-327">De forma sincrónica habla el contenido de una cadena.</span><span class="sxs-lookup"><span data-stu-id="4950c-327">Synchronously speaks the contents of a string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-328">Para hablar de forma sincrónica una cadena que contiene el marcado SSML, use la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4950c-328">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="4950c-329">Para hablar de forma asincrónica el contenido de una cadena, utilice el <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4950c-329">To asynchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4950c-330">Como se muestra en el ejemplo siguiente, la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> método proporciona los medios más simples para generar la voz de salida sincrónicamente.</span><span class="sxs-lookup"><span data-stu-id="4950c-330">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method provides the simplest means to generate speech output synchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a string synchronously.  
        synth.Speak("What is your favorite color?");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SpeakAsync">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4950c-331">Genera voz emitida de forma asincrónica desde una cadena, un objeto <see cref="T:System.Speech.Synthesis.Prompt" /> o un objeto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="4950c-331">Generates speech output asynchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-332">El <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> métodos generan voz de forma asincrónica.</span><span class="sxs-lookup"><span data-stu-id="4950c-332">The <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods generate speech asynchronously.</span></span> <span data-ttu-id="4950c-333">Los métodos devuelven inmediatamente sin esperar a que el contenido de la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> objeto termine de hablar.</span><span class="sxs-lookup"><span data-stu-id="4950c-333">The methods return immediately without waiting for the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> object to finish speaking.</span></span> <span data-ttu-id="4950c-334">Use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> si la aplicación necesita realizar tareas mientras habla, por ejemplo resaltar texto, pintar animación, controles de monitor u otras tareas.</span><span class="sxs-lookup"><span data-stu-id="4950c-334">Use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks.</span></span>  
  
 <span data-ttu-id="4950c-335">Durante una llamada a este método, el <xref:System.Speech.Synthesis.SpeechSynthesizer> puede provocar los eventos siguientes:</span><span class="sxs-lookup"><span data-stu-id="4950c-335">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="4950c-336"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="4950c-336"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="4950c-337">Se produce cuando cambia el estado de habla del sintetizador.</span><span class="sxs-lookup"><span data-stu-id="4950c-337">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="4950c-338"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="4950c-338"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="4950c-339">Se genera cuando el sintetizador empiece a generar la voz.</span><span class="sxs-lookup"><span data-stu-id="4950c-339">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="4950c-340"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="4950c-340"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="4950c-341">Genera cada vez que el sintetizador alcanza una letra o una combinación de letras que constituyen un sonido discreto de voz en un idioma.</span><span class="sxs-lookup"><span data-stu-id="4950c-341">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="4950c-342"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="4950c-342"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="4950c-343">Se desencadena cada vez que el sintetizador completa habla una palabra.</span><span class="sxs-lookup"><span data-stu-id="4950c-343">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="4950c-344"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="4950c-344"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="4950c-345">Genera cada vez salida de voz requiere un cambio en la posición de la boca o los músculos faciales que se usa para generar la voz.</span><span class="sxs-lookup"><span data-stu-id="4950c-345">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="4950c-346"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="4950c-346"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="4950c-347">Se desencadena cuando el sintetizador encuentra un marcador en un símbolo del sistema.</span><span class="sxs-lookup"><span data-stu-id="4950c-347">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="4950c-348"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="4950c-348"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="4950c-349">Se produce cuando cambia el tono de voz para el sintetizador.</span><span class="sxs-lookup"><span data-stu-id="4950c-349">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="4950c-350"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span><span class="sxs-lookup"><span data-stu-id="4950c-350"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="4950c-351">Se produce cuando finaliza el sintetizador un <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operación.</span><span class="sxs-lookup"><span data-stu-id="4950c-351">Raised when the synthesizer finishes a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="4950c-352">Si la aplicación no necesita realizar tareas mientras habla, puede usar el <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> métodos o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> método para generar la voz sincrónicamente.</span><span class="sxs-lookup"><span data-stu-id="4950c-352">If your application does not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public void SpeakAsync (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsync(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsync(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt"><span data-ttu-id="4950c-353">El contenido para hablar.</span><span class="sxs-lookup"><span data-stu-id="4950c-353">The content to speak.</span></span></param>
        <summary><span data-ttu-id="4950c-354">De forma asincrónica habla el contenido de un objeto <see cref="T:System.Speech.Synthesis.Prompt" />.</span><span class="sxs-lookup"><span data-stu-id="4950c-354">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-355">Puede cancelar la hablando asincrónica de un símbolo del sistema con el <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4950c-355">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
 <span data-ttu-id="4950c-356">Hablar de forma sincrónica el contenido de un <xref:System.Speech.Synthesis.Prompt> objeto, utilice <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span><span class="sxs-lookup"><span data-stu-id="4950c-356">To synchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4950c-357">En el ejemplo siguiente se crea un <xref:System.Speech.Synthesis.Prompt> objeto de una cadena y el objeto se pasa como argumento a la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4950c-357">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a prompt from a string.  
      Prompt color = new Prompt("What is your favorite color?");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(color);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder"><span data-ttu-id="4950c-358">El contenido para hablar.</span><span class="sxs-lookup"><span data-stu-id="4950c-358">The content to speak.</span></span></param>
        <summary><span data-ttu-id="4950c-359">De forma asincrónica habla el contenido de un objeto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="4950c-359">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="4950c-360">Devuelve el objeto que contiene el contenido para hablar.</span><span class="sxs-lookup"><span data-stu-id="4950c-360">Returns the object that contains the content to speak.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-361">Hablar de forma sincrónica el contenido de un <xref:System.Speech.Synthesis.PromptBuilder> objeto, utilice <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span><span class="sxs-lookup"><span data-stu-id="4950c-361">To synchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4950c-362">En el ejemplo siguiente se crea un <xref:System.Speech.Synthesis.PromptBuilder> objeto de una cadena y el objeto se pasa como argumento a la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4950c-362">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a PromptBuilder object and append a text string.  
      PromptBuilder song = new PromptBuilder();  
      song.AppendText("Say the name of the song you want to hear");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(song);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="4950c-363">Texto para hablar.</span><span class="sxs-lookup"><span data-stu-id="4950c-363">The text to speak.</span></span></param>
        <summary><span data-ttu-id="4950c-364">De forma asincrónica habla el contenido de una cadena.</span><span class="sxs-lookup"><span data-stu-id="4950c-364">Asynchronously speaks the contents of a string.</span></span></summary>
        <returns><span data-ttu-id="4950c-365">Devuelve el objeto que contiene el contenido para hablar.</span><span class="sxs-lookup"><span data-stu-id="4950c-365">Returns the object that contains the content to speak.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-366">Para hablar de forma asincrónica una cadena que contiene el marcado SSML, use la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4950c-366">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="4950c-367">Para hablar de forma sincrónica el contenido de una cadena, utilice el <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4950c-367">To synchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span> <span data-ttu-id="4950c-368">Puede cancelar la hablando asincrónica de un símbolo del sistema con el <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4950c-368">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4950c-369">Como se muestra en el ejemplo siguiente, la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> método proporciona los medios más simples para generar la voz de forma asincrónica de salida.</span><span class="sxs-lookup"><span data-stu-id="4950c-369">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method provides the simplest means to generate speech output asynchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.Speak" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancel">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancel (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancel(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancel(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt"><span data-ttu-id="4950c-370">El contenido para el que se va a cancelar una operación de habla.</span><span class="sxs-lookup"><span data-stu-id="4950c-370">The content for which to cancel a speak operation.</span></span></param>
        <summary><span data-ttu-id="4950c-371">Cancela la operación asincrónica de síntesis para un mensaje en cola.</span><span class="sxs-lookup"><span data-stu-id="4950c-371">Cancels the asynchronous synthesis operation for a queued prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-372">También puede utilizar este método para cancelar una asincrónica hablan operación para lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="4950c-372">You can also use this method to cancel an asynchronous speak operation for the following:</span></span>  
  
-   <span data-ttu-id="4950c-373">El contenido de un <xref:System.String> especificado por un <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="4950c-373">The contents of a <xref:System.String> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="4950c-374">El contenido de un <xref:System.Speech.Synthesis.PromptBuilder> especificado por un <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="4950c-374">The contents of a <xref:System.Speech.Synthesis.PromptBuilder> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="4950c-375">El contenido de un <xref:System.String> que contiene SSML especificado por un <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4950c-375">The contents of a <xref:System.String> containing SSML specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span>  
  
 <span data-ttu-id="4950c-376">Cuando se llama a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>, System.Speech crea un <xref:System.Speech.Synthesis.Prompt> objeto y lo rellena con el contenido del parámetro del método y devuelve el <xref:System.Speech.Synthesis.Prompt> objeto.</span><span class="sxs-lookup"><span data-stu-id="4950c-376">When you call <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>, System.Speech creates a <xref:System.Speech.Synthesis.Prompt> object and populates it with the contents of the method's parameter, and returns the <xref:System.Speech.Synthesis.Prompt> object.</span></span> <span data-ttu-id="4950c-377">Si mantiene una copia de devuelto <xref:System.Speech.Synthesis.Prompt>, puede pasar en <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> para cancelar habla contenido especificado en un <xref:System.String> o un <xref:System.Speech.Synthesis.PromptBuilder> objeto.</span><span class="sxs-lookup"><span data-stu-id="4950c-377">If you retain a copy of the returned <xref:System.Speech.Synthesis.Prompt>, you can pass it into <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> to cancel speaking content specified in a <xref:System.String> or a <xref:System.Speech.Synthesis.PromptBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancelAll">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancelAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancelAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakAsyncCancelAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancelAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4950c-378">Cancela todas las operaciones de síntesis de voz asincrónicas que hay en cola.</span><span class="sxs-lookup"><span data-stu-id="4950c-378">Cancels all queued, asynchronous, speech synthesis operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4950c-379">En el ejemplo siguiente se muestra un uso de <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> para cancelar la hablando asincrónica de un símbolo del sistema, por lo que se puede hablar un nuevo símbolo del sistema.</span><span class="sxs-lookup"><span data-stu-id="4950c-379">The following example show a use of <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> to cancel the asynchronous speaking of a prompt, so that a new prompt can be spoken.</span></span> <span data-ttu-id="4950c-380">Tenga en cuenta que la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> evento desencadena cuando un <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> se cancela la operación.</span><span class="sxs-lookup"><span data-stu-id="4950c-380">Note that the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event fires when a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation is cancelled.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Threading;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the StateChanged event.  
      synth.StateChanged += new EventHandler<StateChangedEventArgs>(synth_StateChanged);  
  
      // Subscribe to the SpeakProgress event.  
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Subscribe to the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Begin speaking a text string asynchronously.  
      synth.SpeakAsync("Speech is an effective and natural way for people to interact with applications, " +  
        "complementing or even replacing the use of mice, keyboards, controllers, and gestures.");  
  
      // Speak for four seconds.  
      Thread.Sleep(4000);  
  
      // Cancel the SpeakAsync operation and wait one second.  
      synth.SpeakAsyncCancelAll();  
      Thread.Sleep(1000);  
  
      // Speak a new text string.  
      synth.Speak("An urgent email message has arrived. Do you want to hear it?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write to the console when the SpeakAsync operation has been cancelled.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
      Console.WriteLine("\nThe SpeakAsync operation was cancelled!!");  
    }  
  
    // When it changes, write the state of the SpeechSynthesizer to the console.  
    static void synth_StateChanged(object sender, StateChangedEventArgs e)  
    {  
      Console.WriteLine("\nSynthesizer State: {0}    Previous State: {1}\n", e.State, e.PreviousState);  
    }  
  
    // Write the text being spoken by the SpeechSynthesizer to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }      
  }    
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakCompleted As EventHandler(Of SpeakCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakCompletedEventArgs ^&gt; ^ SpeakCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4950c-381">Se genera cuando <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> termina de leer un mensaje.</span><span class="sxs-lookup"><span data-stu-id="4950c-381">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> completes the speaking of a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-382">El <xref:System.Speech.Synthesis.SpeechSynthesizer> provoca la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> el evento en la finalización de cualquiera de los <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="4950c-382">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event at the completion of any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> or  <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="4950c-383">El <xref:System.Speech.Synthesis.SpeakCompletedEventArgs> clase no tiene propiedades y no devuelve datos desde el <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> eventos.</span><span class="sxs-lookup"><span data-stu-id="4950c-383">The <xref:System.Speech.Synthesis.SpeakCompletedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span> <span data-ttu-id="4950c-384">Se proporciona para habilitar los autores de aplicaciones escribir controladores de eventos para el <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> eventos.</span><span class="sxs-lookup"><span data-stu-id="4950c-384">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.SpeakCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SpeakProgress">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakProgress As EventHandler(Of SpeakProgressEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakProgressEventArgs ^&gt; ^ SpeakProgress;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4950c-385">Se genera después de que <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> hable cada palabra concreta de un mensaje.</span><span class="sxs-lookup"><span data-stu-id="4950c-385">Raised after the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> speaks each individual word of a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-386">El <xref:System.Speech.Synthesis.SpeechSynthesizer> genera este evento para cada palabra nueva que habla en un símbolo del sistema mediante cualquiera de los <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="4950c-386">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event for each new word that it speaks in a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="4950c-387">Para obtener un ejemplo y obtener más información acerca de los datos asociados al evento, vea <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="4950c-387">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakSsml">
      <MemberSignature Language="C#" Value="public void SpeakSsml (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakSsml(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakSsml (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakSsml(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="4950c-388">Cadena SSML para hablar.</span><span class="sxs-lookup"><span data-stu-id="4950c-388">The SSML string to speak.</span></span></param>
        <summary><span data-ttu-id="4950c-389">De forma sincrónica habla un <see cref="T:System.String" /> que contiene el marcado SSML.</span><span class="sxs-lookup"><span data-stu-id="4950c-389">Synchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-390">El contenido de la `textToSpeak` parámetro debe incluir un `speak` elemento y debe ajustarse a la [lenguaje de marcado de síntesis de voz (SSML) versión 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="4950c-390">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="4950c-391">Para obtener más información, consulte [referencia del lenguaje de marcado de síntesis de voz](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span><span class="sxs-lookup"><span data-stu-id="4950c-391">For more information, see [Speech Synthesis Markup Language Reference](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="4950c-392">Para hablar de forma asincrónica una cadena que contiene el marcado SSML, use la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4950c-392">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="4950c-393">Puede usar <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> para iniciar el habla sincrónica de una cadena que no contiene el marcado SSML.</span><span class="sxs-lookup"><span data-stu-id="4950c-393">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> to initiate the synchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="4950c-394">Durante una llamada a este método, el <xref:System.Speech.Synthesis.SpeechSynthesizer> puede provocar los eventos siguientes:</span><span class="sxs-lookup"><span data-stu-id="4950c-394">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="4950c-395"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="4950c-395"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="4950c-396">Se produce cuando cambia el estado de habla del sintetizador.</span><span class="sxs-lookup"><span data-stu-id="4950c-396">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="4950c-397"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="4950c-397"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="4950c-398">Se genera cuando el sintetizador empiece a generar la voz.</span><span class="sxs-lookup"><span data-stu-id="4950c-398">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="4950c-399"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="4950c-399"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="4950c-400">Genera cada vez que el sintetizador alcanza una letra o una combinación de letras que constituyen un sonido discreto de voz en un idioma.</span><span class="sxs-lookup"><span data-stu-id="4950c-400">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="4950c-401"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="4950c-401"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="4950c-402">Se desencadena cada vez que el sintetizador completa habla una palabra.</span><span class="sxs-lookup"><span data-stu-id="4950c-402">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="4950c-403"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="4950c-403"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="4950c-404">Genera cada vez salida de voz requiere un cambio en la posición de la boca o los músculos faciales que se usa para generar la voz.</span><span class="sxs-lookup"><span data-stu-id="4950c-404">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="4950c-405"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="4950c-405"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="4950c-406">Se desencadena cuando el sintetizador encuentra un marcador en un símbolo del sistema.</span><span class="sxs-lookup"><span data-stu-id="4950c-406">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="4950c-407"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="4950c-407"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="4950c-408">Se produce cuando cambia el tono de voz para el sintetizador.</span><span class="sxs-lookup"><span data-stu-id="4950c-408">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="4950c-409">El <xref:System.Speech.Synthesis.SpeechSynthesizer> no provoca la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> eventos mientras se procesaba la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4950c-409">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4950c-410">En el ejemplo siguiente se presenta la fecha 1/29/2009, como una fecha, mes, día, orden de año.</span><span class="sxs-lookup"><span data-stu-id="4950c-410">The following example renders the date 1/29/2009 as a date, in month, day, year order.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakSsml(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakSsmlAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakSsmlAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakSsmlAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakSsmlAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakSsmlAsync(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="4950c-411">El marcado de SMML para hablar.</span><span class="sxs-lookup"><span data-stu-id="4950c-411">The SMML markup to speak.</span></span></param>
        <summary><span data-ttu-id="4950c-412">De forma asincrónica habla un <see cref="T:System.String" /> que contiene el marcado SSML.</span><span class="sxs-lookup"><span data-stu-id="4950c-412">Asynchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-413">El contenido de la `textToSpeak` parámetro debe incluir un `speak` elemento y debe ajustarse a la [lenguaje de marcado de síntesis de voz (SSML) versión 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="4950c-413">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="4950c-414">Para obtener más información, consulte [referencia del lenguaje de marcado de síntesis de voz](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span><span class="sxs-lookup"><span data-stu-id="4950c-414">For more information, see [Speech Synthesis Markup Language Reference](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="4950c-415">Para hablar de forma sincrónica una cadena que contiene el marcado SSML, use la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4950c-415">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="4950c-416">Puede usar <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> para iniciar el habla asincrónica de una cadena que no contiene el marcado SSML.</span><span class="sxs-lookup"><span data-stu-id="4950c-416">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> to initiate the asynchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="4950c-417">Durante una llamada a este método, el <xref:System.Speech.Synthesis.SpeechSynthesizer> puede provocar los eventos siguientes:</span><span class="sxs-lookup"><span data-stu-id="4950c-417">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="4950c-418"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="4950c-418"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="4950c-419">Se produce cuando cambia el estado de habla del sintetizador.</span><span class="sxs-lookup"><span data-stu-id="4950c-419">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="4950c-420"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="4950c-420"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="4950c-421">Se genera cuando el sintetizador empiece a generar la voz.</span><span class="sxs-lookup"><span data-stu-id="4950c-421">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="4950c-422"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="4950c-422"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="4950c-423">Genera cada vez que el sintetizador alcanza una letra o una combinación de letras que constituyen un sonido discreto de voz en un idioma.</span><span class="sxs-lookup"><span data-stu-id="4950c-423">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="4950c-424"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="4950c-424"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="4950c-425">Se desencadena cada vez que el sintetizador completa habla una palabra.</span><span class="sxs-lookup"><span data-stu-id="4950c-425">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="4950c-426"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="4950c-426"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="4950c-427">Genera cada vez salida de voz requiere un cambio en la posición de la boca o los músculos faciales que se usa para generar la voz.</span><span class="sxs-lookup"><span data-stu-id="4950c-427">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="4950c-428"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="4950c-428"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="4950c-429">Se desencadena cuando el sintetizador encuentra un marcador en un símbolo del sistema.</span><span class="sxs-lookup"><span data-stu-id="4950c-429">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="4950c-430"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="4950c-430"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="4950c-431">Se produce cuando cambia el tono de voz para el sintetizador.</span><span class="sxs-lookup"><span data-stu-id="4950c-431">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="4950c-432"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span><span class="sxs-lookup"><span data-stu-id="4950c-432"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="4950c-433">Se produce cuando el sintetizador termina el procesamiento una <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> operación.</span><span class="sxs-lookup"><span data-stu-id="4950c-433">Raised when the synthesizer finishes processing a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="4950c-434">Si los dos de la aplicación no necesitan realizar tareas mientras habla, puede usar el <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> método para generar la voz sincrónicamente.</span><span class="sxs-lookup"><span data-stu-id="4950c-434">If your application dos not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
   
  
## Examples  
  
```  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakSsmlAsync(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakStarted As EventHandler(Of SpeakStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakStartedEventArgs ^&gt; ^ SpeakStarted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4950c-435">Se genera cuando <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> comienza a leer un mensaje.</span><span class="sxs-lookup"><span data-stu-id="4950c-435">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> begins the speaking of a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-436">El <xref:System.Speech.Synthesis.SpeechSynthesizer> genera este evento cuando comienza a procesar un símbolo del sistema mediante cualquiera de los <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="4950c-436">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when it begins processing a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="4950c-437">El <xref:System.Speech.Synthesis.SpeakStartedEventArgs> clase no tiene propiedades y no devuelve datos desde el <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> eventos.</span><span class="sxs-lookup"><span data-stu-id="4950c-437">The <xref:System.Speech.Synthesis.SpeakStartedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span> <span data-ttu-id="4950c-438">Se proporciona para habilitar los autores de aplicaciones escribir controladores de eventos para el <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> eventos.</span><span class="sxs-lookup"><span data-stu-id="4950c-438">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.SynthesizerState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.SynthesizerState State" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As SynthesizerState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::SynthesizerState State { System::Speech::Synthesis::SynthesizerState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.SynthesizerState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4950c-439">Obtiene el estado de habla actual del objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="4950c-439">Gets the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="4950c-440">Devuelve el estado actual de habla del objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="4950c-440">Returns the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-441">Para obtener el nuevo estado de la <xref:System.Speech.Synthesis.SpeechSynthesizer> después del cambio, use la <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> propiedad de la <xref:System.Speech.Synthesis.StateChangedEventArgs> clase.</span><span class="sxs-lookup"><span data-stu-id="4950c-441">To get the new state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> after it changes, use the <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> property of the <xref:System.Speech.Synthesis.StateChangedEventArgs> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4950c-442">En el ejemplo siguiente se muestra el estado de la <xref:System.Speech.Synthesis.SpeechSynthesizer> antes, durante y después de hablar un símbolo del sistema.</span><span class="sxs-lookup"><span data-stu-id="4950c-442">The following example illustrates the state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> before, during, and after speaking a prompt.</span></span>  
  
```csharp  
using System;  
using System.Threading;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer() ;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the SpeakProgress event.         
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Write the state of the SpeechSynthesizer to the console.  
      Console.WriteLine("Current Synthesizer state: " + synth.State + "\n");  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      // Write the state of the SpeechSynthesizer to the console while it is speaking.  
      Thread.Sleep(1000);  
      Console.WriteLine("\n - Current Synthesizer state: " + synth.State + " - \n");  
  
      // Write the state of the SpeechSynthesizer to the console after it is done speaking.  
      Thread.Sleep(2000);  
      Console.WriteLine("\nCurrent Synthesizer state: " + synth.State);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChanged As EventHandler(Of StateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::StateChangedEventArgs ^&gt; ^ StateChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4950c-443">Se genera cuando cambia el estado de <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="4950c-443">Raised when the state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-444">El <xref:System.Speech.Synthesis.SpeechSynthesizer> genera este evento cuando su habla <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> cambios.</span><span class="sxs-lookup"><span data-stu-id="4950c-444">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when its speaking <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> changes.</span></span> <span data-ttu-id="4950c-445">Para obtener un ejemplo y obtener más información acerca de los datos asociados al evento, vea <xref:System.Speech.Synthesis.StateChangedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="4950c-445">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.StateChangedEventArgs>.</span></span>  
  
 <span data-ttu-id="4950c-446">Para pausar y reanudar la síntesis de voz, utilice el <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> y <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="4950c-446">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="VisemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VisemeReached As EventHandler(Of VisemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VisemeReachedEventArgs ^&gt; ^ VisemeReached;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4950c-447">Se genera cuando se alcanza un visema.</span><span class="sxs-lookup"><span data-stu-id="4950c-447">Raised when a viseme is reached.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-448">Un viseme es la posición básica de la boca y de cara al pronunciar el fonema.</span><span class="sxs-lookup"><span data-stu-id="4950c-448">A viseme is the basic position of the mouth and face when pronouncing a phoneme.</span></span> <span data-ttu-id="4950c-449">Visemes son representaciones visuales de fonemas.</span><span class="sxs-lookup"><span data-stu-id="4950c-449">Visemes are visual representations of phonemes.</span></span>  
  
 <span data-ttu-id="4950c-450">System.Speech admite 21 visemes para inglés de Estados Unidos, cada uno de los cuales corresponde a uno o más fonemas.</span><span class="sxs-lookup"><span data-stu-id="4950c-450">System.Speech supports 21 visemes for US English, each of which corresponds to one or more phonemes.</span></span>  <span data-ttu-id="4950c-451"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> se generan eventos cuando un nuevo fonema alcanzado tiene un viseme correspondiente diferente que el fonema anterior alcanzado.</span><span class="sxs-lookup"><span data-stu-id="4950c-451"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> events are raised when a new phoneme reached has a different corresponding viseme than the previous phoneme reached.</span></span> <span data-ttu-id="4950c-452">Puesto que algunos visemes representan más de un fonema, un <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> evento no se genera si el fonema siguiente alcanzado corresponde a la misma viseme como el fonema anterior.</span><span class="sxs-lookup"><span data-stu-id="4950c-452">Since some visemes represent more than one phoneme, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not generated if the next phoneme reached corresponds to the same viseme as the previous phoneme.</span></span> <span data-ttu-id="4950c-453">Por ejemplo, para las palabras "esta zona", un <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> evento se desencadena para la "s" de "this" y "z" en "zona".</span><span class="sxs-lookup"><span data-stu-id="4950c-453">For example, for the spoken words "this zone", a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event is raised for the "s" in "this" and the "z" in "zone".</span></span> <span data-ttu-id="4950c-454">Sin embargo, un <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> no se produce el evento para la "z" en "zona" porque se corresponde con el mismo viseme como la "s" de "this".</span><span class="sxs-lookup"><span data-stu-id="4950c-454">However, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not raised for the "z" in "zone" because it corresponds to the same viseme as the "s" in "this".</span></span>  
  
 <span data-ttu-id="4950c-455">La siguiente es una lista de los grupos de fonema que corresponden a un viseme en inglés de Estados Unidos y 21 fonemas SAPI.</span><span class="sxs-lookup"><span data-stu-id="4950c-455">The following is a list of the 21 SAPI phonemes and phoneme groups that correspond to a viseme in US English.</span></span>  
  
|<span data-ttu-id="4950c-456">Viseme</span><span class="sxs-lookup"><span data-stu-id="4950c-456">Viseme</span></span>|<span data-ttu-id="4950c-457">Phoneme(s)</span><span class="sxs-lookup"><span data-stu-id="4950c-457">Phoneme(s)</span></span>|  
|------------|------------------|  
|<span data-ttu-id="4950c-458">0</span><span class="sxs-lookup"><span data-stu-id="4950c-458">0</span></span>|<span data-ttu-id="4950c-459">Silencio</span><span class="sxs-lookup"><span data-stu-id="4950c-459">silence</span></span>|  
|<span data-ttu-id="4950c-460">1</span><span class="sxs-lookup"><span data-stu-id="4950c-460">1</span></span>|<span data-ttu-id="4950c-461">AE, ax, ah</span><span class="sxs-lookup"><span data-stu-id="4950c-461">ae, ax, ah</span></span>|  
|<span data-ttu-id="4950c-462">2</span><span class="sxs-lookup"><span data-stu-id="4950c-462">2</span></span>|<span data-ttu-id="4950c-463">aa</span><span class="sxs-lookup"><span data-stu-id="4950c-463">aa</span></span>|  
|<span data-ttu-id="4950c-464">3</span><span class="sxs-lookup"><span data-stu-id="4950c-464">3</span></span>|<span data-ttu-id="4950c-465">ao</span><span class="sxs-lookup"><span data-stu-id="4950c-465">ao</span></span>|  
|<span data-ttu-id="4950c-466">4</span><span class="sxs-lookup"><span data-stu-id="4950c-466">4</span></span>|<span data-ttu-id="4950c-467">EY, eh, ¡</span><span class="sxs-lookup"><span data-stu-id="4950c-467">ey, eh, uh</span></span>|  
|<span data-ttu-id="4950c-468">5</span><span class="sxs-lookup"><span data-stu-id="4950c-468">5</span></span>|<span data-ttu-id="4950c-469">ER</span><span class="sxs-lookup"><span data-stu-id="4950c-469">er</span></span>|  
|<span data-ttu-id="4950c-470">6</span><span class="sxs-lookup"><span data-stu-id="4950c-470">6</span></span>|<span data-ttu-id="4950c-471">y, iy, ih, ix</span><span class="sxs-lookup"><span data-stu-id="4950c-471">y, iy, ih, ix</span></span>|  
|<span data-ttu-id="4950c-472">7</span><span class="sxs-lookup"><span data-stu-id="4950c-472">7</span></span>|<span data-ttu-id="4950c-473">w, uw</span><span class="sxs-lookup"><span data-stu-id="4950c-473">w, uw</span></span>|  
|<span data-ttu-id="4950c-474">8</span><span class="sxs-lookup"><span data-stu-id="4950c-474">8</span></span>|<span data-ttu-id="4950c-475">Permitir</span><span class="sxs-lookup"><span data-stu-id="4950c-475">ow</span></span>|  
|<span data-ttu-id="4950c-476">9</span><span class="sxs-lookup"><span data-stu-id="4950c-476">9</span></span>|<span data-ttu-id="4950c-477">aw</span><span class="sxs-lookup"><span data-stu-id="4950c-477">aw</span></span>|  
|<span data-ttu-id="4950c-478">10</span><span class="sxs-lookup"><span data-stu-id="4950c-478">10</span></span>|<span data-ttu-id="4950c-479">Oy</span><span class="sxs-lookup"><span data-stu-id="4950c-479">oy</span></span>|  
|<span data-ttu-id="4950c-480">11</span><span class="sxs-lookup"><span data-stu-id="4950c-480">11</span></span>|<span data-ttu-id="4950c-481">cualquier</span><span class="sxs-lookup"><span data-stu-id="4950c-481">ay</span></span>|  
|<span data-ttu-id="4950c-482">12</span><span class="sxs-lookup"><span data-stu-id="4950c-482">12</span></span>|<span data-ttu-id="4950c-483">h</span><span class="sxs-lookup"><span data-stu-id="4950c-483">h</span></span>|  
|<span data-ttu-id="4950c-484">13</span><span class="sxs-lookup"><span data-stu-id="4950c-484">13</span></span>|<span data-ttu-id="4950c-485">c</span><span class="sxs-lookup"><span data-stu-id="4950c-485">r</span></span>|  
|<span data-ttu-id="4950c-486">14</span><span class="sxs-lookup"><span data-stu-id="4950c-486">14</span></span>|<span data-ttu-id="4950c-487">l</span><span class="sxs-lookup"><span data-stu-id="4950c-487">l</span></span>|  
|<span data-ttu-id="4950c-488">15</span><span class="sxs-lookup"><span data-stu-id="4950c-488">15</span></span>|<span data-ttu-id="4950c-489">s, z</span><span class="sxs-lookup"><span data-stu-id="4950c-489">s, z</span></span>|  
|<span data-ttu-id="4950c-490">16</span><span class="sxs-lookup"><span data-stu-id="4950c-490">16</span></span>|<span data-ttu-id="4950c-491">sh, ch, jh, zh</span><span class="sxs-lookup"><span data-stu-id="4950c-491">sh, ch, jh, zh</span></span>|  
|<span data-ttu-id="4950c-492">17</span><span class="sxs-lookup"><span data-stu-id="4950c-492">17</span></span>|<span data-ttu-id="4950c-493">TH, dh</span><span class="sxs-lookup"><span data-stu-id="4950c-493">th, dh</span></span>|  
|<span data-ttu-id="4950c-494">18</span><span class="sxs-lookup"><span data-stu-id="4950c-494">18</span></span>|<span data-ttu-id="4950c-495">f "," v</span><span class="sxs-lookup"><span data-stu-id="4950c-495">f, v</span></span>|  
|<span data-ttu-id="4950c-496">19</span><span class="sxs-lookup"><span data-stu-id="4950c-496">19</span></span>|<span data-ttu-id="4950c-497">d, t, n</span><span class="sxs-lookup"><span data-stu-id="4950c-497">d, t, n</span></span>|  
|<span data-ttu-id="4950c-498">20</span><span class="sxs-lookup"><span data-stu-id="4950c-498">20</span></span>|<span data-ttu-id="4950c-499">k, g, ng</span><span class="sxs-lookup"><span data-stu-id="4950c-499">k, g, ng</span></span>|  
|<span data-ttu-id="4950c-500">21</span><span class="sxs-lookup"><span data-stu-id="4950c-500">21</span></span>|<span data-ttu-id="4950c-501">p, b, m</span><span class="sxs-lookup"><span data-stu-id="4950c-501">p, b, m</span></span>|  
  
 <span data-ttu-id="4950c-502">Para obtener información acerca de los datos asociados con el `VisemeReached` eventos, vea <xref:System.Speech.Synthesis.VisemeReachedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="4950c-502">For information about data associated with the `VisemeReached` event, see <xref:System.Speech.Synthesis.VisemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Voice">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.VoiceInfo Voice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Synthesis.VoiceInfo Voice" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Voice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Voice As VoiceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::VoiceInfo ^ Voice { System::Speech::Synthesis::VoiceInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.VoiceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4950c-503">Obtiene información acerca de la voz actual del objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="4950c-503">Gets information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="4950c-504">Devuelve información acerca de la voz actual del objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="4950c-504">Returns information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-505">Al inicializar una nueva <xref:System.Speech.Synthesis.SpeechSynthesizer>, usa la voz del sistema de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="4950c-505">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer>, it uses the default system voice.</span></span> <span data-ttu-id="4950c-506">Para configurar el <xref:System.Speech.Synthesis.SpeechSynthesizer> objeto para utilizar una de las voces de síntesis de voz instalada, use la <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> o <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4950c-506">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> object to use one of the installed speech synthesis voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="4950c-507">Para obtener información sobre los cuales se instalan las voces, use la <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> método y la <xref:System.Speech.Synthesis.VoiceInfo> clase.</span><span class="sxs-lookup"><span data-stu-id="4950c-507">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4950c-508">En el ejemplo siguiente se inicializa una instancia de <xref:System.Speech.Synthesis.SpeechSynthesizer> y obtiene información sobre la voz actual.</span><span class="sxs-lookup"><span data-stu-id="4950c-508">The following example initializes an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer> and gets information about the current voice.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Get information about supported audio formats.  
        string AudioFormats = "";  
        foreach (SpeechAudioFormatInfo fmt in synth.Voice.SupportedAudioFormats)  
        {  
          AudioFormats += String.Format("{0}\n",  
          fmt.EncodingFormat.ToString());  
        }  
  
        // Write information about the voice to the console.  
        Console.WriteLine(" Name:          " + synth.Voice.Name);  
        Console.WriteLine(" Culture:       " + synth.Voice.Culture);  
        Console.WriteLine(" Age:           " + synth.Voice.Age);  
        Console.WriteLine(" Gender:        " + synth.Voice.Gender);  
        Console.WriteLine(" Description:   " + synth.Voice.Description);  
        Console.WriteLine(" ID:            " + synth.Voice.Id);  
        if (synth.Voice.SupportedAudioFormats.Count != 0)  
        {  
          Console.WriteLine(" Audio formats: " + AudioFormats);  
        }  
        else  
        {  
          Console.WriteLine(" No supported audio formats found");  
        }  
  
        // Get additional information about the voice.  
        string AdditionalInfo = "";  
        foreach (string key in synth.Voice.AdditionalInfo.Keys)  
        {  
          AdditionalInfo += String.Format("  {0}: {1}\n",  
            key, synth.Voice.AdditionalInfo[key]);  
        }  
  
        Console.WriteLine(" Additional Info - " + AdditionalInfo);  
        Console.WriteLine();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </Member>
    <Member MemberName="VoiceChange">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VoiceChange As EventHandler(Of VoiceChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VoiceChangeEventArgs ^&gt; ^ VoiceChange;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4950c-509">Se genera cuando cambia la voz de <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="4950c-509">Raised when the voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4950c-510">Para un ejemplo y obtener información acerca de los datos asociados al evento, consulte <xref:System.Speech.Synthesis.VoiceChangeEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="4950c-510">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.VoiceChangeEventArgs>.</span></span>  
  
 <span data-ttu-id="4950c-511">Puede cambiar la voz que el <xref:System.Speech.Synthesis.SpeechSynthesizer> utiliza con cualquiera de los <xref:System.Speech.Synthesis.PromptBuilder>del <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> métodos o <xref:System.Speech.Synthesis.SpeechSynthesizer>del <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> o <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="4950c-511">You can change the voice that the <xref:System.Speech.Synthesis.SpeechSynthesizer> uses with any of the <xref:System.Speech.Synthesis.PromptBuilder>'s <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Volume">
      <MemberSignature Language="C#" Value="public int Volume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Volume" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Volume" />
      <MemberSignature Language="VB.NET" Value="Public Property Volume As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Volume { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4950c-512">Obtiene o establece el volumen de salida del objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="4950c-512">Get or sets the output volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="4950c-513">Devuelve el volumen de <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, de 0 a 100.</span><span class="sxs-lookup"><span data-stu-id="4950c-513">Returns the volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, from 0 through 100.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4950c-514">En el ejemplo siguiente se establece el volumen de la <xref:System.Speech.Synthesis.SpeechSynthesizer>de la salida de audio para la voz sintetizada y el archivo WAV.</span><span class="sxs-lookup"><span data-stu-id="4950c-514">The following example sets the volume of the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s audio output for the synthesized voice and the WAV file.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Set the volume of the SpeechSynthesizer's ouput.  
        synth.Volume = 60;  
  
        // Build a prompt containing recorded audio and synthesized speech.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendAudio("C:\\Test\\WelcomeToContosoRadio.wav");  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>