<Type Name="IDuplexSession" FullName="System.ServiceModel.Channels.IDuplexSession">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="89db8df12be0427a200fdb3f6b65d6b7b48cb5e1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30506529" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDuplexSession : System.ServiceModel.Channels.IInputSession, System.ServiceModel.Channels.IOutputSession" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDuplexSession implements class System.ServiceModel.Channels.IInputSession, class System.ServiceModel.Channels.IOutputSession, class System.ServiceModel.Channels.ISession" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IDuplexSession" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDuplexSession&#xA;Implements IInputSession, IOutputSession" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDuplexSession : System::ServiceModel::Channels::IInputSession, System::ServiceModel::Channels::IOutputSession" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IInputSession</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IOutputSession</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Define la interfaz para la sesión implementada en cada lado de una comunicación bidireccional entre los puntos de conexión de la mensajería.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La interfaz <xref:System.ServiceModel.Channels.IDuplexSession> es la unión de la sesión entrante, definida por la interfaz <xref:System.ServiceModel.Channels.IInputSession>, y la sesión saliente, definida por la interfaz <xref:System.ServiceModel.Channels.IOutputSession>. O bien la sesión entrante o bien la sesión saliente se puede finalizar independientemente de la otra. La sesión saliente se puede finalizar sincrónicamente llamando a <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> o de forma asincrónica llamando a <xref:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession%2A>.  
  
 Se puede finalizar la sesión entrante de forma remota. <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> asociado a la sesión entrante empieza a devolver `null` cuando esa sesión está apagada.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginCloseOutputSession">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Comienza una operación asincrónica para finalizar la sesión saliente.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCloseOutputSession">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCloseOutputSession (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCloseOutputSession(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCloseOutputSession (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCloseOutputSession(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Delegado <see cref="T:System.AsyncCallback" />.</param>
        <param name="state">Objeto <see langword="object" /> que contiene información de estado para esta solicitud.</param>
        <summary>Comienza una operación asincrónica para finalizar la sesión saliente.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> que hace referencia a la finalización de la sesión saliente asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Finalizar la sesión saliente no afecta a la sesión de entrada, así que no realiza ninguna declaración sobre la capacidad de recibir los mensajes en la sesión asociada al canal de entrada. Esta operación debe completarse dentro de un intervalo de tiempo predeterminado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCloseOutputSession">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCloseOutputSession (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCloseOutputSession(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCloseOutputSession (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCloseOutputSession(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <see cref="T:System.TimeSpan" /> que especifica el intervalo de tiempo dentro del cual la operación debe completarse.</param>
        <param name="callback">Delegado <see cref="T:System.AsyncCallback" />.</param>
        <param name="state">Objeto <see langword="object" /> que contiene información de estado para esta solicitud.</param>
        <summary>Comienza una operación asincrónica para finalizar la sesión saliente con un tiempo de espera especificado dentro del que la operación debe completarse.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> que hace referencia a la finalización de la sesión saliente asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Finalizar la sesión saliente no afecta a la sesión de entrada, así que no realiza ninguna declaración sobre la capacidad de recibir los mensajes en la sesión asociada al canal de entrada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CloseOutputSession">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Finaliza la sesión saliente que indica que no se enviarán más mensajes desde este extremo del canal asociado a la sesión.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="public void CloseOutputSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutputSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseOutputSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseOutputSession();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finaliza la sesión saliente que indica que no se enviarán más mensajes desde este extremo del canal asociado a la sesión.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al llamar a <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession> señales al otro lado de la sesión que debe devolver `null` desde cualquier pendientes o posteriormente las llamadas realizadas a <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>. <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> es idempotente, así que llamarlo de nuevo no sirve de nada.  
  
 Finalizar la sesión saliente no afecta a la sesión de entrada, así que no realiza ninguna declaración sobre la capacidad de recibir los mensajes en la sesión asociada al canal de entrada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> es un método de sesión que puede interactuar con <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> que posee la sesión. En particular, si la duración de su sesión se junta con la duración del canal (como con TCP y sesión confiable y seguridad):  
  
-   Si se llama <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> antes de que se llame <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> en el canal, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> debería esperar a que <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> finalice.  
  
-   Si el canal está en el estado <see cref="F:System.ServiceModel.CommunicationState.Created" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" />, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> debería iniciar <see cref="T:System.InvalidOperationException" />.  
  
-   Si el canal está en el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> debería iniciar <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.  
  
-   El canal debería generar un error si se inicia <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />.  
  
-   La implementación de <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> en el canal debería llamar a <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> y a continuación comprobar que <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> devuelve <see langword="null" />, lo que indica que se llamó a <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> desde el otro lado de la sesión.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="public void CloseOutputSession (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutputSession(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseOutputSession (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseOutputSession(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <see cref="T:System.TimeSpan" /> que especifica el intervalo de tiempo dentro del cual la operación debe completarse.</param>
        <summary>Finaliza la sesión saliente que indica que no se enviarán más mensajes desde este punto de conexión del canal asociado a la sesión dentro de un intervalo de tiempo especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al llamar a <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%28System.TimeSpan%29> señales al otro lado de la sesión que debe devolver `null` desde cualquier pendientes o posteriormente las llamadas realizadas a <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>. <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> es idempotente, así que llamarlo de nuevo no sirve de nada.  
  
 Finalizar la sesión saliente no afecta a la sesión de entrada, así que no realiza ninguna declaración sobre la capacidad de recibir los mensajes en la sesión asociada al canal de entrada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> es un método de sesión que puede interactuar con <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> que posee la sesión. En particular, si la duración de su sesión se junta con la duración del canal (como con TCP y sesión confiable y seguridad):  
  
-   Si se llama <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> antes de que se llame <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> en el canal, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> debería esperar a que <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> finalice.  
  
-   Si el canal está en el estado <see cref="F:System.ServiceModel.CommunicationState.Created" /> o <see cref="F:System.ServiceModel.CommunicationState.Opening" />, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> debería iniciar <see cref="T:System.InvalidOperationException" />.  
  
-   Si el canal está en el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> debería iniciar <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.  
  
-   El canal debería generar un error si se inicia <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />.  
  
-   La implementación de <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> en el canal debería llamar a <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> y a continuación comprobar que <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> devuelve <see langword="null" />, lo que indica que se llamó a <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> desde el otro lado de la sesión.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndCloseOutputSession">
      <MemberSignature Language="C#" Value="public void EndCloseOutputSession (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCloseOutputSession(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCloseOutputSession (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCloseOutputSession(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <see cref="T:System.IAsyncResult" /> devuelto por una llamada a uno de los métodos <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" />.</param>
        <summary>Completa una operación asincrónica para finalizar la sesión saliente que indica que no se enviarán más mensajes desde este punto de conexión del canal asociado a la sesión.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Finalizar la sesión saliente no afecta a la sesión de entrada, así que no realiza ninguna declaración sobre la capacidad de recibir los mensajes en la sesión asociada al canal de entrada  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>