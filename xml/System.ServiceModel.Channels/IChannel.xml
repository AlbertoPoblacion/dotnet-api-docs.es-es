<Type Name="IChannel" FullName="System.ServiceModel.Channels.IChannel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7763b5e6b6053cf529658656b5a81ef1df3bcc9f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36526023" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IChannel : System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannel implements class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IChannel" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChannel&#xA;Implements ICommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IChannel : System::ServiceModel::ICommunicationObject" />
  <TypeSignature Language="F#" Value="type IChannel = interface&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Define la interfaz básica que todos los objetos de canal deben implementar. Requiere que implementen la interfaz de equipo de estado compartida por todos los objetos de comunicación y que implementen un método para recuperar los objetos de la pila del canal.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los canales deben satisfacer el contrato de un equipo de estado, tal y como lo define la interfaz <xref:System.ServiceModel.ICommunicationObject>.  
  
 La interfaz <xref:System.ServiceModel.Channels.IChannel> agrega:  
  
 Método <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A> de la interfaz <xref:System.ServiceModel.ICommunicationObject>. Este método proporciona un mecanismo para recuperar las propiedades de la pila del canal sin tener en cuenta en qué parte de la pila residen esas propiedades. El término "propiedad" en el nombre de método hace referencia a una información que pertenece a uno de los canales en la pila. `T` determina el tipo CLR para esa propiedad. Este método de recuperación también se utiliza en los generadores del canal y agentes de escucha del canal.  
  
 Cada una de las interfaces de canal asociadas a los modelos básicos de intercambio de mensajes hereda `IChannel`:  
  
-   <xref:System.ServiceModel.Channels.IInputChannel> para recibir mensajes.  
  
-   <xref:System.ServiceModel.Channels.IOutputChannel> para enviar mensajes.  
  
-   <xref:System.ServiceModel.Channels.IRequestChannel> para enviar una solicitud.  
  
-   <xref:System.ServiceModel.Channels.IReplyChannel> para enviar una respuesta.  
  
-   <xref:System.ServiceModel.Channels.IDuplexChannel> para la mensajería bidireccional.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetProperty&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetProperty&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannel.GetProperty``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty(Of T As Class) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class T GetProperty();" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : unit -&gt; 'T (requires 'T : null)" Usage="iChannel.GetProperty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">El objeto con tipo que el método está consultando.</typeparam>
        <summary>Devuelve un objeto con tipo solicitado, si lo hay, de la capa adecuada de la pila de canales.</summary>
        <returns>El objeto escrito solicitado <paramref name="T" />, si está presente, o <see langword="null" /> si no lo está.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esto para solicitar un objeto escrito como una interfaz para establecer propiedades o recibir el estado de la capa adecuada en la pila del canal. Si una capa permite devolver el objeto solicitado, lo devuelve. Si no, delega la llamada bajando a la capa siguiente de la pila. Si se llega a la parte inferior de la pila y ninguna capa del canal permite el objeto solicitado, a continuación, el método devuelve `null`.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo se puede implementar esta propiedad mediante un canal que delega la llamada hacia abajo de la pila usando un`InnerChannel` propiedad que recupera el canal interno para este canal.  
  
 [!code-csharp[S_UEIChannel#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueichannel/cs/generatedclient.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>