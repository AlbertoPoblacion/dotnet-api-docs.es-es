<Type Name="SupportedAddressingMode" FullName="System.ServiceModel.Channels.SupportedAddressingMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1ae63748c67f545e380dccbb2d4ab05c995bd875" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37460102" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum SupportedAddressingMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SupportedAddressingMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.SupportedAddressingMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum SupportedAddressingMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class SupportedAddressingMode" />
  <TypeSignature Language="F#" Value="type SupportedAddressingMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Especifica si un servicio sólo permite enviar las respuestas a direcciones anónimas, a direcciones no anónimas o a ambas.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta enumeración se utiliza para especificar la capacidad de un servidor que, a su vez, impone un requisito a sus clientes.  
  
 Windows Communication Foundation (WCF) tiene una variedad de controles de direccionamiento para especificar dónde se deberían enviar los mensajes. Por ejemplo, existe la dirección lógica <xref:System.ServiceModel.Channels.MessageHeaders.To%2A> para el destino del mensaje, la dirección física ("A través de"), que se usa en el transporte, en el que un servicio realiza escuchas, y la dirección <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> del extremo que proporciona la dirección del extremo del cliente.  
  
 En el caso más básico, cuando dos partes sólo intercambian mensajes entre ellas, no es necesario especificar estas direcciones por separado. Pero como los intercambios pueden implicar a otros destinos del mensaje, debe poder especificar cuándo se deben proporcionar las direcciones explícitamente. En ocasiones, esta capacidad se requiere incluso entre sólo dos partes, como con HTTP dual donde el servidor debe crear su propia solicitud HTTP. La enumeración <xref:System.ServiceModel.Channels.SupportedAddressingMode> define los tipos siguientes de relaciones para capturar estos modelos de mensajería:  
  
-   Direcciones anónimas son la forma más básica de direccionamiento. El direccionamiento anónimo se utiliza cuando hay una ruta de acceso predeterminada para una respuesta. TCP es un transporte de comunicación bidireccional y la respuesta a un mensaje TCP se puede devolver al otro lado del socket que envió el mensaje original. De igual forma, el modelo de respuesta y solicitud de HTTP envía las respuestas a través del canal de respuesta de HTTP. Ninguna de estas respuestas requiere especificar a dónde van los mensajes de respuesta. Cuando un servidor requiere respuestas anónimas del cliente, usa el valor de la enumeración anónimo. WCF proporcionados por el sistema <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.BasicHttpBinding> y <xref:System.ServiceModel.WSHttpBinding> enlaces usan siempre direcciones anónimas.  
  
-   Las direcciones no anónimas se usan al enviar la respuesta requiere la creación de un nuevo canal de comunicación. WCF proporcionados por el sistema <xref:System.ServiceModel.WSDualHttpBinding> enlace utiliza una dirección no anónimas. Con HTTP dual, el cliente crea una solicitud HTTP para enviar un mensaje y, a continuación, el servidor debe crear su propia solicitud HTTP para enviar una respuesta. Dado que el servidor está iniciando el envío, debe tener un extremo específico para establecer la conexión. Debe proporcionar al servidor la dirección de un punto de conexión para su respuesta. De forma similar, si un servicio debe responder a un mensaje unidireccional que recibió, también se requiere un dirección porque no hay ningún canal secundario disponible para la comunicación. Si el servidor devuelve un mensaje, se requiere una operación completamente diferente a la utilizada para enviar el primer mensaje.  
  
-   Mixto es un tercer formato de direccionamiento que combina direcciones, anónima y según el mensaje que se va a enviar. Un ejemplo típico de direccionamiento de modo mixto es el uso de un equipo dedicado para procesar mensajes de error o confirmación. Si la secuencia de intercambio estándar para las respuestas es HTTP o TCP, las respuestas utilizan el direccionamiento anónimo, pero los errores utilizan el direccionamiento no anónimo. Mientras que WCF no proporcionan mixto direccionamiento funcionalidad en uno de sus enlaces estándares, es posible escribir un canal que permite que el servicio envíe respuestas directamente en el canal secundario (cuando la dirección de respuesta es anónimo) o en un canal independiente (cuando la dirección de respuesta es). En tal caso, el elemento de enlace del canal se usa para establecer <xref:System.ServiceModel.Channels.SupportedAddressingMode> en Mixed.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Anonymous">
      <MemberSignature Language="C#" Value="Anonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Anonymous = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Anonymous" />
      <MemberSignature Language="VB.NET" Value="Anonymous" />
      <MemberSignature Language="C++ CLI" Value="Anonymous" />
      <MemberSignature Language="F#" Value="Anonymous = 0" Usage="System.ServiceModel.Channels.SupportedAddressingMode.Anonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>El servidor sólo admite las direcciones anónimas y los clientes deben proporcionar una dirección de respuesta anónima.</summary>
      </Docs>
    </Member>
    <Member MemberName="Mixed">
      <MemberSignature Language="C#" Value="Mixed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Mixed = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Mixed" />
      <MemberSignature Language="VB.NET" Value="Mixed" />
      <MemberSignature Language="C++ CLI" Value="Mixed" />
      <MemberSignature Language="F#" Value="Mixed = 2" Usage="System.ServiceModel.Channels.SupportedAddressingMode.Mixed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>El servidor admite tanto direcciones anónimas como no anónimas, y los clientes pueden decidir utilizar una de las dos opciones o ambas.</summary>
      </Docs>
    </Member>
    <Member MemberName="NonAnonymous">
      <MemberSignature Language="C#" Value="NonAnonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode NonAnonymous = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous" />
      <MemberSignature Language="VB.NET" Value="NonAnonymous" />
      <MemberSignature Language="C++ CLI" Value="NonAnonymous" />
      <MemberSignature Language="F#" Value="NonAnonymous = 1" Usage="System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>El servidor sólo admite las direcciones no anónimas y los clientes deben proporcionar una dirección de respuesta no anónima.</summary>
      </Docs>
    </Member>
  </Members>
</Type>