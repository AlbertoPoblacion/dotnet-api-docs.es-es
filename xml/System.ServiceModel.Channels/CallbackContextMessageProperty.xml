<Type Name="CallbackContextMessageProperty" FullName="System.ServiceModel.Channels.CallbackContextMessageProperty">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1cb98fb7f60b7c0ea17de0ff05807650da3c911b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39809421" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CallbackContextMessageProperty : System.ServiceModel.Channels.IMessageProperty" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CallbackContextMessageProperty extends System.Object implements class System.ServiceModel.Channels.IMessageProperty" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.CallbackContextMessageProperty" />
  <TypeSignature Language="VB.NET" Value="Public Class CallbackContextMessageProperty&#xA;Implements IMessageProperty" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallbackContextMessageProperty : System::ServiceModel::Channels::IMessageProperty" />
  <TypeSignature Language="F#" Value="type CallbackContextMessageProperty = class&#xA;    interface IMessageProperty" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IMessageProperty</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Representa el contenido del encabezado del mensaje <see langword="wsc:CallbackContext" /> cuando se usa un canal que admita el protocolo de intercambio de contexto.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El protocolo de intercambio de contexto permite la comunicación dúplex entre servicios duraderos.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallbackContextMessageProperty (System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallbackContextMessageProperty(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.CallbackContextMessageProperty : System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; System.ServiceModel.Channels.CallbackContextMessageProperty" Usage="new System.ServiceModel.Channels.CallbackContextMessageProperty context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="context">La información contenida en el mensaje que puede identificar el cliente y la instancia del servicio entre las que tiene lugar la comunicación.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> con el contexto especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallbackContextMessageProperty (System.ServiceModel.EndpointAddress callbackAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress callbackAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callbackAddress As EndpointAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallbackContextMessageProperty(System::ServiceModel::EndpointAddress ^ callbackAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.CallbackContextMessageProperty : System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.Channels.CallbackContextMessageProperty" Usage="new System.ServiceModel.Channels.CallbackContextMessageProperty callbackAddress" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackAddress" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackAddress">La dirección de devolución de llamada.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> con el objeto <see cref="T:System.ServiceModel.EndpointAddress" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La dirección de devolución de llamada es la dirección del punto de conexión que usa el servicio para volver a llamar al cliente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallbackContextMessageProperty (System.ServiceModel.EndpointAddress listenAddress, System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress listenAddress, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.ServiceModel.EndpointAddress,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (listenAddress As EndpointAddress, context As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallbackContextMessageProperty(System::ServiceModel::EndpointAddress ^ listenAddress, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.CallbackContextMessageProperty : System.ServiceModel.EndpointAddress * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; System.ServiceModel.Channels.CallbackContextMessageProperty" Usage="new System.ServiceModel.Channels.CallbackContextMessageProperty (listenAddress, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="listenAddress" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="listenAddress">La dirección del punto de conexión en la que el cliente realiza la escucha.</param>
        <param name="context">La información contenida en el mensaje que puede identificar el cliente y la instancia del servicio entre las que tiene lugar la comunicación.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> con la clase <see cref="T:System.ServiceModel.EndpointAddress" /> especificada y una clase <see cref="T:System.Collections.Generic.IDictionary`2" /> que contiene información de contexto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La información de contexto puede incluir información de la instancia del cliente y de la conversación.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallbackContextMessageProperty (string listenAddress, System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string listenAddress, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (listenAddress As String, context As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallbackContextMessageProperty(System::String ^ listenAddress, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.CallbackContextMessageProperty : string * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; System.ServiceModel.Channels.CallbackContextMessageProperty" Usage="new System.ServiceModel.Channels.CallbackContextMessageProperty (listenAddress, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="listenAddress" Type="System.String" />
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="listenAddress">La dirección del punto de conexión en la que el cliente realiza la escucha.</param>
        <param name="context">La información contenida en el mensaje que puede identificar el cliente y la instancia del servicio entre las que tiene lugar la comunicación.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> con la dirección de escucha y la información de contexto especificadas.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallbackContextMessageProperty (Uri listenAddress, System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri listenAddress, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (listenAddress As Uri, context As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallbackContextMessageProperty(Uri ^ listenAddress, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.CallbackContextMessageProperty : Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; System.ServiceModel.Channels.CallbackContextMessageProperty" Usage="new System.ServiceModel.Channels.CallbackContextMessageProperty (listenAddress, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="listenAddress" Type="System.Uri" />
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="listenAddress">La dirección del punto de conexión en la que el cliente realiza la escucha.</param>
        <param name="context">La información contenida en el mensaje que puede identificar el cliente y la instancia del servicio entre las que tiene lugar la comunicación.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> con la dirección de escucha y la información de contexto especificadas.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrReplaceInMessage">
      <MemberSignature Language="C#" Value="public void AddOrReplaceInMessage (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOrReplaceInMessage(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessage(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOrReplaceInMessage(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="member this.AddOrReplaceInMessage : System.ServiceModel.Channels.Message -&gt; unit" Usage="callbackContextMessageProperty.AddOrReplaceInMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">El mensaje para agregar o reemplazar la propiedad de mensaje de contexto de devolución de llamada.</param>
        <summary>Agrega o reemplaza la instancia de la clase <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> actual en el mensaje especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrReplaceInMessageProperties">
      <MemberSignature Language="C#" Value="public void AddOrReplaceInMessageProperties (System.ServiceModel.Channels.MessageProperties properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOrReplaceInMessageProperties(class System.ServiceModel.Channels.MessageProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessageProperties(System.ServiceModel.Channels.MessageProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOrReplaceInMessageProperties (properties As MessageProperties)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOrReplaceInMessageProperties(System::ServiceModel::Channels::MessageProperties ^ properties);" />
      <MemberSignature Language="F#" Value="member this.AddOrReplaceInMessageProperties : System.ServiceModel.Channels.MessageProperties -&gt; unit" Usage="callbackContextMessageProperty.AddOrReplaceInMessageProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.ServiceModel.Channels.MessageProperties" />
      </Parameters>
      <Docs>
        <param name="properties">La colección de propiedades del mensaje a la que agregar la propiedad de mensaje de contexto de devolución de llamada.</param>
        <summary>Agrega o reemplaza la instancia de la clase <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> actual en la colección de propiedades del mensaje especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallbackAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress CallbackAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress CallbackAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CallbackAddress As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ CallbackAddress { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CallbackAddress : System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la dirección de devolución de llamada.</summary>
        <value>Clase <see cref="T:System.ServiceModel.EndpointAddress" /> que contiene la dirección de devolución de llamada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La dirección de devolución de llamada es la dirección del punto de conexión que usa el servidor para llamar al cliente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Context" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.CallbackContextMessageProperty.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Context { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.ServiceModel.Channels.CallbackContextMessageProperty.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el contexto asociado con la clase <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" />.</summary>
        <value>Contexto.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCallbackAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress CreateCallbackAddress (Uri listenAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.EndpointAddress CreateCallbackAddress(class System.Uri listenAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCallbackAddress(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCallbackAddress (listenAddress As Uri) As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::EndpointAddress ^ CreateCallbackAddress(Uri ^ listenAddress);" />
      <MemberSignature Language="F#" Value="member this.CreateCallbackAddress : Uri -&gt; System.ServiceModel.EndpointAddress" Usage="callbackContextMessageProperty.CreateCallbackAddress listenAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listenAddress" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="listenAddress">El URI de escucha</param>
        <summary>Combina la <paramref name="listenAddress" /> del cliente y su contexto en una sola dirección de devolución de llamada que se envía al servicio.</summary>
        <returns>Instancia de <see cref="T:System.ServiceModel.EndpointAddress" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCopy">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.IMessageProperty CreateCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IMessageProperty CreateCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCopy () As IMessageProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::IMessageProperty ^ CreateCopy();" />
      <MemberSignature Language="F#" Value="abstract member CreateCopy : unit -&gt; System.ServiceModel.Channels.IMessageProperty&#xA;override this.CreateCopy : unit -&gt; System.ServiceModel.Channels.IMessageProperty" Usage="callbackContextMessageProperty.CreateCopy " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IMessageProperty.CreateCopy</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IMessageProperty</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una copia de la instancia de la clase <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" />.</summary>
        <returns>Copia de la instancia de la clase <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetListenAddressAndContext">
      <MemberSignature Language="C#" Value="public void GetListenAddressAndContext (out System.ServiceModel.EndpointAddress listenAddress, out System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetListenAddressAndContext([out] class System.ServiceModel.EndpointAddress&amp; listenAddress, [out] class System.Collections.Generic.IDictionary`2&lt;string, string&gt;&amp; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.GetListenAddressAndContext(System.ServiceModel.EndpointAddress@,System.Collections.Generic.IDictionary{System.String,System.String}@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetListenAddressAndContext (ByRef listenAddress As EndpointAddress, ByRef context As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetListenAddressAndContext([Runtime::InteropServices::Out] System::ServiceModel::EndpointAddress ^ % listenAddress, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ % context);" />
      <MemberSignature Language="F#" Value="member this.GetListenAddressAndContext :  *  -&gt; unit" Usage="callbackContextMessageProperty.GetListenAddressAndContext (listenAddress, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listenAddress" Type="System.ServiceModel.EndpointAddress" RefType="out" />
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="listenAddress">Referencia para almacenar la dirección de escucha.</param>
        <param name="context">La información contenida en el mensaje que puede identificar el cliente y la instancia del servicio entre las que tiene lugar la comunicación.</param>
        <summary>Obtiene la dirección de escucha y los datos de contexto desde la instancia de la clase <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public static string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.CallbackContextMessageProperty.Name" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.ServiceModel.Channels.CallbackContextMessageProperty.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de la propiedad de la clase <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" />.</summary>
        <value>Nombre de la propiedad.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGet">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Intenta obtener una instancia de la clase <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGet">
      <MemberSignature Language="C#" Value="public static bool TryGet (System.ServiceModel.Channels.Message message, out System.ServiceModel.Channels.CallbackContextMessageProperty contextMessageProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGet(class System.ServiceModel.Channels.Message message, [out] class System.ServiceModel.Channels.CallbackContextMessageProperty&amp; contextMessageProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.CallbackContextMessageProperty@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGet(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] System::ServiceModel::Channels::CallbackContextMessageProperty ^ % contextMessageProperty);" />
      <MemberSignature Language="F#" Value="static member TryGet : System.ServiceModel.Channels.Message *  -&gt; bool" Usage="System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet (message, contextMessageProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="contextMessageProperty" Type="System.ServiceModel.Channels.CallbackContextMessageProperty" RefType="out" />
      </Parameters>
      <Docs>
        <param name="message">El mensaje desde el que obtener la propiedad de mensaje de contexto de devolución de llamada.</param>
        <param name="contextMessageProperty">Referencia para almacenar la instancia de la propiedad de mensaje de contexto de devolución de llamada.</param>
        <summary>Intenta obtener una instancia de la clase <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> a partir del mensaje especificado.</summary>
        <returns>Es <see langword="true" /> si la propiedad de mensaje de contexto de devolución de llamada se recupera correctamente; de lo contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGet">
      <MemberSignature Language="C#" Value="public static bool TryGet (System.ServiceModel.Channels.MessageProperties properties, out System.ServiceModel.Channels.CallbackContextMessageProperty contextMessageProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGet(class System.ServiceModel.Channels.MessageProperties properties, [out] class System.ServiceModel.Channels.CallbackContextMessageProperty&amp; contextMessageProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.CallbackContextMessageProperty@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGet (properties As MessageProperties, ByRef contextMessageProperty As CallbackContextMessageProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGet(System::ServiceModel::Channels::MessageProperties ^ properties, [Runtime::InteropServices::Out] System::ServiceModel::Channels::CallbackContextMessageProperty ^ % contextMessageProperty);" />
      <MemberSignature Language="F#" Value="static member TryGet : System.ServiceModel.Channels.MessageProperties *  -&gt; bool" Usage="System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet (properties, contextMessageProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.ServiceModel.Channels.MessageProperties" />
        <Parameter Name="contextMessageProperty" Type="System.ServiceModel.Channels.CallbackContextMessageProperty" RefType="out" />
      </Parameters>
      <Docs>
        <param name="properties">La colección de propiedades del mensaje desde la que obtener la propiedad de mensaje de contexto de devolución de llamada.</param>
        <param name="contextMessageProperty">Referencia para almacenar la instancia de la propiedad de mensaje de contexto de devolución de llamada.</param>
        <summary>Intenta obtener una instancia de la clase <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> a partir de las propiedades del mensaje especificado.</summary>
        <returns>Es <see langword="true" /> si la propiedad de mensaje de contexto de devolución de llamada se recupera correctamente; de lo contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>