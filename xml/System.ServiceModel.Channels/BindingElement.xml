<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BindingElement.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50b6b861ea100cda6f809cb09d8db7daabb5f047f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b6b861ea100cda6f809cb09d8db7daabb5f047f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The elements of the bindings that build the channel factories and channel listeners for various types of channels that are used to process outgoing and incoming messages.</source>
          <target state="translated">Los elementos de los enlaces que compilan los generadores de canales y las escuchas del canal para varios tipos de canales que se utilizan para procesar mensajes salientes y entrantes.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>A binding consists of an ordered set of binding elements that inherit from this abstract base class.</source>
          <target state="translated">Un enlace está compuesto de un conjunto ordenado de elementos de enlace que heredan de esta clase base abstracta.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement&gt;</ph> class inherits from the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> class.</source>
          <target state="translated">La clase <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement&gt;</ph> hereda de la clase <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>Creating a binding and binding element for your transport is optional if you are just using the channel model.</source>
          <target state="translated">Crear un enlace y elemento de enlace para su transporte es opcional si simplemente está utilizando el modelo del canal.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>It is possible to do everything you need through the channel factory and listener as long as they are made public.</source>
          <target state="translated">Es posible hacer todo lo que necesita a través del generador de canales y la escucha siempre que sean públicos.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> service model uses a factory pattern where the binding is used to create the channel stack.</source>
          <target state="translated">El modelo de servicios <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> utiliza un modelo de generador donde el enlace se utiliza para crear la pila del canal.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>If you want to use the <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> service model, then using a transport binding element is required.</source>
          <target state="translated">Si desea utilizar el modelo del servicio <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>, debe utilizarse un elemento de enlace del transporte.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>Placing this binding element into a binding is a good practice because it removes the requirement for users to create their own custom binding for your transport.</source>
          <target state="translated">Colocar este elemento de enlace en un enlace es una buena práctica porque elimina la necesidad de que los usuarios creen su propio enlace personalizado para su transporte.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>It is best to create both a binding and binding element, and hide the channel factory and listener inside the assembly.</source>
          <target state="translated">Es mejor crear un enlace y elemento de enlace y ocultar el generador de canales y la escucha dentro del ensamblado.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>On the sending side, a binding is used to build a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph>, which in turn builds a channel stack and returns a reference to the top channel in the stack.</source>
          <target state="translated">En el lado de envío, se utiliza un enlace para compilar un <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph>, que a su vez compila una pila de canal y devuelve una referencia al canal superior en la pila.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The application can then use this channel to send messages.</source>
          <target state="translated">La aplicación puede utilizar a continuación este canal para enviar los mensajes.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>Similarly, on the receiving side a binding is used to build a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph>, which listens for incoming messages.</source>
          <target state="translated">De manera similar, en el lado de la recepción, se usa un enlace para compilar un <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph>, que escucha los mensajes entrantes.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> provides messages to the listening application by creating channel stacks and handing the application a reference to the top channel.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> proporciona mensajes a la aplicación de escucha creando pilas de canal y entregando a la aplicación una referencia al canal superior.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The application then uses this channel to receive incoming messages.</source>
          <target state="translated">La aplicación utiliza a continuación este canal para recibir mensajes entrantes.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>If you are adding message headers that must be encrypted you must return a <ph id="ph1">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph> instance with your requirements from the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29&gt;</ph> method when asked for <ph id="ph3">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph>.</source>
          <target state="translated">Si está agregando los encabezados del mensaje que se deben cifrar debe devolver una instancia <ph id="ph1">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph> con sus requisitos del método <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29&gt;</ph> cuando se pregunte por <ph id="ph3">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The following example shows how to add a transport binding element to a custom binding and then build a channel listener that can accept incoming messages.</source>
          <target state="translated">El ejemplo siguiente muestra cómo agregar un elemento de enlace del transporte a un enlace personalizado y, a continuación, compilar una escucha del canal que pueda aceptar mensajes entrantes.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> to be cloned.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> que se va a clonar.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> class from a specified binding element.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> a partir de un elemento de enlace especificado.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The type of channel the factory builds.</source>
          <target state="translated">El tipo de canal que compila el generador.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides context for the binding element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> que proporciona el contexto para el elemento de enlace.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>Initializes a channel factory for producing channels of a specified type from the binding context.</source>
          <target state="translated">Inicializa un generador de canales para generar canales de un tipo especificado a partir del contexto de enlace.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph> of type <ph id="ph2">&lt;paramref name="TChannel" /&gt;</ph> initialized from the <ph id="ph3">&lt;paramref name="context" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph> de tipo <ph id="ph2">&lt;paramref name="TChannel" /&gt;</ph> inicializado a partir de <ph id="ph3">&lt;paramref name="context" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The type of channel the listener is built to accept.</source>
          <target state="translated">El tipo de canal que acepta la escucha.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides context for the binding element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> que proporciona el contexto para el elemento de enlace.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>Initializes a channel listener to accept channels of a specified type from the binding context.</source>
          <target state="translated">Inicializa una escucha de canales para aceptar canales de un tipo especificado a partir del contexto de enlace.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> initialized from the <ph id="ph3">&lt;paramref name="context" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener`1" /&gt;</ph> de tipo <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> inicializado a partir de <ph id="ph3">&lt;paramref name="context" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The type of channel the channel factory produces.</source>
          <target state="translated">El tipo de canal que produce el generador de canales.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides context for the binding element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> que proporciona el contexto para el elemento de enlace.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a value that indicates whether the binding element can build a channel factory for a specific type of channel.</source>
          <target state="translated">Devuelve un valor que indica si el elemento de enlace puede crear un generador de canales para un tipo específico de canal.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph> of type <ph id="ph3">&lt;paramref name="TChannel" /&gt;</ph> can be built by the binding element; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph> de tipo <ph id="ph3">&lt;paramref name="TChannel" /&gt;</ph> puede ser creado por el elemento de enlace; de lo contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>Use this method if you want to check that the channel factory for channels of type <ph id="ph1">`TChannel`</ph> can be build for the <ph id="ph2">`context`</ph> provided before attempting to build the factory.</source>
          <target state="translated">Utilice este método si desea comprobar que el generador de canales para los canales de tipo <ph id="ph1">`TChannel`</ph> se puede crear para el <ph id="ph2">`context`</ph> proporcionado antes de intentar crear el generador.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>Alternatively, build the channel factory by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A&gt;</ph> and catch the exception generated if it cannot be built.</source>
          <target state="translated">Como alternativa, compile el generador del canal llamando a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A&gt;</ph> y detecte la excepción generada si no es posible compilarlo.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The type of channel the listener accepts.</source>
          <target state="translated">El tipo de canal que acepta la escucha.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides context for the binding element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> que proporciona el contexto para el elemento de enlace.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a value that indicates whether the binding element can build a listener for a specific type of channel.</source>
          <target state="translated">Devuelve un valor que indica si el elemento de enlace puede compilar una escucha para un tipo específico de canal.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener`1" /&gt;</ph> of type <ph id="ph3">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> can be built by the binding element; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener`1" /&gt;</ph> de tipo <ph id="ph3">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> puede ser creado por el elemento de enlace; de lo contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>Use this method if you want to check that the channel listener for channels of type <ph id="ph1">`TChannel`</ph> can be build for the <ph id="ph2">`context`</ph> provided before attempting to build the listener.</source>
          <target state="translated">Utilice este método si desea comprobar que la escucha del canal para los canales de tipo <ph id="ph1">`TChannel`</ph> se puede crear para el <ph id="ph2">`context`</ph> proporcionado antes de intentar crear la escucha.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>Alternatively, build the channel listener by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A&gt;</ph> and catch the exception generated if it cannot be built.</source>
          <target state="translated">Como alternativa, compile la escucha del canal llamando a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A&gt;</ph> y detecte la excepción generada si no es posible generarla.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>When overridden in a derived class, returns a copy of the binding element object.</source>
          <target state="translated">Devuelve una copia del objeto de elemento de enlace cuando se invalida en una clase derivada.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> object that is a deep clone of the original.</source>
          <target state="translated">Un objeto <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> que es un clon profundo del original.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement.Clone%2A&gt;</ph> method to return a deep clone of your binding element.</source>
          <target state="translated">Implemente el método <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement.Clone%2A&gt;</ph> para devolver un clon profundo de su elemento de enlace.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.</source>
          <target state="translated">Devolver un clon permite habilitar el tiempo de ejecución para admitir el caso en el que varios enlaces personalizados comparten un elemento de enlace personalizado.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>If a clone is not returned, the run-time behavior is undefined.</source>
          <target state="translated">Si no se devuelve un clon, el comportamiento en tiempo de ejecución es indefinido.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</source>
          <target state="translated">Un clon profundo de un objeto crea una copia del objeto y una copia de todo aquello a lo que el objeto hace referencia directa o indirectamente.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>(This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only.</source>
          <target state="translated">(Esto se llama también copiar el gráfico de objetos completo.) Por el contrario, un clon superficial de un objeto es sólo una copia del objeto.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</source>
          <target state="translated">Si el objeto contiene referencias a otros objetos, la copia superficial no crea copias de los objetos a los que se hace referencia, sino que solo copia las referencias a los objetos originales.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The typed object for which the method is querying.</source>
          <target state="translated">El objeto con tipo que está consultando el método.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> for the binding element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> del elemento de enlace.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>When overridden in a derived class, returns a typed object requested, if present, from the appropriate layer in the binding stack.</source>
          <target state="translated">Cuando se invalida en una clase derivada, devuelve un objeto escrito solicitado, de estar presente, del nivel apropiado en la pila de enlace.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The typed object <ph id="ph1">&lt;paramref name="T" /&gt;</ph> requested if it is present or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if it is not present.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;paramref name="T" /&gt;</ph> con tipo solicitado, si está presente, o <ph id="ph2">&lt;see langword="null" /&gt;</ph>, si no lo está.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>Use this to retrieve capabilities, requirements and parameters from the binding element stack.</source>
          <target state="translated">Utilice esto para recuperar funciones, requisitos y parámetros de la pila del elemento de enlace.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If a binding element supports returning the requested object, it returns it.</source>
          <target state="translated">Si un elemento de enlace admite la devolución del objeto solicitado, lo devuelve.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If not, it delegates the call down to the next binding element in the stack.</source>
          <target state="translated">Si no, delega la llamada al siguiente elemento de enlace de la pila.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If it gets to the bottom of the stack and no binding element supported the requested object, then the method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Si se llega a la parte inferior de la pila y ningún elemento de enlace admite el objeto solicitado, el método devuelve <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If you are adding message headers that must be encrypted you must return a <ph id="ph1">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph> instance with your requirements from this method when asked for <ph id="ph2">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph>.</source>
          <target state="translated">Si está agregando los encabezados del mensaje que se deben cifrar debe devolver una instancia <ph id="ph1">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph> con sus requisitos de este método cuando se pregunte por <ph id="ph2">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>