<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AbandonedMutexException.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5aff749be646a23d7b3e5cd0e23fa4000612a6a58.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aff749be646a23d7b3e5cd0e23fa4000612a6a58</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.AbandonedMutexException">
          <source>The exception that is thrown when one thread acquires a <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> object that another thread has abandoned by exiting without releasing it.</source>
          <target state="translated">Excepción que se produce cuando un subproceso adquiere un objeto <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> que otro subproceso ha abandonado al salir sin liberarlo.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>When a thread abandons a mutex, the exception is thrown in the next thread that acquires the mutex.</source>
          <target state="translated">Cuando un subproceso abandona una exclusión mutua, la excepción se produce en el siguiente subproceso que adquiere la exclusión mutua.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>The thread might acquire the mutex because it was already waiting on the mutex or because it enters the mutex at a later time.</source>
          <target state="translated">El subproceso podría adquirir la exclusión mutua porque ya estaba esperando en la exclusión mutua o porque entra en la exclusión mutua en un momento posterior.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>An abandoned mutex indicates a serious programming error.</source>
          <target state="translated">Un mutex abandonado indica un error de programación grave.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>When a thread exits without releasing the mutex, the data structures protected by the mutex might not be in a consistent state.</source>
          <target state="translated">Cuando un subproceso sale sin liberar la exclusión mutua, las estructuras de datos protegidas por el mutex no estén en un estado coherente.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>Prior to version 2.0 of the .NET Framework, such problems were hard to discover because no exception was thrown if a wait completed as the result of an abandoned mutex.</source>
          <target state="translated">Antes de la versión 2.0 de .NET Framework, era difíciles detectar porque se inicia ninguna excepción si una espera finalizada como resultado de un mutex abandonado tales problemas.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> class.</source>
          <target state="translated">Para obtener más información, vea la clase <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>The next thread to request ownership of the mutex can handle this exception and proceed, provided that the integrity of the data structures can be verified.</source>
          <target state="translated">El siguiente subproceso que solicite la propiedad de la exclusión mutua puede controlar esta excepción y continuar, siempre que se puede comprobar la integridad de las estructuras de datos.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>The following code example executes a thread that abandons five mutexes, demonstrating their effects on the <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph> methods.</source>
          <target state="translated">En el ejemplo de código siguiente se ejecuta un subproceso que abandona cinco exclusiones mutuas, mostrando sus efectos en el <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, y <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>The value of the <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException.MutexIndex%2A&gt;</ph> property is displayed for the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> call.</source>
          <target state="translated">El valor de la <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException.MutexIndex%2A&gt;</ph> propiedad se muestra para el <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> llamar.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>The call to the <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> method is interrupted by one of the abandoned mutexes.</source>
          <target state="translated">La llamada a la <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> método se interrumpa por una de las exclusiones mutuas abandonadas.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>The other abandoned mutex could still cause an <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> to be thrown by subsequent wait methods.</source>
          <target state="translated">La exclusión mutua abandonada aún puede provocar un <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> para producir los métodos de espera subsiguientes.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Threading.AbandonedMutexException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> class with default values.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> con valores predeterminados.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "The wait completed due to an abandoned mutex."</source>
          <target state="translated">Este constructor inicializa la <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> propiedad de la nueva instancia en un mensaje proporcionado por el sistema que describe el error, como "La espera se completó debido a una exclusión mutua abandonada."</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">Este mensaje tiene en cuenta la referencia cultural del sistema actual.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph>.</source>
          <target state="translated">En la tabla siguiente se muestran los valores de propiedad iniciales para una instancia de <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source>Property</source>
          <target state="translated">Propiedad.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source>The system-supplied error message string.</source>
          <target state="translated">La cadena de mensaje de error proporcionado por el sistema.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source>–1 (minus one).</source>
          <target state="translated">– 1 (menos uno).</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source>An error message that explains the reason for the exception.</source>
          <target state="translated">Mensaje de error que explica la razón de la excepción.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> con el mensaje de error especificado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source>The content of <ph id="ph1">`message`</ph> is intended to be understood by humans.</source>
          <target state="translated">Se pretende que el contenido de <ph id="ph1">`message`</ph> sea inteligible.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> initialized with this constructor.</source>
          <target state="translated">La tabla siguiente muestran los valores de propiedad iniciales para una instancia de <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> inicializada con este constructor.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">Propiedad.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source><ph id="ph1">`message`</ph>.</source>
          <target state="translated"><ph id="ph1">`message`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source>–1 (minus one).</source>
          <target state="translated">– 1 (menos uno).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source>The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <ph id="ph1">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAny" /&gt;</ph> method, or –1 if the exception is thrown for the <ph id="ph2">&lt;see cref="Overload:System.Threading.WaitHandle.WaitOne" /&gt;</ph> or <ph id="ph3">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAll" /&gt;</ph> methods.</source>
          <target state="translated">Índice de la exclusión mutua abandonada en la matriz de identificadores de espera si la excepción se produce para el método <ph id="ph1">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAny" /&gt;</ph>, o –1 si la excepción se produce para los métodos <ph id="ph2">&lt;see cref="Overload:System.Threading.WaitHandle.WaitOne" /&gt;</ph> o <ph id="ph3">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAll" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> object that represents the abandoned mutex.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> que representa la exclusión mutua abandonada.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> class with a specified index for the abandoned mutex, if applicable, and a <ph id="ph2">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> object that represents the mutex.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> con un índice especificado para la exclusión mutua abandonada, si es aplicable, y un objeto <ph id="ph2">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> que representa la exclusión mutua.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "The wait completed due to an abandoned mutex."</source>
          <target state="translated">Este constructor inicializa la <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> propiedad de la nueva instancia en un mensaje proporcionado por el sistema que describe el error, como "La espera se completó debido a una exclusión mutua abandonada."</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">Este mensaje tiene en cuenta la referencia cultural del sistema actual.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> initialized with this constructor.</source>
          <target state="translated">La tabla siguiente muestran los valores de propiedad iniciales para una instancia de <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> inicializada con este constructor.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source>Property</source>
          <target state="translated">Propiedad.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source>A system-supplied error message string.</source>
          <target state="translated">Una cadena de mensaje de error proporcionado por el sistema.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`handle`</ph>.</source>
          <target state="translated"><ph id="ph1">`handle`</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`location`</ph>.</source>
          <target state="translated"><ph id="ph1">`location`</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that holds the serialized object data about the exception being thrown.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> que contiene los datos serializados del objeto sobre la excepción iniciada.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> object that contains contextual information about the source or destination.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> que contiene información contextual sobre el origen o el destino.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> con datos serializados.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">Durante la deserialización se llama a este constructor para reconstituir el objeto de excepción transmitido en una secuencia.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>serialización XML y SOAP<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>An error message that explains the reason for the exception.</source>
          <target state="translated">Mensaje de error que explica la razón de la excepción.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">Excepción que es la causa de la excepción actual.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">Si el parámetro <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> no es <ph id="ph1">&lt;see langword="null" /&gt;</ph>, la excepción actual se produce en un bloque <ph id="ph2">&lt;see langword="catch" /&gt;</ph> que controla la excepción interna.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> class with a specified error message and inner exception.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> con un mensaje de error y una excepción interna especificados.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>The content of <ph id="ph1">`message`</ph> is intended to be understood by humans.</source>
          <target state="translated">Se pretende que el contenido de <ph id="ph1">`message`</ph> sea inteligible.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Una excepción que se produce como consecuencia directa de una excepción anterior debe incluir una referencia a esta última en la propiedad <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> devuelve el mismo valor que se haya pasado al constructor, o bien <ph id="ph2">`null`</ph> en caso de que la propiedad <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> no le haya proporcionado al constructor el valor de la excepción interna.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> initialized with this constructor.</source>
          <target state="translated">La tabla siguiente muestran los valores de propiedad iniciales para una instancia de <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> inicializada con este constructor.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">Propiedad.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source><ph id="ph1">`inner`</ph>.</source>
          <target state="translated"><ph id="ph1">`inner`</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source><ph id="ph1">`message`</ph>.</source>
          <target state="translated"><ph id="ph1">`message`</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>–1 (minus one).</source>
          <target state="translated">– 1 (menos uno).</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source>An error message that explains the reason for the exception.</source>
          <target state="translated">Mensaje de error que explica la razón de la excepción.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source>The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <ph id="ph1">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAny" /&gt;</ph> method, or –1 if the exception is thrown for the <ph id="ph2">&lt;see cref="Overload:System.Threading.WaitHandle.WaitOne" /&gt;</ph> or <ph id="ph3">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAll" /&gt;</ph> methods.</source>
          <target state="translated">Índice de la exclusión mutua abandonada en la matriz de identificadores de espera si la excepción se produce para el método <ph id="ph1">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAny" /&gt;</ph>, o –1 si la excepción se produce para los métodos <ph id="ph2">&lt;see cref="Overload:System.Threading.WaitHandle.WaitOne" /&gt;</ph> o <ph id="ph3">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAll" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> object that represents the abandoned mutex.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> que representa la exclusión mutua abandonada.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> class with a specified error message, the index of the abandoned mutex, if applicable, and the abandoned mutex.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> con un mensaje de error especificado, el índice de la exclusión mutua abandonada, si es aplicable, y la exclusión mutua abandonada.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source>The content of <ph id="ph1">`message`</ph> is intended to be understood by humans.</source>
          <target state="translated">Se pretende que el contenido de <ph id="ph1">`message`</ph> sea inteligible.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> initialized with this constructor.</source>
          <target state="translated">La tabla siguiente muestran los valores de propiedad iniciales para una instancia de <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> inicializada con este constructor.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source>Property</source>
          <target state="translated">Propiedad.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`message`</ph>.</source>
          <target state="translated"><ph id="ph1">`message`</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`handle`</ph>.</source>
          <target state="translated"><ph id="ph1">`handle`</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`location`</ph>.</source>
          <target state="translated"><ph id="ph1">`location`</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>An error message that explains the reason for the exception.</source>
          <target state="translated">Mensaje de error que explica la razón de la excepción.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">Excepción que es la causa de la excepción actual.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">Si el parámetro <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> no es <ph id="ph1">&lt;see langword="null" /&gt;</ph>, la excepción actual se produce en un bloque <ph id="ph2">&lt;see langword="catch" /&gt;</ph> que controla la excepción interna.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <ph id="ph1">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAny" /&gt;</ph> method, or –1 if the exception is thrown for the <ph id="ph2">&lt;see cref="Overload:System.Threading.WaitHandle.WaitOne" /&gt;</ph> or <ph id="ph3">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAll" /&gt;</ph> methods.</source>
          <target state="translated">Índice de la exclusión mutua abandonada en la matriz de identificadores de espera si la excepción se produce para el método <ph id="ph1">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAny" /&gt;</ph>, o –1 si la excepción se produce para los métodos <ph id="ph2">&lt;see cref="Overload:System.Threading.WaitHandle.WaitOne" /&gt;</ph> o <ph id="ph3">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAll" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> object that represents the abandoned mutex.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> que representa la exclusión mutua abandonada.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> class with a specified error message, the inner exception, the index for the abandoned mutex, if applicable, and a <ph id="ph2">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> object that represents the mutex.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> con un mensaje de error especificado, la excepción interna, el índice para la exclusión mutua abandonada, si es aplicable, y un objeto <ph id="ph2">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> que representa la exclusión mutua.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>The content of <ph id="ph1">`message`</ph> is a text string intended to inform the user about the exception.</source>
          <target state="translated">El contenido de <ph id="ph1">`message`</ph> es una cadena de texto diseñada para informar al usuario sobre la excepción.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Una excepción que se produce como consecuencia directa de una excepción anterior debe incluir una referencia a esta última en la propiedad <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> devuelve el mismo valor que se haya pasado al constructor, o bien <ph id="ph2">`null`</ph> en caso de que la propiedad <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> no le haya proporcionado al constructor el valor de la excepción interna.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> initialized with this constructor.</source>
          <target state="translated">La tabla siguiente muestran los valores de propiedad iniciales para una instancia de <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> inicializada con este constructor.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>Property</source>
          <target state="translated">Propiedad.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`inner`</ph>.</source>
          <target state="translated"><ph id="ph1">`inner`</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`message`</ph>.</source>
          <target state="translated"><ph id="ph1">`message`</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`handle`</ph>.</source>
          <target state="translated"><ph id="ph1">`handle`</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`location`</ph>.</source>
          <target state="translated"><ph id="ph1">`location`</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.Threading.AbandonedMutexException.Mutex">
          <source>Gets the abandoned mutex that caused the exception, if known.</source>
          <target state="translated">Obtiene la exclusión mutua abandonada que produjo la excepción, si se conoce.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.Mutex">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> object that represents the abandoned mutex, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the abandoned mutex could not be identified.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> que representa la exclusión mutua abandonada o <ph id="ph2">&lt;see langword="null" /&gt;</ph> si no se han podido identificar las exclusiones mutuas abandonadas.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.Mutex">
          <source>If the exception is thrown on a call to the <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Threading.Mutex&gt;</ph> returned is the abandoned mutex with the lowest index in the array of <ph id="ph3">&lt;xref:System.Threading.WaitHandle&gt;</ph> objects that was passed to <ph id="ph4">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, or <ph id="ph5">`null`</ph> if the abandoned mutex could not be identified.</source>
          <target state="translated">Si se produce la excepción en una llamada a la <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType&gt;</ph> método, el <ph id="ph2">&lt;xref:System.Threading.Mutex&gt;</ph> devuelto es la exclusión mutua abandonada con el índice inferior en la matriz de <ph id="ph3">&lt;xref:System.Threading.WaitHandle&gt;</ph> objetos que se pasó a <ph id="ph4">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, o <ph id="ph5">`null`</ph> si no se pudo identificar la exclusión mutua abandonada.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.Mutex">
          <source>If the exception is thrown on a call to <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph>, this property always returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Si se produce la excepción en una llamada a <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph>, esta propiedad siempre devuelve <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Threading.AbandonedMutexException.MutexIndex">
          <source>Gets the index of the abandoned mutex that caused the exception, if known.</source>
          <target state="translated">Obtiene el índice de la exclusión mutua abandonada que produjo la excepción, si se conoce.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.MutexIndex">
          <source>The index, in the array of wait handles passed to the <ph id="ph1">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAny" /&gt;</ph> method, of the <ph id="ph2">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> object that represents the abandoned mutex, or –1 if the index of the abandoned mutex could not be determined.</source>
          <target state="translated">Índice, en la matriz de identificadores de espera que se ha pasado al método <ph id="ph1">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAny" /&gt;</ph>, del objeto <ph id="ph2">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> que representa la exclusión mutua abandonada, o –1 si no se puede determinar el índice de la exclusión mutua abandonada.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.MutexIndex">
          <source>If the exception is thrown on a call to the <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType&gt;</ph> method, this property returns the index of the abandoned mutex with the lowest index in the array of <ph id="ph2">&lt;xref:System.Threading.WaitHandle&gt;</ph> objects that was passed to <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, or –1 if the abandoned mutex could not be identified.</source>
          <target state="translated">Si se produce la excepción en una llamada a la <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType&gt;</ph> (método), esta propiedad devuelve el índice de la exclusión mutua abandonada con el índice inferior en la matriz de <ph id="ph2">&lt;xref:System.Threading.WaitHandle&gt;</ph> objetos que se pasó a <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, o – 1 si no se pudo identificar la exclusión mutua abandonada.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.MutexIndex">
          <source>If the exception is thrown on a call to <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph>, this property always returns –1.</source>
          <target state="translated">Si se produce la excepción en una llamada a <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph>, esta propiedad siempre devuelve – 1.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.MutexIndex">
          <source>The following code example executes a thread that abandons five mutexes.</source>
          <target state="translated">En el ejemplo de código siguiente se ejecuta un subproceso que abandona cinco exclusiones mutuas.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.MutexIndex">
          <source>The abandoned mutexes are used to demonstrate the effects on the <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph> method calls.</source>
          <target state="translated">Las exclusiones mutuas abandonadas se utilizan para mostrar los efectos en el <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, y <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph> llamadas al método.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.MutexIndex">
          <source>The value of the <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException.MutexIndex%2A&gt;</ph> property is displayed for the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> call.</source>
          <target state="translated">El valor de la <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException.MutexIndex%2A&gt;</ph> propiedad se muestra para el <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> llamar.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.MutexIndex">
          <source>The call to <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> is interrupted by one of the abandoned mutexes.</source>
          <target state="translated">La llamada a <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> se interrumpa por una de las exclusiones mutuas abandonadas.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.MutexIndex">
          <source>The other abandoned mutex could still cause an <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> to be thrown by subsequent wait methods.</source>
          <target state="translated">La exclusión mutua abandonada aún puede provocar un <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> para producir los métodos de espera subsiguientes.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>