<Type Name="WaitHandleCannotBeOpenedException" FullName="System.Threading.WaitHandleCannotBeOpenedException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0ea4c80a08c1d73ba6241d7a366a112fe80b5674" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48762410" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WaitHandleCannotBeOpenedException : ApplicationException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WaitHandleCannotBeOpenedException extends System.ApplicationException" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitHandleCannotBeOpenedException" />
  <TypeSignature Language="VB.NET" Value="Public Class WaitHandleCannotBeOpenedException&#xA;Inherits ApplicationException" />
  <TypeSignature Language="C++ CLI" Value="public ref class WaitHandleCannotBeOpenedException : ApplicationException" />
  <TypeSignature Language="F#" Value="type WaitHandleCannotBeOpenedException = class&#xA;    inherit ApplicationException" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ApplicationException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ce5ca-101">La excepción que se produce cuando se intenta abrir una exclusión mutua del sistema, un semáforo o un identificador de espera de eventos que no existe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ce5ca-101">The exception that is thrown when an attempt is made to open a system mutex, semaphore, or event wait handle that does not exist.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce5ca-102">Las instancias de la <xref:System.Threading.Mutex>, <xref:System.Threading.Semaphore>, y <xref:System.Threading.EventWaitHandle> clases pueden representar objetos de sincronización del sistema con nombre.</span><span class="sxs-lookup"><span data-stu-id="ce5ca-102">Instances of the <xref:System.Threading.Mutex>, <xref:System.Threading.Semaphore>, and  <xref:System.Threading.EventWaitHandle> classes can represent named system synchronization objects.</span></span> <span data-ttu-id="ce5ca-103">Cuando se usa el <xref:System.Threading.Mutex.OpenExisting%2A?displayProperty=nameWithType> método, el <xref:System.Threading.Semaphore.OpenExisting%2A?displayProperty=nameWithType> método, o la <xref:System.Threading.EventWaitHandle.OpenExisting%2A?displayProperty=nameWithType> método para abrir un objeto del sistema con nombre que no existe, un <xref:System.Threading.WaitHandleCannotBeOpenedException> es una excepción.</span><span class="sxs-lookup"><span data-stu-id="ce5ca-103">When you use the <xref:System.Threading.Mutex.OpenExisting%2A?displayProperty=nameWithType> method, the <xref:System.Threading.Semaphore.OpenExisting%2A?displayProperty=nameWithType> method, or the  <xref:System.Threading.EventWaitHandle.OpenExisting%2A?displayProperty=nameWithType> method to open a named system object that does not exist, a <xref:System.Threading.WaitHandleCannotBeOpenedException> exception is thrown.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Threading.Mutex.OpenExisting(System.String)" />
    <altmember cref="M:System.Threading.Semaphore.OpenExisting(System.String)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce5ca-104">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce5ca-104">Initializes a new instance of the <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WaitHandleCannotBeOpenedException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WaitHandleCannotBeOpenedException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce5ca-105">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> con valores predeterminados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce5ca-105">Initializes a new instance of the <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> class with default values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce5ca-106">Este constructor inicializa la <xref:System.Exception.Message%2A> propiedad de la nueva instancia en un mensaje proporcionado por el sistema que describe el error, como "no existe ningún controlador del nombre especificado."</span><span class="sxs-lookup"><span data-stu-id="ce5ca-106">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "No handle of the given name exists."</span></span> <span data-ttu-id="ce5ca-107">Este mensaje tiene en cuenta la referencia cultural del sistema actual.</span><span class="sxs-lookup"><span data-stu-id="ce5ca-107">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="ce5ca-108">En la tabla siguiente se muestran los valores de propiedad iniciales para una instancia de <xref:System.Threading.WaitHandleCannotBeOpenedException>.</span><span class="sxs-lookup"><span data-stu-id="ce5ca-108">The following table shows the initial property values for an instance of <xref:System.Threading.WaitHandleCannotBeOpenedException>.</span></span>  
  
|<span data-ttu-id="ce5ca-109">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="ce5ca-109">Property</span></span>|<span data-ttu-id="ce5ca-110">Valor</span><span class="sxs-lookup"><span data-stu-id="ce5ca-110">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="ce5ca-111">`null`.</span><span class="sxs-lookup"><span data-stu-id="ce5ca-111">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="ce5ca-112">La cadena de mensaje de error proporcionado por el sistema.</span><span class="sxs-lookup"><span data-stu-id="ce5ca-112">The system-supplied error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WaitHandleCannotBeOpenedException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WaitHandleCannotBeOpenedException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Threading.WaitHandleCannotBeOpenedException : string -&gt; System.Threading.WaitHandleCannotBeOpenedException" Usage="new System.Threading.WaitHandleCannotBeOpenedException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="ce5ca-113">Mensaje de error que explica la razón de la excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce5ca-113">The error message that explains the reason for the exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce5ca-114">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> con el mensaje de error especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce5ca-114">Initializes a new instance of the <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> class with a specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce5ca-115">Se pretende que el contenido de `message` sea inteligible.</span><span class="sxs-lookup"><span data-stu-id="ce5ca-115">The content of `message` is intended to be understood by humans.</span></span> <span data-ttu-id="ce5ca-116">El llamador de este constructor debe asegurarse de que esta cadena se ha traducido para la actual referencia cultural del sistema.</span><span class="sxs-lookup"><span data-stu-id="ce5ca-116">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="ce5ca-117">En la tabla siguiente se muestra los valores de propiedad iniciales de una instancia de <xref:System.Threading.WaitHandleCannotBeOpenedException> inicializada con este constructor.</span><span class="sxs-lookup"><span data-stu-id="ce5ca-117">The following table shows the initial property values for an instance of <xref:System.Threading.WaitHandleCannotBeOpenedException> initialized with this constructor.</span></span>  
  
|<span data-ttu-id="ce5ca-118">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="ce5ca-118">Property</span></span>|<span data-ttu-id="ce5ca-119">Valor</span><span class="sxs-lookup"><span data-stu-id="ce5ca-119">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="ce5ca-120">`null`.</span><span class="sxs-lookup"><span data-stu-id="ce5ca-120">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="ce5ca-121">`message`.</span><span class="sxs-lookup"><span data-stu-id="ce5ca-121">`message`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WaitHandleCannotBeOpenedException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WaitHandleCannotBeOpenedException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Threading.WaitHandleCannotBeOpenedException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Threading.WaitHandleCannotBeOpenedException" Usage="new System.Threading.WaitHandleCannotBeOpenedException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="ce5ca-122">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados del objeto relativos a la excepción que se va a producir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce5ca-122">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="ce5ca-123">El objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene información contextual sobre el origen o el destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce5ca-123">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce5ca-124">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> con datos serializados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce5ca-124">Initializes a new instance of the <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce5ca-125">Se llama a este constructor durante la deserialización para reconstituir el objeto de excepción transmitido sobre una secuencia.</span><span class="sxs-lookup"><span data-stu-id="ce5ca-125">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="ce5ca-126">Para obtener más información, consulte [serialización SOAP y XML](~/docs/standard/serialization/xml-and-soap-serialization.md).</span><span class="sxs-lookup"><span data-stu-id="ce5ca-126">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WaitHandleCannotBeOpenedException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WaitHandleCannotBeOpenedException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Threading.WaitHandleCannotBeOpenedException : string * Exception -&gt; System.Threading.WaitHandleCannotBeOpenedException" Usage="new System.Threading.WaitHandleCannotBeOpenedException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="ce5ca-127">Mensaje de error que explica la razón de la excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce5ca-127">The error message that explains the reason for the exception.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="ce5ca-128">La excepción que es la causa de la excepción actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce5ca-128">The exception that is the cause of the current exception.</span>
          </span>
          <span data-ttu-id="ce5ca-129">Si el parámetro <c>innerException</c> no es <see langword="null" />, se genera la excepción actual en un bloque <see langword="catch" /> que controla la excepción interna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce5ca-129">If the <c>innerException</c> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce5ca-130">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce5ca-130">Initializes a new instance of the <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce5ca-131">Una excepción que se produce como consecuencia directa de una excepción anterior debe incluir una referencia a esta última en la propiedad <xref:System.Exception.InnerException%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce5ca-131">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="ce5ca-132">La propiedad <xref:System.Exception.InnerException%2A> devuelve el mismo valor que se haya pasado al constructor, o bien `null` en caso de que la propiedad <xref:System.Exception.InnerException%2A> no le haya proporcionado al constructor el valor de la excepción interna.</span><span class="sxs-lookup"><span data-stu-id="ce5ca-132">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>