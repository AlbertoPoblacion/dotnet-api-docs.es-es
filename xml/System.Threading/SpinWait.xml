<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SpinWait.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e2e5425f7055155507fb2973f9eabdf58f17784c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e2e5425f7055155507fb2973f9eabdf58f17784c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.SpinWait">
          <source>Provides support for spin-based waiting.</source>
          <target state="translated">Proporciona compatibilidad para la espera basada en ciclos.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SpinWait">
          <source><ph id="ph1">&lt;xref:System.Threading.SpinWait&gt;</ph> encapsulates common spinning logic.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.SpinWait&gt;</ph> Encapsula la lógica de giro común.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SpinWait">
          <source>On single-processor machines, yields are always used instead of busy waits, and on computers with Intel processors employing Hyper-Threading technology, it helps to prevent hardware thread starvation.</source>
          <target state="translated">En equipos con un solo procesador, produce siempre se usa en lugar de esperas ocupadas y en los equipos con procesadores de Intel que emplean la tecnología Hyper-Threading, ayuda a evitar la falta de subprocesos de hardware.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SpinWait">
          <source>SpinWait encapsulates a good mixture of spinning and true yielding.</source>
          <target state="translated">SpinWait encapsula una buena mezcla de giro y produciendo true.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SpinWait">
          <source><ph id="ph1">&lt;xref:System.Threading.SpinWait&gt;</ph> is a value type, which means that low-level code can utilize SpinWait without fear of unnecessary allocation overheads.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.SpinWait&gt;</ph> es un tipo de valor, lo que significa que el código de bajo nivel puede utilizar SpinWait sin riesgo de provocar sobrecargas de asignación innecesarias.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SpinWait">
          <source>SpinWait is not generally useful for ordinary applications.</source>
          <target state="translated">SpinWait no normalmente es útil para las aplicaciones comunes.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SpinWait">
          <source>In most cases, you should use the synchronization classes provided by the .NET Framework, such as <ph id="ph1">&lt;xref:System.Threading.Monitor&gt;</ph>.</source>
          <target state="translated">En la mayoría de los casos, debe usar las clases de sincronización proporcionadas por .NET Framework, como <ph id="ph1">&lt;xref:System.Threading.Monitor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SpinWait">
          <source>For most purposes where spin waiting is required, however, the <ph id="ph1">&lt;xref:System.Threading.SpinWait&gt;</ph> type should be preferred over the <ph id="ph2">&lt;xref:System.Threading.Thread.SpinWait%2A&gt;</ph> method.</source>
          <target state="translated">Para la mayoría de los casos donde número espera es necesario, sin embargo, el <ph id="ph1">&lt;xref:System.Threading.SpinWait&gt;</ph> tipo debe ser preferible la <ph id="ph2">&lt;xref:System.Threading.Thread.SpinWait%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SpinWait">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Threading.SpinWait&gt;</ph>:</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo utilizar un <ph id="ph1">&lt;xref:System.Threading.SpinWait&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SpinWait">
          <source>While <ph id="ph1">&lt;see cref="T:System.Threading.SpinWait" /&gt;</ph> is designed to be used in concurrent applications, it is not designed to be used from multiple threads concurrently.</source>
          <target state="translated">Mientras <ph id="ph1">&lt;see cref="T:System.Threading.SpinWait" /&gt;</ph> está diseñado para su uso en aplicaciones simultáneas, no está diseñado para utilizarse desde varios subprocesos simultáneamente.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SpinWait">
          <source><ph id="ph1">&lt;see cref="T:System.Threading.SpinWait" /&gt;</ph> members are not thread-safe.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.SpinWait" /&gt;</ph> los miembros no son seguras para subprocesos.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SpinWait">
          <source>If multiple threads must spin, each should use its own instance of <ph id="ph1">&lt;see cref="T:System.Threading.SpinWait" /&gt;</ph>.</source>
          <target state="translated">Si varios subprocesos deben girar, cada uno de ellos debe utilizar su propia instancia de <ph id="ph1">&lt;see cref="T:System.Threading.SpinWait" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Threading.SpinWait.Count">
          <source>Gets the number of times <ph id="ph1">&lt;see cref="M:System.Threading.SpinWait.SpinOnce" /&gt;</ph> has been called on this instance.</source>
          <target state="translated">Obtiene el número de veces que se ha llamado a <ph id="ph1">&lt;see cref="M:System.Threading.SpinWait.SpinOnce" /&gt;</ph> en esta instancia.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.SpinWait.Count">
          <source>Returns an integer that represents the number of times <ph id="ph1">&lt;see cref="M:System.Threading.SpinWait.SpinOnce" /&gt;</ph> has been called on this instance.</source>
          <target state="translated">Devuelve un entero que representa el número de veces que <ph id="ph1">&lt;see cref="M:System.Threading.SpinWait.SpinOnce" /&gt;</ph> se ha llamado en esta instancia.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.Threading.SpinWait.NextSpinWillYield">
          <source>Gets whether the next call to <ph id="ph1">&lt;see cref="M:System.Threading.SpinWait.SpinOnce" /&gt;</ph> will yield the processor, triggering a forced context switch.</source>
          <target state="translated">Obtiene si la llamada siguiente a <ph id="ph1">&lt;see cref="M:System.Threading.SpinWait.SpinOnce" /&gt;</ph> da paso al procesador, lo que activa un cambio de contexto forzado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.SpinWait.NextSpinWillYield">
          <source>Whether the next call to <ph id="ph1">&lt;see cref="M:System.Threading.SpinWait.SpinOnce" /&gt;</ph> will yield the processor, triggering a forced context switch.</source>
          <target state="translated">Si la llamada siguiente a <ph id="ph1">&lt;see cref="M:System.Threading.SpinWait.SpinOnce" /&gt;</ph> da paso al procesador, lo que activa un cambio de contexto forzado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.SpinWait.NextSpinWillYield">
          <source>On a single-CPU machine, <ph id="ph1">&lt;xref:System.Threading.SpinWait.SpinOnce%2A&gt;</ph> always yields the processor.</source>
          <target state="translated">En un equipo único CPU, <ph id="ph1">&lt;xref:System.Threading.SpinWait.SpinOnce%2A&gt;</ph> siempre da como resultado el procesador.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.SpinWait.NextSpinWillYield">
          <source>On machines with multiple CPUs, <ph id="ph1">&lt;xref:System.Threading.SpinWait.SpinOnce%2A&gt;</ph> may yield after an unspecified number of calls.</source>
          <target state="translated">En equipos con varias CPU, <ph id="ph1">&lt;xref:System.Threading.SpinWait.SpinOnce%2A&gt;</ph> puede producir después de un número indeterminado de llamadas.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.Reset">
          <source>Resets the spin counter.</source>
          <target state="translated">Restablece el contador de ciclos.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SpinWait.Reset">
          <source>This makes <ph id="ph1">&lt;xref:System.Threading.SpinWait.SpinOnce%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.SpinWait.NextSpinWillYield%2A&gt;</ph> behave as though no calls to <ph id="ph3">&lt;xref:System.Threading.SpinWait.SpinOnce%2A&gt;</ph> had been issued on this instance.</source>
          <target state="translated">Esto hace que <ph id="ph1">&lt;xref:System.Threading.SpinWait.SpinOnce%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Threading.SpinWait.NextSpinWillYield%2A&gt;</ph> se comportan como si fuesen ninguna llamada a <ph id="ph3">&lt;xref:System.Threading.SpinWait.SpinOnce%2A&gt;</ph> se emitió en esta instancia.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SpinWait.Reset">
          <source>If a <ph id="ph1">&lt;xref:System.Threading.SpinWait&gt;</ph> instance is reused many times, it may be useful to reset it to avoid yielding too soon.</source>
          <target state="translated">Si un <ph id="ph1">&lt;xref:System.Threading.SpinWait&gt;</ph> instancia se reutiliza muchas veces, puede ser útil restablecerla para evitar que se agote demasiado pronto.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SpinWait.Reset">
          <source>The following is an example of using SpinWait in a simple lock-free stack implementation.</source>
          <target state="translated">El siguiente es un ejemplo del uso de SpinWait en una implementación de pila simple sin bloqueos.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SpinWait.Reset">
          <source>(This is just an example.</source>
          <target state="translated">(Esto es simplemente un ejemplo.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SpinWait.Reset">
          <source>If an efficient, thread-safe stack is needed, consider using ConcurrentStack.)</source>
          <target state="translated">Si se necesita una pila eficaz y segura para subprocesos, considere la posibilidad de uso de ConcurrentStack.)</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinOnce">
          <source>Performs a single spin.</source>
          <target state="translated">Realiza un único ciclo.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SpinWait.SpinOnce">
          <source>This is typically called in a loop, and may change in behavior based on the number of times a <ph id="ph1">&lt;xref:System.Threading.SpinWait.SpinOnce%2A&gt;</ph> has been called thus far on this instance.</source>
          <target state="translated">Esto se denomina normalmente en un bucle y puede cambiar en el comportamiento en función del número de veces que un <ph id="ph1">&lt;xref:System.Threading.SpinWait.SpinOnce%2A&gt;</ph> se ha llamado hasta ahora en esta instancia.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SpinWait.SpinOnce">
          <source>Each spin results in the <ph id="ph1">&lt;xref:System.Threading.Thread.SpinWait%2A&gt;</ph> method being called.</source>
          <target state="translated">Cada número da como resultado la <ph id="ph1">&lt;xref:System.Threading.Thread.SpinWait%2A&gt;</ph> llamada al método.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SpinWait.SpinOnce">
          <source>A count is kept of the number of times <ph id="ph1">&lt;xref:System.Threading.SpinWait.SpinOnce%2A&gt;</ph> is called, and after a threshold count is reached, the <ph id="ph2">&lt;xref:System.Threading.Thread.Yield%2A&gt;</ph> method is called.</source>
          <target state="translated">Se mantiene un recuento del número de veces <ph id="ph1">&lt;xref:System.Threading.SpinWait.SpinOnce%2A&gt;</ph> se llama, y cuando se alcanza un recuento de umbral, el <ph id="ph2">&lt;xref:System.Threading.Thread.Yield%2A&gt;</ph> se llama al método.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="T:System.Threading.SpinWait">
          <source>Spins until the specified condition is satisfied.</source>
          <target state="translated">Itera en ciclos hasta que se satisface la condición especificada.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean})">
          <source>A delegate to be executed over and over until it returns true.</source>
          <target state="translated">Delegado que se va a ejecutar una y otra vez hasta que devuelva true.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean})">
          <source>Spins until the specified condition is satisfied.</source>
          <target state="translated">Itera en ciclos hasta que se satisface la condición especificada.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean})">
          <source>The <ph id="ph1">&lt;paramref name="condition" /&gt;</ph> argument is null.</source>
          <target state="translated">El argumento <ph id="ph1">&lt;paramref name="condition" /&gt;</ph> es null.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32)">
          <source>A delegate to be executed over and over until it returns true.</source>
          <target state="translated">Delegado que se va a ejecutar una y otra vez hasta que devuelva true.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) to wait indefinitely.</source>
          <target state="translated">Número de milisegundos de espera o <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) para esperar indefinidamente.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32)">
          <source>Spins until the specified condition is satisfied or until the specified timeout is expired.</source>
          <target state="translated">Itera en ciclos hasta que se satisface la condición especificada o se agota el tiempo de espera indicado.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32)">
          <source>True if the condition is satisfied within the timeout; otherwise, false</source>
          <target state="translated">Es true si la condición se satisface dentro del tiempo de espera; de lo contrario, es false.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="condition" /&gt;</ph> argument is null.</source>
          <target state="translated">El argumento <ph id="ph1">&lt;paramref name="condition" /&gt;</ph> es null.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32)">
          <source><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> es un número negativo distinto de-1, que representa un tiempo de espera infinito.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan)">
          <source>A delegate to be executed over and over until it returns true.</source>
          <target state="translated">Delegado que se va a ejecutar una y otra vez hasta que devuelva true.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents the number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">Estructura <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> que representa el número de milisegundos de espera o TimeSpan que representa -1 milisegundo para esperar indefinidamente.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan)">
          <source>Spins until the specified condition is satisfied or until the specified timeout is expired.</source>
          <target state="translated">Itera en ciclos hasta que se satisface la condición especificada o se agota el tiempo de espera indicado.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan)">
          <source>True if the condition is satisfied within the timeout; otherwise, false</source>
          <target state="translated">Es true si la condición se satisface dentro del tiempo de espera; de lo contrario, es false.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan)">
          <source>The <ph id="ph1">&lt;paramref name="condition" /&gt;</ph> argument is null.</source>
          <target state="translated">El argumento <ph id="ph1">&lt;paramref name="condition" /&gt;</ph> es null.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> es un número negativo distinto de -1 milisegundo, que representa un tiempo de espera infinito, o el tiempo de espera es mayor que <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>