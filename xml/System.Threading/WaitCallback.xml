<Type Name="WaitCallback" FullName="System.Threading.WaitCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c971c6ff730ee4e62d7280c5bffa17634a0ecf8f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37754561" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void WaitCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed WaitCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub WaitCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void WaitCallback(System::Object ^ state);" />
  <TypeSignature Language="F#" Value="type WaitCallback = delegate of obj -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.ThreadPool</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state">
      <span data-ttu-id="c12ab-101">Objeto que contiene la información que va a usar el método de devolución de llamada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c12ab-101">An object containing information to be used by the callback method.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="c12ab-102">Representa un método de devolución de llamada que debe ejecutar un subproceso del grupo de subprocesos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c12ab-102">Represents a callback method to be executed by a thread pool thread.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c12ab-103"><xref:System.Threading.WaitCallback> Representa un método de devolución de llamada que se desea ejecutar en un <xref:System.Threading.ThreadPool> subproceso.</span><span class="sxs-lookup"><span data-stu-id="c12ab-103"><xref:System.Threading.WaitCallback> represents a callback method that you want to execute on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="c12ab-104">Crear el delegado pasando el método de devolución de llamada para el <xref:System.Threading.WaitCallback> constructor.</span><span class="sxs-lookup"><span data-stu-id="c12ab-104">Create the delegate by passing your callback method to the <xref:System.Threading.WaitCallback> constructor.</span></span> <span data-ttu-id="c12ab-105">El método debe tener la firma que se muestra aquí.</span><span class="sxs-lookup"><span data-stu-id="c12ab-105">Your method must have the signature shown here.</span></span>  
  
 <span data-ttu-id="c12ab-106">Poner en cola la tarea de ejecución pasando el <xref:System.Threading.WaitCallback> delegar a <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c12ab-106">Queue your task for execution by passing the <xref:System.Threading.WaitCallback> delegate to <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c12ab-107">Cuando hay disponible un subproceso del grupo de subprocesos, se ejecuta el método de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="c12ab-107">Your callback method executes when a thread pool thread becomes available.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c12ab-108">Los usuarios de Visual Basic pueden omitir el <xref:System.Threading.WaitCallback> constructor y basta con usar el `AddressOf` operador al pasar el método de devolución de llamada a <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="c12ab-108">Visual Basic users can omit the <xref:System.Threading.WaitCallback> constructor, and simply use the `AddressOf` operator when passing the callback method to <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A>.</span></span> <span data-ttu-id="c12ab-109">Visual Basic llama automáticamente al constructor de delegado correcto.</span><span class="sxs-lookup"><span data-stu-id="c12ab-109">Visual Basic automatically calls the correct delegate constructor.</span></span>  
  
 <span data-ttu-id="c12ab-110">Si desea pasar información a su método de devolución de llamada, cree un objeto que contiene la información necesaria y páselo a <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A> cuando ponga en cola la tarea para su ejecución.</span><span class="sxs-lookup"><span data-stu-id="c12ab-110">If you want to pass information to your callback method, create an object that contains the necessary information and pass it to <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A> when you queue your task for execution.</span></span> <span data-ttu-id="c12ab-111">Cada vez que se ejecuta el método de devolución de llamada, el `state` parámetro contiene este objeto.</span><span class="sxs-lookup"><span data-stu-id="c12ab-111">Each time your callback method executes, the `state` parameter contains this object.</span></span>  
  
 <span data-ttu-id="c12ab-112">Para obtener más información acerca de cómo utilizar las devoluciones de llamada para sincronizar subprocesos de grupo, consulte [The Managed Thread Pool](~/docs/standard/threading/the-managed-thread-pool.md).</span><span class="sxs-lookup"><span data-stu-id="c12ab-112">For more information about using callbacks to synchronize thread pool threads, see [The Managed Thread Pool](~/docs/standard/threading/the-managed-thread-pool.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c12ab-113">Esta sección contiene dos ejemplos.</span><span class="sxs-lookup"><span data-stu-id="c12ab-113">This section contains two examples.</span></span> <span data-ttu-id="c12ab-114">El primer ejemplo muestra cómo puede poner en cola una tarea sencilla para ejecutarse en el grupo de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="c12ab-114">The first example demonstrates how you can queue a simple task for execution by the thread pool.</span></span>  
  
 <span data-ttu-id="c12ab-115">El segundo ejemplo muestra cómo puede poner en cola una tarea y pasar información a él.</span><span class="sxs-lookup"><span data-stu-id="c12ab-115">The second example demonstrates how you can queue a task and pass information to it.</span></span>  
  
 <span data-ttu-id="c12ab-116">**Ejemplo 1**</span><span class="sxs-lookup"><span data-stu-id="c12ab-116">**Example 1**</span></span>  
  
 <span data-ttu-id="c12ab-117">En este ejemplo se muestra cómo usar el <xref:System.Threading.WaitCallback> delegado para poner en cola una tarea para ejecutarse en el grupo de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="c12ab-117">This example shows how to use the <xref:System.Threading.WaitCallback> delegate to queue a task for execution by the thread pool.</span></span> <span data-ttu-id="c12ab-118">El ejemplo de código se usa el <xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%29?displayProperty=nameWithType> sobrecarga del método para poner en cola una tarea, que se representa mediante un <xref:System.Threading.WaitCallback> que ajusta el `ThreadProc` método, se debe ejecutar cuando un subproceso esté disponible.</span><span class="sxs-lookup"><span data-stu-id="c12ab-118">The code example uses the <xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%29?displayProperty=nameWithType> method overload to queue a task, which is represented by a <xref:System.Threading.WaitCallback> that wraps the `ThreadProc` method, to execute when a thread becomes available.</span></span> <span data-ttu-id="c12ab-119">No hay información de la tarea se suministra con esta sobrecarga.</span><span class="sxs-lookup"><span data-stu-id="c12ab-119">No task information is supplied with this overload.</span></span> <span data-ttu-id="c12ab-120">Por lo tanto, la información que está disponible para el `ThreadProc` método se limita a la que pertenece el método de objeto.</span><span class="sxs-lookup"><span data-stu-id="c12ab-120">Therefore, the information that is available to the `ThreadProc` method is limited to the object the method belongs to.</span></span>  
  
 [!code-cpp[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/VB/source.vb#1)]  
  
 <span data-ttu-id="c12ab-121">**Ejemplo 2**</span><span class="sxs-lookup"><span data-stu-id="c12ab-121">**Example 2**</span></span>  
  
 <span data-ttu-id="c12ab-122">En este ejemplo se muestra cómo crear un objeto que contiene información de la tarea.</span><span class="sxs-lookup"><span data-stu-id="c12ab-122">This example shows how to create an object that contains task information.</span></span> <span data-ttu-id="c12ab-123">También se muestra cómo pasar ese objeto a una tarea que se pone en cola para su ejecución por el grupo de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="c12ab-123">It also demonstrates how to pass that object to a task that is queued for execution by the thread pool.</span></span>  
  
 [!code-cpp[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ThreadPool" />
  </Docs>
</Type>