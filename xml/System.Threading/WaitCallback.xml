<Type Name="WaitCallback" FullName="System.Threading.WaitCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3b3440ac2a814ac3b46ed007085faf8975b8c5cc" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36605657" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void WaitCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed WaitCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub WaitCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void WaitCallback(System::Object ^ state);" />
  <TypeSignature Language="F#" Value="type WaitCallback = delegate of obj -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.ThreadPool</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state">Objeto que contiene la información que va a usar el método de devolución de llamada.</param>
    <summary>Representa un método de devolución de llamada que debe ejecutar un subproceso del grupo de subprocesos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Threading.WaitCallback> Representa un método de devolución de llamada que se desea ejecutar en un <xref:System.Threading.ThreadPool> subproceso. Crear el delegado pasando el método de devolución de llamada para el <xref:System.Threading.WaitCallback> constructor. El método debe tener la firma que se muestra aquí.  
  
 Poner en cola la tarea para su ejecución, pasando el <xref:System.Threading.WaitCallback> delegar a <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType>. El método de devolución de llamada se ejecuta cuando hay disponible un subproceso del grupo.  
  
> [!NOTE]
>  Los usuarios de Visual Basic pueden omitir el <xref:System.Threading.WaitCallback> constructor y simplemente, usar el `AddressOf` operador cuando se pasa el método de devolución de llamada a <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A>. Visual Basic llama automáticamente al constructor de delegado correcto.  
  
 Si desea pasar información al método de devolución de llamada, cree un objeto que contiene la información necesaria y páselo a <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A> cuando pone en cola la tarea para su ejecución. Cada vez que se ejecuta el método de devolución de llamada, el `state` parámetro contiene este objeto.  
  
 Para obtener más información sobre el uso de las devoluciones de llamada para sincronizar el grupo de subprocesos, vea [The Managed Thread Pool](~/docs/standard/threading/the-managed-thread-pool.md).  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos. El primer ejemplo muestra cómo se puede poner en cola una tarea sencilla para ejecutarse en el grupo de subprocesos.  
  
 El segundo ejemplo muestra cómo puede poner en cola una tarea y pasar información a él.  
  
 **Ejemplo 1**  
  
 Este ejemplo muestra cómo utilizar el <xref:System.Threading.WaitCallback> delegado para poner en cola una tarea para ejecutarse en el grupo de subprocesos. El ejemplo de código se utiliza el <xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%29?displayProperty=nameWithType> sobrecarga del método para poner en cola una tarea, que se representa mediante un <xref:System.Threading.WaitCallback> que ajusta la `ThreadProc` método, se debe ejecutar cuando hay disponible un subproceso. No hay información de la tarea se suministra con esta sobrecarga. Por lo tanto, la información que está disponible para el `ThreadProc` método se limita al objeto al que pertenece el método.  
  
 [!code-cpp[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/VB/source.vb#1)]  
  
 **Ejemplo 2**  
  
 En este ejemplo se muestra cómo crear un objeto que contiene información de la tarea. También muestra cómo pasar ese objeto a una tarea que se pone en cola para su ejecución por el grupo de subprocesos.  
  
 [!code-cpp[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ThreadPool" />
  </Docs>
</Type>