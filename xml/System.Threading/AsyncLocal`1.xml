<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AsyncLocal`1.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac561a4cab43144c333fd4daaed375693e83d6b99b5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">61a4cab43144c333fd4daaed375693e83d6b99b5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AsyncLocal`1">
          <source>The type of the ambient data.</source>
          <target state="translated">Tipo de los datos ambiente.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Threading.AsyncLocal`1">
          <source>Represents ambient data that is local to a given asynchronous control flow, such as an asynchronous method.</source>
          <target state="translated">Representa datos ambiente locales de un flujo de control asincrónico determinado, por ejemplo, un método asincrónico.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AsyncLocal`1">
          <source>Because the task-based asynchronous programming model tends to abstract the use of threads, <ph id="ph1">&lt;xref:System.Threading.AsyncLocal%601&gt;</ph> instances can be used to persist data across threads.</source>
          <target state="translated">Dado que el modelo de programación asincrónico basado en tareas tiende a resumir el uso de subprocesos, <ph id="ph1">&lt;xref:System.Threading.AsyncLocal%601&gt;</ph> se pueden usar instancias para conservar los datos a través de subprocesos.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AsyncLocal`1">
          <source>The <ph id="ph1">&lt;xref:System.Threading.AsyncLocal%601&gt;</ph> class also provides optional notifications when the value associated with the current thread changes, either because it was explicitly changed by setting the <ph id="ph2">&lt;xref:System.Threading.AsyncLocal%601.Value%2A&gt;</ph> property, or implicitly changed when the thread encountered an <ph id="ph3">`await`</ph> or other context transition.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Threading.AsyncLocal%601&gt;</ph> clase también proporciona notificaciones opcionales cuando el valor asociado con los cambios de subproceso actual, ya sea explícitamente si cambió estableciendo la <ph id="ph2">&lt;xref:System.Threading.AsyncLocal%601.Value%2A&gt;</ph> propiedad, o cambiar de forma implícita cuando el subproceso ha encontrado un <ph id="ph3">`await`</ph> u otro transición de contexto.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AsyncLocal`1">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Threading.AsyncLocal%601&gt;</ph> class to persist a string value across an asynchronous flow.</source>
          <target state="translated">En el ejemplo siguiente se utiliza la <ph id="ph1">&lt;xref:System.Threading.AsyncLocal%601&gt;</ph> clase para conservar un valor de cadena a través de un flujo asincrónico.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AsyncLocal`1">
          <source>It also contrasts the use of  <ph id="ph1">&lt;xref:System.Threading.AsyncLocal%601&gt;</ph> with <ph id="ph2">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph>.</source>
          <target state="translated">También se contrasta el uso de <ph id="ph1">&lt;xref:System.Threading.AsyncLocal%601&gt;</ph> con <ph id="ph2">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.Threading.AsyncLocal`1">
          <source>Instantiates an <ph id="ph1">&lt;see cref="T:System.Threading.AsyncLocal`1" /&gt;</ph> instance.</source>
          <target state="translated">Crea una instancia <ph id="ph1">&lt;see cref="T:System.Threading.AsyncLocal`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Threading.AsyncLocal`1.#ctor">
          <source>Instantiates an <ph id="ph1">&lt;see cref="T:System.Threading.AsyncLocal`1" /&gt;</ph> instance that does not receive change notifications.</source>
          <target state="translated">Crea una instancia <ph id="ph1">&lt;see cref="T:System.Threading.AsyncLocal`1" /&gt;</ph> que no recibe las notificaciones de cambio.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Threading.AsyncLocal`1.#ctor(System.Action{System.Threading.AsyncLocalValueChangedArgs{`0}})">
          <source>The delegate that is called whenever the current value changes on any thread.</source>
          <target state="translated">Delegado al que se llama cuando cambia el valor actual en cualquier subproceso.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Threading.AsyncLocal`1.#ctor(System.Action{System.Threading.AsyncLocalValueChangedArgs{`0}})">
          <source>Instantiates an <ph id="ph1">&lt;see cref="T:System.Threading.AsyncLocal`1" /&gt;</ph> local instance that receives change notifications.</source>
          <target state="translated">Crea una instancia <ph id="ph1">&lt;see cref="T:System.Threading.AsyncLocal`1" /&gt;</ph> local que recibe notificaciones de cambio.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AsyncLocal`1.#ctor(System.Action{System.Threading.AsyncLocalValueChangedArgs{`0}})">
          <source>The delegate's signature is <ph id="ph1">`Action&lt;ASyncLocalValueChangedArgs&lt;T&gt;`</ph>.</source>
          <target state="translated">La firma del delegado es <ph id="ph1">`Action&lt;ASyncLocalValueChangedArgs&lt;T&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Threading.AsyncLocal`1.Value">
          <source>Gets or sets the value of the ambient data.</source>
          <target state="translated">Obtiene o establece el valor de los datos ambiente.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AsyncLocal`1.Value">
          <source>The value of the ambient data.</source>
          <target state="translated">Valor de los datos ambiente.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>