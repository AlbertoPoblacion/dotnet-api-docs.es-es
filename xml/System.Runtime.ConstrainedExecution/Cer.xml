<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Cer.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ac470bff59f11addb66604e46af25f3ade4f4d27.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ac470bff59f11addb66604e46af25f3ade4f4d27</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.ConstrainedExecution.Cer">
          <source>Specifies a method's behavior when called within a constrained execution region.</source>
          <target state="translated">Especifica el comportamiento de un método cuando se llama dentro de una región de ejecución limitada.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.Cer">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.Cer&gt;</ph> enumeration specifies the behavior of a method, type, or assembly within a constrained execution region (CER).</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.Cer&gt;</ph> enumeración especifica el comportamiento de un método, tipo o ensamblado dentro de una región de ejecución restringida (CER).</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.Cer">
          <source>Use one of the three available values to indicate that the entity will succeed, has no knowledge of a CER, or might (deterministically) be able to report success or failure.</source>
          <target state="translated">Use uno de los tres valores disponibles para indicar que la entidad se realizará correctamente, no tiene ningún conocimiento de una CER o (de manera determinista) podría ser notifica el éxito o error.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.Cer">
          <source>A CER provides guarantees that the region of code will execute uninterrupted even if an asynchronous exception such as an aborted thread out-of-memory exception, or stack overflow is raised.</source>
          <target state="translated">Una CER proporciona garantías de que la región de código se ejecutará sin interrupciones incluso si se produce una excepción asincrónica, como una excepción de subproceso anulado de memoria insuficiente o desbordamiento de pila.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.Cer">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.Cer&gt;</ph> enumeration when specifying a constrained execution region for a method.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.Cer&gt;</ph> al especificar una región de ejecución restringidas para un método de enumeración.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.Cer">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A&gt;</ph> constructor.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.MayFail">
          <source>In the face of exceptional conditions, the method might fail.</source>
          <target state="translated">Ante condiciones excepcionales, el método podría generar errores.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.MayFail">
          <source>In this case, the method will report back to the calling method whether it succeeded or failed.</source>
          <target state="translated">En este caso, el método notificará al método que realizó la llamada si se ejecutó correctamente o con errores.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.MayFail">
          <source>The method must have a CER around the method body to ensure that it can report the return value.</source>
          <target state="translated">El método debe tener una CER alrededor del cuerpo del método para garantizar que puede notificar el valor devuelto.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>The method, type, or assembly has no concept of a CER.</source>
          <target state="translated">El método, tipo o ensamblado no tiene ningún concepto de CER.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>It does not take advantage of CER guarantees.</source>
          <target state="translated">No se aprovecha de las garantías de la CER.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>This implies the following:</source>
          <target state="translated">Esto implica lo siguiente:</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>In the face of exceptional conditions the method might fail.</source>
          <target state="translated">El método puede producir un error ante condiciones excepcionales.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>The method might or might not report that it failed (it is non-deterministic).</source>
          <target state="translated">El método puede notificar o no que se produjo un error (es no determinista).</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>The method is not written with CERs in mind (which is the most likely scenario).</source>
          <target state="translated">El método no se escribe con CER en cuenta (que es el escenario más probable).</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>If a method, type, or assembly is not explicitly marked to succeed, it is implicitly marked as <ph id="ph1">`Cer.None`</ph>.</source>
          <target state="translated">Si un método, tipo o ensamblado no está marcado explícitamente para que se realice correctamente, se marca implícitamente como <ph id="ph1">`Cer.None`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.Success">
          <source>In the face of exceptional conditions, the method is guaranteed to succeed.</source>
          <target state="translated">Ante condiciones excepcionales, se garantiza la ejecución correcta del método.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.Success">
          <source>You should always construct a CER around the method that is called, even when it is called from within a non-CER region.</source>
          <target state="translated">Siempre se debe crear una CER alrededor del método al que se llama, aunque la llamada se realice desde una región no CER.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.Success">
          <source>A method is successful if it accomplishes what is intended.</source>
          <target state="translated">Un método tiene éxito si logra lo que se pretende.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.Success">
          <source>For example, marking <ph id="ph1">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph> with <bpt id="p1">&lt;c&gt;</bpt>ReliabilityContractAttribute(Cer.Success)<ept id="p1">&lt;/c&gt;</ept> implies that when it is run under a CER, it always returns a count of the number of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> and it can never leave the internal fields in an undetermined state.</source>
          <target state="translated">Por ejemplo, marcar <ph id="ph1">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph> con <bpt id="p1">&lt;c&gt;</bpt>ReliabilityContractAttribute(Cer.Success)<ept id="p1">&lt;/c&gt;</ept> implica que cuando se ejecuta bajo una CER, siempre devuelve un recuento del número de elementos de <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> y nunca puede dejar los campos internos en estado indeterminado.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>