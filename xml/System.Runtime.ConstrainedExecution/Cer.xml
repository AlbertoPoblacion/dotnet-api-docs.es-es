<Type Name="Cer" FullName="System.Runtime.ConstrainedExecution.Cer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9b2ccf91931668d1682e951a640fcec0d9a2fda2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36540570" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum Cer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed Cer extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ConstrainedExecution.Cer" />
  <TypeSignature Language="VB.NET" Value="Public Enum Cer" />
  <TypeSignature Language="C++ CLI" Value="public enum class Cer" />
  <TypeSignature Language="F#" Value="type Cer = " />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="3bb21-101">Especifica el comportamiento de un método cuando se llama dentro de una región de ejecución limitada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3bb21-101">Specifies a method's behavior when called within a constrained execution region.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb21-102">El <xref:System.Runtime.ConstrainedExecution.Cer> enumeración especifica el comportamiento de un método, tipo o ensamblado dentro de una región de ejecución restringida (CER).</span><span class="sxs-lookup"><span data-stu-id="3bb21-102">The <xref:System.Runtime.ConstrainedExecution.Cer> enumeration specifies the behavior of a method, type, or assembly within a constrained execution region (CER).</span></span> <span data-ttu-id="3bb21-103">Use uno de los tres valores disponibles para indicar que la entidad se realizará correctamente, no tiene ningún conocimiento de una CER o (de manera determinista) podría ser notifica el éxito o error.</span><span class="sxs-lookup"><span data-stu-id="3bb21-103">Use one of the three available values to indicate that the entity will succeed, has no knowledge of a CER, or might (deterministically) be able to report success or failure.</span></span>  
  
 <span data-ttu-id="3bb21-104">Una CER proporciona garantías de que la región de código se ejecutará sin interrupciones incluso si se produce una excepción asincrónica, como una excepción de subproceso anulado de memoria insuficiente o desbordamiento de pila.</span><span class="sxs-lookup"><span data-stu-id="3bb21-104">A CER provides guarantees that the region of code will execute uninterrupted even if an asynchronous exception such as an aborted thread out-of-memory exception, or stack overflow is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb21-105">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Runtime.ConstrainedExecution.Cer> al especificar una región de ejecución restringidas para un método de enumeración.</span><span class="sxs-lookup"><span data-stu-id="3bb21-105">The following code example demonstrates the use of the <xref:System.Runtime.ConstrainedExecution.Cer> enumeration when specifying a constrained execution region for a method.</span></span> <span data-ttu-id="3bb21-106">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A> constructor.</span><span class="sxs-lookup"><span data-stu-id="3bb21-106">This code example is part of a larger example provided for the <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A> constructor.</span></span>  
  
 [!code-csharp[System.Runtime.ConstrainedExecution#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.ConstrainedExecution/cs/program.cs#3)]
 [!code-vb[System.Runtime.ConstrainedExecution#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.ConstrainedExecution/vb/program.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions" />
    <altmember cref="M:System.Runtime.CompilerServices.RuntimeHelpers.PrepareMethod(System.RuntimeMethodHandle)" />
  </Docs>
  <Members>
    <Member MemberName="MayFail">
      <MemberSignature Language="C#" Value="MayFail" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Cer MayFail = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Cer.MayFail" />
      <MemberSignature Language="VB.NET" Value="MayFail" />
      <MemberSignature Language="C++ CLI" Value="MayFail" />
      <MemberSignature Language="F#" Value="MayFail = 1" Usage="System.Runtime.ConstrainedExecution.Cer.MayFail" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Cer</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="3bb21-107">Ante condiciones excepcionales, el método podría generar errores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb21-107">In the face of exceptional conditions, the method might fail.</span>
          </span>
          <span data-ttu-id="3bb21-108">En este caso, el método notificará al método que realizó la llamada si se ejecutó correctamente o con errores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb21-108">In this case, the method will report back to the calling method whether it succeeded or failed.</span>
          </span>
          <span data-ttu-id="3bb21-109">El método debe tener una CER alrededor del cuerpo del método para garantizar que puede notificar el valor devuelto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb21-109">The method must have a CER around the method body to ensure that it can report the return value.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Cer None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Cer.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Runtime.ConstrainedExecution.Cer.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Cer</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="3bb21-110">El método, tipo o ensamblado no tiene ningún concepto de CER.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb21-110">The method, type, or assembly has no concept of a CER.</span>
          </span>
          <span data-ttu-id="3bb21-111">No se aprovecha de las garantías de la CER.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb21-111">It does not take advantage of CER guarantees.</span>
          </span>
          <span data-ttu-id="3bb21-112">Esto implica lo siguiente:</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb21-112">This implies the following:</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <span data-ttu-id="3bb21-113">El método puede producir un error ante condiciones excepcionales.</span><span class="sxs-lookup"><span data-stu-id="3bb21-113">In the face of exceptional conditions the method might fail.</span></span>  
  
-   <span data-ttu-id="3bb21-114">El método puede notificar o no que se produjo un error (es no determinista).</span><span class="sxs-lookup"><span data-stu-id="3bb21-114">The method might or might not report that it failed (it is non-deterministic).</span></span>  
  
-   <span data-ttu-id="3bb21-115">El método no se escribe con CER en cuenta (que es el escenario más probable).</span><span class="sxs-lookup"><span data-stu-id="3bb21-115">The method is not written with CERs in mind (which is the most likely scenario).</span></span>  
  
 <span data-ttu-id="3bb21-116">Si un método, tipo o ensamblado no está marcado explícitamente para que se realice correctamente, se marca implícitamente como `Cer.None`.</span><span class="sxs-lookup"><span data-stu-id="3bb21-116">If a method, type, or assembly is not explicitly marked to succeed, it is implicitly marked as `Cer.None`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Success">
      <MemberSignature Language="C#" Value="Success" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Cer Success = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Cer.Success" />
      <MemberSignature Language="VB.NET" Value="Success" />
      <MemberSignature Language="C++ CLI" Value="Success" />
      <MemberSignature Language="F#" Value="Success = 2" Usage="System.Runtime.ConstrainedExecution.Cer.Success" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Cer</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="3bb21-117">Ante condiciones excepcionales, se garantiza la ejecución correcta del método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb21-117">In the face of exceptional conditions, the method is guaranteed to succeed.</span>
          </span>
          <span data-ttu-id="3bb21-118">Siempre se debe crear una CER alrededor del método al que se llama, aunque la llamada se realice desde una región no CER.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb21-118">You should always construct a CER around the method that is called, even when it is called from within a non-CER region.</span>
          </span>
          <span data-ttu-id="3bb21-119">Un método tiene éxito si logra lo que se pretende.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb21-119">A method is successful if it accomplishes what is intended.</span>
          </span>
          <span data-ttu-id="3bb21-120">Por ejemplo, marcar <see cref="P:System.Collections.ArrayList.Count" /> con <c>ReliabilityContractAttribute(Cer.Success)</c> implica que cuando se ejecuta bajo una CER, siempre devuelve un recuento del número de elementos de <see cref="T:System.Collections.ArrayList" /> y nunca puede dejar los campos internos en estado indeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb21-120">For example, marking <see cref="P:System.Collections.ArrayList.Count" /> with <c>ReliabilityContractAttribute(Cer.Success)</c> implies that when it is run under a CER, it always returns a count of the number of elements in the <see cref="T:System.Collections.ArrayList" /> and it can never leave the internal fields in an undetermined state.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>