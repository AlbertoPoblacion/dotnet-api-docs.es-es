<Type Name="SecurityToken" FullName="System.IdentityModel.Tokens.SecurityToken">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="122e50d44ff24a887c694507576a39030c32344f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39140584" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SecurityToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityToken extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityToken" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityToken abstract" />
  <TypeSignature Language="F#" Value="type SecurityToken = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa una clase base utilizada para implementar todos los tokens de seguridad.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice un token de seguridad para proporcionar las credenciales de autenticación o para proteger un mensaje.  
  
 Un token de seguridad se puede utilizar para proporcionar las credenciales de autenticación, material de clave criptográfica, o, en el caso de un token de seguridad emitido por un token de servicio de seguridad (STS), una colección de notificaciones sobre un sujeto. Todos los tokens de seguridad que se derivan de la <xref:System.IdentityModel.Tokens.SecurityToken> clase.  
  
 A partir de .NET 4.5, Windows Identity Foundation (WIF) se ha integrado totalmente en .NET Framework y las clases expuestas por WIF son el método preferido de los tokens de seguridad en el código de control. En WIF, tokens de seguridad se serializan y deserializan a y desde su código XML representación y se validan mediante el uso de las clases derivadas de la <xref:System.IdentityModel.Tokens.SecurityTokenHandler> clase base. Validar el token implica no solo lo que garantiza que el token es válido, pero también devolver un <xref:System.Security.Claims.ClaimsIdentity> instancia desde el símbolo (token) que se puede usar en decisiones de autenticación y autorización. El <xref:System.Security.Claims.ClaimsIdentity> se construye mediante la implementación del controlador de token de la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> método desde las notificaciones contenidas en el token como también a partir de las notificaciones que son intrínsecas al token del propio tipo.  
  
 WIF se suministra con el soporte técnico para los siguientes tipos de tokens de seguridad:  
  
-   <xref:System.IdentityModel.Tokens.Saml2SecurityToken>: Representa un token de seguridad que se basa en una aserción de SAML 2.0. Normalmente, este tipo de token se emite por un servicio de token de seguridad en respuesta a una WS-Trust o WS-Federation seguridad solicitud de token (RST).  
  
-   <xref:System.IdentityModel.Tokens.SamlSecurityToken>: Representa un token de seguridad que se basa en una aserción de SAML 1.1. Normalmente, este tipo de token se emite por un servicio de token de seguridad en respuesta a una WS-Trust o WS-Federation seguridad solicitud de token (RST).  
  
-   <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> y <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>: representa un token de seguridad que se basa en un vale de Kerberos que se recibe o envía un mensaje SOAP  
  
-   <xref:System.IdentityModel.Tokens.RsaSecurityToken>: Representa un token de seguridad que se basa en la clave que se crea mediante el algoritmo RSA.  
  
-   <xref:System.IdentityModel.Tokens.SessionSecurityToken>: Representa un token de seguridad que contiene información sobre una sesión.  
  
-   <xref:System.IdentityModel.Tokens.UserNameSecurityToken>: Representa un token de seguridad que se basa en un nombre de usuario y una contraseña.  
  
-   <xref:System.IdentityModel.Tokens.WindowsSecurityToken>: Representa un token de seguridad que se basa en la identidad de una cuenta de dominio o usuario de Windows.  
  
-   <xref:System.IdentityModel.Tokens.X509SecurityToken>: Representa un token de seguridad que se basa en un certificado X.509.  
  
-   <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>: Representa un token de seguridad que se basa en un certificado X.509 que se asigna a un usuario de dominio de Windows o la cuenta de usuario del equipo local.  
  
 Dos otras clases de token de seguridad, <xref:System.IdentityModel.Tokens.GenericXmlSecurityToken> y <xref:System.IdentityModel.Tokens.EncryptedSecurityToken>, se puede usar para ayudar a controlar casos generales.  
  
 A grandes rasgos los tokens se dividen en tres categorías principales de seguridad:  
  
-   Los tokens que llevan o hacen referencia a cifrado de clave material. Por ejemplo el <xref:System.IdentityModel.Tokens.RsaSecurityToken> y <xref:System.IdentityModel.Tokens.X509SecurityToken> tipos suelen utilizarse para este propósito.  
  
-   Tokens que representan las credenciales de usuario que ya se han autenticado. Por ejemplo, el <xref:System.IdentityModel.Tokens.UserNameSecurityToken>, <xref:System.IdentityModel.Tokens.WindowsSecurityToken>y, en el caso de un usuario autenticado mediante un certificado, el <xref:System.IdentityModel.Tokens.X509SecurityToken> tipos.  
  
-   Tokens emitidos por un servicio de token de seguridad (STS) en respuesta a una solicitud de token de seguridad mediante el protocolo WS-Federation o WS-Trust. Normalmente, estos se devuelven en un `wst:RequestSecurityTokenResponse` fragmento XML. El <xref:System.IdentityModel.Tokens.Saml2SecurityToken> y <xref:System.IdentityModel.Tokens.SamlSecurityToken> tipos más a menudo se utilizan para representar estos tokens.  
  
 Un tipo especial de token, el <xref:System.IdentityModel.Tokens.SessionSecurityToken>, contiene la información necesaria volver a crear una entidad de seguridad al utilizar sesiones en escenarios activos o pasivos.  
  
 Para agregar funcionalidad a los tipos de token existentes puede derivar del tipo específico y su controlador de token asociado para admitir los elementos nuevos que agregue al token. Para agregar compatibilidad para nuevos tipos de token, puede derivar directamente desde el <xref:System.IdentityModel.Tokens.SecurityToken> clase. Al hacerlo, también deberá crear una clase de controlador de token derivando de la <xref:System.IdentityModel.Tokens.SecurityTokenHandler> clase. Dependiendo de cómo el token es para usarse, es posible que deba crear una resolución de tokens personalizada derivando de la <xref:System.IdentityModel.Tokens.IssuerTokenResolver> clase así como uno o varios tipos de cláusula de identificador de clave personalizado derivando de la <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> clase.  
  
   
  
## Examples  
 Los ejemplos de código que se usan en el <xref:System.IdentityModel.Tokens.SecurityToken> temas se toman de la `Custom Token` ejemplo. Este ejemplo proporciona las clases personalizadas que permiten el procesamiento de Simple Web Tokens (SWT). Incluye una implementación de un `SimpleWebToken` clase y un `SimpleWebTokenHandler` clase, así como otras clases que admiten los tokens SWT. Para obtener información acerca de este ejemplo y otros ejemplos disponibles para WIF y dónde descargarlas, consulte [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md). El código siguiente muestra la implementación de la `SimpleWebToken` clase. Esta clase extiende <xref:System.IdentityModel.Tokens.SecurityToken>.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Se debe reemplazar el <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />, <see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />, <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />, y <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> propiedades. El <see cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />, <see cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />, <see cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />, y <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> todos métodos admiten identificadores de clave de tipo <see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />. Debe invalidar estos métodos para admitir otros tipos de identificador de clave de la clase derivada.</para>
    </block>
    <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
    <altmember cref="T:System.IdentityModel.Tokens.IssuerTokenResolver" />
    <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityToken ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityToken();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Se le llama desde los constructores en las clases derivadas para inicializar la clase <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanCreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanCreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause virtual bool CanCreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="abstract member CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)&#xA;override this.CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="securityToken.CanCreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> que especifica el identificador de clave que se va a crear.</typeparam>
        <summary>Obtiene un valor que indica si este token de seguridad es capaz de crear el identificador clave especificado.</summary>
        <returns>
          <see langword="true" /> cuando <paramref name="T" /> es de tipo <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />; en caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice el método <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> para determinar si un token de seguridad puede crear un identificador de clave específico. Para crear el identificador de clave, llame al método <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A>.  
  
 La implementación predeterminada es compatible con las cláusulas de identificador de clave de tipo <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="CreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual T CreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T CreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause virtual T CreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="abstract member CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)&#xA;override this.CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="securityToken.CreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> que especifica el identificador de clave que se va a crear.</typeparam>
        <summary>Crea la cláusula de identificador de clave especificada.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> que es una cláusula de identificador de clave para el token de seguridad.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice el método <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> para determinar si un token de seguridad puede crear un identificador de clave específico. Para crear el identificador de clave, llame al método <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A>.  
  
 La implementación predeterminada es compatible con las cláusulas de identificador de clave de tipo <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>. Si una cláusula de identificador de clave de tipo <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause> no se puede crear un <xref:System.NotSupportedException> se produce.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public abstract string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.Id" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IdentityModel.Tokens.SecurityToken.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un identificador único del token de seguridad.</summary>
        <value>El identificador único del token de seguridad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, cuando un token de seguridad se serializa en XML, el atributo `Id` para el token de seguridad se establece en el valor de la propiedad <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A>.  
  
   
  
## Examples  
 Los ejemplos de código que se usan en el <xref:System.IdentityModel.Tokens.SecurityToken> temas se toman de la `Custom Token` ejemplo. Este ejemplo proporciona las clases personalizadas que permiten el procesamiento de Simple Web Tokens (SWT). Incluye una implementación de un `SimpleWebToken` clase y un `SimpleWebTokenHandler` clase, así como otras clases que admiten los tokens SWT. Para obtener información acerca de este ejemplo y otros ejemplos disponibles para WIF y dónde descargarlas, consulte [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md). El código siguiente muestra la invalidación de la <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> propiedad.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Se debe reemplazar el <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" /> propiedad.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="MatchesKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchesKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchesKeyIdentifierClause (skiClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityToken.MatchesKeyIdentifierClause skiClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="skiClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">Un <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> que se va a comparar con esta instancia.</param>
        <param name="skiClause">Un <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> que se va a comparar con esta instancia.</param>
        <summary>Devuelve un valor que indica si el identificador clave para esta instancia puede resolverse en el identificador de clave especificado.</summary>
        <returns>
          <see langword="true" /> si <paramref name="keyIdentifierClause" /> es <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> y tiene el mismo identificador único que la propiedad <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La implementación predeterminada es compatible con las cláusulas de identificador de clave de tipo <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="ResolveKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As SecurityKey" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveKeyIdentifierClause (skiClause As SecurityKeyIdentifierClause) As SecurityKey" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey&#xA;override this.ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityToken.ResolveKeyIdentifierClause skiClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="skiClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">
          <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> para el que se va a obtener la clave.</param>
        <param name="skiClause">
          <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> para el que se va a obtener la clave.</param>
        <summary>Obtiene la clave para la cláusula de identificador de clave especificada.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> que representa a la clave.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El método <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> llama a <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> para determinar primero si la cláusula de identificador de clave especificada es igual que esta instancia.  
  
 La implementación predeterminada devuelve el primer elemento de la <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> colección si la colección no está vacía y si <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> devuelve `true`; en caso contrario, devuelve `null`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al heredar de <see cref="T:System.IdentityModel.Tokens.SecurityToken" />e implementar el <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> método y <paramref name="keyIdentifierClause" /> no se puede resolver, devuelve <see langword="null" />. No debe producirse una excepción desde el <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> método.</para>
        </block>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="SecurityKeys">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SecurityKeys As ReadOnlyCollection(Of SecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ SecurityKeys { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityKeys : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;" Usage="System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene las claves criptográficas asociadas al token de seguridad.</summary>
        <value>
          <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de tipo <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> que contiene el conjunto de claves asociadas al token de seguridad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys%2A> propiedad para establecer las claves criptográficas de este token de seguridad proteger los tokens o un mensaje SOAP. Las claves pueden utilizarse, entre otras cosas, para firmar digitalmente o cifrar los tokens o los mensajes SOAP.  
  
   
  
## Examples  
 Los ejemplos de código que se usan en el <xref:System.IdentityModel.Tokens.SecurityToken> temas se toman de la `Custom Token` ejemplo. Este ejemplo proporciona las clases personalizadas que permiten el procesamiento de Simple Web Tokens (SWT). Incluye una implementación de un `SimpleWebToken` clase y un `SimpleWebTokenHandler` clase, así como otras clases que admiten los tokens SWT. Para obtener información acerca de este ejemplo y otros ejemplos disponibles para WIF y dónde descargarlas, consulte [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md). El código siguiente muestra la invalidación de la <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> propiedad.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Se debe reemplazar el <see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" /> propiedad.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ValidFrom">
      <MemberSignature Language="C#" Value="public abstract DateTime ValidFrom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidFrom" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValidFrom As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime ValidFrom { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidFrom : DateTime" Usage="System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene a tiempo el primer momento en el que este token de seguridad es válido.</summary>
        <value>Valor de tipo <see cref="T:System.DateTime" /> que representa el primer momento en el que este token de seguridad es válido por primera vez.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice las propiedades <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> y <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> para determinar el período de tiempo en el que un token <xref:System.IdentityModel.Tokens.SecurityToken> es válido. Las propiedades <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> y <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> representan a tiempo los primeros y últimos momentos en los que el token de seguridad es válido, respectivamente.  
  
   
  
## Examples  
 Los ejemplos de código que se usan en el <xref:System.IdentityModel.Tokens.SecurityToken> temas se toman de la `Custom Token` ejemplo. Este ejemplo proporciona las clases personalizadas que permiten el procesamiento de Simple Web Tokens (SWT). Incluye una implementación de un `SimpleWebToken` clase y un `SimpleWebTokenHandler` clase, así como otras clases que admiten los tokens SWT. Para obtener información acerca de este ejemplo y otros ejemplos disponibles para WIF y dónde descargarlas, consulte [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md). El código siguiente muestra la invalidación de la <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> propiedad.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#6)]  
[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Se debe reemplazar el <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> propiedad.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ValidTo">
      <MemberSignature Language="C#" Value="public abstract DateTime ValidTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValidTo As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime ValidTo { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidTo : DateTime" Usage="System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene a tiempo el último momento en el que este token de seguridad es válido.</summary>
        <value>
          <see cref="T:System.DateTime" /> que representa el último momento en el tiempo en el que este token de seguridad es válido.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice las propiedades <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> y <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> para determinar el período de tiempo en el que un token <xref:System.IdentityModel.Tokens.SecurityToken> es válido. Las propiedades <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> y <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> representan a tiempo los primeros y últimos momentos en los que el token de seguridad es válido, respectivamente.  
  
   
  
## Examples  
 Los ejemplos de código que se usan en el <xref:System.IdentityModel.Tokens.SecurityToken> temas se toman de la `Custom Token` ejemplo. Este ejemplo proporciona las clases personalizadas que permiten el procesamiento de Simple Web Tokens (SWT). Incluye una implementación de un `SimpleWebToken` clase y un `SimpleWebTokenHandler` clase, así como otras clases que admiten los tokens SWT. Para obtener información acerca de este ejemplo y otros ejemplos disponibles para WIF y dónde descargarlas, consulte [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md). El código siguiente muestra la invalidación de la <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> propiedad.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#7)]  
[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Se debe reemplazar el <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> propiedad.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>