<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TokenReplayCache.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5af504f061d149e0fabe4b8b11ad634c0ba240025.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">af504f061d149e0fabe4b8b11ad634c0ba240025</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.TokenReplayCache">
          <source>The abstract base class that defines methods for a cache used to detect replayed tokens.</source>
          <target state="translated">La clase base abstracta que define los métodos para una memoria caché utilizada para detectar los tokens repetidos.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.TokenReplayCache">
          <source>When implemented, the cache should purge tokens on a scheduled time interval.</source>
          <target state="translated">Cuando se implementa, la memoria caché debe purgar tokens en un intervalo de tiempo programado.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.TokenReplayCache">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate%2A&gt;</ph> method associates a security token with a key and an expiration time.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate%2A&gt;</ph> método asocia un token de seguridad con una clave y un tiempo de expiración.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.TokenReplayCache">
          <source>The can be used to search the cache for the token or to remove the token from the cache.</source>
          <target state="translated">La puede usar para buscar la memoria caché para el token o para quitar el símbolo (token) de la memoria caché.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.TokenReplayCache">
          <source>The expiration time indicates the time at which the token should be purged from the cache.</source>
          <target state="translated">La fecha de caducidad indica la hora a la que se debe purgar el token de la memoria caché.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.TokenReplayCache.#ctor">
          <source>Called from constructors in derived classes to initialize the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.TokenReplayCache" /&gt;</ph> class.</source>
          <target state="translated">Se llama desde constructores de clases derivadas para inicializar la clase <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.TokenReplayCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate(System.String,System.IdentityModel.Tokens.SecurityToken,System.DateTime)">
          <source>The key to use when adding the item.</source>
          <target state="translated">Clave que se va a usar al agregar el elemento.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate(System.String,System.IdentityModel.Tokens.SecurityToken,System.DateTime)">
          <source>The token to add to the cache, can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El token para agregar a la memoria caché, puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate(System.String,System.IdentityModel.Tokens.SecurityToken,System.DateTime)">
          <source>The time at which the entry expires.</source>
          <target state="translated">Hora a la que la entrada expira.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate(System.String,System.IdentityModel.Tokens.SecurityToken,System.DateTime)">
          <source>When overridden in a derived class, attempts to add a new entry or update and existing entry.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, intenta agregar una nueva entrada o actualizar una entrada existente.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.TokenReplayCache.Contains(System.String)">
          <source>The key for which to search.</source>
          <target state="translated">Clave que se va a buscar.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.TokenReplayCache.Contains(System.String)">
          <source>When overridden in a derived class, returns a value that indicates whether a matching entry exists in the cache.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, devuelve un valor que indica si existe una entrada coincidente en la memoria caché.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.TokenReplayCache.Contains(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a matching entry is is found in the cache; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si se encuentra una entrada coincidente en la memoria caché; si no, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.TokenReplayCache.Get(System.String)">
          <source>The key for which to search.</source>
          <target state="translated">Clave que se va a buscar.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.TokenReplayCache.Get(System.String)">
          <source>When overridden in a derived class, attempts to get the specified entry.</source>
          <target state="translated">Cuando se invalida en una clase derivada, intenta obtener la entrada especificado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.TokenReplayCache.Get(System.String)">
          <source>The token that matches the key or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no token is found.</source>
          <target state="translated">El token que coincide con la clave o <ph id="ph1">&lt;see langword="null" /&gt;</ph> si no se encuentra ningún token.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.TokenReplayCache.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The custom configuration XML elements.</source>
          <target state="translated">Elementos XML de configuración personalizados.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.TokenReplayCache.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>When overridden in a derived class, loads custom configuration from the specified XML.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, carga la configuración desde el XML especificado.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.TokenReplayCache.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>By default, this method throws a <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph></source>
          <target state="translated">De forma predeterminada, este método produce una <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.TokenReplayCache.Remove(System.String)">
          <source>The key that identifies the entry to remove.</source>
          <target state="translated">Clave que identifica la entrada o eliminación.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.TokenReplayCache.Remove(System.String)">
          <source>When overridden in a derived class, attempts to remove an entry from the cache.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, intenta quitar una entrada de la memoria caché.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>