<Type Name="ConfigurationBasedIssuerNameRegistry" FullName="System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e18c20db3b2fbe5699d03a5055865477a937b008" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30418299" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ConfigurationBasedIssuerNameRegistry : System.IdentityModel.Tokens.IssuerNameRegistry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConfigurationBasedIssuerNameRegistry extends System.IdentityModel.Tokens.IssuerNameRegistry" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" />
  <TypeSignature Language="VB.NET" Value="Public Class ConfigurationBasedIssuerNameRegistry&#xA;Inherits IssuerNameRegistry" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationBasedIssuerNameRegistry : System::IdentityModel::Tokens::IssuerNameRegistry" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.IssuerNameRegistry</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa un Registro de nombres de emisor que mantiene una lista de los emisores de confianza cargados de elementos del archivo de configuración de aplicación que asocia cada nombre de emisor al certificado X.509 necesario comprobar la signatura de los tokens generados por el emisor.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> clase mantiene un diccionario de emisores de confianza mediante la asignación del certificado de cada emisor de confianza a un nombre que hace referencia a ese emisor. Los certificados se especifican utilizando el ASN.1 codificado formada por la huella digital. El nombre del emisor puede ser cualquier cadena, siempre que sea único dentro del ámbito de la aplicación. Este diccionario puede obtenerse a través del <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A> propiedad. La clase solo puede resolver los certificados X.509.  
  
 La asignación de emisores de confianza se especifica en un archivo de configuración mediante la adición de entradas en la [ &lt;trustedIssuers&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) elemento. El `<trustedIssuers>` trata de un elemento secundario de la [ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) elemento y es válido cuando el <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> clase se especifica en el `type` atributos de ese elemento. Para obtener más información, consulte la documentación de cada uno de estos elementos en el [esquema de configuración de WIF](http://msdn.microsoft.com/library/4d4f6d76-49a5-4bad-b345-097b2e2844e9). Para obtener más información acerca de los registros de nombre de emisor, consulte la <xref:System.IdentityModel.Tokens.IssuerNameRegistry> clase.  
  
 Puede derivar de <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> para implementar su propio registro de nombres de configuración en función del emisor. Los métodos que reemplace dependerá de su implementación. Por ejemplo, puede invalidar el <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A> método para cargar la configuración desde un esquema de configuración personalizada.  
  
   
  
## Examples  
 El siguiente XML muestra la configuración para un <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> agregado para una colección de controladores de tokens de seguridad. El `<trustedIssuers>` elemento se comporta como una colección de configuración .NET clásica, lo que permite el `<add>`, `<delete>` y `<clear>` elementos como elementos secundarios.  
  
```  
<system.identityModel>  
  <identityConfiguration>  
    <securityTokenHandlersCollection>  
      <securityTokenHandlerConfiguration>  
        <issuerNameRegistry type="System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel">  
          <trustedIssuers>  
             <add thumbprint="97249e … 158de" name="contoso.com" />  
         </trustedIssuers>  
        </issuerNameRegistry>  
      </securityTokenHandlerConfiguration>  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfigurationBasedIssuerNameRegistry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConfigurationBasedIssuerNameRegistry();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTrustedIssuer">
      <MemberSignature Language="C#" Value="public void AddTrustedIssuer (string certificateThumbprint, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddTrustedIssuer(string certificateThumbprint, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddTrustedIssuer (certificateThumbprint As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddTrustedIssuer(System::String ^ certificateThumbprint, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateThumbprint" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="certificateThumbprint">Formato codificado ASN.1 de la huella digital del certificado del emisor.</param>
        <param name="name">Nombre del emisor.</param>
        <summary>Agrega un emisor al diccionario de emisores de confianza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede llamar a este método para agregar emisores el <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A> diccionario. En las clases derivadas, puede llamar a este método desde el <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A> método para agregar emisores al diccionario.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          El valor de <paramref name="certificateThumbprint" /> es <see langword="null" /> o está vacío.  
  
 O bien  
  
 El valor de <paramref name="name" /> es <see langword="null" /> o está vacío.</exception>
        <exception cref="T:System.InvalidOperationException">El emisor especificado por <paramref name="certificateThumbprint" /> ya se ha configurado. (El emisor ya existe en el diccionario <see cref="P:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="ConfiguredTrustedIssuers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; ConfiguredTrustedIssuers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; ConfiguredTrustedIssuers" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConfiguredTrustedIssuers As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ ConfiguredTrustedIssuers { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el diccionario de los emisores de confianza que se han configurado para esta instancia.</summary>
        <value>Diccionario que contiene los emisores de confianza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clave para el diccionario es el ASN.1 codificado de formulario de la huella digital del certificado del emisor de confianza y el valor es el nombre del emisor. El diccionario contiene los emisores que se especificaron en la configuración y los emisores adicionales que se han agregado con el <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="public override string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetIssuerName(class System.IdentityModel.Tokens.SecurityToken securityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetIssuerName(System::IdentityModel::Tokens::SecurityToken ^ securityToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="securityToken">El token de seguridad para el que se solicita el nombre del emisor. Debe poder asignarse como <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</param>
        <summary>Devuelve el nombre del emisor asociado al <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> especificado mediante la asignación de la huella digital del certificado a un nombre en el diccionario de emisores de confianza.</summary>
        <returns>Nombre del emisor si existe una entrada para la huella digital del certificado del token en el diccionario de <see cref="P:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers" />; de lo contrario, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las búsquedas de implementación de forma predeterminada el <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A> diccionario para la huella digital del certificado X.509 especificado en `securityToken`. Si se encuentra una entrada, se devuelve el nombre del emisor; en caso contrario, `null` se devuelve. Si `securityToken` no es asignable de <xref:System.IdentityModel.Tokens.X509SecurityToken>, `null` se devuelve.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="securityToken" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList customConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadCustomConfiguration (customConfiguration As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadCustomConfiguration(System::Xml::XmlNodeList ^ customConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customConfiguration" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="customConfiguration">XML que representa la asignación de emisores de confianza que se especifica en el archivo de configuración.</param>
        <summary>Carga los emisores de confianza de la configuración.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A> método se llama por la infraestructura de configuración. Cuando se llama a este método, el `nodelist` contendrá los elementos secundarios de nivel superior de la [ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) elemento desde el archivo de configuración. Cada uno de estos a su vez, podría contener atributos o elementos secundarios según el esquema de configuración que se definen para la clase derivada.  
  
 Este método se llama por la infraestructura de configuración. La implementación predeterminada carga la configuración de un [ &lt;trustedIssuers&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) elemento (configurado en el [ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md)elemento). Puede invalidar este método para proporcionar soporte técnico para sus propios elementos de configuración personalizados en las clases derivadas.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="customConfiguration" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La configuración contiene uno o más elementos que no se reconocen.</exception>
      </Docs>
    </Member>
  </Members>
</Type>