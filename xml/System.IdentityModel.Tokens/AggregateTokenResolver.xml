<Type Name="AggregateTokenResolver" FullName="System.IdentityModel.Tokens.AggregateTokenResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b27ed3632e65b0abd610692b1a624cc0b7da642d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30417539" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AggregateTokenResolver : System.IdentityModel.Selectors.SecurityTokenResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AggregateTokenResolver extends System.IdentityModel.Selectors.SecurityTokenResolver" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.AggregateTokenResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class AggregateTokenResolver&#xA;Inherits SecurityTokenResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class AggregateTokenResolver : System::IdentityModel::Selectors::SecurityTokenResolver" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenResolver</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e7f26-101">Representa una resolución de tokens de seguridad que puede englobar varias resoluciones de token y resolver los token de todas las resoluciones incluidas.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e7f26-101">Represents a security token resolver that can wrap multiple token resolvers and resolve tokens across all of the wrapped resolvers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f26-102">Un <xref:System.IdentityModel.Selectors.SecurityTokenResolver> objeto representa una clase de utilidad que puede recuperar tokens de seguridad o claves al tener un identificador de clave o cláusula de identificador de clave.</span><span class="sxs-lookup"><span data-stu-id="e7f26-102">A <xref:System.IdentityModel.Selectors.SecurityTokenResolver> object represents a utility class that can retrieve security tokens or keys when you have a key identifier or key identifier clause.</span></span> <span data-ttu-id="e7f26-103">El <xref:System.IdentityModel.Tokens.AggregateTokenResolver> contiene varios <xref:System.IdentityModel.Selectors.SecurityTokenResolver> objetos.</span><span class="sxs-lookup"><span data-stu-id="e7f26-103">The <xref:System.IdentityModel.Tokens.AggregateTokenResolver> wraps several <xref:System.IdentityModel.Selectors.SecurityTokenResolver> objects.</span></span> <span data-ttu-id="e7f26-104">Los solucionadores de símbolo (token) que se ajustarán se especifican en el constructor.</span><span class="sxs-lookup"><span data-stu-id="e7f26-104">The token resolvers to be wrapped are specified in the constructor.</span></span> <span data-ttu-id="e7f26-105">El <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> propiedad devuelve la colección de resoluciones de símbolo (token) que están encapsulados por la resolución agregada.</span><span class="sxs-lookup"><span data-stu-id="e7f26-105">The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> property returns the collection of token resolvers that are wrapped by the aggregate resolver.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AggregateTokenResolver (System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Selectors.SecurityTokenResolver&gt; tokenResolvers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.IdentityModel.Selectors.SecurityTokenResolver&gt; tokenResolvers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.AggregateTokenResolver.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tokenResolvers As IEnumerable(Of SecurityTokenResolver))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AggregateTokenResolver(System::Collections::Generic::IEnumerable&lt;System::IdentityModel::Selectors::SecurityTokenResolver ^&gt; ^ tokenResolvers);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tokenResolvers" Type="System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Selectors.SecurityTokenResolver&gt;" />
      </Parameters>
      <Docs>
        <param name="tokenResolvers">
          <span data-ttu-id="e7f26-106">Lista de las resoluciones de token de seguridad que va a ajustar esta instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f26-106">A list of the security token resolvers to be wrapped by this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f26-107">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.AggregateTokenResolver" /> usando la lista especificada de resoluciones de token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f26-107">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.AggregateTokenResolver" /> class by using the specified list of token resolvers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f26-108">El <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> propiedad se inicializa con la lista de resoluciones token especificada.</span><span class="sxs-lookup"><span data-stu-id="e7f26-108">The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> property is initialized with the specified list of token resolvers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7f26-109">
            <paramref name="tokenResolvers" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f26-109">
              <paramref name="tokenResolvers" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TokenResolvers">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Selectors.SecurityTokenResolver&gt; TokenResolvers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Selectors.SecurityTokenResolver&gt; TokenResolvers" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TokenResolvers As ReadOnlyCollection(Of SecurityTokenResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Selectors::SecurityTokenResolver ^&gt; ^ TokenResolvers { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Selectors::SecurityTokenResolver ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Selectors.SecurityTokenResolver&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7f26-110">Obtiene las resoluciones de token de seguridad agrupadas por esta instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f26-110">Gets the security token resolvers that are wrapped by this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7f26-111">Colección de solo lectura que contiene los solucionadores de token ajustados por esta instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f26-111">A read-only collection that contains the token resolvers that are wrapped by this instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveSecurityKeyCore">
      <MemberSignature Language="C#" Value="protected override bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryResolveSecurityKeyCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryResolveSecurityKeyCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef key As SecurityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryResolveSecurityKeyCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityKey ^ % key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SecurityKey&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">
          <span data-ttu-id="e7f26-112">Identificador de clave para el que se va a recuperar la clave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f26-112">The key identifier clause to retrieve the key for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="e7f26-113">Cuando este método finaliza, contiene la clave a la que se hace referencia en la cláusula de identificador de clave especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f26-113">When this method returns, contains the key that is referenced in the specified key identifier clause.</span>
          </span>
          <span data-ttu-id="e7f26-114">Este parámetro se pasa sin inicializar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f26-114">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f26-115">Intenta recuperar la clave a la que se hace referencia en la cláusula de identificador clave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f26-115">Attempts to retrieve the key that is referenced in the specified key identifier clause.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f26-116">
            <see langword="true" /> cuando una clave se puede recuperar para el identificador clave especificado; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f26-116">
              <see langword="true" /> when a key can be retrieved for the specified key identifier clause; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f26-117">Los métodos <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore%2A> y <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> llaman automáticamente al método <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="e7f26-117">The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7f26-118">
            <paramref name="keyIdentifierClause" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f26-118">
              <paramref name="keyIdentifierClause" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryResolveTokenCore (keyIdentifier As SecurityKeyIdentifier, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier">
          <span data-ttu-id="e7f26-119">El identificador de clave de seguridad para el que se va a recuperar el token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f26-119">The security key identifier to retrieve the token for.</span>
          </span>
        </param>
        <param name="token">
          <span data-ttu-id="e7f26-120">Cuando este método finaliza, contiene un token que representa el identificador clave especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f26-120">When this method returns, contains a token that represents the specified key identifier.</span>
          </span>
          <span data-ttu-id="e7f26-121">Este parámetro se pasa sin inicializar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f26-121">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f26-122">Intenta recuperar el token de seguridad que coincide con al menos una de las cláusulas de identificador de la clave que están incluidas dentro del identificador clave especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f26-122">Attempts to retrieve the security token that matches at least one of the key identifier clauses contained within the specified key identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f26-123">
            <see langword="true" /> cuando un token se puede recuperar para el identificador clave especificado; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f26-123">
              <see langword="true" /> when a token can be retrieved for the specified key identifier; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f26-124">Los métodos <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore%2A> y <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> llaman automáticamente al método <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>.</span><span class="sxs-lookup"><span data-stu-id="e7f26-124">The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7f26-125">
            <paramref name="keyIdentifier" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f26-125">
              <paramref name="keyIdentifier" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryResolveTokenCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">
          <span data-ttu-id="e7f26-126">Cláusula de identificador de clave para el que se va a crear un token de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f26-126">The key identifier clause to create a security token for.</span>
          </span>
        </param>
        <param name="token">
          <span data-ttu-id="e7f26-127">Cuando este método finaliza, contiene un token de seguridad que representa la cláusula de identificador clave especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f26-127">When this method returns, contains a security token that represents the specified key identifier clause.</span>
          </span>
          <span data-ttu-id="e7f26-128">Este parámetro se pasa sin inicializar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f26-128">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f26-129">Intenta resolver el token de seguridad que coincide con la cláusula de identificador clave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f26-129">Attempts to resolve the security token that matches the specified key identifier clause.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f26-130">
            <see langword="true" /> cuando un token de seguridad se puede recuperar para la cláusula identificador clave; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f26-130">
              <see langword="true" /> when a security token can be retrieved for the specified key identifier clause; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f26-131">Los métodos <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore%2A> y <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> llaman automáticamente al método <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>.</span><span class="sxs-lookup"><span data-stu-id="e7f26-131">The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7f26-132">
            <paramref name="keyIdentifierClause" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f26-132">
              <paramref name="keyIdentifierClause" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>