<Type Name="EncryptedKeyIdentifierClause" FullName="System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e9a74bce3657cf4cd0a2d309e32dd874918a99ed" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EncryptedKeyIdentifierClause : System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EncryptedKeyIdentifierClause extends System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EncryptedKeyIdentifierClause&#xA;Inherits BinaryKeyIdentifierClause" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedKeyIdentifierClause sealed : System::IdentityModel::Tokens::BinaryKeyIdentifierClause" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.BinaryKeyIdentifierClause</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="62de1-101">Representa una cláusula de identificador clave que identifica una clave cifrada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="62de1-101">Represents a key identifier clause that identifies an encrypted key.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62de1-102">Normalmente, <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> no necesita ser utilizado, excepto cuando se crea un servicio de token de seguridad personalizado.</span><span class="sxs-lookup"><span data-stu-id="62de1-102">Typically, the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> does not need to be used, other than when a custom security token service is created.</span></span> <span data-ttu-id="62de1-103">Cuando un servicio de token de seguridad devuelve un token de seguridad, el token de seguridad emitido contiene las referencias a los tokens de seguridad adjuntas y no adjuntas.</span><span class="sxs-lookup"><span data-stu-id="62de1-103">When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</span></span> <span data-ttu-id="62de1-104">Las referencias adjuntas hacen referencia a los tokens de seguridad que están contenidos dentro del encabezado de seguridad de un mensaje SOAP y las referencias no adjuntas son tokens de seguridad que no están incluidos dentro del encabezado de seguridad de un mensaje SOAP.</span><span class="sxs-lookup"><span data-stu-id="62de1-104">Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message.</span></span> <span data-ttu-id="62de1-105">Normalmente, estas referencias afirman la autenticidad del token de seguridad emitido.</span><span class="sxs-lookup"><span data-stu-id="62de1-105">These references typically affirm the authenticity of the issued security token.</span></span> <span data-ttu-id="62de1-106">Utilice la clase <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> para hacer referencia a una clave cifrada.</span><span class="sxs-lookup"><span data-stu-id="62de1-106">Use the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> class to reference an encrypted key.</span></span> <span data-ttu-id="62de1-107">El método <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> devuelve la clave cifrada.</span><span class="sxs-lookup"><span data-stu-id="62de1-107">The <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> method returns the encrypted key.</span></span>  
  
 [!INCLUDE[indigo2](~/includes/indigo2-md.md)]<span data-ttu-id="62de1-108"> acepta claves encapsuladas que estén bien formadas con respecto al formato de conexión.</span><span class="sxs-lookup"><span data-stu-id="62de1-108"> accepts wrapped keys that are well formed with respect to the wire format.</span></span> <span data-ttu-id="62de1-109">Se acepta y se usa el algoritmo de encapsulado de claves especificado en la conexión.</span><span class="sxs-lookup"><span data-stu-id="62de1-109">The key wrap algorithm specified on the wire is accepted and used.</span></span> <span data-ttu-id="62de1-110">No se comprueba que sea compatible con el <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> especificado por el extremo.</span><span class="sxs-lookup"><span data-stu-id="62de1-110">It is not verified to be compatible with the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> specified by the endpoint.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="62de1-111">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-111">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Byte[]" />
        <Parameter Name="encryptionMethod" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encryptedKey">
          <span data-ttu-id="62de1-112">Una matriz de <see cref="T:System.Byte" /> que contiene una clave que está cifrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-112">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted.</span>
          </span>
          <span data-ttu-id="62de1-113">Establece el valor que se devuelve del método <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-113">Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</span>
          </span>
        </param>
        <param name="encryptionMethod">
          <span data-ttu-id="62de1-114">El algoritmo criptográfico que se utilizó para cifrar la clave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-114">The cryptographic algorithm that is used to encrypt the key.</span>
          </span>
          <span data-ttu-id="62de1-115">Establece el valor de la propiedad <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-115">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62de1-116">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> utilizando la clave especificada que está cifrada y el algoritmo criptográfico utilizado para cifrar la clave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-116">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted and the cryptographic algorithm used to encrypt the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62de1-117">Utilice las cadenas constantes estáticas de <xref:System.IdentityModel.Tokens.SecurityAlgorithms> para especificar el algoritmo criptográfico para el parámetro `encryptionMethod`.</span><span class="sxs-lookup"><span data-stu-id="62de1-117">Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="62de1-118">
            <paramref name="encryptionMethod" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-118">
              <paramref name="encryptionMethod" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="62de1-119">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-119">-or-</span>
          </span>
          <span data-ttu-id="62de1-120">
            <paramref name="encryptedKey" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-120">
              <paramref name="encryptedKey" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="62de1-121">
            <paramref name="encryptedKey" /> tiene una longitud cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-121">
              <paramref name="encryptedKey" /> is zero length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, encryptingKeyIdentifier As SecurityKeyIdentifier)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ encryptingKeyIdentifier);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier identifier);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier identifier) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, identifier As SecurityKeyIdentifier)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ identifier);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Byte[]" Index="0" />
        <Parameter Name="encryptionMethod" Type="System.String" Index="1" />
        <Parameter Name="encryptingKeyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="identifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedKey">
          <span data-ttu-id="62de1-122">Una matriz de <see cref="T:System.Byte" /> que contiene una clave que está cifrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-122">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted.</span>
          </span>
          <span data-ttu-id="62de1-123">Establece el valor que se devuelve del método <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-123">Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</span>
          </span>
        </param>
        <param name="encryptionMethod">
          <span data-ttu-id="62de1-124">El algoritmo criptográfico que se utilizó para cifrar la clave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-124">The cryptographic algorithm that is used to encrypt the key.</span>
          </span>
          <span data-ttu-id="62de1-125">Establece el valor de la propiedad <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-125">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</span>
          </span>
        </param>
        <param name="encryptingKeyIdentifier">To be added.</param>
        <param name="identifier">To be added.</param>
        <summary>
          <span data-ttu-id="62de1-126">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> utilizando la clave especificada que está cifrada, el algoritmo criptográfico utilizado para cifrar la clave y un identificador clave para la clave de cifrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-126">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, and a key identifier for the encrypting key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62de1-127">Utilice las cadenas constantes estáticas de <xref:System.IdentityModel.Tokens.SecurityAlgorithms> para especificar el algoritmo criptográfico para el parámetro `encryptionMethod`.</span><span class="sxs-lookup"><span data-stu-id="62de1-127">Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="62de1-128">
            <paramref name="encryptionMethod" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-128">
              <paramref name="encryptionMethod" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="62de1-129">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-129">-or-</span>
          </span>
          <span data-ttu-id="62de1-130">
            <paramref name="encryptedKey" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-130">
              <paramref name="encryptedKey" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="62de1-131">
            <paramref name="encryptedKey" /> tiene una longitud cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-131">
              <paramref name="encryptedKey" /> is zero length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, encryptingKeyIdentifier As SecurityKeyIdentifier, carriedKeyName As String)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ encryptingKeyIdentifier, System::String ^ carriedKeyName);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier identifier, string carriedKeyName);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier identifier, string carriedKeyName) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, identifier As SecurityKeyIdentifier, carriedKeyName As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ identifier, System::String ^ carriedKeyName);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Byte[]" Index="0" />
        <Parameter Name="encryptionMethod" Type="System.String" Index="1" />
        <Parameter Name="encryptingKeyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="identifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="carriedKeyName" Type="System.String" Index="3" />
      </Parameters>
      <Docs>
        <param name="encryptedKey">
          <span data-ttu-id="62de1-132">Una matriz de <see cref="T:System.Byte" /> que contiene una clave que está cifrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-132">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted.</span>
          </span>
          <span data-ttu-id="62de1-133">Establece el valor que se devuelve del método <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-133">Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</span>
          </span>
        </param>
        <param name="encryptionMethod">
          <span data-ttu-id="62de1-134">El algoritmo criptográfico que se utilizó para cifrar la clave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-134">The cryptographic algorithm that is used to encrypt the key.</span>
          </span>
          <span data-ttu-id="62de1-135">Establece el valor de la propiedad <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-135">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</span>
          </span>
        </param>
        <param name="encryptingKeyIdentifier">To be added.</param>
        <param name="identifier">To be added.</param>
        <param name="carriedKeyName">
          <span data-ttu-id="62de1-136">Un nombre legible para el usuario que está asociado a la clave especificada en el parámetro <c>encryptedKey</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-136">A user-readable name that is associated with the key specified in the <c>encryptedKey</c> parameter.</span>
          </span>
          <span data-ttu-id="62de1-137">Establece el valor de la propiedad <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-137">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62de1-138">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> utilizando la clave especificada que está cifrada, el algoritmo criptográfico utilizado para cifrar la clave, un identificador clave para la clave de cifrado y un nombre que sea legible para el usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-138">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, a key identifier for the encrypting key and a user-readable name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62de1-139">Utilice las cadenas constantes estáticas de <xref:System.IdentityModel.Tokens.SecurityAlgorithms> para especificar el algoritmo criptográfico para el parámetro `encryptionMethod`.</span><span class="sxs-lookup"><span data-stu-id="62de1-139">Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="62de1-140">
            <paramref name="encryptionMethod" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-140">
              <paramref name="encryptionMethod" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="62de1-141">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-141">-or-</span>
          </span>
          <span data-ttu-id="62de1-142">
            <paramref name="encryptedKey" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-142">
              <paramref name="encryptedKey" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="62de1-143">
            <paramref name="encryptedKey" /> tiene una longitud cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-143">
              <paramref name="encryptedKey" /> is zero length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName, byte[] derivationNonce, int derivationLength);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName, unsigned int8[] derivationNonce, int32 derivationLength) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, encryptingKeyIdentifier As SecurityKeyIdentifier, carriedKeyName As String, derivationNonce As Byte(), derivationLength As Integer)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ encryptingKeyIdentifier, System::String ^ carriedKeyName, cli::array &lt;System::Byte&gt; ^ derivationNonce, int derivationLength);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier identifier, string carriedKeyName, byte[] derivationNonce, int derivationLength);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier identifier, string carriedKeyName, unsigned int8[] derivationNonce, int32 derivationLength) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, identifier As SecurityKeyIdentifier, carriedKeyName As String, derivationNonce As Byte(), derivationLength As Integer)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ identifier, System::String ^ carriedKeyName, cli::array &lt;System::Byte&gt; ^ derivationNonce, int derivationLength);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Byte[]" Index="0" />
        <Parameter Name="encryptionMethod" Type="System.String" Index="1" />
        <Parameter Name="encryptingKeyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="identifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="carriedKeyName" Type="System.String" Index="3" />
        <Parameter Name="derivationNonce" Type="System.Byte[]" Index="4" />
        <Parameter Name="derivationLength" Type="System.Int32" Index="5" />
      </Parameters>
      <Docs>
        <param name="encryptedKey">
          <span data-ttu-id="62de1-144">Una matriz de <see cref="T:System.Byte" /> que contiene una clave que está cifrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-144">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted.</span>
          </span>
          <span data-ttu-id="62de1-145">Establece el valor que se devuelve del método <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-145">Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</span>
          </span>
        </param>
        <param name="encryptionMethod">
          <span data-ttu-id="62de1-146">El algoritmo criptográfico que se utilizó para cifrar la clave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-146">The cryptographic algorithm that is used to encrypt the key.</span>
          </span>
          <span data-ttu-id="62de1-147">Establece el valor de la propiedad <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-147">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</span>
          </span>
        </param>
        <param name="encryptingKeyIdentifier">To be added.</param>
        <param name="identifier">To be added.</param>
        <param name="carriedKeyName">
          <span data-ttu-id="62de1-148">Un nombre legible para el usuario que está asociado a la clave especificada en el parámetro <c>encryptedKey</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-148">A user-readable name that is associated with the key specified in the <c>encryptedKey</c> parameter.</span>
          </span>
          <span data-ttu-id="62de1-149">Establece el valor de la propiedad <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-149">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> property.</span>
          </span>
        </param>
        <param name="derivationNonce">
          <span data-ttu-id="62de1-150">Una matriz de <see cref="T:System.Byte" /> que contiene el valor de seguridad (nonce) que se utilizó para crear una clave derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-150">An array of <see cref="T:System.Byte" /> that contains the nonce that was used to create a derived key.</span>
          </span>
          <span data-ttu-id="62de1-151">Establece el valor que se devuelve gracias al método <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-151">Sets the value that is returned by the <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /> method.</span>
          </span>
        </param>
        <param name="derivationLength">
          <span data-ttu-id="62de1-152">El tamaño de la clave derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-152">The size of the derived key.</span>
          </span>
          <span data-ttu-id="62de1-153">Establece el valor de la propiedad <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-153">Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62de1-154">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> utilizando la clave especificada que está cifrada, el algoritmo criptográfico utilizado para cifrar la clave, un identificador clave para la clave y un nombre que sea legible para el usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-154">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, a key identifier for the key and a user-readable name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62de1-155">Cuando se especifican los parámetros `derivationNonce` y `derivationLength`, la clave derivada implícita se utiliza en lugar de la clave de seguridad directa del token.</span><span class="sxs-lookup"><span data-stu-id="62de1-155">When the `derivationNonce` and `derivationLength` parameters are specified the implied derived key is used instead of the direct security key of the token.</span></span>  
  
 <span data-ttu-id="62de1-156">Utilice las cadenas constantes estáticas de <xref:System.IdentityModel.Tokens.SecurityAlgorithms> para especificar el algoritmo criptográfico para el parámetro `encryptionMethod`.</span><span class="sxs-lookup"><span data-stu-id="62de1-156">Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="62de1-157">
            <paramref name="encryptionMethod" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-157">
              <paramref name="encryptionMethod" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="62de1-158">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-158">-or-</span>
          </span>
          <span data-ttu-id="62de1-159">
            <paramref name="encryptedKey" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-159">
              <paramref name="encryptedKey" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="62de1-160">
            <paramref name="encryptedKey" /> tiene una longitud cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-160">
              <paramref name="encryptedKey" /> is zero length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CarriedKeyName">
      <MemberSignature Language="C#" Value="public string CarriedKeyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CarriedKeyName" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CarriedKeyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CarriedKeyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62de1-161">Obtiene un nombre legible para el usuario que está asociado a la clave cifrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-161">Gets a user-readable name that is associated with the encrypted key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62de1-162">Un nombre legible para el usuario que está asociado a la clave cifrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-162">A user-readable name that is associated with the encrypted key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62de1-163">Cuando el <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName%2A> propiedad se serializa en XML, éste se sitúa en el <`CarriedKeyName`> elemento.</span><span class="sxs-lookup"><span data-stu-id="62de1-163">When the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName%2A> property is serialized into XML, it is placed in the <`CarriedKeyName`> element.</span></span> <span data-ttu-id="62de1-164">Para las claves cifradas, el <`CarriedKeyName`> es un elemento opcional que asocia un nombre legible para el usuario a un valor de clave.</span><span class="sxs-lookup"><span data-stu-id="62de1-164">For encrypted keys, the <`CarriedKeyName`> element is an optional element that associates a user-readable name with a key value.</span></span> <span data-ttu-id="62de1-165">Este nombre, a continuación, puede utilizarse para hacer referencia a la clave mediante el <`KeyName`> elemento dentro de la <`KeyInfo`> elemento.</span><span class="sxs-lookup"><span data-stu-id="62de1-165">This name can then be used to reference the key using the <`KeyName`> element within the <`KeyInfo`> element.</span></span> <span data-ttu-id="62de1-166">El mismo <`CarriedKeyName`> valor de elemento, a diferencia de un valor de identificador, puede aparecer varias veces en un solo documento.</span><span class="sxs-lookup"><span data-stu-id="62de1-166">The same <`CarriedKeyName`> element value, unlike an ID value, can occur multiple times within a single document.</span></span> <span data-ttu-id="62de1-167">El valor de la clave debe ser el mismo en todas las <`EncryptedKey`> elementos identificados con el mismo <`CarriedKeyName`> nombre de un documento XML.</span><span class="sxs-lookup"><span data-stu-id="62de1-167">The value of the key must be the same in all <`EncryptedKey`> elements identified with the same <`CarriedKeyName`> name within an XML document.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptingKeyIdentifier">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKeyIdentifier EncryptingKeyIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityKeyIdentifier EncryptingKeyIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EncryptingKeyIdentifier As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityKeyIdentifier ^ EncryptingKeyIdentifier { System::IdentityModel::Tokens::SecurityKeyIdentifier ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62de1-168">Obtiene un identificador clave para la clave cifrando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-168">Gets a key identifier for the encrypting key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62de1-169">
            <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> que representa el identificador clave para la clave de cifrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-169">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier for the encrypting key.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionMethod">
      <MemberSignature Language="C#" Value="public string EncryptionMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncryptionMethod" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EncryptionMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EncryptionMethod { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62de1-170">Obtiene el algoritmo criptográfico que se utilizó para cifrar la clave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-170">Gets the cryptographic algorithm that is used to encrypt the key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62de1-171">El algoritmo criptográfico que se utilizó para cifrar la clave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-171">The cryptographic algorithm that is used to encrypt the key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62de1-172">Normalmente, el valor de la propiedad <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod%2A> es una de las cadenas constantes estáticas en la clase <xref:System.IdentityModel.Tokens.SecurityAlgorithms>.</span><span class="sxs-lookup"><span data-stu-id="62de1-172">Typically, the value of the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod%2A> property is one of the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncryptedKey">
      <MemberSignature Language="C#" Value="public byte[] GetEncryptedKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetEncryptedKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEncryptedKey () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetEncryptedKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="62de1-173">Obtiene la clave cifrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-173">Gets the encrypted key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="62de1-174">Una matriz de <see cref="T:System.Byte" /> que contiene la clave cifrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-174">An array of <see cref="T:System.Byte" /> that contains the encrypted key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62de1-175">La matriz que es devuelta por el método <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> es un clon de la clave cifrada.</span><span class="sxs-lookup"><span data-stu-id="62de1-175">The array that is returned by the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> method is a clone of the encrypted key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Matches">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="62de1-176">Devuelve un valor que indica si el identificador de clave para esta instancia es equivalente al objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-176">Returns a value that indicates whether the key identifier for this instance is equivalent to the specified object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Matches (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Matches(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Matches (clause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Matches(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ clause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="clause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="clause">To be added.</param>
        <summary>
          <span data-ttu-id="62de1-177">Devuelve un valor que indica si el identificador clave para esta instancia es equivalente a la cláusula del identificador clave especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-177">Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="62de1-178">
            <see langword="true" /> si <paramref name="clause" /> es del tipo <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> y tiene la misma clave cifrada, método de cifrado y nombre legible por el usuario que la instancia actual; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-178">
              <see langword="true" /> if <paramref name="clause" /> is of type <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> and has the same encrypted key, encryption method and user-readable name as the current instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="62de1-179">
            <paramref name="clause" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-179">
              <paramref name="clause" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" />
        <altmember cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" />
        <altmember cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" />
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (byte[] encryptedKey, string encryptionMethod, string carriedKeyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(unsigned int8[] encryptedKey, string encryptionMethod, string carriedKeyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Matches (encryptedKey As Byte(), encryptionMethod As String, carriedKeyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Matches(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::String ^ carriedKeyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Byte[]" />
        <Parameter Name="encryptionMethod" Type="System.String" />
        <Parameter Name="carriedKeyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encryptedKey">
          <span data-ttu-id="62de1-180">Una matriz de <see cref="T:System.Byte" /> que contiene una clave que está cifrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-180">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted.</span>
          </span>
        </param>
        <param name="encryptionMethod">
          <span data-ttu-id="62de1-181">El algoritmo criptográfico que se utilizó para cifrar la clave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-181">The cryptographic algorithm that is used to encrypt the key.</span>
          </span>
        </param>
        <param name="carriedKeyName">
          <span data-ttu-id="62de1-182">Un nombre legible para el usuario que está asociado a la clave cifrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-182">A user-readable name that is associated with the encrypted key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62de1-183">Devuelve un valor que indica si el identificador clave para esta instancia es equivalente a la clave cifrada especificada, al método de cifrado y al nombre legible por el usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-183">Returns a value that indicates whether the key identifier for this instance is equivalent to the specified encrypted key, encryption method and user-readable name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="62de1-184">
            <see langword="true" /> si los parámetros <paramref name="encryptedKey" />, <paramref name="encryptionMethod" /> y <paramref name="carriedKeyName" /> tienen los mismos valores devueltos por el método <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> y <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> y por las propiedades <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" />, respectivamente; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-184">
              <see langword="true" /> if the <paramref name="encryptedKey" />, <paramref name="encryptionMethod" /> and <paramref name="carriedKeyName" /> parameters have the same values returned by the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method and the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> and the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> properties, respectively; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="62de1-185">Devuelve una cadena que representa el objeto actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-185">Returns a string that represents the current object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="62de1-186">Objeto actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62de1-186">The current object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62de1-187">El método <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString%2A> devuelve una cadena que contiene la clave cifrada y el algoritmo criptográfico que se utilizan para cifrar la clave.</span><span class="sxs-lookup"><span data-stu-id="62de1-187">The <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString%2A> method returns a string that contains the encrypted key and the cryptographic algorithm that is used to encrypt the key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>