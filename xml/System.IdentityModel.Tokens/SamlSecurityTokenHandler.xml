<Type Name="SamlSecurityTokenHandler" FullName="System.IdentityModel.Tokens.SamlSecurityTokenHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="14e84be0c3d40034269479a71f7803d3cc4ac507" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30420639" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SamlSecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SamlSecurityTokenHandler extends System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class SamlSecurityTokenHandler&#xA;Inherits SecurityTokenHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class SamlSecurityTokenHandler : System::IdentityModel::Tokens::SecurityTokenHandler" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityTokenHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa un controlador de tokens de seguridad que crea tokens de seguridad a partir de aserciones de SAML 1.1.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler> clase serializa y deserializa los tokens de seguridad respaldados por aserciones de SAML 1.1 en <xref:System.IdentityModel.Tokens.SamlSecurityToken> objetos. Controladores de tokens de seguridad son responsables de crear, leer, escribir y validar los tokens.  
  
 Puede configurar un servicio de token de seguridad (STS) o usuarios de confianza (RP) los tokens de aplicación para procesar seguridad basado en aserción de SAML 1.1 mediante la adición de una instancia de la <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler> clase a la <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection> objeto configurado para el servicio (o aplicación). Esto puede hacerse mediante programación o en el archivo de configuración. Se configura el propio controlador de la configuración especificada para la colección a través de la colección <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration%2A> propiedad cuando se agrega a la colección. Aunque es posible configurar el controlador de forma individual estableciendo su <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> propiedad, esto normalmente no es necesario; sin embargo, si el controlador debe configurarse de forma individual, la propiedad debe establecerse después de que el controlador se agrega a la colección.  
  
 En muchos casos, la <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler> clase puede usarse como-es; sin embargo, la clase proporciona muchos puntos de extensión a través de los métodos expone. Al derivar de la <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler> y reemplazar métodos específicos, puede modificar la funcionalidad del procesamiento de token proporcionado en la implementación predeterminada, o puede agregar el procesamiento de extensiones para la especificación de aserción de SAML que pueda ser necesaria en algunos escenarios personalizados.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SamlSecurityTokenHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SamlSecurityTokenHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una instancia nueva de la clase <see cref="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" /> con requisitos de token de seguridad predeterminados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement%2A> propiedad está establecida en una instancia de <xref:System.IdentityModel.Tokens.SamlSecurityTokenRequirement> que se crea con el constructor predeterminado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SamlSecurityTokenHandler (System.IdentityModel.Tokens.SamlSecurityTokenRequirement samlSecurityTokenRequirement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.SamlSecurityTokenRequirement samlSecurityTokenRequirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SamlSecurityTokenHandler(System::IdentityModel::Tokens::SamlSecurityTokenRequirement ^ samlSecurityTokenRequirement);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="samlSecurityTokenRequirement" Type="System.IdentityModel.Tokens.SamlSecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="samlSecurityTokenRequirement">
          <see cref="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" /> que usará esta instancia al validar tokens. Establece la propiedad <see cref="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" /> con los requisitos de token de seguridad especificados.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="samlSecurityTokenRequirement" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddDelegateToAttributes">
      <MemberSignature Language="C#" Value="protected virtual void AddDelegateToAttributes (System.Security.Claims.ClaimsIdentity subject, System.Collections.Generic.ICollection&lt;System.IdentityModel.Tokens.SamlAttribute&gt; attributes, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddDelegateToAttributes(class System.Security.Claims.ClaimsIdentity subject, class System.Collections.Generic.ICollection`1&lt;class System.IdentityModel.Tokens.SamlAttribute&gt; attributes, class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddDelegateToAttributes (subject As ClaimsIdentity, attributes As ICollection(Of SamlAttribute), tokenDescriptor As SecurityTokenDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddDelegateToAttributes(System::Security::Claims::ClaimsIdentity ^ subject, System::Collections::Generic::ICollection&lt;System::IdentityModel::Tokens::SamlAttribute ^&gt; ^ attributes, System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subject" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="attributes" Type="System.Collections.Generic.ICollection&lt;System.IdentityModel.Tokens.SamlAttribute&gt;" />
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="subject">El delegado de este objeto <see cref="T:System.Security.Claims.ClaimsIdentity" /> se serializará en <see cref="T:System.IdentityModel.Tokens.SamlAttribute" />. El delegado se especifica mediante la propiedad <see cref="P:System.Security.Claims.ClaimsIdentity.Actor" />.</param>
        <param name="attributes">La colección de atributos en la que se serializará el token de ActAs.</param>
        <param name="tokenDescriptor">Descriptor de token.</param>
        <summary>Agrega todos los delegados asociados al asunto ActAs en la colección de atributos.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subject" /> es <see langword="null" />.  
  
 O bien  
  
 <paramref name="tokenDescriptor" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Assertion">
      <MemberSignature Language="C#" Value="public const string Assertion;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Assertion" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SamlSecurityTokenHandler.Assertion" />
      <MemberSignature Language="VB.NET" Value="Public Const Assertion As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ Assertion;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>urn:oasis:names:tc:SAML:1.0:assertion</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BearerConfirmationMethod">
      <MemberSignature Language="C#" Value="public const string BearerConfirmationMethod;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string BearerConfirmationMethod" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SamlSecurityTokenHandler.BearerConfirmationMethod" />
      <MemberSignature Language="VB.NET" Value="Public Const BearerConfirmationMethod As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ BearerConfirmationMethod;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>urn:oasis:names:tc:SAML:1.0:cm:bearer</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public override bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Lector XML situado en un elemento de inicio. No se debe avanzar el lector.</param>
        <summary>Indica si el elemento XML actual se puede leer como token del tipo administrado por esta instancia.</summary>
        <returns>
          <see langword="true" /> si el método <see cref="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" /> puede leer el elemento; en caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidateToken">
      <MemberSignature Language="C#" Value="public override bool CanValidateToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanValidateToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanValidateToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanValidateToken { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si este controlador puede validar tokens de tipo <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</summary>
        <value>
          <see langword="true" />, que indica que el controlador puede validar tokens de tipo <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método invalida el método de clase base y siempre devuelve `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public override bool CanWriteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWriteToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWriteToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWriteToken { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si este controlador puede serializar tokens de tipo <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</summary>
        <value>
          <see langword="true" />; que indica que el controlador puede serializar tokens de tipo <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método invalida el método de clase base y siempre devuelve `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CertificateValidator">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Selectors.X509CertificateValidator CertificateValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Selectors.X509CertificateValidator CertificateValidator" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CertificateValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificateValidator As X509CertificateValidator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Selectors::X509CertificateValidator ^ CertificateValidator { System::IdentityModel::Selectors::X509CertificateValidator ^ get(); void set(System::IdentityModel::Selectors::X509CertificateValidator ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.X509CertificateValidator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el validador de certificado X.509 usado por la instancia actual para validar los certificados X.509.</summary>
        <value>
          <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> que representa el validador.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectAttributeValues">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.ICollection&lt;System.IdentityModel.Tokens.SamlAttribute&gt; CollectAttributeValues (System.Collections.Generic.ICollection&lt;System.IdentityModel.Tokens.SamlAttribute&gt; attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.ICollection`1&lt;class System.IdentityModel.Tokens.SamlAttribute&gt; CollectAttributeValues(class System.Collections.Generic.ICollection`1&lt;class System.IdentityModel.Tokens.SamlAttribute&gt; attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CollectAttributeValues (attributes As ICollection(Of SamlAttribute)) As ICollection(Of SamlAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::ICollection&lt;System::IdentityModel::Tokens::SamlAttribute ^&gt; ^ CollectAttributeValues(System::Collections::Generic::ICollection&lt;System::IdentityModel::Tokens::SamlAttribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.IdentityModel.Tokens.SamlAttribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.Generic.ICollection&lt;System.IdentityModel.Tokens.SamlAttribute&gt;" />
      </Parameters>
      <Docs>
        <param name="attributes">Colección de tipos <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> que contienen los atributos generados a partir de notificaciones.</param>
        <summary>Obtiene los atributos con un tipo común de petición, un tipo de valor de petición, y un emisor original en un solo atributo con varios valores.</summary>
        <returns>Colección de <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> que contiene los atributos derivados de la colección de entrada. Los atributos en la colección de entrada que comparten un tipo común de reclamación, el valor de reclamación y el emisor original con otros atributos se consolidan en un solo atributo con varios valores en la colección de salida. Los atributos en la colección de entrada que no comparten el tipo de reclamación, el valor de reclamación o el emisor original con otros atributos aparecen inalterados en la colección de salida.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAdvice">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SamlAdvice CreateAdvice (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SamlAdvice CreateAdvice(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAdvice (tokenDescriptor As SecurityTokenDescriptor) As SamlAdvice" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SamlAdvice ^ CreateAdvice(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SamlAdvice</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor">Descriptor de token.</param>
        <summary>Cuando se reemplaza en una clase derivada, crea un objeto <see cref="T:System.IdentityModel.Tokens.SamlAdvice" /> para la aserción.</summary>
        <returns>Un objeto <see cref="T:System.IdentityModel.Tokens.SamlAdvice" />. El valor predeterminado es <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, este método devuelve `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAssertion">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SamlAssertion CreateAssertion (string issuer, System.IdentityModel.Tokens.SamlConditions conditions, System.IdentityModel.Tokens.SamlAdvice advice, System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Tokens.SamlStatement&gt; statements);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SamlAssertion CreateAssertion(string issuer, class System.IdentityModel.Tokens.SamlConditions conditions, class System.IdentityModel.Tokens.SamlAdvice advice, class System.Collections.Generic.IEnumerable`1&lt;class System.IdentityModel.Tokens.SamlStatement&gt; statements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(System.String,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAssertion (issuer As String, conditions As SamlConditions, advice As SamlAdvice, statements As IEnumerable(Of SamlStatement)) As SamlAssertion" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SamlAssertion ^ CreateAssertion(System::String ^ issuer, System::IdentityModel::Tokens::SamlConditions ^ conditions, System::IdentityModel::Tokens::SamlAdvice ^ advice, System::Collections::Generic::IEnumerable&lt;System::IdentityModel::Tokens::SamlStatement ^&gt; ^ statements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SamlAssertion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuer" Type="System.String" />
        <Parameter Name="conditions" Type="System.IdentityModel.Tokens.SamlConditions" />
        <Parameter Name="advice" Type="System.IdentityModel.Tokens.SamlAdvice" />
        <Parameter Name="statements" Type="System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Tokens.SamlStatement&gt;" />
      </Parameters>
      <Docs>
        <param name="issuer">Emisor de la aserción.</param>
        <param name="conditions">Objeto <see cref="T:System.IdentityModel.Tokens.SamlConditions" /> que se va a agregar a la aserción.</param>
        <param name="advice">Objeto <see cref="T:System.IdentityModel.Tokens.SamlAdvice" /> que se va a agregar a la aserción.</param>
        <param name="statements">Colección de <see cref="T:System.IdentityModel.Tokens.SamlStatement" /> que se van a agregar a la aserción.</param>
        <summary>Crea un objeto <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> mediante el emisor, las condiciones, el consejo y las instrucciones que se especifican. Puede invalidar este método para personalizar los parámetros usados para crear la aserción.</summary>
        <returns>Aserción SAML que se va a crear.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se crea un identificador aleatorio único para la aserción y <xref:System.IdentityModel.Tokens.SamlAssertion.AssertionId%2A> propiedad se establece en este valor. La propiedad <xref:System.IdentityModel.Tokens.SamlAssertion.IssueInstant%2A> se establece como <xref:System.DateTime.UtcNow%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttribute">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SamlAttribute CreateAttribute (System.Security.Claims.Claim claim, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SamlAttribute CreateAttribute(class System.Security.Claims.Claim claim, class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SamlAttribute ^ CreateAttribute(System::Security::Claims::Claim ^ claim, System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SamlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claim" Type="System.Security.Claims.Claim" />
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="claim">
          <see cref="T:System.Security.Claims.Claim" /> desde la que se va a generar el atributo de SAML.</param>
        <param name="tokenDescriptor">Descriptor de token.</param>
        <summary>Crea un objeto <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> a partir de una reclamación.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> que contiene la reclamación convertida.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="claim" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateAttributeStatement">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SamlAttributeStatement CreateAttributeStatement (System.IdentityModel.Tokens.SamlSubject samlSubject, System.Security.Claims.ClaimsIdentity subject, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SamlAttributeStatement CreateAttributeStatement(class System.IdentityModel.Tokens.SamlSubject samlSubject, class System.Security.Claims.ClaimsIdentity subject, class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SamlAttributeStatement ^ CreateAttributeStatement(System::IdentityModel::Tokens::SamlSubject ^ samlSubject, System::Security::Claims::ClaimsIdentity ^ subject, System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SamlAttributeStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="samlSubject" Type="System.IdentityModel.Tokens.SamlSubject" />
        <Parameter Name="subject" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="samlSubject">Objeto <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> que se usa en el <see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" /> creado.</param>
        <param name="subject">El objeto <see cref="T:System.Security.Claims.ClaimsIdentity" /> que contiene las notificaciones que se convertirán en atributos de SAML.</param>
        <param name="tokenDescriptor">Descriptor de token.</param>
        <summary>Crea un objeto <see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" /> a partir de un descriptor de token.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" /> que contiene las reclamaciones convertidas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método puede devolver `null` si el descriptor de token no contiene ningún asunto o el sujeto no tiene las notificaciones.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAuthenticationStatement">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SamlAuthenticationStatement CreateAuthenticationStatement (System.IdentityModel.Tokens.SamlSubject samlSubject, System.Security.Claims.AuthenticationInformation authInfo, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SamlAuthenticationStatement CreateAuthenticationStatement(class System.IdentityModel.Tokens.SamlSubject samlSubject, class System.Security.Claims.AuthenticationInformation authInfo, class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SamlAuthenticationStatement ^ CreateAuthenticationStatement(System::IdentityModel::Tokens::SamlSubject ^ samlSubject, System::Security::Claims::AuthenticationInformation ^ authInfo, System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SamlAuthenticationStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="samlSubject" Type="System.IdentityModel.Tokens.SamlSubject" />
        <Parameter Name="authInfo" Type="System.Security.Claims.AuthenticationInformation" />
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="samlSubject">SamlSubject de la instrucción.</param>
        <param name="authInfo">
          <see cref="T:System.Security.Claims.AuthenticationInformation" /> desde la que se va a generar la instrucción de autenticación de SAML.</param>
        <param name="tokenDescriptor">Contiene el resto de información que se utiliza en la emisión de tokens.</param>
        <summary>Crea una instrucción de autenticación SAML 1.1 a partir de la información de autenticación especificada.</summary>
        <returns>La instrucción de autenticación SAML creada.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="samlSubject" /> es <see langword="null" />.  
  
 O bien  
  
 <paramref name="tokenDescriptor" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateClaims">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Claims.ClaimsIdentity CreateClaims (System.IdentityModel.Tokens.SamlSecurityToken samlSecurityToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Claims.ClaimsIdentity CreateClaims(class System.IdentityModel.Tokens.SamlSecurityToken samlSecurityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.SamlSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::Claims::ClaimsIdentity ^ CreateClaims(System::IdentityModel::Tokens::SamlSecurityToken ^ samlSecurityToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="samlSecurityToken" Type="System.IdentityModel.Tokens.SamlSecurityToken" />
      </Parameters>
      <Docs>
        <param name="samlSecurityToken">
          <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> que representa el token de seguridad a partir del cual se van a crear las notificaciones.</param>
        <summary>Crea notificaciones a partir de un token SAML 1.1.</summary>
        <returns>
          <see cref="T:System.Security.Claims.ClaimsIdentity" /> que contiene las reclamaciones extraídas del token.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="samlSecurityToken" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.IdentityModel.Tokens.SamlSecurityToken.Assertion" /> de <paramref name="samlSecurityToken" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">El controlador no está configurado o no se ha configurado un registro de nombres de emisores para el controlador. (La propiedad <see cref="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.Configuration" /> es <see langword="null" /> o se establece en un <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /> con una propiedad <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry" /> que es <see langword="null" />.</exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">El nombre del emisor devuelto por el registro de nombres de emisores configurado para el token de seguridad (<paramref name="samlSecurityToken" />) es <see langword="null" /> o está vacío.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateConditions">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SamlConditions CreateConditions (System.IdentityModel.Protocols.WSTrust.Lifetime tokenLifetime, string relyingPartyAddress, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SamlConditions CreateConditions(class System.IdentityModel.Protocols.WSTrust.Lifetime tokenLifetime, string relyingPartyAddress, class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateConditions (tokenLifetime As Lifetime, relyingPartyAddress As String, tokenDescriptor As SecurityTokenDescriptor) As SamlConditions" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SamlConditions ^ CreateConditions(System::IdentityModel::Protocols::WSTrust::Lifetime ^ tokenLifetime, System::String ^ relyingPartyAddress, System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SamlConditions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenLifetime" Type="System.IdentityModel.Protocols.WSTrust.Lifetime" />
        <Parameter Name="relyingPartyAddress" Type="System.String" />
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenLifetime">Duración del token.</param>
        <param name="relyingPartyAddress">Dirección del extremo para la cual se crea el token. La dirección se modela como condición de AudienceRestriction.</param>
        <param name="tokenDescriptor">Descriptor de token.</param>
        <summary>Crea las condiciones para la aserción.</summary>
        <returns>Un objeto de <see cref="T:System.IdentityModel.Tokens.SamlConditions" /> que contiene las condiciones para la aserción.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por lo general, las condiciones deben incluirse en las aserciones para limitar el impacto de un uso incorrecto de la aserción. Especificar las condiciones NotBefore y NotOnOrAfter puede limitar el período de una vulnerabilidad en el caso de una aserción en peligro. La AudienceRestrictionCondition puede usarse para establecer explícitamente la entidad de confianza deseada o partes de la aserción, que se acopla con cumplimiento de restricción de audiencia apropiada en usuarios de confianza pueden ayudar a mitigar los ataques de suplantación de identidad entre usuarios de confianza.  
  
 La implementación predeterminada crea NotBefore y NotOnOrAfter condiciones en función de la <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A> propiedad de la `tokenDescriptor`. También generará un AudienceRestrictionCondition limitar el consumo de la aserción a la <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A> propiedad de la `tokenDescriptor`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSamlSubject">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SamlSubject CreateSamlSubject (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SamlSubject CreateSamlSubject(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateSamlSubject (tokenDescriptor As SecurityTokenDescriptor) As SamlSubject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SamlSubject ^ CreateSamlSubject(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SamlSubject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor">Descriptor del token de seguridad a partir del cual se va a crear el asunto.</param>
        <summary>Crea un sujeto de SAML 1.1 para la aserción.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> que representa el sujeto de la aserción.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tokenDescriptor" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenReference">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateSecurityTokenReference (System.IdentityModel.Tokens.SecurityToken token, bool attached);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateSecurityTokenReference(class System.IdentityModel.Tokens.SecurityToken token, bool attached) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSecurityTokenReference (token As SecurityToken, attached As Boolean) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ CreateSecurityTokenReference(System::IdentityModel::Tokens::SecurityToken ^ token, bool attached);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="attached" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="token">El token de SAML.</param>
        <param name="attached">Un valor que indica si una referencia adjunta o no adjunta debe crearse.</param>
        <summary>Crea la referencia del token de seguridad cuando el token no está adjunto al mensaje.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> que representa la referencia del token. (Una instancia de <see cref="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" /> se devuelve realmente.)</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="token" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateStatements">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Tokens.SamlStatement&gt; CreateStatements (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.IdentityModel.Tokens.SamlStatement&gt; CreateStatements(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateStatements (tokenDescriptor As SecurityTokenDescriptor) As IEnumerable(Of SamlStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::IdentityModel::Tokens::SamlStatement ^&gt; ^ CreateStatements(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Tokens.SamlStatement&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor">Descriptor de token a partir del que se van a crear las instrucciones.</param>
        <summary>Crea las instrucciones SAML 1.1 que deben incluirse en la aserción.</summary>
        <returns>Una enumeración de <see cref="T:System.IdentityModel.Tokens.SamlStatement" /> que contiene las instrucciones.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las instrucciones no son necesarios en una aserción de SAML 1.1. Este método puede devolver una colección vacía.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tokenDescriptor" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken CreateToken(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateToken (tokenDescriptor As SecurityTokenDescriptor) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ CreateToken(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor">Descriptor del token a partir del cual se va a crear el token de seguridad.</param>
        <summary>Crea un token de seguridad basándose en el descriptor de token.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> que representa el token de seguridad SAML 1.1. (El token devuelto es realmente una instancia de <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.)</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tokenDescriptor" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWindowsIdentity">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Principal.WindowsIdentity CreateWindowsIdentity (string upn);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Principal.WindowsIdentity CreateWindowsIdentity(string upn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateWindowsIdentity (upn As String) As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::Principal::WindowsIdentity ^ CreateWindowsIdentity(System::String ^ upn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="upn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="upn">UPN que se va a usar para crear la identidad.</param>
        <summary>Crea un objeto <see cref="T:System.Security.Principal.WindowsIdentity" /> utilizando el nombre principal del usuario (UPN) especificado.</summary>
        <returns>La identidad de Windows creada.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="upn" /> es <see langword="null" /> o una cadena vacía.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateXmlStringFromAttributes">
      <MemberSignature Language="C#" Value="protected virtual string CreateXmlStringFromAttributes (System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Tokens.SamlAttribute&gt; attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string CreateXmlStringFromAttributes(class System.Collections.Generic.IEnumerable`1&lt;class System.IdentityModel.Tokens.SamlAttribute&gt; attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateXmlStringFromAttributes (attributes As IEnumerable(Of SamlAttribute)) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ CreateXmlStringFromAttributes(System::Collections::Generic::IEnumerable&lt;System::IdentityModel::Tokens::SamlAttribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Tokens.SamlAttribute&gt;" />
      </Parameters>
      <Docs>
        <param name="attributes">Una enumeración de tipo <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> que contiene los atributos.</param>
        <summary>Compila una cadena con formato XML de una colección de atributos SAML 1.1 que representan el Actor.</summary>
        <returns>Una cadena de XML correcta construida utilizando los atributos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La cadena tiene la forma "\<Actor >\<nombre de atributo, ns >\<AttributeValue >... \</AttributeValue >,...  \< /Atributo >... \</Actor > "  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DenormalizeAuthenticationType">
      <MemberSignature Language="C#" Value="protected virtual string DenormalizeAuthenticationType (string normalizedAuthenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string DenormalizeAuthenticationType(string normalizedAuthenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function DenormalizeAuthenticationType (normalizedAuthenticationType As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ DenormalizeAuthenticationType(System::String ^ normalizedAuthenticationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedAuthenticationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="normalizedAuthenticationType">Valor normalizado. Uno de los valores de <see cref="T:System.IdentityModel.Tokens.AuthenticationMethods" />.</param>
        <summary>Devuelve el identificador de método de autenticación de SAML11 que coincide con el valor normalizado especificado para un método de autenticación de SAML.</summary>
        <returns>El identificador (URI) del método de autenticación SAML11 que coincide con el identificador normalizado especificado. Si no se encuentra ningún método de autenticación que coincide con SAML11, se devuelve el URI de <paramref name="normalizedAuthenticationType" /> inalterado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType%2A> método devuelve el identificador de método de autenticación de SAML11 que coincida con lo especificado normalizado URI. Por ejemplo, si <xref:System.IdentityModel.Tokens.AuthenticationMethods.X509> especificado para `normalizedAuthenticationType`, se devuelve el URI siguiente: `urn:oasis:names:tc:SAML:1.0:am:X509-PKI`. Si no existe una asignación para `normalizedAuthenticationType`, se devuelve sin modificar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectReplayedToken">
      <MemberSignature Language="C#" Value="protected override void DetectReplayedToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DetectReplayedToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DetectReplayedToken (token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DetectReplayedToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> que representa el token de seguridad de SAML 1.1 (el token debe ser de tipo <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />) que se comprobará.</param>
        <summary>Produce una excepción si el token especificado ya existe en la memoria caché de repetición de tokens; de lo contrario, el token se agrega a la memoria caché.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El comportamiento predeterminado es solo para comprobar tokens de portador (tokens que no tiene claves). La caché de respuesta de token es el <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.Caches%2A> objeto configurado para este controlador a través de la <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.TokenReplayCacheExpirationPeriod*> propiedad de la <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration> objeto al que hace referencia a través de la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="token" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> es <see langword="null" />.  
  
 O bien  
  
 La propiedad <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.Caches" /> de la configuración del controlador (acceso mediante la propiedad <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />) es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="token" /> no puede combinarse como una instancia de <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException">El identificador de la aserción asociada al token es <see langword="null" /> o está vacío. (La propiedad <see cref="P:System.IdentityModel.Tokens.SamlSecurityToken.Assertion" /> del token hace referencia a <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> que tiene una propiedad <see cref="P:System.IdentityModel.Tokens.SamlAssertion.Id" /> que hace referencia a <see cref="T:System.IdentityModel.Tokens.SamlId" /> con una propiedad <see cref="P:System.IdentityModel.Tokens.SamlId.Value" /> que es <see langword="null" /> o está vacía).</exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException">El token ya existe en <see cref="T:System.IdentityModel.Tokens.TokenReplayCache" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUpn">
      <MemberSignature Language="C#" Value="protected virtual string FindUpn (System.Security.Claims.ClaimsIdentity claimsIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FindUpn(class System.Security.Claims.ClaimsIdentity claimsIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn(System.Security.Claims.ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FindUpn(System::Security::Claims::ClaimsIdentity ^ claimsIdentity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claimsIdentity" Type="System.Security.Claims.ClaimsIdentity" />
      </Parameters>
      <Docs>
        <param name="claimsIdentity">El objeto de identidad de notificaciones que contiene la notificación de UPN deseada.</param>
        <summary>Busca el valor de petición de UPN en el objeto <see cref="T:System.Security.Claims.ClaimsIdentity" /> especificado con el fin de asignar la identidad a un objeto <see cref="T:System.Security.Claims.WindowsClaimsIdentity" />.</summary>
        <returns>Cadena que contiene el valor de petición de UPN encontrado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncryptingCredentials">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.EncryptingCredentials GetEncryptingCredentials (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.EncryptingCredentials GetEncryptingCredentials(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetEncryptingCredentials (tokenDescriptor As SecurityTokenDescriptor) As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::EncryptingCredentials ^ GetEncryptingCredentials(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor">Recupera algunas credenciales de cifrado de ámbito del objeto Scope.</param>
        <summary>Obtiene las credenciales de cifrado de tokens. Invalide este método para cambiar las credenciales de cifrado de tokens.</summary>
        <returns>
          <see cref="T:System.IdentityModel.SecurityTokenService.EncryptingCredentials" /> que representa las credenciales de cifrado de tokens.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La implementación predeterminada recupera las credenciales de cifrado de la <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A> propiedad de la `tokenDescriptor`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tokenDescriptor" /> es <see langword="null" />.</exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">Las credenciales de cifrado recuperadas del descriptor de token son asimétricas.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSigningCredentials">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SigningCredentials GetSigningCredentials (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SigningCredentials GetSigningCredentials(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSigningCredentials (tokenDescriptor As SecurityTokenDescriptor) As SigningCredentials" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SigningCredentials ^ GetSigningCredentials(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SigningCredentials</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor">Descriptor de token.</param>
        <summary>Obtiene las credenciales para firmar la aserción.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SigningCredentials" /> que representa las credenciales para firmar la aserción.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las aserciones de SAML2 utilizadas como tokens de seguridad deben estar firmadas.  
  
 La implementación predeterminada usa la <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A> propiedad de la `tokenDescriptor` para recuperar las credenciales.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tokenDescriptor" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTokenReplayCacheEntryExpirationTime">
      <MemberSignature Language="C#" Value="protected virtual DateTime GetTokenReplayCacheEntryExpirationTime (System.IdentityModel.Tokens.SamlSecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.DateTime GetTokenReplayCacheEntryExpirationTime(class System.IdentityModel.Tokens.SamlSecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.SamlSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTokenReplayCacheEntryExpirationTime (token As SamlSecurityToken) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual DateTime GetTokenReplayCacheEntryExpirationTime(System::IdentityModel::Tokens::SamlSecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SamlSecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">El token para el que se va a devolver la hora de expiración.</param>
        <summary>Devuelve el tiempo límite que el token debe almacenarse en la memoria caché de reproducción de tokens.</summary>
        <returns>
          <see cref="T:System.DateTime" /> que representa la hora de vencimiento.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, este método devuelve el NotOnOrAfter de la condición de SAML, si está presente.  
  
 Si ese valor no existe, devuelve el NotOnOrAfter de la primera SubjectConfirmationData.  
  
 Esta función nunca devolverá un valor más allá de la hora actual (<xref:System.DateTime.Now%2A>) que Configuration.TokenReplayCacheExpirationPeriod.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="token" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTokenTypeIdentifiers">
      <MemberSignature Language="C#" Value="public override string[] GetTokenTypeIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetTokenTypeIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenTypeIdentifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTokenTypeIdentifiers () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetTokenTypeIdentifiers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene los identificadores de tipo de token admitidos por este controlador.</summary>
        <returns>Una matriz de cadenas que contiene el los identificadores de tipo de token admitidos por este controlador.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyInfoSerializer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Selectors.SecurityTokenSerializer KeyInfoSerializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Selectors.SecurityTokenSerializer KeyInfoSerializer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyInfoSerializer As SecurityTokenSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Selectors::SecurityTokenSerializer ^ KeyInfoSerializer { System::IdentityModel::Selectors::SecurityTokenSerializer ^ get(); void set(System::IdentityModel::Selectors::SecurityTokenSerializer ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el serializador de tokens de seguridad que se utiliza para serializar y deserializar los identificadores de clave.</summary>
        <value>Clase <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> que representa el serializador.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Serializa y deserializa <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier> objetos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Se ha intentado establecer el valor en <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfigElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList customConfigElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadCustomConfiguration (customConfigElements As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadCustomConfiguration(System::Xml::XmlNodeList ^ customConfigElements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customConfigElements" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="customConfigElements">
          <see cref="T:System.Xml.XmlNodeList" /> que especifica los requisitos de token de autenticación de SAML.</param>
        <summary>Carga la configuración personalizado de XML.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="customConfigElements" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La configuración especificada en <paramref name="customConfigElements" /> no es válida.</exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public const string Namespace;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Namespace" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SamlSecurityTokenHandler.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Const Namespace As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ Namespace;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>urn:oasis:names:tc:SAML:1.0</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizeAuthenticationType">
      <MemberSignature Language="C#" Value="protected virtual string NormalizeAuthenticationType (string saml11AuthenticationMethod);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string NormalizeAuthenticationType(string saml11AuthenticationMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function NormalizeAuthenticationType (saml11AuthenticationMethod As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ NormalizeAuthenticationType(System::String ^ saml11AuthenticationMethod);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="saml11AuthenticationMethod" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="saml11AuthenticationMethod">El identificador (URI) del método de autenticación SAML 1.1 para normalizar.</param>
        <summary>Devuelve el valor normalizado que coincide con un identificador de método de autenticación de SAML 1.1.</summary>
        <returns>El valor normalizado, que es uno de los valores de <see cref="T:System.IdentityModel.Tokens.AuthenticationMethods" />. Si no existe ningún valor coincidente, se devuelve <paramref name="saml11AuthenticationMethod" /> inalterado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType%2A> método devuelve el <xref:System.IdentityModel.Tokens.AuthenticationMethods> valor que coincida con el identificador de método de autenticación SAML11 especificado. Por ejemplo, si `urn:oasis:names:tc:SAML:1.0:am:X509-PKI` especificado para `saml11AuthenticationMethod`, <xref:System.IdentityModel.Tokens.AuthenticationMethods.X509> se devuelve. Si no existe una asignación para `saml11AuthenticationMethod`, se devuelve sin modificar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessAttributeStatement">
      <MemberSignature Language="C#" Value="protected virtual void ProcessAttributeStatement (System.IdentityModel.Tokens.SamlAttributeStatement samlStatement, System.Security.Claims.ClaimsIdentity subject, string issuer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ProcessAttributeStatement(class System.IdentityModel.Tokens.SamlAttributeStatement samlStatement, class System.Security.Claims.ClaimsIdentity subject, string issuer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.SamlAttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ProcessAttributeStatement (samlStatement As SamlAttributeStatement, subject As ClaimsIdentity, issuer As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ProcessAttributeStatement(System::IdentityModel::Tokens::SamlAttributeStatement ^ samlStatement, System::Security::Claims::ClaimsIdentity ^ subject, System::String ^ issuer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="samlStatement" Type="System.IdentityModel.Tokens.SamlAttributeStatement" />
        <Parameter Name="subject" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="issuer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="samlStatement">
          <see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" /> desde la que se crean las notificaciones.</param>
        <param name="subject">Asunto a la que se agregan las reclamaciones.</param>
        <param name="issuer">Emisor.</param>
        <summary>Crea notificaciones a partir de una instrucción de atributo SAML 1.1 y las agrega al sujeto especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las notificaciones creadas se agregan al sujeto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="samlStatement" /> es <see langword="null" />.  
  
 O bien  
  
 <paramref name="subject" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ProcessAuthenticationStatement">
      <MemberSignature Language="C#" Value="protected virtual void ProcessAuthenticationStatement (System.IdentityModel.Tokens.SamlAuthenticationStatement samlStatement, System.Security.Claims.ClaimsIdentity subject, string issuer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ProcessAuthenticationStatement(class System.IdentityModel.Tokens.SamlAuthenticationStatement samlStatement, class System.Security.Claims.ClaimsIdentity subject, string issuer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.SamlAuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ProcessAuthenticationStatement (samlStatement As SamlAuthenticationStatement, subject As ClaimsIdentity, issuer As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ProcessAuthenticationStatement(System::IdentityModel::Tokens::SamlAuthenticationStatement ^ samlStatement, System::Security::Claims::ClaimsIdentity ^ subject, System::String ^ issuer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="samlStatement" Type="System.IdentityModel.Tokens.SamlAuthenticationStatement" />
        <Parameter Name="subject" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="issuer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="samlStatement">
          <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" /> desde la que se crean las notificaciones.</param>
        <param name="subject">Asunto a la que se agregan las reclamaciones.</param>
        <param name="issuer">Emisor.</param>
        <summary>Crea notificaciones a partir de una instrucción de autenticación SAML 1.1 y las agrega al sujeto especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="samlStatement" /> es <see langword="null" />.  
  
 O bien  
  
 <paramref name="subject" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ProcessAuthorizationDecisionStatement">
      <MemberSignature Language="C#" Value="protected virtual void ProcessAuthorizationDecisionStatement (System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement samlStatement, System.Security.Claims.ClaimsIdentity subject, string issuer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ProcessAuthorizationDecisionStatement(class System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement samlStatement, class System.Security.Claims.ClaimsIdentity subject, string issuer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ProcessAuthorizationDecisionStatement (samlStatement As SamlAuthorizationDecisionStatement, subject As ClaimsIdentity, issuer As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ProcessAuthorizationDecisionStatement(System::IdentityModel::Tokens::SamlAuthorizationDecisionStatement ^ samlStatement, System::Security::Claims::ClaimsIdentity ^ subject, System::String ^ issuer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="samlStatement" Type="System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" />
        <Parameter Name="subject" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="issuer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="samlStatement">
          <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" /> desde la que se crean las notificaciones.</param>
        <param name="subject">Asunto a la que se agregan las reclamaciones.</param>
        <param name="issuer">Emisor.</param>
        <summary>Crea notificaciones a partir de una instrucción de decisión de autorización SAML 1.1 y las agrega al sujeto especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La implementación predeterminada no hace nada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessSamlSubject">
      <MemberSignature Language="C#" Value="protected virtual void ProcessSamlSubject (System.IdentityModel.Tokens.SamlSubject samlSubject, System.Security.Claims.ClaimsIdentity subject, string issuer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ProcessSamlSubject(class System.IdentityModel.Tokens.SamlSubject samlSubject, class System.Security.Claims.ClaimsIdentity subject, string issuer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ProcessSamlSubject(System::IdentityModel::Tokens::SamlSubject ^ samlSubject, System::Security::Claims::ClaimsIdentity ^ subject, System::String ^ issuer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="samlSubject" Type="System.IdentityModel.Tokens.SamlSubject" />
        <Parameter Name="subject" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="issuer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="samlSubject">
          <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> desde la que se crean las notificaciones.</param>
        <param name="subject">Asunto a la que se agregan las reclamaciones.</param>
        <param name="issuer">Emisor.</param>
        <summary>Crea notificaciones a partir del sujeto SAML 1.1 y las agrega al sujeto especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="samlSubject" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ProcessStatement">
      <MemberSignature Language="C#" Value="protected virtual void ProcessStatement (System.Collections.Generic.IList&lt;System.IdentityModel.Tokens.SamlStatement&gt; statements, System.Security.Claims.ClaimsIdentity subject, string issuer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ProcessStatement(class System.Collections.Generic.IList`1&lt;class System.IdentityModel.Tokens.SamlStatement&gt; statements, class System.Security.Claims.ClaimsIdentity subject, string issuer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement(System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement},System.Security.Claims.ClaimsIdentity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ProcessStatement (statements As IList(Of SamlStatement), subject As ClaimsIdentity, issuer As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ProcessStatement(System::Collections::Generic::IList&lt;System::IdentityModel::Tokens::SamlStatement ^&gt; ^ statements, System::Security::Claims::ClaimsIdentity ^ subject, System::String ^ issuer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="statements" Type="System.Collections.Generic.IList&lt;System.IdentityModel.Tokens.SamlStatement&gt;" />
        <Parameter Name="subject" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="issuer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="statements">Las instrucciones de SAML desde las que se crean notificaciones.</param>
        <param name="subject">Asunto a la que se agregan las reclamaciones.</param>
        <param name="issuer">Emisor.</param>
        <summary>Crea notificaciones a partir de una colección de instrucciones SAML 1.1 y las agrega al sujeto especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="statements" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAction">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SamlAction ReadAction (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SamlAction ReadAction(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadAction (reader As XmlReader) As SamlAction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SamlAction ^ ReadAction(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SamlAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see cref="T:System.Xml.XmlReader" /> situado en el elemento que se va a leer.</param>
        <summary>Lee el elemento &lt;saml:Action&gt;.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SamlAction" /> que representa el elemento Action que se lee.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAdvice">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SamlAdvice ReadAdvice (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SamlAdvice ReadAdvice(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadAdvice (reader As XmlReader) As SamlAdvice" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SamlAdvice ^ ReadAdvice(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SamlAdvice</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see cref="T:System.Xml.XmlReader" /> situado en el elemento que se va a leer.</param>
        <summary>Lee el elemento &lt;saml:Advice&gt;.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SamlAdvice" /> que representa el elemento Advice que se lee.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El elemento de Consejo tiene un punto de extensibilidad para permitir que los elementos XML de espacios de nombres no SAML 1.1 van a incluir. De forma predeterminada, porque se puede omitir el Consejo sin que afecte a la semántica de la aserción, se omiten los elementos de este tipo. Para controlar el procesamiento de esos elementos, invalide este método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAssertion">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SamlAssertion ReadAssertion (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SamlAssertion ReadAssertion(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadAssertion (reader As XmlReader) As SamlAssertion" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SamlAssertion ^ ReadAssertion(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SamlAssertion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see cref="T:System.Xml.XmlReader" /> situado en el elemento que se va a leer.</param>
        <summary>Lee el elemento &lt;saml:Assertion&gt;.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> que representa el elemento Assertion que se lee.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAttribute">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SamlAttribute ReadAttribute (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SamlAttribute ReadAttribute(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadAttribute (reader As XmlReader) As SamlAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SamlAttribute ^ ReadAttribute(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SamlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see cref="T:System.Xml.XmlReader" /> situado en el elemento que se va a leer.</param>
        <summary>Lee el elemento &lt;saml:Attribute&gt;.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> que representa el elemento Assertion que se lee.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La implementación predeterminada requiere que el contenido del elemento Attribute que sea una cadena simple. Para controlar contenido complejo o el contenido de los tipos simples declarados que no sea de xs: String, invalide este método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAttributeStatement">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SamlAttributeStatement ReadAttributeStatement (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SamlAttributeStatement ReadAttributeStatement(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadAttributeStatement (reader As XmlReader) As SamlAttributeStatement" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SamlAttributeStatement ^ ReadAttributeStatement(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SamlAttributeStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see cref="T:System.Xml.XmlReader" /> situado en el elemento que se va a leer.</param>
        <summary>Lee el elemento &lt;saml:AttributeStatement&gt; o un elemento &lt;saml:Statement&gt; que especifica un valor xsi:type de saml:AttributeStatementType.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" /> que representa el elemento que se lee.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAttributeValue">
      <MemberSignature Language="C#" Value="protected virtual string ReadAttributeValue (System.Xml.XmlReader reader, System.IdentityModel.Tokens.SamlAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string ReadAttributeValue(class System.Xml.XmlReader reader, class System.IdentityModel.Tokens.SamlAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadAttributeValue (reader As XmlReader, attribute As SamlAttribute) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ ReadAttributeValue(System::Xml::XmlReader ^ reader, System::IdentityModel::Tokens::SamlAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="attribute" Type="System.IdentityModel.Tokens.SamlAttribute" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see cref="T:System.Xml.XmlReader" /> situado en el elemento que se va a leer.</param>
        <param name="attribute">Atributo que se lee.</param>
        <summary>Lee un valor de atributo.</summary>
        <returns>Cadena que contiene el valor del atributo.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAudienceRestrictionCondition">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SamlAudienceRestrictionCondition ReadAudienceRestrictionCondition (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SamlAudienceRestrictionCondition ReadAudienceRestrictionCondition(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadAudienceRestrictionCondition (reader As XmlReader) As SamlAudienceRestrictionCondition" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SamlAudienceRestrictionCondition ^ ReadAudienceRestrictionCondition(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SamlAudienceRestrictionCondition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Lector XML situado en el elemento &lt;saml:AudienceRestrictionCondition&gt; que se va a leer.</param>
        <summary>Lee el elemento &lt;saml:AudienceRestrictionCondition&gt; del lector de XML especificado.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /> que representa el elemento que se leyó.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAuthenticationStatement">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SamlAuthenticationStatement ReadAuthenticationStatement (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SamlAuthenticationStatement ReadAuthenticationStatement(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadAuthenticationStatement (reader As XmlReader) As SamlAuthenticationStatement" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SamlAuthenticationStatement ^ ReadAuthenticationStatement(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SamlAuthenticationStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see cref="T:System.Xml.XmlReader" /> situado en el elemento que se va a leer.</param>
        <summary>Lee el elemento &lt;saml:AuthnStatement&gt; o un elemento &lt;saml:Statement&gt; que especifica un valor xsi:type de saml:AuthnStatementType.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" /> que representa el elemento que se lee.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAuthorityBinding">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SamlAuthorityBinding ReadAuthorityBinding (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SamlAuthorityBinding ReadAuthorityBinding(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadAuthorityBinding (reader As XmlReader) As SamlAuthorityBinding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SamlAuthorityBinding ^ ReadAuthorityBinding(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SamlAuthorityBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Lector XML situado en el elemento &lt;saml:AuthorityBinding&gt;.</param>
        <summary>Lee el elemento &lt;saml:AuthorityBinding&gt;.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SamlAuthorityBinding" /> que se leyó.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="reader" /> no está situado en un elemento saml:AuthorityBinding o bien contiene un elemento secundario desconocido o no válido.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAuthorizationDecisionStatement">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement ReadAuthorizationDecisionStatement (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement ReadAuthorizationDecisionStatement(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadAuthorizationDecisionStatement (reader As XmlReader) As SamlAuthorizationDecisionStatement" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SamlAuthorizationDecisionStatement ^ ReadAuthorizationDecisionStatement(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see cref="T:System.Xml.XmlReader" /> situado en el elemento que se va a leer.</param>
        <summary>Lee el elemento &lt;saml:AuthzDecisionStatement&gt; o un elemento &lt;saml:Statement&gt; que especifica un valor xsi:type de saml:AuthzDecisionStatementType.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationStatement" /> que representa el elemento que se lee.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadCondition">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SamlCondition ReadCondition (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SamlCondition ReadCondition(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadCondition (reader As XmlReader) As SamlCondition" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SamlCondition ^ ReadCondition(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SamlCondition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Lector desde el que se debe leer el elemento.</param>
        <summary>Lee un elemento saml:AudienceRestrictionCondition o saml:DoNotCacheCondition del lector especificado</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SamlCondition" /> que se leyó en el XML.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="reader" /> está situado en un elemento desconocido.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadConditions">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SamlConditions ReadConditions (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SamlConditions ReadConditions(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadConditions (reader As XmlReader) As SamlConditions" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SamlConditions ^ ReadConditions(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SamlConditions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see cref="T:System.Xml.XmlReader" /> situado en el elemento que se va a leer.</param>
        <summary>Lee el elemento &lt;saml:Conditions&gt;.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SamlConditions" /> que representa el elemento Conditions que se lee.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para controlar personalizado \<saml:Condition > elementos, invalide este método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="reader" /> no está situado en un elemento Conditions.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadDoNotCacheCondition">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SamlDoNotCacheCondition ReadDoNotCacheCondition (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SamlDoNotCacheCondition ReadDoNotCacheCondition(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadDoNotCacheCondition (reader As XmlReader) As SamlDoNotCacheCondition" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SamlDoNotCacheCondition ^ ReadDoNotCacheCondition(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SamlDoNotCacheCondition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Un lector XML colocado en un elemento saml:DoNotCacheCondition</param>
        <summary>Lee un elemento saml:DoNotCacheCondition del lector de XML especificado.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" /> que se leyó.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="reader" /> no está situado en un elemento saml:DoNotCacheCondition.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadEvidence">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SamlEvidence ReadEvidence (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SamlEvidence ReadEvidence(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadEvidence (reader As XmlReader) As SamlEvidence" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SamlEvidence ^ ReadEvidence(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SamlEvidence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see cref="T:System.Xml.XmlReader" /> situado en el elemento que se va a leer.</param>
        <summary>Lee el elemento &lt;saml:Evidence&gt;.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SamlEvidence" /> que representa el elemento Evidence que se lee.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadSigningKeyInfo">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityKeyIdentifier ReadSigningKeyInfo (System.Xml.XmlReader reader, System.IdentityModel.Tokens.SamlAssertion assertion);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifier ReadSigningKeyInfo(class System.Xml.XmlReader reader, class System.IdentityModel.Tokens.SamlAssertion assertion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAssertion)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadSigningKeyInfo (reader As XmlReader, assertion As SamlAssertion) As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityKeyIdentifier ^ ReadSigningKeyInfo(System::Xml::XmlReader ^ reader, System::IdentityModel::Tokens::SamlAssertion ^ assertion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="assertion" Type="System.IdentityModel.Tokens.SamlAssertion" />
      </Parameters>
      <Docs>
        <param name="reader">Un XmlReader que se puede colocar en un elemento ds:KeyInfo.</param>
        <param name="assertion">La aserción de la que se comprueba la signatura.</param>
        <summary>Deserializa el objeto KeyInfo de firma de SAML.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> que representa la clave que se usará para comprobar la signatura.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadStatement">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SamlStatement ReadStatement (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SamlStatement ReadStatement(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadStatement (reader As XmlReader) As SamlStatement" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SamlStatement ^ ReadStatement(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SamlStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see cref="T:System.Xml.XmlReader" /> situado en el elemento que se va a leer.</param>
        <summary>Lee el elemento &lt;saml:Statement&gt;.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SamlStatement" /> que representa el elemento Statement leído.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La implementación predeterminada solo controla los elementos de instrucción que especifican xsi: Type de saml:AttributeStatementType, saml:AuthnStatementType y saml:AuthzDecisionStatementType. Para controlar las instrucciones personalizadas, invalide este método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadSubject">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SamlSubject ReadSubject (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SamlSubject ReadSubject(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadSubject (reader As XmlReader) As SamlSubject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SamlSubject ^ ReadSubject(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SamlSubject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see cref="T:System.Xml.XmlReader" /> situado en el elemento que se va a leer.</param>
        <summary>Lee el elemento &lt;saml:Subject&gt;.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> que representa el elemento Subject leído.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La implementación predeterminada no controla opcional \<EncryptedID > elemento. Para controlar los identificadores de encryped en el asunto, invalide este método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadSubjectKeyInfo">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityKeyIdentifier ReadSubjectKeyInfo (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifier ReadSubjectKeyInfo(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadSubjectKeyInfo (reader As XmlReader) As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityKeyIdentifier ^ ReadSubjectKeyInfo(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see cref="T:System.Xml.XmlReader" /> situado en un elemento &lt;ds:KeyInfo&gt;.</param>
        <summary>Deserializa el elemento &lt;ds:KeyInfo&gt; de SAML Subject.</summary>
        <returns>Objeto <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> que representa el contenido del elemento &lt;ds:KeyInfo&gt;.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToken (reader As XmlReader) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Flujo <see cref="T:System.Xml.XmlReader" /> a un token de seguridad de SAML 1.1.</param>
        <summary>Lee un token de SAML 1.1 en la secuencia especificada.</summary>
        <returns>Instancia de <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> es <see langword="null" />.  
  
 O bien  
  
 La propiedad <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerTokenResolver" /> de la configuración especificada por la propiedad <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> es <see langword="null" />.  
  
 O bien  
  
 La propiedad <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.ServiceTokenResolver" /> de la configuración especificada por la propiedad <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveIssuerToken">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityToken ResolveIssuerToken (System.IdentityModel.Tokens.SamlAssertion assertion, System.IdentityModel.Selectors.SecurityTokenResolver issuerResolver);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ResolveIssuerToken(class System.IdentityModel.Tokens.SamlAssertion assertion, class System.IdentityModel.Selectors.SecurityTokenResolver issuerResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ResolveIssuerToken (assertion As SamlAssertion, issuerResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ResolveIssuerToken(System::IdentityModel::Tokens::SamlAssertion ^ assertion, System::IdentityModel::Selectors::SecurityTokenResolver ^ issuerResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assertion" Type="System.IdentityModel.Tokens.SamlAssertion" />
        <Parameter Name="issuerResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="assertion">
          <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> para las que se va a resolver el token de emisor.</param>
        <param name="issuerResolver">Objeto <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> actual asociado a este controlador.</param>
        <summary>Resuelve el identificador de clave de firma en un <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> que representa el token resuelto.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assertion" /> es <see langword="null" />.</exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">El controlador no puede resolver el token.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveSubjectKeyIdentifier">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityKey ResolveSubjectKeyIdentifier (System.IdentityModel.Tokens.SecurityKeyIdentifier subjectKeyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveSubjectKeyIdentifier(class System.IdentityModel.Tokens.SecurityKeyIdentifier subjectKeyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ResolveSubjectKeyIdentifier (subjectKeyIdentifier As SecurityKeyIdentifier) As SecurityKey" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ ResolveSubjectKeyIdentifier(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ subjectKeyIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectKeyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="subjectKeyIdentifier">Identificador de clave que se va a resolver en una clave.</param>
        <summary>Resuelve el objeto <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> especificado en un elemento saml:Subject.</summary>
        <returns>Clave resuelta del identificador de clave.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SamlSecurityTokenRequirement">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SamlSecurityTokenRequirement SamlSecurityTokenRequirement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SamlSecurityTokenRequirement SamlSecurityTokenRequirement" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement" />
      <MemberSignature Language="VB.NET" Value="Public Property SamlSecurityTokenRequirement As SamlSecurityTokenRequirement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SamlSecurityTokenRequirement ^ SamlSecurityTokenRequirement { System::IdentityModel::Tokens::SamlSecurityTokenRequirement ^ get(); void set(System::IdentityModel::Tokens::SamlSecurityTokenRequirement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SamlSecurityTokenRequirement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece los requisitos de token de seguridad para esta instancia.</summary>
        <value>
          <see cref="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" /> que especifica los requisitos.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Se ha intentado establecer el valor en <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetDelegateFromAttribute">
      <MemberSignature Language="C#" Value="protected virtual void SetDelegateFromAttribute (System.IdentityModel.Tokens.SamlAttribute attribute, System.Security.Claims.ClaimsIdentity subject, string issuer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetDelegateFromAttribute(class System.IdentityModel.Tokens.SamlAttribute attribute, class System.Security.Claims.ClaimsIdentity subject, string issuer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.SamlAttribute,System.Security.Claims.ClaimsIdentity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetDelegateFromAttribute (attribute As SamlAttribute, subject As ClaimsIdentity, issuer As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetDelegateFromAttribute(System::IdentityModel::Tokens::SamlAttribute ^ attribute, System::Security::Claims::ClaimsIdentity ^ subject, System::String ^ issuer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.IdentityModel.Tokens.SamlAttribute" />
        <Parameter Name="subject" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="issuer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attribute">Objeto <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> que se va a usar.</param>
        <param name="subject">
          <see cref="T:System.Security.Claims.ClaimsIdentity" /> que es el asunto de este token.</param>
        <param name="issuer">Emisor de la notificación.</param>
        <summary>Se llama a este método cuando se detecta un tipo especial de <see cref="T:System.IdentityModel.Tokens.SamlAttribute" />. El <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> pasado ajusta un <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> que contiene una colección de valores de atributo (en la propiedad <see cref="P:System.IdentityModel.Tokens.SamlAttribute.Values" />) cada uno de los cuales se asigna a una notificación. Todas las reclamaciones se devuelvan en un <see cref="T:System.Security.Claims.ClaimsIdentity" /> con el emisor especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> no contiene valores de atributo válidos.</exception>
      </Docs>
    </Member>
    <Member MemberName="TokenType">
      <MemberSignature Language="C#" Value="public override Type TokenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.TokenType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TokenType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ TokenType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tipo de token admitido por este controlador.</summary>
        <value>
          <see cref="T:System.Type" /> de la clase <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveIssuerToken">
      <MemberSignature Language="C#" Value="protected virtual bool TryResolveIssuerToken (System.IdentityModel.Tokens.SamlAssertion assertion, System.IdentityModel.Selectors.SecurityTokenResolver issuerResolver, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryResolveIssuerToken(class System.IdentityModel.Tokens.SamlAssertion assertion, class System.IdentityModel.Selectors.SecurityTokenResolver issuerResolver, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TryResolveIssuerToken (assertion As SamlAssertion, issuerResolver As SecurityTokenResolver, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TryResolveIssuerToken(System::IdentityModel::Tokens::SamlAssertion ^ assertion, System::IdentityModel::Selectors::SecurityTokenResolver ^ issuerResolver, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assertion" Type="System.IdentityModel.Tokens.SamlAssertion" />
        <Parameter Name="issuerResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="assertion">
          <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> para las que se va a resolver el token de emisor.</param>
        <param name="issuerResolver">Objeto <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> actual asociado a este controlador.</param>
        <param name="token">Cuando este método vuelve, contiene el token de seguridad resuelto si se resolvió correctamente un token.</param>
        <summary>Resuelve el identificador de clave de firma en un objeto SecurityToken.</summary>
        <returns>
          <see langword="true" /> si el token se ha resuelto.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnspecifiedAuthenticationMethod">
      <MemberSignature Language="C#" Value="public const string UnspecifiedAuthenticationMethod;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UnspecifiedAuthenticationMethod" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SamlSecurityTokenHandler.UnspecifiedAuthenticationMethod" />
      <MemberSignature Language="VB.NET" Value="Public Const UnspecifiedAuthenticationMethod As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ UnspecifiedAuthenticationMethod;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>urn:oasis:names:tc:SAML:1.0:am:unspecified</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateConditions">
      <MemberSignature Language="C#" Value="protected virtual void ValidateConditions (System.IdentityModel.Tokens.SamlConditions conditions, bool enforceAudienceRestriction);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateConditions(class System.IdentityModel.Tokens.SamlConditions conditions, bool enforceAudienceRestriction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.SamlConditions,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateConditions (conditions As SamlConditions, enforceAudienceRestriction As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateConditions(System::IdentityModel::Tokens::SamlConditions ^ conditions, bool enforceAudienceRestriction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conditions" Type="System.IdentityModel.Tokens.SamlConditions" />
        <Parameter Name="enforceAudienceRestriction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="conditions">Condición SAML 1.1 que se va a validar.</param>
        <param name="enforceAudienceRestriction">
          <see langword="true" /> para comprobar si hay una condición de restricción de audiencia.</param>
        <summary>Valida el objeto <see cref="T:System.IdentityModel.Tokens.SamlConditions" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inicia una excepción adecuada si la condición no es válida. El token no puede ser válido para una serie de motivos. Por ejemplo, no puede ser la hora actual en el período de validez del token, el token puede contener datos que sean contradictorias o no es válido o el token puede contener elementos de SAML 1.1 no compatibles.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateToken (token As SecurityToken) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">Token SAML 1.1 que se va a validar.</param>
        <summary>Valida los datos de token y devuelve sus notificaciones.</summary>
        <returns>Identidades contenidas en el token.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inicia una excepción adecuada si el token no es válido.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAction">
      <MemberSignature Language="C#" Value="protected virtual void WriteAction (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAction action);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteAction(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SamlAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAction)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteAction (writer As XmlWriter, action As SamlAction)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteAction(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SamlAction ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="action" Type="System.IdentityModel.Tokens.SamlAction" />
      </Parameters>
      <Docs>
        <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" /> con el que se va a escribir los datos.</param>
        <param name="action">Datos que se van a escribir.</param>
        <summary>Escribe el elemento &lt;saml:Action&gt;.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="action" /> es <see langword="null" />.  
  
 O bien  
  
 <paramref name="writer" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAdvice">
      <MemberSignature Language="C#" Value="protected virtual void WriteAdvice (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAdvice advice);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteAdvice(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SamlAdvice advice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAdvice)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteAdvice (writer As XmlWriter, advice As SamlAdvice)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteAdvice(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SamlAdvice ^ advice);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="advice" Type="System.IdentityModel.Tokens.SamlAdvice" />
      </Parameters>
      <Docs>
        <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" /> con el que se va a escribir los datos.</param>
        <param name="advice">Datos que se van a escribir.</param>
        <summary>Escribe el elemento &lt;saml:Advice&gt;.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="advice" /> es <see langword="null" />.  
  
 O bien  
  
 <paramref name="writer" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAssertion">
      <MemberSignature Language="C#" Value="protected virtual void WriteAssertion (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAssertion assertion);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteAssertion(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SamlAssertion assertion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteAssertion (writer As XmlWriter, assertion As SamlAssertion)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteAssertion(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SamlAssertion ^ assertion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="assertion" Type="System.IdentityModel.Tokens.SamlAssertion" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Xml.XmlWriter" /> que se debe usar para la serialización.</param>
        <param name="assertion">
          <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> que representa la aserción para serializar.</param>
        <summary>Serializa la aserción SAML especificada en el sistema de escritura XML determinado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="writer" /> es <see langword="null" />.  
  
 O bien  
  
 <paramref name="assertion" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La aserción que especifica <paramref name="assertion" /> tiene las propiedades <see cref="T:System.IdentityModel.SecurityTokenService.EncryptingCredentials" /> y <see cref="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReceivedEncryptingCredentials" /> establecidas en <see langword="null" />.  
  
 O bien  
  
 No hay instrucciones y ningún asunto en la aserción especificada por <paramref name="data" />. (La propiedad de <see cref="P:System.IdentityModel.Tokens.SamlAssertion.Subject" /> y la propiedad de <see cref="P:System.IdentityModel.Tokens.SamlAssertion.Statements" /> son <see langword="null" />.) Si una aserción no contiene instrucciones, debe contener un asunto.  
  
 O bien  
  
 La aserción que especifica <paramref name="assertion" /> contiene una autenticación, atributo o instrucción de la decisión de autorización y ningún asunto (estas instrucciones requieren un asunto). (La propiedad <see cref="P:System.IdentityModel.Tokens.SamlAssertion.Statements" /> contiene un extracto de tipo <see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" />, <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" /> o <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" /> y la propiedad <see cref="P:System.IdentityModel.Tokens.SamlAssertion.Subject" /> es <see langword="null" />).</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Las credenciales de cifrado de token no tienen una clave simétrica especificada.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="protected virtual void WriteAttribute (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteAttribute(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SamlAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteAttribute (writer As XmlWriter, attribute As SamlAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteAttribute(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SamlAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="attribute" Type="System.IdentityModel.Tokens.SamlAttribute" />
      </Parameters>
      <Docs>
        <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" /> con el que se va a escribir los datos.</param>
        <param name="attribute">Datos que se van a escribir.</param>
        <summary>Escribe el elemento &lt;saml:Attribute&gt;.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="attribute" /> es <see langword="null" />.  
  
 O bien  
  
 <paramref name="writer" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeStatement">
      <MemberSignature Language="C#" Value="protected virtual void WriteAttributeStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAttributeStatement statement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteAttributeStatement(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SamlAttributeStatement statement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttributeStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteAttributeStatement (writer As XmlWriter, statement As SamlAttributeStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteAttributeStatement(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SamlAttributeStatement ^ statement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="statement" Type="System.IdentityModel.Tokens.SamlAttributeStatement" />
      </Parameters>
      <Docs>
        <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" /> con el que se va a escribir los datos.</param>
        <param name="statement">Datos que se van a escribir.</param>
        <summary>Escribe el elemento &lt;saml:AttributeStatement&gt;.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="statement" /> es <see langword="null" />.  
  
 O bien  
  
 <paramref name="writer" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeValue">
      <MemberSignature Language="C#" Value="protected virtual void WriteAttributeValue (System.Xml.XmlWriter writer, string value, System.IdentityModel.Tokens.SamlAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteAttributeValue(class System.Xml.XmlWriter writer, string value, class System.IdentityModel.Tokens.SamlAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.SamlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteAttributeValue (writer As XmlWriter, value As String, attribute As SamlAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteAttributeValue(System::Xml::XmlWriter ^ writer, System::String ^ value, System::IdentityModel::Tokens::SamlAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="attribute" Type="System.IdentityModel.Tokens.SamlAttribute" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Xml.XmlWriter" /> con el que se va a escribir.</param>
        <param name="value">Cadena que contiene el valor del atributo que se va a escribir.</param>
        <param name="attribute">
          <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> que representa el atributo cuyo valor se está escribiendo.</param>
        <summary>Escribe el valor saml:Attribute.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada el método escribe el valor como una cadena.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="writer" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAudienceRestrictionCondition">
      <MemberSignature Language="C#" Value="protected virtual void WriteAudienceRestrictionCondition (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAudienceRestrictionCondition condition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteAudienceRestrictionCondition(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SamlAudienceRestrictionCondition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteAudienceRestrictionCondition (writer As XmlWriter, condition As SamlAudienceRestrictionCondition)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteAudienceRestrictionCondition(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SamlAudienceRestrictionCondition ^ condition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="condition" Type="System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" />
      </Parameters>
      <Docs>
        <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" /> con el que se va a escribir los datos.</param>
        <param name="condition">Datos que se van a escribir.</param>
        <summary>Escribe el elemento &lt;saml:AudienceRestriction&gt;.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> es <see langword="null" />.  
  
 O bien  
  
 <paramref name="writer" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.IdentityModel.Tokens.SamlConditions.Conditions" /> de <see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /> especificado en <paramref name="condition" /> es <see langword="null" /> o una colección vacía.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAuthenticationStatement">
      <MemberSignature Language="C#" Value="protected virtual void WriteAuthenticationStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAuthenticationStatement statement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteAuthenticationStatement(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SamlAuthenticationStatement statement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthenticationStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteAuthenticationStatement (writer As XmlWriter, statement As SamlAuthenticationStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteAuthenticationStatement(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SamlAuthenticationStatement ^ statement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="statement" Type="System.IdentityModel.Tokens.SamlAuthenticationStatement" />
      </Parameters>
      <Docs>
        <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" /> con el que se va a escribir los datos.</param>
        <param name="statement">Datos que se van a escribir.</param>
        <summary>Escribe el elemento &lt;saml:AuthnStatement&gt;.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="statement" /> es <see langword="null" />.  
  
 O bien  
  
 <paramref name="writer" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAuthorityBinding">
      <MemberSignature Language="C#" Value="protected virtual void WriteAuthorityBinding (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAuthorityBinding authorityBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteAuthorityBinding(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SamlAuthorityBinding authorityBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorityBinding)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteAuthorityBinding (writer As XmlWriter, authorityBinding As SamlAuthorityBinding)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteAuthorityBinding(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SamlAuthorityBinding ^ authorityBinding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="authorityBinding" Type="System.IdentityModel.Tokens.SamlAuthorityBinding" />
      </Parameters>
      <Docs>
        <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" /> con el que se va a escribir los datos.</param>
        <param name="authorityBinding">Datos que se van a escribir.</param>
        <summary>Escribe el elemento &lt;saml:AuthorityBinding&gt;.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="authorityBinding" /> es <see langword="null" />.  
  
 O bien  
  
 <paramref name="writer" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAuthorizationDecisionStatement">
      <MemberSignature Language="C#" Value="protected virtual void WriteAuthorizationDecisionStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement statement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteAuthorizationDecisionStatement(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement statement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteAuthorizationDecisionStatement (writer As XmlWriter, statement As SamlAuthorizationDecisionStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteAuthorizationDecisionStatement(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SamlAuthorizationDecisionStatement ^ statement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="statement" Type="System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" />
      </Parameters>
      <Docs>
        <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" /> con el que se va a escribir los datos.</param>
        <param name="statement">Datos que se van a escribir.</param>
        <summary>Escribe el elemento &lt;saml:AuthzDecisionStatement&gt;.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="statement" /> es <see langword="null" />.  
  
 O bien  
  
 <paramref name="writer" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCondition">
      <MemberSignature Language="C#" Value="protected virtual void WriteCondition (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlCondition condition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteCondition(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SamlCondition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlCondition)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteCondition (writer As XmlWriter, condition As SamlCondition)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteCondition(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SamlCondition ^ condition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="condition" Type="System.IdentityModel.Tokens.SamlCondition" />
      </Parameters>
      <Docs>
        <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" /> con el que se va a escribir los datos.</param>
        <param name="condition">Datos que se van a escribir. De forma predeterminada, solo se admite <see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /> y <see cref="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" />.</param>
        <summary>Serializa el objeto <see cref="T:System.IdentityModel.Tokens.SamlCondition" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, el método invoca el <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition%2A> o <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition%2A> según el tipo de método para serializar la condición <xref:System.IdentityModel.Tokens.SamlCondition> especificado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="condition" /> es <see langword="null" />.  
  
 O bien  
  
 <paramref name="writer" /> es <see langword="null" />.</exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
          No se admite <paramref name="condition" />. . De forma predeterminada, solo se admite <see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /> y <see cref="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteConditions">
      <MemberSignature Language="C#" Value="protected virtual void WriteConditions (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlConditions conditions);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteConditions(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SamlConditions conditions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlConditions)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteConditions (writer As XmlWriter, conditions As SamlConditions)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteConditions(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SamlConditions ^ conditions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="conditions" Type="System.IdentityModel.Tokens.SamlConditions" />
      </Parameters>
      <Docs>
        <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" /> con el que se va a escribir los datos.</param>
        <param name="conditions">Datos que se van a escribir.</param>
        <summary>Escribe el elemento &lt;saml:Conditions&gt;.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="conditions" /> es <see langword="null" />.  
  
 O bien  
  
 <paramref name="writer" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDoNotCacheCondition">
      <MemberSignature Language="C#" Value="protected virtual void WriteDoNotCacheCondition (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlDoNotCacheCondition condition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteDoNotCacheCondition(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SamlDoNotCacheCondition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlDoNotCacheCondition)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteDoNotCacheCondition (writer As XmlWriter, condition As SamlDoNotCacheCondition)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteDoNotCacheCondition(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SamlDoNotCacheCondition ^ condition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="condition" Type="System.IdentityModel.Tokens.SamlDoNotCacheCondition" />
      </Parameters>
      <Docs>
        <param name="writer">Sistema de escritura XML con el que se va a escribir los datos.</param>
        <param name="condition">Datos que se van a escribir.</param>
        <summary>Escribe el elemento &lt;saml:Conditions&gt;.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="writer" /> es <see langword="null" />.  
  
 O bien  
  
 <paramref name="condition" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEvidence">
      <MemberSignature Language="C#" Value="protected virtual void WriteEvidence (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlEvidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteEvidence(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SamlEvidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlEvidence)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteEvidence (writer As XmlWriter, evidence As SamlEvidence)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteEvidence(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SamlEvidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="evidence" Type="System.IdentityModel.Tokens.SamlEvidence" />
      </Parameters>
      <Docs>
        <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" /> con el que se va a escribir los datos.</param>
        <param name="evidence">Datos que se van a escribir.</param>
        <summary>Escribe el elemento &lt;saml:Evidence&gt;.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="evidence" /> es <see langword="null" />.  
  
 O bien  
  
 <paramref name="writer" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSigningKeyInfo">
      <MemberSignature Language="C#" Value="protected virtual void WriteSigningKeyInfo (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifier signingKeyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteSigningKeyInfo(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifier signingKeyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteSigningKeyInfo (writer As XmlWriter, signingKeyIdentifier As SecurityKeyIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteSigningKeyInfo(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ signingKeyIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="signingKeyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Xml.XmlWriter" /> con el que serializar el identificador de clave.</param>
        <param name="signingKeyIdentifier">
          <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> que representa el identificador de clave que se va a escribir.</param>
        <summary>Escribe el elemento de firma &lt;ds:KeyInfo&gt; con el escritor XML especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="signingKeyIdentifier" /> es <see langword="null" />.  
  
 O bien  
  
 <paramref name="writer" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">El controlador no puede serializar el identificador de clave especificado por <paramref name="signingKeyIdentifier" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStatement">
      <MemberSignature Language="C#" Value="protected virtual void WriteStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlStatement statement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteStatement(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SamlStatement statement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteStatement (writer As XmlWriter, statement As SamlStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteStatement(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SamlStatement ^ statement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="statement" Type="System.IdentityModel.Tokens.SamlStatement" />
      </Parameters>
      <Docs>
        <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" /> con el que se va a escribir los datos.</param>
        <param name="statement">Datos que se van a escribir.</param>
        <summary>Escribe una SamlStatement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se puede escribir un \<saml:AttributeStatement >, \<saml:AuthnStatement >, o \<saml:AuthzDecisionStatement > elemento. Para controlar personalizado <xref:System.IdentityModel.Tokens.SamlStatement> clases para escribir en él un \<saml:Statement > elemento, invalide este método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="statement" /> es <see langword="null" />.  
  
 O bien  
  
 <paramref name="writer" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSubject">
      <MemberSignature Language="C#" Value="protected virtual void WriteSubject (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlSubject subject);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteSubject(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SamlSubject subject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlSubject)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteSubject (writer As XmlWriter, subject As SamlSubject)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteSubject(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SamlSubject ^ subject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="subject" Type="System.IdentityModel.Tokens.SamlSubject" />
      </Parameters>
      <Docs>
        <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" /> con el que se va a escribir los datos.</param>
        <param name="subject">Datos que se van a escribir.</param>
        <summary>Escribe el elemento &lt;saml:Subject&gt;.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subject" /> es <see langword="null" />.  
  
 O bien  
  
 <paramref name="writer" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSubjectKeyInfo">
      <MemberSignature Language="C#" Value="protected virtual void WriteSubjectKeyInfo (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifier subjectSki);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteSubjectKeyInfo(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifier subjectSki) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteSubjectKeyInfo (writer As XmlWriter, subjectSki As SecurityKeyIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteSubjectKeyInfo(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ subjectSki);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="subjectSki" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Xml.XmlWriter" /> con el que serializar el identificador de clave.</param>
        <param name="subjectSki">
          <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> que representa el identificador de clave que se va a escribir.</param>
        <summary>Serializa el elemento &lt;ds:KeyInfo&gt; de Subject con el escritor XML especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subjectSki" /> es <see langword="null" />.  
  
 O bien  
  
 <paramref name="writer" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" /> con el que se va a escribir los datos.</param>
        <param name="token">Token que se va a escribir.</param>
        <summary>Escribe token Saml en el sistema de escritura XML especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> es <see langword="null" />.  
  
 O bien  
  
 <paramref name="writer" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="token" /> no es un objeto <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>