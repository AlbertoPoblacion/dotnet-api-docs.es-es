<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SamlSecurityTokenHandler.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac514e84be0c3d40034269479a71f7803d3cc4ac507.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">14e84be0c3d40034269479a71f7803d3cc4ac507</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler">
          <source>Represents a security token handler that creates security tokens from SAML 1.1 Assertions.</source>
          <target state="translated">Representa un controlador de tokens de seguridad que crea tokens de seguridad a partir de aserciones de SAML 1.1.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler&gt;</ph> class serializes and deserializes security tokens backed by SAML 1.1 Assertions into <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SamlSecurityToken&gt;</ph> objects.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler&gt;</ph> clase serializa y deserializa los tokens de seguridad respaldados por aserciones de SAML 1.1 en <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SamlSecurityToken&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler">
          <source>Security token handlers are responsible for creating, reading, writing, and validating tokens.</source>
          <target state="translated">Controladores de tokens de seguridad son responsables de crear, leer, escribir y validar los tokens.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler">
          <source>You can configure a security token service (STS) or relying party (RP) application to process SAML 1.1 Assertion-backed security tokens by adding an instance of the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler&gt;</ph> class to the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection&gt;</ph> object configured for the service (or application).</source>
          <target state="translated">Puede configurar un servicio de token de seguridad (STS) o usuarios de confianza (RP) los tokens de aplicación para procesar seguridad basado en aserción de SAML 1.1 mediante la adición de una instancia de la <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler&gt;</ph> clase a la <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection&gt;</ph> objeto configurado para el servicio (o aplicación).</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler">
          <source>This can be done either programmatically or in the configuration file.</source>
          <target state="translated">Esto puede hacerse mediante programación o en el archivo de configuración.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler">
          <source>The handler itself is configured from the configuration specified for the collection through the collection’s <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration%2A&gt;</ph> property when it is added to the collection.</source>
          <target state="translated">Se configura el propio controlador de la configuración especificada para la colección a través de la colección <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration%2A&gt;</ph> propiedad cuando se agrega a la colección.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler">
          <source>While it is possible to configure the handler individually by setting its <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A&gt;</ph> property, this is not normally necessary; however, if the handler must be configured individually, the property should be set after the handler is added to the collection.</source>
          <target state="translated">Aunque es posible configurar el controlador de forma individual estableciendo su <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A&gt;</ph> propiedad, esto normalmente no es necesario; sin embargo, si el controlador debe configurarse de forma individual, la propiedad debe establecerse después de que el controlador se agrega a la colección.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler">
          <source>For many scenarios, the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler&gt;</ph> class can be used as-is; however, the class provides many extension points through the methods it exposes.</source>
          <target state="translated">En muchos casos, la <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler&gt;</ph> clase puede usarse como-es; sin embargo, la clase proporciona muchos puntos de extensión a través de los métodos expone.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler">
          <source>By deriving from the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler&gt;</ph> and overriding specific methods, you can modify the functionality of the token processing provided in the default implementation, or you can add processing for extensions to the SAML Assertion specification that may be needed in some custom scenarios.</source>
          <target state="translated">Al derivar de la <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler&gt;</ph> y reemplazar métodos específicos, puede modificar la funcionalidad del procesamiento de token proporcionado en la implementación predeterminada, o puede agregar el procesamiento de extensiones para la especificación de aserción de SAML que pueda ser necesaria en algunos escenarios personalizados.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" /&gt;</ph> class with default security token requirements.</source>
          <target state="translated">Inicializa una instancia nueva de la clase <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" /&gt;</ph> con requisitos de token de seguridad predeterminados.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement%2A&gt;</ph> property is set to an instance of <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SamlSecurityTokenRequirement&gt;</ph> that is created with the default constructor.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement%2A&gt;</ph> propiedad está establecida en una instancia de <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SamlSecurityTokenRequirement&gt;</ph> que se crea con el constructor predeterminado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" /&gt;</ph> to be used by this instance when validating tokens.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" /&gt;</ph> que usará esta instancia al validar tokens.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement" /&gt;</ph> property.</source>
          <target state="translated">Establece la propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" /&gt;</ph> class with the specified security token requirements.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" /&gt;</ph> con los requisitos de token de seguridad especificados.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)">
          <source><ph id="ph1">&lt;paramref name="samlSecurityTokenRequirement" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="samlSecurityTokenRequirement" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The delegate of this <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsIdentity" /&gt;</ph> object will be serialized into a <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttribute" /&gt;</ph>.</source>
          <target state="translated">El delegado de este objeto <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsIdentity" /&gt;</ph> se serializará en <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The delegate is specified by the <ph id="ph1">&lt;see cref="P:System.Security.Claims.ClaimsIdentity.Actor" /&gt;</ph> property.</source>
          <target state="translated">El delegado se especifica mediante la propiedad <ph id="ph1">&lt;see cref="P:System.Security.Claims.ClaimsIdentity.Actor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The attribute collection to which the ActAs token will be serialized.</source>
          <target state="translated">La colección de atributos en la que se serializará el token de ActAs.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The token descriptor.</source>
          <target state="translated">Descriptor de token.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Adds all of the delegates associated with the ActAs subject into the attribute collection.</source>
          <target state="translated">Agrega todos los delegados asociados al asunto ActAs en la colección de atributos.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source><ph id="ph1">&lt;paramref name="subject" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="subject" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source><ph id="ph1">&lt;paramref name="tokenDescriptor" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenDescriptor" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.IdentityModel.Tokens.SamlSecurityTokenHandler.Assertion">
          <source>urn:oasis:names:tc:SAML:1.0:assertion</source>
          <target state="translated">urn:oasis:names:tc:SAML:1.0:assertion</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="F:System.IdentityModel.Tokens.SamlSecurityTokenHandler.BearerConfirmationMethod">
          <source>urn:oasis:names:tc:SAML:1.0:cm:bearer</source>
          <target state="translated">urn:oasis:names:tc:SAML:1.0:cm:bearer</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>An XML reader positioned at a start element.</source>
          <target state="translated">Lector XML situado en un elemento de inicio.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>The reader should not be advanced.</source>
          <target state="translated">No se debe avanzar el lector.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>Indicates whether the current XML element can be read as a token of the type handled by this instance.</source>
          <target state="translated">Indica si el elemento XML actual se puede leer como token del tipo administrado por esta instancia.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" /&gt;</ph> method can read the element; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el método <ph id="ph2">&lt;see cref="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" /&gt;</ph> puede leer el elemento; en caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken">
          <source>Gets a value that indicates if this handler can validate tokens of type <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Obtiene un valor que indica si este controlador puede validar tokens de tipo <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, which indicates that the handler can validate tokens of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, que indica que el controlador puede validar tokens de tipo <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken">
          <source>This method overrides the base class method and always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Este método invalida el método de clase base y siempre devuelve <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken">
          <source>Gets a value that indicates whether this handler can serialize tokens of type <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Obtiene un valor que indica si este controlador puede serializar tokens de tipo <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>; which indicates that the handler can serialize tokens of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>; que indica que el controlador puede serializar tokens de tipo <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken">
          <source>This method overrides the base class method and always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Este método invalida el método de clase base y siempre devuelve <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CertificateValidator">
          <source>Gets or sets the X.509 certificate validator that is used by the current instance to validate X.509 certificates.</source>
          <target state="translated">Obtiene o establece el validador de certificado X.509 usado por la instancia actual para validar los certificados X.509.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CertificateValidator">
          <source>An <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /&gt;</ph> that represents the validator.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /&gt;</ph> que representa el validador.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute})">
          <source>A collection of type <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttribute" /&gt;</ph> that contains the attributes generated from claims.</source>
          <target state="translated">Colección de tipos <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttribute" /&gt;</ph> que contienen los atributos generados a partir de notificaciones.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute})">
          <source>Collects attributes with a common claim type, claim value type, and original issuer into a single attribute with multiple values.</source>
          <target state="translated">Obtiene los atributos con un tipo común de petición, un tipo de valor de petición, y un emisor original en un solo atributo con varios valores.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute})">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttribute" /&gt;</ph> that contains attributes derived from the input collection.</source>
          <target state="translated">Colección de <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttribute" /&gt;</ph> que contiene los atributos derivados de la colección de entrada.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute})">
          <source>Attributes in the input collection that share a common claim type, claim value, and original issuer with other attributes are consolidated into a single attribute with multiple values in the output collection.</source>
          <target state="translated">Los atributos en la colección de entrada que comparten un tipo común de reclamación, el valor de reclamación y el emisor original con otros atributos se consolidan en un solo atributo con varios valores en la colección de salida.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute})">
          <source>Attributes in the input collection that do not share claim type, claim value, or original issuer with other attributes appear unaltered in the output collection.</source>
          <target state="translated">Los atributos en la colección de entrada que no comparten el tipo de reclamación, el valor de reclamación o el emisor original con otros atributos aparecen inalterados en la colección de salida.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The token descriptor.</source>
          <target state="translated">Descriptor de token.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>When overridden in a derived class, creates a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAdvice" /&gt;</ph> object for the assertion.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, crea un objeto <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAdvice" /&gt;</ph> para la aserción.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAdvice" /&gt;</ph> object.</source>
          <target state="translated">Un objeto <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAdvice" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>By default, this method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">De forma predeterminada, este método devuelve <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(System.String,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})">
          <source>The issuer of the assertion.</source>
          <target state="translated">Emisor de la aserción.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(System.String,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlConditions" /&gt;</ph> to add to the assertion.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlConditions" /&gt;</ph> que se va a agregar a la aserción.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(System.String,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAdvice" /&gt;</ph> to add to the assertion.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAdvice" /&gt;</ph> que se va a agregar a la aserción.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(System.String,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})">
          <source>The collection of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlStatement" /&gt;</ph> to add to the assertion.</source>
          <target state="translated">Colección de <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlStatement" /&gt;</ph> que se van a agregar a la aserción.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(System.String,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAssertion" /&gt;</ph> object by using the specified issuer, conditions, advice and statements.</source>
          <target state="translated">Crea un objeto <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAssertion" /&gt;</ph> mediante el emisor, las condiciones, el consejo y las instrucciones que se especifican.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(System.String,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})">
          <source>You can override this method to customize the parameters used to create the assertion.</source>
          <target state="translated">Puede invalidar este método para personalizar los parámetros usados para crear la aserción.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(System.String,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})">
          <source>The SAML assertion that was created.</source>
          <target state="translated">Aserción SAML que se va a crear.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(System.String,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})">
          <source>A unique random id is created for the assertion and the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlAssertion.AssertionId%2A&gt;</ph> property is set to this value.</source>
          <target state="translated">Se crea un identificador aleatorio único para la aserción y <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlAssertion.AssertionId%2A&gt;</ph> propiedad se establece en este valor.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(System.String,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlAssertion.IssueInstant%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.DateTime.UtcNow%2A&gt;</ph>.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlAssertion.IssueInstant%2A&gt;</ph> se establece como <ph id="ph2">&lt;xref:System.DateTime.UtcNow%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Claims.Claim" /&gt;</ph> from which to generate the SAML Attribute.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Claims.Claim" /&gt;</ph> desde la que se va a generar el atributo de SAML.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The token descriptor.</source>
          <target state="translated">Descriptor de token.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttribute" /&gt;</ph> object from a claim.</source>
          <target state="translated">Crea un objeto <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttribute" /&gt;</ph> a partir de una reclamación.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttribute" /&gt;</ph> that contains the converted claim.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttribute" /&gt;</ph> que contiene la reclamación convertida.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source><ph id="ph1">&lt;paramref name="claim" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="claim" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSubject" /&gt;</ph> to use in the <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" /&gt;</ph> that is created.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSubject" /&gt;</ph> que se usa en el <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" /&gt;</ph> creado.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsIdentity" /&gt;</ph> object that contains claims which will be converted to SAML Attributes.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsIdentity" /&gt;</ph> que contiene las notificaciones que se convertirán en atributos de SAML.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The token descriptor.</source>
          <target state="translated">Descriptor de token.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" /&gt;</ph> object from a token descriptor.</source>
          <target state="translated">Crea un objeto <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" /&gt;</ph> a partir de un descriptor de token.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" /&gt;</ph> that contains the converted claims.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" /&gt;</ph> que contiene las reclamaciones convertidas.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>This method may return <ph id="ph1">`null`</ph> if the token descriptor does not contain any subject or the subject does not have any claims.</source>
          <target state="translated">Este método puede devolver <ph id="ph1">`null`</ph> si el descriptor de token no contiene ningún asunto o el sujeto no tiene las notificaciones.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The SamlSubject of the statement.</source>
          <target state="translated">SamlSubject de la instrucción.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Claims.AuthenticationInformation" /&gt;</ph> from which to generate the SAML authentication statement.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Claims.AuthenticationInformation" /&gt;</ph> desde la que se va a generar la instrucción de autenticación de SAML.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Contains all the other information that is used in token issuance.</source>
          <target state="translated">Contiene el resto de información que se utiliza en la emisión de tokens.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Creates a SAML 1.1 authentication statement from the specified authentication information.</source>
          <target state="translated">Crea una instrucción de autenticación SAML 1.1 a partir de la información de autenticación especificada.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The SAML authentication statement that was created.</source>
          <target state="translated">La instrucción de autenticación SAML creada.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source><ph id="ph1">&lt;paramref name="samlSubject" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="samlSubject" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source><ph id="ph1">&lt;paramref name="tokenDescriptor" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenDescriptor" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.SamlSecurityToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /&gt;</ph> that represents the security token from which to create the claims.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /&gt;</ph> que representa el token de seguridad a partir del cual se van a crear las notificaciones.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.SamlSecurityToken)">
          <source>Creates claims from a SAML 1.1 token.</source>
          <target state="translated">Crea notificaciones a partir de un token SAML 1.1.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.SamlSecurityToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsIdentity" /&gt;</ph> that contains the claims extracted from the token.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsIdentity" /&gt;</ph> que contiene las reclamaciones extraídas del token.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.SamlSecurityToken)">
          <source><ph id="ph1">&lt;paramref name="samlSecurityToken" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="samlSecurityToken" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.SamlSecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SamlSecurityToken.Assertion" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="samlSecurityToken" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SamlSecurityToken.Assertion" /&gt;</ph> de <ph id="ph2">&lt;paramref name="samlSecurityToken" /&gt;</ph> es <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.SamlSecurityToken)">
          <source>The handler is not configured or an issuer name registry is not configured for the handler.</source>
          <target state="translated">El controlador no está configurado o no se ha configurado un registro de nombres de emisores para el controlador.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.SamlSecurityToken)">
          <source>(The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.Configuration" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or is set to a <ph id="ph3">&lt;see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /&gt;</ph> with an <ph id="ph4">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry" /&gt;</ph> property that is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">(La propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.Configuration" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph> o se establece en un <ph id="ph3">&lt;see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /&gt;</ph> con una propiedad <ph id="ph4">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry" /&gt;</ph> que es <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.SamlSecurityToken)">
          <source>The issuer name returned by the configured issuer name registry for the security token (<ph id="ph1">&lt;paramref name="samlSecurityToken" /&gt;</ph>) is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or empty.</source>
          <target state="translated">El nombre del emisor devuelto por el registro de nombres de emisores configurado para el token de seguridad (<ph id="ph1">&lt;paramref name="samlSecurityToken" /&gt;</ph>) es <ph id="ph2">&lt;see langword="null" /&gt;</ph> o está vacío.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The lifetime of the token.</source>
          <target state="translated">Duración del token.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The endpoint address for which the token is created.</source>
          <target state="translated">Dirección del extremo para la cual se crea el token.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The address is modeled as an AudienceRestriction condition.</source>
          <target state="translated">La dirección se modela como condición de AudienceRestriction.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The token descriptor.</source>
          <target state="translated">Descriptor de token.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Creates the conditions for the assertion.</source>
          <target state="translated">Crea las condiciones para la aserción.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlConditions" /&gt;</ph> object that contains the conditions for the assertion.</source>
          <target state="translated">Un objeto de <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlConditions" /&gt;</ph> que contiene las condiciones para la aserción.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Generally, conditions should be included in assertions to limit the impact of misuse of the assertion.</source>
          <target state="translated">Por lo general, las condiciones deben incluirse en las aserciones para limitar el impacto de un uso incorrecto de la aserción.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Specifying the NotBefore and NotOnOrAfter conditions can limit the period of vulnerability in the case of a compromised assertion.</source>
          <target state="translated">Especificar las condiciones NotBefore y NotOnOrAfter puede limitar el período de una vulnerabilidad en el caso de una aserción en peligro.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The AudienceRestrictionCondition can be used to explicitly state the intended relying party or parties of the assertion, which coupled with appropriate audience restriction enforcement at relying parties can help to mitigate spoofing attacks between relying parties.</source>
          <target state="translated">La AudienceRestrictionCondition puede usarse para establecer explícitamente la entidad de confianza deseada o partes de la aserción, que se acopla con cumplimiento de restricción de audiencia apropiada en usuarios de confianza pueden ayudar a mitigar los ataques de suplantación de identidad entre usuarios de confianza.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The default implementation creates NotBefore and NotOnOrAfter conditions based on the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A&gt;</ph> property of the <ph id="ph2">`tokenDescriptor`</ph>.</source>
          <target state="translated">La implementación predeterminada crea NotBefore y NotOnOrAfter condiciones en función de la <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A&gt;</ph> propiedad de la <ph id="ph2">`tokenDescriptor`</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>It will also generate an AudienceRestrictionCondition limiting consumption of the assertion to the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A&gt;</ph> property of the <ph id="ph2">`tokenDescriptor`</ph>.</source>
          <target state="translated">También generará un AudienceRestrictionCondition limitar el consumo de la aserción a la <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A&gt;</ph> propiedad de la <ph id="ph2">`tokenDescriptor`</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The security token descriptor from which to create the subject.</source>
          <target state="translated">Descriptor del token de seguridad a partir del cual se va a crear el asunto.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Creates a SAML 1.1 subject for the assertion.</source>
          <target state="translated">Crea un sujeto de SAML 1.1 para la aserción.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSubject" /&gt;</ph> that represents the subject of the assertion.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSubject" /&gt;</ph> que representa el sujeto de la aserción.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source><ph id="ph1">&lt;paramref name="tokenDescriptor" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenDescriptor" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
          <source>The SAML token.</source>
          <target state="translated">El token de SAML.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
          <source>A value that indicates whether an attached or unattached reference should be created.</source>
          <target state="translated">Un valor que indica si una referencia adjunta o no adjunta debe crearse.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
          <source>Creates the security token reference when the token is not attached to the message.</source>
          <target state="translated">Crea la referencia del token de seguridad cuando el token no está adjunto al mensaje.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /&gt;</ph> that represents the token reference.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /&gt;</ph> que representa la referencia del token.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
          <source>(An instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" /&gt;</ph> is actually returned.)</source>
          <target state="translated">(Una instancia de <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" /&gt;</ph> se devuelve realmente.)</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The token descriptor from which to create the statements.</source>
          <target state="translated">Descriptor de token a partir del que se van a crear las instrucciones.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Creates SAML 1.1 statements to be included in the assertion.</source>
          <target state="translated">Crea las instrucciones SAML 1.1 que deben incluirse en la aserción.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>An enumeration of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlStatement" /&gt;</ph> that contains the statements.</source>
          <target state="translated">Una enumeración de <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlStatement" /&gt;</ph> que contiene las instrucciones.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Statements are not required in a SAML 1.1 assertion.</source>
          <target state="translated">Las instrucciones no son necesarios en una aserción de SAML 1.1.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>This method may return an empty collection.</source>
          <target state="translated">Este método puede devolver una colección vacía.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source><ph id="ph1">&lt;paramref name="tokenDescriptor" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenDescriptor" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The token descriptor from which to create the security token.</source>
          <target state="translated">Descriptor del token a partir del cual se va a crear el token de seguridad.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Creates a security token based on a token descriptor.</source>
          <target state="translated">Crea un token de seguridad basándose en el descriptor de token.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph> that represents the SAML 1.1 security token.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph> que representa el token de seguridad SAML 1.1.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>(The token returned is actually an instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /&gt;</ph>.)</source>
          <target state="translated">(El token devuelto es realmente una instancia de <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /&gt;</ph>.)</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source><ph id="ph1">&lt;paramref name="tokenDescriptor" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenDescriptor" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity(System.String)">
          <source>The UPN to use to create the identity.</source>
          <target state="translated">UPN que se va a usar para crear la identidad.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity(System.String)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> object using the specified User Principal Name (UPN).</source>
          <target state="translated">Crea un objeto <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> utilizando el nombre principal del usuario (UPN) especificado.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity(System.String)">
          <source>The Windows identity that was created.</source>
          <target state="translated">La identidad de Windows creada.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity(System.String)">
          <source><ph id="ph1">&lt;paramref name="upn" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="upn" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph> o una cadena vacía.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})">
          <source>An enumeration of type <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttribute" /&gt;</ph> that contains the attributes.</source>
          <target state="translated">Una enumeración de tipo <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttribute" /&gt;</ph> que contiene los atributos.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})">
          <source>Builds an XML formatted string from a collection of SAML 1.1 attributes that represent the Actor.</source>
          <target state="translated">Compila una cadena con formato XML de una colección de atributos SAML 1.1 que representan el Actor.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})">
          <source>A well-formed XML string constructed using the attributes.</source>
          <target state="translated">Una cadena de XML correcta construida utilizando los atributos.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})">
          <source>The string is of the form "<ph id="ph1">\&lt;</ph>Actor&gt;<ph id="ph2">\&lt;</ph>Attribute name, ns&gt;<ph id="ph3">\&lt;</ph>AttributeValue&gt;...<ph id="ph4">\&lt;</ph>/AttributeValue&gt;, ...<ph id="ph5">\&lt;</ph>/Attribute&gt;...<ph id="ph6">\&lt;</ph>/Actor&gt;"</source>
          <target state="translated">La cadena tiene la forma "<ph id="ph1">\&lt;</ph>Actor &gt;<ph id="ph2">\&lt;</ph>nombre de atributo, ns &gt;<ph id="ph3">\&lt;</ph>AttributeValue &gt;... <ph id="ph4">\&lt;</ph>/AttributeValue &gt;,...  <ph id="ph5">\&lt;</ph> /Atributo &gt;... <ph id="ph6">\&lt;</ph>/Actor &gt; "</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType(System.String)">
          <source>The normalized value.</source>
          <target state="translated">Valor normalizado.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType(System.String)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.AuthenticationMethods" /&gt;</ph> values.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.AuthenticationMethods" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType(System.String)">
          <source>Returns the SAML11 authentication method identifier that matches the specified normalized value for a SAML authentication method.</source>
          <target state="translated">Devuelve el identificador de método de autenticación de SAML11 que coincide con el valor normalizado especificado para un método de autenticación de SAML.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType(System.String)">
          <source>The SAML11 authentication method identifier (URI) that matches the specified normalized identifier.</source>
          <target state="translated">El identificador (URI) del método de autenticación SAML11 que coincide con el identificador normalizado especificado.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType(System.String)">
          <source>If no matching SAML11 authentication method is found, the <ph id="ph1">&lt;paramref name="normalizedAuthenticationType" /&gt;</ph> URI is returned unaltered.</source>
          <target state="translated">Si no se encuentra ningún método de autenticación que coincide con SAML11, se devuelve el URI de <ph id="ph1">&lt;paramref name="normalizedAuthenticationType" /&gt;</ph> inalterado.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType%2A&gt;</ph> method returns the SAML11 authentication method identifier that matches the specified normalized URI.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType%2A&gt;</ph> método devuelve el identificador de método de autenticación de SAML11 que coincida con lo especificado normalizado URI.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType(System.String)">
          <source>For example, if <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.AuthenticationMethods.X509&gt;</ph> is specified for <ph id="ph2">`normalizedAuthenticationType`</ph>, the following URI is returned: <ph id="ph3">`urn:oasis:names:tc:SAML:1.0:am:X509-PKI`</ph>.</source>
          <target state="translated">Por ejemplo, si <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.AuthenticationMethods.X509&gt;</ph> especificado para <ph id="ph2">`normalizedAuthenticationType`</ph>, se devuelve el URI siguiente: <ph id="ph3">`urn:oasis:names:tc:SAML:1.0:am:X509-PKI`</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType(System.String)">
          <source>If a mapping does not exist for <ph id="ph1">`normalizedAuthenticationType`</ph>, it is returned unaltered.</source>
          <target state="translated">Si no existe una asignación para <ph id="ph1">`normalizedAuthenticationType`</ph>, se devuelve sin modificar.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph> that represents the SAML 1.1 security token (the token should be of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /&gt;</ph>) to be checked.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph> que representa el token de seguridad de SAML 1.1 (el token debe ser de tipo <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /&gt;</ph>) que se comprobará.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>Throws an exception if the specified token already exists in the token replay cache; otherwise the token is added to the cache.</source>
          <target state="translated">Produce una excepción si el token especificado ya existe en la memoria caché de repetición de tokens; de lo contrario, el token se agrega a la memoria caché.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The default behavior is to only check bearer tokens (tokens that do not have keys).</source>
          <target state="translated">El comportamiento predeterminado es solo para comprobar tokens de portador (tokens que no tiene claves).</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The token replay cache is the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.Caches%2A&gt;</ph> object configured for this handler through the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.TokenReplayCacheExpirationPeriod*&gt;</ph> property of the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration&gt;</ph> object referenced through the <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A&gt;</ph> property.</source>
          <target state="translated">La caché de respuesta de token es el <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.Caches%2A&gt;</ph> objeto configurado para este controlador a través de la <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.TokenReplayCacheExpirationPeriod*&gt;</ph> propiedad de la <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration&gt;</ph> objeto al que hace referencia a través de la <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.Caches" /&gt;</ph> property of the handler configuration (accessed through the <ph id="ph2">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> property) is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.Caches" /&gt;</ph> de la configuración del controlador (acceso mediante la propiedad <ph id="ph2">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph>) es <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> cannot be cast as an instance of <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> no puede combinarse como una instancia de <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The ID of the assertion associated with the token is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or empty.</source>
          <target state="translated">El identificador de la aserción asociada al token es <ph id="ph1">&lt;see langword="null" /&gt;</ph> o está vacío.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>(The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SamlSecurityToken.Assertion" /&gt;</ph> property of the token references a <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlAssertion" /&gt;</ph> that has an <ph id="ph3">&lt;see cref="P:System.IdentityModel.Tokens.SamlAssertion.Id" /&gt;</ph> property that references a <ph id="ph4">&lt;see cref="T:System.IdentityModel.Tokens.SamlId" /&gt;</ph> with a <ph id="ph5">&lt;see cref="P:System.IdentityModel.Tokens.SamlId.Value" /&gt;</ph> property that is <ph id="ph6">&lt;see langword="null" /&gt;</ph> or empty.)</source>
          <target state="translated">(La propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SamlSecurityToken.Assertion" /&gt;</ph> del token hace referencia a <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlAssertion" /&gt;</ph> que tiene una propiedad <ph id="ph3">&lt;see cref="P:System.IdentityModel.Tokens.SamlAssertion.Id" /&gt;</ph> que hace referencia a <ph id="ph4">&lt;see cref="T:System.IdentityModel.Tokens.SamlId" /&gt;</ph> con una propiedad <ph id="ph5">&lt;see cref="P:System.IdentityModel.Tokens.SamlId.Value" /&gt;</ph> que es <ph id="ph6">&lt;see langword="null" /&gt;</ph> o está vacía).</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The token already exists in the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.TokenReplayCache" /&gt;</ph>.</source>
          <target state="translated">El token ya existe en <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.TokenReplayCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn(System.Security.Claims.ClaimsIdentity)">
          <source>The claims identity object containing the desired UPN claim.</source>
          <target state="translated">El objeto de identidad de notificaciones que contiene la notificación de UPN deseada.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn(System.Security.Claims.ClaimsIdentity)">
          <source>Finds the UPN claim value in the specified <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsIdentity" /&gt;</ph> object for the purpose of mapping the identity to a <ph id="ph2">&lt;see cref="T:System.Security.Claims.WindowsClaimsIdentity" /&gt;</ph> object.</source>
          <target state="translated">Busca el valor de petición de UPN en el objeto <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsIdentity" /&gt;</ph> especificado con el fin de asignar la identidad a un objeto <ph id="ph2">&lt;see cref="T:System.Security.Claims.WindowsClaimsIdentity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn(System.Security.Claims.ClaimsIdentity)">
          <source>A string that contains the UPN claim value found.</source>
          <target state="translated">Cadena que contiene el valor de petición de UPN encontrado.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Retrieves some scope encrypting credentials from the Scope object.</source>
          <target state="translated">Recupera algunas credenciales de cifrado de ámbito del objeto Scope.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Gets the token encrypting credentials.</source>
          <target state="translated">Obtiene las credenciales de cifrado de tokens.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Override this method to change the token encrypting credentials.</source>
          <target state="translated">Invalide este método para cambiar las credenciales de cifrado de tokens.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IdentityModel.SecurityTokenService.EncryptingCredentials" /&gt;</ph> that represents the token encrypting credentials.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.SecurityTokenService.EncryptingCredentials" /&gt;</ph> que representa las credenciales de cifrado de tokens.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The default implementation retrieves the encrypting credentials from the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A&gt;</ph> property of the <ph id="ph2">`tokenDescriptor`</ph>.</source>
          <target state="translated">La implementación predeterminada recupera las credenciales de cifrado de la <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A&gt;</ph> propiedad de la <ph id="ph2">`tokenDescriptor`</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source><ph id="ph1">&lt;paramref name="tokenDescriptor" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenDescriptor" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The encrypting credentials retrieved from the token descriptor are asymmetric.</source>
          <target state="translated">Las credenciales de cifrado recuperadas del descriptor de token son asimétricas.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The token descriptor.</source>
          <target state="translated">Descriptor de token.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Gets the credentials for signing the assertion.</source>
          <target state="translated">Obtiene las credenciales para firmar la aserción.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SigningCredentials" /&gt;</ph> that represents the credentials for signing the assertion.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SigningCredentials" /&gt;</ph> que representa las credenciales para firmar la aserción.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>SAML2 assertions used as security tokens should be signed.</source>
          <target state="translated">Las aserciones de SAML2 utilizadas como tokens de seguridad deben estar firmadas.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The default implementation uses the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A&gt;</ph> property of the <ph id="ph2">`tokenDescriptor`</ph> to retrieve the credentials.</source>
          <target state="translated">La implementación predeterminada usa la <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A&gt;</ph> propiedad de la <ph id="ph2">`tokenDescriptor`</ph> para recuperar las credenciales.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source><ph id="ph1">&lt;paramref name="tokenDescriptor" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenDescriptor" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.SamlSecurityToken)">
          <source>The token for which to return the expiration time.</source>
          <target state="translated">El token para el que se va a devolver la hora de expiración.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.SamlSecurityToken)">
          <source>Returns the time until which the token should be held in the token replay cache.</source>
          <target state="translated">Devuelve el tiempo límite que el token debe almacenarse en la memoria caché de reproducción de tokens.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.SamlSecurityToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> that represents the expiration time.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> que representa la hora de vencimiento.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.SamlSecurityToken)">
          <source>By default, this method returns the NotOnOrAfter of the SAML Condition if present.</source>
          <target state="translated">De forma predeterminada, este método devuelve el NotOnOrAfter de la condición de SAML, si está presente.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.SamlSecurityToken)">
          <source>If that value does not exist, it returns the NotOnOrAfter of the first SubjectConfirmationData.</source>
          <target state="translated">Si ese valor no existe, devuelve el NotOnOrAfter de la primera SubjectConfirmationData.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.SamlSecurityToken)">
          <source>This function will never return a value further from the current time (<ph id="ph1">&lt;xref:System.DateTime.Now%2A&gt;</ph>) than Configuration.TokenReplayCacheExpirationPeriod.</source>
          <target state="translated">Esta función nunca devolverá un valor más allá de la hora actual (<ph id="ph1">&lt;xref:System.DateTime.Now%2A&gt;</ph>) que Configuration.TokenReplayCacheExpirationPeriod.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.SamlSecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>Gets the token type identifier(s) supported by this handler.</source>
          <target state="translated">Obtiene los identificadores de tipo de token admitidos por este controlador.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>An array of strings that contains the token type identifier(s) supported by this handler.</source>
          <target state="translated">Una matriz de cadenas que contiene el los identificadores de tipo de token admitidos por este controlador.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer">
          <source>Gets or sets the security token serializer that is used to serialize and deserialize key identifiers.</source>
          <target state="translated">Obtiene o establece el serializador de tokens de seguridad que se utiliza para serializar y deserializar los identificadores de clave.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /&gt;</ph> that represents the serializer.</source>
          <target state="translated">Clase <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /&gt;</ph> que representa el serializador.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer">
          <source>Serializes and deserializes <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifier&gt;</ph> objects.</source>
          <target state="translated">Serializa y deserializa <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifier&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer">
          <source>An attempt to set the value to <ph id="ph1">&lt;see langword="null" /&gt;</ph> occurs.</source>
          <target state="translated">Se ha intentado establecer el valor en <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> that specifies the SAML token authentication requirements.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> que especifica los requisitos de token de autenticación de SAML.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Loads custom configuration from XML.</source>
          <target state="translated">Carga la configuración personalizado de XML.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source><ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The configuration specified in <ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> is not valid.</source>
          <target state="translated">La configuración especificada en <ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> no es válida.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="F:System.IdentityModel.Tokens.SamlSecurityTokenHandler.Namespace">
          <source>urn:oasis:names:tc:SAML:1.0</source>
          <target state="translated">urn:oasis:names:tc:SAML:1.0</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType(System.String)">
          <source>The SAML 1.1 authentication method identifier (URI) to normalize.</source>
          <target state="translated">El identificador (URI) del método de autenticación SAML 1.1 para normalizar.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType(System.String)">
          <source>Returns the normalized value that matches a SAML 1.1 authentication method identifier.</source>
          <target state="translated">Devuelve el valor normalizado que coincide con un identificador de método de autenticación de SAML 1.1.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType(System.String)">
          <source>The normalized value, which is one of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.AuthenticationMethods" /&gt;</ph> values.</source>
          <target state="translated">El valor normalizado, que es uno de los valores de <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.AuthenticationMethods" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType(System.String)">
          <source>If no matching value exists, <ph id="ph1">&lt;paramref name="saml11AuthenticationMethod" /&gt;</ph> is returned, unaltered.</source>
          <target state="translated">Si no existe ningún valor coincidente, se devuelve <ph id="ph1">&lt;paramref name="saml11AuthenticationMethod" /&gt;</ph> inalterado.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.AuthenticationMethods&gt;</ph> value that matches the specified SAML11 authentication method identifier.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType%2A&gt;</ph> método devuelve el <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.AuthenticationMethods&gt;</ph> valor que coincida con el identificador de método de autenticación SAML11 especificado.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType(System.String)">
          <source>For example, if <ph id="ph1">`urn:oasis:names:tc:SAML:1.0:am:X509-PKI`</ph> is specified for <ph id="ph2">`saml11AuthenticationMethod`</ph>, <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.AuthenticationMethods.X509&gt;</ph> is returned.</source>
          <target state="translated">Por ejemplo, si <ph id="ph1">`urn:oasis:names:tc:SAML:1.0:am:X509-PKI`</ph> especificado para <ph id="ph2">`saml11AuthenticationMethod`</ph>, <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.AuthenticationMethods.X509&gt;</ph> se devuelve.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType(System.String)">
          <source>If a mapping does not exist for <ph id="ph1">`saml11AuthenticationMethod`</ph>, it is returned unaltered.</source>
          <target state="translated">Si no existe una asignación para <ph id="ph1">`saml11AuthenticationMethod`</ph>, se devuelve sin modificar.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.SamlAttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" /&gt;</ph> from which the claims are created.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" /&gt;</ph> desde la que se crean las notificaciones.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.SamlAttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)">
          <source>The subject to which the claims are added.</source>
          <target state="translated">Asunto a la que se agregan las reclamaciones.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.SamlAttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)">
          <source>The issuer.</source>
          <target state="translated">Emisor.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.SamlAttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)">
          <source>Creates claims from a SAML 1.1 attribute statement and adds them to the specified subject.</source>
          <target state="translated">Crea notificaciones a partir de una instrucción de atributo SAML 1.1 y las agrega al sujeto especificado.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.SamlAttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)">
          <source>The created claims are added to the subject.</source>
          <target state="translated">Las notificaciones creadas se agregan al sujeto.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.SamlAttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)">
          <source><ph id="ph1">&lt;paramref name="samlStatement" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="samlStatement" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.SamlAttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.SamlAttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)">
          <source><ph id="ph1">&lt;paramref name="subject" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="subject" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.SamlAuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" /&gt;</ph> from which the claims are created.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" /&gt;</ph> desde la que se crean las notificaciones.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.SamlAuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)">
          <source>The subject to which the claims are added.</source>
          <target state="translated">Asunto a la que se agregan las reclamaciones.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.SamlAuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)">
          <source>The issuer.</source>
          <target state="translated">Emisor.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.SamlAuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)">
          <source>Creates claims from a SAML 1.1 authentication statement and adds them to the specified subject.</source>
          <target state="translated">Crea notificaciones a partir de una instrucción de autenticación SAML 1.1 y las agrega al sujeto especificado.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.SamlAuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)">
          <source><ph id="ph1">&lt;paramref name="samlStatement" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="samlStatement" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.SamlAuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.SamlAuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)">
          <source><ph id="ph1">&lt;paramref name="subject" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="subject" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" /&gt;</ph> from which the claims are created.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" /&gt;</ph> desde la que se crean las notificaciones.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)">
          <source>The subject to which the claims are added.</source>
          <target state="translated">Asunto a la que se agregan las reclamaciones.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)">
          <source>The issuer.</source>
          <target state="translated">Emisor.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)">
          <source>Creates claims from a SAML 1.1 authorization decision statement and adds them to the specified subject.</source>
          <target state="translated">Crea notificaciones a partir de una instrucción de decisión de autorización SAML 1.1 y las agrega al sujeto especificado.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)">
          <source>The default implementation does nothing.</source>
          <target state="translated">La implementación predeterminada no hace nada.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSubject" /&gt;</ph> from which the claims are created.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSubject" /&gt;</ph> desde la que se crean las notificaciones.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.String)">
          <source>The subject to which the claims are added.</source>
          <target state="translated">Asunto a la que se agregan las reclamaciones.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.String)">
          <source>The issuer.</source>
          <target state="translated">Emisor.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.String)">
          <source>Creates claims from the SAML 1.1 subject and adds them to the specified subject.</source>
          <target state="translated">Crea notificaciones a partir del sujeto SAML 1.1 y las agrega al sujeto especificado.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.String)">
          <source><ph id="ph1">&lt;paramref name="samlSubject" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="samlSubject" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement(System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement},System.Security.Claims.ClaimsIdentity,System.String)">
          <source>The SAML statements from which the claims are created.</source>
          <target state="translated">Las instrucciones de SAML desde las que se crean notificaciones.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement(System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement},System.Security.Claims.ClaimsIdentity,System.String)">
          <source>The subject to which the claims are added.</source>
          <target state="translated">Asunto a la que se agregan las reclamaciones.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement(System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement},System.Security.Claims.ClaimsIdentity,System.String)">
          <source>The issuer.</source>
          <target state="translated">Emisor.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement(System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement},System.Security.Claims.ClaimsIdentity,System.String)">
          <source>Creates claims from a collection of SAML 1.1 statements and adds them to the specified subject.</source>
          <target state="translated">Crea notificaciones a partir de una colección de instrucciones SAML 1.1 y las agrega al sujeto especificado.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement(System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement},System.Security.Claims.ClaimsIdentity,System.String)">
          <source><ph id="ph1">&lt;paramref name="statements" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="statements" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> positioned at the element to read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> situado en el elemento que se va a leer.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction(System.Xml.XmlReader)">
          <source>Reads the <ph id="ph1">&amp;lt;</ph>saml:Action<ph id="ph2">&amp;gt;</ph> element.</source>
          <target state="translated">Lee el elemento <ph id="ph1">&amp;lt;</ph>saml:Action<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAction" /&gt;</ph> that represents the Action element that is read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAction" /&gt;</ph> que representa el elemento Action que se lee.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> positioned at the element to read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> situado en el elemento que se va a leer.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)">
          <source>Reads the <ph id="ph1">&amp;lt;</ph>saml:Advice<ph id="ph2">&amp;gt;</ph> element.</source>
          <target state="translated">Lee el elemento <ph id="ph1">&amp;lt;</ph>saml:Advice<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAdvice" /&gt;</ph> that represents the Advice element that is read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAdvice" /&gt;</ph> que representa el elemento Advice que se lee.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)">
          <source>The Advice element has an extensibility point to allow XML elements from non-SAML 1.1 namespaces to be included.</source>
          <target state="translated">El elemento de Consejo tiene un punto de extensibilidad para permitir que los elementos XML de espacios de nombres no SAML 1.1 van a incluir.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)">
          <source>By default, because the Advice may be ignored without affecting the semantics of the assertion, any such elements are ignored.</source>
          <target state="translated">De forma predeterminada, porque se puede omitir el Consejo sin que afecte a la semántica de la aserción, se omiten los elementos de este tipo.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)">
          <source>To handle the processing of those elements, override this method.</source>
          <target state="translated">Para controlar el procesamiento de esos elementos, invalide este método.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> positioned at the element to read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> situado en el elemento que se va a leer.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion(System.Xml.XmlReader)">
          <source>Reads the <ph id="ph1">&amp;lt;</ph>saml:Assertion<ph id="ph2">&amp;gt;</ph> element.</source>
          <target state="translated">Lee el elemento <ph id="ph1">&amp;lt;</ph>saml:Assertion<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAssertion" /&gt;</ph> that represents the Assertion element that is read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAssertion" /&gt;</ph> que representa el elemento Assertion que se lee.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> positioned at the element to read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> situado en el elemento que se va a leer.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)">
          <source>Reads the <ph id="ph1">&amp;lt;</ph>saml:Attribute<ph id="ph2">&amp;gt;</ph> element.</source>
          <target state="translated">Lee el elemento <ph id="ph1">&amp;lt;</ph>saml:Attribute<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAssertion" /&gt;</ph> that represents the Assertion element that is read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAssertion" /&gt;</ph> que representa el elemento Assertion que se lee.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)">
          <source>The default implementation requires that the content of the Attribute element be a simple string.</source>
          <target state="translated">La implementación predeterminada requiere que el contenido del elemento Attribute que sea una cadena simple.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)">
          <source>To handle complex content or content of declared simple types other than xs:string, override this method.</source>
          <target state="translated">Para controlar contenido complejo o el contenido de los tipos simples declarados que no sea de xs: String, invalide este método.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> positioned at the element to read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> situado en el elemento que se va a leer.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement(System.Xml.XmlReader)">
          <source>Reads the <ph id="ph1">&amp;lt;</ph>saml:AttributeStatement<ph id="ph2">&amp;gt;</ph> element, or a <ph id="ph3">&amp;lt;</ph>saml:Statement<ph id="ph4">&amp;gt;</ph> element that specifies an xsi:type of saml:AttributeStatementType.</source>
          <target state="translated">Lee el elemento <ph id="ph1">&amp;lt;</ph>saml:AttributeStatement<ph id="ph2">&amp;gt;</ph> o un elemento <ph id="ph3">&amp;lt;</ph>saml:Statement<ph id="ph4">&amp;gt;</ph> que especifica un valor xsi:type de saml:AttributeStatementType.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" /&gt;</ph> that represents the element that is read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" /&gt;</ph> que representa el elemento que se lee.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAttribute)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> positioned at the element to read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> situado en el elemento que se va a leer.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAttribute)">
          <source>The attribute being read.</source>
          <target state="translated">Atributo que se lee.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAttribute)">
          <source>Reads an attribute value.</source>
          <target state="translated">Lee un valor de atributo.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAttribute)">
          <source>A string that contains the attribute value.</source>
          <target state="translated">Cadena que contiene el valor del atributo.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAttribute)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(System.Xml.XmlReader)">
          <source>An XML reader positioned at the <ph id="ph1">&amp;lt;</ph>saml:AudienceRestrictionCondition<ph id="ph2">&amp;gt;</ph> element to read.</source>
          <target state="translated">Lector XML situado en el elemento <ph id="ph1">&amp;lt;</ph>saml:AudienceRestrictionCondition<ph id="ph2">&amp;gt;</ph> que se va a leer.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(System.Xml.XmlReader)">
          <source>Reads the <ph id="ph1">&amp;lt;</ph>saml:AudienceRestrictionCondition<ph id="ph2">&amp;gt;</ph> element from the specified XML reader.</source>
          <target state="translated">Lee el elemento <ph id="ph1">&amp;lt;</ph>saml:AudienceRestrictionCondition<ph id="ph2">&amp;gt;</ph> del lector de XML especificado.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /&gt;</ph> that represents the element that was read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /&gt;</ph> que representa el elemento que se leyó.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> positioned at the element to read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> situado en el elemento que se va a leer.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement(System.Xml.XmlReader)">
          <source>Reads the <ph id="ph1">&amp;lt;</ph>saml:AuthnStatement<ph id="ph2">&amp;gt;</ph> element or a <ph id="ph3">&amp;lt;</ph>saml:Statement<ph id="ph4">&amp;gt;</ph> element that specifies an xsi:type of saml:AuthnStatementType.</source>
          <target state="translated">Lee el elemento <ph id="ph1">&amp;lt;</ph>saml:AuthnStatement<ph id="ph2">&amp;gt;</ph> o un elemento <ph id="ph3">&amp;lt;</ph>saml:Statement<ph id="ph4">&amp;gt;</ph> que especifica un valor xsi:type de saml:AuthnStatementType.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" /&gt;</ph> that represents the element that is read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" /&gt;</ph> que representa el elemento que se lee.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding(System.Xml.XmlReader)">
          <source>An XML reader positioned at the <ph id="ph1">&amp;lt;</ph>saml:AuthorityBinding<ph id="ph2">&amp;gt;</ph> element</source>
          <target state="translated">Lector XML situado en el elemento <ph id="ph1">&amp;lt;</ph>saml:AuthorityBinding<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding(System.Xml.XmlReader)">
          <source>Read the <ph id="ph1">&amp;lt;</ph>saml:AuthorityBinding<ph id="ph2">&amp;gt;</ph> element.</source>
          <target state="translated">Lee el elemento <ph id="ph1">&amp;lt;</ph>saml:AuthorityBinding<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAuthorityBinding" /&gt;</ph> that was read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAuthorityBinding" /&gt;</ph> que se leyó.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is not positioned at a saml:AuthorityBinding element or contains an unrecognized child element or a child element that is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> no está situado en un elemento saml:AuthorityBinding o bien contiene un elemento secundario desconocido o no válido.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> positioned at the element to read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> situado en el elemento que se va a leer.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(System.Xml.XmlReader)">
          <source>Reads the <ph id="ph1">&amp;lt;</ph>saml:AuthzDecisionStatement<ph id="ph2">&amp;gt;</ph> element or a <ph id="ph3">&amp;lt;</ph>saml:Statement<ph id="ph4">&amp;gt;</ph> element that specifies an xsi:type of saml:AuthzDecisionStatementType.</source>
          <target state="translated">Lee el elemento <ph id="ph1">&amp;lt;</ph>saml:AuthzDecisionStatement<ph id="ph2">&amp;gt;</ph> o un elemento <ph id="ph3">&amp;lt;</ph>saml:Statement<ph id="ph4">&amp;gt;</ph> que especifica un valor xsi:type de saml:AuthzDecisionStatementType.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAuthorizationStatement" /&gt;</ph> that represents the element that is read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAuthorizationStatement" /&gt;</ph> que representa el elemento que se lee.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition(System.Xml.XmlReader)">
          <source>The reader from which to read the element.</source>
          <target state="translated">Lector desde el que se debe leer el elemento.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition(System.Xml.XmlReader)">
          <source>Reads a saml:AudienceRestrictionCondition or a saml:DoNotCacheCondition from the specified reader</source>
          <target state="translated">Lee un elemento saml:AudienceRestrictionCondition o saml:DoNotCacheCondition del lector especificado</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlCondition" /&gt;</ph> that was read from the XML.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlCondition" /&gt;</ph> que se leyó en el XML.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is positioned at an unknown element.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> está situado en un elemento desconocido.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> positioned at the element to read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> situado en el elemento que se va a leer.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions(System.Xml.XmlReader)">
          <source>Reads the <ph id="ph1">&amp;lt;</ph>saml:Conditions<ph id="ph2">&amp;gt;</ph> element.</source>
          <target state="translated">Lee el elemento <ph id="ph1">&amp;lt;</ph>saml:Conditions<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlConditions" /&gt;</ph> that represents the Conditions element that is read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlConditions" /&gt;</ph> que representa el elemento Conditions que se lee.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions(System.Xml.XmlReader)">
          <source>To handle custom <ph id="ph1">\&lt;</ph>saml:Condition&gt; elements, override this method.</source>
          <target state="translated">Para controlar personalizado <ph id="ph1">\&lt;</ph>saml:Condition &gt; elementos, invalide este método.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is not positioned at a Conditions element.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> no está situado en un elemento Conditions.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition(System.Xml.XmlReader)">
          <source>An XML reader positioned at a saml:DoNotCacheCondition element</source>
          <target state="translated">Un lector XML colocado en un elemento saml:DoNotCacheCondition</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition(System.Xml.XmlReader)">
          <source>Reads a  saml:DoNotCacheCondition element from the specified XML reader.</source>
          <target state="translated">Lee un elemento saml:DoNotCacheCondition del lector de XML especificado.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" /&gt;</ph> that was read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" /&gt;</ph> que se leyó.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is not positioned at a saml:DoNotCacheCondition element.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> no está situado en un elemento saml:DoNotCacheCondition.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> positioned at the element to read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> situado en el elemento que se va a leer.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence(System.Xml.XmlReader)">
          <source>Reads the <ph id="ph1">&amp;lt;</ph>saml:Evidence<ph id="ph2">&amp;gt;</ph> element.</source>
          <target state="translated">Lee el elemento <ph id="ph1">&amp;lt;</ph>saml:Evidence<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlEvidence" /&gt;</ph> that represents the Evidence element that is read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlEvidence" /&gt;</ph> que representa el elemento Evidence que se lee.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAssertion)">
          <source>An XmlReader that can be positioned at a ds:KeyInfo element.</source>
          <target state="translated">Un XmlReader que se puede colocar en un elemento ds:KeyInfo.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAssertion)">
          <source>The assertion that is having the signature checked.</source>
          <target state="translated">La aserción de la que se comprueba la signatura.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAssertion)">
          <source>Deserializes the SAML Signing KeyInfo.</source>
          <target state="translated">Deserializa el objeto KeyInfo de firma de SAML.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAssertion)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /&gt;</ph> that represents the key to use to check the signature.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /&gt;</ph> que representa la clave que se usará para comprobar la signatura.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAssertion)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> positioned at the element to read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> situado en el elemento que se va a leer.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement(System.Xml.XmlReader)">
          <source>Reads the <ph id="ph1">&amp;lt;</ph>saml:Statement<ph id="ph2">&amp;gt;</ph> element.</source>
          <target state="translated">Lee el elemento <ph id="ph1">&amp;lt;</ph>saml:Statement<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlStatement" /&gt;</ph> that represents the Statement element that was read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlStatement" /&gt;</ph> que representa el elemento Statement leído.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement(System.Xml.XmlReader)">
          <source>The default implementation only handles Statement elements that specify an xsi:type of saml:AttributeStatementType, saml:AuthnStatementType, and saml:AuthzDecisionStatementType.</source>
          <target state="translated">La implementación predeterminada solo controla los elementos de instrucción que especifican xsi: Type de saml:AttributeStatementType, saml:AuthnStatementType y saml:AuthzDecisionStatementType.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement(System.Xml.XmlReader)">
          <source>To handle custom statements, override this method.</source>
          <target state="translated">Para controlar las instrucciones personalizadas, invalide este método.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> positioned at the element to read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> situado en el elemento que se va a leer.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject(System.Xml.XmlReader)">
          <source>Reads the <ph id="ph1">&amp;lt;</ph>saml:Subject<ph id="ph2">&amp;gt;</ph> element.</source>
          <target state="translated">Lee el elemento <ph id="ph1">&amp;lt;</ph>saml:Subject<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSubject" /&gt;</ph> that represents the Subject element that was read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSubject" /&gt;</ph> que representa el elemento Subject leído.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject(System.Xml.XmlReader)">
          <source>The default implementation does not handle the optional <ph id="ph1">\&lt;</ph>EncryptedID&gt; element.</source>
          <target state="translated">La implementación predeterminada no controla opcional <ph id="ph1">\&lt;</ph>EncryptedID &gt; elemento.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject(System.Xml.XmlReader)">
          <source>To handle encryped IDs in the Subject, override this method.</source>
          <target state="translated">Para controlar los identificadores de encryped en el asunto, invalide este método.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> positioned at a <ph id="ph2">&amp;lt;</ph>ds:KeyInfo<ph id="ph3">&amp;gt;</ph> element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> situado en un elemento <ph id="ph2">&amp;lt;</ph>ds:KeyInfo<ph id="ph3">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo(System.Xml.XmlReader)">
          <source>Deserializes the SAML Subject <ph id="ph1">&amp;lt;</ph>ds:KeyInfo<ph id="ph2">&amp;gt;</ph> element.</source>
          <target state="translated">Deserializa el elemento <ph id="ph1">&amp;lt;</ph>ds:KeyInfo<ph id="ph2">&amp;gt;</ph> de SAML Subject.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /&gt;</ph> that represents the contents of the <ph id="ph2">&amp;lt;</ph>ds:KeyInfo<ph id="ph3">&amp;gt;</ph> element.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /&gt;</ph> que representa el contenido del elemento <ph id="ph2">&amp;lt;</ph>ds:KeyInfo<ph id="ph3">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> stream to a SAML 1.1 Security Token.</source>
          <target state="translated">Flujo <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> a un token de seguridad de SAML 1.1.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>Reads a SAML 1.1 token from the specified stream.</source>
          <target state="translated">Lee un token de SAML 1.1 en la secuencia especificada.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Instancia de <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerTokenResolver" /&gt;</ph> property of the configuration specified by the <ph id="ph2">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> property is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerTokenResolver" /&gt;</ph> de la configuración especificada por la propiedad <ph id="ph2">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> es <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.ServiceTokenResolver" /&gt;</ph> property of the configuration specified by the <ph id="ph2">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> property is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.ServiceTokenResolver" /&gt;</ph> de la configuración especificada por la propiedad <ph id="ph2">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> es <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAssertion" /&gt;</ph> for which the Issuer token is to be resolved.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAssertion" /&gt;</ph> para las que se va a resolver el token de emisor.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /&gt;</ph> associated with this handler.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /&gt;</ph> actual asociado a este controlador.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>Resolves the Signing Key Identifier to a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</source>
          <target state="translated">Resuelve el identificador de clave de firma en un <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph> that represents the resolved token.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph> que representa el token resuelto.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source><ph id="ph1">&lt;paramref name="assertion" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assertion" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The handler is unable to resolve the token.</source>
          <target state="translated">El controlador no puede resolver el token.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source>The key identifier to resolve into a key.</source>
          <target state="translated">Identificador de clave que se va a resolver en una clave.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source>Resolves the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /&gt;</ph> specified in a saml:Subject element.</source>
          <target state="translated">Resuelve el objeto <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /&gt;</ph> especificado en un elemento saml:Subject.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source>The key resolved from the key identifier.</source>
          <target state="translated">Clave resuelta del identificador de clave.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement">
          <source>Gets or sets the security token requirements for this instance.</source>
          <target state="translated">Obtiene o establece los requisitos de token de seguridad para esta instancia.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" /&gt;</ph> that specifies the requirements.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" /&gt;</ph> que especifica los requisitos.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement">
          <source>An attempt to set the value to <ph id="ph1">&lt;see langword="null" /&gt;</ph> occurs.</source>
          <target state="translated">Se ha intentado establecer el valor en <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.SamlAttribute,System.Security.Claims.ClaimsIdentity,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttribute" /&gt;</ph> to use.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttribute" /&gt;</ph> que se va a usar.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.SamlAttribute,System.Security.Claims.ClaimsIdentity,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsIdentity" /&gt;</ph> that is the subject of this token.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsIdentity" /&gt;</ph> que es el asunto de este token.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.SamlAttribute,System.Security.Claims.ClaimsIdentity,System.String)">
          <source>The issuer of the claim.</source>
          <target state="translated">Emisor de la notificación.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.SamlAttribute,System.Security.Claims.ClaimsIdentity,System.String)">
          <source>This method gets called when a special type of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttribute" /&gt;</ph> is detected.</source>
          <target state="translated">Se llama a este método cuando se detecta un tipo especial de <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.SamlAttribute,System.Security.Claims.ClaimsIdentity,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttribute" /&gt;</ph> passed in wraps a <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttribute" /&gt;</ph> that contains a collection of attribute values (in the <ph id="ph3">&lt;see cref="P:System.IdentityModel.Tokens.SamlAttribute.Values" /&gt;</ph> property), each of which will get mapped to a claim.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttribute" /&gt;</ph> pasado ajusta un <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttribute" /&gt;</ph> que contiene una colección de valores de atributo (en la propiedad <ph id="ph3">&lt;see cref="P:System.IdentityModel.Tokens.SamlAttribute.Values" /&gt;</ph>) cada uno de los cuales se asigna a una notificación.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.SamlAttribute,System.Security.Claims.ClaimsIdentity,System.String)">
          <source>All of the claims will be returned in an <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsIdentity" /&gt;</ph> with the specified issuer.</source>
          <target state="translated">Todas las reclamaciones se devuelvan en un <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsIdentity" /&gt;</ph> con el emisor especificado.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.SamlAttribute,System.Security.Claims.ClaimsIdentity,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttribute" /&gt;</ph> does not contain any valid attribute values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttribute" /&gt;</ph> no contiene valores de atributo válidos.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.TokenType">
          <source>Gets the token type supported by this handler.</source>
          <target state="translated">Obtiene el tipo de token admitido por este controlador.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.TokenType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> de la clase <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAssertion" /&gt;</ph> for which the Issuer token is to be resolved.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAssertion" /&gt;</ph> para las que se va a resolver el token de emisor.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /&gt;</ph> associated with this handler.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /&gt;</ph> actual asociado a este controlador.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)">
          <source>When this method returns, contains the resolved security token if a token was successfully resolved.</source>
          <target state="translated">Cuando este método vuelve, contiene el token de seguridad resuelto si se resolvió correctamente un token.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)">
          <source>Resolves the Signing Key Identifier to a SecurityToken.</source>
          <target state="translated">Resuelve el identificador de clave de firma en un objeto SecurityToken.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the token is resolved.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el token se ha resuelto.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="F:System.IdentityModel.Tokens.SamlSecurityTokenHandler.UnspecifiedAuthenticationMethod">
          <source>urn:oasis:names:tc:SAML:1.0:am:unspecified</source>
          <target state="translated">urn:oasis:names:tc:SAML:1.0:am:unspecified</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.SamlConditions,System.Boolean)">
          <source>The SAML 1.1 condition to be validated.</source>
          <target state="translated">Condición SAML 1.1 que se va a validar.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.SamlConditions,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to check for Audience Restriction condition.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para comprobar si hay una condición de restricción de audiencia.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.SamlConditions,System.Boolean)">
          <source>Validates the specified <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlConditions" /&gt;</ph> object.</source>
          <target state="translated">Valida el objeto <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlConditions" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.SamlConditions,System.Boolean)">
          <source>Throws an appropriate exception if the condition is not valid.</source>
          <target state="translated">Inicia una excepción adecuada si la condición no es válida.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.SamlConditions,System.Boolean)">
          <source>The token may not be valid for a number of reasons.</source>
          <target state="translated">El token no puede ser válido para una serie de motivos.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.SamlConditions,System.Boolean)">
          <source>For example, the current time may not be within the token's validity period, the token may contain data that is contradictory or not valid, or the token may contain unsupported SAML 1.1 elements.</source>
          <target state="translated">Por ejemplo, no puede ser la hora actual en el período de validez del token, el token puede contener datos que sean contradictorias o no es válido o el token puede contener elementos de SAML 1.1 no compatibles.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The SAML 1.1 token to be validated.</source>
          <target state="translated">Token SAML 1.1 que se va a validar.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>Validates the token data and returns its claims.</source>
          <target state="translated">Valida los datos de token y devuelve sus notificaciones.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The identities contained in the token.</source>
          <target state="translated">Identidades contenidas en el token.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>Throws an appropriate exception if the token is not valid.</source>
          <target state="translated">Inicia una excepción adecuada si el token no es válido.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> with which to write the data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> con el que se va a escribir los datos.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAction)">
          <source>The data to write.</source>
          <target state="translated">Datos que se van a escribir.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAction)">
          <source>Writes the <ph id="ph1">&amp;lt;</ph>saml:Action<ph id="ph2">&amp;gt;</ph> element.</source>
          <target state="translated">Escribe el elemento <ph id="ph1">&amp;lt;</ph>saml:Action<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAction)">
          <source><ph id="ph1">&lt;paramref name="action" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="action" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAction)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAction)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAdvice)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> with which to write the data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> con el que se va a escribir los datos.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAdvice)">
          <source>The data to write.</source>
          <target state="translated">Datos que se van a escribir.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAdvice)">
          <source>Writes the <ph id="ph1">&amp;lt;</ph>saml:Advice<ph id="ph2">&amp;gt;</ph> element.</source>
          <target state="translated">Escribe el elemento <ph id="ph1">&amp;lt;</ph>saml:Advice<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAdvice)">
          <source><ph id="ph1">&lt;paramref name="advice" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="advice" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAdvice)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAdvice)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> to use for the serialization.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> que se debe usar para la serialización.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAssertion" /&gt;</ph> that represents the assertion to serialize.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAssertion" /&gt;</ph> que representa la aserción para serializar.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)">
          <source>Serializes the specified SAML assertion to the specified XML writer.</source>
          <target state="translated">Serializa la aserción SAML especificada en el sistema de escritura XML determinado.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)">
          <source><ph id="ph1">&lt;paramref name="assertion" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assertion" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)">
          <source>The assertion specified by <ph id="ph1">&lt;paramref name="assertion" /&gt;</ph> has both the <ph id="ph2">&lt;see cref="T:System.IdentityModel.SecurityTokenService.EncryptingCredentials" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReceivedEncryptingCredentials" /&gt;</ph> properties set to <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La aserción que especifica <ph id="ph1">&lt;paramref name="assertion" /&gt;</ph> tiene las propiedades <ph id="ph2">&lt;see cref="T:System.IdentityModel.SecurityTokenService.EncryptingCredentials" /&gt;</ph> y <ph id="ph3">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReceivedEncryptingCredentials" /&gt;</ph> establecidas en <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)">
          <source>There are no statements and no subject in the assertion specified by <ph id="ph1">&lt;paramref name="data" /&gt;</ph>.</source>
          <target state="translated">No hay instrucciones y ningún asunto en la aserción especificada por <ph id="ph1">&lt;paramref name="data" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)">
          <source>(Both the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SamlAssertion.Subject" /&gt;</ph> property and the <ph id="ph2">&lt;see cref="P:System.IdentityModel.Tokens.SamlAssertion.Statements" /&gt;</ph> property are <ph id="ph3">&lt;see langword="null" /&gt;</ph>.) If an assertion does not contain statements, it must contain a subject.</source>
          <target state="translated">(La propiedad de <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SamlAssertion.Subject" /&gt;</ph> y la propiedad de <ph id="ph2">&lt;see cref="P:System.IdentityModel.Tokens.SamlAssertion.Statements" /&gt;</ph> son <ph id="ph3">&lt;see langword="null" /&gt;</ph>.) Si una aserción no contiene instrucciones, debe contener un asunto.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)">
          <source>The assertion specified by <ph id="ph1">&lt;paramref name="assertion" /&gt;</ph> contains an authentication, attribute, or authorization decision statement and no subject—these statements require a subject.</source>
          <target state="translated">La aserción que especifica <ph id="ph1">&lt;paramref name="assertion" /&gt;</ph> contiene una autenticación, atributo o instrucción de la decisión de autorización y ningún asunto (estas instrucciones requieren un asunto).</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)">
          <source>(The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SamlAssertion.Statements" /&gt;</ph> property contains a statement of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" /&gt;</ph>, or <ph id="ph4">&lt;see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" /&gt;</ph> and the <ph id="ph5">&lt;see cref="P:System.IdentityModel.Tokens.SamlAssertion.Subject" /&gt;</ph> property is <ph id="ph6">&lt;see langword="null" /&gt;</ph>).</source>
          <target state="translated">(La propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SamlAssertion.Statements" /&gt;</ph> contiene un extracto de tipo <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" /&gt;</ph> o <ph id="ph4">&lt;see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" /&gt;</ph> y la propiedad <ph id="ph5">&lt;see cref="P:System.IdentityModel.Tokens.SamlAssertion.Subject" /&gt;</ph> es <ph id="ph6">&lt;see langword="null" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)">
          <source>The token encrypting credentials do not have a Symmetric Key specified.</source>
          <target state="translated">Las credenciales de cifrado de token no tienen una clave simétrica especificada.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttribute)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> with which to write the data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> con el que se va a escribir los datos.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttribute)">
          <source>The data to write.</source>
          <target state="translated">Datos que se van a escribir.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttribute)">
          <source>Writes the <ph id="ph1">&amp;lt;</ph>saml:Attribute<ph id="ph2">&amp;gt;</ph> element.</source>
          <target state="translated">Escribe el elemento <ph id="ph1">&amp;lt;</ph>saml:Attribute<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttribute)">
          <source><ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttribute)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttribute)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttributeStatement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> with which to write the data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> con el que se va a escribir los datos.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttributeStatement)">
          <source>The data to write.</source>
          <target state="translated">Datos que se van a escribir.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttributeStatement)">
          <source>Writes the <ph id="ph1">&amp;lt;</ph>saml:AttributeStatement<ph id="ph2">&amp;gt;</ph> element.</source>
          <target state="translated">Escribe el elemento <ph id="ph1">&amp;lt;</ph>saml:AttributeStatement<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttributeStatement)">
          <source><ph id="ph1">&lt;paramref name="statement" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="statement" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttributeStatement)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttributeStatement)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.SamlAttribute)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> with which to write.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> con el que se va a escribir.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.SamlAttribute)">
          <source>A string that contains the attribute value to be written.</source>
          <target state="translated">Cadena que contiene el valor del atributo que se va a escribir.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.SamlAttribute)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttribute" /&gt;</ph> that represents the attribute whose value is being written.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAttribute" /&gt;</ph> que representa el atributo cuyo valor se está escribiendo.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.SamlAttribute)">
          <source>Writes the saml:Attribute value.</source>
          <target state="translated">Escribe el valor saml:Attribute.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.SamlAttribute)">
          <source>By default the method writes the value as a string.</source>
          <target state="translated">De forma predeterminada el método escribe el valor como una cadena.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.SamlAttribute)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> with which to write the data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> con el que se va a escribir los datos.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)">
          <source>The data to write.</source>
          <target state="translated">Datos que se van a escribir.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)">
          <source>Writes the <ph id="ph1">&amp;lt;</ph>saml:AudienceRestriction<ph id="ph2">&amp;gt;</ph> element.</source>
          <target state="translated">Escribe el elemento <ph id="ph1">&amp;lt;</ph>saml:AudienceRestriction<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SamlConditions.Conditions" /&gt;</ph> property of the <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /&gt;</ph> specified in <ph id="ph3">&lt;paramref name="condition" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph> or an empty collection.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SamlConditions.Conditions" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /&gt;</ph> especificado en <ph id="ph3">&lt;paramref name="condition" /&gt;</ph> es <ph id="ph4">&lt;see langword="null" /&gt;</ph> o una colección vacía.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthenticationStatement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> with which to write the data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> con el que se va a escribir los datos.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthenticationStatement)">
          <source>The data to write.</source>
          <target state="translated">Datos que se van a escribir.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthenticationStatement)">
          <source>Writes the <ph id="ph1">&amp;lt;</ph>saml:AuthnStatement<ph id="ph2">&amp;gt;</ph> element.</source>
          <target state="translated">Escribe el elemento <ph id="ph1">&amp;lt;</ph>saml:AuthnStatement<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthenticationStatement)">
          <source><ph id="ph1">&lt;paramref name="statement" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="statement" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthenticationStatement)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthenticationStatement)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorityBinding)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> with which to write the data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> con el que se va a escribir los datos.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorityBinding)">
          <source>The data to write.</source>
          <target state="translated">Datos que se van a escribir.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorityBinding)">
          <source>Writes the <ph id="ph1">&amp;lt;</ph>saml:AuthorityBinding<ph id="ph2">&amp;gt;</ph> element.</source>
          <target state="translated">Escribe el elemento <ph id="ph1">&amp;lt;</ph>saml:AuthorityBinding<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorityBinding)">
          <source><ph id="ph1">&lt;paramref name="authorityBinding" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="authorityBinding" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorityBinding)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorityBinding)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> with which to write the data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> con el que se va a escribir los datos.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement)">
          <source>The data to write.</source>
          <target state="translated">Datos que se van a escribir.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement)">
          <source>Writes the <ph id="ph1">&amp;lt;</ph>saml:AuthzDecisionStatement<ph id="ph2">&amp;gt;</ph> element.</source>
          <target state="translated">Escribe el elemento <ph id="ph1">&amp;lt;</ph>saml:AuthzDecisionStatement<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement)">
          <source><ph id="ph1">&lt;paramref name="statement" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="statement" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlCondition)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> with which to write the data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> con el que se va a escribir los datos.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlCondition)">
          <source>The data to write.</source>
          <target state="translated">Datos que se van a escribir.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlCondition)">
          <source>By default, only <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" /&gt;</ph> are supported.</source>
          <target state="translated">De forma predeterminada, solo se admite <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /&gt;</ph> y <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlCondition)">
          <source>Serializes the specified <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlCondition" /&gt;</ph> object.</source>
          <target state="translated">Serializa el objeto <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlCondition" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlCondition)">
          <source>By default, the method invokes either the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition%2A&gt;</ph> method to serialize the condition based on the type of <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SamlCondition&gt;</ph> specified.</source>
          <target state="translated">De forma predeterminada, el método invoca el <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition%2A&gt;</ph> según el tipo de método para serializar la condición <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SamlCondition&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlCondition)">
          <source><ph id="ph1">&lt;paramref name="condition" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="condition" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlCondition)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlCondition)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlCondition)">
          <source><ph id="ph1">&lt;paramref name="condition" /&gt;</ph> is not supported.</source>
          <target state="translated">No se admite <ph id="ph1">&lt;paramref name="condition" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlCondition)">
          <source>.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlCondition)">
          <source>By default, only <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" /&gt;</ph> are supported.</source>
          <target state="translated">De forma predeterminada, solo se admite <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /&gt;</ph> y <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlConditions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> with which to write the data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> con el que se va a escribir los datos.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlConditions)">
          <source>The data to write.</source>
          <target state="translated">Datos que se van a escribir.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlConditions)">
          <source>Writes the <ph id="ph1">&amp;lt;</ph>saml:Conditions<ph id="ph2">&amp;gt;</ph> element.</source>
          <target state="translated">Escribe el elemento <ph id="ph1">&amp;lt;</ph>saml:Conditions<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlConditions)">
          <source><ph id="ph1">&lt;paramref name="conditions" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="conditions" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlConditions)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlConditions)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlDoNotCacheCondition)">
          <source>The XML writer with which to write the data.</source>
          <target state="translated">Sistema de escritura XML con el que se va a escribir los datos.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlDoNotCacheCondition)">
          <source>The data to write.</source>
          <target state="translated">Datos que se van a escribir.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlDoNotCacheCondition)">
          <source>Writes the <ph id="ph1">&amp;lt;</ph>saml:DoNotCacheCondition<ph id="ph2">&amp;gt;</ph> element.</source>
          <target state="translated">Escribe el elemento <ph id="ph1">&amp;lt;</ph>saml:Conditions<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlDoNotCacheCondition)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlDoNotCacheCondition)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlDoNotCacheCondition)">
          <source><ph id="ph1">&lt;paramref name="condition" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="condition" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlEvidence)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> with which to write the data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> con el que se va a escribir los datos.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlEvidence)">
          <source>The data to write.</source>
          <target state="translated">Datos que se van a escribir.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlEvidence)">
          <source>Writes the <ph id="ph1">&amp;lt;</ph>saml:Evidence<ph id="ph2">&amp;gt;</ph> element.</source>
          <target state="translated">Escribe el elemento <ph id="ph1">&amp;lt;</ph>saml:Evidence<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlEvidence)">
          <source><ph id="ph1">&lt;paramref name="evidence" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="evidence" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlEvidence)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlEvidence)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> with which to serialize the key identifier.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> con el que serializar el identificador de clave.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /&gt;</ph> that represents the key identifier to write.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /&gt;</ph> que representa el identificador de clave que se va a escribir.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source>Writes the Signing <ph id="ph1">&amp;lt;</ph>ds:KeyInfo<ph id="ph2">&amp;gt;</ph> element using the specified XML writer.</source>
          <target state="translated">Escribe el elemento de firma <ph id="ph1">&amp;lt;</ph>ds:KeyInfo<ph id="ph2">&amp;gt;</ph> con el escritor XML especificado.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source><ph id="ph1">&lt;paramref name="signingKeyIdentifier" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="signingKeyIdentifier" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source>The handler cannot serialize the key identifier specified by <ph id="ph1">&lt;paramref name="signingKeyIdentifier" /&gt;</ph>.</source>
          <target state="translated">El controlador no puede serializar el identificador de clave especificado por <ph id="ph1">&lt;paramref name="signingKeyIdentifier" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlStatement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> with which to write the data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> con el que se va a escribir los datos.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlStatement)">
          <source>The data to write.</source>
          <target state="translated">Datos que se van a escribir.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlStatement)">
          <source>Writes a SamlStatement.</source>
          <target state="translated">Escribe una SamlStatement.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlStatement)">
          <source>This method may write a <ph id="ph1">\&lt;</ph>saml:AttributeStatement&gt;, <ph id="ph2">\&lt;</ph>saml:AuthnStatement&gt;, or <ph id="ph3">\&lt;</ph>saml:AuthzDecisionStatement&gt; element.</source>
          <target state="translated">Este método se puede escribir un <ph id="ph1">\&lt;</ph>saml:AttributeStatement &gt;, <ph id="ph2">\&lt;</ph>saml:AuthnStatement &gt;, o <ph id="ph3">\&lt;</ph>saml:AuthzDecisionStatement &gt; elemento.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlStatement)">
          <source>To handle custom <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlStatement&gt;</ph> classes for writing a <ph id="ph2">\&lt;</ph>saml:Statement&gt; element, override this method.</source>
          <target state="translated">Para controlar personalizado <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SamlStatement&gt;</ph> clases para escribir en él un <ph id="ph2">\&lt;</ph>saml:Statement &gt; elemento, invalide este método.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlStatement)">
          <source><ph id="ph1">&lt;paramref name="statement" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="statement" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlStatement)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlStatement)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlSubject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> with which to write the data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> con el que se va a escribir los datos.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlSubject)">
          <source>The data to write.</source>
          <target state="translated">Datos que se van a escribir.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlSubject)">
          <source>Writes the <ph id="ph1">&amp;lt;</ph>saml:Subject<ph id="ph2">&amp;gt;</ph> element.</source>
          <target state="translated">Escribe el elemento <ph id="ph1">&amp;lt;</ph>saml:Subject<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlSubject)">
          <source><ph id="ph1">&lt;paramref name="subject" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="subject" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlSubject)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlSubject)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> with which to serialize the key identifier.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> con el que serializar el identificador de clave.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /&gt;</ph> that represents the key identifier to write.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /&gt;</ph> que representa el identificador de clave que se va a escribir.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source>Serializes the Subject <ph id="ph1">&amp;lt;</ph>ds:KeyInfo<ph id="ph2">&amp;gt;</ph> element using the specified XML writer.</source>
          <target state="translated">Serializa el elemento <ph id="ph1">&amp;lt;</ph>ds:KeyInfo<ph id="ph2">&amp;gt;</ph> de Subject con el escritor XML especificado.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source><ph id="ph1">&lt;paramref name="subjectSki" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="subjectSki" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> with which to write the data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> con el que se va a escribir los datos.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The token to write.</source>
          <target state="translated">Token que se va a escribir.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>Writes a Saml Token to the specified XML writer.</source>
          <target state="translated">Escribe token Saml en el sistema de escritura XML especificado.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> no es un objeto <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>