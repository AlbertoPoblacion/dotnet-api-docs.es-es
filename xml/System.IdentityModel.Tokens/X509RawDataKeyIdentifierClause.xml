<Type Name="X509RawDataKeyIdentifierClause" FullName="System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="100faea163d785bdef17a7dd24a764c675248c2f" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34314125" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class X509RawDataKeyIdentifierClause : System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509RawDataKeyIdentifierClause extends System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" />
  <TypeSignature Language="VB.NET" Value="Public Class X509RawDataKeyIdentifierClause&#xA;Inherits BinaryKeyIdentifierClause" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509RawDataKeyIdentifierClause : System::IdentityModel::Tokens::BinaryKeyIdentifierClause" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.BinaryKeyIdentifierClause</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa una cláusula de identificador clave que identifica un token de seguridad <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> mediante los datos sin procesar del certificado X.509.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause> no necesita ser utilizado, excepto cuando se crea un servicio de token de seguridad personalizado. Cuando un servicio de token de seguridad devuelve un token de seguridad, el token de seguridad emitido contiene las referencias a los tokens de seguridad adjuntas y no adjuntas. Las referencias adjuntas hacen referencia a los tokens de seguridad que están contenidos dentro del encabezado de seguridad de un mensaje SOAP y las referencias no adjuntas son tokens de seguridad que no están incluidos dentro del encabezado de seguridad de un mensaje SOAP. Normalmente, estas referencias afirman la autenticidad del token de seguridad emitido. Utilice la clase <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause> para hacer referencia a un token de seguridad <xref:System.IdentityModel.Tokens.X509SecurityToken> utilizando los datos sin procesar del certificado X.509. El método <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData%2A> devuelve los datos sin procesar.  
  
 Windows Communication Foundation (WCF) es compatible con los siguientes tipos de referencias del token de seguridad para <xref:System.IdentityModel.Tokens.X509SecurityToken> tokens de seguridad.  
  
-   <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>  
  
-   <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>  
  
-   <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>  
  
 <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509RawDataKeyIdentifierClause (byte[] certificateRawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] certificateRawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificateRawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509RawDataKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ certificateRawData);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificateRawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="certificateRawData">Una matriz de <see cref="T:System.Byte" /> que contiene los datos sin procesar de un certificado X.509.</param>
        <summary>Inicializa una instancia nueva de la clase <see cref="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" /> con los datos sin procesar del certificado X.509 especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateRawData" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="certificateRawData" /> tiene una longitud cero.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509RawDataKeyIdentifierClause (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509RawDataKeyIdentifierClause(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate">
          <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> que contiene el certificado X.509.</param>
        <summary>Inicializa una instancia nueva de la clase <see cref="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" /> con el certificado X.509 especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los datos sin procesar se obtienen para el parámetro `certificate` utilizando el método <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificate" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanCreateKey">
      <MemberSignature Language="C#" Value="public override bool CanCreateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCreateKey" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanCreateKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanCreateKey { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si una clave se puede crear a partir de los datos sin procesar del certificado X.509 o a partir de la matriz de bytes que se especifica en el constructor.</summary>
        <value>
          <see langword="true" /> en todos los casos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para crear la clave, llame al método <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateKey">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityKey CreateKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityKey CreateKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateKey () As SecurityKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityKey ^ CreateKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una clave a partir de los datos sin procesar del certificado X.509 o a partir de la matriz de bytes que se especifica en el constructor.</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" /> que contiene la(s) clave(s) asociadas al certificado X.509.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetX509RawData">
      <MemberSignature Language="C#" Value="public byte[] GetX509RawData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetX509RawData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetX509RawData () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetX509RawData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene los datos sin procesar asociados al certificado X.509.</summary>
        <returns>Una matriz de <see cref="T:System.Byte" /> que contiene los datos sin procesar asociados al certificado X.509.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Function Matches (certificate As X509Certificate2) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Matches(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate">
          <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> que contiene el certificado X.509 para compararlo.</param>
        <summary>Devuelve un valor que indica si el identificador clave para esta instancia es equivalente al certificado X.590 de clave especificado.</summary>
        <returns>
          <see langword="true" /> si <paramref name="certificate" /> tiene los datos sin procesar que coinciden con la instancia actual; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El método <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches%2A> llama al método <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A> para `certificate` y, a continuación, lo compara con la instancia actual.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificate" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve el objeto actual.</summary>
        <returns>
          <see cref="T:System.String" /> que representa al objeto actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El método <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString%2A> devuelve los datos sin procesar que están codificados en Base-64.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>