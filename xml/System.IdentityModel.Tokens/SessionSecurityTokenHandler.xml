<Type Name="SessionSecurityTokenHandler" FullName="System.IdentityModel.Tokens.SessionSecurityTokenHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="698670494d510916b922e88a119093c8c15bf740" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36480120" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SessionSecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SessionSecurityTokenHandler extends System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionSecurityTokenHandler&#xA;Inherits SecurityTokenHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionSecurityTokenHandler : System::IdentityModel::Tokens::SecurityTokenHandler" />
  <TypeSignature Language="F#" Value="type SessionSecurityTokenHandler = class&#xA;    inherit SecurityTokenHandler" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityTokenHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a151e-101">
        <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> que procesa los tokens de seguridad de tipo <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a151e-101">A <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> that processes security tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a151e-102">La <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> clase se serializa, deserializa y valida los tokens de sesión.</span><span class="sxs-lookup"><span data-stu-id="a151e-102">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class serializes, deserializes, and validates session tokens.</span></span> <span data-ttu-id="a151e-103">Los tokens de sesión son tokens de tipo <xref:System.IdentityModel.Tokens.SessionSecurityToken>.</span><span class="sxs-lookup"><span data-stu-id="a151e-103">Session tokens are tokens of type <xref:System.IdentityModel.Tokens.SessionSecurityToken>.</span></span> <span data-ttu-id="a151e-104">La <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> clase serializa los tokens a y desde el formato de la cookie.</span><span class="sxs-lookup"><span data-stu-id="a151e-104">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class serializes the tokens to and from cookie format.</span></span> <span data-ttu-id="a151e-105">De forma predeterminada, la clase serializa los tokens en WS-Secure Conversation Feb2005 o WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` elementos.</span><span class="sxs-lookup"><span data-stu-id="a151e-105">By default, the class serializes tokens into WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` elements.</span></span> <span data-ttu-id="a151e-106">Usan tokens de sesión el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> (WSFAM) y el <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) para almacenar información sobre una sesión, se trata principalmente la <xref:System.Security.Claims.ClaimsPrincipal> asociada con el usuario autenticado y las horas de inicio y caducidad de la sesión.</span><span class="sxs-lookup"><span data-stu-id="a151e-106">Session tokens are used by the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> (WSFAM) and the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) to store information about a session, this is primarily the <xref:System.Security.Claims.ClaimsPrincipal> associated with the authenticated user and the session start and expiration times.</span></span>  
  
 <span data-ttu-id="a151e-107">En escenarios pasivos, el <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> llama a la <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) de la canalización de autenticación para crear un token de sesión desde el <xref:System.Security.Claims.ClaimsPrincipal> que representa al usuario autenticado.</span><span class="sxs-lookup"><span data-stu-id="a151e-107">In passive scenarios, the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> calls into the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) from the authentication pipeline to create a session token from the <xref:System.Security.Claims.ClaimsPrincipal> that represents the authenticated user.</span></span> <span data-ttu-id="a151e-108">El SAM usa su configurado <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> para crear el token y serializarlo en una cookie (y para deserializar el token de una cookie en solicitudes posteriores).</span><span class="sxs-lookup"><span data-stu-id="a151e-108">The SAM uses its configured <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> to create the token and to serialize it into a cookie (and to deserialize the token from a cookie on subsequent requests).</span></span> <span data-ttu-id="a151e-109">El SAM utiliza una instancia de su configurado <xref:System.IdentityModel.Services.CookieHandler> clase volver a escribir la cookie en la respuesta HTTP.</span><span class="sxs-lookup"><span data-stu-id="a151e-109">The SAM uses an instance of its configured <xref:System.IdentityModel.Services.CookieHandler> class to write the cookie back to the HTTP Response.</span></span> <span data-ttu-id="a151e-110">Esta cookie, a continuación, se devuelve al cliente y en las solicitudes subsiguientes, el cliente puede presentar la cookie en lugar de realizar un recorrido de ida y vuelta en el proveedor de identidades para volver a obtener un token de seguridad.</span><span class="sxs-lookup"><span data-stu-id="a151e-110">This cookie is then returned to the client and on subsequent requests the client can present the cookie rather than making a round trip back to the identity provider to re-obtain a security token.</span></span> <span data-ttu-id="a151e-111">Para obtener más información acerca de cómo funcionan las sesiones con WIF, consulte [administración de sesiones de WIF](~/docs/framework/security/wif-session-management.md).</span><span class="sxs-lookup"><span data-stu-id="a151e-111">For more information about how sessions operate with WIF, see [WIF Session Management](~/docs/framework/security/wif-session-management.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a151e-112">El \<securityTokenHandlers > elemento de configuración se puede usar para especificar un <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> que tiene la responsabilidad de proteger las sesiones de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="a151e-112">The \<securityTokenHandlers> configuration element can be used to specify a <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that has the responsibility for securing the application’s sessions.</span></span> <span data-ttu-id="a151e-113">Los desarrolladores deben tener cuidado al cambiar esta opción de configuración, como un sistema mal configurado podría poner en peligro de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="a151e-113">Developers should use caution when changing this configuration setting, as a misconfigured system could result in application compromise.</span></span> <span data-ttu-id="a151e-114">Por ejemplo, especificar un hipervínculo derivado "http://msdn.microsoft.com/library/hh193426%28v=vs.110%29.aspx" \t "_blank" <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> y pasar una colección vacía de transformaciones (CookieTransform) a la base, daría lugar a la identidad de los usuarios que se va a serializar en una cookie que no se ha protegido.</span><span class="sxs-lookup"><span data-stu-id="a151e-114">For example, specifying a derived  HYPERLINK "http://msdn.microsoft.com/library/hh193426%28v=vs.110%29.aspx" \t "_blank" <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> and passing an empty Transforms (CookieTransform) collection to the base, would result in the users identity being serialized into a cookie that was not protected.</span></span> <span data-ttu-id="a151e-115">Esto podría permitir que un atacante modifique la identidad y, por tanto, cambie los privilegios de acceso.</span><span class="sxs-lookup"><span data-stu-id="a151e-115">This could allow an attacker to modify the identity and therefore change access privileges.</span></span>  
  
 <span data-ttu-id="a151e-116">Si el token de sesión está en modo de referencia, es decir, su <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> propiedad es `true`, la sesión de controlador de token sólo serializa las propiedades del token de sesión que son necesarios para volver a generar su clave en el <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>.</span><span class="sxs-lookup"><span data-stu-id="a151e-116">If the session token is in reference mode, that is, its <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `true`, the session token handler only serializes properties of the session token that are needed to regenerate its key in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>.</span></span> <span data-ttu-id="a151e-117">En el caso predeterminado, el <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> clase se usa para representar las claves de caché, y escribe el controlador de token el <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> y <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> propiedades del token.</span><span class="sxs-lookup"><span data-stu-id="a151e-117">In the default case, the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> class is used to represent cache keys, and the token handler writes the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> and <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> properties of the token.</span></span> <span data-ttu-id="a151e-118">Si el token de sesión no está en modo de referencia, es decir, el <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> propiedad es `false`, a continuación, además de las propiedades que se ha mencionado anteriormente, invoca el controlador de la <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> método en una matriz de bytes que se serializó el token y almacenes de la valor resultante en la cookie también.</span><span class="sxs-lookup"><span data-stu-id="a151e-118">If the session token is not in reference mode, that is, the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `false`, then, in addition to the properties mentioned previously, the handler invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method on a byte array serialized from the token and stores the resulting value in the cookie as well.</span></span> <span data-ttu-id="a151e-119">Para obtener más información acerca de cómo se serializa el token, consulte el <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="a151e-119">For more details about how the token is serialized, see the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="a151e-120">El <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> propiedad obtiene la lista de transformaciones que se aplican a la sesión de símbolo (token) en el <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a151e-120">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property gets the list of transforms that are applied to the session token in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method.</span></span> <span data-ttu-id="a151e-121">Todas las transformaciones que se derivan de la <xref:System.IdentityModel.CookieTransform> clase.</span><span class="sxs-lookup"><span data-stu-id="a151e-121">All transforms derive from the <xref:System.IdentityModel.CookieTransform> class.</span></span> <span data-ttu-id="a151e-122">En el caso predeterminado el <xref:System.IdentityModel.DeflateCookieTransform> y <xref:System.IdentityModel.ProtectedDataCookieTransform> se aplican.</span><span class="sxs-lookup"><span data-stu-id="a151e-122">In the default case the <xref:System.IdentityModel.DeflateCookieTransform> and the <xref:System.IdentityModel.ProtectedDataCookieTransform> are applied.</span></span> <span data-ttu-id="a151e-123">El <xref:System.IdentityModel.ProtectedDataCookieTransform> usa la API de protección de datos (DPAPI) para proteger el material de la cookie.</span><span class="sxs-lookup"><span data-stu-id="a151e-123">The <xref:System.IdentityModel.ProtectedDataCookieTransform> uses the Data Protection API (DPAPI) to protect the cookie material.</span></span> <span data-ttu-id="a151e-124">DPAPI utiliza una clave específica en el equipo en el que se está ejecutando en los algoritmos de su protección.</span><span class="sxs-lookup"><span data-stu-id="a151e-124">DPAPI uses a key that is specific to the computer on which it is running in its protection algorithms.</span></span> <span data-ttu-id="a151e-125">Por este motivo, el controlador de token de sesión predeterminada no es se puede usar en escenarios de granja de servidores Web porque, en estos escenarios, los tokens que se escribe en un equipo que deba leer en otro equipo.</span><span class="sxs-lookup"><span data-stu-id="a151e-125">For this reason, the default session token handler is not usable in Web farm scenarios because, in such scenarios, tokens written on one computer may need to be read on another computer.</span></span> <span data-ttu-id="a151e-126">Puede usar muchas estrategias para evitar este problema.</span><span class="sxs-lookup"><span data-stu-id="a151e-126">You can use many strategies to circumvent this issue.</span></span> <span data-ttu-id="a151e-127">Por ejemplo, se puede:</span><span class="sxs-lookup"><span data-stu-id="a151e-127">For example, you can:</span></span>  
  
-   <span data-ttu-id="a151e-128">Reemplace el valor predeterminado <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> con el <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>.</span><span class="sxs-lookup"><span data-stu-id="a151e-128">Replace the default <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> with the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>.</span></span> <span data-ttu-id="a151e-129">El <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> le permite especificar las claves de firma y cifrado en ASP.NET `<machineKey>` elemento en el archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="a151e-129">The <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> enables you to specify signing and encryption keys under the ASP.NET `<machineKey>` element in the configuration file.</span></span>  
  
-   <span data-ttu-id="a151e-130">Proporcionar un controlador para el <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> eventos en el archivo global.asax.cs y reemplace la sesión predeterminada del controlador con una instancia de token <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> que tiene una lista de transformaciones que incluye el <xref:System.IdentityModel.RsaSignatureCookieTransform> y <xref:System.IdentityModel.RsaEncryptionCookieTransform>.</span><span class="sxs-lookup"><span data-stu-id="a151e-130">Provide a handler for the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> event in the global.asax.cs file and replace the default session token handler with an instance of <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that has a list of transforms that includes the <xref:System.IdentityModel.RsaSignatureCookieTransform> and the <xref:System.IdentityModel.RsaEncryptionCookieTransform>.</span></span> <span data-ttu-id="a151e-131">Puede crear la nueva instancia mediante la invocación de uno de los constructores que toma una lista de transformaciones.</span><span class="sxs-lookup"><span data-stu-id="a151e-131">You can create the new instance by invoking one of the constructors that takes a list of transforms.</span></span>  
  
-   <span data-ttu-id="a151e-132">Derivar una transformación personalizada desde el <xref:System.IdentityModel.CookieTransform> clase base y usar el método anterior para incluirlo en la lista de transformaciones que se aplican.</span><span class="sxs-lookup"><span data-stu-id="a151e-132">Derive a custom transform from the <xref:System.IdentityModel.CookieTransform> base class and use the method above to include it in the list of transforms to be applied.</span></span>  
  
-   <span data-ttu-id="a151e-133">Derivar un controlador personalizado de token de <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> e implementar su propio mecanismo.</span><span class="sxs-lookup"><span data-stu-id="a151e-133">Derive a custom token handler from <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> and implement your own mechanism.</span></span>  
  
 <span data-ttu-id="a151e-134">Para obtener más información sobre el uso de las sesiones en escenarios de granja de servidores Web, consulte [WIF y granjas de servidores Web](~/docs/framework/security/wif-and-web-farms.md).</span><span class="sxs-lookup"><span data-stu-id="a151e-134">For more information about using sessions in Web farm scenarios, see [WIF and Web Farms](~/docs/framework/security/wif-and-web-farms.md).</span></span>  
  
 <span data-ttu-id="a151e-135">El <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> se incluye en la colección de controladores de token de forma predeterminada; sin embargo, puede reemplazarlo con un controlador de token de sesión personalizada si especifica primero una [ &lt;quitar&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md) elemento bajo el [ &lt;securityTokenHandlers&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) elemento que se va a quitar del controlador predeterminado de la colección y, a continuación, agregar el controlador de tokens personalizado utilizando el [ &lt;agregar&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) elemento.</span><span class="sxs-lookup"><span data-stu-id="a151e-135">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> is included in the default token handler collection; however, you can replace it with a custom session token handler by first specifying a [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md) element under the [&lt;securityTokenHandlers&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) element to remove the default handler from the collection and then adding your custom token handler using the [&lt;add&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) element.</span></span> <span data-ttu-id="a151e-136">De forma predeterminada, puede especificar la duración del token predeterminado mediante la inclusión de la [ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) elemento bajo el `<add>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a151e-136">By default, you can specify the default token lifetime by including the [&lt;sessionTokenRequirement&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element under the `<add>` element.</span></span> <span data-ttu-id="a151e-137">Puede diseñar un controlador personalizado de token a tomar elementos de configuración personalizada en el `<add>` elemento invalidando el <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> método para proporcionar la lógica para procesarlos.</span><span class="sxs-lookup"><span data-stu-id="a151e-137">You can design a custom token handler to take custom configuration elements under the `<add>` element by overriding the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> method to provide the logic to process them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a151e-138">El siguiente XML muestra cómo reemplazar el controlador de token predeterminado sesión seguridad en una colección de controladores de token con una instancia de la <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> clase en la configuración.</span><span class="sxs-lookup"><span data-stu-id="a151e-138">The following XML shows how to replace the default session security token handler in a token handler collection with an instance of the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> class in configuration.</span></span>  
  
```xml  
<securityTokenHandlers>  
  <remove type="System.IdentityModel.Tokens.SessionSecurityTokenHandler, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />  
  <add type="System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />  
</securityTokenHandlers>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" />
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />
    <altmember cref="T:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler" />
    <altmember cref="T:System.IdentityModel.CookieTransform" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a151e-139">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-139">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a151e-140">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> que usa las transformaciones de cookie predeterminadas y la duración del token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-140">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class that uses the default cookie transforms and token lifetime.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a151e-141">El <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> y <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> propiedades se inicializan con <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime> y <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms>.</span><span class="sxs-lookup"><span data-stu-id="a151e-141">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> properties are initialized to <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenHandler (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; transforms);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; transforms) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transforms As ReadOnlyCollection(Of CookieTransform))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenHandler(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ transforms);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityTokenHandler : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; -&gt; System.IdentityModel.Tokens.SessionSecurityTokenHandler" Usage="new System.IdentityModel.Tokens.SessionSecurityTokenHandler transforms" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transforms" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;" />
      </Parameters>
      <Docs>
        <param name="transforms">
          <span data-ttu-id="a151e-142">Transformaciones que se van a aplicar al codificar o descodificar la cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-142">The transforms to apply when encoding or decoding the cookie.</span>
          </span>
          <span data-ttu-id="a151e-143">Establece la propiedad <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-143">Sets the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a151e-144">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> que usa las transformaciones de cookie especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-144">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class that uses the specified cookie transforms.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a151e-145">La propiedad <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> se inicializa en <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime>.</span><span class="sxs-lookup"><span data-stu-id="a151e-145">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property is initialized to <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a151e-146">
            <paramref name="transforms" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-146">
              <paramref name="transforms" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenHandler (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; transforms, TimeSpan tokenLifetime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; transforms, valuetype System.TimeSpan tokenLifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transforms As ReadOnlyCollection(Of CookieTransform), tokenLifetime As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenHandler(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ transforms, TimeSpan tokenLifetime);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityTokenHandler : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; * TimeSpan -&gt; System.IdentityModel.Tokens.SessionSecurityTokenHandler" Usage="new System.IdentityModel.Tokens.SessionSecurityTokenHandler (transforms, tokenLifetime)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transforms" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;" />
        <Parameter Name="tokenLifetime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="transforms">
          <span data-ttu-id="a151e-147">Transformaciones que se van a aplicar al codificar o descodificar la cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-147">The transforms to apply when encoding or decoding the cookie.</span>
          </span>
          <span data-ttu-id="a151e-148">Establece la propiedad <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-148">Sets the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property.</span>
          </span>
        </param>
        <param name="tokenLifetime">
          <span data-ttu-id="a151e-149">Duración predeterminada para un token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-149">The default lifetime for a token.</span>
          </span>
          <span data-ttu-id="a151e-150">Establece la propiedad <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-150">Sets the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a151e-151">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> que usa las transformaciones de cookie especificadas y la duración del token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-151">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class that uses the specified cookie transforms and token lifetime.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a151e-152">
            <paramref name="transforms" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-152">
              <paramref name="transforms" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a151e-153">
            <paramref name="tokenLifetime" /> es menor o igual que <see cref="F:System.TimeSpan.Zero" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-153">
              <paramref name="tokenLifetime" /> is less than or equal to <see cref="F:System.TimeSpan.Zero" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyTransforms">
      <MemberSignature Language="C#" Value="protected virtual byte[] ApplyTransforms (byte[] cookie, bool outbound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] ApplyTransforms(unsigned int8[] cookie, bool outbound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ApplyTransforms (cookie As Byte(), outbound As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Byte&gt; ^ ApplyTransforms(cli::array &lt;System::Byte&gt; ^ cookie, bool outbound);" />
      <MemberSignature Language="F#" Value="abstract member ApplyTransforms : byte[] * bool -&gt; byte[]&#xA;override this.ApplyTransforms : byte[] * bool -&gt; byte[]" Usage="sessionSecurityTokenHandler.ApplyTransforms (cookie, outbound)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Byte[]" />
        <Parameter Name="outbound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cookie">
          <span data-ttu-id="a151e-154">Cookie que se transformará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-154">The cookie that will be transformed.</span>
          </span>
        </param>
        <param name="outbound">
          <span data-ttu-id="a151e-155">
            <see langword="true" /> si se debe codificar la cookie; <see langword="false" /> si se debe descodificar la cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-155">
              <see langword="true" /> if the cookie should be encoded; <see langword="false" /> if the cookie should be decoded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a151e-156">Aplique las transformaciones especificadas por la propiedad de <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> a la cookie especificada para codificarla o descodificarla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-156">Applies the transforms specified by the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property to either encode or decode the specified cookie.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a151e-157">Cookie codificada o descodificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-157">The encoded or decoded cookie.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a151e-158">Cuando se transforma la codificación de una cookie se aplican en el orden en que aparecen en la <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="a151e-158">When encoding a cookie transforms are applied in the order in which they appear in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property.</span></span> <span data-ttu-id="a151e-159">Cuando se descodifica una cookie, se aplican en orden inverso.</span><span class="sxs-lookup"><span data-stu-id="a151e-159">When decoding a cookie, they are applied in the reverse order.</span></span>  
  
 <span data-ttu-id="a151e-160">Se llama desde el <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> y <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> métodos para codificar y descodificar el material de la cookie.</span><span class="sxs-lookup"><span data-stu-id="a151e-160">Called from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to encode and decode the cookie material.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a151e-161">La propiedad <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-161">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public override bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.CanReadToken : System.Xml.XmlReader -&gt; bool" Usage="sessionSecurityTokenHandler.CanReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a151e-162">
            <see cref="T:System.Xml.XmlReader" /> sobre el <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-162">The <see cref="T:System.Xml.XmlReader" /> over the incoming <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span>
          </span>
          <span data-ttu-id="a151e-163">El lector debe colocarse en un elemento <see langword="&lt;wsc:SecurityContextToken&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-163">The reader should be positioned at a <see langword="&lt;wsc:SecurityContextToken&gt;" /> element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a151e-164">Devuelve un valor que indica si el lector está colocado en un elemento <see langword="&lt;wsc:SecurityContextToken&gt;" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-164">Returns a value that indicates whether the reader is positioned at a <see langword="&lt;wsc:SecurityContextToken&gt;" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a151e-165">
            <see langword="true" /> si el lector apunta a un elemento <see langword="&lt;wsc:SecurityContextToken&gt;" /> ; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-165">
              <see langword="true" /> if the reader points to a <see langword="&lt;wsc:SecurityContextToken&gt;" /> element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a151e-166">
            <paramref name="reader" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-166">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanValidateToken">
      <MemberSignature Language="C#" Value="public override bool CanValidateToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanValidateToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanValidateToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanValidateToken { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanValidateToken : bool" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a151e-167">Obtiene un valor que indica si este controlador admite la validación de tokens de tipo <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-167">Gets a value that indicates whether this handler supports validation of tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a151e-168">
            <see langword="true" /> si el controlador admite la validación de tokens de tipo <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-168">
              <see langword="true" /> if the handler supports validation of tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a151e-169">Siempre es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-169">Always <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public override bool CanWriteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWriteToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWriteToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWriteToken { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWriteToken : bool" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a151e-170">Obtiene un valor que indica si este controlador puede escribir tokens de tipo <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-170">Gets a value that indicates whether this handler can write tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a151e-171">
            <see langword="true" /> si el controlador puede escribir tokens de tipo <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-171">
              <see langword="true" /> if the handler can write tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a151e-172">Siempre es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-172">Always <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieElementName">
      <MemberSignature Language="C#" Value="public virtual string CookieElementName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookieElementName" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CookieElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CookieElementName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieElementName : string" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a151e-173">Obtiene el nombre del elemento de la cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-173">Gets the name for the cookie element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a151e-174">Nombre para mostrar de la cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-174">The name for the cookie element.</span>
          </span>
          <span data-ttu-id="a151e-175">El nombre del elemento predeterminado es "Cookie".</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-175">The default element name is "Cookie".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a151e-176">Esta propiedad se utiliza en el <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> y <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> métodos para determinar el elemento en la que el material codificado de token debe ser leer o escribir.</span><span class="sxs-lookup"><span data-stu-id="a151e-176">This property is used in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to determine the element under which the encoded token material should be written or read.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)" />
      </Docs>
    </Member>
    <Member MemberName="CookieNamespace">
      <MemberSignature Language="C#" Value="public virtual string CookieNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookieNamespace" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CookieNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CookieNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieNamespace : string" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a151e-177">Obtiene el espacio de nombres del elemento de la cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-177">Gets the namespace for the cookie element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a151e-178">Espacio de nombres del elemento de la cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-178">The namespace for the cookie element.</span>
          </span>
          <span data-ttu-id="a151e-179">El espacio de nombres predeterminado es "http://schemas.microsoft.com/ws/2006/05/security".</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-179">The default namespace is "http://schemas.microsoft.com/ws/2006/05/security".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a151e-180">Esta propiedad se utiliza en el <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> y <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> métodos para determinar el espacio de nombres del elemento en la que el material codificado de token debe ser leer o escribir.</span><span class="sxs-lookup"><span data-stu-id="a151e-180">This property is used in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to determine the namespace of the element under which the encoded token material should be written or read.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSessionSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SessionSecurityToken CreateSessionSecurityToken (System.Security.Claims.ClaimsPrincipal principal, string context, string endpointId, DateTime validFrom, DateTime validTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SessionSecurityToken CreateSessionSecurityToken(class System.Security.Claims.ClaimsPrincipal principal, string context, string endpointId, valuetype System.DateTime validFrom, valuetype System.DateTime validTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSessionSecurityToken (principal As ClaimsPrincipal, context As String, endpointId As String, validFrom As DateTime, validTo As DateTime) As SessionSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SessionSecurityToken ^ CreateSessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ principal, System::String ^ context, System::String ^ endpointId, DateTime validFrom, DateTime validTo);" />
      <MemberSignature Language="F#" Value="abstract member CreateSessionSecurityToken : System.Security.Claims.ClaimsPrincipal * string * string * DateTime * DateTime -&gt; System.IdentityModel.Tokens.SessionSecurityToken&#xA;override this.CreateSessionSecurityToken : System.Security.Claims.ClaimsPrincipal * string * string * DateTime * DateTime -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="sessionSecurityTokenHandler.CreateSessionSecurityToken (principal, context, endpointId, validFrom, validTo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SessionSecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="validFrom" Type="System.DateTime" />
        <Parameter Name="validTo" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="a151e-181">La entidad de seguridad de notificaciones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-181">The claims principal.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="a151e-182">Cadena de contexto definida por el autor de la llamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-182">A caller-defined context string.</span>
          </span>
        </param>
        <param name="endpointId">
          <span data-ttu-id="a151e-183">Identificador del extremo que es el ámbito del token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-183">The identifier of the endpoint to which the token is scoped.</span>
          </span>
        </param>
        <param name="validFrom">
          <span data-ttu-id="a151e-184">Instante de tiempo en el que el token es válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-184">The time instant at which the token becomes valid.</span>
          </span>
        </param>
        <param name="validTo">
          <span data-ttu-id="a151e-185">Instante de tiempo después del cual el token ya no es válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-185">The time instant after which the token is no longer valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a151e-186">Crea un objeto <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> basándose en la entidad de seguridad de notificaciones especificada y en el intervalo de tiempo durante el que el token es válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-186">Creates a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> based on the specified claims principal and time range during which the token is valid.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a151e-187">El token de seguridad de sesión creado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-187">The session security token that was created.</span>
          </span>
          <span data-ttu-id="a151e-188">Las propiedades del nuevo token de la sesión se establecen según los parámetros especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-188">The properties on the new session token are set according to the specified parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a151e-189">
            <paramref name="principal" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-189">
              <paramref name="principal" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a151e-190">La propiedad <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-190">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken CreateToken(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateToken (tokenDescriptor As SecurityTokenDescriptor) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ CreateToken(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberSignature Language="F#" Value="override this.CreateToken : System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="sessionSecurityTokenHandler.CreateToken tokenDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor">
          <span data-ttu-id="a151e-191">Descriptor de token a partir del que se va a crear el token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-191">The token descriptor from which to create the token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a151e-192">Crea un token de seguridad basándose en el descriptor de token especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-192">Creates a security token based on the specified token descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a151e-193">Token de seguridad que se creó.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-193">The security token that was created.</span>
          </span>
          <span data-ttu-id="a151e-194">Será una instancia de <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-194">This will be an instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a151e-195">Crea y devuelve un token de seguridad de sesión mediante el uso de las siguientes propiedades en el descriptor de token: <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=nameWithType>, y <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a151e-195">Creates and returns a session security token by using the following properties in the token descriptor: <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=nameWithType>, and <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a151e-196">Si el <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=nameWithType> se establece la propiedad `true` en la configuración del controlador de token especificada por el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> propiedad, se crea el contexto de arranque desde el <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=nameWithType> propiedad y se guarda en el token de sesión.</span><span class="sxs-lookup"><span data-stu-id="a151e-196">If the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=nameWithType> property is set `true` on the token handler configuration specified by the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property, the bootstrap context is created from the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=nameWithType> property and is saved in the session token.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a151e-197">
            <paramref name="tokenDescriptor" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-197">
              <paramref name="tokenDescriptor" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a151e-198">La propiedad <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-198">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultCookieTransforms">
      <MemberSignature Language="C#" Value="public static readonly System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; DefaultCookieTransforms;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; DefaultCookieTransforms" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultCookieTransforms As ReadOnlyCollection(Of CookieTransform) " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ DefaultCookieTransforms;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultCookieTransforms : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a151e-199">Una colección de solo lectura que contiene la lista de transformaciones predeterminadas que se aplican a las cookies, a <see cref="T:System.IdentityModel.DeflateCookieTransform" /> y a <see cref="T:System.IdentityModel.ProtectedDataCookieTransform" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-199">A read only collection that contains the list of default transforms to be applied to cookies, the <see cref="T:System.IdentityModel.DeflateCookieTransform" /> and the <see cref="T:System.IdentityModel.ProtectedDataCookieTransform" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultLifetime">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan DefaultLifetime;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan DefaultLifetime" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultLifetime As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan DefaultLifetime;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultLifetime : TimeSpan" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a151e-200">Una constante que especifica la duración predeterminada para las cookies, diez horas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-200">A constant that specifies the default lifetime for cookies, ten hours.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTokenLifetime">
      <MemberSignature Language="C#" Value="public static TimeSpan DefaultTokenLifetime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan DefaultTokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultTokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan DefaultTokenLifetime { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultTokenLifetime : TimeSpan" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a151e-201">Obtiene la duración predeterminada del token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-201">Gets the default token lifetime.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a151e-202">Duración predeterminada del token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-202">The default token lifetime.</span>
          </span>
          <span data-ttu-id="a151e-203">Siempre es <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-203">Always <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenTypeIdentifiers">
      <MemberSignature Language="C#" Value="public override string[] GetTokenTypeIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetTokenTypeIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTokenTypeIdentifiers () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetTokenTypeIdentifiers();" />
      <MemberSignature Language="F#" Value="override this.GetTokenTypeIdentifiers : unit -&gt; string[]" Usage="sessionSecurityTokenHandler.GetTokenTypeIdentifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a151e-204">Obtiene el URI de tipo de token para los tipos de token que este controlador puede procesar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-204">Gets the token type URIs for the token types that can be processed by this handler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a151e-205">URI de tipo de token para los tipos de token que este controlador puede procesar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-205">The token type identifier URIs for token types that can be processed by this handler.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a151e-206">Se admiten los siguiente URI de tipo: "http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation","http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct", y "http://schemas.xmlsoap.org/ws/2005/02/sc/sct".</span><span class="sxs-lookup"><span data-stu-id="a151e-206">The following type URIs are supported: "http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct", and "http://schemas.xmlsoap.org/ws/2005/02/sc/sct".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfigElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList customConfigElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadCustomConfiguration (customConfigElements As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadCustomConfiguration(System::Xml::XmlNodeList ^ customConfigElements);" />
      <MemberSignature Language="F#" Value="override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="sessionSecurityTokenHandler.LoadCustomConfiguration customConfigElements" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customConfigElements" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="customConfigElements">
          <span data-ttu-id="a151e-207">Elementos de configuración personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-207">The custom configuration elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a151e-208">Carga la configuración personalizado de XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-208">Loads custom configuration from XML.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a151e-209">Llamado por la infraestructura de configuración para inicializar el <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> instancia.</span><span class="sxs-lookup"><span data-stu-id="a151e-209">Called by the configuration infrastructure to initialize the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> instance.</span></span> <span data-ttu-id="a151e-210">Inicializa el <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> propiedad desde la `lifetime` atributo de la [ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) elemento en el archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="a151e-210">Initializes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property from the `lifetime` attribute of the [&lt;sessionTokenRequirement&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element in the configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a151e-211">
            <paramref name="customConfigElements" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-211">
              <paramref name="customConfigElements" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a151e-212">La configuración especificada por la <paramref name="customConfigElements" /> no es válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-212">The configuration specified by <paramref name="customConfigElements" /> is not valid.</span>
          </span>
          <span data-ttu-id="a151e-213">Por ejemplo, no contiene un elemento de <see langword="&lt;sessionTokenRequirement&gt;" />, contiene más de un elemento de <see langword="&lt;sessionTokenRequirement&gt;" />, un valor válido de <see cref="T:System.TimeSpan" /> no se puede leer en el atributo de <see langword="lifetime" /> o el atributo de <see langword="lifetime" /> especifica un valor inferior a <see cref="F:System.TimeSpan.Zero" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-213">For example, it does not contain a <see langword="&lt;sessionTokenRequirement&gt;" /> element, it contains more than one <see langword="&lt;sessionTokenRequirement&gt;" /> element, a valid <see cref="T:System.TimeSpan" /> value cannot be read from the <see langword="lifetime" /> attribute, or the <see langword="lifetime" /> attribute specifies a value that is less than <see cref="F:System.TimeSpan.Zero" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a151e-214">Lee <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-214">Reads a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a151e-215">La implementación predeterminada deserializa el token de WS-Secure Conversation Feb2005 o WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a151e-215">The default implementation deserializes the token from either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToken (reader As XmlReader) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.ReadToken : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="sessionSecurityTokenHandler.ReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a151e-216">
            <see cref="T:System.Xml.XmlReader" /> sobre el <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-216">The <see cref="T:System.Xml.XmlReader" /> over the incoming <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a151e-217">Lee <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> utilizando el lector de XML especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-217">Reads the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> using the specified XML reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a151e-218">El token de seguridad de la sesión que se leyó, una instancia de <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-218">The session security token that was read, an instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a151e-219">El lector debe colocarse en una conversación WS-Secure, Feb2005 o un WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a151e-219">The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 <span data-ttu-id="a151e-220">La implementación predeterminada invoca la <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> método con una resolución de tokens predeterminada.</span><span class="sxs-lookup"><span data-stu-id="a151e-220">The default implementation invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> method using a default token resolver.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a151e-221">
            <paramref name="reader" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-221">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
          <span data-ttu-id="a151e-222">El lector no está situado en un <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> o <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> no se puede leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-222">The reader is not positioned at a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> or the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> cannot be read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (byte[] token, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(unsigned int8[] token, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (token As Byte(), tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(cli::array &lt;System::Byte&gt; ^ token, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberSignature Language="F#" Value="override this.ReadToken : byte[] * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="sessionSecurityTokenHandler.ReadToken (token, tokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Byte[]" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="a151e-223">La secuencia de bytes que contiene el token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-223">The stream of bytes that contains the token.</span>
          </span>
        </param>
        <param name="tokenResolver">
          <span data-ttu-id="a151e-224">Solucionador del token que se usará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-224">The token resolver to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a151e-225">Lee el <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> de una secuencia de bytes mediante el solucionador de token especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-225">Reads the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> from a stream of bytes by using the specified token resolver.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a151e-226">
            <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> que se leyó.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-226">The <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> that was read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a151e-227">La implementación predeterminada crea un <xref:System.Xml.XmlDictionaryReader> sobre el token e invoca el <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="a151e-227">The default implementation creates an <xref:System.Xml.XmlDictionaryReader> over the token and invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToken (reader As XmlReader, tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberSignature Language="F#" Value="override this.ReadToken : System.Xml.XmlReader * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="sessionSecurityTokenHandler.ReadToken (reader, tokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a151e-228">
            <see cref="T:System.Xml.XmlReader" /> sobre el <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-228">The <see cref="T:System.Xml.XmlReader" /> over the incoming <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span>
          </span>
        </param>
        <param name="tokenResolver">
          <span data-ttu-id="a151e-229">
            <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> que puede usarse para resolver <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-229">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that can used to resolve the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a151e-230">Lee <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> mediante el lector XML especificado y la resolución de token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-230">Reads the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> using the specified XML reader and token resolver.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a151e-231">El token de seguridad de la sesión que se leyó, una instancia de <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-231">The session security token that was read, an instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a151e-232">El lector debe colocarse en una conversación WS-Secure, Feb2005 o un WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a151e-232">The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 <span data-ttu-id="a151e-233">Si el material de token se almacena en caché, se leen de la caché de tokens, que es una instancia de la <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> clase.</span><span class="sxs-lookup"><span data-stu-id="a151e-233">If the token material is cached, it is read from the token cache, which is an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> class.</span></span> <span data-ttu-id="a151e-234">En caso contrario, el material de token es de lectura desde el elemento secundario de la `<wsc:SecurityContextToken>` elemento especificado por el <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> y <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> propiedades y el <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> se invoca el método para descodificar la cookie.</span><span class="sxs-lookup"><span data-stu-id="a151e-234">Otherwise, the token material is read from the child element of the `<wsc:SecurityContextToken>` element that is specified by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> properties and the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method is invoked to decode the cookie.</span></span>  
  
 <span data-ttu-id="a151e-235">Para obtener más información acerca de cómo se serializan los tokens de sesión en un `<SecurityContextToken` elemento, vea el <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="a151e-235">For more information about how session tokens are serialized into a `<SecurityContextToken` element, see the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a151e-236">
            <paramref name="reader" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-236">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a151e-237">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-237">-or-</span>
          </span>
          <span data-ttu-id="a151e-238">
            <paramref name="tokenResolver" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-238">
              <paramref name="tokenResolver" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
          <span data-ttu-id="a151e-239">El lector no está situado en un <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> o <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> no se puede leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-239">The reader is not positioned at a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> or the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> cannot be read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTransforms">
      <MemberSignature Language="C#" Value="protected void SetTransforms (System.Collections.Generic.IEnumerable&lt;System.IdentityModel.CookieTransform&gt; transforms);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetTransforms(class System.Collections.Generic.IEnumerable`1&lt;class System.IdentityModel.CookieTransform&gt; transforms) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetTransforms (transforms As IEnumerable(Of CookieTransform))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetTransforms(System::Collections::Generic::IEnumerable&lt;System::IdentityModel::CookieTransform ^&gt; ^ transforms);" />
      <MemberSignature Language="F#" Value="member this.SetTransforms : seq&lt;System.IdentityModel.CookieTransform&gt; -&gt; unit" Usage="sessionSecurityTokenHandler.SetTransforms transforms" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transforms" Type="System.Collections.Generic.IEnumerable&lt;System.IdentityModel.CookieTransform&gt;" />
      </Parameters>
      <Docs>
        <param name="transforms">
          <span data-ttu-id="a151e-240">Transformaciones que se van a usar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-240">The transforms to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a151e-241">Establece las transformaciones que se aplicarán a las cookies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-241">Sets the transforms that will be applied to cookies.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a151e-242">Establece la lista de transformaciones devuelto por la <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="a151e-242">Sets the list of transforms returned by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property.</span></span> <span data-ttu-id="a151e-243">Las transformaciones se aplicará en el orden en que aparecen en la lista al codificar una cookie y en el orden inverso al descodificar una cookie.</span><span class="sxs-lookup"><span data-stu-id="a151e-243">Transforms will be applied in the order in which they appear in the list when encoding a cookie and in the reverse order when decoding a cookie.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="a151e-244">Si el `transforms` parámetro es `null`, se producirá una excepción desde el <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> método cuando se llama a codificar o descodificar la cookie.</span><span class="sxs-lookup"><span data-stu-id="a151e-244">If the `transforms` parameter is `null`, an exception will be thrown from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method when it is called to encode or decode the cookie.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenLifetime">
      <MemberSignature Language="C#" Value="public virtual TimeSpan TokenLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property TimeSpan TokenLifetime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TokenLifetime : TimeSpan with get, set" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a151e-245">Obtiene o establece la duración de token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-245">Gets or sets the token lifetime.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a151e-246">Duración del token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-246">The token lifetime.</span>
          </span>
          <span data-ttu-id="a151e-247">El valor predeterminado es <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-247">The default is <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a151e-248">De forma predeterminada, si la [ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) elemento se especifica en el archivo de configuración, el <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> propiedad se inicializa en el valor de la `lifetime` atributo por el <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a151e-248">By default, if the [&lt;sessionTokenRequirement&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element is specified in the configuration file, the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property is initialized to the value of the `lifetime` attribute by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a151e-249">Se produce un intento de establecer un el intervalo de tiempo menor o igual que cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-249">An attempt to set a time span that is less than or equal to zero occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TokenType">
      <MemberSignature Language="C#" Value="public override Type TokenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TokenType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ TokenType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TokenType : Type" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a151e-250">Obtiene el tipo de los tokens que este controlador procesa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-250">Gets the type of the tokens that this handler processes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a151e-251">
            <see cref="T:System.Type" /> de <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-251">The <see cref="T:System.Type" /> of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transforms">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; Transforms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; Transforms" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transforms As ReadOnlyCollection(Of CookieTransform)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ Transforms { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Transforms : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a151e-252">Obtiene las transformaciones que se aplicarán a la cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-252">Gets the transforms that will be applied to the cookie.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a151e-253">Lista de transformaciones que se aplicarán a la cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-253">The list of transforms that will be applied to the cookie.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a151e-254">Las transformaciones se aplican en el <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a151e-254">The transforms are applied in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSession">
      <MemberSignature Language="C#" Value="protected virtual void ValidateSession (System.IdentityModel.Tokens.SessionSecurityToken securityToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateSession(class System.IdentityModel.Tokens.SessionSecurityToken securityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateSession (securityToken As SessionSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateSession(System::IdentityModel::Tokens::SessionSecurityToken ^ securityToken);" />
      <MemberSignature Language="F#" Value="abstract member ValidateSession : System.IdentityModel.Tokens.SessionSecurityToken -&gt; unit&#xA;override this.ValidateSession : System.IdentityModel.Tokens.SessionSecurityToken -&gt; unit" Usage="sessionSecurityTokenHandler.ValidateSession securityToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
      </Parameters>
      <Docs>
        <param name="securityToken">
          <span data-ttu-id="a151e-255">Token que se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-255">The token to be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a151e-256">Determina si la sesión asociada al token especificado sigue siendo válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-256">Determines whether the session associated with the specified token is still valid.</span>
          </span>
          <span data-ttu-id="a151e-257">La validez se determina comprobando las propiedades <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> y <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> del token especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-257">Validity is determined by checking the <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> and <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> properties of the specified token.</span>
          </span>
          <span data-ttu-id="a151e-258">Se produce una excepción si la sesión ya no es válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-258">An exception is thrown if the session is no longer valid.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a151e-259">El token no es válido si su <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> propiedad está establecida en un valor que aparece más adelante que <xref:System.DateTime.UtcNow%2A>, o si su <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> propiedad está establecida en un valor que se produce anteriores a <xref:System.DateTime.UtcNow%2A>.</span><span class="sxs-lookup"><span data-stu-id="a151e-259">The token is not valid if its <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> property is set to a value that occurs later than <xref:System.DateTime.UtcNow%2A>, or if its <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> property is set to a value that occurs earlier than <xref:System.DateTime.UtcNow%2A>.</span></span>  
  
 <span data-ttu-id="a151e-260">Se llama desde el <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A> métodos para validar la sesión.</span><span class="sxs-lookup"><span data-stu-id="a151e-260">Called from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A> methods to validate the session.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a151e-261">
            <paramref name="securityToken" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-261">
              <paramref name="securityToken" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a151e-262">La propiedad <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-262">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenNotYetValidException">
          <span data-ttu-id="a151e-263">La propiedad <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> del token es posterior a <see cref="P:System.DateTime.UtcNow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-263">The <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> property of the token is later than <see cref="P:System.DateTime.UtcNow" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenExpiredException">
          <span data-ttu-id="a151e-264">La propiedad <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> del token es anterior a <see cref="P:System.DateTime.UtcNow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-264">The <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> property of the token is earlier than <see cref="P:System.DateTime.UtcNow" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a151e-265">Valida un token y devuelve sus notificaciones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-265">Validates a token and returns its claims.</span>
          </span>
        </summary>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateToken (token As SecurityToken) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="override this.ValidateToken : System.IdentityModel.Tokens.SecurityToken -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="sessionSecurityTokenHandler.ValidateToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="a151e-266">Token que se va a validar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-266">The token to be validated.</span>
          </span>
          <span data-ttu-id="a151e-267">Debe poder asignarse desde <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-267">Must be assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a151e-268">Valida el token especificado y devuelve sus notificaciones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-268">Validates the specified token and returns its claims.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a151e-269">Las identidades que se encuentran en el token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-269">The identities that are contained in the token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a151e-270">Invoca el <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A> método para validar el token.</span><span class="sxs-lookup"><span data-stu-id="a151e-270">Invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A> method to validate the token.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a151e-271">
            <paramref name="token" />
            <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-271">
              <paramref name="token" />
              <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a151e-272">
            <paramref name="token" /> no es asignable desde <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-272">
              <paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      </Docs>
    </Member>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SessionSecurityToken token, string endpointId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SessionSecurityToken token, string endpointId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateToken (token As SessionSecurityToken, endpointId As String) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SessionSecurityToken ^ token, System::String ^ endpointId);" />
      <MemberSignature Language="F#" Value="override this.ValidateToken : System.IdentityModel.Tokens.SessionSecurityToken * string -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="sessionSecurityTokenHandler.ValidateToken (token, endpointId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
        <Parameter Name="endpointId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="a151e-273">Token que se va a validar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-273">The token to be validated.</span>
          </span>
          <span data-ttu-id="a151e-274">Debe poder asignarse desde <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-274">Must be assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </param>
        <param name="endpointId">
          <span data-ttu-id="a151e-275">Identificador del extremo que es el ámbito del token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-275">The identifier of the endpoint to which the token is scoped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a151e-276">Valida el token de sesión especificado y devuelve sus notificaciones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-276">Validates the specified session token and returns its claims.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a151e-277">Las identidades que se encuentran en el token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-277">The identities that are contained in the token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a151e-278">Realiza una comprobación para asegurarse de que el token especificado tiene un ámbito para el identificador de punto de conexión especificado y, si es así, invoca el <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> método; de lo contrario, produce una <xref:System.IdentityModel.Tokens.SecurityTokenException>.</span><span class="sxs-lookup"><span data-stu-id="a151e-278">Performs a check to make sure that the specified token is scoped for the specified endpoint ID and, if so, invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method; otherwise, throws a <xref:System.IdentityModel.Tokens.SecurityTokenException>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a151e-279">Los tokens de sesión que tienen un <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> propiedad `null` o vacío están restringidas al ámbito global.</span><span class="sxs-lookup"><span data-stu-id="a151e-279">Session tokens that have an <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> property that is `null` or empty are considered to be globally scoped.</span></span> <span data-ttu-id="a151e-280">Esto presenta un riesgo de seguridad.</span><span class="sxs-lookup"><span data-stu-id="a151e-280">This presents a potential security risk.</span></span> <span data-ttu-id="a151e-281">Por este motivo debe asegurarse de que el <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> propiedad está establecida en los tokens de sesión.</span><span class="sxs-lookup"><span data-stu-id="a151e-281">For this reason you should make sure that the <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> property is set in your session tokens.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a151e-282">
            <paramref name="token" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-282">
              <paramref name="token" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a151e-283">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-283">-or-</span>
          </span>
          <span data-ttu-id="a151e-284">
            <paramref name="endpointId" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-284">
              <paramref name="endpointId" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a151e-285">
            <paramref name="token" /> no es asignable desde <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-285">
              <paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
          <span data-ttu-id="a151e-286">La propiedad <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" /> del token especificado no es <see langword="null" /> o no está vacía y su valor es diferente al que especifica el parámetro <paramref name="endpointId" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-286">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" /> property of the specified token is not <see langword="null" /> or empty and its value is different than that specified by the <paramref name="endpointId" /> parameter.</span>
          </span>
        </exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a151e-287">Serializa un token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-287">Serializes a token.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a151e-288">La implementación predeterminada serializa el token en WS-Secure Conversation Feb2005 o WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a151e-288">The default implementation serializes the token into either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public virtual byte[] WriteToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] WriteToken(class System.IdentityModel.Tokens.SessionSecurityToken sessionToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteToken (sessionToken As SessionSecurityToken) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ WriteToken(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionToken);" />
      <MemberSignature Language="F#" Value="override this.WriteToken : System.IdentityModel.Tokens.SessionSecurityToken -&gt; byte[]" Usage="sessionSecurityTokenHandler.WriteToken sessionToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
      </Parameters>
      <Docs>
        <param name="sessionToken">
          <span data-ttu-id="a151e-289">Token que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-289">The token to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a151e-290">Serializa el token especificado en una matriz de bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-290">Serializes the specified token into a byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a151e-291">Una matriz de bytes codificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-291">An encoded byte array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a151e-292">Serializa el token especificado mediante la creación y el sistema de escritura XML a través de un <xref:System.IO.MemoryStream> e invocar el <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="a151e-292">Serializes the specified token by creating and XML writer over a <xref:System.IO.MemoryStream> and invoking the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="a151e-293">Ver esa sobrecarga para obtener más detalles.</span><span class="sxs-lookup"><span data-stu-id="a151e-293">See that overload for more details.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a151e-294">
            <paramref name="sessiontoken" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-294">
              <paramref name="sessiontoken" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="override this.WriteToken : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="sessionSecurityTokenHandler.WriteToken (writer, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a151e-295">Sistema de escritura de XML para serializar el token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-295">The XML writer with which to serialize the token.</span>
          </span>
        </param>
        <param name="token">
          <span data-ttu-id="a151e-296">Token que se va a serializar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-296">The token to serialize.</span>
          </span>
          <span data-ttu-id="a151e-297">Instancia de <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-297">An instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a151e-298">Serializa el token especificado mediante el sistema de escritura especificado XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-298">Serializes the specified token by using the specified XML writer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a151e-299">La implementación predeterminada, el token especificado serializa como WS-Secure Conversation Feb2005 o WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` elemento, dependiendo del valor de la <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="a151e-299">The default implementation serializes the specified token as either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element, depending on the value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="a151e-300">El <xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=nameWithType> propiedad se serializa como el `Id` atributo.</span><span class="sxs-lookup"><span data-stu-id="a151e-300">The <xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=nameWithType> property is serialized as the `Id` attribute.</span></span> <span data-ttu-id="a151e-301">El <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> propiedad se serializa como el `<Identifier>` elemento secundario.</span><span class="sxs-lookup"><span data-stu-id="a151e-301">The <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> property is serialized as the `<Identifier>` child element.</span></span> <span data-ttu-id="a151e-302">Si no `null` el <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> propiedad se serializa como un `<Instance>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a151e-302">If not `null` the <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> property is serialized as an `<Instance>` element.</span></span> <span data-ttu-id="a151e-303">Por último, si la <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> propiedad es `false`, todo el token se serializa en una matriz binaria que se pasa a la <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> método que se desea codificar.</span><span class="sxs-lookup"><span data-stu-id="a151e-303">Finally, if the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `false`, the entire token is serialized into binary array which is passed to the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method to be encoded.</span></span> <span data-ttu-id="a151e-304">El token codificado, a continuación, se escribe como un valor codificado en base 64 para el elemento y espacio de nombres especificado por el <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> y <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="a151e-304">The encoded token is then written as a base64 encoded value to the element and namespace specified by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> properties.</span></span> <span data-ttu-id="a151e-305">Si el <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> propiedad es `true`, no se serializa el token.</span><span class="sxs-lookup"><span data-stu-id="a151e-305">If the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `true`, the token is not serialized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a151e-306">
            <paramref name="writer" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-306">
              <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a151e-307">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-307">-or-</span>
          </span>
          <span data-ttu-id="a151e-308">
            <paramref name="token" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-308">
              <paramref name="token" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a151e-309">
            <paramref name="token" /> no es asignable desde <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-309">
              <paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
          <span data-ttu-id="a151e-310">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-310">-or-</span>
          </span>
          <span data-ttu-id="a151e-311">La propiedad <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" /> del token especifica una versión de WS- Secure Conversation que no admite el controlador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a151e-311">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" /> of the token specifies a version of WS-Secure Conversation that is not supported by the handler.</span>
          </span>
        </exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      </Docs>
    </Member>
  </Members>
</Type>