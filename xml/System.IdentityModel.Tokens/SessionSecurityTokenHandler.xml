<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SessionSecurityTokenHandler.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c115a52489fd77750e537edfe5b3127ffc36e982.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c115a52489fd77750e537edfe5b3127ffc36e982</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /&gt;</ph> that processes security tokens of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /&gt;</ph> que procesa los tokens de seguridad de tipo <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> class serializes, deserializes, and validates session tokens.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> clase serializa, deserializa y valida los tokens de la sesión.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Session tokens are tokens of type <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>.</source>
          <target state="translated">Los tokens de sesión son tokens de tipo <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> class serializes the tokens to and from cookie format.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> clase serializa los tokens a y desde el formato de la cookie.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>By default, the class serializes tokens into WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> elements.</source>
          <target state="translated">De forma predeterminada, la clase serializa tokens en WS-Secure Conversation Feb2005 o WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> elementos.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Session tokens are used by the <ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule&gt;</ph> (WSFAM) and the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> (SAM) to store information about a session, this is primarily the <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> associated with the authenticated user and the session start and expiration times.</source>
          <target state="translated">Tokens de sesión son usados por la <ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule&gt;</ph> (WSFAM) y la <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> (SAM) para almacenar información sobre una sesión, se trata principalmente la <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> asociada al usuario autenticado y las horas de inicio y finalización de sesión.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>In passive scenarios, the <ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule&gt;</ph> calls into the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> (SAM) from the authentication pipeline to create a session token from the <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> that represents the authenticated user.</source>
          <target state="translated">En escenarios pasivos, el <ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule&gt;</ph> llama a la <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> (SAM) de la canalización de autenticación para crear un token de sesión desde el <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> que representa al usuario autenticado.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The SAM uses its configured <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> to create the token and to serialize it into a cookie (and to deserialize the token from a cookie on subsequent requests).</source>
          <target state="translated">El SAM usa su configurado <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> para crear el token y para serializar en una cookie (y para deserializar el token de una cookie de sesión en las solicitudes subsiguientes).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The SAM uses an instance of its configured <ph id="ph1">&lt;xref:System.IdentityModel.Services.CookieHandler&gt;</ph> class to write the cookie back to the HTTP Response.</source>
          <target state="translated">El SAM usa una instancia de su configurado <ph id="ph1">&lt;xref:System.IdentityModel.Services.CookieHandler&gt;</ph> clase volver a escribir la cookie en la respuesta HTTP.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>This cookie is then returned to the client and on subsequent requests the client can present the cookie rather than making a round trip back to the identity provider to re-obtain a security token.</source>
          <target state="translated">Esta cookie, a continuación, se devuelve al cliente y en las solicitudes subsiguientes puede presentar al cliente la cookie en lugar de realizar un de ida y vuelta hacia el proveedor de identidades para volver a obtener un token de seguridad.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For more information about how sessions operate with WIF, see <bpt id="p1">[</bpt>WIF Session Management<ept id="p1">](~/docs/framework/security/wif-session-management.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre el funcionan de las sesiones con WIF, consulte <bpt id="p1">[</bpt>administración de sesiones de WIF<ept id="p1">](~/docs/framework/security/wif-session-management.md)</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">\&lt;</ph>securityTokenHandlers&gt; configuration element can be used to specify a <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> that has the responsibility for securing the application’s sessions.</source>
          <target state="translated">El <ph id="ph1">\&lt;</ph>securityTokenHandlers &gt; elemento de configuración se puede usar para especificar un <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> que tiene la responsabilidad de proteger las sesiones de la aplicación.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Developers should use caution when changing this configuration setting, as a misconfigured system could result in application compromise.</source>
          <target state="translated">Los desarrolladores deben tener cuidado al cambiar esta opción de configuración, como un sistema mal configurado podría poner en peligro de aplicación.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For example, specifying a derived  HYPERLINK "<ph id="ph1">http://msdn.microsoft.com/library/hh193426%28v=vs.110%29.aspx</ph>" \t "_blank" <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> and passing an empty Transforms (CookieTransform) collection to the base, would result in the users identity being serialized into a cookie that was not protected.</source>
          <target state="translated">Por ejemplo, si se especifica un hipervínculo derivado "<ph id="ph1">http://msdn.microsoft.com/library/hh193426%28v=vs.110%29.aspx</ph>" \t "_blank" <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> y pasar una colección vacía de transformaciones (CookieTransform) a la base, daría lugar a la identidad de los usuarios que se está serializando en una cookie que no se ha protegido.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>This could allow an attacker to modify the identity and therefore change access privileges.</source>
          <target state="translated">Esto podría permitir que un atacante modifique la identidad y, por tanto, cambie los privilegios de acceso.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>If the session token is in reference mode, that is, its <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph2">`true`</ph>, the session token handler only serializes properties of the session token that are needed to regenerate its key in the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph>.</source>
          <target state="translated">Si el token de sesión está en modo de referencia, es decir, su <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> propiedad es <ph id="ph2">`true`</ph>, la sesión de controlador de token sólo serializa las propiedades del token de sesión que son necesarios para volver a generar su clave en el <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>In the default case, the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey&gt;</ph> class is used to represent cache keys, and the token handler writes the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType&gt;</ph> properties of the token.</source>
          <target state="translated">En el caso predeterminado, el <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey&gt;</ph> clase se usa para representar las claves de caché y el controlador de token escribe el <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType&gt;</ph> y <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType&gt;</ph> propiedades del token.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>If the session token is not in reference mode, that is, the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph2">`false`</ph>, then, in addition to the properties mentioned previously, the handler invokes the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method on a byte array serialized from the token and stores the resulting value in the cookie as well.</source>
          <target state="translated">Si el token de sesión no está en modo de referencia, es decir, el <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> propiedad es <ph id="ph2">`false`</ph>, a continuación, además de las propiedades que se ha mencionado anteriormente, se invoca el controlador de la <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> método en una matriz de bytes serializado desde el símbolo (token) y almacena el valor resultante en la cookie así.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For more details about how the token is serialized, see the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Para obtener más información acerca de cómo se serializa el token, consulte el <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> property gets the list of transforms that are applied to the session token in the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> propiedad obtiene la lista de transformaciones que se aplican a la sesión de símbolo (token) en el <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>All transforms derive from the <ph id="ph1">&lt;xref:System.IdentityModel.CookieTransform&gt;</ph> class.</source>
          <target state="translated">Todas las transformaciones que se derivan de la <ph id="ph1">&lt;xref:System.IdentityModel.CookieTransform&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>In the default case the <ph id="ph1">&lt;xref:System.IdentityModel.DeflateCookieTransform&gt;</ph> and the <ph id="ph2">&lt;xref:System.IdentityModel.ProtectedDataCookieTransform&gt;</ph> are applied.</source>
          <target state="translated">En el caso predeterminado el <ph id="ph1">&lt;xref:System.IdentityModel.DeflateCookieTransform&gt;</ph> y <ph id="ph2">&lt;xref:System.IdentityModel.ProtectedDataCookieTransform&gt;</ph> se aplican.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.ProtectedDataCookieTransform&gt;</ph> uses the Data Protection API (DPAPI) to protect the cookie material.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.IdentityModel.ProtectedDataCookieTransform&gt;</ph> usa la API de protección de datos (DPAPI) para proteger el material de cookie.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>DPAPI uses a key that is specific to the computer on which it is running in its protection algorithms.</source>
          <target state="translated">DPAPI utiliza una clave específica para el equipo en el que se está ejecutando en sus algoritmos de protección.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For this reason, the default session token handler is not usable in Web farm scenarios because, in such scenarios, tokens written on one computer may need to be read on another computer.</source>
          <target state="translated">Por este motivo, el controlador de token de sesión predeterminada no es utilizable en escenarios de granja de servidores Web porque, en estos escenarios, los tokens que se escriben en un equipo que necesite leerse en otro equipo.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>You can use many strategies to circumvent this issue.</source>
          <target state="translated">Puede usar muchas estrategias para evitar este problema.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For example, you can:</source>
          <target state="translated">Por ejemplo, se puede:</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Replace the default <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> with the <ph id="ph2">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph>.</source>
          <target state="translated">Reemplace el valor predeterminado <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> con el <ph id="ph2">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph> enables you to specify signing and encryption keys under the ASP.NET <ph id="ph2">`&lt;machineKey&gt;`</ph> element in the configuration file.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph> le permite especificar las claves de firma y cifrado en ASP.NET <ph id="ph2">`&lt;machineKey&gt;`</ph> elemento en el archivo de configuración.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Provide a handler for the <ph id="ph1">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType&gt;</ph> event in the global.asax.cs file and replace the default session token handler with an instance of <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> that has a list of transforms that includes the <ph id="ph3">&lt;xref:System.IdentityModel.RsaSignatureCookieTransform&gt;</ph> and the <ph id="ph4">&lt;xref:System.IdentityModel.RsaEncryptionCookieTransform&gt;</ph>.</source>
          <target state="translated">Proporciona un controlador para el <ph id="ph1">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType&gt;</ph> eventos en el archivo global.asax.cs y reemplazar la sesión predeterminada del controlador con una instancia de token <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> que tiene una lista de transformaciones que incluye el <ph id="ph3">&lt;xref:System.IdentityModel.RsaSignatureCookieTransform&gt;</ph> y <ph id="ph4">&lt;xref:System.IdentityModel.RsaEncryptionCookieTransform&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>You can create the new instance by invoking one of the constructors that takes a list of transforms.</source>
          <target state="translated">Puede crear la nueva instancia mediante la invocación de uno de los constructores que toma una lista de transformaciones.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Derive a custom transform from the <ph id="ph1">&lt;xref:System.IdentityModel.CookieTransform&gt;</ph> base class and use the method above to include it in the list of transforms to be applied.</source>
          <target state="translated">Derivar una transformación personalizada desde el <ph id="ph1">&lt;xref:System.IdentityModel.CookieTransform&gt;</ph> clase base y utilizar el método anterior para incluirlo en la lista de transformaciones que se deben aplicar.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Derive a custom token handler from <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> and implement your own mechanism.</source>
          <target state="translated">Derivar un controlador de token personalizado de <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> e implementar su propio mecanismo.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For more information about using sessions in Web farm scenarios, see <bpt id="p1">[</bpt>WIF and Web Farms<ept id="p1">](~/docs/framework/security/wif-and-web-farms.md)</ept>.</source>
          <target state="translated">Para obtener más información acerca del uso de sesiones en los escenarios de granja de servidores Web, consulte <bpt id="p1">[</bpt>WIF y granjas de servidores Web<ept id="p1">](~/docs/framework/security/wif-and-web-farms.md)</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> is included in the default token handler collection; however, you can replace it with a custom session token handler by first specifying a <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>remove<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md)</ept> element under the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>securityTokenHandlers<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md)</ept> element to remove the default handler from the collection and then adding your custom token handler using the <bpt id="p3">[</bpt><ph id="ph6">&amp;lt;</ph>add<ph id="ph7">&amp;gt;</ph><ept id="p3">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md)</ept> element.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> se incluye en la colección de controlador de token predeterminada; sin embargo, puede reemplazarlo con un controlador de token de sesión personalizada si especifica primero una <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>quitar<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md)</ept> elemento bajo el <bpt id="p2">[</bpt> <ph id="ph4">&amp;lt;</ph>securityTokenHandlers<ph id="ph5">&amp;gt;</ph> <ept id="p2">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md)</ept> elemento que se va a quitar el controlador predeterminado de la colección y, a continuación, agregar el controlador de token personalizado usando el <bpt id="p3">[</bpt> <ph id="ph6">&amp;lt;</ph>agregar<ph id="ph7">&amp;gt;</ph> <ept id="p3">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md)</ept> elemento.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>By default, you can specify the default token lifetime by including the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>sessionTokenRequirement<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> element under the <ph id="ph3">`&lt;add&gt;`</ph> element.</source>
          <target state="translated">De forma predeterminada, puede especificar la duración del token predeterminado mediante la inclusión de la <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>sessionTokenRequirement<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> elemento bajo el <ph id="ph3">`&lt;add&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>You can design a custom token handler to take custom configuration elements under the <ph id="ph1">`&lt;add&gt;`</ph> element by overriding the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A&gt;</ph> method to provide the logic to process them.</source>
          <target state="translated">Puede diseñar un controlador de token personalizado tomar elementos de configuración personalizados en el <ph id="ph1">`&lt;add&gt;`</ph> elemento invalidando el <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A&gt;</ph> método para proporcionar la lógica para procesarlos.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The following XML shows how to replace the default session security token handler in a token handler collection with an instance of the <ph id="ph1">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph> class in configuration.</source>
          <target state="translated">El siguiente XML muestra cómo reemplazar el controlador de token predeterminado sesión seguridad en una colección de controlador de token con una instancia de la <ph id="ph1">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph> clase en la configuración.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> class that uses the default cookie transforms and token lifetime.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> que usa las transformaciones de cookie predeterminadas y la duración del token.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> properties are initialized to <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime&gt;</ph> and <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> propiedades se inicializan en <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime&gt;</ph> y <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})">
          <source>The transforms to apply when encoding or decoding the cookie.</source>
          <target state="translated">Transformaciones que se van a aplicar al codificar o descodificar la cookie.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> property.</source>
          <target state="translated">Establece la propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> class that uses the specified cookie transforms.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> que usa las transformaciones de cookie especificadas.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> property is initialized to <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime&gt;</ph>.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> se inicializa en <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})">
          <source><ph id="ph1">&lt;paramref name="transforms" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transforms" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source>The transforms to apply when encoding or decoding the cookie.</source>
          <target state="translated">Transformaciones que se van a aplicar al codificar o descodificar la cookie.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> property.</source>
          <target state="translated">Establece la propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source>The default lifetime for a token.</source>
          <target state="translated">Duración predeterminada para un token.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" /&gt;</ph> property.</source>
          <target state="translated">Establece la propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> class that uses the specified cookie transforms and token lifetime.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> que usa las transformaciones de cookie especificadas y la duración del token.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="transforms" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transforms" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="tokenLifetime" /&gt;</ph> is less than or equal to <ph id="ph2">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenLifetime" /&gt;</ph> es menor o igual que <ph id="ph2">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>The cookie that will be transformed.</source>
          <target state="translated">Cookie que se transformará.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the cookie should be encoded; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the cookie should be decoded.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si se debe codificar la cookie; <ph id="ph2">&lt;see langword="false" /&gt;</ph> si se debe descodificar la cookie.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>Applies the transforms specified by the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> property to either encode or decode the specified cookie.</source>
          <target state="translated">Aplique las transformaciones especificadas por la propiedad de <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> a la cookie especificada para codificarla o descodificarla.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>The encoded or decoded cookie.</source>
          <target state="translated">Cookie codificada o descodificada.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>When encoding a cookie transforms are applied in the order in which they appear in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> property.</source>
          <target state="translated">Cuando se transforma la codificación de una cookie se aplican en el orden en que aparecen en la <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>When decoding a cookie, they are applied in the reverse order.</source>
          <target state="translated">Al descodificar una cookie, estas se aplican en el orden inverso.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>Called from the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph> methods to encode and decode the cookie material.</source>
          <target state="translated">Llamar desde el <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph> métodos para codificar y descodificar el material de cookie.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> over the incoming <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> sobre el <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph> de entrada.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>The reader should be positioned at a <ph id="ph1">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">El lector debe colocarse en un elemento <ph id="ph1">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>Returns a value that indicates whether the reader is positioned at a <ph id="ph1">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">Devuelve un valor que indica si el lector está colocado en un elemento <ph id="ph1">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader points to a <ph id="ph2">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph> element; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el lector apunta a un elemento <ph id="ph2">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph> ; en caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken">
          <source>Gets a value that indicates whether this handler supports validation of tokens of type <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Obtiene un valor que indica si este controlador admite la validación de tokens de tipo <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the handler supports validation of tokens of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el controlador admite la validación de tokens de tipo <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>; en caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Siempre es <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken">
          <source>Gets a value that indicates whether this handler can write tokens of type <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Obtiene un valor que indica si este controlador puede escribir tokens de tipo <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the handler can write tokens of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el controlador puede escribir tokens de tipo <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>; en caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Siempre es <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName">
          <source>Gets the name for the cookie element.</source>
          <target state="translated">Obtiene el nombre del elemento de la cookie.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName">
          <source>The name for the cookie element.</source>
          <target state="translated">Nombre para mostrar de la cookie.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName">
          <source>The default element name is "Cookie".</source>
          <target state="translated">El nombre de elemento predeterminado es "Cookie".</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName">
          <source>This property is used in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph> methods to determine the element under which the encoded token material should be written or read.</source>
          <target state="translated">Esta propiedad se utiliza en el <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph> métodos para determinar el elemento en la que se debe escribir o leer el material codificado de símbolo (token).</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace">
          <source>Gets the namespace for the cookie element.</source>
          <target state="translated">Obtiene el espacio de nombres del elemento de la cookie.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace">
          <source>The namespace for the cookie element.</source>
          <target state="translated">Espacio de nombres del elemento de la cookie.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace">
          <source>The default namespace is "<ph id="ph1">http://schemas.microsoft.com/ws/2006/05/security</ph>".</source>
          <target state="translated">El espacio de nombres predeterminado es "<ph id="ph1">http://schemas.microsoft.com/ws/2006/05/security</ph>".</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace">
          <source>This property is used in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph> methods to determine the namespace of the element under which the encoded token material should be written or read.</source>
          <target state="translated">Esta propiedad se utiliza en el <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph> métodos para determinar el espacio de nombres del elemento en la que se debe escribir o leer el material codificado de símbolo (token).</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The claims principal.</source>
          <target state="translated">La entidad de seguridad de notificaciones.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>A caller-defined context string.</source>
          <target state="translated">Cadena de contexto definida por el autor de la llamada.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The identifier of the endpoint to which the token is scoped.</source>
          <target state="translated">Identificador del extremo que es el ámbito del token.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The time instant at which the token becomes valid.</source>
          <target state="translated">Instante de tiempo en el que el token es válido.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The time instant after which the token is no longer valid.</source>
          <target state="translated">Instante de tiempo después del cual el token ya no es válido.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> based on the specified claims principal and time range during which the token is valid.</source>
          <target state="translated">Crea un objeto <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> basándose en la entidad de seguridad de notificaciones especificada y en el intervalo de tiempo durante el que el token es válido.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The session security token that was created.</source>
          <target state="translated">El token de seguridad de sesión creado.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The properties on the new session token are set according to the specified parameters.</source>
          <target state="translated">Las propiedades del nuevo token de la sesión se establecen según los parámetros especificados.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source><ph id="ph1">&lt;paramref name="principal" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="principal" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The token descriptor from which to create the token.</source>
          <target state="translated">Descriptor de token a partir del que se va a crear el token.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Creates a security token based on the specified token descriptor.</source>
          <target state="translated">Crea un token de seguridad basándose en el descriptor de token especificado.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The security token that was created.</source>
          <target state="translated">Token de seguridad que se creó.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>This will be an instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Será una instancia de <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Creates and returns a session security token by using the following properties in the token descriptor: <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Crea y devuelve un token de seguridad de la sesión mediante el uso de las siguientes propiedades del descriptor del token: <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=nameWithType&gt;</ph>, y <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>If the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=nameWithType&gt;</ph> property is set <ph id="ph2">`true`</ph> on the token handler configuration specified by the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A&gt;</ph> property, the bootstrap context is created from the <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=nameWithType&gt;</ph> property and is saved in the session token.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=nameWithType&gt;</ph> se establece la propiedad <ph id="ph2">`true`</ph> en la configuración del controlador de token especificada por el <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A&gt;</ph> propiedad, se crea el contexto de arranque desde el <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=nameWithType&gt;</ph> propiedad y se guarda en el token de sesión.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source><ph id="ph1">&lt;paramref name="tokenDescriptor" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenDescriptor" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms">
          <source>A read only collection that contains the list of default transforms to be applied to cookies, the <ph id="ph1">&lt;see cref="T:System.IdentityModel.DeflateCookieTransform" /&gt;</ph> and the <ph id="ph2">&lt;see cref="T:System.IdentityModel.ProtectedDataCookieTransform" /&gt;</ph>.</source>
          <target state="translated">Una colección de solo lectura que contiene la lista de transformaciones predeterminadas que se aplican a las cookies, a <ph id="ph1">&lt;see cref="T:System.IdentityModel.DeflateCookieTransform" /&gt;</ph> y a <ph id="ph2">&lt;see cref="T:System.IdentityModel.ProtectedDataCookieTransform" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime">
          <source>A constant that specifies the default lifetime for cookies, ten hours.</source>
          <target state="translated">Una constante que especifica la duración predeterminada para las cookies, diez horas.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime">
          <source>Gets the default token lifetime.</source>
          <target state="translated">Obtiene la duración predeterminada del token.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime">
          <source>The default token lifetime.</source>
          <target state="translated">Duración predeterminada del token.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime">
          <source>Always <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" /&gt;</ph>.</source>
          <target state="translated">Siempre es <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>Gets the token type URIs for the token types that can be processed by this handler.</source>
          <target state="translated">Obtiene el URI de tipo de token para los tipos de token que este controlador puede procesar.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>The token type identifier URIs for token types that can be processed by this handler.</source>
          <target state="translated">URI de tipo de token para los tipos de token que este controlador puede procesar.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>The following type URIs are supported: "<ph id="ph1">http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation</ph>", "<ph id="ph2">http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct</ph>", and "<ph id="ph3">http://schemas.xmlsoap.org/ws/2005/02/sc/sct</ph>".</source>
          <target state="translated">Se admiten los URI de tipo siguiente: "<ph id="ph1">http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation</ph>","<ph id="ph2">http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct</ph>", y "<ph id="ph3">http://schemas.xmlsoap.org/ws/2005/02/sc/sct</ph>".</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The custom configuration elements.</source>
          <target state="translated">Elementos de configuración personalizados.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Loads custom configuration from XML.</source>
          <target state="translated">Carga la configuración personalizado de XML.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Called by the configuration infrastructure to initialize the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> instance.</source>
          <target state="translated">Llamado por la infraestructura de configuración para inicializar la <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Initializes the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> property from the <ph id="ph2">`lifetime`</ph> attribute of the <bpt id="p1">[</bpt><ph id="ph3">&amp;lt;</ph>sessionTokenRequirement<ph id="ph4">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> element in the configuration file.</source>
          <target state="translated">Inicializa el <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> propiedad desde el <ph id="ph2">`lifetime`</ph> atributo de la <bpt id="p1">[</bpt> <ph id="ph3">&amp;lt;</ph>sessionTokenRequirement<ph id="ph4">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> elemento en el archivo de configuración.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source><ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The configuration specified by <ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> is not valid.</source>
          <target state="translated">La configuración especificada por la <ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> no es válida.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>For example, it does not contain a <ph id="ph1">&lt;see langword="&amp;lt;sessionTokenRequirement&amp;gt;" /&gt;</ph> element, it contains more than one <ph id="ph2">&lt;see langword="&amp;lt;sessionTokenRequirement&amp;gt;" /&gt;</ph> element, a valid <ph id="ph3">&lt;see cref="T:System.TimeSpan" /&gt;</ph> value cannot be read from the <ph id="ph4">&lt;see langword="lifetime" /&gt;</ph> attribute, or the <ph id="ph5">&lt;see langword="lifetime" /&gt;</ph> attribute specifies a value that is less than <ph id="ph6">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>.</source>
          <target state="translated">Por ejemplo, no contiene un elemento de <ph id="ph1">&lt;see langword="&amp;lt;sessionTokenRequirement&amp;gt;" /&gt;</ph>, contiene más de un elemento de <ph id="ph2">&lt;see langword="&amp;lt;sessionTokenRequirement&amp;gt;" /&gt;</ph>, un valor válido de <ph id="ph3">&lt;see cref="T:System.TimeSpan" /&gt;</ph> no se puede leer en el atributo de <ph id="ph4">&lt;see langword="lifetime" /&gt;</ph> o el atributo de <ph id="ph5">&lt;see langword="lifetime" /&gt;</ph> especifica un valor inferior a <ph id="ph6">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Reads a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Lee <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The default implementation deserializes the token from either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element.</source>
          <target state="translated">La implementación predeterminada deserializa el token de WS-Secure Conversation Feb2005 o de WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> over the incoming <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> sobre el <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph> de entrada.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>Reads the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> using the specified XML reader.</source>
          <target state="translated">Lee <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> utilizando el lector de XML especificado.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The session security token that was read, an instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">El token de seguridad de la sesión que se leyó, una instancia de <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element.</source>
          <target state="translated">El lector debe estar situado en una conversación WS-Secure, Feb2005 o un WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The default implementation invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType&gt;</ph> method using a default token resolver.</source>
          <target state="translated">La implementación predeterminada, se invoca el <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType&gt;</ph> método con una resolución de tokens de forma predeterminada.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The reader is not positioned at a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> or the <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> cannot be read.</source>
          <target state="translated">El lector no está situado en un <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> o <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> no se puede leer.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The stream of bytes that contains the token.</source>
          <target state="translated">La secuencia de bytes que contiene el token.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The token resolver to use.</source>
          <target state="translated">Solucionador del token que se usará.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>Reads the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> from a stream of bytes by using the specified token resolver.</source>
          <target state="translated">Lee el <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> de una secuencia de bytes mediante el solucionador de token especificado.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> that was read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> que se leyó.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The default implementation creates an <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> over the token and invokes the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">La implementación predeterminada crea un <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> sobre el token e invoca el <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> over the incoming <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> sobre el <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph> de entrada.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /&gt;</ph> that can used to resolve the <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /&gt;</ph> que puede usarse para resolver <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>Reads the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> using the specified XML reader and token resolver.</source>
          <target state="translated">Lee <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> mediante el lector XML especificado y la resolución de token.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The session security token that was read, an instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">El token de seguridad de la sesión que se leyó, una instancia de <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element.</source>
          <target state="translated">El lector debe estar situado en una conversación WS-Secure, Feb2005 o un WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>If the token material is cached, it is read from the token cache, which is an instance of the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph> class.</source>
          <target state="translated">Si el material de símbolo (token) se almacena en caché, se lee desde la caché de tokens, que es una instancia de la <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>Otherwise, the token material is read from the child element of the <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element that is specified by the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A&gt;</ph> properties and the <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method is invoked to decode the cookie.</source>
          <target state="translated">En caso contrario, el material de token se lee desde el elemento secundario de la <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> elemento especificado por la <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A&gt;</ph> y <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A&gt;</ph> propiedades y <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> método se invoca para descodificar la cookie.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>For more information about how session tokens are serialized into a <ph id="ph1">`&lt;SecurityContextToken`</ph> element, see the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Para obtener más información acerca de cómo se serializan los símbolos de sesión en un <ph id="ph1">`&lt;SecurityContextToken`</ph> elemento, vea la <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source><ph id="ph1">&lt;paramref name="tokenResolver" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenResolver" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The reader is not positioned at a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> or the <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> cannot be read.</source>
          <target state="translated">El lector no está situado en un <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> o <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> no se puede leer.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})">
          <source>The transforms to use.</source>
          <target state="translated">Transformaciones que se van a usar.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})">
          <source>Sets the transforms that will be applied to cookies.</source>
          <target state="translated">Establece las transformaciones que se aplicarán a las cookies.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})">
          <source>Sets the list of transforms returned by the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> property.</source>
          <target state="translated">Establece la lista de transformaciones devuelto por la <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})">
          <source>Transforms will be applied in the order in which they appear in the list when encoding a cookie and in the reverse order when decoding a cookie.</source>
          <target state="translated">Las transformaciones se aplicarán en el orden en que aparecen en la lista al codificar una cookie y en el orden inverso al descodificar una cookie.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})">
          <source>If the <ph id="ph1">`transforms`</ph> parameter is <ph id="ph2">`null`</ph>, an exception will be thrown from the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method when it is called to encode or decode the cookie.</source>
          <target state="translated">Si el <ph id="ph1">`transforms`</ph> parámetro es <ph id="ph2">`null`</ph>, se producirá una excepción desde el <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> método cuando se llama a codificar o descodificar la cookie.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime">
          <source>Gets or sets the token lifetime.</source>
          <target state="translated">Obtiene o establece la duración de token.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime">
          <source>The token lifetime.</source>
          <target state="translated">Duración del token.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime">
          <source>By default, if the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>sessionTokenRequirement<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> element is specified in the configuration file, the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> property is initialized to the value of the <ph id="ph4">`lifetime`</ph> attribute by the <ph id="ph5">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A&gt;</ph> method.</source>
          <target state="translated">De forma predeterminada, si la <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>sessionTokenRequirement<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> se especifica en el archivo de configuración, la <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> propiedad se inicializa en el valor de la <ph id="ph4">`lifetime`</ph> atributo por el <ph id="ph5">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime">
          <source>An attempt to set a time span that is less than or equal to zero occurs.</source>
          <target state="translated">Se produce un intento de establecer un el intervalo de tiempo menor o igual que cero.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType">
          <source>Gets the type of the tokens that this handler processes.</source>
          <target state="translated">Obtiene el tipo de los tokens que este controlador procesa.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms">
          <source>Gets the transforms that will be applied to the cookie.</source>
          <target state="translated">Obtiene las transformaciones que se aplicarán a la cookie.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms">
          <source>The list of transforms that will be applied to the cookie.</source>
          <target state="translated">Lista de transformaciones que se aplicarán a la cookie.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms">
          <source>The transforms are applied in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method.</source>
          <target state="translated">Las transformaciones se aplican en el <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The token to be checked.</source>
          <target state="translated">Token que se va a comprobar.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Determines whether the session associated with the specified token is still valid.</source>
          <target state="translated">Determina si la sesión asociada al token especificado sigue siendo válida.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Validity is determined by checking the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /&gt;</ph> properties of the specified token.</source>
          <target state="translated">La validez se determina comprobando las propiedades <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /&gt;</ph> y <ph id="ph2">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /&gt;</ph> del token especificado.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>An exception is thrown if the session is no longer valid.</source>
          <target state="translated">Se produce una excepción si la sesión ya no es válida.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The token is not valid if its <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A&gt;</ph> property is set to a value that occurs later than <ph id="ph2">&lt;xref:System.DateTime.UtcNow%2A&gt;</ph>, or if its <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A&gt;</ph> property is set to a value that occurs earlier than <ph id="ph4">&lt;xref:System.DateTime.UtcNow%2A&gt;</ph>.</source>
          <target state="translated">El token no es válido si su <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A&gt;</ph> propiedad está establecida en un valor que se produce después de <ph id="ph2">&lt;xref:System.DateTime.UtcNow%2A&gt;</ph>, o si su <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A&gt;</ph> propiedad está establecida en un valor que se produce anteriores a <ph id="ph4">&lt;xref:System.DateTime.UtcNow%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Called from the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A&gt;</ph> methods to validate the session.</source>
          <target state="translated">Llamar desde el <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A&gt;</ph> métodos para validar la sesión.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source><ph id="ph1">&lt;paramref name="securityToken" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="securityToken" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /&gt;</ph> property of the token is later than <ph id="ph2">&lt;see cref="P:System.DateTime.UtcNow" /&gt;</ph>.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /&gt;</ph> del token es posterior a <ph id="ph2">&lt;see cref="P:System.DateTime.UtcNow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /&gt;</ph> property of the token is earlier than <ph id="ph2">&lt;see cref="P:System.DateTime.UtcNow" /&gt;</ph>.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /&gt;</ph> del token es anterior a <ph id="ph2">&lt;see cref="P:System.DateTime.UtcNow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Validates a token and returns its claims.</source>
          <target state="translated">Valida un token y devuelve sus notificaciones.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The token to be validated.</source>
          <target state="translated">Token que se va a validar.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>Must be assignable from <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Debe poder asignarse desde <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>Validates the specified token and returns its claims.</source>
          <target state="translated">Valida el token especificado y devuelve sus notificaciones.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The identities that are contained in the token.</source>
          <target state="translated">Las identidades que se encuentran en el token.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>Invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A&gt;</ph> method to validate the token.</source>
          <target state="translated">Se invoca el <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A&gt;</ph> método para validar el token.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is not assignable from <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> no es asignable desde <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>The token to be validated.</source>
          <target state="translated">Token que se va a validar.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>Must be assignable from <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Debe poder asignarse desde <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>The identifier of the endpoint to which the token is scoped.</source>
          <target state="translated">Identificador del extremo que es el ámbito del token.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>Validates the specified session token and returns its claims.</source>
          <target state="translated">Valida el token de sesión especificado y devuelve sus notificaciones.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>The identities that are contained in the token.</source>
          <target state="translated">Las identidades que se encuentran en el token.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>Performs a check to make sure that the specified token is scoped for the specified endpoint ID and, if so, invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> method; otherwise, throws a <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenException&gt;</ph>.</source>
          <target state="translated">Realiza una comprobación para asegurarse de que el token especificado tiene un ámbito para el identificador de punto de conexión especificada y, si es así, se invoca el <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> método; de lo contrario, produce una <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>Session tokens that have an <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A&gt;</ph> property that is <ph id="ph2">`null`</ph> or empty are considered to be globally scoped.</source>
          <target state="translated">Símbolos de sesión que tienen un <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A&gt;</ph> propiedad <ph id="ph2">`null`</ph> o vacíos se consideran para ser un ámbito global.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>This presents a potential security risk.</source>
          <target state="translated">Esto presenta riesgos de seguridad.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>For this reason you should make sure that the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A&gt;</ph> property is set in your session tokens.</source>
          <target state="translated">Por este motivo debe asegurarse de que el <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A&gt;</ph> propiedad se establece en sus tokens de sesión.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source><ph id="ph1">&lt;paramref name="endpointId" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="endpointId" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is not assignable from <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> no es asignable desde <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" /&gt;</ph> property of the specified token is not <ph id="ph2">&lt;see langword="null" /&gt;</ph> or empty and its value is different than that specified by the <ph id="ph3">&lt;paramref name="endpointId" /&gt;</ph> parameter.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" /&gt;</ph> del token especificado no es <ph id="ph2">&lt;see langword="null" /&gt;</ph> o no está vacía y su valor es diferente al que especifica el parámetro <ph id="ph3">&lt;paramref name="endpointId" /&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Serializes a token.</source>
          <target state="translated">Serializa un token.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The default implementation serializes the token into either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element.</source>
          <target state="translated">La implementación predeterminada, el token serializa en un WS-Secure Conversation Feb2005 o WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The token to write.</source>
          <target state="translated">Token que se va a escribir.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Serializes the specified token into a byte array.</source>
          <target state="translated">Serializa el token especificado en una matriz de bytes.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>An encoded byte array.</source>
          <target state="translated">Una matriz de bytes codificada.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Serializes the specified token by creating and XML writer over a <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> and invoking the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Serializa el token especificado mediante la creación y el sistema de escritura XML sobre un <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> e invocando el <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>See that overload for more details.</source>
          <target state="translated">Consulte esa sobrecarga para obtener más detalles.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source><ph id="ph1">&lt;paramref name="sessiontoken" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sessiontoken" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The XML writer with which to serialize the token.</source>
          <target state="translated">Sistema de escritura de XML para serializar el token.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The token to serialize.</source>
          <target state="translated">Token que se va a serializar.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Instancia de <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>Serializes the specified token by using the specified XML writer.</source>
          <target state="translated">Serializa el token especificado mediante el sistema de escritura especificado XML.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The default implementation serializes the specified token as either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element, depending on the value of the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">La implementación predeterminada, el token especificado serializa como WS-Secure Conversation Feb2005 o WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> elemento, dependiendo del valor de la <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=nameWithType&gt;</ph> property is serialized as the <ph id="ph2">`Id`</ph> attribute.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=nameWithType&gt;</ph> propiedad se serializa como el <ph id="ph2">`Id`</ph> atributo.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType&gt;</ph> property is serialized as the <ph id="ph2">`&lt;Identifier&gt;`</ph> child element.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType&gt;</ph> propiedad se serializa como el <ph id="ph2">`&lt;Identifier&gt;`</ph> elemento secundario.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>If not <ph id="ph1">`null`</ph> the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType&gt;</ph> property is serialized as an <ph id="ph3">`&lt;Instance&gt;`</ph> element.</source>
          <target state="translated">Si no <ph id="ph1">`null`</ph> el <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType&gt;</ph> propiedad se serializa como un <ph id="ph3">`&lt;Instance&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>Finally, if the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph2">`false`</ph>, the entire token is serialized into binary array which is passed to the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method to be encoded.</source>
          <target state="translated">Por último, si la <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> propiedad es <ph id="ph2">`false`</ph>, todo el token se serializa en una matriz binaria que se pasa a la <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> método que se desea codificar.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The encoded token is then written as a base64 encoded value to the element and namespace specified by the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A&gt;</ph> properties.</source>
          <target state="translated">El token codificado, a continuación, se escribe como un valor codificado en base64 en el elemento y el espacio de nombres especificado por el <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A&gt;</ph> propiedades.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>If the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph2">`true`</ph>, the token is not serialized.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> propiedad es <ph id="ph2">`true`</ph>, no se serializa el token.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is not assignable from <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> no es asignable desde <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" /&gt;</ph> of the token specifies a version of WS-Secure Conversation that is not supported by the handler.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" /&gt;</ph> del token especifica una versión de WS- Secure Conversation que no admite el controlador.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>