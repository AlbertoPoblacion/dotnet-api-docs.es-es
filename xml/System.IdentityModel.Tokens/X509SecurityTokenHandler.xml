<Type Name="X509SecurityTokenHandler" FullName="System.IdentityModel.Tokens.X509SecurityTokenHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3c29e2ab32e649322ce0675079ccd31c61da6e69" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36556435" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class X509SecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509SecurityTokenHandler extends System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class X509SecurityTokenHandler&#xA;Inherits SecurityTokenHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509SecurityTokenHandler : System::IdentityModel::Tokens::SecurityTokenHandler" />
  <TypeSignature Language="F#" Value="type X509SecurityTokenHandler = class&#xA;    inherit SecurityTokenHandler" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityTokenHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="efece-101">Representa un controlador de tokens de seguridad que procesa los token de tipo <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="efece-101">Represents a security token handler that processes tokens of type <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span>
      </span>
      <span data-ttu-id="efece-102">De forma predeterminada, el controlador realizará la validación de la cadena de confianza de certificado X.509.</span>
      <span class="sxs-lookup">
        <span data-stu-id="efece-102">By default, the handler will perform chain-trust validation of the X.509 certificate.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="efece-103">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-103">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="efece-104">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /> con valores predeterminados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-104">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /> class with default values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efece-105">El <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A> propiedad está establecida en `false` y <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> validador se utiliza como el validador de certificado predeterminado.</span><span class="sxs-lookup"><span data-stu-id="efece-105">The <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A> property is set to `false` and the <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> validator is used as the default certificate validator.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenHandler (bool mapToWindows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool mapToWindows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mapToWindows As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenHandler(bool mapToWindows);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.X509SecurityTokenHandler : bool -&gt; System.IdentityModel.Tokens.X509SecurityTokenHandler" Usage="new System.IdentityModel.Tokens.X509SecurityTokenHandler mapToWindows" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mapToWindows" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mapToWindows">
          <span data-ttu-id="efece-106">
            <see langword="true" /> si el certificado debe estar asignado a una cuenta de Windows; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-106">
              <see langword="true" /> if the certificate should be mapped to a Windows account; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="efece-107">Establece la propiedad <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-107">Sets the <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efece-108">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /> con un valor que indica si el certificado se debe asignar a una cuenta de Windows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-108">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /> class by using a value that indicates whether the certificate should be mapped to a Windows account.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efece-109">El <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> validador se utiliza como el validador de certificado predeterminado.</span><span class="sxs-lookup"><span data-stu-id="efece-109">The <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> validator is used as the default certificate validator.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenHandler (System.IdentityModel.Selectors.X509CertificateValidator certificateValidator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Selectors.X509CertificateValidator certificateValidator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificateValidator As X509CertificateValidator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenHandler(System::IdentityModel::Selectors::X509CertificateValidator ^ certificateValidator);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.X509SecurityTokenHandler : System.IdentityModel.Selectors.X509CertificateValidator -&gt; System.IdentityModel.Tokens.X509SecurityTokenHandler" Usage="new System.IdentityModel.Tokens.X509SecurityTokenHandler certificateValidator" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificateValidator" Type="System.IdentityModel.Selectors.X509CertificateValidator" />
      </Parameters>
      <Docs>
        <param name="certificateValidator">
          <span data-ttu-id="efece-110">El validador de certificado para usar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-110">The certificate validator to use.</span>
          </span>
          <span data-ttu-id="efece-111">Establece la propiedad <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-111">Sets the <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efece-112">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /> usando el validador de certificados especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-112">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /> class by using the specified certificate validator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efece-113">La propiedad <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A> se establece en `false`.</span><span class="sxs-lookup"><span data-stu-id="efece-113">The <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A> property is set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenHandler (bool mapToWindows, System.IdentityModel.Selectors.X509CertificateValidator certificateValidator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool mapToWindows, class System.IdentityModel.Selectors.X509CertificateValidator certificateValidator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mapToWindows As Boolean, certificateValidator As X509CertificateValidator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenHandler(bool mapToWindows, System::IdentityModel::Selectors::X509CertificateValidator ^ certificateValidator);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.X509SecurityTokenHandler : bool * System.IdentityModel.Selectors.X509CertificateValidator -&gt; System.IdentityModel.Tokens.X509SecurityTokenHandler" Usage="new System.IdentityModel.Tokens.X509SecurityTokenHandler (mapToWindows, certificateValidator)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mapToWindows" Type="System.Boolean" />
        <Parameter Name="certificateValidator" Type="System.IdentityModel.Selectors.X509CertificateValidator" />
      </Parameters>
      <Docs>
        <param name="mapToWindows">
          <span data-ttu-id="efece-114">
            <see langword="true" /> si el certificado debe estar asignado a una cuenta de Windows; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-114">
              <see langword="true" /> if the certificate should be mapped to a Windows account; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="efece-115">Establece la propiedad <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-115">Sets the <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows" /> property.</span>
          </span>
        </param>
        <param name="certificateValidator">
          <span data-ttu-id="efece-116">El validador de certificado para usar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-116">The certificate validator to use.</span>
          </span>
          <span data-ttu-id="efece-117">Establece la propiedad <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-117">Sets the <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efece-118">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /> usando un valor que indica si el certificado se debe asignar a una cuenta de Windows y el validador de certificado especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-118">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /> class by using a value that indicates whether the certificate should be mapped to a Windows account and the specified certificate validator.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanReadKeyIdentifierClause (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.CanReadKeyIdentifierClause : System.Xml.XmlReader -&gt; bool" Usage="x509SecurityTokenHandler.CanReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="efece-119">Un lector XML colocado en el elemento inicial de la cláusula del identificador de clave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-119">An XML reader positioned at the start element of the key identifier clause.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efece-120">Devuelve un valor que indica si el lector especificado se refiere a un elemento <see langword="&lt;ds:X509Data&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-120">Returns a value that indicates whether the specified reader is referring to an <see langword="&lt;ds:X509Data&gt;" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efece-121">
            <see langword="true" /> si el lector está haciendo referencia a un elemento <see langword="&lt;ds:X509Data&gt;" /> ; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-121">
              <see langword="true" /> if the reader is referring to an <see langword="&lt;ds:X509Data&gt;" /> element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efece-122">
            <paramref name="reader" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-122">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public override bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.CanReadToken : System.Xml.XmlReader -&gt; bool" Usage="x509SecurityTokenHandler.CanReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="efece-123">Lector que señala al XML del token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-123">A reader pointing to the token XML.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efece-124">Devuelve un valor que indica si el lector señala a un token de seguridad de X.509 tal y como se define en la especificación WS-Security.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-124">Returns a value that indicates whether the reader points to an X.509 security token as defined in the WS-Security specification.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efece-125">
            <see langword="true" /> si el lector está apuntando a un token de seguridad X.509; si no, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-125">
              <see langword="true" /> if the reader is pointing to an X.509 security token; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efece-126">
            <paramref name="reader" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-126">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanValidateToken">
      <MemberSignature Language="C#" Value="public override bool CanValidateToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanValidateToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanValidateToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanValidateToken { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanValidateToken : bool" Usage="System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="efece-127">Obtiene un valor que indica si este controlador admite la validación de tokens de tipo <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-127">Gets a value that indicates whether this handler supports validation of tokens of type <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="efece-128">
            <see langword="true" /> si el controlador admite la validación de tokens de tipo <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-128">
              <see langword="true" /> if the handler supports validation of tokens of type <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="efece-129">Siempre es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-129">Always <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanWriteKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanWriteKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberSignature Language="F#" Value="override this.CanWriteKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="x509SecurityTokenHandler.CanWriteKeyIdentifierClause securityKeyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="securityKeyIdentifierClause">
          <span data-ttu-id="efece-130">Cláusula de identificador de clave que se va a serializar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-130">The key identifier clause to be serialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efece-131">Devuelve un valor que indica si este controlador puede serializar la cláusula de identificador de clave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-131">Returns a value that indicates whether the specified key identifier clause can be serialized by this handler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efece-132">
            <see langword="true" /> si se admite <paramref name="securityKeyIdentifierClause" /> y si la propiedad <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes" /> se establece en <see langword="true" />; si no, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-132">
              <see langword="true" /> if the <paramref name="securityKeyIdentifierClause" /> is supported and if the <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes" /> property is set to <see langword="true" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efece-133">Los tipos de cláusula de identificador de clave admitidos son:</span><span class="sxs-lookup"><span data-stu-id="efece-133">The supported key identifier clause types are:</span></span>  
  
1.  <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>  
  
2.  <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>  
  
3.  <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efece-134">
            <paramref name="securityKeyIdentifierClause" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-134">
              <paramref name="securityKeyIdentifierClause" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public override bool CanWriteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWriteToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWriteToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWriteToken { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWriteToken : bool" Usage="System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="efece-135">Obtiene un valor que indica si este controlador puede escribir tokens de tipo <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-135">Gets a value that indicates whether this handler can write tokens of type <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="efece-136">
            <see langword="true" /> si el controlador puede escribir tokens de tipo <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-136">
              <see langword="true" /> if the handler can write tokens of type <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="efece-137">Siempre es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-137">Always <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CertificateValidator">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Selectors.X509CertificateValidator CertificateValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Selectors.X509CertificateValidator CertificateValidator" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificateValidator As X509CertificateValidator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Selectors::X509CertificateValidator ^ CertificateValidator { System::IdentityModel::Selectors::X509CertificateValidator ^ get(); void set(System::IdentityModel::Selectors::X509CertificateValidator ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CertificateValidator : System.IdentityModel.Selectors.X509CertificateValidator with get, set" Usage="System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.X509CertificateValidator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="efece-138">Obtiene o establece la <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> que usa la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-138">Gets or sets the <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that is used by the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="efece-139">El validador de certificados X.509 usado por la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-139">The X.509 certificate validator that is used by the current instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenTypeIdentifiers">
      <MemberSignature Language="C#" Value="public override string[] GetTokenTypeIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetTokenTypeIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTokenTypeIdentifiers () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetTokenTypeIdentifiers();" />
      <MemberSignature Language="F#" Value="override this.GetTokenTypeIdentifiers : unit -&gt; string[]" Usage="x509SecurityTokenHandler.GetTokenTypeIdentifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="efece-140">Obtiene el tipo de token de seguridad X.509 definido en el perfil del token X.509 de WS-Security.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-140">Gets the X.509 security token type defined in the WS-Security X.509 Token Profile.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efece-141">URI el tipo de token X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-141">The X.509 token type URI.</span>
          </span>
          <span data-ttu-id="efece-142">De forma predeterminada, el valor de propiedad <see cref="P:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-142">By default, the value of the <see cref="P:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate" /> property.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfigElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList customConfigElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadCustomConfiguration (customConfigElements As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadCustomConfiguration(System::Xml::XmlNodeList ^ customConfigElements);" />
      <MemberSignature Language="F#" Value="override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="x509SecurityTokenHandler.LoadCustomConfiguration customConfigElements" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customConfigElements" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="customConfigElements">
          <span data-ttu-id="efece-143">Los elementos XML que contienen la configuración personalizada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-143">The XML elements that contain the custom configuration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efece-144">Carga la configuración personalizado de XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-144">Loads custom configuration from XML.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efece-145">
            <paramref name="customConfigElements" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-145">
              <paramref name="customConfigElements" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="efece-146">La configuración personalizada especificada no es válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-146">The custom configuration specified is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MapToWindows">
      <MemberSignature Language="C#" Value="public bool MapToWindows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MapToWindows" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows" />
      <MemberSignature Language="VB.NET" Value="Public Property MapToWindows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MapToWindows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MapToWindows : bool with get, set" Usage="System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="efece-147">Obtiene o establece un valor que indica si el token de validación se debe asignar a una cuenta de Windows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-147">Gets or sets a value that indicates whether the validating token should be mapped to a Windows account.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="efece-148">
            <see langword="true" /> si el token de validación se debe asignar a una cuenta de Windows; si no, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-148">
              <see langword="true" /> if the validating token should be mapped to a Windows account; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadKeyIdentifierClause (reader As XmlReader) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ ReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.ReadKeyIdentifierClause : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="x509SecurityTokenHandler.ReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="efece-149">El lector XML que hace referencia a la cláusula de identificador de clave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-149">The XML reader referencing the key identifier clause.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efece-150">Deserializa una cláusula de identificador de clave a la que hace referencia el lector XML especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-150">Deserializes a key identifier clause referenced by the specified XML reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efece-151">Cláusula de identificador de clave que se deserializó de XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-151">The key identifier clause that was deserialized from the XML.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efece-152">
            <paramref name="reader" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-152">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToken (reader As XmlReader) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.ReadToken : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="x509SecurityTokenHandler.ReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="efece-153">Un lector XML que apunta a un token de seguridad X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-153">An XML reader that is pointing to an X.509 security token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efece-154">Deserializa el token de seguridad X.509 al que hace referencia el lector XML especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-154">Deserializes the X.509 security token referenced by the specified XML reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efece-155">Token de seguridad deserializado de XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-155">The security token deserialized from the XML.</span>
          </span>
          <span data-ttu-id="efece-156">Instancia de <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-156">An instance of <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efece-157">
            <paramref name="reader" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-157">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="efece-158">
            <paramref name="reader" /> no apunta a un token de seguridad X.509 válido tal y como se define en el perfil del token X.509 de WS-Security.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-158">
              <paramref name="reader" /> is not pointing to a valid X.509 security token as defined in the WS-Security X.509 Token Profile.</span>
          </span>
          <span data-ttu-id="efece-159">O el elemento encodingType especificado es distinto de Base64 o de HexBinary.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-159">Or the encodingType specified is other than Base64 or HexBinary.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TokenType">
      <MemberSignature Language="C#" Value="public override Type TokenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TokenType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ TokenType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TokenType : Type" Usage="System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="efece-160">Obtiene el <see cref="T:System.Type" /> de los tokens que este controlador procesa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-160">Gets the <see cref="T:System.Type" /> of the tokens that this handler processes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="efece-161">De forma predeterminada, el tipo de clase de <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-161">By default, the type of the <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> class.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateToken (token As SecurityToken) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="override this.ValidateToken : System.IdentityModel.Tokens.SecurityToken -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="x509SecurityTokenHandler.ValidateToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="efece-162">Token que se va a validar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-162">The token to be validated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efece-163">Valida el token de seguridad X.509 especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-163">Validates the specified X.509 security token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efece-164">Identidades contenidas en el token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-164">The identities contained in the token.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="efece-165">
            <paramref name="token" /> no es asignable desde <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-165">
              <paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efece-166">
            <paramref name="token" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-166">
              <paramref name="token" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="efece-167">La propiedad <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-167">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="efece-168">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-168">-or-</span>
          </span>
          <span data-ttu-id="efece-169">No hay ningún registro de nombres de emisor (<see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" />) configurado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-169">There is no issuer name registry (<see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" />) configured.</span>
          </span>
          <span data-ttu-id="efece-170">(La propiedad <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry" /> de <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /> al que hace referencia la propiedad <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> es <see langword="null" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-170">(The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry" /> property of the <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /> referenced by the <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.)</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException">
          <span data-ttu-id="efece-171">El <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> actual no pudo validar el certificado en el token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-171">The current <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> was unable to validate the certificate in the token.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
          <span data-ttu-id="efece-172">El <see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /> actual devolvió <see langword="null" /> al intentar resolver el emisor del certificado en el token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-172">The current <see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /> returned <see langword="null" /> when trying to resolve the issuer of the certificate in the token.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteKeyIdentifierClause(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteKeyIdentifierClause(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberSignature Language="F#" Value="override this.WriteKeyIdentifierClause : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; unit" Usage="x509SecurityTokenHandler.WriteKeyIdentifierClause (writer, securityKeyIdentifierClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="efece-173">El sistema de escritura XML al que se debe serializar la cláusula del identificador de clave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-173">The XML writer to which the key identifier clause should be serialized.</span>
          </span>
        </param>
        <param name="securityKeyIdentifierClause">
          <span data-ttu-id="efece-174">Cláusula de identificador de clave que se va a serializar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-174">The key identifier clause to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efece-175">Serializa la cláusula clave de identificador de clave especificada en el sistema de escritura XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-175">Serializes the specified key identifier clause to the XML writer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efece-176">
            <paramref name="securityKeyIdentifierClause" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-176">
              <paramref name="securityKeyIdentifierClause" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="efece-177">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-177">-or-</span>
          </span>
          <span data-ttu-id="efece-178">
            <paramref name="writer" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-178">
              <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="efece-179">La propiedad <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes" /> es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-179">The <see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes" /> property is <see langword="false" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="override this.WriteToken : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="x509SecurityTokenHandler.WriteToken (writer, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="efece-180">Escritor de XML para el que debe serializarse el token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-180">The XML writer to which the token should be serialized.</span>
          </span>
        </param>
        <param name="token">
          <span data-ttu-id="efece-181">Token de seguridad X.509 que se va a serializar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-181">The X.509 security token to serialize.</span>
          </span>
          <span data-ttu-id="efece-182">Instancia de <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-182">An instance of <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efece-183">Escribe el token de seguridad de X.509 especificado en el escritor de XML especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-183">Serializes the specified X.509 security token to the specified XML writer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efece-184">
            <paramref name="token" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-184">
              <paramref name="token" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="efece-185">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-185">-or-</span>
          </span>
          <span data-ttu-id="efece-186">
            <paramref name="writer" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-186">
              <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="efece-187">
            <paramref name="token" /> no es asignable desde <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-187">
              <paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlDSigDefinedClauseTypes">
      <MemberSignature Language="C#" Value="public bool WriteXmlDSigDefinedClauseTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WriteXmlDSigDefinedClauseTypes" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteXmlDSigDefinedClauseTypes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WriteXmlDSigDefinedClauseTypes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WriteXmlDSigDefinedClauseTypes : bool with get, set" Usage="System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="efece-188">Obtiene o establece el valor que especifica si se prefieren los tipos de cláusula definidos por XmlDsig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-188">Gets or Sets the value that specifies whether XmlDsig-defined clause types are preferred.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="efece-189">
            <see langword="true" /> si prefieren los tipos de cláusula definidos por XmlDsig; si no, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-189">
              <see langword="true" /> if XmlDsig-defined clause types are preferred; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efece-190">Admite definidos por XmlDSig <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> tipos son:</span><span class="sxs-lookup"><span data-stu-id="efece-190">Supported XmlDSig-defined <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> types are:</span></span>  
  
-   <span data-ttu-id="efece-191">X509IssuerSerial</span><span class="sxs-lookup"><span data-stu-id="efece-191">X509IssuerSerial</span></span>  
  
-   <span data-ttu-id="efece-192">X509SKI</span><span class="sxs-lookup"><span data-stu-id="efece-192">X509SKI</span></span>  
  
-   <span data-ttu-id="efece-193">X509Certificate</span><span class="sxs-lookup"><span data-stu-id="efece-193">X509Certificate</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="X509NTAuthChainTrustValidator">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.X509NTAuthChainTrustValidator X509NTAuthChainTrustValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.X509NTAuthChainTrustValidator X509NTAuthChainTrustValidator" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property X509NTAuthChainTrustValidator As X509NTAuthChainTrustValidator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::X509NTAuthChainTrustValidator ^ X509NTAuthChainTrustValidator { System::IdentityModel::Tokens::X509NTAuthChainTrustValidator ^ get(); void set(System::IdentityModel::Tokens::X509NTAuthChainTrustValidator ^ value); };" />
      <MemberSignature Language="F#" Value="member this.X509NTAuthChainTrustValidator : System.IdentityModel.Tokens.X509NTAuthChainTrustValidator with get, set" Usage="System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.X509NTAuthChainTrustValidator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="efece-194">Obtiene o establece <see cref="T:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator" /> usado por la instancia actual durante la validación del certificado cuando el certificado X.509 de entrada se asigna a una cuenta de Windows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-194">Gets or sets the <see cref="T:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator" /> that is used by the current instance during certificate validation when the incoming X.509 certificate is mapped to a Windows account.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="efece-195">Un validador del certificado X.509 que validará un certificado X.509 especificado y comprobará si dicho certificado se puede asignar a una cuenta de Windows y si la cadena de certificados es de confianza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efece-195">An X.509 certificate validator that will validate a specified X.509 certificate and verify whether the certificate can be mapped to a Windows account and whether the certificate chain is trusted.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>