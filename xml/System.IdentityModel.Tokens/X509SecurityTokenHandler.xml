<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="X509SecurityTokenHandler.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51cca0fd931695323471e78da987e8220c7f747a3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1cca0fd931695323471e78da987e8220c7f747a3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.X509SecurityTokenHandler">
          <source>Represents a security token handler that processes tokens of type <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>.</source>
          <target state="translated">Representa un controlador de tokens de seguridad que procesa los token de tipo <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.X509SecurityTokenHandler">
          <source>By default, the handler will perform chain-trust validation of the X.509 certificate.</source>
          <target state="translated">De forma predeterminada, el controlador realizará la validación de la cadena de confianza de certificado X.509.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.X509SecurityTokenHandler">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /&gt;</ph> class with default values.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /&gt;</ph> con valores predeterminados.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph> and the <ph id="ph3">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A&gt;</ph> validator is used as the default certificate validator.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A&gt;</ph> propiedad está establecida en <ph id="ph2">`false`</ph> y <ph id="ph3">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A&gt;</ph> validador se utiliza como el validador de certificado predeterminado.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the certificate should be mapped to a Windows account; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el certificado debe estar asignado a una cuenta de Windows; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows" /&gt;</ph> property.</source>
          <target state="translated">Establece la propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /&gt;</ph> class by using a value that indicates whether the certificate should be mapped to a Windows account.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /&gt;</ph> con un valor que indica si el certificado se debe asignar a una cuenta de Windows.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A&gt;</ph> validator is used as the default certificate validator.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A&gt;</ph> validador se utiliza como el validador de certificado predeterminado.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>The certificate validator to use.</source>
          <target state="translated">El validador de certificado para usar.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator" /&gt;</ph> property.</source>
          <target state="translated">Establece la propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /&gt;</ph> class by using the specified certificate validator.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /&gt;</ph> usando el validador de certificados especificado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A&gt;</ph> se establece en <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the certificate should be mapped to a Windows account; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el certificado debe estar asignado a una cuenta de Windows; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows" /&gt;</ph> property.</source>
          <target state="translated">Establece la propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>The certificate validator to use.</source>
          <target state="translated">El validador de certificado para usar.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator" /&gt;</ph> property.</source>
          <target state="translated">Establece la propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /&gt;</ph> class by using a value that indicates whether the certificate should be mapped to a Windows account and the specified certificate validator.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /&gt;</ph> usando un valor que indica si el certificado se debe asignar a una cuenta de Windows y el validador de certificado especificado.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>An XML reader positioned at the start element of the key identifier clause.</source>
          <target state="translated">Un lector XML colocado en el elemento inicial de la cláusula del identificador de clave.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>Returns a value that indicates whether the specified reader is referring to an <ph id="ph1">&lt;see langword="&amp;lt;ds:X509Data&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">Devuelve un valor que indica si el lector especificado se refiere a un elemento <ph id="ph1">&lt;see langword="&amp;lt;ds:X509Data&amp;gt;" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader is referring to an <ph id="ph2">&lt;see langword="&amp;lt;ds:X509Data&amp;gt;" /&gt;</ph> element; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el lector está haciendo referencia a un elemento <ph id="ph2">&lt;see langword="&amp;lt;ds:X509Data&amp;gt;" /&gt;</ph> ; en caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>A reader pointing to the token XML.</source>
          <target state="translated">Lector que señala al XML del token.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>Returns a value that indicates whether the reader points to an X.509 security token as defined in the WS-Security specification.</source>
          <target state="translated">Devuelve un valor que indica si el lector señala a un token de seguridad de X.509 tal y como se define en la especificación WS-Security.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader is pointing to an X.509 security token; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el lector está apuntando a un token de seguridad X.509; si no, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken">
          <source>Gets a value that indicates whether this handler supports validation of tokens of type <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>.</source>
          <target state="translated">Obtiene un valor que indica si este controlador admite la validación de tokens de tipo <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the handler supports validation of tokens of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el controlador admite la validación de tokens de tipo <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>; en caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Siempre es <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>The key identifier clause to be serialized.</source>
          <target state="translated">Cláusula de identificador de clave que se va a serializar.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>Returns a value that indicates whether the specified key identifier clause can be serialized by this handler.</source>
          <target state="translated">Devuelve un valor que indica si este controlador puede serializar la cláusula de identificador de clave especificada.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="securityKeyIdentifierClause" /&gt;</ph> is supported and if the <ph id="ph3">&lt;see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes" /&gt;</ph> property is set to <ph id="ph4">&lt;see langword="true" /&gt;</ph>; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si se admite <ph id="ph2">&lt;paramref name="securityKeyIdentifierClause" /&gt;</ph> y si la propiedad <ph id="ph3">&lt;see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes" /&gt;</ph> se establece en <ph id="ph4">&lt;see langword="true" /&gt;</ph>; si no, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>The supported key identifier clause types are:</source>
          <target state="translated">Los tipos de cláusula de identificador de clave admitidos son:</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source><ph id="ph1">&lt;paramref name="securityKeyIdentifierClause" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="securityKeyIdentifierClause" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken">
          <source>Gets a value that indicates whether this handler can write tokens of type <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>.</source>
          <target state="translated">Obtiene un valor que indica si este controlador puede escribir tokens de tipo <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the handler can write tokens of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el controlador puede escribir tokens de tipo <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>; en caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Siempre es <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /&gt;</ph> that is used by the current instance.</source>
          <target state="translated">Obtiene o establece la <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /&gt;</ph> que usa la instancia actual.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator">
          <source>The X.509 certificate validator that is used by the current instance.</source>
          <target state="translated">El validador de certificados X.509 usado por la instancia actual.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>Gets the X.509 security token type defined in the WS-Security X.509 Token Profile.</source>
          <target state="translated">Obtiene el tipo de token de seguridad X.509 definido en el perfil del token X.509 de WS-Security.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>The X.509 token type URI.</source>
          <target state="translated">URI el tipo de token X.509.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>By default, the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate" /&gt;</ph> property.</source>
          <target state="translated">De forma predeterminada, el valor de propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The XML elements that contain the custom configuration.</source>
          <target state="translated">Los elementos XML que contienen la configuración personalizada.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Loads custom configuration from XML.</source>
          <target state="translated">Carga la configuración personalizado de XML.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source><ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The custom configuration specified is not valid.</source>
          <target state="translated">La configuración personalizada especificada no es válida.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows">
          <source>Gets or sets a value that indicates whether the validating token should be mapped to a Windows account.</source>
          <target state="translated">Obtiene o establece un valor que indica si el token de validación se debe asignar a una cuenta de Windows.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the validating token should be mapped to a Windows account; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el token de validación se debe asignar a una cuenta de Windows; si no, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>The XML reader referencing the key identifier clause.</source>
          <target state="translated">El lector XML que hace referencia a la cláusula de identificador de clave.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>Deserializes a key identifier clause referenced by the specified XML reader.</source>
          <target state="translated">Deserializa una cláusula de identificador de clave a la que hace referencia el lector XML especificado.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>The key identifier clause that was deserialized from the XML.</source>
          <target state="translated">Cláusula de identificador de clave que se deserializó de XML.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>An XML reader that is pointing to an X.509 security token.</source>
          <target state="translated">Un lector XML que apunta a un token de seguridad X.509.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>Deserializes the X.509 security token referenced by the specified XML reader.</source>
          <target state="translated">Deserializa el token de seguridad X.509 al que hace referencia el lector XML especificado.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The security token deserialized from the XML.</source>
          <target state="translated">Token de seguridad deserializado de XML.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>.</source>
          <target state="translated">Instancia de <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is not pointing to a valid X.509 security token as defined in the WS-Security X.509 Token Profile.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> no apunta a un token de seguridad X.509 válido tal y como se define en el perfil del token X.509 de WS-Security.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>Or the encodingType specified is other than Base64 or HexBinary.</source>
          <target state="translated">O el elemento encodingType especificado es distinto de Base64 o de HexBinary.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the tokens that this handler processes.</source>
          <target state="translated">Obtiene el <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> de los tokens que este controlador procesa.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType">
          <source>By default, the type of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph> class.</source>
          <target state="translated">De forma predeterminada, el tipo de clase de <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The token to be validated.</source>
          <target state="translated">Token que se va a validar.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>Validates the specified X.509 security token.</source>
          <target state="translated">Valida el token de seguridad X.509 especificado.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The identities contained in the token.</source>
          <target state="translated">Identidades contenidas en el token.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is not assignable from <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> no es asignable desde <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>There is no issuer name registry (<ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /&gt;</ph>) configured.</source>
          <target state="translated">No hay ningún registro de nombres de emisor (<ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /&gt;</ph>) configurado.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>(The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry" /&gt;</ph> property of the <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /&gt;</ph> referenced by the <ph id="ph3">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> property is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.)</source>
          <target state="translated">(La propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /&gt;</ph> al que hace referencia la propiedad <ph id="ph3">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> es <ph id="ph4">&lt;see langword="null" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /&gt;</ph> was unable to validate the certificate in the token.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /&gt;</ph> actual no pudo validar el certificado en el token.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /&gt;</ph> returned <ph id="ph2">&lt;see langword="null" /&gt;</ph> when trying to resolve the issuer of the certificate in the token.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /&gt;</ph> actual devolvió <ph id="ph2">&lt;see langword="null" /&gt;</ph> al intentar resolver el emisor del certificado en el token.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>The XML writer to which the key identifier clause should be serialized.</source>
          <target state="translated">El sistema de escritura XML al que se debe serializar la cláusula del identificador de clave.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>The key identifier clause to serialize.</source>
          <target state="translated">Cláusula de identificador de clave que se va a serializar.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>Serializes the specified key identifier clause to the XML writer.</source>
          <target state="translated">Serializa la cláusula clave de identificador de clave especificada en el sistema de escritura XML.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source><ph id="ph1">&lt;paramref name="securityKeyIdentifierClause" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="securityKeyIdentifierClause" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes" /&gt;</ph> es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The XML writer to which the token should be serialized.</source>
          <target state="translated">Escritor de XML para el que debe serializarse el token.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The X.509 security token to serialize.</source>
          <target state="translated">Token de seguridad X.509 que se va a serializar.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>.</source>
          <target state="translated">Instancia de <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>Serializes the specified X.509 security token to the specified XML writer.</source>
          <target state="translated">Escribe el token de seguridad de X.509 especificado en el escritor de XML especificado.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is not assignable from <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> no es asignable desde <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes">
          <source>Gets or Sets the value that specifies whether XmlDsig-defined clause types are preferred.</source>
          <target state="translated">Obtiene o establece el valor que especifica si se prefieren los tipos de cláusula definidos por XmlDsig.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if XmlDsig-defined clause types are preferred; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si prefieren los tipos de cláusula definidos por XmlDsig; si no, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes">
          <source>Supported XmlDSig-defined <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;</ph> types are:</source>
          <target state="translated">Admite definido XmlDSig <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;</ph> tipos son:</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes">
          <source>X509IssuerSerial</source>
          <target state="translated">X509IssuerSerial</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes">
          <source>X509SKI</source>
          <target state="translated">X509SKI</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes">
          <source>X509Certificate</source>
          <target state="translated">X509Certificate</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator" /&gt;</ph> that is used by the current instance during certificate validation when the incoming X.509 certificate is mapped to a Windows account.</source>
          <target state="translated">Obtiene o establece <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator" /&gt;</ph> usado por la instancia actual durante la validación del certificado cuando el certificado X.509 de entrada se asigna a una cuenta de Windows.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator">
          <source>An X.509 certificate validator that will validate a specified X.509 certificate and verify whether the certificate can be mapped to a Windows account and whether the certificate chain is trusted.</source>
          <target state="translated">Un validador del certificado X.509 que validará un certificado X.509 especificado y comprobará si dicho certificado se puede asignar a una cuenta de Windows y si la cadena de certificados es de confianza.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>