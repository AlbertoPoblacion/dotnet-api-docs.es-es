<Type Name="XmlWriterSettings" FullName="System.Xml.XmlWriterSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3708673d1f08f8830ae66ec198637d8f7a756e30" />
    <Meta Name="ms.sourcegitcommit" Value="b15b8cf0f6dbc1504057c88969d9ef4b790891fe" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="05/11/2018" />
    <Meta Name="ms.locfileid" Value="34061578" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlWriterSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlWriterSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlWriterSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlWriterSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriterSettings sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Especifica un conjunto de características compatibles en el objeto <see cref="T:System.Xml.XmlWriter" /> creado mediante el método <see cref="Overload:System.Xml.XmlWriter.Create" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Xml.XmlWriter.Create%2A> método es el mecanismo preferido para obtener <xref:System.Xml.XmlWriter> instancias. El <xref:System.Xml.XmlWriter.Create%2A> método usa la <xref:System.Xml.XmlWriterSettings> clase para especificar qué características se deben implementar en el <xref:System.Xml.XmlWriter> al objeto creado.  
  
> [!NOTE]
>  Si usas el <xref:System.Xml.XmlWriter> objeto con el <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> método, debe utilizar el <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> propiedad que se va a obtener un <xref:System.Xml.XmlWriterSettings> objeto con la configuración correcta. Con ello se garantiza que el objeto <xref:System.Xml.XmlWriter> creado tenga la configuración de resultados correcta.  
  
 La <xref:System.Xml.XmlWriterSettings> clase proporciona propiedades de ese formato de conformidad y la salida de datos de control.  
  
 Para obtener datos conformidad comprobaciones y correcciones automáticas, utilice estas propiedades:  
  
|Propiedad.|Especifica|Valor|Default|  
|--------------|---------------|-----------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|Si se debe comprobar que los caracteres se encuentran en el código XML válido de carácter conjunto, tal como se define por el W3C.|`true` o `false`|`true`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|Si se debe comprobar que el resultado es un documento de XML 1.0 correcto o un fragmento.|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (nivel de documento), <xref:System.Xml.ConformanceLevel.Fragment> (nivel de fragmento), o <xref:System.Xml.ConformanceLevel.Auto> (detección automática)|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (acuerdo de nivel de documento)|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|Si desea agregar etiquetas de cierre a todos los elementos sin cerrar cuando el <xref:System.Xml.XmlWriter.Close%2A> se llama al método.|`true` o `false`|`true`|  
  
 Para especificar el formato de salida, utilice estas propiedades:  
  
|Propiedad.|Especifica|Valor|Default|  
|--------------|---------------|-----------|-------------|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|Texto de codificación que se utilizará.|Valor de <xref:System.Text.Encoding?displayProperty=nameWithType>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|Si se debe aplicar sangría a elementos|`true` o `false`|`false` (no hay sangría)|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Cadena que se utilizará al aplicar sangrías de caracteres (se usa cuando <xref:System.Xml.XmlWriterSettings.Indent%2A> está establecido en `true`).|String|Dos espacios|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|Cadena de caracteres que se usará para los saltos de línea.|String|`\r\n` (retorno de carro, avance de línea)|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|Cómo controlar los caracteres de nueva línea.|<xref:System.Xml.NewLineHandling?displayProperty=nameWithType> valor: <xref:System.Xml.NewLineHandling.Entitize> (normalizar), <xref:System.Xml.NewLineHandling.Replace> (reemplazar), o <xref:System.Xml.NewLineHandling.None> (dejar sin cambios)|<xref:System.Xml.NewLineHandling.Replace> (reemplace con los caracteres especificados por <xref:System.Xml.XmlWriterSettings.NewLineChars%2A>)|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|Si se va a escribir atributos en líneas individuales (no tiene ningún efecto cuando <xref:System.Xml.XmlWriterSettings.Indent%2A> es `false`).|`true` o `false`|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|Si se escribe una declaración XML.|`true` o `false`|`false`|  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Xml.XmlWriter> que escribe en un archivo XML y se escribe cada atributo en una nueva línea.  
  
 [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]
 [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  
  
 El ejemplo produce el siguiente resultado:  
  
```xml  
<order  
  orderID="367A54"  
  date="2001-05-03">  
  <price>19.95</price>  
</order>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La siguiente tabla muestra los valores de propiedad iniciales para una instancia de <xref:System.Xml.XmlWriterSettings>.  
  
|Propiedad.|Valor inicial|  
|--------------|-------------------|  
|<xref:System.Xml.XmlWriterSettings.Async%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`.|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|`Encoding.UTF8`.|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Dos espacios.|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\r\n` (retorno de carro, nueva línea).|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace>.|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`.|  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Xml.XmlWriter> objeto que usa el carácter de tabulación para la sangría.  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Async">
      <MemberSignature Language="C#" Value="public bool Async { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Async" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Async" />
      <MemberSignature Language="VB.NET" Value="Public Property Async As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Async { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si los métodos asincrónicos <see cref="T:System.Xml.XmlWriter" /> se pueden utilizar en una instancia determinada de <see cref="T:System.Xml.XmlWriter" />.</summary>
        <value>
          <see langword="true" /> si se pueden usar métodos asincrónicos; si no, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Debe establecer este valor en `true` cuando se crea un nuevo <xref:System.Xml.XmlWriter> instancia si desea utilizar asincrónica <xref:System.Xml.XmlWriter> métodos en esa instancia. Después de la <xref:System.Xml.XmlWriter> se crea la instancia, el <xref:System.Xml.XmlWriterSettings.Async%2A> propiedad es de solo lectura. El valor predeterminado de esta propiedad es `false`.  
  
 Esta marca se pasa por alto por el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> de sobrecarga. Esto significa que si crea un nuevo <xref:System.Xml.XmlWriter> basado en un <xref:System.Xml.XmlWriter>, el comportamiento asincrónico depende de la entrada <xref:System.Xml.XmlWriter>, y no se puede utilizar el <xref:System.Xml.XmlWriterSettings.Async%2A> marca para cambiar el comportamiento asincrónico.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCharacters">
      <MemberSignature Language="C#" Value="public bool CheckCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.CheckCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCharacters { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el escritor XML debería comprobar y asegurarse de que todos los caracteres en el documento se ajustan a la sección "2.2 Characters" de la [recomendación del Consorcio W3C XML 1.0](https://www.w3.org/TR/REC-xml/#charsets).</summary>
        <value>
          Es <see langword="true" /> si se va a realizar la comprobación de caracteres; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Xml.XmlWriter> objeto admite la comprobación de caracteres, produce una excepción si los caracteres están fuera del intervalo de caracteres XML válidos especificados en la sección "2.2 caracteres" de la W3C [recomendación XML 1.0](https://www.w3.org/TR/REC-xml/#charsets).  
  
 Comprobación de caracteres no incluye la comprobación de caracteres no válidos en los nombres XML o la comprobación de que todos los nombres XML son válidos. Estas comprobaciones forman parte de la comprobación del cumplimiento y siempre se llevan a cabo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Xml.XmlWriterSettings Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlWriterSettings Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlWriterSettings ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una copia de la instancia de la clase <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
        <returns>Objeto <see cref="T:System.Xml.XmlWriterSettings" /> clonado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Clonado <xref:System.Xml.XmlWriterSettings> objeto puede modificarse sin que afecte a la configuración en el objeto original.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseOutput">
      <MemberSignature Language="C#" Value="public bool CloseOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CloseOutput" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.CloseOutput" />
      <MemberSignature Language="VB.NET" Value="Public Property CloseOutput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CloseOutput { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el objeto <see cref="T:System.Xml.XmlWriter" /> también debe cerrar la secuencia subyacente o <see cref="T:System.IO.TextWriter" /> cuando se llama al método <see cref="M:System.Xml.XmlWriter.Close" />.</summary>
        <value>
          Es <see langword="true" /> para cerrar también la secuencia subyacente o <see cref="T:System.IO.TextWriter" />; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta opción es útil cuando se desea escribir código XML en una secuencia y, a continuación, agregar información adicional al final de la secuencia después de la <xref:System.Xml.XmlWriter> ha terminado de escribir.  
  
 Esta propiedad solo se aplica a <xref:System.Xml.XmlWriter> instancias que den como resultado XML contenido en una secuencia o <xref:System.IO.TextWriter>; en caso contrario, este valor se omite.  
  
   
  
## Examples  
 En el ejemplo siguiente se escribe un fragmento XML en una secuencia de memoria.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConformanceLevel">
      <MemberSignature Language="C#" Value="public System.Xml.ConformanceLevel ConformanceLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ConformanceLevel ConformanceLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.ConformanceLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ConformanceLevel As ConformanceLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ConformanceLevel ConformanceLevel { System::Xml::ConformanceLevel get(); void set(System::Xml::ConformanceLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.ConformanceLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nivel de conformidad que el sistema de escritura XML comprueba para la salida XML.</summary>
        <value>Uno de los valores de enumeración que especifica el nivel de conformidad (documento, fragmento o detección automática). El valor predeterminado es <see cref="F:System.Xml.ConformanceLevel.Document" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType> propiedad configura el sistema de escritura XML para comprobar y garantizar que la secuencia que se está escribiendo cumple con un determinado conjunto de reglas. Los datos XML se pueden comprobar para ver que se ajusta a las reglas para un documento de XML 1.0 correcto o un fragmento del documento. La tabla siguiente describen los tres valores. El valor predeterminado es cumplimiento a nivel del documento.  
  
|Parámetro|Descripción|  
|-------------|-----------------|  
|<xref:System.Xml.ConformanceLevel.Document>|Se asegura de que la salida XML se ajusta a la [reglas para un documento de XML 1.0 correcto](https://www.w3.org/TR/REC-xml/#sec-well-formed) y pueden ser procesados por cualquier procesador compatible.<br /><br /> Las comprobaciones de conformidad de documento incluyen la mayoría de las comprobaciones de nivel de fragmento y asegúrese también de los siguientes:<br /><br /> -El elemento de nivel superior no tiene ningún nodo, aparte de la declaración XML, DTD, elemento, comentario, espacio en blanco o instrucción de procesamiento.<br />-Los datos XML tienen uno y solo un nodo de elemento de nivel superior.<br /><br /> El sistema de escritura XML no analiza la información de DTD que se escribe. El usuario es responsable de garantizar que la DTD es correcto.|  
|<xref:System.Xml.ConformanceLevel.Fragment>|Se asegura de que la salida XML se ajusta a la [reglas para un fragmento de documento de XML 1.0 correcto](https://www.w3.org/TR/REC-xml/#wf-entities).<br /><br /> Este valor acepta datos XML que tiene varios elementos raíz o nodos de texto en el nivel superior. Este nivel de comprobación garantiza que cualquier procesador pueda consumir la secuencia que se está leyendo como una entidad analizada externa de XML 1.0.<br /><br /> Información de DTD no está permitida en fragmentos de documento.|  
|<xref:System.Xml.ConformanceLevel.Auto>|Especifica que el sistema de escritura XML debe determinar el nivel de comprobación del cumplimiento en función de los datos entrantes. Esta configuración puede ser útil cuando no sabe si el XML generado será un documento XML bien formado o un fragmento.<br /><br /> La comprobación del cumplimiento en documentos se aplica en los siguientes casos:<br /><br /> -If el <xref:System.Xml.XmlWriter.WriteStartDocument%2A> se llama al método.<br />-Si se escribe información de DTD.<br /><br /> Comprobación del cumplimiento en fragmentos se aplica si los datos XML contienen uno de los siguientes:<br /><br /> : Nodo texto, CDATA o EntityReference en el nivel raíz.<br />-Más de un elemento en el nivel raíz.<br />-Ningún elemento en el nivel raíz.<br /><br /> Se inicia una <xref:System.Xml.XmlException> si hay un conflicto como, por ejemplo, cuando se intenta escribir un nodo de texto y una DTD en el nivel raíz.<br /><br /> Si está ajustando otro <xref:System.Xml.XmlWriter> objeto, el objeto externo no realiza ninguna comprobación de conformidad adicional; Esto se deja al objeto subyacente.|  
  
 Si el sistema de escritura XML detecta cualquier información que infrinja el nivel de conformidad especificado, produce una excepción. En algunos casos, el escritor XML corrige automáticamente el error de conformidad. Por ejemplo, el escritor cierra un atributo abierto sin producir una excepción. En la tabla siguiente se muestra cómo varias infracciones de conformidad se administran en cada configuración.  
  
|Condición|<xref:System.Xml.ConformanceLevel.Document>|<xref:System.Xml.ConformanceLevel.Fragment>|<xref:System.Xml.ConformanceLevel.Auto>|  
|---------------|---------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|  
|Se encontró información de DTD.|No es una infracción de esta configuración. Sin embargo, el sistema de escritura XML no comprueba la DTD; el usuario debe asegurarse de que la DTD es correcto.|<xref:System.Xml.XmlException> se produce.|Comprobación del cumplimiento en documentos se aplica.|  
|Se llama a <xref:System.Xml.XmlWriter.WriteStartDocument%2A>.|No se considera una infracción de esta configuración.|<xref:System.Xml.XmlException> se produce.|Comprobación del cumplimiento en documentos se aplica.|  
|Se llama a <xref:System.Xml.XmlWriter.WriteStartDocument%2A> varias veces.|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|  
|Un valor de texto aparece en el nivel superior (no será inferior a un nodo de elemento o atributo).|<xref:System.Xml.XmlException> se produce.|No se considera una infracción.|Se aplica la comprobación del cumplimiento en fragmentos.|  
|Varios elementos o ningún elemento aparece en el nivel superior.|<xref:System.Xml.XmlException> se produce.|No se considera una infracción.|Se aplica la comprobación del cumplimiento en fragmentos.|  
|Elemento de nivel superior es el espacio en blanco.|No se considera una infracción.|No se considera una infracción.|No se considera una infracción.|  
|<xref:System.Xml.XmlWriter.WriteEndAttribute%2A> no se llama para finalizar un nodo de atributo.|Corregidos por el sistema de escritura XML.|Corregidos por el sistema de escritura XML.|Corregidos por el sistema de escritura XML.|  
|El escritor XML está en un estado incorrecto anidado (por ejemplo, un <xref:System.Xml.XmlWriter.WriteStartElement%2A> llamada es seguida por un <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>).|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|  
|Elemento de nivel superior es un atributo.|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|  
|Se encuentran varios nodos de texto contiguos.|No se considera una infracción, pero es responsabilidad del usuario concatenar los nodos de texto.|No se considera una infracción, pero es responsabilidad del usuario concatenar los nodos de texto.|No se considera una infracción, pero es responsabilidad del usuario concatenar los nodos de texto.|  
|Se declara dos veces el mismo prefijo de espacio de nombres en un elemento.|El escritor XML genera un nuevo prefijo para el espacio de nombres de segundo.|El escritor XML genera un nuevo prefijo para el espacio de nombres de segundo.|El escritor XML genera un nuevo prefijo para el espacio de nombres de segundo.|  
|<xref:System.Xml.XmlWriter.WriteStartElement%2A> Especifica un prefijo y un espacio de nombres que no está declarado dentro del ámbito, o el prefijo se asocia con un espacio de nombres diferente.|El sistema de escritura XML escribe el nodo de espacio de nombres necesaria.|El sistema de escritura XML escribe el nodo de espacio de nombres necesaria.|El sistema de escritura XML escribe el nodo de espacio de nombres necesaria.|  
|<xref:System.Xml.XmlWriter.WriteStartAttribute%2A> Especifica un prefijo y un espacio de nombres que no está declarado dentro de ese ámbito.|El sistema de escritura XML escribe el nodo de espacio de nombres necesaria.|El sistema de escritura XML escribe el nodo de espacio de nombres necesaria.|El sistema de escritura XML escribe el nodo de espacio de nombres necesaria.|  
|<xref:System.Xml.XmlWriter.WriteStartAttribute%2A> Especifica un prefijo y un espacio de nombres, pero el prefijo está asociado a otro espacio de nombres en el ámbito.|El sistema de escritura XML omite el prefijo especificado y busca el prefijo correcto o genera un nuevo prefijo.|El sistema de escritura XML omite el prefijo especificado y busca el prefijo correcto o genera un nuevo prefijo.|El sistema de escritura XML omite el prefijo especificado y busca el prefijo correcto o genera un nuevo prefijo.|  
|<xref:System.Xml.XmlWriter.WriteQualifiedName%2A> se usa para escribir el contenido del elemento mediante el uso de un espacio de nombres que no existe dentro del ámbito.|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|  
|<xref:System.Xml.XmlWriter.WriteQualifiedName%2A> se usa para escribir atributos en el contenido mediante el uso de un espacio de nombres que no existe dentro del ámbito.|El escritor XML escribe la declaración de espacio de nombres necesaria.|El escritor XML escribe la declaración de espacio de nombres necesaria.|El escritor XML escribe la declaración de espacio de nombres necesaria.|  
|El `xml:space` atributo no contiene un valor válido.|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|  
|Se ha encontrado un nombre no válido.|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|  
|El `xml` prefijo no coincide con un URI.|El sistema de escritura XML no comprueba este tipo de infracción.|El sistema de escritura XML no comprueba este tipo de infracción.|El sistema de escritura XML no comprueba este tipo de infracción.|  
|El `xml` prefijo no coincide con el http://www.w3.org/XML/1998/namespace URI.|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|  
|El `xmlns` prefijo o el nombre local no está asociada a un identificador URI.|El sistema de escritura XML no comprueba este tipo de infracción.|El sistema de escritura XML no comprueba este tipo de infracción.|El sistema de escritura XML no comprueba este tipo de infracción.|  
|El `xmlns` prefijo o el nombre local no coincide con la http://www.w3.org/2000/xmlns URI.|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|  
  
   
  
## Examples  
 En el ejemplo siguiente se escribe un fragmento XML en una secuencia de memoria.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNotEscapeUriAttributes">
      <MemberSignature Language="C#" Value="public bool DoNotEscapeUriAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoNotEscapeUriAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property DoNotEscapeUriAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoNotEscapeUriAttributes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si <see cref="T:System.Xml.XmlWriter" /> no realiza escape de los atributos de URI.</summary>
        <value>
          <see langword="true" /> Si el <see cref="T:System.Xml.XmlWriter" /> no atributos URI de escape; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tipo de codificación de texto que se va a usar.</summary>
        <value>Codificación de texto que se va a usar. El valor predeterminado es <see langword="Encoding.UTF8" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Xml.XmlWriter> codifica un búfer de caracteres a la vez, en lugar de carácter a carácter. Se produce una excepción cuando el <xref:System.Xml.XmlWriter.Flush%2A> método se llama si se encuentran los errores de codificación.  
  
 El <xref:System.Xml.XmlWriterSettings.Encoding%2A> propiedad solo se aplica a la <xref:System.Xml.XmlWriter> instancias que se crean con los valores especificados <xref:System.IO.Stream> o con el nombre de archivo especificado. Si el <xref:System.Xml.XmlWriter> instancia se crea con los valores especificados <xref:System.IO.TextWriter>, <xref:System.Xml.XmlWriterSettings.Encoding%2A> reemplaza a la codificación de subyacente <xref:System.IO.TextWriter>. Por ejemplo, si esta propiedad se establece en Unicode (UTF-16) para un determinado <xref:System.Xml.XmlWriter>, pero el escritor subyacente es un <xref:System.IO.StreamWriter> (que se deriva de <xref:System.IO.TextWriter>) con la codificación establecida en UTF8, la salida será con codificación UTF-8.  
  
 Si el <xref:System.Xml.XmlWriter> instancia se crea con otros parámetros de salida, el <xref:System.Xml.XmlWriterSettings.Encoding%2A> propiedad se omite.  
  
 En el ejemplo siguiente:  
  
-   El valor predeterminado de <xref:System.Xml.XmlWriterSettings.Encoding%2A> es `Encoding.UTF8`.  
  
-   El <xref:System.IO.StreamWriter> está establecido en `Encoding.Unicode` y <xref:System.IO.StreamWriter>invalidaciones de codificación de la <xref:System.Xml.XmlWriterSettings.Encoding%2A> configuración.  
  
-   El resultado será `Encoding.Unicode`.  
  
```csharp  
using (StreamWriter output =  
    new StreamWriter(new FileStream("Xml01.xml", FileMode.Create), Encoding.Unicode))  
{  
    using (XmlWriter xmlWriter =  
        XmlWriter.Create(output, new XmlWriterSettings()))  
    {  
        xmlWriter.WriteStartDocument();  
        xmlWriter.WriteStartElement("Root");  
        xmlWriter.WriteEndElement();  
        xmlWriter.WriteEndDocument();  
    }  
}  
```  
  
> [!IMPORTANT]
>  No aceptan un <xref:System.Text.Encoding> objeto desde un origen de confianza.  
  
   
  
## Examples  
 En el ejemplo siguiente se escribe un fragmento XML en una secuencia de memoria.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public bool Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Indent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Indent { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se va a aplicar sangría a los elementos.</summary>
        <value>
          Es <see langword="true" /> para escribir elementos individuales en líneas nuevas y aplicar sangría; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad solo se aplica a <xref:System.Xml.XmlWriter> instancias que el contenido de texto de salida; en caso contrario, este valor se omite.  
  
 Se aplica una sangría a los elementos siempre y cuando el elemento no contiene contenido mixto. Una vez el <xref:System.Xml.XmlWriter.WriteString%2A> o <xref:System.Xml.XmlWriter.WriteWhitespace%2A> método se llama para escribir contenido de elementos mixtos, los <xref:System.Xml.XmlWriter> deja de aplicar sangría. La sangría se reanudará una vez que se cierra el elemento de contenido mixto.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Xml.XmlWriter> objeto que usa el carácter de tabulación para la sangría.  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentChars">
      <MemberSignature Language="C#" Value="public string IndentChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IndentChars" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.IndentChars" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChars As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IndentChars { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la cadena de caracteres que se va a usar al aplicar sangría. Esta opción se utiliza cuando la propiedad <see cref="P:System.Xml.XmlWriterSettings.Indent" /> se establece en <see langword="true" />.</summary>
        <value>Cadena de caracteres que se va a usar al aplicar sangría. Se puede establecer en cualquier valor de cadena. Sin embargo, para garantizar la validez del contenido XML, debe especificar solo caracteres de espacio en blanco válidos, como caracteres de espacio, tabulaciones, retornos de carro y saltos de línea. El valor predeterminado es dos espacios.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad solo se aplica a <xref:System.Xml.XmlWriter> instancias que el contenido de texto de salida; en caso contrario, este valor se omite. El <xref:System.Xml.XmlWriter> produce una excepción si los caracteres de la sangría, se crearán un XML no válido.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Xml.XmlWriter> objeto que usa el carácter de tabulación para la sangría.  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor asignado a <see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="NamespaceHandling">
      <MemberSignature Language="C#" Value="public System.Xml.NamespaceHandling NamespaceHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.NamespaceHandling NamespaceHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NamespaceHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NamespaceHandling As NamespaceHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::NamespaceHandling NamespaceHandling { System::Xml::NamespaceHandling get(); void set(System::Xml::NamespaceHandling value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.NamespaceHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si <see cref="T:System.Xml.XmlWriter" /> debe quitar declaraciones de espacio de nombres duplicadas al escribir contenido XML. El comportamiento predeterminado es que el sistema de escritura genere todas las declaraciones de espacio de nombres que se encuentran en la resolución de espacios de nombres del sistema de escritura.</summary>
        <value>Enumeración <see cref="T:System.Xml.NamespaceHandling" /> utilizada para especificar si se van a quitar las declaraciones de espacio de nombres duplicadas en <see cref="T:System.Xml.XmlWriter" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineChars">
      <MemberSignature Language="C#" Value="public string NewLineChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLineChars" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineChars" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineChars As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewLineChars { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la cadena de caracteres que se va a usar para los saltos de línea.</summary>
        <value>Cadena de caracteres que se va a usar para los saltos de línea. Se puede establecer en cualquier valor de cadena. Sin embargo, para garantizar la validez del contenido XML, debe especificar solo caracteres de espacio en blanco válidos, como caracteres de espacio, tabulaciones, retornos de carro y saltos de línea. El valor predeterminado es <c>\r\n</c> (retorno de carro, nueva línea).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad solo se aplica a <xref:System.Xml.XmlWriter> instancias que el contenido de texto de salida; en caso contrario, este valor se omite. El <xref:System.Xml.XmlWriter> produce una excepción si los caracteres de salto de línea, se crearán un XML no válido.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor asignado a <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="NewLineHandling">
      <MemberSignature Language="C#" Value="public System.Xml.NewLineHandling NewLineHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.NewLineHandling NewLineHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineHandling As NewLineHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::NewLineHandling NewLineHandling { System::Xml::NewLineHandling get(); void set(System::Xml::NewLineHandling value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.NewLineHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se deben normalizar los saltos de línea en el resultado.</summary>
        <value>Uno de los valores de <see cref="T:System.Xml.NewLineHandling" />. El valor predeterminado es <see cref="F:System.Xml.NewLineHandling.Replace" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta configuración se aplica al escribir valores de atributo o contenido de texto. Cada uno de los <xref:System.Xml.NewLineHandling> valores se describe a continuación:  
  
-   El <xref:System.Xml.NewLineHandling.Entitize> configuración determinará la <xref:System.Xml.XmlWriter> para reemplazar los caracteres de nueva línea que no se conservarán en caso contrario, con una normalización <xref:System.Xml.XmlReader> con entidades de caracteres. Esto es útil en escenarios de ida y vuelta que se lee el resultado por una normalización <xref:System.Xml.XmlReader>. Las reglas de normalización adicionales se aplican para los valores de atributo cuando ida y vuelta desde `\t`, `\n` y `\r` se reemplazan por un espacio en los valores de atributo cuando se normalizan en un <xref:System.Xml.XmlReader>.  
  
-   El <xref:System.Xml.NewLineHandling.Replace> configuración determinará la <xref:System.Xml.XmlWriter> para reemplazar caracteres de nueva línea con `\r\n`, que es el nuevo formato de línea utilizado por el sistema operativo Microsoft Windows. Esto ayuda a garantizar que el archivo se puede mostrar correctamente de las aplicaciones Bloc de notas o Microsoft Word. Esta configuración también reemplaza las líneas nuevas en atributos con entidades de caracteres para conservar los caracteres. Este es el valor predeterminado.  
  
-   El <xref:System.Xml.NewLineHandling.None> configuración determinará la <xref:System.Xml.XmlWriter> para dejar la entrada sin cambios. Esta configuración se utiliza cuando no se desea realizar ningún procesamiento de nueva línea. Esto es útil cuando el resultado se lee mediante un <xref:System.Xml.XmlReader> que no realiza ninguna normalización (por ejemplo, un <xref:System.Xml.XmlTextReader> con la configuración predeterminada.)  
  
 Las siguientes tablas muestran el resultado de la <xref:System.Xml.XmlWriter.WriteString%2A> método cuando se suministra con el valor de entrada según el <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> configuración de la propiedad. Las tablas muestran el resultado al escribir contenido de texto y también cuando se escribe un valor de atributo.  
  
 `Text Node Value:`  
  
||\r\n|\n|\r|\t|  
|-|------------|---------|---------|---------|  
|Cree una entidad|& #D; \n|\n|&AMP; #D;|\t|  
|Reemplazar|\r\n|\r\n|\r\n|\t|  
|None|\r\n|\n|\r|\t|  
  
 `Attribute Value:`  
  
||\r\n|\n|\r|\t|  
|-|------------|---------|---------|---------|  
|Cree una entidad|&AMP; #D; &AMP; #A;|&AMP; #A;|&AMP; #D;|&\#9;|  
|Reemplazar|&AMP; #D; &AMP; #A;|&AMP; #A;|&AMP; #D;|&\#9;|  
|None|\r\n|\n|\r|\t|  
  
> [!NOTE]
>  El <xref:System.Xml.XmlWriter> tiene el siguiente comportamiento al escribir contenido dentro de una sección CDATA, comentario o instrucción de procesamiento. Nuevas líneas nunca se reemplazan por sus entidades de caracteres, incluso cuando la <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> propiedad está establecida en <xref:System.Xml.NewLineHandling.Entitize>. Esto es porque no se reconocen las entidades de caracteres en las secciones CDATA, comentarios o instrucciones de procesamiento. Si el <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> propiedad está establecida en <xref:System.Xml.NewLineHandling.None> o <xref:System.Xml.NewLineHandling.Replace>, el comportamiento es el mismo que al escribir un valor de nodo de texto.  
  
 La siguiente tabla describe qué una normalización <xref:System.Xml.XmlReader> devuelve para cada entrada de espacio en blanco. Para obtener más información, consulte las secciones 2.11 y 3.3.3 del W3C [recomendación XML 1.0](https://www.w3.org/TR/REC-xml/).  
  
> [!NOTE]
>  Un lector de normalización es cualquier <xref:System.Xml.XmlReader> objeto creado por el <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método. Estos objetos siempre realizan la normalización de saltos de línea y la normalización completa de los atributos. El <xref:System.Xml.XmlTextReader> objeto también puede ser un lector de normalización si es <xref:System.Xml.XmlTextReader.Normalization%2A> propiedad está establecida en `true`.  
  
||\r\n|\n|\r|\t|  
|-|------------|---------|---------|---------|  
|Valor de nodo de texto|\n|\n|\n|\t|  
|Valor del atributo|espacio simple|espacio simple|espacio simple|espacio simple|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineOnAttributes">
      <MemberSignature Language="C#" Value="public bool NewLineOnAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NewLineOnAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineOnAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NewLineOnAttributes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si los atributos se deben escribir en una nueva línea.</summary>
        <value>
          Es <see langword="true" /> para escribir los atributos en líneas individuales; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.  
  
 <block subset="none" type="note"><para>  
 Esta configuración no se aplica cuando el valor de la propiedad <see cref="P:System.Xml.XmlWriterSettings.Indent" /> es <see langword="false" />.  
  
</para></block>  
  
 Cuando <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> se establece en <see langword="true" />, a cada atributo le precede una nueva línea y un nivel adicional de sangría.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad solo se aplica a <xref:System.Xml.XmlWriter> instancias que el contenido de texto de salida; en caso contrario, este valor se omite.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Xml.XmlWriter> que escribe en un archivo XML y se escribe cada atributo en una nueva línea.  
  
 [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]
 [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  
  
 El ejemplo produce el siguiente resultado:  
  
```xml  
<order  
  orderID="367A54"  
  date="2001-05-03">  
  <price>19.95</price>  
</order>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OmitXmlDeclaration">
      <MemberSignature Language="C#" Value="public bool OmitXmlDeclaration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OmitXmlDeclaration" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.OmitXmlDeclaration" />
      <MemberSignature Language="VB.NET" Value="Public Property OmitXmlDeclaration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OmitXmlDeclaration { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si debe omitir una declaración XML.</summary>
        <value>
          Es <see langword="true" /> para omitir la declaración XML; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />, se escribe una declaración XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad solo se aplica a <xref:System.Xml.XmlWriter> instancias que el contenido de texto de salida; en caso contrario, este valor se omite.  
  
 Si <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> se establece en `false`, la declaración XML se escribe automáticamente  
  
 La declaración XML siempre se escribe si <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> está establecido en <xref:System.Xml.ConformanceLevel.Document>, incluso si <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> está establecido en `true`.  
  
 La declaración XML no se escribe nunca si <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> está establecido en <xref:System.Xml.ConformanceLevel.Fragment>. Puede llamar a <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> para escribir explícitamente una declaración XML.  
  
   
  
## Examples  
 En el ejemplo siguiente se escribe un fragmento XML en una secuencia de memoria.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputMethod">
      <MemberSignature Language="C#" Value="public System.Xml.XmlOutputMethod OutputMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlOutputMethod OutputMethod" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.OutputMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputMethod As XmlOutputMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlOutputMethod OutputMethod { System::Xml::XmlOutputMethod get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlOutputMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el método utilizado para serializar el resultado de <see cref="T:System.Xml.XmlWriter" />.</summary>
        <value>Uno de los valores de <see cref="T:System.Xml.XmlOutputMethod" />. El valor predeterminado es <see cref="F:System.Xml.XmlOutputMethod.Xml" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad especifica el método utilizado para serializar la salida. El resultado se puede serializar utilizando las reglas HTML, las reglas de XML 1.0 y así sucesivamente. Esta configuración se establece mediante el procesador XSLT y se usa internamente por Visual Studio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restablece los miembros de la clase de configuración a sus valores predeterminados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En la tabla siguiente muestra el valor predeterminado de los valores de propiedad para una instancia de <xref:System.Xml.XmlWriterSettings>.  
  
|Propiedad.|Valor inicial|  
|--------------|-------------------|  
|<xref:System.Xml.XmlWriterSettings.Async%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`.|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|`Encoding.UTF8`.|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Dos espacios.|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\r\n`.|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace>.|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocumentOnClose">
      <MemberSignature Language="C#" Value="public bool WriteEndDocumentOnClose { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WriteEndDocumentOnClose" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteEndDocumentOnClose As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WriteEndDocumentOnClose { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si <see cref="T:System.Xml.XmlWriter" /> agregará etiquetas de cierre a todas las etiquetas de elementos sin cerrar cuando se llame al método <see cref="M:System.Xml.XmlWriter.Close" />.</summary>
        <value>
          <see langword="true" /> si se cerrarán todas las etiquetas de elementos sin cerrar; si no, <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si esta marca se establece en `false`, el archivo de salida XML que no esté bien formado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>