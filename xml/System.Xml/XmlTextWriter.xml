<Type Name="XmlTextWriter" FullName="System.Xml.XmlTextWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="49897c0e8187ec4202e01dd0a5133ff531a85fe3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36434139" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlTextWriter : System.Xml.XmlWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextWriter extends System.Xml.XmlWriter" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextWriter&#xA;Inherits XmlWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextWriter : System::Xml::XmlWriter" />
  <TypeSignature Language="F#" Value="type XmlTextWriter = class&#xA;    inherit XmlWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c239b-101">Represents a writer that provides a fast, non-cached, forward-only way of generating streams or files containing XML data that conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c239b-101">Represents a writer that provides a fast, non-cached, forward-only way of generating streams or files containing XML data that conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.</span>
      </span>
      <span data-ttu-id="c239b-102">Starting with the .NET Framework 2.0, we recommend that you use the <see cref="T:System.Xml.XmlWriter" /> class instead.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c239b-102">Starting with the .NET Framework 2.0, we recommend that you use the <see cref="T:System.Xml.XmlWriter" /> class instead.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c239b-103">Esta clase implementa la <xref:System.Xml.XmlWriter> clase.</span><span class="sxs-lookup"><span data-stu-id="c239b-103">This class implements the <xref:System.Xml.XmlWriter> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c239b-104">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-104">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-105">`XmlTextWriter` mantiene una pila de espacio de nombres correspondiente a todos los espacios de nombres definidos en la pila del elemento actual.</span><span class="sxs-lookup"><span data-stu-id="c239b-105">`XmlTextWriter` maintains a namespace stack corresponding to all the namespaces defined in the current element stack.</span></span> <span data-ttu-id="c239b-106">Con `XmlTextWriter` se pueden declarar manualmente los espacios de nombres.</span><span class="sxs-lookup"><span data-stu-id="c239b-106">Using `XmlTextWriter` you can declare namespaces manually.</span></span>  
  
```csharp  
w.WriteStartElement("root");  
w.WriteAttributeString("xmlns", "x", null, "urn:1");  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
```  
  
 <span data-ttu-id="c239b-107">El código de C# anterior produce el siguiente resultado.</span><span class="sxs-lookup"><span data-stu-id="c239b-107">The above C# code produces the following output.</span></span> <span data-ttu-id="c239b-108">`XmlTextWriter` promociona la declaración de espacio de nombres al elemento raíz para evitar que esté duplicada en los dos elementos secundarios.</span><span class="sxs-lookup"><span data-stu-id="c239b-108">`XmlTextWriter` promotes the namespace declaration to the root element to avoid having it duplicated on the two child elements.</span></span> <span data-ttu-id="c239b-109">Los elementos secundarios recoger el prefijo de la declaración de espacio de nombres.</span><span class="sxs-lookup"><span data-stu-id="c239b-109">The child elements pick up the prefix from the namespace declaration.</span></span>  
  
```xml  
<root xmlns:x="urn:1">  
 <x:item/>  
 <x:item/>  
</x:root>  
```  
  
 <span data-ttu-id="c239b-110">`XmlTextWriter` También permite reemplazar la declaración de espacio de nombres actual.</span><span class="sxs-lookup"><span data-stu-id="c239b-110">`XmlTextWriter` also allows you to override the current namespace declaration.</span></span> <span data-ttu-id="c239b-111">En el ejemplo siguiente, el espacio de nombres URI "123" se reemplaza por "abc" para generar el elemento XML `<x:node xmlns:x="abc"/>`.</span><span class="sxs-lookup"><span data-stu-id="c239b-111">In the following example, the namespace URI "123" is overridden by "abc" to produce the XML element `<x:node xmlns:x="abc"/>`.</span></span>  
  
```csharp  
w.WriteStartElement("x","node","123");  
w.WriteAttributeString("xmlns","x",null,"abc");  
```  
  
 <span data-ttu-id="c239b-112">Mediante el uso de los métodos de escritura que toman un prefijo como argumento también puede especificar qué prefijo se va a usar.</span><span class="sxs-lookup"><span data-stu-id="c239b-112">By using the write methods that take a prefix as an argument you can also specify which prefix to use.</span></span> <span data-ttu-id="c239b-113">En el ejemplo siguiente, se asignan dos prefijos diferentes al mismo espacio de nombres URI para generar el texto XML `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`.</span><span class="sxs-lookup"><span data-stu-id="c239b-113">In the following example, two different prefixes are mapped to the same namespace URI to produce the XML text `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`.</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.WriteStartElement("x","root","urn:1");  
 w.WriteStartElement("y","item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="c239b-114">Si hay varias declaraciones de espacio de nombres que se asignan diferentes prefijos al mismo espacio de nombres URI, `XmlTextWriter` recorre la pila de declaraciones de espacio de nombres con las versiones anteriores y toma el prefijo más próximo.</span><span class="sxs-lookup"><span data-stu-id="c239b-114">If there are multiple namespace declarations mapping different prefixes to the same namespace URI, `XmlTextWriter` walks the stack of namespace declarations backwards and picks the closest one.</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.Formatting = Formatting.Indented;  
w.WriteStartElement("x","root","urn:1");  
w.WriteStartElement("y","item","urn:1");  
w.WriteAttributeString("attr","urn:1","123");  
w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="c239b-115">En el anterior ejemplo de C#, porque la `WriteAttributeString` llamada no especifica un prefijo, el sistema de escritura utiliza el último prefijo insertado en la pila de espacio de nombres y genera el siguiente código XML:</span><span class="sxs-lookup"><span data-stu-id="c239b-115">In the above C# example, because the `WriteAttributeString` call does not specify a prefix, the writer uses the last prefix pushed onto the namespace stack, and produces the following XML:</span></span>  
  
```xml  
<x:root xmlns:x="urn:1">  
 <y:item y:attr="123" xmlns:y="urn:1" />  
</x:root>  
```  
  
 <span data-ttu-id="c239b-116">Si se producen conflictos de espacio de nombres, `XmlTextWriter` resuelve generando prefijos alternativos.</span><span class="sxs-lookup"><span data-stu-id="c239b-116">If namespace conflicts occur, `XmlTextWriter` resolves them by generating alternate prefixes.</span></span> <span data-ttu-id="c239b-117">Por ejemplo, si un atributo y un elemento tienen el mismo prefijo pero diferentes espacios de nombres, `XmlWriter` genera otro prefijo para el atributo.</span><span class="sxs-lookup"><span data-stu-id="c239b-117">For example, if an attribute and element have the same prefix but different namespaces, `XmlWriter` generates an alternate prefix for the attribute.</span></span> <span data-ttu-id="c239b-118">Los prefijos generados se denominan `n{i}` donde `i` es un número que empieza en 1.</span><span class="sxs-lookup"><span data-stu-id="c239b-118">The generated prefixes are named `n{i}` where `i` is a number beginning at 1.</span></span> <span data-ttu-id="c239b-119">El número se restablece en 1 para cada elemento.</span><span class="sxs-lookup"><span data-stu-id="c239b-119">The number is reset to 1 for each element.</span></span>  
  
 <span data-ttu-id="c239b-120">Atributos que están asociadas con un URI de espacio de nombres deben tener un prefijo (espacios de nombres no se aplican a los atributos el valor predeterminado).</span><span class="sxs-lookup"><span data-stu-id="c239b-120">Attributes which are associated with a namespace URI must have a prefix (default namespaces do not apply to attributes).</span></span> <span data-ttu-id="c239b-121">Esto se ajusta a la sección 5.2 de los espacios de nombres de W3C en la recomendación de XML.</span><span class="sxs-lookup"><span data-stu-id="c239b-121">This conforms to section 5.2 of the W3C Namespaces in XML recommendation.</span></span> <span data-ttu-id="c239b-122">Si un atributo hace referencia a un URI de espacio de nombres, pero no especifica un prefijo, el sistema de escritura genera un prefijo para el atributo.</span><span class="sxs-lookup"><span data-stu-id="c239b-122">If an attribute references a namespace URI, but does not specify a prefix, the writer generates a prefix for the attribute.</span></span>  
  
 <span data-ttu-id="c239b-123">Al escribir un elemento vacío, un espacio adicional se agrega entre el nombre de etiqueta y la etiqueta de cierre, por ejemplo `<item />`.</span><span class="sxs-lookup"><span data-stu-id="c239b-123">When writing an empty element, an additional space is added between tag name and the closing tag, for example `<item />`.</span></span> <span data-ttu-id="c239b-124">Esto proporciona compatibilidad con exploradores más antiguos.</span><span class="sxs-lookup"><span data-stu-id="c239b-124">This provides compatibility with older browsers.</span></span>  
  
 <span data-ttu-id="c239b-125">Cuando un `String` se utiliza como parámetro de método, `null` y `String.Empty` son equivalentes.</span><span class="sxs-lookup"><span data-stu-id="c239b-125">When a `String` is used as method parameter, `null` and `String.Empty` are equivalent.</span></span> <span data-ttu-id="c239b-126">`String.Empty` sigue las reglas de W3C.</span><span class="sxs-lookup"><span data-stu-id="c239b-126">`String.Empty` follows the W3C rules.</span></span>  
  
 <span data-ttu-id="c239b-127">Para escribir datos fuertemente tipados, use la <xref:System.Xml.XmlConvert> clase para convertir tipos de datos en cadena.</span><span class="sxs-lookup"><span data-stu-id="c239b-127">To write strongly typed data, use the <xref:System.Xml.XmlConvert> class to convert data types to string.</span></span> <span data-ttu-id="c239b-128">Por ejemplo, el siguiente código C# convierte los datos de `Double` a `String` y escribe el elemento `<price>19.95</price>`.</span><span class="sxs-lookup"><span data-stu-id="c239b-128">For example, the following C# code converts the data from `Double` to `String` and writes the element `<price>19.95</price>`.</span></span>  
  
```csharp  
Double price = 19.95;  
writer.WriteElementString("price", XmlConvert.ToString(price));  
```  
  
 <span data-ttu-id="c239b-129">`XmlTextWriter` no compruebe lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="c239b-129">`XmlTextWriter` does not check for the following:</span></span>  
  
-   <span data-ttu-id="c239b-130">Caracteres no válidos en los nombres de elemento y atributo.</span><span class="sxs-lookup"><span data-stu-id="c239b-130">Invalid characters in attribute and element names.</span></span>  
  
-   <span data-ttu-id="c239b-131">Caracteres Unicode que no se ajustan en la codificación especificada.</span><span class="sxs-lookup"><span data-stu-id="c239b-131">Unicode characters that do not fit the specified encoding.</span></span> <span data-ttu-id="c239b-132">Si los caracteres Unicode no ajustan la codificación especificada, el `XmlTextWriter` no secuencias de escape los caracteres Unicode en las entidades de caracteres.</span><span class="sxs-lookup"><span data-stu-id="c239b-132">If the Unicode characters do not fit the specified encoding, the `XmlTextWriter` does not escape the Unicode characters into character entities.</span></span>  
  
-   <span data-ttu-id="c239b-133">Atributos duplicados.</span><span class="sxs-lookup"><span data-stu-id="c239b-133">Duplicate attributes.</span></span>  
  
-   <span data-ttu-id="c239b-134">Caracteres en el identificador público DOCTYPE o el identificador del sistema.</span><span class="sxs-lookup"><span data-stu-id="c239b-134">Characters in the DOCTYPE public identifier or system identifier.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="c239b-135">Consideraciones de seguridad</span><span class="sxs-lookup"><span data-stu-id="c239b-135">Security Considerations</span></span>  
 <span data-ttu-id="c239b-136">Los siguientes elementos son cosas a tener en cuenta al trabajar con la <xref:System.Xml.XmlTextWriter> clase.</span><span class="sxs-lookup"><span data-stu-id="c239b-136">The following items are things to consider when working with the <xref:System.Xml.XmlTextWriter> class.</span></span>  
  
-   <span data-ttu-id="c239b-137">Las excepciones producidas por el <xref:System.Xml.XmlTextWriter> puede revelar información de ruta de acceso que no desea que se ejecuta hasta la aplicación.</span><span class="sxs-lookup"><span data-stu-id="c239b-137">Exceptions thrown by the <xref:System.Xml.XmlTextWriter> can disclose path information that you do not want bubbled up to the application.</span></span> <span data-ttu-id="c239b-138">Las aplicaciones deben detectar las excepciones y procesarlas de la manera correspondiente.</span><span class="sxs-lookup"><span data-stu-id="c239b-138">Your applications must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="c239b-139">Cuando se pasa <xref:System.Xml.XmlTextWriter> a otra aplicación, la secuencia subyacente queda expuesta a esa aplicación.</span><span class="sxs-lookup"><span data-stu-id="c239b-139">When you pass the <xref:System.Xml.XmlTextWriter> to another application the underlying stream is exposed to that application.</span></span> <span data-ttu-id="c239b-140">Si necesita pasar el objeto <xref:System.Xml.XmlTextWriter> a una aplicación de confianza parcial, debería utilizar en su lugar un objeto <xref:System.Xml.XmlWriter> creado por el método <xref:System.Xml.XmlWriter.Create%2A>.</span><span class="sxs-lookup"><span data-stu-id="c239b-140">If you need to pass the <xref:System.Xml.XmlTextWriter> to a semi-trusted application, you should use an <xref:System.Xml.XmlWriter> object created by the <xref:System.Xml.XmlWriter.Create%2A> method instead.</span></span>  
  
-   <span data-ttu-id="c239b-141">El <xref:System.Xml.XmlTextWriter> no valida los datos que se pasen a la <xref:System.Xml.XmlTextWriter.WriteDocType%2A> o <xref:System.Xml.XmlTextWriter.WriteRaw%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="c239b-141">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> or <xref:System.Xml.XmlTextWriter.WriteRaw%2A> methods.</span></span> <span data-ttu-id="c239b-142">No debe pasar datos arbitrarios a estos métodos.</span><span class="sxs-lookup"><span data-stu-id="c239b-142">You should not pass arbitrary data to these methods.</span></span>  
  
-   <span data-ttu-id="c239b-143">Si se cambia la configuración predeterminada, no hay ninguna garantía de que el resultado generado es datos XML con formato correcto.</span><span class="sxs-lookup"><span data-stu-id="c239b-143">If the default settings are changed, there is no guarantee that the generated output is well-formed XML data.</span></span>  
  
-   <span data-ttu-id="c239b-144">No acepte componentes auxiliares, como un <xref:System.Text.Encoding> objeto, desde un origen de confianza.</span><span class="sxs-lookup"><span data-stu-id="c239b-144">Do not accept supporting components, such as an <xref:System.Text.Encoding> object, from an untrusted source.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c239b-145">Creates an instance of the <see langword="XmlTextWriter" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-145">Creates an instance of the <see langword="XmlTextWriter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-146">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-146">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.TextWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (w As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::TextWriter ^ w);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : System.IO.TextWriter -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter w" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="c239b-147">The <see langword="TextWriter" /> to write to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-147">The <see langword="TextWriter" /> to write to.</span>
          </span>
          <span data-ttu-id="c239b-148">It is assumed that the <see langword="TextWriter" /> is already set to the correct encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-148">It is assumed that the <see langword="TextWriter" /> is already set to the correct encoding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c239b-149">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified <see cref="T:System.IO.TextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-149">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-150">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-150">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.Stream w, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream w, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::Stream ^ w, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : System.IO.Stream * System.Text.Encoding -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter (w, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="c239b-151">The stream to which you want to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-151">The stream to which you want to write.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="c239b-152">The encoding to generate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-152">The encoding to generate.</span>
          </span>
          <span data-ttu-id="c239b-153">If encoding is <see langword="null" /> it writes out the stream as UTF-8 and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-153">If encoding is <see langword="null" /> it writes out the stream as UTF-8 and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c239b-154">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified stream and encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-154">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified stream and encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-155">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-155">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c239b-156">The encoding is not supported or the stream cannot be written to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-156">The encoding is not supported or the stream cannot be written to.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c239b-157">
            <paramref name="w" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-157">
              <paramref name="w" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (string filename, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::String ^ filename, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : string * System.Text.Encoding -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter (filename, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="c239b-158">The filename to write to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-158">The filename to write to.</span>
          </span>
          <span data-ttu-id="c239b-159">If the file exists, it truncates it and overwrites it with the new content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-159">If the file exists, it truncates it and overwrites it with the new content.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="c239b-160">The encoding to generate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-160">The encoding to generate.</span>
          </span>
          <span data-ttu-id="c239b-161">If encoding is <see langword="null" /> it writes the file out as UTF-8, and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-161">If encoding is <see langword="null" /> it writes the file out as UTF-8, and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c239b-162">Creates an instance of the <see cref="T:System.Xml.XmlTextWriter" /> class using the specified file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-162">Creates an instance of the <see cref="T:System.Xml.XmlTextWriter" /> class using the specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-163">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-163">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c239b-164">The encoding is not supported; the filename is empty, contains only white space, or contains one or more invalid characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-164">The encoding is not supported; the filename is empty, contains only white space, or contains one or more invalid characters.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="c239b-165">Access is denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-165">Access is denied.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c239b-166">The filename is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-166">The filename is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="c239b-167">The directory to write to is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-167">The directory to write to is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c239b-168">The filename includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-168">The filename includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="c239b-169">The caller does not have the required permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-169">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseStream : System.IO.Stream" Usage="System.Xml.XmlTextWriter.BaseStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c239b-170">Gets the underlying stream object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-170">Gets the underlying stream object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c239b-171">La secuencia a la que el <see langword="XmlTextWriter" /> está escribiendo o <see langword="null" /> si la <see langword="XmlTextWriter" /> se construyó con un <see cref="T:System.IO.TextWriter" /> que no hereda de la <see cref="T:System.IO.StreamWriter" /> clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-171">The stream to which the <see langword="XmlTextWriter" /> is writing or <see langword="null" /> if the <see langword="XmlTextWriter" /> was constructed using a <see cref="T:System.IO.TextWriter" /> that does not inherit from the <see cref="T:System.IO.StreamWriter" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-172">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-172">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-173">Si el sistema de escritura se construyó con un `TextWriter` que se deriva de la `StreamWriter` (clase), esta propiedad es equivalente a la <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c239b-173">If the writer was constructed using a `TextWriter` that is derived from the `StreamWriter` class, this property is equivalent to the <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="c239b-174">Si el sistema de escritura se construyó con un <xref:System.IO.Stream>, esta propiedad devuelve el `Stream` pasado al constructor.</span><span class="sxs-lookup"><span data-stu-id="c239b-174">If the writer was constructed using a <xref:System.IO.Stream>, this property returns the `Stream` passed to the constructor.</span></span> <span data-ttu-id="c239b-175">Si el sistema de escritura se construyó con un nombre de archivo, esta propiedad devuelve el `Stream` que representa el archivo.</span><span class="sxs-lookup"><span data-stu-id="c239b-175">If the writer was constructed using a file name, this property returns the `Stream` representing the file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlTextWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c239b-176">Closes this stream and the underlying stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-176">Closes this stream and the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-177">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-177">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-178">Todos los elementos o atributos que se dejan abiertos se cierran automáticamente.</span><span class="sxs-lookup"><span data-stu-id="c239b-178">Any elements or attributes left open are automatically closed.</span></span>  
  
 <span data-ttu-id="c239b-179">Este método no produce ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="c239b-179">This method does not throw any exceptions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c239b-180">En el ejemplo siguiente se escribe un fragmento XML.</span><span class="sxs-lookup"><span data-stu-id="c239b-180">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="xmlTextWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c239b-181">Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-181">Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-182">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-182">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-183">Esto se denomina en lugar de <xref:System.Xml.XmlTextWriter.Close%2A> cuando desee escribir más en la secuencia subyacente sin perder lo que aún queda en el búfer.</span><span class="sxs-lookup"><span data-stu-id="c239b-183">This is called instead of <xref:System.Xml.XmlTextWriter.Close%2A> when you want to write more to the underlying stream without losing what is still in the buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c239b-184">En el ejemplo siguiente se escribe dos fragmentos XML.</span><span class="sxs-lookup"><span data-stu-id="c239b-184">The following example writes out two XML fragments.</span></span>  
  
 [!code-cpp[XmlTextWriter.Flush#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextWriter.Flush/CPP/write2docs.cpp#1)]
 [!code-csharp[XmlTextWriter.Flush#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextWriter.Flush/CS/write2docs.cs#1)]
 [!code-vb[XmlTextWriter.Flush#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextWriter.Flush/VB/write2docs.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Formatting">
      <MemberSignature Language="C#" Value="public System.Xml.Formatting Formatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Formatting Formatting" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Formatting" />
      <MemberSignature Language="VB.NET" Value="Public Property Formatting As Formatting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Formatting Formatting { System::Xml::Formatting get(); void set(System::Xml::Formatting value); };" />
      <MemberSignature Language="F#" Value="member this.Formatting : System.Xml.Formatting with get, set" Usage="System.Xml.XmlTextWriter.Formatting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Formatting</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c239b-185">Indicates how the output is formatted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-185">Indicates how the output is formatted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c239b-186">Uno de los valores de <see cref="T:System.Xml.Formatting" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-186">One of the <see cref="T:System.Xml.Formatting" /> values.</span>
          </span>
          <span data-ttu-id="c239b-187">El valor predeterminado es <see langword="Formatting.None" /> (sin formato especial).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-187">The default is <see langword="Formatting.None" /> (no special formatting).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-188">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-188">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-189">Si el `Indented` opción está activada, se aplica sangría a los elementos secundarios mediante la <xref:System.Xml.XmlTextWriter.Indentation%2A> y <xref:System.Xml.XmlTextWriter.IndentChar%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="c239b-189">If the `Indented` option is set, child elements are indented using the <xref:System.Xml.XmlTextWriter.Indentation%2A> and <xref:System.Xml.XmlTextWriter.IndentChar%2A> properties.</span></span> <span data-ttu-id="c239b-190">Contenido de elemento solo se aplica una sangría.</span><span class="sxs-lookup"><span data-stu-id="c239b-190">Only element content is indented.</span></span> <span data-ttu-id="c239b-191">El código de C# siguiente escribe elementos HTML incluido contenido mixto:</span><span class="sxs-lookup"><span data-stu-id="c239b-191">The following C# code writes out HTML elements including mixed content:</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);   
 w.Formatting = Formatting.Indented;   
 w.WriteStartElement("ol");   
 w.WriteStartElement("li");   
 w.WriteString("The big "); // This means "li" now has a mixed content model.  
 w.WriteElementString("b", "E");   
 w.WriteElementString("i", "lephant");   
 w.WriteString(" walks slowly.");   
 w.WriteEndElement();   
 w.WriteEndElement();  
```  
  
 <span data-ttu-id="c239b-192">El código anterior genera el siguiente resultado:</span><span class="sxs-lookup"><span data-stu-id="c239b-192">The above code produces the following output:</span></span>  
  
```xml  
<ol>   
  <li>The big <b>E</b><i>lephant</i> walks slowly.</li>   
</ol>  
```  
  
 <span data-ttu-id="c239b-193">Cuando se ve en HTML no aparezca ningún espacio en blanco entre los elementos de formato de negrita y cursiva.</span><span class="sxs-lookup"><span data-stu-id="c239b-193">When this is viewed in HTML no white space appears between the bold and italic elements.</span></span> <span data-ttu-id="c239b-194">De hecho, en este ejemplo, si se hubiera agregado sangría entre estos elementos de la palabra "Elephant" sería dividida incorrectamente.</span><span class="sxs-lookup"><span data-stu-id="c239b-194">In fact, in this example, if indenting was added between these elements the word "Elephant" would be incorrectly broken.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c239b-195">Escribir cualquier texto contenido, sin incluir `String.Empty` este elemento entra en modo de contenido mixto.</span><span class="sxs-lookup"><span data-stu-id="c239b-195">Writing any text content, excluding `String.Empty` puts that element into mixed content mode.</span></span> <span data-ttu-id="c239b-196">Los elementos secundarios no heredan este estado de modo "mixto".</span><span class="sxs-lookup"><span data-stu-id="c239b-196">Child elements do not inherit this "mixed" mode status.</span></span> <span data-ttu-id="c239b-197">Un elemento secundario de un elemento "mixto" aplica sangría, a menos que sea también contiene "contenido"mixto".</span><span class="sxs-lookup"><span data-stu-id="c239b-197">A child element of a "mixed" element does indenting, unless it is also contains "mixed" content.</span></span> <span data-ttu-id="c239b-198">Contenido del elemento (http://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) y contenido mixto (http://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) se definen según las definiciones de XML 1.0 de estos términos.</span><span class="sxs-lookup"><span data-stu-id="c239b-198">Element content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) and mixed content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) are defined according to the XML 1.0 definitions of these terms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c239b-199">En el ejemplo siguiente se escribe un fragmento XML.</span><span class="sxs-lookup"><span data-stu-id="c239b-199">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="Indentation">
      <MemberSignature Language="C#" Value="public int Indentation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indentation" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Indentation" />
      <MemberSignature Language="VB.NET" Value="Public Property Indentation As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indentation { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Indentation : int with get, set" Usage="System.Xml.XmlTextWriter.Indentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c239b-200">Gets or sets how many IndentChars to write for each level in the hierarchy when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-200">Gets or sets how many IndentChars to write for each level in the hierarchy when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c239b-201">Número de <see langword="IndentChars" /> para cada nivel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-201">Number of <see langword="IndentChars" /> for each level.</span>
          </span>
          <span data-ttu-id="c239b-202">El valor predeterminado es 2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-202">The default is 2.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-203">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-203">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-204">Se aplica sangría a los siguientes tipos de nodo: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, y `CDATASection`.</span><span class="sxs-lookup"><span data-stu-id="c239b-204">Indentation is performed on following node types: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, and `CDATASection`.</span></span> <span data-ttu-id="c239b-205">Todos los demás tipos de nodo no se ven afectados.</span><span class="sxs-lookup"><span data-stu-id="c239b-205">All other node types are not affected.</span></span> <span data-ttu-id="c239b-206">El `XmlTextWriter` no aplica sangría el subconjunto DTD interno.</span><span class="sxs-lookup"><span data-stu-id="c239b-206">The `XmlTextWriter` does not indent the internal DTD subset.</span></span> <span data-ttu-id="c239b-207">Sin embargo, puede hacer lo siguiente para aplicar formato al subconjunto DTD interno.</span><span class="sxs-lookup"><span data-stu-id="c239b-207">However, you could do the following to apply formatting to the internal DTD subset.</span></span>  
  
```csharp  
String name = "Employees";  
String pubid = null;  
String sysid = null;  
String subset =  
@"  
    <!ELEMENT Employees (Employee)+>  
    <!ELEMENT Employee EMPTY>  
    <!ATTLIST Employee firstname CDATA #REQUIRED>  
    <!ENTITY Company 'Microsoft']]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c239b-208">Setting this property to a negative value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-208">Setting this property to a negative value.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlTextWriter.IndentChar" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="IndentChar">
      <MemberSignature Language="C#" Value="public char IndentChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char IndentChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.IndentChar" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char IndentChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.IndentChar : char with get, set" Usage="System.Xml.XmlTextWriter.IndentChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c239b-209">Gets or sets which character to use for indenting when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-209">Gets or sets which character to use for indenting when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c239b-210">Carácter que se va a usar para la sangría.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-210">The character to use for indenting.</span>
          </span>
          <span data-ttu-id="c239b-211">El valor predeterminado es el carácter de espacio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-211">The default is space.</span>
          </span>
          <span data-ttu-id="c239b-212">
            <block subset="none" type="note">
              <para> El <see langword="XmlTextWriter" /> permite establecer esta propiedad en cualquier carácter. Para garantizar la validez del contenido XML, debe especificar un carácter de espacio en blanco válidos, 0 x 9, 0 x 10, 0 x 13 ó 0 x 20.  </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-212">
              <block subset="none" type="note">
                <para> The <see langword="XmlTextWriter" /> allows you to set this property to any character. To ensure valid XML, you must specify a valid white space character, 0x9, 0x10, 0x13 or 0x20.  </para>
              </block>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-213">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-213">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlTextWriter.Indentation" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public override string LookupPrefix (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupPrefix(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupPrefix (ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupPrefix(System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.LookupPrefix : string -&gt; string" Usage="xmlTextWriter.LookupPrefix ns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns">
          <span data-ttu-id="c239b-214">Namespace URI whose prefix you want to find.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-214">Namespace URI whose prefix you want to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c239b-215">Returns the closest prefix defined in the current namespace scope for the namespace URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-215">Returns the closest prefix defined in the current namespace scope for the namespace URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c239b-216">The matching prefix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-216">The matching prefix.</span>
          </span>
          <span data-ttu-id="c239b-217">Or <see langword="null" /> if no matching namespace URI is found in the current scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-217">Or <see langword="null" /> if no matching namespace URI is found in the current scope.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-218">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-218">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c239b-219">En el ejemplo siguiente se escribe un libro.</span><span class="sxs-lookup"><span data-stu-id="c239b-219">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c239b-220">
            <paramref name="ns" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-220">
              <paramref name="ns" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public bool Namespaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Namespaces { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : bool with get, set" Usage="System.Xml.XmlTextWriter.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c239b-221">Gets or sets a value indicating whether to do namespace support.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-221">Gets or sets a value indicating whether to do namespace support.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c239b-222">
            <see langword="true" /> para admitir los espacios de nombres; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-222">
              <see langword="true" /> to support namespaces; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c239b-223">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-223">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-224">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-224">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-225">Esta propiedad determina si el sistema de escritura admite los espacios de nombres de W3C en la recomendación de XML que se encuentra en www.w3.org/TR/REC-xml-names.</span><span class="sxs-lookup"><span data-stu-id="c239b-225">This property determines whether the writer supports the W3C Namespaces in XML recommendation located at www.w3.org/TR/REC-xml-names.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c239b-226">You can only change this property when in the <see langword="WriteState.Start" /> state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-226">You can only change this property when in the <see langword="WriteState.Start" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public char QuoteChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char QuoteChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.QuoteChar : char with get, set" Usage="System.Xml.XmlTextWriter.QuoteChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c239b-227">Gets or sets which character to use to quote attribute values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-227">Gets or sets which character to use to quote attribute values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c239b-228">Carácter que se va a usar para delimitar los valores de atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-228">The character to use to quote attribute values.</span>
          </span>
          <span data-ttu-id="c239b-229">Esto debe ser una comilla simple (&amp;#39;) o una comilla doble (&amp;#34;).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-229">This must be a single quote (&amp;#39;) or a double quote (&amp;#34;).</span>
          </span>
          <span data-ttu-id="c239b-230">Las comillas dobles son el valor predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-230">The default is a double quote.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-231">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-231">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c239b-232">Setting this property to something other than either a single or double quote.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-232">Setting this property to something other than either a single or double quote.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64">
      <MemberSignature Language="C#" Value="public override void WriteBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBase64 (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteBase64 : byte[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c239b-233">Byte array to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-233">Byte array to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="c239b-234">The position within the buffer indicating the start of the bytes to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-234">The position within the buffer indicating the start of the bytes to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c239b-235">The number of bytes to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-235">The number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c239b-236">Encodes the specified binary bytes as base64 and writes out the resulting text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-236">Encodes the specified binary bytes as base64 and writes out the resulting text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-237">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-237">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c239b-238">El siguiente ejemplo codifica un archivo de entrada mediante `WriteBase64` y genera un archivo XML temporal.</span><span class="sxs-lookup"><span data-stu-id="c239b-238">The following example encodes an input file using `WriteBase64` and generates a temporary XML file.</span></span> <span data-ttu-id="c239b-239">El archivo XML temporal se descodifica mediante el <xref:System.Xml.XmlTextReader.ReadBase64%2A> método y se compara con el archivo original.</span><span class="sxs-lookup"><span data-stu-id="c239b-239">The temporary XML file is decoded using the <xref:System.Xml.XmlTextReader.ReadBase64%2A> method and compared to the original file.</span></span>  
  
 [!code-cpp[XmlWriter.WriteBase64#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteBase64/CPP/writebase64.cpp#1)]
 [!code-csharp[XmlWriter.WriteBase64#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteBase64/CS/writebase64.cs#1)]
 [!code-vb[XmlWriter.WriteBase64#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteBase64/VB/writebase64.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c239b-240">
            <paramref name="buffer" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-240">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c239b-241">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-241">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c239b-242">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-242">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c239b-243">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-243">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHex">
      <MemberSignature Language="C#" Value="public override void WriteBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBinHex (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteBinHex : byte[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c239b-244">Byte array to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-244">Byte array to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="c239b-245">The position in the buffer indicating the start of the bytes to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-245">The position in the buffer indicating the start of the bytes to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c239b-246">The number of bytes to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-246">The number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c239b-247">Encodes the specified binary bytes as binhex and writes out the resulting text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-247">Encodes the specified binary bytes as binhex and writes out the resulting text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-248">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-248">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c239b-249">
            <paramref name="buffer" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-249">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c239b-250">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-250">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c239b-251">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-251">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c239b-252">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-252">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCData">
      <MemberSignature Language="C#" Value="public override void WriteCData (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCData(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCData (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCData(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteCData : string -&gt; unit" Usage="xmlTextWriter.WriteCData text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="c239b-253">Text to place inside the CDATA block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-253">Text to place inside the CDATA block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c239b-254">Writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-254">Writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-255">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-255">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-256">Si `text` sea `null` o `String.Empty`, este método escribe un bloque CDATA vacío, por ejemplo \<! [ [] CDATA</span><span class="sxs-lookup"><span data-stu-id="c239b-256">If `text` is either `null` or `String.Empty`, this method writes an empty CDATA block, for example \<![CDATA[]</span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c239b-257">The text would result in a non-well formed XML document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-257">The text would result in a non-well formed XML document.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c239b-258">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-258">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteCharEntity (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCharEntity(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCharEntity (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCharEntity(char ch);" />
      <MemberSignature Language="F#" Value="override this.WriteCharEntity : char -&gt; unit" Usage="xmlTextWriter.WriteCharEntity ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="c239b-259">Unicode character for which to generate a character entity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-259">Unicode character for which to generate a character entity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c239b-260">Forces the generation of a character entity for the specified Unicode character value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-260">Forces the generation of a character entity for the specified Unicode character value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-261">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-261">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-262">Este método escribe el carácter Unicode en formato de referencia de entidad de carácter hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="c239b-262">This method writes the Unicode character in hexadecimal character entity reference format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c239b-263">En el ejemplo siguiente se usa el `WriteCharEntity` método para escribir una dirección de correo electrónico.</span><span class="sxs-lookup"><span data-stu-id="c239b-263">The following example uses the `WriteCharEntity` method to write an email address.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c239b-264">The character is in the surrogate pair character range, <see langword="0xd800" /> - <see langword="0xdfff" />; or the text would result in a non-well formed XML document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-264">The character is in the surrogate pair character range, <see langword="0xd800" /> - <see langword="0xdfff" />; or the text would result in a non-well formed XML document.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c239b-265">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-265">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteChars">
      <MemberSignature Language="C#" Value="public override void WriteChars (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteChars(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteChars (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteChars(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteChars : char[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteChars (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c239b-266">Character array containing the text to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-266">Character array containing the text to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="c239b-267">The position in the buffer indicating the start of the text to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-267">The position in the buffer indicating the start of the text to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c239b-268">The number of characters to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-268">The number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c239b-269">Writes text one buffer at a time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-269">Writes text one buffer at a time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-270">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-270">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-271">Este método se puede utilizar para escribir grandes cantidades de un búfer de texto a la vez.</span><span class="sxs-lookup"><span data-stu-id="c239b-271">This method can be used to write large amounts of text one buffer at a time.</span></span>  
  
 <span data-ttu-id="c239b-272">Debe realizarse un tratamiento especial para garantizar la `WriteChars` método no dividir los caracteres de par suplente en varias escrituras en el búfer.</span><span class="sxs-lookup"><span data-stu-id="c239b-272">Special handling must be done to ensure the `WriteChars` method does not split surrogate pair characters across multiple buffer writes.</span></span> <span data-ttu-id="c239b-273">La especificación XML define los intervalos válidos para los pares suplentes.</span><span class="sxs-lookup"><span data-stu-id="c239b-273">The XML specification defines the valid ranges for surrogate pairs.</span></span>  
  
 <span data-ttu-id="c239b-274">Se produce una excepción si se escriben caracteres de pares suplentes que se crearán los pares de caracteres suplentes que se va a dividir en el búfer.</span><span class="sxs-lookup"><span data-stu-id="c239b-274">An exception is thrown if surrogate pair characters are written that would result in the surrogate pair characters being split in the buffer.</span></span>  
  
   
  
## Examples  
 [!code-csharp[XmlTextWriter.WriteChars#1](~/samples/snippets/csharp/VS_Snippets_Data/xmltextwriter.writechars/cs/xmlwriterwritecharsexample.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c239b-275">
            <paramref name="buffer" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-275">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c239b-276">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-276">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="c239b-277">-or-  The buffer length minus <paramref name="index" /> is less than <paramref name="count" />; the call results in surrogate pair characters being split or an invalid surrogate pair being written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-277">-or-  The buffer length minus <paramref name="index" /> is less than <paramref name="count" />; the call results in surrogate pair characters being split or an invalid surrogate pair being written.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c239b-278">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-278">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteComment">
      <MemberSignature Language="C#" Value="public override void WriteComment (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteComment(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteComment (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteComment(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteComment : string -&gt; unit" Usage="xmlTextWriter.WriteComment text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="c239b-279">Text to place inside the comment.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-279">Text to place inside the comment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c239b-280">Writes out a comment &lt;!--...--&gt; containing the specified text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-280">Writes out a comment &lt;!--...--&gt; containing the specified text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-281">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-281">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-282">Si `text` sea `null` o `String.Empty`, este método escribe un `Comment` sin datos de contenido, por ejemplo \<!--->.</span><span class="sxs-lookup"><span data-stu-id="c239b-282">If `text` is either `null` or `String.Empty`, this method writes a `Comment` with no data content, for example \<!---->.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c239b-283">En el ejemplo siguiente se escribe un archivo XML que representa un libro.</span><span class="sxs-lookup"><span data-stu-id="c239b-283">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c239b-284">The text would result in a non-well formed XML document</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-284">The text would result in a non-well formed XML document</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c239b-285">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-285">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDocType">
      <MemberSignature Language="C#" Value="public override void WriteDocType (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteDocType(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteDocType (name As String, pubid As String, sysid As String, subset As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteDocType(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberSignature Language="F#" Value="override this.WriteDocType : string * string * string * string -&gt; unit" Usage="xmlTextWriter.WriteDocType (name, pubid, sysid, subset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pubid" Type="System.String" />
        <Parameter Name="sysid" Type="System.String" />
        <Parameter Name="subset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c239b-286">The name of the DOCTYPE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-286">The name of the DOCTYPE.</span>
          </span>
          <span data-ttu-id="c239b-287">This must be non-empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-287">This must be non-empty.</span>
          </span>
        </param>
        <param name="pubid">
          <span data-ttu-id="c239b-288">If non-null it also writes PUBLIC "pubid" "sysid" where <c>pubid</c> and <c>sysid</c> are replaced with the value of the given arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-288">If non-null it also writes PUBLIC "pubid" "sysid" where <c>pubid</c> and <c>sysid</c> are replaced with the value of the given arguments.</span>
          </span>
        </param>
        <param name="sysid">
          <span data-ttu-id="c239b-289">If <c>pubid</c> is null and <c>sysid</c> is non-null it writes SYSTEM "sysid" where <c>sysid</c> is replaced with the value of this argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-289">If <c>pubid</c> is null and <c>sysid</c> is non-null it writes SYSTEM "sysid" where <c>sysid</c> is replaced with the value of this argument.</span>
          </span>
        </param>
        <param name="subset">
          <span data-ttu-id="c239b-290">If non-null it writes [subset] where subset is replaced with the value of this argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-290">If non-null it writes [subset] where subset is replaced with the value of this argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c239b-291">Writes the DOCTYPE declaration with the specified name and optional attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-291">Writes the DOCTYPE declaration with the specified name and optional attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-292">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-292">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-293">Este método no comprueba los caracteres no válidos en `pubid`, `sysid` o `subset`.</span><span class="sxs-lookup"><span data-stu-id="c239b-293">This method does not check for invalid characters in `pubid`, `sysid` or `subset`.</span></span> <span data-ttu-id="c239b-294">No comprueba que el subconjunto interno está bien formado.</span><span class="sxs-lookup"><span data-stu-id="c239b-294">It also does not check that the internal subset is well-formed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c239b-295">El <xref:System.Xml.XmlTextWriter> no valida los datos que se pasen a la <xref:System.Xml.XmlTextWriter.WriteDocType%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c239b-295">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> method.</span></span> <span data-ttu-id="c239b-296">No debe pasar datos arbitrarios a este método.</span><span class="sxs-lookup"><span data-stu-id="c239b-296">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c239b-297">En el ejemplo siguiente se escribe un archivo XML que representa un libro.</span><span class="sxs-lookup"><span data-stu-id="c239b-297">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c239b-298">This method was called outside the prolog (after the root element).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-298">This method was called outside the prolog (after the root element).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c239b-299">
            <paramref name="name" /> is <see langword="null" /> or <see langword="String.Empty" />  -or-  the value for <paramref name="name" /> would result in invalid XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-299">
              <paramref name="name" /> is <see langword="null" /> or <see langword="String.Empty" />  -or-  the value for <paramref name="name" /> would result in invalid XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttribute">
      <MemberSignature Language="C#" Value="public override void WriteEndAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndAttribute ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndAttribute();" />
      <MemberSignature Language="F#" Value="override this.WriteEndAttribute : unit -&gt; unit" Usage="xmlTextWriter.WriteEndAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c239b-300">Closes the previous <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" /> call.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-300">Closes the previous <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" /> call.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-301">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-301">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-302">Si se llama a `WriteStartAttribute`, puede cerrar el atributo mediante este método.</span><span class="sxs-lookup"><span data-stu-id="c239b-302">If you call `WriteStartAttribute`, you can close the attribute with this method.</span></span>  
  
 <span data-ttu-id="c239b-303">También puede cerrar el atributo mediante una llamada a `WriteStartAttribute` nuevo, una llamada a <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, o llamar a <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.</span><span class="sxs-lookup"><span data-stu-id="c239b-303">You can also close the attribute by calling `WriteStartAttribute` again, calling <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, or calling <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c239b-304">En el ejemplo siguiente se escribe un libro.</span><span class="sxs-lookup"><span data-stu-id="c239b-304">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocument">
      <MemberSignature Language="C#" Value="public override void WriteEndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndDocument();" />
      <MemberSignature Language="F#" Value="override this.WriteEndDocument : unit -&gt; unit" Usage="xmlTextWriter.WriteEndDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c239b-305">Closes any open elements or attributes and puts the writer back in the Start state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-305">Closes any open elements or attributes and puts the writer back in the Start state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-306">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-306">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c239b-307">En el ejemplo siguiente se escribe un archivo XML que representa un libro.</span><span class="sxs-lookup"><span data-stu-id="c239b-307">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c239b-308">The XML document is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-308">The XML document is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElement">
      <MemberSignature Language="C#" Value="public override void WriteEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndElement();" />
      <MemberSignature Language="F#" Value="override this.WriteEndElement : unit -&gt; unit" Usage="xmlTextWriter.WriteEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c239b-309">Closes one element and pops the corresponding namespace scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-309">Closes one element and pops the corresponding namespace scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-310">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-310">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-311">Si el elemento no incluye ningún contenido un valor bajo la etiqueta de cierre "/ >" se escribe; en caso contrario, se escribe una etiqueta de cierre completa.</span><span class="sxs-lookup"><span data-stu-id="c239b-311">If the element contains no content a short end tag "/>" is written; otherwise a full end tag is written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c239b-312">En el ejemplo siguiente se escribe un archivo XML que representa un libro.</span><span class="sxs-lookup"><span data-stu-id="c239b-312">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRef">
      <MemberSignature Language="C#" Value="public override void WriteEntityRef (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEntityRef(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEntityRef (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEntityRef(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteEntityRef : string -&gt; unit" Usage="xmlTextWriter.WriteEntityRef name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c239b-313">Name of the entity reference.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-313">Name of the entity reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c239b-314">Writes out an entity reference as <see langword="&amp;name;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-314">Writes out an entity reference as <see langword="&amp;name;" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-315">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-315">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c239b-316">En el ejemplo siguiente se escribe un archivo XML que representa un libro.</span><span class="sxs-lookup"><span data-stu-id="c239b-316">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c239b-317">The text would result in a non-well formed XML document or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-317">The text would result in a non-well formed XML document or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElement">
      <MemberSignature Language="C#" Value="public override void WriteFullEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteFullEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteFullEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteFullEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteFullEndElement();" />
      <MemberSignature Language="F#" Value="override this.WriteFullEndElement : unit -&gt; unit" Usage="xmlTextWriter.WriteFullEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c239b-318">Closes one element and pops the corresponding namespace scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-318">Closes one element and pops the corresponding namespace scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-319">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-319">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-320">Este método siempre escribe la etiqueta de cierre completa.</span><span class="sxs-lookup"><span data-stu-id="c239b-320">This method always writes the full end tag.</span></span> <span data-ttu-id="c239b-321">Esto es útil cuando se trabaja con elementos que deben incluir una etiqueta de cierre completa.</span><span class="sxs-lookup"><span data-stu-id="c239b-321">This is useful when dealing with elements that must include a full end tag.</span></span> <span data-ttu-id="c239b-322">Por ejemplo, los exploradores esperan que los bloques de script HTML se cierren con " \< /script >".</span><span class="sxs-lookup"><span data-stu-id="c239b-322">For example, browsers expect HTML script blocks to be closed with "\</script>".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c239b-323">En el ejemplo siguiente se escribe un elemento sin contenido.</span><span class="sxs-lookup"><span data-stu-id="c239b-323">The following example writes out an element with no content.</span></span> <span data-ttu-id="c239b-324">Se utiliza WriteFullEndElement para escribir la etiqueta de elemento de cierre completa.</span><span class="sxs-lookup"><span data-stu-id="c239b-324">It uses WriteFullEndElement to write the full end element tag.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteName">
      <MemberSignature Language="C#" Value="public override void WriteName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteName : string -&gt; unit" Usage="xmlTextWriter.WriteName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c239b-325">Name to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-325">Name to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c239b-326">Writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-326">Writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-327">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-327">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-328">Si <xref:System.Xml.XmlTextWriter.Namespaces%2A> está establecido en `true`, `WriteName` también comprueba que el nombre sea también válido de acuerdo con los espacios de nombres de W3C en la recomendación de XML.</span><span class="sxs-lookup"><span data-stu-id="c239b-328">If <xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`, `WriteName` also checks that the name is also valid according to the W3C Namespaces in XML recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c239b-329">
            <paramref name="name" /> is not a valid XML name; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-329">
              <paramref name="name" /> is not a valid XML name; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNmToken">
      <MemberSignature Language="C#" Value="public override void WriteNmToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNmToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteNmToken (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNmToken(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteNmToken : string -&gt; unit" Usage="xmlTextWriter.WriteNmToken name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c239b-330">Name to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-330">Name to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c239b-331">Writes out the specified name, ensuring it is a valid <see langword="NmToken" /> according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-331">Writes out the specified name, ensuring it is a valid <see langword="NmToken" /> according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-332">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-332">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c239b-333">
            <paramref name="name" /> is not a valid <see langword="NmToken" />; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-333">
              <paramref name="name" /> is not a valid <see langword="NmToken" />; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstruction">
      <MemberSignature Language="C#" Value="public override void WriteProcessingInstruction (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteProcessingInstruction(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteProcessingInstruction (name As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteProcessingInstruction(System::String ^ name, System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteProcessingInstruction : string * string -&gt; unit" Usage="xmlTextWriter.WriteProcessingInstruction (name, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c239b-334">Name of the processing instruction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-334">Name of the processing instruction.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="c239b-335">Text to include in the processing instruction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-335">Text to include in the processing instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c239b-336">Writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-336">Writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-337">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-337">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-338">Si `text` sea `null` o `String.Empty`, este método escribe un `ProcessingInstruction` sin datos de contenido, por ejemplo \<? nombre? >.</span><span class="sxs-lookup"><span data-stu-id="c239b-338">If `text` is either `null` or `String.Empty`, this method writes a `ProcessingInstruction` with no data content, for example \<?name?>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c239b-339">En el ejemplo siguiente se escribe un archivo XML que representa un libro.</span><span class="sxs-lookup"><span data-stu-id="c239b-339">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c239b-340">The text would result in a non-well formed XML document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-340">The text would result in a non-well formed XML document.</span>
          </span>
          <span data-ttu-id="c239b-341">
            <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-341">
              <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
          <span data-ttu-id="c239b-342">This method is being used to create an XML declaration after <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> has already been called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-342">This method is being used to create an XML declaration after <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> has already been called.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedName">
      <MemberSignature Language="C#" Value="public override void WriteQualifiedName (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteQualifiedName(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteQualifiedName (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteQualifiedName(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteQualifiedName : string * string -&gt; unit" Usage="xmlTextWriter.WriteQualifiedName (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="c239b-343">The local name to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-343">The local name to write.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="c239b-344">The namespace URI to associate with the name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-344">The namespace URI to associate with the name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c239b-345">Writes out the namespace-qualified name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-345">Writes out the namespace-qualified name.</span>
          </span>
          <span data-ttu-id="c239b-346">This method looks up the prefix that is in scope for the given namespace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-346">This method looks up the prefix that is in scope for the given namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-347">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-347">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-348">Por ejemplo, el siguiente código de Microsoft Visual C#:</span><span class="sxs-lookup"><span data-stu-id="c239b-348">For example, the following Microsoft Visual C# code:</span></span>  
  
```csharp  
writer.Formatting = Formatting.Indented;  
writer.WriteStartElement("root");  
 writer.WriteAttributeString("xmlns","x",null,"urn:abc");  
 writer.WriteStartElement("item");  
 writer.WriteStartAttribute("href",null);  
 writer.WriteString("#");  
 writer.WriteQualifiedName("test","urn:abc");  
 writer.WriteEndAttribute();  
 writer.WriteEndElement();  
 writer.WriteEndElement();  
 writer.Close();  
```  
  
 <span data-ttu-id="c239b-349">Genera el siguiente resultado:</span><span class="sxs-lookup"><span data-stu-id="c239b-349">Generates the following output:</span></span>  
  
```xml  
<root xmlns:x="urn:abc">  
 <item href="#x:test"/>  
 </root>  
```  
  
 <span data-ttu-id="c239b-350">Si `ns` se generan asignaciones para el espacio de nombres actual de forma predeterminada, ningún prefijo.</span><span class="sxs-lookup"><span data-stu-id="c239b-350">If `ns` maps to the current default namespace, no prefix is generated.</span></span>  
  
 <span data-ttu-id="c239b-351">Al escribir valores de atributo, este método genera un prefijo si `ns` no se encuentra.</span><span class="sxs-lookup"><span data-stu-id="c239b-351">When writing attribute values, this method generates a prefix if `ns` is not found.</span></span> <span data-ttu-id="c239b-352">Al escribir el contenido del elemento, produce una excepción si `ns` no se encuentra.</span><span class="sxs-lookup"><span data-stu-id="c239b-352">When writing element content, it throws an exception if `ns` is not found.</span></span>  
  
 <span data-ttu-id="c239b-353">Si este sistema de escritura admite espacios de nombres (<xref:System.Xml.XmlTextWriter.Namespaces%2A> está establecido en `true`), este método también comprueba que el nombre es válido de acuerdo con los espacios de nombres de W3C en la recomendación de XML (http://www.w3.org/TR/REC-xml-names).</span><span class="sxs-lookup"><span data-stu-id="c239b-353">If this writer supports namespaces (<xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`), this method also checks that the name is valid according to the W3C Namespaces in XML recommendation (http://www.w3.org/TR/REC-xml-names).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c239b-354">En el ejemplo siguiente se escribe una parte de un esquema XSD.</span><span class="sxs-lookup"><span data-stu-id="c239b-354">The following example writes out a portion of a XSD schema.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c239b-355">
            <paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-355">
              <paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
          <span data-ttu-id="c239b-356">
            <paramref name="localName" /> is not a valid name according to the W3C Namespaces spec.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-356">
              <paramref name="localName" /> is not a valid name according to the W3C Namespaces spec.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRaw">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c239b-357">Writes raw markup manually.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-357">Writes raw markup manually.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-358">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-358">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(System::String ^ data);" />
      <MemberSignature Language="F#" Value="override this.WriteRaw : string -&gt; unit" Usage="xmlTextWriter.WriteRaw data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="c239b-359">String containing the text to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-359">String containing the text to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c239b-360">Writes raw markup manually from a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-360">Writes raw markup manually from a string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-361">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-361">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-362">Este método no escape de caracteres especiales.</span><span class="sxs-lookup"><span data-stu-id="c239b-362">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c239b-363">El <xref:System.Xml.XmlTextWriter> no valida los datos que se pasen a la <xref:System.Xml.XmlTextWriter.WriteRaw%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c239b-363">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="c239b-364">No debe pasar datos arbitrarios a este método.</span><span class="sxs-lookup"><span data-stu-id="c239b-364">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c239b-365">En el ejemplo siguiente se escribe una cadena con el `WriteRaw` método.</span><span class="sxs-lookup"><span data-stu-id="c239b-365">The following example writes a string using the `WriteRaw` method.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteRaw : char[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteRaw (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c239b-366">Character array containing the text to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-366">Character array containing the text to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="c239b-367">The position within the buffer indicating the start of the text to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-367">The position within the buffer indicating the start of the text to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c239b-368">The number of characters to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-368">The number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c239b-369">Writes raw markup manually from a character buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-369">Writes raw markup manually from a character buffer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-370">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-370">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-371">Este método no escape de caracteres especiales.</span><span class="sxs-lookup"><span data-stu-id="c239b-371">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c239b-372">El <xref:System.Xml.XmlTextWriter> no valida los datos que se pasen a la <xref:System.Xml.XmlTextWriter.WriteRaw%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c239b-372">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="c239b-373">No debe pasar datos arbitrarios a este método.</span><span class="sxs-lookup"><span data-stu-id="c239b-373">You should not pass arbitrary data to this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c239b-374">
            <paramref name="buffer" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-374">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c239b-375">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-375">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="c239b-376">-or-  The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-376">-or-  The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public override void WriteStartAttribute (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartAttribute(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartAttribute (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteStartAttribute : string * string * string -&gt; unit" Usage="xmlTextWriter.WriteStartAttribute (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="c239b-377">
            <see langword="Namespace" /> prefix of the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-377">
              <see langword="Namespace" /> prefix of the attribute.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="c239b-378">
            <see langword="LocalName" /> of the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-378">
              <see langword="LocalName" /> of the attribute.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="c239b-379">
            <see langword="NamespaceURI" /> of the attribute</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-379">
              <see langword="NamespaceURI" /> of the attribute</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c239b-380">Writes the start of an attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-380">Writes the start of an attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-381">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-381">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-382">Se trata de una versión más avanzada de <xref:System.Xml.XmlWriter.WriteAttributeString%2A> que le permite escribir un valor de atributo con varios métodos de escritura, como <xref:System.Xml.XmlTextWriter.WriteString%2A>.</span><span class="sxs-lookup"><span data-stu-id="c239b-382">This is a more advanced version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> that allows you to write an attribute value using multiple write methods, such as <xref:System.Xml.XmlTextWriter.WriteString%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c239b-383">En el ejemplo siguiente se escribe un libro.</span><span class="sxs-lookup"><span data-stu-id="c239b-383">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c239b-384">
            <paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-384">
              <paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocument">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c239b-385">Writes the XML declaration with the version "1.0".</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-385">Writes the XML declaration with the version "1.0".</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-386">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-386">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument();" />
      <MemberSignature Language="F#" Value="override this.WriteStartDocument : unit -&gt; unit" Usage="xmlTextWriter.WriteStartDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c239b-387">Writes the XML declaration with the version "1.0".</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-387">Writes the XML declaration with the version "1.0".</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-388">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-388">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-389">El nivel de codificación del documento está determinado por cómo se implementa el sistema de escritura.</span><span class="sxs-lookup"><span data-stu-id="c239b-389">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="c239b-390">Por ejemplo, si un <xref:System.Text.Encoding> se especifica en el `XmlTextWriter` constructor, esto determina el valor del atributo de codificación.</span><span class="sxs-lookup"><span data-stu-id="c239b-390">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span> <span data-ttu-id="c239b-391">Este método no crea un atributo independiente.</span><span class="sxs-lookup"><span data-stu-id="c239b-391">This method does not create a standalone attribute.</span></span>  
  
 <span data-ttu-id="c239b-392">Cuando `WriteStartDocument` se llama el sistema de escritura se comprueba si está escribiendo un documento XML bien formado.</span><span class="sxs-lookup"><span data-stu-id="c239b-392">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="c239b-393">Por ejemplo, comprueba que la declaración XML es el primer nodo, que uno y solo un elemento de nivel raíz existe y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="c239b-393">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="c239b-394">Si no se llama a este método, el sistema de escritura supone un fragmento XML se escribe y aplica ninguna regla de nivel de raíz.</span><span class="sxs-lookup"><span data-stu-id="c239b-394">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="c239b-395">Si `WriteStartDocument` se ha llamado y, a continuación, el <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> método se usa para crear otra declaración XML, se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="c239b-395">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c239b-396">En el ejemplo siguiente se escribe un archivo XML que representa un libro.</span><span class="sxs-lookup"><span data-stu-id="c239b-396">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c239b-397">This is not the first write method called after the constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-397">This is not the first write method called after the constructor.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument (standalone As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument(bool standalone);" />
      <MemberSignature Language="F#" Value="override this.WriteStartDocument : bool -&gt; unit" Usage="xmlTextWriter.WriteStartDocument standalone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="standalone">
          <span data-ttu-id="c239b-398">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no".</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-398">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c239b-399">Writes the XML declaration with the version "1.0" and the standalone attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-399">Writes the XML declaration with the version "1.0" and the standalone attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-400">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-400">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-401">El nivel de codificación del documento está determinado por cómo se implementa el sistema de escritura.</span><span class="sxs-lookup"><span data-stu-id="c239b-401">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="c239b-402">Por ejemplo, si un <xref:System.Text.Encoding> se especifica en el `XmlTextWriter` constructor, esto determina el valor del atributo de codificación.</span><span class="sxs-lookup"><span data-stu-id="c239b-402">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span>  
  
 <span data-ttu-id="c239b-403">Cuando `WriteStartDocument` se llama el sistema de escritura se comprueba si está escribiendo un documento XML bien formado.</span><span class="sxs-lookup"><span data-stu-id="c239b-403">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="c239b-404">Por ejemplo, comprueba que la declaración XML es el primer nodo, que uno y solo un elemento de nivel raíz existe y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="c239b-404">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="c239b-405">Si no se llama a este método, el sistema de escritura supone un fragmento XML se escribe y aplica ninguna regla de nivel de raíz.</span><span class="sxs-lookup"><span data-stu-id="c239b-405">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="c239b-406">Si `WriteStartDocument` se ha llamado y, a continuación, el <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> método se usa para crear otra declaración XML, se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="c239b-406">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c239b-407">This is not the first write method called after the constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-407">This is not the first write method called after the constructor.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public override void WriteStartElement (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartElement(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartElement (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartElement(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteStartElement : string * string * string -&gt; unit" Usage="xmlTextWriter.WriteStartElement (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="c239b-408">The namespace prefix of the element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-408">The namespace prefix of the element.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="c239b-409">The local name of the element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-409">The local name of the element.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="c239b-410">The namespace URI to associate with the element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-410">The namespace URI to associate with the element.</span>
          </span>
          <span data-ttu-id="c239b-411">If this namespace is already in scope and has an associated prefix then the writer automatically writes that prefix also.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-411">If this namespace is already in scope and has an associated prefix then the writer automatically writes that prefix also.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c239b-412">Writes the specified start tag and associates it with the given namespace and prefix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-412">Writes the specified start tag and associates it with the given namespace and prefix.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-413">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-413">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-414">Después de llamar a este método puede escribir atributos o crear contenido usando <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, o <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> para los elementos secundarios.</span><span class="sxs-lookup"><span data-stu-id="c239b-414">After calling this method you can either write attributes or create content using <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, or <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> for child elements.</span></span> <span data-ttu-id="c239b-415">Puede cerrar el elemento con <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> en ese momento se escribe una etiqueta de cierre.</span><span class="sxs-lookup"><span data-stu-id="c239b-415">You can close the element with <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> at which time an end tag is written out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c239b-416">En el ejemplo siguiente se escribe un libro.</span><span class="sxs-lookup"><span data-stu-id="c239b-416">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c239b-417">The writer is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-417">The writer is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteState">
      <MemberSignature Language="C#" Value="public override System.Xml.WriteState WriteState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.WriteState WriteState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.WriteState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property WriteState As WriteState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::WriteState WriteState { System::Xml::WriteState get(); };" />
      <MemberSignature Language="F#" Value="member this.WriteState : System.Xml.WriteState" Usage="System.Xml.XmlTextWriter.WriteState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.WriteState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c239b-418">Gets the state of the writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-418">Gets the state of the writer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c239b-419">Uno de los valores de <see cref="T:System.Xml.WriteState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-419">One of the <see cref="T:System.Xml.WriteState" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-420">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-420">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public override void WriteString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteString (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteString : string -&gt; unit" Usage="xmlTextWriter.WriteString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="c239b-421">Text to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-421">Text to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c239b-422">Writes the given text content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-422">Writes the given text content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-423">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-423">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-424">`WriteString` hace lo siguiente</span><span class="sxs-lookup"><span data-stu-id="c239b-424">`WriteString` does the following</span></span>  
  
-   <span data-ttu-id="c239b-425">Los caracteres `&`, `<`, y `>` se reemplazan por `&amp;`, `&lt;`, y `&gt;`, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="c239b-425">The characters `&`, `<`, and `>` are replaced with `&amp;`, `&lt;`, and `&gt;`, respectively.</span></span>  
  
-   <span data-ttu-id="c239b-426">Valores de caracteres en el x-0x1F del intervalo comprendido entre 0 (excluidos los caracteres de espacio en blanco 0 x 9, 0xA y 0xD) se reemplazan por entidades de caracteres numéricos (`&#0;` a través de `&#0x1F`).</span><span class="sxs-lookup"><span data-stu-id="c239b-426">Character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD) are replaced with numeric character entities (`&#0;` through `&#0x1F`).</span></span>  
  
-   <span data-ttu-id="c239b-427">Si `WriteString` se llama en el contexto de un valor de atributo, las comillas dobles y simples se reemplazan con `&quot;` y `&apos;` respectivamente.</span><span class="sxs-lookup"><span data-stu-id="c239b-427">If `WriteString` is called in the context of an attribute value, double and single quotes are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
 <span data-ttu-id="c239b-428">Por ejemplo, esta cadena de entrada `test<item>test` se escribe como</span><span class="sxs-lookup"><span data-stu-id="c239b-428">For example, this input string `test<item>test` is written as</span></span>  
  
```  
test&lt;item&gt;test  
```  
  
 <span data-ttu-id="c239b-429">Si `text` sea `null` o `String.Empty`, este método escribe un nodo de texto sin contenido de datos.</span><span class="sxs-lookup"><span data-stu-id="c239b-429">If `text` is either `null` or `String.Empty`, this method writes a text node with no data content.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c239b-430">En el ejemplo siguiente se escribe un fragmento XML.</span><span class="sxs-lookup"><span data-stu-id="c239b-430">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c239b-431">The text string contains an invalid surrogate pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-431">The text string contains an invalid surrogate pair.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteSurrogateCharEntity (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteSurrogateCharEntity(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteSurrogateCharEntity (lowChar As Char, highChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteSurrogateCharEntity(char lowChar, char highChar);" />
      <MemberSignature Language="F#" Value="override this.WriteSurrogateCharEntity : char * char -&gt; unit" Usage="xmlTextWriter.WriteSurrogateCharEntity (lowChar, highChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar">
          <span data-ttu-id="c239b-432">The low surrogate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-432">The low surrogate.</span>
          </span>
          <span data-ttu-id="c239b-433">This must be a value between <see langword="0xDC00" /> and <see langword="0xDFFF" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-433">This must be a value between <see langword="0xDC00" /> and <see langword="0xDFFF" />.</span>
          </span>
        </param>
        <param name="highChar">
          <span data-ttu-id="c239b-434">The high surrogate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-434">The high surrogate.</span>
          </span>
          <span data-ttu-id="c239b-435">This must be a value between <see langword="0xD800" /> and <see langword="0xDBFF" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-435">This must be a value between <see langword="0xD800" /> and <see langword="0xDBFF" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c239b-436">Generates and writes the surrogate character entity for the surrogate character pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-436">Generates and writes the surrogate character entity for the surrogate character pair.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-437">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-437">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-438">Este método sólo es aplicable en sistemas que utilizan la codificación UTF-16.</span><span class="sxs-lookup"><span data-stu-id="c239b-438">This method is only applicable on systems that use UTF-16 encoding.</span></span>  
  
 <span data-ttu-id="c239b-439">La entidad de carácter suplente se escribe en formato hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="c239b-439">The surrogate character entity is written in hexadecimal format.</span></span> <span data-ttu-id="c239b-440">El intervalo de caracteres suplentes es `#x10000` a `#x10FFFF`.</span><span class="sxs-lookup"><span data-stu-id="c239b-440">The range for surrogate characters is `#x10000` to `#x10FFFF`.</span></span> <span data-ttu-id="c239b-441">La siguiente fórmula se utiliza para generar la entidad de carácter suplente: (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.</span><span class="sxs-lookup"><span data-stu-id="c239b-441">The following formula is used to generate the surrogate character entity: (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.</span></span>  
  
 <span data-ttu-id="c239b-442">Para HTML y XML, el juego de caracteres del documento (y, por tanto, la notación de las referencias de carácter numérico) se basan en UCS [ISO-10646].</span><span class="sxs-lookup"><span data-stu-id="c239b-442">For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646].</span></span> <span data-ttu-id="c239b-443">Una referencia de carácter numérico individual en un documento de origen puede, por tanto, en algunos casos se corresponde con dos unidades de 16 bits en una cadena (un suplente alto y un suplente bajo).</span><span class="sxs-lookup"><span data-stu-id="c239b-443">A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate).</span></span> <span data-ttu-id="c239b-444">Estas unidades de 16 bits se conocen como un par suplente.</span><span class="sxs-lookup"><span data-stu-id="c239b-444">These 16-bit units are referred to as a surrogate pair.</span></span>  
  
 <span data-ttu-id="c239b-445">Para obtener más información sobre suplentes o caracteres, consulte la sección 3.7 del Unicode 3.0/Unicode 2.0 estándar que se encuentra en http://www.unicode.org, o la sección 2.2 de la recomendación W3C XML 1.0 se encuentra en http://www.w3.org/TR/REC-xml#charsets.</span><span class="sxs-lookup"><span data-stu-id="c239b-445">For more information regarding surrogates or characters, refer to section 3.7 of the Unicode 3.0/Unicode 2.0 standard located at http://www.unicode.org, or section 2.2 of the W3C XML 1.0 Recommendation located at http://www.w3.org/TR/REC-xml#charsets.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="c239b-446">An invalid surrogate character pair was passed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-446">An invalid surrogate character pair was passed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespace">
      <MemberSignature Language="C#" Value="public override void WriteWhitespace (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteWhitespace(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteWhitespace (ws As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteWhitespace(System::String ^ ws);" />
      <MemberSignature Language="F#" Value="override this.WriteWhitespace : string -&gt; unit" Usage="xmlTextWriter.WriteWhitespace ws" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ws">
          <span data-ttu-id="c239b-447">The string of white space characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-447">The string of white space characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c239b-448">Writes out the given white space.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-448">Writes out the given white space.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-449">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-449">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-450">Este método se usa para dar formato manualmente el documento.</span><span class="sxs-lookup"><span data-stu-id="c239b-450">This method is used to manually format your document.</span></span> <span data-ttu-id="c239b-451">Use la <xref:System.Xml.XmlTextWriter.Formatting%2A> propiedad para que tenga el escritor de dar formato al resultado automáticamente.</span><span class="sxs-lookup"><span data-stu-id="c239b-451">Use the <xref:System.Xml.XmlTextWriter.Formatting%2A> property to have the writer format the output automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c239b-452">En el ejemplo siguiente se usa el `WriteWhitespace` método para controlar cómo se formatea el archivo.</span><span class="sxs-lookup"><span data-stu-id="c239b-452">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c239b-453">The string contains non-white space characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-453">The string contains non-white space characters.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlTextWriter.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlTextWriter.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c239b-454">Gets the current <see langword="xml:lang" /> scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-454">Gets the current <see langword="xml:lang" /> scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c239b-455">Actual <see langword="xml:lang" /> o <see langword="null" /> si no hay ninguna <see langword="xml:lang" /> en el ámbito actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-455">The current <see langword="xml:lang" /> or <see langword="null" /> if there is no <see langword="xml:lang" /> in the current scope.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-456">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-456">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-457">Esta propiedad permite a un componente averiguar el estado de otro componente ha dejado el sistema de escritura.</span><span class="sxs-lookup"><span data-stu-id="c239b-457">This property allows one component to find out what state another component has left the writer in.</span></span> <span data-ttu-id="c239b-458">Por ejemplo, quizás un componente desee comunicar a otro qué texto de Ayuda de lenguaje para generar.</span><span class="sxs-lookup"><span data-stu-id="c239b-458">For example, perhaps one component wants to tell another which language help text to generate.</span></span> <span data-ttu-id="c239b-459">La información de idioma se comunica escribiendo un `xml:lang` atributo.</span><span class="sxs-lookup"><span data-stu-id="c239b-459">The language information is communicated by writing an `xml:lang` attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlTextWriter.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c239b-460">Gets an <see cref="T:System.Xml.XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-460">Gets an <see cref="T:System.Xml.XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c239b-461">Un <see langword="XmlSpace" /> que representa el actual <see langword="xml:space" /> ámbito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-461">An <see langword="XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span>
          </span>
          <span data-ttu-id="c239b-462">
            <list type="table">
              <listheader>
                <term> Valor </term>
                <description> significado </description>
              </listheader>
              <item>
                <term> ninguno </term>
                <description> esto es el valor predeterminado si no hay ningún <see langword="xml:space" /> ámbito existe.  </description>
              </item>
              <item>
                <term> Valor predeterminado </term>
                <description> el ámbito actual es <see langword="xml:space" />= "default".  </description>
              </item>
              <item>
                <term> Conservar </term>
                <description> el ámbito actual es <see langword="xml:space" />= "preserve".  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c239b-462">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> None  </term>
                  <description> This is the default if no <see langword="xml:space" /> scope exists.  </description>
                </item>
                <item>
                  <term> Default  </term>
                  <description> The current scope is <see langword="xml:space" />="default".  </description>
                </item>
                <item>
                  <term> Preserve  </term>
                  <description> The current scope is <see langword="xml:space" />="preserve".  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c239b-463">A partir de .NET Framework 2.0, le recomendamos que cree <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y la <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c239b-463">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c239b-464">Esta propiedad permite a un componente averiguar el estado en que otro componente ha dejado el sistema de escritura.</span><span class="sxs-lookup"><span data-stu-id="c239b-464">This property allows one component to find out in what state another component has left the writer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c239b-465">En el ejemplo siguiente se usa el `WriteWhitespace` método para controlar cómo se formatea el archivo.</span><span class="sxs-lookup"><span data-stu-id="c239b-465">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>