<Type Name="XmlValidatingReader" FullName="System.Xml.XmlValidatingReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a7e18e1fd6382545d9af186fd445a048879512af" />
    <Meta Name="ms.sourcegitcommit" Value="b15b8cf0f6dbc1504057c88969d9ef4b790891fe" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="05/11/2018" />
    <Meta Name="ms.locfileid" Value="34061627" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlValidatingReader : System.Xml.XmlReader, System.Xml.IXmlLineInfo, System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlValidatingReader extends System.Xml.XmlReader implements class System.Xml.IXmlLineInfo, class System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlValidatingReader" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlValidatingReader&#xA;Inherits XmlReader&#xA;Implements IXmlLineInfo, IXmlNamespaceResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlValidatingReader : System::Xml::XmlReader, System::Xml::IXmlLineInfo, System::Xml::IXmlNamespaceResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlReader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xml.IXmlLineInfo</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.IXmlNamespaceResolver</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("Use XmlReader created by XmlReader.Create() method using appropriate XmlReaderSettings instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa un lector que proporciona validación de definiciones de tipos de documentos (DTD), de esquemas reducidos de datos XML (esquemas XDR) y del lenguaje de definición de esquemas XML (esquemas XSD).  
  
 Esta clase está obsoleta. A partir de .NET Framework 2.0, se recomienda usar la clase <see cref="T:System.Xml.XmlReaderSettings" /> y el método <see cref="Overload:System.Xml.XmlReader.Create" /> para crear un lector XML de validación.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `XmlValidatingReader` implementa el <xref:System.Xml.XmlReader> clase y proporciona compatibilidad para la validación de datos. Use la <xref:System.Xml.XmlValidatingReader.Schemas%2A> propiedad para que el lector validar mediante archivos de esquema que se almacenan en caché en un <xref:System.Xml.Schema.XmlSchemaCollection>. El <xref:System.Xml.XmlValidatingReader.ValidationType%2A> propiedad especifica qué tipo de validación que debe realizar el lector. Si la propiedad se establece en ValidationType.None, crea un lector sin validación.  
  
 <xref:System.Xml.XmlValidatingReader> produce una <xref:System.Xml.XmlException> errores de análisis de XML. Después de que se produce una excepción, el estado del lector no es predecible. Por ejemplo, el tipo de nodo notificado puede ser diferente que el tipo de nodo real del nodo actual. Use la <xref:System.Xml.XmlValidatingReader.ReadState%2A> propiedad para comprobar si un lector está en estado de error.  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Esta clase tiene una petición de herencia. Plena confianza debe heredar de <see langword="XmlValidatingReader" />.</para>
    </block>
    <altmember cref="T:System.Xml.XmlReader" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see langword="XmlValidatingReader" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlValidatingReader (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlValidatingReader(System::Xml::XmlReader ^ reader);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see langword="XmlReader" /> en el que se va a leer durante la validación. La implementación actual solo admite <see cref="T:System.Xml.XmlTextReader" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see langword="XmlValidatingReader" /> que valida el contenido devuelto por el objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Todos los nodos devueltos desde el determinado `XmlReader` también se devuelven desde esta validación de lectura, así que no hay ninguna pérdida de información en el proceso. Se pueden agregar nuevos nodos que no se devolvió desde el lector subyacente por este lector (por ejemplo, los atributos predeterminados y los elementos secundarios de una referencia de entidad). Las propiedades establecidas en el dado `XmlTextReader` también se aplican a este lector de validación. Por ejemplo, si el lector proporcionado tiene establecido WhitespaceHandling.None, este lector de validación también omite los espacios en blanco.  
  
 Cuando se necesitan esquemas o definiciones de tipo de documento externo (DTD) para la validación, el <xref:System.Xml.XmlValidatingReader.XmlResolver%2A> conjuntos de propiedades el <xref:System.Xml.XmlResolver> objeto que se utiliza para resolver recursos externos.  
  
   
  
## Examples  
 En el ejemplo siguiente se valida dos documentos.  
  
 [!code-cpp[XmlValidatingReader.Cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.Cctor/CPP/valid_xsd2.cpp#1)]
 [!code-csharp[XmlValidatingReader.Cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.Cctor/CS/valid_xsd2.cs#1)]
 [!code-vb[XmlValidatingReader.Cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.Cctor/VB/valid_xsd2.vb#1)]  
  
 El ejemplo usa los archivos de entrada siguientes:  
  
 `notValidXSD.xml`  
  
 [!code-xml[XmlValidatingReader.Cctor#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.Cctor/XML/notvalidxsd.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[XmlValidatingReader.Cctor#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.Cctor/XML/books.xsd#3)]  
  
 `inlineXSD.xml`  
  
 [!code-xml[XmlValidatingReader.Cctor#4](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.Cctor/XML/inlinexsd.xml#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El lector especificado no es <see langword="XmlTextReader" />.</exception>
        <altmember cref="T:System.Xml.XmlTextReader" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlValidatingReader (System.IO.Stream xmlFragment, System.Xml.XmlNodeType fragType, System.Xml.XmlParserContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream xmlFragment, valuetype System.Xml.XmlNodeType fragType, class System.Xml.XmlParserContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlFragment As Stream, fragType As XmlNodeType, context As XmlParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlValidatingReader(System::IO::Stream ^ xmlFragment, System::Xml::XmlNodeType fragType, System::Xml::XmlParserContext ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlFragment" Type="System.IO.Stream" />
        <Parameter Name="fragType" Type="System.Xml.XmlNodeType" />
        <Parameter Name="context" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="xmlFragment">Flujo que contiene el fragmento de XML que se va a analizar.</param>
        <param name="fragType">
          <see cref="T:System.Xml.XmlNodeType" /> del fragmento de XML. Esto determina lo que puede contener el fragmento (vea la tabla que figura más abajo).</param>
        <param name="context">
          <see cref="T:System.Xml.XmlParserContext" /> en el que se analizará el fragmento de XML. Esto incluye el objeto <see cref="T:System.Xml.XmlNameTable" /> que se va a usar, la codificación, el ámbito de espacio de nombres, el <see langword="xml:lang" /> actual y el ámbito de <see langword="xml:space" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see langword="XmlValidatingReader" /> con los valores especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Este constructor analiza la cadena especificada como un fragmento de XML. Si el fragmento XML es un elemento o atributo, puede omitir las reglas de nivel de raíz para documentos XML correctos.  
  
 En la tabla siguiente se enumera los valores válidos para `fragType` y el modo en que el lector analiza cada uno de los tipos de nodo.  
  
|Tipo XmlNode|Fragmento puede contener|  
|-----------------|--------------------------|  
|Elemento|Cualquier contenido de elemento válido (por ejemplo, cualquier combinación de elementos, comentarios, instrucciones de procesamiento, cdata, texto y referencias a entidades).|  
|Atributo|El valor de un atributo (la parte dentro de las comillas).|  
|Documento|El contenido de un documento XML completo; Esto impone las reglas de nivel de documento.|  
  
 El lector utiliza los pasos siguientes para determinar la codificación de la secuencia:  
  
1.  Comprueba la <xref:System.Xml.XmlParserContext.Encoding%2A?displayProperty=nameWithType> propiedad para determinar la codificación.  
  
2.  Si el `Encoding` propiedad es `null`, el lector comprueba si existe una marca de orden de bytes al principio de la secuencia.  
  
3.  Si el `Encoding` propiedad es `null`y no se encuentra ninguna marca de orden de bytes, el lector se da por supuesto que la secuencia está codificada en UTF-8.  
  
 Si este lector va a realizar validaciones mediante definición de tipo de documento (DTD) (es decir, <xref:System.Xml.XmlValidatingReader.ValidationType%2A> está establecida en ValidationType.DTD o ValidationType.Auto), el `XmlParserContext` especificado en el constructor debe proporcionar toda la información de DocumentType necesaria.  
  
> [!NOTE]
>  No es posible validar un fragmento utilizando una DTD. Por definición, una DTD requiere un documento completo que se va a cargar para la validación.  
  
 Si este lector realiza validaciones mediante el uso de esquemas de lenguaje (XSD) de definición de esquemas XML o de datos XML reducidos (XDR), utilice la <xref:System.Xml.XmlValidatingReader.Schemas%2A> propiedad para especificar el <xref:System.Xml.Schema.XmlSchemaCollection> que contiene los esquemas (es decir, el `XmlParserContext` no es necesario proporcionar la información sobre DocumentType).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="fragType" /> no es uno de los tipos de nodo que se enumeran en la tabla que figura más abajo.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlValidatingReader (string xmlFragment, System.Xml.XmlNodeType fragType, System.Xml.XmlParserContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xmlFragment, valuetype System.Xml.XmlNodeType fragType, class System.Xml.XmlParserContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlFragment As String, fragType As XmlNodeType, context As XmlParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlValidatingReader(System::String ^ xmlFragment, System::Xml::XmlNodeType fragType, System::Xml::XmlParserContext ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlFragment" Type="System.String" />
        <Parameter Name="fragType" Type="System.Xml.XmlNodeType" />
        <Parameter Name="context" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="xmlFragment">Cadena que contiene el fragmento de XML que se va a analizar.</param>
        <param name="fragType">
          <see cref="T:System.Xml.XmlNodeType" /> del fragmento de XML. Esto determina también lo que puede contener la cadena del fragmento (vea la tabla que figura más abajo).</param>
        <param name="context">
          <see cref="T:System.Xml.XmlParserContext" /> en el que se analizará el fragmento de XML. Esto incluye el objeto <see cref="T:System.Xml.NameTable" /> que se va a usar, la codificación, el ámbito de espacio de nombres, el xml:lang actual y el ámbito de xml:space.</param>
        <summary>Inicializa una nueva instancia de la clase <see langword="XmlValidatingReader" /> con los valores especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Este constructor analiza la cadena especificada como un fragmento de XML. Si el fragmento XML es un elemento o atributo, puede omitir las reglas de nivel de raíz para documentos XML correctos. Este constructor puede controlar cadenas que devuelve <xref:System.Xml.XmlReader.ReadInnerXml%2A>.  
  
 En la tabla siguiente se enumera los valores válidos para `fragType` y el modo en que el lector analiza cada uno de los tipos de nodo.  
  
|Tipo XmlNode|Fragmento puede contener|  
|-----------------|--------------------------|  
|Elemento|Cualquier contenido de elemento válido (por ejemplo, cualquier combinación de elementos, comentarios, instrucciones de procesamiento, cdata, texto y referencias a entidades).|  
|Atributo|El valor de un atributo (la parte dentro de las comillas).|  
|Documento|El contenido de un documento XML completo; Esto impone las reglas de nivel de documento.|  
  
 Si este lector va a realizar validaciones mediante el uso de la definición de tipo de documento (DTD) (es decir, <xref:System.Xml.XmlValidatingReader.ValidationType%2A> está establecida en ValidationType.DTD o ValidationType.Auto), el `XmlParserContext` especificado en el constructor debe proporcionar toda la información de DocumentType necesaria.  
  
> [!NOTE]
>  No es posible validar un fragmento utilizando una DTD. Por definición DTD requiere un documento completo que se va a cargar para la validación.  
  
 Si este lector realiza validaciones mediante el uso de esquemas de lenguaje (XSD) de definición de esquemas XML o de datos XML reducidos (XDR), utilice la <xref:System.Xml.XmlValidatingReader.Schemas%2A> propiedad para especificar el <xref:System.Xml.Schema.XmlSchemaCollection> que contiene los esquemas (el `XmlParserContext` no es necesario proporcionar la información sobre DocumentType).  
  
   
  
## Examples  
 En el ejemplo siguiente se lee un fragmento XML. Usa un `XmlParserContext` y su <xref:System.Xml.XmlNamespaceManager> para controlar la coincidencia de espacio de nombres.  
  
 [!code-csharp[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="fragType" /> no es uno de los tipos de nodo que se enumeran en la tabla que figura más abajo.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="AttributeCount">
      <MemberSignature Language="C#" Value="public override int AttributeCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AttributeCount" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.AttributeCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AttributeCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int AttributeCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número de atributos del nodo actual.</summary>
        <value>Número de atributos del nodo actual. Este número incluye los atributos predeterminados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Esta propiedad es relevante para `Element`, `DocumentType`, y `XmlDeclaration` solo en nodos. (Otros tipos de nodo no tiene atributos.)  
  
   
  
## Examples  
 En el ejemplo siguiente se lee todos los elementos en el nodo raíz.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public override string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el identificador URI base del nodo actual.</summary>
        <value>Identificador URI base del nodo actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Un documento XML en red se compone de fragmentos de datos agregados mediante varios mecanismos de inclusión estándar de World Wide Web Consortium (W3C) y, por tanto, contiene nodos que proceden de distintos lugares. las entidades de definición (DTD) de tipo de documento son un ejemplo de esto, pero esto no se limita a las DTD. La base de URI indica dónde proceden estos nodos. Si no hay ningún URI base para los nodos que se devuelven (por ejemplo, se han analizado desde una cadena en memoria), se devuelve String.Empty.  
  
   
  
## Examples  
 En el ejemplo siguiente se analiza un archivo y muestra el URI base de cada nodo.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.BaseURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.BaseURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.BaseURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.BaseURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.BaseURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.BaseURI Example/VB/source.vb#1)]  
  
 En el ejemplo se utiliza el archivo `uri.xml`como entrada.  
  
 [!code-xml[Classic WebData XmlValidatingReader.BaseURI Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.BaseURI Example/XML/source.xml#2)]  
  
 El `style.xml` archivo contiene el texto XML `<style>hardcover</style>`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="CanReadBinaryContent">
      <MemberSignature Language="C#" Value="public override bool CanReadBinaryContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReadBinaryContent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.CanReadBinaryContent" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanReadBinaryContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReadBinaryContent { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si <see cref="T:System.Xml.XmlValidatingReader" /> implementa los métodos de lectura de contenido binario.</summary>
        <value>
          Es <see langword="true" /> si se implementan los métodos de lectura de contenido binario; en caso contrario, es <see langword="false" />. La clase <see cref="T:System.Xml.XmlValidatingReader" /> devuelve <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia...  
  
 El contenido binario lee métodos incluyen la <xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A>, <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A>, <xref:System.Xml.XmlValidatingReader.ReadElementContentAsBase64%2A>, y <xref:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex%2A> métodos.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="CanResolveEntity">
      <MemberSignature Language="C#" Value="public override bool CanResolveEntity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanResolveEntity" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.CanResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanResolveEntity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanResolveEntity { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si este lector puede analizar y resolver entidades.</summary>
        <value>
          Es <see langword="true" /> si el lector puede analizar y resolver entidades; en caso contrario, es <see langword="false" />. <see langword="XmlValidatingReader" /> siempre devuelve <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cambia la propiedad <see cref="P:System.Xml.XmlReader.ReadState" /> a Closed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Este método también libera los recursos utilizados durante la lectura. Si este lector se construyó utilizando una <xref:System.Xml.XmlTextReader>, este método también llama a `Close` en el lector subyacente. Si se construyó este lector mediante el uso de una secuencia, este método también llama a `Close` en la secuencia subyacente.  
  
 Si `Close` ya ha sido llamado, se realiza ninguna acción.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la profundidad del nodo actual en el documento XML.</summary>
        <value>Profundidad del nodo actual en el documento XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cada nodo con su profundidad, número de línea y posición de línea.  
  
 [!code-cpp[IXmlLineInfo#1](~/samples/snippets/cpp/VS_Snippets_Data/IXmlLineInfo/CPP/lineinfo.cpp#1)]
 [!code-csharp[IXmlLineInfo#1](~/samples/snippets/csharp/VS_Snippets_Data/IXmlLineInfo/CS/lineinfo.cs#1)]
 [!code-vb[IXmlLineInfo#1](~/samples/snippets/visualbasic/VS_Snippets_Data/IXmlLineInfo/VB/lineinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.IXmlLineInfo" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el atributo de codificación del documento.</summary>
        <value>Valor de codificación. Si no existe ningún atributo de codificación y no hay ninguna marca de orden de bytes, se usa el valor predeterminado UTF-8.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Cuando se lee alguna referencia externa (como la expansión de una entidad en un archivo de definición (DTD) de tipo de documento o leer un archivo de esquema) la propiedad de codificación se establece en el valor de codificación de la referencia externa. Si no se especifica la codificación en la referencia externa y no hay ninguna marca de orden de bytes, el valor predeterminado es UTF-8.  
  
 Se admiten todos los estándares de codificación que admite el sistema operativo subyacente.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="EntityHandling">
      <MemberSignature Language="C#" Value="public System.Xml.EntityHandling EntityHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.EntityHandling EntityHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.EntityHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityHandling As EntityHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::EntityHandling EntityHandling { System::Xml::EntityHandling get(); void set(System::Xml::EntityHandling value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.EntityHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que especifica cómo controla el lector las entidades.</summary>
        <value>Uno de los valores de <see cref="T:System.Xml.EntityHandling" />. Si no se especifica ningún valor <see langword="EntityHandling" />, se usa el valor predeterminado EntityHandling.ExpandEntities.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Esta propiedad puede modificarse y surte efecto después del próximo <xref:System.Xml.XmlValidatingReader.Read%2A> llamar.  
  
 Cuando `EntityHandling` se establece en `ExpandCharEntities`, valores de atributo sólo se normalizan parcialmente. El lector normaliza cada nodo de texto individual independientemente del contenido de los nodos de referencia a entidad adyacentes.  
  
 Para ilustrar la diferencia entre la entidad modos de control, tenga en cuenta el siguiente código XML:  
  
```xml  
<!DOCTYPE doc [<!ENTITY num "123">]>  
 <doc> &#65; &num; </doc>  
```  
  
 Cuando `EntityHandling` está establecido en `ExpandEntities` el nodo del elemento "doc" contiene un nodo de texto con el texto de entidad expandida:  
  
|Profundidad|NodeType|nombre|Valor|  
|-----------|--------------|----------|-----------|  
|1|Texto||UN 123|  
  
 Cuando `EntityHandling` está establecido en `ExpandCharEntites`, y <xref:System.Xml.XmlTextReader.WhitespaceHandling%2A> se establece en Significant o All, el "documento" elemento expande la entidad de carácter y devuelve la entidad general como nodo:  
  
|Profundidad|NodeType|nombre|Valor|  
|-----------|--------------|----------|-----------|  
|1|Texto||A|  
|1|EntityReference|num||  
|1|SignificantWhitespace|||  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el `ResolveEntity` método para expandir una entidad general.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/VB/source.vb#1)]  
  
 En el ejemplo se utiliza el archivo `book1.xml`como entrada.  
  
 [!code-xml[Classic WebData XmlValidatingReader.ResolveEntity Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Se ha especificado un valor no válido.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public override bool EOF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EOF" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.EOF" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EOF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EOF { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el lector está situado al final del flujo.</summary>
        <value>
          Es <see langword="true" /> si el lector está situado al final del flujo; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene el valor de un atributo.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.GetAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Índice del atributo. El índice está basado en cero. El primer atributo tiene índice 0.</param>
        <summary>Obtiene el valor del atributo con el índice especificado.</summary>
        <returns>Valor del atributo especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método no desplaza el lector.  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="i" /> es menor que cero o mayor o igual que <see cref="P:System.Xml.XmlValidatingReader.AttributeCount" />.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre completo del atributo.</param>
        <summary>Obtiene el valor del atributo con el nombre especificado.</summary>
        <returns>Valor del atributo especificado. Si no se encuentra el atributo, se devuelve <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Este método no desplaza el lector.  
  
 Si el lector está situado en un `DocumentType` nodo, este método puede utilizarse para obtener los literales PUBLIC y SYSTEM, por ejemplo, `reader.GetAttribute("PUBLIC")`  
  
   
  
## Examples  
 En el ejemplo siguiente se obtiene el valor del atributo ISBN.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.GetAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.GetAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.GetAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.GetAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.GetAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.GetAttribute Example/VB/source.vb#1)]  
  
 En el ejemplo se utiliza el archivo `attrs.xml`como entrada.  
  
 [!code-xml[Classic WebData XmlValidatingReader.GetAttribute Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.GetAttribute Example/XML/attrs.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (localName As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">Nombre local del atributo.</param>
        <param name="namespaceURI">URI de espacio de nombres del atributo.</param>
        <summary>Obtiene el valor del atributo que tiene el nombre local y el identificador uniforme de recursos (URI) de espacio de nombres especificados.</summary>
        <returns>Valor del atributo especificado. Si no se encuentra el atributo, se devuelve <see langword="null" />. Este método no desplaza el lector.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 El siguiente código XML contiene un atributo en un espacio de nombres específico:  
  
```xml  
<test xmlns:dt="urn:datatypes" dt:type="int"/>  
```  
  
 Puede buscar el `dt:type` atributo mediante un argumento (prefijo y nombre local) o dos argumentos (nombre local y URI de espacio de nombres):  
  
```csharp  
String dt = reader.GetAttribute("dt:type");  
String dt2 = reader.GetAttribute("type","urn:datatypes");  
```  
  
 Para buscar el `xmlns:dt` atributo, use uno de los argumentos siguientes:  
  
```csharp  
String dt3 = reader.GetAttribute("xmlns:dt");  
String dt4 = reader.GetAttribute("dt",http://www.w3.org/2000/xmlns/);  
```  
  
 También puede obtener esta información mediante la <xref:System.Xml.XmlValidatingReader.Prefix%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="HasLineInfo">
      <MemberSignature Language="C#" Value="public bool HasLineInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasLineInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.HasLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function HasLineInfo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasLineInfo();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlLineInfo.HasLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene un valor que indica si la clase puede devolver información de línea.</summary>
        <returns>
          Es <see langword="true" /> si la clase puede devolver información de línea; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public override bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasValue { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el nodo actual puede tener una propiedad <see cref="P:System.Xml.XmlValidatingReader.Value" /> con un valor distinto de String.Empty.</summary>
        <value>
          Es <see langword="true" /> si el nodo en el que está situado actualmente el lector puede tener un <see langword="Value" />; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 En la siguiente tabla se recogen los tipos de nodo que tienen un valor para devolver.  
  
|Tipo de nodo|Valor|  
|---------------|-----------|  
|`Attribute`|El valor del atributo.|  
|`CDATA`|Contenido de la sección CDATA.|  
|`Comment`|El contenido del comentario.|  
|`DocumentType`|El subconjunto interno.|  
|`ProcessingInstruction`|El contenido completo, sin incluir el destino.|  
|`SignificantWhitespace`|Espacio en blanco entre marcas en un modelo de contenido mixto.|  
|`Text`|El contenido del nodo de texto.|  
|`Whitespace`|El espacio en blanco entre marcado.|  
|`XmlDeclaration`|El contenido de la declaración.|  
  
   
  
## Examples  
 En el ejemplo siguiente se lee en XML con distintos tipos de datos y muestra cada uno de los nodos.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.HasValue Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.HasValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.HasValue Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.HasValue Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.HasValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.HasValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public override bool IsDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDefault { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el nodo actual es un atributo generado a partir del valor predeterminado definido en la definición de tipo de documento (DTD) o en el esquema.</summary>
        <value>
          Es <see langword="true" /> si el nodo actual es un atributo cuyo valor fue generado a partir del valor predeterminado definido en la DTD o el esquema; es <see langword="false" /> si el valor de atributo se estableció explícitamente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad solo se aplica a un nodo de atributo.  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra todos los nodos de atributos en el elemento raíz.  
  
 [!code-cpp[XmlValidatingReader.IsDefault#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.IsDefault/CPP/readdefattr.cpp#1)]
 [!code-csharp[XmlValidatingReader.IsDefault#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.IsDefault/CS/readdefattr.cs#1)]
 [!code-vb[XmlValidatingReader.IsDefault#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.IsDefault/VB/readdefattr.vb#1)]  
  
 El ejemplo utiliza los siguientes archivos como entrada.  
  
 `book4.xml`  
  
 [!code-xml[XmlValidatingReader.IsDefault#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.IsDefault/XML/book4.xml#2)]  
  
 `book.dtd`  
  
 [!code-xml[XmlValidatingReader.IsDefault#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.IsDefault/XML/book.dtd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="IsEmptyElement">
      <MemberSignature Language="C#" Value="public override bool IsEmptyElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.IsEmptyElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEmptyElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmptyElement { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el nodo actual es un elemento vacío (por ejemplo, <c>&lt;MyElement/&gt;</c>).</summary>
        <value>
          <see langword="true" /> Si el nodo actual es un elemento (<see cref="P:System.Xml.XmlValidatingReader.NodeType" /> es igual a <see langword="XmlNodeType.Element" />) que termina en <c> / &gt; </c>; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Esta propiedad le permite determinar la diferencia entre lo siguiente:  
  
 `<item num="123"/>` (`IsEmptyElement` es `true`).  
  
 `<item num="123">` (`IsEmptyElement` es `false`, aunque el contenido del elemento está vacío).  
  
 Correspondiente `EndElement` nodo no se genera para elementos vacíos.  
  
 Si se ha agregado contenido predeterminado a un elemento debido a la validación de esquemas, `IsEmptyElement` todavía devuelve `true`. No repercute en si el elemento tiene un valor predeterminado. En otras palabras, `IsEmptyElement` simplemente indica si el elemento del documento de origen tenía una etiqueta de elemento de cierre o no.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra el contenido de texto de cada elemento.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/VB/source.vb#1)]  
  
 En el ejemplo se utiliza el archivo `elems.xml`como entrada.  
  
 [!code-xml[Classic WebData XmlValidatingReader.IsEmptyElement Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumber { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xml.IXmlLineInfo.LineNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número de línea actual.</summary>
        <value>Número de línea actual. El valor inicial de esta propiedad es 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Esta propiedad se usa normalmente para informes de errores, pero se puede llamar en cualquier momento. El valor inicial de esta propiedad es 1. Combinar con <xref:System.Xml.XmlValidatingReader.LinePosition%2A>, un valor de 1,1 indica el inicio del documento.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LinePosition">
      <MemberSignature Language="C#" Value="public int LinePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePosition" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.LinePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinePosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePosition { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xml.IXmlLineInfo.LinePosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la posición de línea actual.</summary>
        <value>Posición de línea actual. El valor inicial de esta propiedad es 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Esta propiedad se usa normalmente para informes de errores, pero se puede llamar en cualquier momento. El valor inicial de esta propiedad es `1`.  
  
 La posición indicada es el primer carácter del texto en el marcado.  
  
```xml  
<root>  
 abc<tag/>  
</root>  
```  
  
 En la primera línea del texto XML anterior, un `LinePosition` de `2` corresponde al carácter `r`; en la segunda línea, un `LinePosition` de `5` corresponde al carácter `t`; y en la tercera línea, un `LinePosition` de `3` corresponde al carácter `r`.  
  
 Combinar con <xref:System.Xml.XmlValidatingReader.LineNumber%2A>, un valor de `1,1` indica el principio del documento.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre local del nodo actual.</summary>
        <value>Nombre del nodo actual sin prefijo. Por ejemplo, <see langword="LocalName" /> es <see langword="book" /> para el elemento <c> &lt;bk: book&gt;</c>.  
  
 Para los tipos de nodo sin nombre (por ejemplo, <see langword="Text" />, <see langword="Comment" />, etc.), esta propiedad devuelve String.Empty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
   
  
## Examples  
 En el ejemplo siguiente se lee un fragmento XML.  
  
 [!code-csharp[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public override string LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupNamespace (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupNamespace(System::String ^ prefix);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Prefijo cuyo identificador URI de espacio de nombres se desea resolver. Para hacer coincidir el espacio de nombres predeterminado, pase una cadena vacía.</param>
        <summary>Resuelve un prefijo de espacio de nombres en el ámbito del elemento actual.</summary>
        <returns>Identificador URI de espacio de nombres al que se asigna el prefijo o <see langword="null" /> si no se encuentra ningún prefijo coincidente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia...  
  
 En la siguiente cadena XML, si el lector está situado en el `href` de atributo, el prefijo `a` se resuelve mediante una llamada a `reader.LookupNamespace("a", true)`. La cadena devuelta es `urn:456`.  
  
```xml  
<root xmlns:a="urn:456">  
 <item>  
 <ref href="a:b"/>  
 </item>  
</root>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Se mueve al atributo especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override void MoveToAttribute (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void MoveToAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub MoveToAttribute (i As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void MoveToAttribute(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Índice del atributo.</param>
        <summary>Se desplaza hasta el atributo con el índice especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
   
  
## Examples  
 En el ejemplo siguiente se lee todos los elementos en el nodo raíz.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="i" /> es menor que cero o mayor o igual que <see cref="P:System.Xml.XmlReader.AttributeCount" />.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre completo del atributo.</param>
        <summary>Se desplaza hasta el atributo con el nombre especificado.</summary>
        <returns>
          Es <see langword="true" /> si se encuentra el atributo; en caso contrario, es <see langword="false" />. Si es <see langword="false" />, no cambia la posición del lector.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Después de llamar a este método, el <xref:System.Xml.XmlValidatingReader.Name%2A>, <xref:System.Xml.XmlValidatingReader.NamespaceURI%2A>, y <xref:System.Xml.XmlValidatingReader.Prefix%2A> reflejan las propiedades de dicho atributo.  
  
   
  
## Examples  
 En el ejemplo siguiente se lee un atributo con nodos de referencia de entidad y de texto.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">Nombre local del atributo.</param>
        <param name="namespaceURI">URI de espacio de nombres del atributo.</param>
        <summary>Se desplaza hasta el atributo que tiene el nombre local e identificador uniforme de recursos (URI) de espacio de nombres especificados.</summary>
        <returns>
          Es <see langword="true" /> si se encuentra el atributo; en caso contrario, es <see langword="false" />. Si es <see langword="false" />, no cambia la posición del lector.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Después de llamar a este método, el <xref:System.Xml.XmlValidatingReader.Name%2A>, <xref:System.Xml.XmlValidatingReader.NamespaceURI%2A>, y <xref:System.Xml.XmlValidatingReader.Prefix%2A> reflejan las propiedades de dicho atributo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToElement">
      <MemberSignature Language="C#" Value="public override bool MoveToElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToElement () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Se desplaza hasta el elemento que contiene el nodo de atributo actual.</summary>
        <returns>
          Es <see langword="true" /> si el lector está situado en un atributo (el lector se desplaza hasta el elemento que posee el atributo); es <see langword="false" /> si el lector no está situado en un atributo (no cambia la posición del lector).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Utilice este método para devolver a un elemento después de navegar a través de sus atributos. Este método mueve el lector a uno de los siguientes tipos de nodo: `Element`, `DocumentType`, o `XmlDeclaration`.  
  
   
  
## Examples  
 En el ejemplo siguiente se lee todos los elementos en el nodo raíz.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToFirstAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToFirstAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToFirstAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToFirstAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToFirstAttribute();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Se mueve al primer atributo.</summary>
        <returns>
          Es <see langword="true" /> si existe un atributo (el lector se desplaza hasta el primer atributo); en caso contrario, es <see langword="false" /> (no cambia la posición del lector).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
   
  
## Examples  
 En el ejemplo siguiente se lee un fragmento XML.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToNextAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToNextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToNextAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToNextAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToNextAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToNextAttribute();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Se mueve al siguiente atributo.</summary>
        <returns>
          Es <see langword="true" /> si hay siguiente atributo; es <see langword="false" /> si no hay más atributos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Si el nodo actual es un nodo de elemento, este método es equivalente a <xref:System.Xml.XmlValidatingReader.MoveToFirstAttribute%2A>. Si `MoveToNextAttribute` devuelve `true`, el lector se desplaza hasta el siguiente atributo; en caso contrario, no cambia la posición del lector.  
  
   
  
## Examples  
 En el ejemplo siguiente se lee un fragmento XML.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre completo del nodo actual.</summary>
        <value>Nombre completo del nodo actual. Por ejemplo, <see langword="Name" /> es <see langword="bk:book" /> para el elemento <c> &lt;bk: book&gt;</c>.  
  
 El nombre devuelto depende de la propiedad <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> del nodo:  Los siguientes tipos de nodo devuelven los valores que figuran en la lista. Todos los demás tipos de nodo devuelven una cadena vacía.  
  
 <list type="table"><listheader><term> Tipo de nodo  
  
 </term><description> Nombre  
  
 </description></listheader><item><term><see langword="Attribute" /></term><description> El nombre del atributo.  
  
 </description></item><item><term><see langword="DocumentType" /></term><description> El nombre de tipo de documento.  
  
 </description></item><item><term><see langword="Element" /></term><description> El nombre de etiqueta.  
  
 </description></item><item><term><see langword="EntityReference" /></term><description> El nombre de la entidad al que hace referencia.  
  
 </description></item><item><term><see langword="ProcessingInstruction" /></term><description> El destino de la instrucción de procesamiento.  
  
 </description></item><item><term><see langword="XmlDeclaration" /></term><description> La cadena literal <see langword="xml" />.  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
   
  
## Examples  
 En el ejemplo siguiente se lee un archivo XML y se muestra cada uno de los nodos.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/VB/source.vb#1)]  
  
 En el ejemplo se utiliza el archivo `items.xml`como entrada.  
  
 [!code-xml[Classic WebData XmlValidatingReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public bool Namespaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Namespaces { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se ha de aplicar la compatibilidad de espacio de nombres.</summary>
        <value>
          Es <see langword="true" /> si se debe aplicar la compatibilidad de espacio de nombres; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public override string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el identificador uniforme de recursos (URI) del espacio de nombres (según se define en la especificación de espacio de nombres del Consorcio W3C) del nodo donde se coloca el lector.</summary>
        <value>URI de espacio de nombres del nodo actual; en caso contrario, una cadena vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad es relevante para `Element` y `Attribute` sólo los nodos.  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
   
  
## Examples  
 En el ejemplo siguiente se lee un fragmento XML.  
  
 [!code-csharp[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el <see cref="T:System.Xml.XmlNameTable" /> asociado a esta implementación.</summary>
        <value>
          <see langword="XmlNameTable" /> que permite obtener la versión subdividida de una cadena del nodo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Devuelven todos los nombres de nodo y de atributo de <xref:System.Xml.XmlValidatingReader> se subdividen mediante el `NameTable`. Cuando se devuelve varias veces el mismo nombre (por ejemplo, `Customer`), el mismo `String` se devolverá el objeto de ese nombre. Esto permite escribir código eficiente que realiza comparaciones en estas cadenas en lugar de costosas comparaciones de cadenas de objetos.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tipo del nodo actual.</summary>
        <value>Uno de los valores de <see cref="T:System.Xml.XmlNodeType" /> que representa el tipo del nodo actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Esta propiedad nunca devuelve los siguientes `XmlNodeType` tipos: `Document`, `DocumentFragment`, `Entity`, o `Notation`.  
  
   
  
## Examples  
 En el ejemplo siguiente se lee un archivo XML y se muestra cada uno de los nodos.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/VB/source.vb#1)]  
  
 En el ejemplo se utiliza el archivo `items.xml`como entrada.  
  
 [!code-xml[Classic WebData XmlValidatingReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public override string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el prefijo de espacio de nombres asociado al nodo actual.</summary>
        <value>Prefijo de espacio de nombres asociado al nodo actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
   
  
## Examples  
 En el ejemplo siguiente se lee un fragmento XML.  
  
 [!code-csharp[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public override char QuoteChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property char QuoteChar { char get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el carácter de comillas entre las que se encierra el valor de un nodo de atributo.</summary>
        <value>Carácter de comillas (" o ') entre las que se encierra el valor de un nodo de atributo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad solo se aplica a un nodo de atributo.  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lee el siguiente nodo del flujo.</summary>
        <returns>
          Es <see langword="true" /> si se lee correctamente el siguiente nodo; es <see langword="false" /> si no hay más nodos que leer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Cuando un lector en primer lugar se crea y se inicializa, hay ninguna información. Debe llamar a `Read` para leer el primer nodo.  
  
   
  
## Examples  
 En el ejemplo siguiente se lee un archivo XML y se muestra cada nodo.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/VB/source.vb#1)]  
  
 En el ejemplo se utiliza el archivo `items.xml`como entrada.  
  
 [!code-xml[Classic WebData XmlValidatingReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadAttributeValue">
      <MemberSignature Language="C#" Value="public override bool ReadAttributeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ReadAttributeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadAttributeValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAttributeValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ReadAttributeValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Analiza el valor de atributo en uno o varios nodos <see langword="Text" />, <see langword="EntityReference" /> o <see langword="EndEntity" />.</summary>
        <returns>
          <see langword="true" /> si hay nodos para devolver.  
  
 <see langword="false" /> si el lector no está situado en un nodo de atributo cuando se realiza la llamada inicial o si se leyeron todos los valores de atributo.  
  
 Un atributo vacío, como <c>misc=""</c>, devuelve <see langword="true" /> con un solo nodo cuyo valor es String.Empty.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Utilice este método después de llamar a <xref:System.Xml.XmlValidatingReader.MoveToAttribute%2A> para leer los nodos de referencia de texto o una entidad que constituyen el valor del atributo. El <xref:System.Xml.XmlReader.Depth%2A> de los nodos de valor de atributo es uno más la profundidad del nodo de atributo. El `Depth` aumenta y disminuye en uno al entrar y salir de las referencias de entidad general.  
  
 Por ejemplo, suponga que tiene el siguiente código XML: `<test name="a &b; c"/>`  
  
 donde la entidad `b` se define en la definición de tipo de documento (DTD) como sigue: `<!ENTITY b "123">`  
  
 Si <xref:System.Xml.XmlValidatingReader.EntityHandling%2A> se establece en `ExpandCharEntities`, el código de C# siguiente devuelve el valor de atributo como dos nodos de texto y el nodo de referencia de una entidad:  
  
```csharp  
reader.MoveToAttribute("name");  
  while (reader.ReadAttributeValue())  
  {  
  if (reader.NodeType == XmlNodeType.Text)  
  {  
  // at this point reader.Value == "a " or " c"  
  }  
  else if (reader.NodeType == XmlNodeType.EntityReference)  
  {  
  // at this point reader.Name == "b"  
  reader.ResolveEntity();  
  while (reader.ReadAttributeValue() &&  
  reader.NodeType != XmlNodeType.EndEntity)  
  {  
  // reader.Value == "123"  
  }  
  }  
    }  
```  
  
   
  
## Examples  
 En el ejemplo siguiente se lee un atributo con nodos de referencia de entidad y de texto.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
        <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
        <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
        <summary>Lee el contenido y devuelve los bytes binarios descodificados en Base64.</summary>
        <returns>Número de bytes escritos en el búfer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia...  
  
 Este método transmite por secuencias el contenido, descodifica el contenido de Base64 y devuelve los bytes binarios descodificados (por ejemplo, una línea Base64 codificada en formato GIF) en el búfer. Este método se puede llamar sucesivamente para leer grandes flujos de texto incrustado. Para obtener más información, vea RFC 1521, "MIME (Multipurpose Internet Mail Extensions) parte uno: mecanismos para especificar y describir el formato de Internet Message Bodies". Puede obtener RFC en la [solicitar para el sitio Web de comentarios](https://www.rfc-editor.org).  
  
> [!NOTE]
>  Debe tener acceso a cualquiera de las propiedades del lector entre las llamadas a no la <xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> método hasta que el método devuelve el valor 0.  
  
 Este método tiene el siguiente comportamiento:  
  
-   <xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> Devuelve el valor 0 cuando se ha alcanzado el final de la secuencia de bytes que está realizando la operación. El lector está situado en el primer nodo de no contenido.  
  
-   Si solicita un número menor, o el número exacto de bytes que quedan en la secuencia, el lector permanece en su posición actual.  
  
-   <xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> no se admite en los siguientes tipos de nodos XML: Element, XmlDeclaration, None, documento, DocumentType, Notation, Entity y DocumentFragment.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          El método <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> no es compatible con el nodo actual.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
        <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
        <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
        <summary>Lee el contenido y devuelve los bytes binarios descodificados de BinHex.</summary>
        <returns>Número de bytes escritos en el búfer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia...  
  
 Este método transmite por secuencias el contenido, descodifica el contenido BinHex y devuelve los bytes binarios descodificados (por ejemplo, una línea BinHex codificada en formato GIF) en el búfer. Este método se puede llamar sucesivamente para leer grandes flujos de texto incrustado.  
  
> [!NOTE]
>  Debe tener acceso a cualquiera de las propiedades del lector entre las llamadas a no la <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> método hasta que el método devuelve el valor 0.  
  
 Este método tiene el siguiente comportamiento:  
  
-   <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> Devuelve el valor 0 cuando se ha alcanzado el final de la secuencia de bytes que está realizando la operación. El lector está situado en el primer nodo de no contenido.  
  
-   Si solicita un número menor, o el número exacto de bytes que quedan en la secuencia, el lector permanece en su posición actual.  
  
-   <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> no se admite en los siguientes tipos de nodos XML: Element, XmlDeclaration, None, documento, DocumentType, Notation, Entity y DocumentFragment.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          El método <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> no es compatible con el nodo actual.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
        <exception cref="T:System.NotSupportedException">La implementación de <see cref="T:System.Xml.XmlValidatingReader" /> no admite este método.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
        <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
        <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
        <summary>Lee el elemento y descodifica el contenido de Base64.</summary>
        <returns>Número de bytes escritos en el búfer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Este método lee el contenido del elemento, descodifica mediante la codificación Base64 y devuelve los bytes binarios descodificados (por ejemplo, una línea Base64 codificada en formato GIF) en el búfer. Para obtener más información, vea RFC 1521, "MIME (Multipurpose Internet Mail Extensions) parte uno: mecanismos para especificar y describir el formato de Internet Message Bodies". Puede obtener RFC en la [solicitar para el sitio Web de comentarios](https://www.rfc-editor.org).  
  
 Este método puede leer solo los elementos de contenido simple. El elemento puede contener texto, espacio en blanco, espacio en blanco significativo, secciones CDATA, comentarios y las instrucciones de procesamiento. También puede contener referencias a entidades, que se expanden automáticamente. El elemento no puede tener elementos secundarios.  
  
 Este método es muy similar a la <xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> método excepto en que puede llamarse únicamente en tipos de nodo de elemento.  
  
 Si el `count` valor es mayor que el número de bytes en el documento, o si es igual al número de bytes en el documento, el <xref:System.Xml.XmlValidatingReader> lee todos los bytes restantes del documento y devuelve el número de bytes leídos. La siguiente <xref:System.Xml.XmlValidatingReader> llamada al método devuelve un cero y desplaza el lector al siguiente nodo el <xref:System.Xml.XmlNodeType.EndElement>.  
  
 Si se llama a <xref:System.Xml.XmlValidatingReader.Read%2A> antes de que se consume todo el contenido del elemento, el lector puede comportarse como si el primer contenido se ha consumido y, a continuación, el <xref:System.Xml.XmlValidatingReader.Read%2A> método se llamó. Esto significa que el lector lee todo el texto hasta que se encuentra el elemento de fin. A continuación, lee el nodo de la etiqueta final, leerá el siguiente nodo y, a continuación, se sitúa en el siguiente nodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">El nodo actual no es un nodo de elemento.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
        <exception cref="T:System.NotSupportedException">La implementación de <see cref="T:System.Xml.XmlValidatingReader" /> no admite este método.</exception>
        <exception cref="T:System.Xml.XmlException">El elemento contiene un contenido mixto.</exception>
        <exception cref="T:System.FormatException">El contenido no puede convertirse en el tipo solicitado.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
        <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
        <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
        <summary>Lee el elemento y descodifica el contenido de BinHex.</summary>
        <returns>Número de bytes escritos en el búfer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Este método lee el contenido del elemento, descodifica mediante la codificación BinHex y devuelve los bytes binarios descodificados (por ejemplo, una línea BinHex codificada en formato GIF) en el búfer.  
  
 Este método puede leer solo los elementos de contenido simple. El elemento puede contener texto, espacio en blanco, espacio en blanco significativo, secciones CDATA, comentarios y las instrucciones de procesamiento. También puede contener referencias a entidades, que se expanden automáticamente. El elemento no puede tener elementos secundarios.  
  
 Este método es muy similar a la <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> método excepto en que puede llamarse únicamente en tipos de nodo de elemento.  
  
 Si el `count` valor es mayor que el número de bytes en el documento, o si es igual al número de bytes en el documento, el <xref:System.Xml.XmlValidatingReader> lee todos los bytes restantes del documento y devuelve el número de bytes leídos. La siguiente <xref:System.Xml.XmlValidatingReader> llamada al método devuelve un cero y desplaza el lector al siguiente nodo el <xref:System.Xml.XmlNodeType.EndElement>.  
  
 Si se llama a <xref:System.Xml.XmlValidatingReader.Read%2A> antes de que se consume todo el contenido del elemento, el lector puede comportarse como si el primer contenido se ha consumido y, a continuación, el <xref:System.Xml.XmlValidatingReader.Read%2A> método se llamó. Esto significa que el lector lee todo el texto hasta que se encuentra el elemento de fin. A continuación, lee el nodo de la etiqueta final, leerá el siguiente nodo y, a continuación, se sitúa en el siguiente nodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">El nodo actual no es un nodo de elemento.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
        <exception cref="T:System.NotSupportedException">La implementación de <see cref="T:System.Xml.XmlValidatingReader" /> no admite este método.</exception>
        <exception cref="T:System.Xml.XmlException">El elemento contiene un contenido mixto.</exception>
        <exception cref="T:System.FormatException">El contenido no puede convertirse en el tipo solicitado.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Reader">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Reader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlReader Reader" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Reader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Reader As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlReader ^ Reader { System::Xml::XmlReader ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Xml.XmlReader" /> que se usa para construir este objeto <see langword="XmlValidatingReader" />.</summary>
        <value>
          <see langword="XmlReader" /> que se especifica en el constructor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Esta propiedad permite al usuario tener acceso a propiedades específicas del lector proporcionado. Devuelve un tipo `XmlReader`. El usuario debe consultar el tipo antes de la conversión.  
  
 Cambiar el estado del lector devuelto (por ejemplo, una llamada de los métodos de lectura) puede producir resultados imprevisibles.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadState">
      <MemberSignature Language="C#" Value="public override System.Xml.ReadState ReadState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ReadState ReadState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.ReadState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReadState As ReadState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::ReadState ReadState { System::Xml::ReadState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.ReadState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el estado del lector.</summary>
        <value>Uno de los valores de <see cref="T:System.Xml.ReadState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadString">
      <MemberSignature Language="C#" Value="public override string ReadString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lee el contenido de un nodo de elemento o de texto como una cadena.</summary>
        <returns>Contenido del nodo de elemento o de texto. Puede ser una cadena vacía si el lector está situado en un nodo que no sea de elemento ni de texto, o si no hay más contenido de texto para devolver en el contexto actual.  
  
 <block subset="none" type="note"><para>  
 El nodo de texto puede ser un nodo de texto de elemento o de atributo.  
  
</para></block></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Si se coloca en un elemento `ReadString` concatena todos los texto, espacio en blanco significativo, espacio en blanco y los tipos de nodo de sección CDATA y devuelve los datos concatenados como contenido del elemento. El lector se detiene cuando se encuentra cualquier marcado, incluidos los comentarios y las instrucciones de procesamiento. Esto se podría producir en un modelo de contenido mixto o cuando se lee una etiqueta de fin de elemento.  
  
 Si está situado en un nodo de texto `ReadString` realiza la misma concatenación desde el nodo de texto hasta la etiqueta de cierre de elemento. Si el sistema de lectura está situado en un nodo de texto de atributos, `ReadString` tiene la misma funcionalidad que si el sistema de lectura estuviera situado en la etiqueta de inicio de elemento. Devuelve todos los nodos de texto de elementos concatenados.  
  
 El <xref:System.Xml.XmlValidatingReader.EntityHandling%2A> propiedad determina cómo `ReadString` funciona del siguiente modo:  
  
|Valor|Descripción|  
|-----------|-----------------|  
|ExpandEntities|Devuelve ampliado de caracteres y las entidades generales. Este es el valor predeterminado.|  
|ExpandCharEntities|Devuelve el contenido de texto hasta, pero sin incluir una referencia de entidad general. Esto significa que una entidad general hace que ReadString se detenga. Debe llamar a `Read` para pasar por alto la referencia de entidad.|  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra el contenido de texto de cada uno de los elementos.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/VB/source.vb#1)]  
  
 En el ejemplo se utiliza el archivo `elems.xml`como entrada.  
  
 [!code-xml[Classic WebData XmlValidatingReader.IsEmptyElement Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadTypedValue">
      <MemberSignature Language="C#" Value="public object ReadTypedValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ReadTypedValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadTypedValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadTypedValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ReadTypedValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene el tipo de Common Language Runtime para el tipo de esquema XSD (esquema del lenguaje de definición de esquemas XML) especificado.</summary>
        <returns>Tipo de Common Language Runtime para el tipo de esquema XML especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Por ejemplo, si el tipo de esquema se define como `xsd:int`, el tipo en tiempo de ejecución `int32` se devuelve para el objeto. Esto se puede comprobar mediante la <xref:System.Object.GetType%2A> método y conversión en consecuencia. El <xref:System.Xml.XmlValidatingReader.ReadTypedValue%2A> método siempre devuelve un tipo que se deriva de la <xref:System.Object> clase. Nunca devuelve el <xref:System.Object> tipo.  
  
 Si el lector está situado en un atributo, este método devuelve el objeto con tipo en tiempo de ejecución, pero no cambia la posición del lector. Si el lector está situado en un elemento, `ReadTypedValue` lee cualquier CDATA, texto, espacios en blanco, espacio en blanco significativo y los nodos de comentario, devuelve el objeto con tipo en tiempo de ejecución y sitúa el lector en la etiqueta de cierre. Los tipos que no tienen una asignación directa, por ejemplo `NMTOKENS`, se devuelven como cadenas.  
  
> [!NOTE]
>  Si <xref:System.Xml.XmlValidatingReader.ValidationType%2A> se ha establecido en ValidationType.None, no se proporciona información de tipo de datos de esquemas o definiciones de tipo de documento (DTD).  
  
> [!CAUTION]
>  Después de llamar a <xref:System.Xml.XmlValidatingReader.Close%2A>, `ReadTypedValue` devolverá `null`.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra la información de tipo para cada uno de los elementos en el documento XML.  
  
 [!code-cpp[XmlValidatingReader.SchemaType#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.SchemaType/CPP/schematype.cpp#1)]
 [!code-csharp[XmlValidatingReader.SchemaType#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.SchemaType/CS/schematype.cs#1)]
 [!code-vb[XmlValidatingReader.SchemaType#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.SchemaType/VB/schematype.vb#1)]  
  
 El ejemplo utiliza los siguientes archivos de entrada.  
  
 `booksSchema.xml`  
  
 [!code-xml[XmlValidatingReader.SchemaType#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.SchemaType/XML/booksschema.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[XmlValidatingReader.SchemaType#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.SchemaType/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ResolveEntity">
      <MemberSignature Language="C#" Value="public override void ResolveEntity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResolveEntity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResolveEntity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResolveEntity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resuelve la referencia a entidad de los nodos <see langword="EntityReference" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Si el lector está situado en un `EntityReference` nodo (`XmlNodeType.EntityReference`), si <xref:System.Xml.XmlValidatingReader.Read%2A> se llama después de llamar a este método, el texto de reemplazo de entidad se analiza. Después de finaliza el texto de reemplazo de entidad, un `EndEntity` nodo se devuelve al cerrar el ámbito de referencia de entidad.  
  
> [!NOTE]
>  Después de llamar a este método, si la entidad forma parte de un valor de atributo, debe llamar a <xref:System.Xml.XmlValidatingReader.ReadAttributeValue%2A> para ir a la entidad.  
  
   
  
## Examples  
 En el ejemplo siguiente se utiliza `ResolveEntity` para expandir una entidad general.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/VB/source.vb#1)]  
  
 En el ejemplo se utiliza el archivo `book1.xml`como entrada.  
  
 [!code-xml[Classic WebData XmlValidatingReader.ResolveEntity Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El lector no se encuentra en un nodo <see langword="EntityReference" />.</exception>
        <altmember cref="T:System.Xml.EntityHandling" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaCollection Schemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaCollection Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schemas As XmlSchemaCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaCollection ^ Schemas { System::Xml::Schema::XmlSchemaCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un objeto <see cref="T:System.Xml.Schema.XmlSchemaCollection" /> que se va a usar para validación.</summary>
        <value>
          <see langword="XmlSchemaCollection" /> que se va a usar para validación.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 El `XmlSchemaCollection` contiene esquemas del lenguaje (XSD) de definición de datos XML reducidos (XDR) y el esquema XML cargada previamente. Esta propiedad proporciona el acceso de lectura a la caché de esquemas y le permite validar sin tener que volver a cargar los esquemas cada vez. El lector no agrega nada a la `XmlSchemaCollection`.  
  
 Si el `XmlSchemaCollection` incluye un esquema XML (XSD) que contiene `include` o `import` elementos que hacen referencia a otros espacios de nombres, los esquemas de estos otros espacios de nombres se cargan sólo con fines de validación. A menos que estos esquemas se agregaron explícitamente a la colección de esquemas, no estarán accesibles mediante cualquiera de las propiedades o métodos de recopilación. Por ejemplo, si la colección contiene el archivo de esquema `a.xsd`, que contiene una referencia al archivo de esquema `b.xsd`, debe agregar `b.xsd` a la colección de esquemas antes de acceder a ella mediante cualquiera de las propiedades o métodos de recopilación.  
  
 Cuando el `XmlSchemaCollection` se tiene acceso a la `Schemas` propiedad, el <xref:System.Xml.Schema.XmlSchemaCollection.Add%2A?displayProperty=nameWithType> método usa la <xref:System.Xml.XmlResolver> especificado por el <xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType> propiedad.  
  
> [!NOTE]
>  Los esquemas deben agregarse a la `XmlSchemaCollection` antes del primer `Read` llamar.  
  
   
  
## Examples  
 En el ejemplo siguiente se valida tres archivos XML mediante esquemas almacenados en la clase XmlSchemaCollection.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Schemas Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Schemas Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Schemas Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/VB/source.vb#1)]  
  
 El ejemplo usa los cinco archivos de entrada siguientes:  
  
 `booksSchema.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#2)]  
  
 `booksSchemaFail.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#3)]  
  
 `newbooks.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#4](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#4)]  
  
 `books.xsd`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#5](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#5)]  
  
 `schema1.xdr`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#6](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="SchemaType">
      <MemberSignature Language="C#" Value="public object SchemaType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SchemaType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.SchemaType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaType As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SchemaType { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un objeto de tipo de esquema.</summary>
        <value>
          <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> o <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />, dependiendo de que el valor del nodo sea un tipo de esquema XSD (lenguaje de definición de esquemas XML) integrado o un tipo simpleType o complexType definido por el usuario; es <see langword="null" /> si el nodo actual no tiene tipo de esquema.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 El usuario debe comprobar el tipo devuelto. Por ejemplo,  
  
```csharp  
object obj = vreader.SchemaType;  
 if (obj is XmlSchemaType)  
 {  
   XmlSchemaType st = (XmlSchemaType)obj;  
   // use XmlSchemaType object  
 }  
 if (obj is XmlSchemaDatatype)  
 {  
   XmlSchemaDatatype sd = (XmlSchemaDatatype)obj;  
   Type vt = sd.ValueType;  
   // use XmlSchemaDatatype object  
       }  
```  
  
 Si se está realizando una validación de esquema XML, el `XmlSchemaType` o `XmlSchemaDatatype` corresponde al elemento actual que se va a leer. Si se está realizando la definición de tipo de documento (validación de DTD), esta propiedad devuelve `null`.  
  
 `XmlSchemaDatatype` se devuelve si el elemento actual o el atributo es un tipo simple que puede especificar restricciones de validación especiales sobre los tipos simples, como min y max.  
  
 `XmlSchemaSimpleType` se devuelve si el elemento actual o el atributo es un simpleType definido por el usuario.  
  
 `XmlSchemaComplexType` se devuelve si el elemento actual es un complexType definido por el usuario. Este tipo no se puede devolver mediante atributos.  
  
> [!NOTE]
>  Si <xref:System.Xml.XmlValidatingReader.ValidationType%2A> se ha establecido en ValidationType.None, no se proporciona ninguna información de tipo de datos de esquemas o DTD.  
  
> [!CAUTION]
>  Después de llamar a <xref:System.Xml.XmlValidatingReader.Close%2A>, SchemaType devolverá Null.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra la información de tipo para cada uno de los elementos en el documento XML.  
  
 [!code-cpp[XmlValidatingReader.SchemaType#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.SchemaType/CPP/schematype.cpp#1)]
 [!code-csharp[XmlValidatingReader.SchemaType#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.SchemaType/CS/schematype.cs#1)]
 [!code-vb[XmlValidatingReader.SchemaType#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.SchemaType/VB/schematype.vb#1)]  
  
 El ejemplo utiliza los siguientes archivos de entrada.  
  
 `booksSchema.xml`  
  
 [!code-xml[XmlValidatingReader.SchemaType#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.SchemaType/XML/booksschema.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[XmlValidatingReader.SchemaType#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.SchemaType/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.GetNamespacesInScope">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IDictionary&lt;string,string&gt; IXmlNamespaceResolver.GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(valuetype System.Xml.XmlNamespaceScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Function GetNamespacesInScope (scope As XmlNamespaceScope) As IDictionary(Of String, String) Implements IXmlNamespaceResolver.GetNamespacesInScope" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System::Xml::XmlNamespaceScope scope) = System::Xml::IXmlNamespaceResolver::GetNamespacesInScope;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" />
      </Parameters>
      <Docs>
        <param name="scope">Objeto <see cref="T:System.Xml.XmlNamespaceScope" /> que identifica el ámbito del lector.</param>
        <summary>Para una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
        <returns>Objeto T:System.Collections.IDictionary que identifica los espacios de nombres del ámbito.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Xml.XmlValidatingReader> se convierte en una interfaz <xref:System.Xml.IXmlNamespaceResolver>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupNamespace">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupNamespace (prefix As String) As String Implements IXmlNamespaceResolver.LookupNamespace" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupNamespace(System::String ^ prefix) = System::Xml::IXmlNamespaceResolver::LookupNamespace;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">El prefijo del espacio de nombres.</param>
        <summary>Para una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
        <returns>Valor de cadena que contiene el identificador URI del espacio de nombres asociado al prefijo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Xml.XmlValidatingReader> se convierte en una interfaz <xref:System.Xml.IXmlNamespaceResolver>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupPrefix">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupPrefix (string namespaceName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupPrefix(string namespaceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupPrefix (namespaceName As String) As String Implements IXmlNamespaceResolver.LookupPrefix" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupPrefix(System::String ^ namespaceName) = System::Xml::IXmlNamespaceResolver::LookupPrefix;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceName">Espacio de nombres asociado al prefijo.</param>
        <summary>Para una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
        <returns>Valor de cadena que contiene el prefijo del espacio de nombres asociado a <paramref name="namespaceName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Xml.XmlValidatingReader> se convierte en una interfaz <xref:System.Xml.IXmlNamespaceResolver>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlValidatingReader.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Establece un controlador de eventos para recibir información acerca de los errores de validación de definiciones de tipos de documentos (DTD), del esquema XDR (esquema reducido de datos XML) y del esquema XSD (esquema del lenguaje de definición de esquemas XML).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Estos eventos se producen durante la <xref:System.Xml.XmlValidatingReader.Read%2A> y solo si un <xref:System.Xml.XmlValidatingReader.ValidationType%2A> de DTD, se especifica XDR, esquema o Auto.  
  
 Si no se proporciona ningún controlador de eventos, un <xref:System.Xml.XmlException> se produce en el primer error de validación (gravedad es equivalente a XmlSeverityType.Error).  
  
> [!NOTE]
>  Si un elemento notifica un error de validación, no se validará el resto del modelo de contenido para ese elemento, sin embargo, se validan sus elementos secundarios. El lector sólo notifica el primer error para un elemento determinado.  
  
 Puede usar el controlador de devolución de llamada del <xref:System.Xml.Schema.ValidationEventArgs.Severity%2A?displayProperty=nameWithType> propiedad para garantizar que se valida un documento de instancia XML con un esquema. El `Severity` propiedad le permite distinguir entre errores de validación (gravedad es equivalente a XmlSeverityType.Error) que indican un error irrecuperable y advertencias de validación (gravedad es equivalente a XmlSeverityType.Warning) que indican que no hay información de esquema está disponible.  
  
   
  
## Examples  
 En el ejemplo siguiente se valida un archivo con un esquema XML.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.ValidationEventHandler Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.ValidationEventHandler Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.ValidationEventHandler Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/VB/source.vb#1)]  
  
 El ejemplo usa los dos archivos de entrada siguientes:  
  
 `notValidXSD.xml` (El `xsi:schemaLocation` atributo identifica el esquema XML para el lector.)  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationEventHandler Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/XML/source.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationEventHandler Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/XML/source.xml#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ValidationType">
      <MemberSignature Language="C#" Value="public System.Xml.ValidationType ValidationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ValidationType ValidationType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.ValidationType" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationType As ValidationType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ValidationType ValidationType { System::Xml::ValidationType get(); void set(System::Xml::ValidationType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.ValidationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica el tipo de validación que se realiza.</summary>
        <value>Uno de los valores de <see cref="T:System.Xml.ValidationType" />. Si esta propiedad no está establecida, se usa el valor predeterminado ValidationType.Auto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Esta propiedad debe establecerse antes de la primera llamada a <xref:System.Xml.XmlValidatingReader.Read%2A>. Si esta propiedad se establece en ValidationType.None, crea un lector sin validación.  
  
 Si se necesitan esquemas o definiciones de tipo de documento externo (DTD) para la validación, el <xref:System.Xml.XmlResolver> se utiliza.  
  
   
  
## Examples  
 En el ejemplo siguiente se valida dos archivos.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.ValidationType Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.ValidationType Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.ValidationType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/VB/source.vb#1)]  
  
 El ejemplo usa los siguientes cuatro archivos de entrada:  
  
 `notValid.xml` (La "x-schema:" prefijo identifica el esquema de datos XML reducidos (XDR) para el lector.)  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationType Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/XML/source.xml#2)]  
  
 `schema1.xdr`  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationType Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/XML/source.xml#3)]  
  
 `cdDTD.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationType Example#4](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/XML/source.xml#4)]  
  
 `book1.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationType Example#5](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/XML/source.xml#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Establecimiento de la propiedad después de haber llamado a Read.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor de texto del nodo actual.</summary>
        <value>El valor devuelto depende de la propiedad <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> del nodo:  En la siguiente tabla se recogen los tipos de nodo que tienen un valor para devolver. Todos los demás tipos de nodo devuelven String.Empty.  
  
 <list type="table"><listheader><term> Tipo de nodo  
  
 </term><description> Valor  
  
 </description></listheader><item><term><see langword="Attribute" /></term><description> El valor del atributo.  
  
 </description></item><item><term><see langword="CDATA" /></term><description> El contenido de la sección CDATA.  
  
 </description></item><item><term><see langword="Comment" /></term><description> El contenido del comentario.  
  
 </description></item><item><term><see langword="DocumentType" /></term><description> El subconjunto interno.  
  
 </description></item><item><term><see langword="ProcessingInstruction" /></term><description> Todo el contenido, sin incluir el destino.  
  
 </description></item><item><term><see langword="SignificantWhitespace" /></term><description> El espacio en blanco entre marcas en un modelo de contenido mixto.  
  
 </description></item><item><term><see langword="Text" /></term><description> El contenido del nodo de texto.  
  
 </description></item><item><term><see langword="Whitespace" /></term><description> El espacio en blanco entre marcado.  
  
 </description></item><item><term><see langword="XmlDeclaration" /></term><description> El contenido de la declaración.  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
   
  
## Examples  
 En el ejemplo siguiente se lee un archivo XML y se muestra cada nodo.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/VB/source.vb#1)]  
  
 En el ejemplo se utiliza el archivo `items.xml`como entrada.  
  
 [!code-xml[Classic WebData XmlValidatingReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el ámbito de <see langword="xml:lang" /> actual.</summary>
        <value>Ámbito de <see langword="xml:lang" /> actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 Esta propiedad representa el ámbito de XML: lang en el que reside el nodo actual. Por ejemplo, este es un fragmento XML con `xml:lang` establecido en EE. UU. Inglés en el elemento raíz:  
  
```xml  
<root xml:lang="en-us">   
<name>Fred</name>   
</root>   
```  
  
 Cuando el lector está situado en el `name` elemento, puede utilizar esta propiedad para determinar que está en el ámbito de un símbolo de moneda Inglés `xml:lang` atributo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Establece el objeto <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver las referencias a ubicación de esquemas y definiciones de tipos de documentos (DTD) externos. <see langword="XmlResolver" /> también se usa para controlar los elementos de inclusión o importación detectados en esquemas XSD (Lenguaje de definición de esquemas XML).</summary>
        <value>Objeto <see langword="XmlResolver" /> que se va a usar. Si se establece en <see langword="null" />, los recursos externos no se resuelven.  
  
 En la versión 1.1 de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], el llamador debe ser de plena confianza para poder especificar un objeto <see langword="XmlResolver" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 El `XmlResolver` se usa para cargar las DTD, entidades o esquemas necesarios para completar el proceso de validación.  
  
 Esta propiedad puede establecerse en cualquier momento y surte efecto a partir de la siguiente <xref:System.Xml.XmlValidatingReader.Read%2A> llamar. Si esta propiedad se establece en `null`, el lector se da por supuesto que el usuario no está interesado en resolver las referencias externas. En este caso, el lector solo valida con respecto a los recursos internos, si el recurso está presente.  
  
 En la versión 1.1 de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] , si no se establece esta propiedad, el nivel de confianza de la aplicación determina el comportamiento predeterminado.  
  
 `Fully trusted code:` El lector utiliza el valor predeterminado es <xref:System.Xml.XmlUrlResolver> sin credenciales de usuario. Si se requiere autenticación para tener acceso a un recurso de red, use la `XmlResolver` propiedad para especificar un `XmlResolver` con las credenciales necesarias.  
  
 `Semi-trusted code:` El `XmlResolver` propiedad está establecida en `null`. Recursos externos no se resuelven.  
  
 Cuando se valida con esquemas, puede evitar el costoso proceso de carga proporcionando un <xref:System.Xml.Schema.XmlSchemaCollection> mediante el <xref:System.Xml.XmlValidatingReader.Schemas%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el `XmlResolver` propiedad para especificar las credenciales necesarias para tener acceso al archivo DTD en red.  
  
 [!code-cpp[XmlValidatingReader.XmlResolver#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.XmlResolver/CPP/vrdr_resolver.cpp#1)]
 [!code-csharp[XmlValidatingReader.XmlResolver#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.XmlResolver/CS/vrdr_resolver.cs#1)]
 [!code-vb[XmlValidatingReader.XmlResolver#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.XmlResolver/VB/vrdr_resolver.vb#1)]  
  
 El ejemplo utiliza los siguientes archivos como entrada.  
  
 `book5.xml`  
  
 [!code-xml[XmlValidatingReader.XmlResolver#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.XmlResolver/XML/book5.xml#2)]  
  
 `books.dtd`  
  
 [!code-xml[XmlValidatingReader.XmlResolver#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.XmlResolver/XML/books.dtd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlUrlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el ámbito de <see langword="xml:space" /> actual.</summary>
        <value>Uno de los valores de <see cref="T:System.Xml.XmlSpace" />. Si no existe ningún ámbito de <see langword="xml:space" />, el valor predeterminado de esta propiedad será <see langword="XmlSpace.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Xml.XmlValidatingReader> clase está obsoleta en [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. Puede crear una validación <xref:System.Xml.XmlReader> instancia mediante el uso de la <xref:System.Xml.XmlReaderSettings> clase y <xref:System.Xml.XmlReader.Create%2A> método. Para obtener más información, vea la sección Comentarios de la página de referencia de <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
  </Members>
</Type>