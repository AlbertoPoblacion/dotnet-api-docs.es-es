<Type Name="XmlNameTable" FullName="System.Xml.XmlNameTable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8bbaad073ecc370c3c9e2d2f00a85e0bd392c042" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37729351" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XmlNameTable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlNameTable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlNameTable" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlNameTable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNameTable abstract" />
  <TypeSignature Language="F#" Value="type XmlNameTable = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2d224-101">Table of atomized string objects.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2d224-101">Table of atomized string objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d224-102">Varias clases, como <xref:System.Xml.XmlDocument> y <xref:System.Xml.XmlReader>, utilice el `XmlNameTable` clase internamente para almacenar los nombres de atributo y elemento.</span><span class="sxs-lookup"><span data-stu-id="2d224-102">Several classes, such as <xref:System.Xml.XmlDocument> and <xref:System.Xml.XmlReader>, use the `XmlNameTable` class internally to store attribute and element names.</span></span> <span data-ttu-id="2d224-103">Cuando un nombre de atributo o elemento aparece varias veces en un documento XML, se almacena en `XmlNameTable` s칩lo una vez.</span><span class="sxs-lookup"><span data-stu-id="2d224-103">When an element or attribute name occurs multiple times in an XML document, it is stored only once in the `XmlNameTable`.</span></span>  
  
 <span data-ttu-id="2d224-104">Los nombres se almacenan como tipos de objetos de Common Language Runtime (CLR).</span><span class="sxs-lookup"><span data-stu-id="2d224-104">The names are stored as common language runtime (CLR) object types.</span></span> <span data-ttu-id="2d224-105">Esto permite comparar objetos en estas cadenas en lugar de comparar cadenas, que consume m치s recursos.</span><span class="sxs-lookup"><span data-stu-id="2d224-105">This enables you to do object comparisons on these strings rather than a more expensive string comparison.</span></span> <span data-ttu-id="2d224-106">Estos objetos de cadena se conocen como "cadenas subdivididas".</span><span class="sxs-lookup"><span data-stu-id="2d224-106">These string objects are referred to as "atomized strings".</span></span>  
  
 <span data-ttu-id="2d224-107">`XmlNameTable` se implementa en el <xref:System.Xml.NameTable> clase.</span><span class="sxs-lookup"><span data-stu-id="2d224-107">`XmlNameTable` is implemented in the <xref:System.Xml.NameTable> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d224-108">En el ejemplo siguiente se compara dos nombres de elemento.</span><span class="sxs-lookup"><span data-stu-id="2d224-108">The following example compares two element names.</span></span>  
  
 [!code-csharp[NameTable_v2#1](~/samples/snippets/csharp/VS_Snippets_Data/NameTable_v2/CS/nametable.cs#1)]
 [!code-vb[NameTable_v2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/NameTable_v2/VB/nametable.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.NameTable" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlNameTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlNameTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2d224-109">Initializes a new instance of the <see cref="T:System.Xml.XmlNameTable" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d224-109">Initializes a new instance of the <see cref="T:System.Xml.XmlNameTable" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2d224-110">When overridden in a derived class, atomizes the specified string and adds it to the <see langword="XmlNameTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d224-110">When overridden in a derived class, atomizes the specified string and adds it to the <see langword="XmlNameTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d224-111">Para obtener m치s informaci칩n sobre cadenas subdivididas, vea <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="2d224-111">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public abstract string Add (string array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Add(string array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Add (array As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Add(System::String ^ array);" />
      <MemberSignature Language="F#" Value="abstract member Add : string -&gt; string" Usage="xmlNameTable.Add array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="2d224-112">The name to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d224-112">The name to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d224-113">When overridden in a derived class, atomizes the specified string and adds it to the <see langword="XmlNameTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d224-113">When overridden in a derived class, atomizes the specified string and adds it to the <see langword="XmlNameTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d224-114">The new atomized string or the existing one if it already exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d224-114">The new atomized string or the existing one if it already exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d224-115">Para obtener m치s informaci칩n sobre cadenas subdivididas, vea <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="2d224-115">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d224-116">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d224-116">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public abstract string Add (char[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Add(char[] array, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.Add(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Add (array As Char(), offset As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Add(cli::array &lt;char&gt; ^ array, int offset, int length);" />
      <MemberSignature Language="F#" Value="abstract member Add : char[] * int * int -&gt; string" Usage="xmlNameTable.Add (array, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="2d224-117">The character array containing the name to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d224-117">The character array containing the name to add.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="2d224-118">Zero-based index into the array specifying the first character of the name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d224-118">Zero-based index into the array specifying the first character of the name.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="2d224-119">The number of characters in the name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d224-119">The number of characters in the name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d224-120">When overridden in a derived class, atomizes the specified string and adds it to the <see langword="XmlNameTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d224-120">When overridden in a derived class, atomizes the specified string and adds it to the <see langword="XmlNameTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d224-121">The new atomized string or the existing one if it already exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d224-121">The new atomized string or the existing one if it already exists.</span>
          </span>
          <span data-ttu-id="2d224-122">If length is zero, String.Empty is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d224-122">If length is zero, String.Empty is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d224-123">Para obtener m치s informaci칩n sobre cadenas subdivididas, vea <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="2d224-123">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="2d224-124">0 &gt; <paramref name="offset" />  -or-  <paramref name="offset" /> &gt;= <paramref name="array" />.Length  -or-  <paramref name="length" /> &gt; <paramref name="array" />.Length  The above conditions do not cause an exception to be thrown if <paramref name="length" /> =0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d224-124">0 &gt; <paramref name="offset" />  -or-  <paramref name="offset" /> &gt;= <paramref name="array" />.Length  -or-  <paramref name="length" /> &gt; <paramref name="array" />.Length  The above conditions do not cause an exception to be thrown if <paramref name="length" /> =0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2d224-125">
            <paramref name="length" /> &lt; 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d224-125">
              <paramref name="length" /> &lt; 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Get">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2d224-126">When overridden in a derived class, gets the atomized string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d224-126">When overridden in a derived class, gets the atomized string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d224-127">Para obtener m치s informaci칩n sobre cadenas subdivididas, vea <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="2d224-127">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract string Get (string array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Get(string array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Get (array As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Get(System::String ^ array);" />
      <MemberSignature Language="F#" Value="abstract member Get : string -&gt; string" Usage="xmlNameTable.Get array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="2d224-128">The name to look up.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d224-128">The name to look up.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d224-129">When overridden in a derived class, gets the atomized string containing the same value as the specified string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d224-129">When overridden in a derived class, gets the atomized string containing the same value as the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d224-130">The atomized string or <see langword="null" /> if the string has not already been atomized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d224-130">The atomized string or <see langword="null" /> if the string has not already been atomized.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d224-131">Para obtener m치s informaci칩n sobre cadenas subdivididas, vea <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="2d224-131">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d224-132">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d224-132">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract string Get (char[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Get(char[] array, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.Get(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Get (array As Char(), offset As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Get(cli::array &lt;char&gt; ^ array, int offset, int length);" />
      <MemberSignature Language="F#" Value="abstract member Get : char[] * int * int -&gt; string" Usage="xmlNameTable.Get (array, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="2d224-133">The character array containing the name to look up.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d224-133">The character array containing the name to look up.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="2d224-134">The zero-based index into the array specifying the first character of the name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d224-134">The zero-based index into the array specifying the first character of the name.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="2d224-135">The number of characters in the name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d224-135">The number of characters in the name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d224-136">When overridden in a derived class, gets the atomized string containing the same characters as the specified range of characters in the given array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d224-136">When overridden in a derived class, gets the atomized string containing the same characters as the specified range of characters in the given array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d224-137">The atomized string or <see langword="null" /> if the string has not already been atomized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d224-137">The atomized string or <see langword="null" /> if the string has not already been atomized.</span>
          </span>
          <span data-ttu-id="2d224-138">If <paramref name="length" /> is zero, String.Empty is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d224-138">If <paramref name="length" /> is zero, String.Empty is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d224-139">Para obtener m치s informaci칩n sobre cadenas subdivididas, vea <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="2d224-139">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="2d224-140">0 &gt; <paramref name="offset" />  -or-  <paramref name="offset" /> &gt;= <paramref name="array" />.Length  -or-  <paramref name="length" /> &gt; <paramref name="array" />.Length  The above conditions do not cause an exception to be thrown if <paramref name="length" /> =0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d224-140">0 &gt; <paramref name="offset" />  -or-  <paramref name="offset" /> &gt;= <paramref name="array" />.Length  -or-  <paramref name="length" /> &gt; <paramref name="array" />.Length  The above conditions do not cause an exception to be thrown if <paramref name="length" /> =0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2d224-141">
            <paramref name="length" /> &lt; 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d224-141">
              <paramref name="length" /> &lt; 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>