<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlWriter.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e05b5b2-d481-4262-b7b7-7de7ac2afe072d9bde4c4b5d23f9bcfce8e6468d763b098f260f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d9bde4c4b5d23f9bcfce8e6468d763b098f260f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/07/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>Represents a writer that provides a fast, non-cached, forward-only way to generate streams or files that contain XML data.</source>
          <target state="translated">Representa un sistema de escritura que constituye una manera rápida, no almacenada en caché y de solo avance para generar flujos o archivos que contienen datos XML.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> class writes XML data to a stream, file, text reader, or string.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> clase escribe datos XML en una secuencia, el archivo, el lector de texto o la cadena.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>It supports the W3C <bpt id="p1">[</bpt>Extensible Markup Language (XML) 1.0 (fourth edition)<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept> and <bpt id="p2">[</bpt>Namespaces in XML 1.0 (third edition)<ept id="p2">](https://www.w3.org/TR/REC-xml-names/)</ept> recommendations.</source>
          <target state="translated">Es compatible con el W3C <bpt id="p1">[</bpt>lenguaje de marcado Extensible (XML) 1.0 (cuarta edición)<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept> y <bpt id="p2">[</bpt>espacios de nombres en XML 1.0 (tercera edición)<ept id="p2">](https://www.w3.org/TR/REC-xml-names/)</ept> recomendaciones.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The members of the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> class enable you to:</source>
          <target state="translated">Los miembros de la <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> clase le permiten:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Verify that the characters are legal XML characters and that element and attribute names are valid XML names.</source>
          <target state="translated">Comprobar que los caracteres son caracteres legales XML y que los nombres de elemento y atributo son nombres XML válidos.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Verify that the XML document is well-formed.</source>
          <target state="translated">Comprobar que el documento XML tiene el formato correcto.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Encode binary bytes as Base64 or BinHex, and write out the resulting text.</source>
          <target state="translated">Codificar bytes binarios Base64 o BinHex y escribe el texto resultante.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Pass values by using common language runtime types instead of strings, to avoid having to manually perform value conversions.</source>
          <target state="translated">Pasar valores mediante tipos common language runtime en lugar de cadenas, para evitar tener que realizar manualmente conversiones de valores.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Write multiple documents to one output stream.</source>
          <target state="translated">Escribir varios documentos en un flujo de salida.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Write valid names, qualified names, and name tokens.</source>
          <target state="translated">Escribir nombres válidos, nombres completos y tokens de nombres.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>In this section:</source>
          <target state="translated">En esta sección:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Creating an XML writer<ept id="p1">](#create)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Crear un escritor de XML<ept id="p1">](#create)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Specifying the output format<ept id="p1">](#output)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Especificar el formato de salida<ept id="p1">](#output)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Data conformance<ept id="p1">](#conformance)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Conformidad de datos<ept id="p1">](#conformance)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Writing elements<ept id="p1">](#writing_elements)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Escritura de elementos<ept id="p1">](#writing_elements)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Writing attributes<ept id="p1">](#writing_attributes)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Atributos de escritura<ept id="p1">](#writing_attributes)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Handling namespaces<ept id="p1">](#handling_ns)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Control de espacios de nombres<ept id="p1">](#handling_ns)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Writing typed data<ept id="p1">](#writing_types)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Escribir datos de tipo<ept id="p1">](#writing_types)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Closing the XML writer<ept id="p1">](#close)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Cierre el sistema de escritura XML<ept id="p1">](#close)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Asynchronous programming<ept id="p1">](#async)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Programación asincrónica<ept id="p1">](#async)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Security considerations<ept id="p1">](#security)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Consideraciones de seguridad<ept id="p1">](#security)</ept></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Creating an XML writer</source>
          <target state="translated">Crear un escritor de XML</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To create an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance, use the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Para crear un <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> de la instancia, utilice el <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To specify the set of features you want to enable on the XML writer, pass an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> to the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> method.</source>
          <target state="translated">Para especificar el conjunto de características que desea habilitar en el sistema de escritura XML, pase una <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> a la <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Otherwise, default settings are used.</source>
          <target state="translated">En caso contrario, se utiliza la configuración predeterminada.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>See the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> reference pages for details.</source>
          <target state="translated">Consulte la <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> páginas para obtener más información de referencia.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Specifying the output format</source>
          <target state="translated">Especificar el formato de salida</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class includes several properties that control how <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> output is formatted:</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> clase incluye varias propiedades que controlan cómo <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> se formatea la salida:</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Property</source>
          <target state="translated">Propiedad.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Description</source>
          <target state="translated">Descripción</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Specifies the text encoding to use.</source>
          <target state="translated">Especifica la codificación de texto que se va a utilizar.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The default is <ph id="ph1">`Encoding.UTF8`</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">`Encoding.UTF8`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Indicates whether to indent elements.</source>
          <target state="translated">Indica si se van a aplicar sangrías a los elementos. </target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The default is <ph id="ph1">`false`</ph> (no indentation).</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">`false`</ph> (no hay sangría).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Specifies the character string to use when indenting.</source>
          <target state="translated">Especifica la cadena de caracteres que se va a utilizar para aplicar la sangría.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The default is two spaces.</source>
          <target state="translated">El valor predeterminado es dos espacios.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Specifies the character string to use for line breaks.</source>
          <target state="translated">Especifica la cadena de caracteres que se va a utilizar para los saltos de línea.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The default is <ph id="ph1">`\r\n`</ph> (carriage return, line feed).</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">`\r\n`</ph> (retorno de carro, avance de línea).</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Specifies how to handle newline characters.</source>
          <target state="translated">Especifica cómo tratar los caracteres de nueva línea.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Indicates whether to write attributes on a new line.</source>
          <target state="translated">Indica si se van a escribir atributos en una línea nueva.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Indent%2A&gt;</ph> should be set to <ph id="ph2">`true`</ph> when using this property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Indent%2A&gt;</ph> se debería establecer en <ph id="ph2">`true`</ph> si se utiliza esta propiedad.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Indicates whether to write an XML declaration.</source>
          <target state="translated">Indica si se va a escribir una declaración XML.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Indent%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings.IndentChars%2A&gt;</ph> properties control how insignificant white space is formatted.</source>
          <target state="translated">Las propiedades <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Indent%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings.IndentChars%2A&gt;</ph> controlan cómo se da formato al espacio en blanco que es poco importante.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For example, to indent element nodes:</source>
          <target state="translated">Por ejemplo, para aplicar sangría a los nodos de elemento:</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A&gt;</ph> to write each attribute on a new line with one extra level of indentation:</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A&gt;</ph> para escribir cada atributo en una nueva línea con un nivel adicional de sangría:</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Data conformance</source>
          <target state="translated">Conformidad de datos</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>An XML writer uses two properties from the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to check for data conformance:</source>
          <target state="translated">Un sistema de escritura XML utiliza dos propiedades de la <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> clase para comprobar el cumplimiento de datos:</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.CheckCharacters%2A&gt;</ph> property instructs the XML writer to check characters and throw an <ph id="ph2">&lt;xref:System.Xml.XmlException&gt;</ph> exception if any characters are outside the legal range, as defined by the W3C.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.CheckCharacters%2A&gt;</ph> propiedad indica el sistema de escritura XML para comprobar los caracteres y producir un <ph id="ph2">&lt;xref:System.Xml.XmlException&gt;</ph> excepción si los caracteres están fuera del rango permitido, tal como se define por el W3C.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A&gt;</ph> property configures the XML writer to check that the stream being written complies with the rules for a well-formed XML 1.0 document or document fragment, as defined by the W3C.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A&gt;</ph> propiedad configura el sistema de escritura XML para comprobar que la secuencia que se está escribiendo cumple las reglas de un documento de XML 1.0 correcto o un fragmento de documento, tal como se define por el W3C.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The three conformance levels are described in the following table.</source>
          <target state="translated">Los tres niveles se describen en la tabla siguiente.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The default is <ph id="ph1">&lt;xref:System.Xml.ConformanceLevel.Document&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;xref:System.Xml.ConformanceLevel.Document&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For details, see the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Xml.ConformanceLevel?displayProperty=nameWithType&gt;</ph> enumeration.</source>
          <target state="translated">Para obtener más información, consulte el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType&gt;</ph> propiedad y el <ph id="ph2">&lt;xref:System.Xml.ConformanceLevel?displayProperty=nameWithType&gt;</ph> enumeración.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Level</source>
          <target state="translated">Nivel</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Description</source>
          <target state="translated">Descripción</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The XML output conforms to the rules for a well-formed XML 1.0 document and can be processed by any conforming processor.</source>
          <target state="translated">La salida XML se ajusta a las reglas para un documento de XML 1.0 correcto y puede ser procesada por cualquier procesador compatible.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The XML output conforms to the rules for a well-formed XML 1.0 document fragment.</source>
          <target state="translated">La salida XML se ajusta a las reglas para un fragmento de documento de XML 1.0 correcto.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The XML writer determines which level of conformation checking to apply (document or fragment) based on the incoming data.</source>
          <target state="translated">El escritor XML determina qué nivel de conformación comprobación para aplicar (documento o fragmento) en función de los datos entrantes.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Writing elements</source>
          <target state="translated">Escritura de elementos</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>You can use the following <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> methods to write element nodes.</source>
          <target state="translated">Puede utilizar la siguiente <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> métodos para escribir nodos de elemento.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For examples, see the methods listed.</source>
          <target state="translated">Para obtener ejemplos, vea los métodos enumerados.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Use</source>
          <target state="translated">Usar</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To</source>
          <target state="translated">En</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Write an entire element  node, including a string value.</source>
          <target state="translated">Escribir un nodo de elemento completo, incluido un valor de cadena.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To write an element value by using multiple method calls.</source>
          <target state="translated">Para escribir un valor de elemento mediante el uso de varias llamadas a métodos.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For example, you can call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to write a typed value, <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteCharEntity%2A&gt;</ph> to write a character entity, <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> to write an attribute, or you can write a child element.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> para escribir un valor con establecimiento de tipos, a <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteCharEntity%2A&gt;</ph> para escribir una entidad de caracteres, a <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> para escribir un atributo o puede escribir un elemento secundario.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>This is a more sophisticated version of the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementString%2A&gt;</ph> method.</source>
          <target state="translated">Se trata de una versión más sofisticada de la <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementString%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To close the element, you call the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph> method.</source>
          <target state="translated">Para cerrar el elemento, se llama a la <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To copy an element node found at the current position of an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> object.</source>
          <target state="translated">Para copiar un nodo de elemento que se encuentra en la posición actual de un <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> o <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>When called, it copies everything from the source object to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance.</source>
          <target state="translated">Cuando se llama, copia todo del objeto de origen en la instancia de <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Writing attributes</source>
          <target state="translated">Atributos de escritura</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>You can use the following <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> methods to write attributes on element nodes.</source>
          <target state="translated">Puede utilizar la siguiente <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> métodos para escribir atributos en nodos de elemento.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>These methods can also be used to create namespace declarations on an element, as discussed in the next section.</source>
          <target state="translated">También se pueden utilizar estos métodos para crear las declaraciones de espacio de nombres en un elemento, como se describe en la sección siguiente.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Use</source>
          <target state="translated">Usar</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To</source>
          <target state="translated">En</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To write an entire attribute node, including a string value.</source>
          <target state="translated">Para escribir un nodo de atributos completo, incluido un valor de cadena.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To write the attribute value using multiple method calls.</source>
          <target state="translated">Para escribir el valor del atributo utilizando varias llamadas a métodos.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For example, you can call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to write a typed value.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> para escribir un valor con tipo.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>This is a more sophisticated version of the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementString%2A&gt;</ph> method.</source>
          <target state="translated">Se trata de una versión más sofisticada de la <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementString%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To close the element, you call the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndAttribute%2A&gt;</ph> method.</source>
          <target state="translated">Para cerrar el elemento, se llama a la <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndAttribute%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To copy all the attributes found at the current position of an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object.</source>
          <target state="translated">Para copiar todos los atributos encontrados en la posición actual de un <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The attributes that are written depend on the type of node the reader is currently positioned on:</source>
          <target state="translated">Los atributos que se escriben dependen del tipo de nodo que se encuentra situado actualmente el lector:</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>-   For an attribute node, it writes the current attribute, and then the rest of the attributes until the element closing tag.</source>
          <target state="translated">-Para un nodo de atributo, escribe el atributo actual y, a continuación, en el resto de los atributos hasta la etiqueta de cierre del elemento.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>-   For an element node, it writes all attributes contained by the element.</source>
          <target state="translated">-Para un nodo de elemento, escribe todos los atributos incluidos en el elemento.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>-   For an XML declaration node, it writes all the attributes in the declaration.</source>
          <target state="translated">-Para un nodo de declaración XML, escribe todos los atributos en la declaración.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>-   For all other node types, the method throws an exception.</source>
          <target state="translated">-Para los demás tipos de nodo, el método produce una excepción.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Handling namespaces</source>
          <target state="translated">Control de espacios de nombres</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Namespaces are used to qualify element and attribute names in an XML document.</source>
          <target state="translated">Los espacios de nombres se utilizan para calificar nombres de atributos y elementos en un documento XML.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Namespace prefixes associate elements and attributes with namespaces, which are in turn associated with URI references.</source>
          <target state="translated">Prefijos de Namespace asocian elementos y atributos con espacios de nombres, que están asociados a su vez a las referencias URI.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Namespaces create element and attribute name uniqueness in an XML document.</source>
          <target state="translated">Los espacios de nombres crean nombres de elementos y atributos únicos en un documento XML.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> maintains a namespace stack that corresponds to all the namespaces defined in the current namespace scope.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> mantiene una pila de espacio de nombres que corresponde a todos los espacios de nombres definidos en el ámbito de espacio de nombres actual.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>When writing elements and attributes you can utilize namespaces in the following ways:</source>
          <target state="translated">A la hora de escribir elementos y atributos, puede utilizar espacios de nombres de las siguientes formas:</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Declare namespaces manually by using the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> method.</source>
          <target state="translated">Declarar espacios de nombres manualmente mediante el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>This can be useful when you know how to best optimize the number of namespace declarations.</source>
          <target state="translated">Esto puede resultar útil si conoce la mejor forma de optimizar el número de declaraciones de espacios de nombres.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For an example, see the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29&gt;</ph> method.</source>
          <target state="translated">Para obtener un ejemplo, vea el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Override the current namespace declaration with a new namespace.</source>
          <target state="translated">Invalidar la declaración de espacio de nombres actual con un espacio de nombres nuevo.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>In the following code, the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> method changes the namespace URI for the <ph id="ph2">`"x"`</ph> prefix from <ph id="ph3">`"123"`</ph> to <ph id="ph4">`"abc"`</ph>.</source>
          <target state="translated">En el código siguiente, la <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> método cambia el URI de espacio de nombres para el <ph id="ph2">`"x"`</ph> prefijo de <ph id="ph3">`"123"`</ph> a <ph id="ph4">`"abc"`</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The code generates the following XML string:</source>
          <target state="translated">El código genera la siguiente cadena XML:</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Specify a namespace prefix when writing attributes or elements.</source>
          <target state="translated">Especifique un prefijo de espacio de nombres al escribir atributos o elementos.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Many of the methods used to write element and attributes enable you to do this.</source>
          <target state="translated">Muchos de los métodos usados para escribir elementos y atributos le permiten hacer esto.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For example, the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElement%28System.String%2CSystem.String%2CSystem.String%29&gt;</ph> method writes a start tag and associates it with a specified namespace and prefix.</source>
          <target state="translated">Por ejemplo, el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElement%28System.String%2CSystem.String%2CSystem.String%29&gt;</ph> método escribe una etiqueta inicial y lo asocia con un espacio de nombres especificado y un prefijo.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Writing typed data</source>
          <target state="translated">Escribir datos de tipo</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method accepts a common language runtime (CLR) object, converts the input value to its string representation according to XML schema definition language (XSD) data type conversion rules, and writes it out by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> método acepta un objeto de common language runtime (CLR), convierte el valor de entrada en su representación de cadena según las reglas de conversión de tipos de datos XML schema definition language (XSD) y lo escribe horizontal mediante el uso de la <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>This is easier than using the methods in the <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> class to convert the typed data to a string value before writing it out.</source>
          <target state="translated">Esto resulta más sencillo que el uso de los métodos de la <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> clase para convertir los datos con tipo a un valor de cadena antes de escribirlo.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>When writing to text, the typed value is serialized to text by using the <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> rules for that schema type.</source>
          <target state="translated">Cuando se escribe en texto, el valor con tipo se serializa en texto utilizando la <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> reglas para ese tipo de esquema.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For default XSD data types that correspond to CLR types, see the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method.</source>
          <target state="translated">Para tipos de datos XSD en el valor predeterminado que se corresponden con los tipos de CLR, vea el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> can also be used to write to an XML data store.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> también puede utilizarse para escribir en un almacén de datos XML.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For example, the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> class can create an <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> object to create nodes for an <ph id="ph3">&lt;xref:System.Xml.XmlDocument&gt;</ph> object.</source>
          <target state="translated">Por ejemplo, la clase <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> puede crear un objeto <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> para crear nodos para un objeto <ph id="ph3">&lt;xref:System.Xml.XmlDocument&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>If the data store has schema information available to it, the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method throws an exception if you try to convert to a type that is not allowed.If the data store does not have schema information available to it, the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method treats all values as an <ph id="ph3">`xsd:anySimpleType`</ph> type.</source>
          <target state="translated">Si el almacén de datos tiene información de esquema disponible, la <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> método produce una excepción si se intenta convertir a un tipo que no está permitido. Si el almacén de datos no tiene información de esquema disponible, el <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> método trata todos los valores como un <ph id="ph3">`xsd:anySimpleType`</ph> tipo.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Closing the XML writer</source>
          <target state="translated">Cierre el sistema de escritura XML</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>When you use <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> methods to output XML, the elements and attributes are not written until you call the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> method.</source>
          <target state="translated">Cuando usas <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> métodos para generar XML, los elementos y atributos no se escriben hasta que llame a la <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For example, if you are using <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> to populate an <ph id="ph2">&lt;xref:System.Xml.XmlDocument&gt;</ph> object, you won't be able to see the written elements and attributes in the target document until you close the <ph id="ph3">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance.</source>
          <target state="translated">Por ejemplo, si usas <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> para rellenar un <ph id="ph2">&lt;xref:System.Xml.XmlDocument&gt;</ph> objeto, no podrá ver los elementos y atributos escritos en el documento de destino hasta que se cierra el <ph id="ph3">&lt;xref:System.Xml.XmlWriter&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Asynchronous programming</source>
          <target state="translated">Programación asincrónica</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Most of the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> methods have asynchronous counterparts that have "Async" at the end of their method names.</source>
          <target state="translated">La mayoría de los <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> métodos tienen homólogos asincrónicos que tienen "Async" al final de sus nombres de método.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For example, the asynchronous equivalent of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> is <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A&gt;</ph>.</source>
          <target state="translated">Por ejemplo, el equivalente asincrónico de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> es <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method, which doesn't have an asynchronous counterpart, convert the return value to a string and use the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method instead.</source>
          <target state="translated">Para el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> método, que no tienen un homólogo asincrónico, convertir el valor devuelto en una cadena y usar el <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> método en su lugar.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Security considerations</source>
          <target state="translated">Consideraciones de seguridad</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Consider the following when working with the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> class:</source>
          <target state="translated">Tenga en cuenta lo siguiente al trabajar con la <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> clase:</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Exceptions thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> can disclose path information that you do not want bubbled up to the app.</source>
          <target state="translated">Las excepciones producidas por el <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> puede revelar información de ruta de acceso que no desea que se ejecuta hasta la aplicación.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Your app must catch exceptions and process them appropriately.</source>
          <target state="translated">La aplicación debe detectar las excepciones y procesarlas correctamente.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> does not validate any data that is passed to the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteDocType%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> no valida los datos que se pasen a la <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteDocType%2A&gt;</ph> o <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>You should not pass arbitrary data to these methods.</source>
          <target state="translated">No debe pasar datos arbitrarios a estos métodos.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The following example code shows how to use the asynchronous API to generate XML.</source>
          <target state="translated">Ejemplo de código siguiente muestra cómo usar la API asincrónica para generar XML.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Close">
          <source>When overridden in a derived class, closes this stream and the underlying stream.</source>
          <target state="translated">Cuando se invalida en una clase derivada, cierra este flujo y el flujo subyacente.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Close">
          <source>Any elements or attributes left open are automatically closed.</source>
          <target state="translated">Todos los elementos o atributos que se dejan abiertos se cierran automáticamente.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Close">
          <source>When you use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> methods to output XML, the elements and attributes will not be written until you call the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> method.</source>
          <target state="translated">Cuando se usa el <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> métodos para generar XML, los elementos y atributos no se escribirán hasta que llame a la <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Close">
          <source>For example, if you are using the XmlWriter to populate an <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>, until you close the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>, you will not be able to observe the written elements and attributes in the target document.</source>
          <target state="translated">Por ejemplo, si usa XmlWriter para rellenar un <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>, hasta que se cierra el <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>, no podrá observar los elementos y atributos escritos en el documento de destino.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Close">
          <source>The following example writes an XML node.</source>
          <target state="translated">En el ejemplo siguiente se escribe un nodo XML.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Close">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Close">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance.</source>
          <target state="translated">Crea una nueva instancia de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Some of the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> overloads include a <ph id="ph2">`settings`</ph> parameter that accepts an <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object.</source>
          <target state="translated">Algunos de los <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> sobrecargas incluyen un <ph id="ph2">`settings`</ph> parámetro que acepta un <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>You can use this object to:</source>
          <target state="translated">Puede utilizar este objeto:</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Specify which features you want supported on the created <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> object.</source>
          <target state="translated">Especificar las características que van a admitir en creado <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Reuse the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object to create multiple writer objects.</source>
          <target state="translated">Reutilizar el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> objeto que se va a crear varios objetos de sistema de escritura.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object is copied and marked read-only for each created writer.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> se copia y se marca como solo lectura para cada sistema de escritura que se crea.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Changes to the settings on an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> instance do not affect existing writers with the same settings.</source>
          <target state="translated">Los cambios en los valores de una instancia de <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> no afectan a los sistemas de escritura existentes que tienen los mismos valores.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Thus, you can use the same settings to create multiple writers with the same functionality.</source>
          <target state="translated">Por lo tanto, puede utilizar los mismos valores para crear varios sistemas de escritura con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Or, you can modify the settings on an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> instance and create a new writer with a different set of features.</source>
          <target state="translated">O bien, puede modificar los valores de una instancia de <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> y crear un nuevo sistema de escritura con un conjunto de características diferente.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Add features to an existing XML writer.</source>
          <target state="translated">Agregar características a un sistema de escritura XML existente.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> method can accept another <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> object.</source>
          <target state="translated">El método <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> puede aceptar otro objeto <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The underlying <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> object does not have to be an XML writer created by the static <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> method.</source>
          <target state="translated">Subyacente <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> objeto no tiene que ser un sistema de escritura XML creado por el método estático <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For example, you can specify a user-defined XML writer to add additional features to.</source>
          <target state="translated">Por ejemplo, puede especificar un sistema de escritura XML definido por el usuario para agregar características adicionales.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Take full advantage of features such as better conformance checking and compliance to the <bpt id="p1">[</bpt>XML 1.0 recommendation<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept> that are available only on <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> objects created by the static <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> method.</source>
          <target state="translated">Aprovechar al máximo de características, como una mejor comprobación de conformidad y compatibilidad para la <bpt id="p1">[</bpt>recomendación XML 1.0<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept> que solo están disponibles en <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> objetos creados por el método estático <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>If you use a <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> overload that doesn't accept an <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object, the following default writer settings are used:</source>
          <target state="translated">Si utiliza un <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> sobrecarga que no acepte un <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> de objeto, se usa la siguiente configuración del escritor de forma predeterminada:</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Setting</source>
          <target state="translated">Parámetro</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Default</source>
          <target state="translated">Default</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Two spaces</source>
          <target state="translated">Dos espacios</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (no removal)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (sin eliminación)</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><ph id="ph1">`\r\n`</ph> (carriage return, new line)</source>
          <target state="translated"><ph id="ph1">`\r\n`</ph> (retorno de carro, nueva línea)</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Although the .NET Framework includes the <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> class, which is a concrete implementation of the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> class, we recommend that you create <ph id="ph3">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph4">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> method.</source>
          <target state="translated">Aunque .NET Framework incluye la <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> (clase), que es una implementación concreta de la <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> (clase), le recomendamos que cree <ph id="ph3">&lt;xref:System.Xml.XmlWriter&gt;</ph> instancias utilizando el <ph id="ph4">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>The stream to which you want to write.</source>
          <target state="translated">Flujo en el que desea escribir.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> writes XML 1.0 text syntax and appends it to the specified stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> escribe la sintaxis de texto de XML 1.0 y la anexa a la secuencia especificada.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the specified stream.</source>
          <target state="translated">Crea una nueva instancia de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> mediante la secuencia especificada.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated">Un objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>When you use this overload, an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with the following default settings is used to create the XML writer:</source>
          <target state="translated">Cuando utilice esta sobrecarga, un <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> objeto con la siguiente configuración predeterminada se usa para crear el escritor XML:</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>Setting</source>
          <target state="translated">Parámetro</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>Default</source>
          <target state="translated">Default</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>Two spaces</source>
          <target state="translated">Dos espacios</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (no removal)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (sin eliminación)</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source><ph id="ph1">`\r\n`</ph> (carriage return, new line)</source>
          <target state="translated"><ph id="ph1">`\r\n`</ph> (retorno de carro, nueva línea)</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>If you want to specify the features to support on the created writer, use an overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object as one of its arguments, and pass in an <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with your custom settings.</source>
          <target state="translated">Si desea especificar las características compatibles con el escritor creado, use una sobrecarga que toma un <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> objeto como uno de sus argumentos y pase un <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> objeto con su configuración personalizada.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>Also, XmlWriter always writes a Byte Order Mark (BOM) to the underlying data stream; however, some streams must not have a BOM.</source>
          <target state="translated">Además, el objeto XmlWriter siempre escribe una marca de orden de bytes (BOM) a la secuencia de datos subyacente; Sin embargo, algunas secuencias no deben tener una marca BOM.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>To omit the BOM, create a new <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object and set the Encoding property to be a new <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> object with the Boolean value in the constructor set to false.</source>
          <target state="translated">Para omitir la lista de materiales, cree un nuevo <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> objeto y establecer la propiedad Encoding para ser un nuevo <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> objeto con el valor booleano en el constructor establece en false.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>The following example writes an XML fragment to a memory stream.</source>
          <target state="translated">En el ejemplo siguiente se escribe un fragmento XML en una secuencia de memoria.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>(It uses the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%28System.IO.Stream%2CSystem.Xml.XmlWriterSettings%29&gt;</ph> overload, which also configures the settings on the new XML writer instance.)</source>
          <target state="translated">(Usa el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%28System.IO.Stream%2CSystem.Xml.XmlWriterSettings%29&gt;</ph> sobrecarga, que también configura las opciones en la nueva instancia de objeto de escritura XML.)</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to which you want to write.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> en el que se desea escribir.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> writes XML 1.0 text syntax and appends it to the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> escribe la sintaxis de texto de XML 1.0 y la anexa al <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">Crea una nueva instancia de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> mediante el objeto <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated">Un objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>When you use this overload, an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with default settings is used to create the XML writer.</source>
          <target state="translated">Cuando utilice esta sobrecarga, un <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> objeto con la configuración predeterminada se usa para crear el escritor XML.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>Setting</source>
          <target state="translated">Parámetro</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>Default</source>
          <target state="translated">Default</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>Two spaces</source>
          <target state="translated">Dos espacios</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (no removal)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (sin eliminación)</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source><ph id="ph1">`\r\n`</ph> (carriage return, new line)</source>
          <target state="translated"><ph id="ph1">`\r\n`</ph> (retorno de carro, nueva línea)</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>If you want to specify the features to support on the created writer, use an overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object as one of its arguments, and pass in an <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with your custom settings.</source>
          <target state="translated">Si desea especificar las características compatibles con el escritor creado, use una sobrecarga que toma un <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> objeto como uno de sus argumentos y pase un <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> objeto con su configuración personalizada.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>The following example creates a writer that outputs to the console.</source>
          <target state="translated">En el ejemplo siguiente se crea un escritor que envía a la consola.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;paramref name="text" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor <ph id="ph1">&lt;paramref name="text" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>The file to which you want to write.</source>
          <target state="translated">Archivo en el que desea escribir.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> creates a file at the specified path and writes to it in XML 1.0 text syntax.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> crea un archivo en la ruta de acceso especificada y lo escribe con la sintaxis de texto de XML 1.0.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>outputFileName<ept id="p1">&lt;/c&gt;</ept> must be a file system path.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>outputFileName<ept id="p1">&lt;/c&gt;</ept> debe ser una ruta del sistema de archivos.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the specified filename.</source>
          <target state="translated">Crea una nueva instancia de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> mediante el nombre de archivo especificado.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated">Un objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>When you use this overload, an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with default settings is used to create the XML writer.</source>
          <target state="translated">Cuando utilice esta sobrecarga, un <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> objeto con la configuración predeterminada se usa para crear el escritor XML.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>Setting</source>
          <target state="translated">Parámetro</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>Default</source>
          <target state="translated">Default</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>Two spaces</source>
          <target state="translated">Dos espacios</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (no removal)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (sin eliminación)</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source><ph id="ph1">`\r\n`</ph> (carriage return, new line)</source>
          <target state="translated"><ph id="ph1">`\r\n`</ph> (retorno de carro, nueva línea)</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>If you want to specify the features to support on the created XML writer, use an overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object as one of its arguments, and pass in a <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with your custom settings.</source>
          <target state="translated">Si desea especificar las características compatibles con el escritor XML creado, use una sobrecarga que toma un <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> objeto como uno de sus argumentos y pase un <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> objeto con su configuración personalizada.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> object and writes a book node.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> de objetos y escribe un nodo de libro.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="url" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor <ph id="ph1">&lt;paramref name="url" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> to which to write to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> en el que se va a escribir.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>Content written by the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> is appended to the <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>.</source>
          <target state="translated">El contenido que escribe <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> se anexa a <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the specified <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>.</source>
          <target state="translated">Crea una nueva instancia de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> mediante el objeto <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated">Un objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>When you use this overload, an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with default settings is used to create the XML writer.</source>
          <target state="translated">Cuando utilice esta sobrecarga, un <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> objeto con la configuración predeterminada se usa para crear el escritor XML.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>Setting</source>
          <target state="translated">Parámetro</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>Default</source>
          <target state="translated">Default</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>Two spaces</source>
          <target state="translated">Dos espacios</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (no removal)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (sin eliminación)</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source><ph id="ph1">`\r\n`</ph> (carriage return, new line)</source>
          <target state="translated"><ph id="ph1">`\r\n`</ph> (retorno de carro, nueva línea)</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>If you want to specify the features to support on the created XML writer, use an overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object as one of its arguments, and pass in a <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with your custom settings.</source>
          <target state="translated">Si desea especificar las características compatibles con el escritor XML creado, use una sobrecarga que toma un <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> objeto como uno de sus argumentos y pase un <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> objeto con su configuración personalizada.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>The <ph id="ph1">&lt;paramref name="builder" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor <ph id="ph1">&lt;paramref name="builder" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object that you want to use as the underlying writer.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> que desea utilizar como sistema de escritura subyacente.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated">Crea una nueva instancia de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> mediante el objeto <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object that is wrapped around the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> que contiene el objeto <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>This method allows you add features to an underlying <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> object.</source>
          <target state="translated">Este método permite agregar características a una subyacente <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>The underlying <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> object can be an object created by the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method, or an object created using the <ph id="ph3">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> implementation.</source>
          <target state="translated">Subyacente <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> objeto puede ser un objeto creado por el <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método o un objeto creado con la <ph id="ph3">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> implementación.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>When you use this overload, an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with default settings is used to create the XML writer.</source>
          <target state="translated">Cuando utilice esta sobrecarga, un <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> objeto con la configuración predeterminada se usa para crear el escritor XML.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>Setting</source>
          <target state="translated">Parámetro</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>Default</source>
          <target state="translated">Default</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>Two spaces</source>
          <target state="translated">Dos espacios</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (no removal)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (sin eliminación)</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source><ph id="ph1">`\r\n`</ph> (carriage return, new line)</source>
          <target state="translated"><ph id="ph1">`\r\n`</ph> (retorno de carro, nueva línea)</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>If you want to specify the features to support on the created XML writer, use an overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object as one of its arguments, and pass in a <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with your custom settings.</source>
          <target state="translated">Si desea especificar las características compatibles con el escritor XML creado, use una sobrecarga que toma un <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> objeto como uno de sus argumentos y pase un <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> objeto con su configuración personalizada.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;paramref name="writer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor <ph id="ph1">&lt;paramref name="writer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>The stream to which you want to write.</source>
          <target state="translated">Flujo en el que desea escribir.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> writes XML 1.0 text syntax and appends it to the specified stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> escribe la sintaxis de texto de XML 1.0 y la anexa a la secuencia especificada.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object used to configure the new <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> que se utiliza para configurar la nueva instancia de <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>If this is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, a <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> with default settings is used.</source>
          <target state="translated">Si es <ph id="ph1">&lt;see langword="null" /&gt;</ph>, se utiliza un objeto <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> con la configuración predeterminada.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> is being used with the <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph> method, you should use the <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> property to obtain an <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object with the correct settings.</source>
          <target state="translated">Si <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> se está utilizando con el método <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph>, debe usar la propiedad <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> para obtener un objeto <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> con la configuración correcta.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>This ensures that the created <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object has the correct output settings.</source>
          <target state="translated">Con ello se garantiza que el objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> creado tenga la configuración de resultados correcta.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the stream and <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object.</source>
          <target state="translated">Crea una nueva instancia de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> mediante la secuencia y el objeto <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated">Un objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>XmlWriter always writes a Byte Order Mark (BOM) to the underlying data stream; however, some streams must not have a BOM.</source>
          <target state="translated">XmlWriter siempre escribe una marca de orden de bytes (BOM) en el flujo de datos subyacente; Sin embargo, algunas secuencias no deben tener una marca BOM.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>To omit the BOM, create a new <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object and set the Encoding property to be a new <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> object with the Boolean value in the constructor set to false.</source>
          <target state="translated">Para omitir la lista de materiales, cree un nuevo <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> objeto y establecer la propiedad Encoding para ser un nuevo <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> objeto con el valor booleano en el constructor establece en false.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>The following example writes an XML fragment to a memory stream.</source>
          <target state="translated">En el ejemplo siguiente se escribe un fragmento XML en una secuencia de memoria.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to which you want to write.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> en el que se desea escribir.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> writes XML 1.0 text syntax and appends it to the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> escribe la sintaxis de texto de XML 1.0 y la anexa al <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object used to configure the new <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> que se utiliza para configurar la nueva instancia de <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>If this is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, a <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> with default settings is used.</source>
          <target state="translated">Si es <ph id="ph1">&lt;see langword="null" /&gt;</ph>, se utiliza un objeto <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> con la configuración predeterminada.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> is being used with the <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph> method, you should use the <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> property to obtain an <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object with the correct settings.</source>
          <target state="translated">Si <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> se está utilizando con el método <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph>, debe usar la propiedad <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> para obtener un objeto <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> con la configuración correcta.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>This ensures that the created <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object has the correct output settings.</source>
          <target state="translated">Con ello se garantiza que el objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> creado tenga la configuración de resultados correcta.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> objects.</source>
          <target state="translated">Crea una nueva instancia de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> mediante los objetos <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> y <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated">Un objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>The following example writes out an XML string.</source>
          <target state="translated">En el ejemplo siguiente se escribe una cadena XML.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;paramref name="text" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor <ph id="ph1">&lt;paramref name="text" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>The file to which you want to write.</source>
          <target state="translated">Archivo en el que desea escribir.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> creates a file at the specified path and writes to it in XML 1.0 text syntax.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> crea un archivo en la ruta de acceso especificada y lo escribe con la sintaxis de texto de XML 1.0.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>outputFileName<ept id="p1">&lt;/c&gt;</ept> must be a file system path.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>outputFileName<ept id="p1">&lt;/c&gt;</ept> debe ser una ruta del sistema de archivos.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object used to configure the new <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> que se utiliza para configurar la nueva instancia de <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>If this is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, a <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> with default settings is used.</source>
          <target state="translated">Si es <ph id="ph1">&lt;see langword="null" /&gt;</ph>, se utiliza un objeto <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> con la configuración predeterminada.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> is being used with the <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph> method, you should use the <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> property to obtain an <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object with the correct settings.</source>
          <target state="translated">Si <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> se está utilizando con el método <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph>, debe usar la propiedad <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> para obtener un objeto <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> con la configuración correcta.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>This ensures that the created <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object has the correct output settings.</source>
          <target state="translated">Con ello se garantiza que el objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> creado tenga la configuración de resultados correcta.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the filename and <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object.</source>
          <target state="translated">Crea una nueva instancia de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> mediante el nombre de archivo y el objeto <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated">Un objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> object with the defined settings.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> objeto con la configuración definida.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;paramref name="url" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor <ph id="ph1">&lt;paramref name="url" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> to which to write to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> en el que se va a escribir.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
          <source>Content written by the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> is appended to the <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>.</source>
          <target state="translated">El contenido que escribe <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> se anexa a <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object used to configure the new <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> que se utiliza para configurar la nueva instancia de <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
          <source>If this is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, a <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> with default settings is used.</source>
          <target state="translated">Si es <ph id="ph1">&lt;see langword="null" /&gt;</ph>, se utiliza un objeto <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> con la configuración predeterminada.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> is being used with the <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph> method, you should use the <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> property to obtain an <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object with the correct settings.</source>
          <target state="translated">Si <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> se está utilizando con el método <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph>, debe usar la propiedad <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> para obtener un objeto <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> con la configuración correcta.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
          <source>This ensures that the created <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object has the correct output settings.</source>
          <target state="translated">Con ello se garantiza que el objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> creado tenga la configuración de resultados correcta.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> objects.</source>
          <target state="translated">Crea una nueva instancia de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> mediante los objetos <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> y <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated">Un objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;paramref name="builder" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor <ph id="ph1">&lt;paramref name="builder" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object that you want to use as the underlying writer.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> que desea utilizar como sistema de escritura subyacente.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object used to configure the new <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> que se utiliza para configurar la nueva instancia de <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>If this is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, a <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> with default settings is used.</source>
          <target state="translated">Si es <ph id="ph1">&lt;see langword="null" /&gt;</ph>, se utiliza un objeto <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> con la configuración predeterminada.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> is being used with the <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph> method, you should use the <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> property to obtain an <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object with the correct settings.</source>
          <target state="translated">Si <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> se está utilizando con el método <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph>, debe usar la propiedad <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> para obtener un objeto <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> con la configuración correcta.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>This ensures that the created <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object has the correct output settings.</source>
          <target state="translated">Con ello se garantiza que el objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> creado tenga la configuración de resultados correcta.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> objects.</source>
          <target state="translated">Crea una nueva instancia de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> mediante los objetos <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> y <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object that is wrapped around the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> que contiene el objeto <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>This method allows you add additional features to an underlying <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> object.</source>
          <target state="translated">Este método permite agregar características adicionales a una subyacente <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>The underlying <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> object can be an object created by the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method, or an object created using the <ph id="ph3">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> implementation.</source>
          <target state="translated">Subyacente <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> objeto puede ser un objeto creado por el <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método o un objeto creado con la <ph id="ph3">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> implementación.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;paramref name="writer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor <ph id="ph1">&lt;paramref name="writer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">En este caso, se produce <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje "Ya hay una operación asincrónica en curso".</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> class.</source>
          <target state="translated">Libera los recursos que usa la clase <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> class.</source>
          <target state="translated">Libera todos los recursos usados por la instancia actual de la clase <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Dispose">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Dispose">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar tanto recursos administrados como no administrados; es <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar únicamente recursos no administrados.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libera los recursos no administrados que usa <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> y, de forma opcional, libera los recursos administrados.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Dispose(System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Dispose(System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Flush">
          <source>When overridden in a derived class, flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</source>
          <target state="translated">Cuando se invalida en una clase derivada, vuelca el contenido del búfer en los flujos subyacentes y también vuelca el flujo subyacente.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Flush">
          <source>This is called instead of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> when you want to write more to the underlying stream without losing what is still in the buffer.</source>
          <target state="translated">Esto se denomina en lugar de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> cuando desee escribir más en la secuencia subyacente sin perder lo que aún queda en el búfer.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Flush">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.FlushAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.FlushAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Flush">
          <source>The following example writes two XML fragments.</source>
          <target state="translated">En el ejemplo siguiente se escribe dos fragmentos XML.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Flush">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Flush">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.FlushAsync">
          <source>Asynchronously flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</source>
          <target state="translated">Vuelca asincrónicamente el contenido del búfer en los flujos subyacentes y también vuelca el flujo subyacente.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.FlushAsync">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="Flush" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="Flush" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.FlushAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Flush%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Flush%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.FlushAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.FlushAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.FlushAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
          <source>The namespace URI whose prefix you want to find.</source>
          <target state="translated">Identificador URI de espacio de nombres cuyo prefijo se desea buscar.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
          <source>When overridden in a derived class, returns the closest prefix defined in the current namespace scope for the namespace URI.</source>
          <target state="translated">Cuando se invalida en una clase derivada, devuelve el prefijo más próximo definido en el ámbito de espacio de nombres actual correspondiente al identificador URI de espacio de nombres.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
          <source>The matching prefix or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no matching namespace URI is found in the current scope.</source>
          <target state="translated">Prefijo coincidente o <ph id="ph1">&lt;see langword="null" /&gt;</ph> si no se encuentra ningún identificador URI de espacio de nombres coincidente en el ámbito actual.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
          <source>The following example writes out a book.</source>
          <target state="translated">En el ejemplo siguiente se escribe un libro.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
          <source><ph id="ph1">&lt;paramref name="ns" /&gt;</ph> is either <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ns" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph> o <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.Settings">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object used to create this <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> que se usa para crear esta instancia de <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.Settings">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object used to create this writer instance.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> utilizado para crear esta instancia del sistema de escritura.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.Settings">
          <source>If this writer was not created using the <ph id="ph1">&lt;see cref="Overload:System.Xml.XmlWriter.Create" /&gt;</ph> method, this property returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Si este sistema de escritura no se creó utilizando el método <ph id="ph1">&lt;see cref="Overload:System.Xml.XmlWriter.Create" /&gt;</ph>, esta propiedad devuelve <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.Settings">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class is used to specify the set of features to support on the created writer instance.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> clase se utiliza para especificar el conjunto de características compatibles en la instancia del escritor creado.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.Settings">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Settings%2A&gt;</ph> property cannot be modified.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> objeto devuelto por la <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Settings%2A&gt;</ph> no se puede modificar la propiedad.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.Settings">
          <source>Any attempt to change individual settings results in an exception being thrown.</source>
          <target state="translated">Cualquier intento de cambiar la configuración individual provocará que se produzca una excepción.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.Settings">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.Settings">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>The <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> from which to copy the attributes.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> del que se van a copiar los atributos.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to copy the default attributes from the <ph id="ph2">&lt;see langword="XmlReader" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para copiar los atributos predeterminados de <ph id="ph2">&lt;see langword="XmlReader" /&gt;</ph>; en caso contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>When overridden in a derived class, writes out all the attributes found at the current position in the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe todos los atributos que se encuentran en la posición actual en <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>If the reader is positioned on an <ph id="ph1">`element`</ph> node <ph id="ph2">`WriteAttributes`</ph> copies all the contained attributes.</source>
          <target state="translated">Si el lector está situado en un <ph id="ph1">`element`</ph> nodo <ph id="ph2">`WriteAttributes`</ph> copia todos los atributos que contenga.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>If the reader is positioned on an <ph id="ph1">`attribute`</ph> node, this method writes the current attribute, then the rest of the attributes until the element closing tag.</source>
          <target state="translated">Si el lector está situado en un <ph id="ph1">`attribute`</ph> nodo, este método escribe el atributo actual y, a continuación, el resto de los atributos hasta la etiqueta de cierre del elemento.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>If the reader is positioned on an <ph id="ph1">`XmlDeclaration`</ph> node, this method writes all the attributes in the declaration.</source>
          <target state="translated">Si el lector está situado en un <ph id="ph1">`XmlDeclaration`</ph> nodo, este método escribe todos los atributos en la declaración.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>If the reader is positioned on any other node type this method throws an <ph id="ph1">&lt;xref:System.Xml.XmlException&gt;</ph>.</source>
          <target state="translated">Si el lector está situado en cualquier otro tipo de nodo, este método produce una <ph id="ph1">&lt;xref:System.Xml.XmlException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>If this method is called using <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph>, to ensure well-formed XML any content (which has been expanded from the entities) that could result in an invalid document is replaced when written.</source>
          <target state="translated">Si se llama a este método mediante <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph>para asegurarse de se reemplaza cualquier contenido (que se haya expandido desde las entidades) que podría dar lugar a un documento no válido cuando escribe código XML bien formado.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>For example, if an attribute includes an <ph id="ph1">`&amp;gt;`</ph> entity that has been expanded, to ensure a well-formed document the expanded &gt; is replaced when written out with <ph id="ph2">`&amp;gt;`</ph>.</source>
          <target state="translated">Por ejemplo, si un atributo incluye una <ph id="ph1">`&amp;gt;`</ph> entidad que se ha ampliado para garantizar que un documento bien formado el expandido &gt; se reemplaza con <ph id="ph2">`&amp;gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributesAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributesAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>The following example copies all the elements to the output, changes the tag names to upper case, and copies all the attributes unchanged.</source>
          <target state="translated">En el siguiente ejemplo copia todos los elementos a la salida, cambia los nombres de etiqueta a mayúsculas y copia todos los atributos sin cambios.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>The example uses the file, <ph id="ph1">`test1.xml`</ph>, as input.</source>
          <target state="translated">En el ejemplo se utiliza el archivo <ph id="ph1">`test1.xml`</ph>como entrada.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>The reader is not positioned on an <ph id="ph1">&lt;see langword="element" /&gt;</ph>, <ph id="ph2">&lt;see langword="attribute" /&gt;</ph> or <ph id="ph3">&lt;see langword="XmlDeclaration" /&gt;</ph> node.</source>
          <target state="translated">El lector no está en ningún nodo <ph id="ph1">&lt;see langword="element" /&gt;</ph>, <ph id="ph2">&lt;see langword="attribute" /&gt;</ph> o <ph id="ph3">&lt;see langword="XmlDeclaration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
          <source>The <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> from which to copy the attributes.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> del que se van a copiar los atributos.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to copy the default attributes from the <ph id="ph2">&lt;see langword="XmlReader" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para copiar los atributos predeterminados de <ph id="ph2">&lt;see langword="XmlReader" /&gt;</ph>; en caso contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
          <source>Asynchronously writes out all the attributes found at the current position in the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">De forma asincrónica escribe todos los atributos encontrados en la posición actual en <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteAttributes" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteAttributes" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributes%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributes%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>When overridden in a derived class, writes an attribute with the specified value.</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe un atributo con el valor especificado.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">Nombre local del atributo.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>The value of the attribute.</source>
          <target state="translated">El valor del atributo.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>When overridden in a derived class, writes out the attribute with the specified local name and value.</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe el atributo con el valor y nombre local especificados.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source><ph id="ph1">`WriteAttributeString`</ph> does the following:</source>
          <target state="translated"><ph id="ph1">`WriteAttributeString`</ph> hace lo siguiente:</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>If the attribute value includes double or single quotes, they are replaced with <ph id="ph1">`&amp;quot;`</ph> and <ph id="ph2">`&amp;apos;`</ph> respectively.</source>
          <target state="translated">Si el valor de atributo incluye comillas simples o dobles, se reemplazan por <ph id="ph1">`&amp;quot;`</ph> y <ph id="ph2">`&amp;apos;`</ph> respectivamente.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>If writing an <ph id="ph1">`xml:space`</ph> attribute, the writer verifies the attribute value is valid.</source>
          <target state="translated">Si escribe un <ph id="ph1">`xml:space`</ph> atributo, el sistema de escritura comprueba el valor de atributo es válido.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>(Valid values are <ph id="ph1">`preserve`</ph> or <ph id="ph2">`default`</ph>.)</source>
          <target state="translated">(Los valores válidos son <ph id="ph1">`preserve`</ph> o <ph id="ph2">`default`</ph>.)</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>If writing an <ph id="ph1">`xml:lang`</ph> attribute, the writer does not verify that the attribute value is valid according to the W3C XML 1.0 recommendation.</source>
          <target state="translated">Si escribe un <ph id="ph1">`xml:lang`</ph> atributo, el sistema de escritura no comprueba que el valor del atributo es válido de acuerdo con la recomendación W3C XML 1.0.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>The following example writes out a book.</source>
          <target state="translated">En el ejemplo siguiente se escribe un libro.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>The <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> or <ph id="ph2">&lt;see langword="xml:lang" /&gt;</ph> attribute value is invalid.</source>
          <target state="translated">El valor de atributo <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> o <ph id="ph2">&lt;see langword="xml:lang" /&gt;</ph> no es válido.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">Nombre local del atributo.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>The namespace URI to associate with the attribute.</source>
          <target state="translated">Identificador URI de espacio de nombres que se va asociar al atributo.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>The value of the attribute.</source>
          <target state="translated">El valor del atributo.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>When overridden in a derived class, writes an attribute with the specified local name, namespace URI, and value.</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe un atributo con el valor, nombre local e identificador URI del espacio de nombres especificados.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>This method writes out the attribute with a user defined namespace prefix and associates it with the given namespace.</source>
          <target state="translated">Este método escribe el atributo con un prefijo de espacio de nombres definido de usuario y lo asocia con el espacio de nombres determinado.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>If <ph id="ph1">`localName`</ph> is "xmlns" then this method also treats this as a namespace declaration.</source>
          <target state="translated">Si <ph id="ph1">`localName`</ph> es "xmlns", a continuación, este método también lo trata como una declaración de espacio de nombres.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>In this case, the <ph id="ph1">`ns`</ph> argument can be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">En este caso, el <ph id="ph1">`ns`</ph> argumento puede ser <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source><ph id="ph1">`WriteAttributeString`</ph> does the following:</source>
          <target state="translated"><ph id="ph1">`WriteAttributeString`</ph> hace lo siguiente:</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>If the attribute value includes double or single quotes, they are replaced with <ph id="ph1">`&amp;quot;`</ph> and <ph id="ph2">`&amp;apos;`</ph> respectively.</source>
          <target state="translated">Si el valor de atributo incluye comillas simples o dobles, se reemplazan por <ph id="ph1">`&amp;quot;`</ph> y <ph id="ph2">`&amp;apos;`</ph> respectivamente.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>If writing an <ph id="ph1">`xml:space`</ph> attribute, the writer verifies the attribute value is valid.</source>
          <target state="translated">Si escribe un <ph id="ph1">`xml:space`</ph> atributo, el sistema de escritura comprueba el valor de atributo es válido.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>(Valid values are <ph id="ph1">`preserve`</ph> or <ph id="ph2">`default`</ph>.)</source>
          <target state="translated">(Los valores válidos son <ph id="ph1">`preserve`</ph> o <ph id="ph2">`default`</ph>.)</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>If writing an <ph id="ph1">`xml:lang`</ph> attribute, the writer does not verify that the attribute value is valid according to the W3C XML 1.0 recommendation.</source>
          <target state="translated">Si escribe un <ph id="ph1">`xml:lang`</ph> atributo, el sistema de escritura no comprueba que el valor del atributo es válido de acuerdo con la recomendación W3C XML 1.0.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> method to write a namespace declaration.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> método para escribir una declaración de espacio de nombres.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> or <ph id="ph2">&lt;see langword="xml:lang" /&gt;</ph> attribute value is invalid.</source>
          <target state="translated">El valor de atributo <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> o <ph id="ph2">&lt;see langword="xml:lang" /&gt;</ph> no es válido.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>The namespace prefix of the attribute.</source>
          <target state="translated">Prefijo de espacio de nombres del atributo.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">Nombre local del atributo.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">URI de espacio de nombres del atributo.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>The value of the attribute.</source>
          <target state="translated">El valor del atributo.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>When overridden in a derived class, writes out the attribute with the specified prefix, local name, namespace URI, and value.</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe el atributo con el prefijo, el nombre local, el identificador URI de espacio de nombres y el valor especificados.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>This method writes out the attribute with a user defined namespace prefix and associates it with the given namespace.</source>
          <target state="translated">Este método escribe el atributo con un prefijo de espacio de nombres definido de usuario y lo asocia con el espacio de nombres determinado.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>If the prefix is "xmlns" then this method also treats this as a namespace declaration and associates the declared prefix with the namespace URI provided in the given attribute value.</source>
          <target state="translated">Si el prefijo es "xmlns", a continuación, este método también lo trata como una declaración de espacio de nombres y asocia el prefijo declarado con el espacio de nombres que URI proporcionado en el valor del atributo especificado.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>In this case the <ph id="ph1">`ns`</ph> argument can be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">En este caso el <ph id="ph1">`ns`</ph> argumento puede ser <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source><ph id="ph1">`WriteAttributeString`</ph> does the following:</source>
          <target state="translated"><ph id="ph1">`WriteAttributeString`</ph> hace lo siguiente:</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>If the attribute value includes double or single quotes, they are replaced with <ph id="ph1">`&amp;quot;`</ph> and <ph id="ph2">`&amp;apos;`</ph> respectively.</source>
          <target state="translated">Si el valor de atributo incluye comillas simples o dobles, se reemplazan por <ph id="ph1">`&amp;quot;`</ph> y <ph id="ph2">`&amp;apos;`</ph> respectivamente.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>If writing an <ph id="ph1">`xml:space`</ph> attribute, the writer verifies the attribute value is valid.</source>
          <target state="translated">Si escribe un <ph id="ph1">`xml:space`</ph> atributo, el sistema de escritura comprueba el valor de atributo es válido.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>(Valid values are <ph id="ph1">`preserve`</ph> or <ph id="ph2">`default`</ph>.)</source>
          <target state="translated">(Los valores válidos son <ph id="ph1">`preserve`</ph> o <ph id="ph2">`default`</ph>.)</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>If writing an <ph id="ph1">`xml:lang`</ph> attribute, the writer does not verify that the attribute value is valid according to the W3C XML 1.0 recommendation.</source>
          <target state="translated">Si escribe un <ph id="ph1">`xml:lang`</ph> atributo, el sistema de escritura no comprueba que el valor del atributo es válido de acuerdo con la recomendación W3C XML 1.0.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> method to write a namespace declaration.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> método para escribir una declaración de espacio de nombres.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> or <ph id="ph2">&lt;see langword="xml:lang" /&gt;</ph> attribute value is invalid.</source>
          <target state="translated">El valor de atributo <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> o <ph id="ph2">&lt;see langword="xml:lang" /&gt;</ph> no es válido.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="localName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="ns" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localName" /&gt;</ph> o <ph id="ph2">&lt;paramref name="ns" /&gt;</ph> es <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>The namespace prefix of the attribute.</source>
          <target state="translated">Prefijo de espacio de nombres del atributo.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">Nombre local del atributo.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">URI de espacio de nombres del atributo.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>The value of the attribute.</source>
          <target state="translated">El valor del atributo.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>Asynchronously writes out the attribute with the specified prefix, local name, namespace URI, and value.</source>
          <target state="translated">Escribe asincrónicamente un atributo con el prefijo, el nombre local, el URI del espacio de nombres y el valor especificados.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteAttributeString" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteAttributeString" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>Byte array to encode.</source>
          <target state="translated">Matriz de bytes que se va a codificar.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The position in the buffer indicating the start of the bytes to write.</source>
          <target state="translated">Posición en el búfer que indica el inicio de los bytes que se van a escribir.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to write.</source>
          <target state="translated">Número de bytes que se van a escribir.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>When overridden in a derived class, encodes the specified binary bytes as Base64 and writes out the resulting text.</source>
          <target state="translated">Cuando se invalida en una clase derivada, codifica los bytes binarios especificados en Base64 y escribe el texto resultante.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>For example, the byte buffer may contain the binary contents of a GIF image.</source>
          <target state="translated">Por ejemplo, el búfer de bytes puede contener el contenido binario de una imagen GIF.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This clearly would not be valid XML.</source>
          <target state="translated">Esto claramente no sería un XML válido.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`Base64`</ph> encoding is designed to represent arbitrary byte sequences in a text form comprised of the 65 US-ASCII characters ([A-Za-z0-9+/=]) where each character encodes 6 bits of the binary data.</source>
          <target state="translated">El <ph id="ph1">`Base64`</ph> codificación está diseñada para representar secuencias de bytes arbitrarias en un formato de texto formado por los 65 caracteres US-ASCII ([A-Za-z0-9 + / =]) donde cada carácter codifica 6 bits de los datos binarios.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>For more information, see Requests for Comments (RFC) 1521 located on the <bpt id="p1">[</bpt>Request for Comments Web site<ept id="p1">](https://www.rfc-editor.org)</ept>.</source>
          <target state="translated">Para obtener más información, vea las solicitudes de comentarios (RFC) 1521 en el <bpt id="p1">[</bpt>solicitar para el sitio Web de comentarios<ept id="p1">](https://www.rfc-editor.org)</ept>.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBase64Async%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBase64Async%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBase64%2A&gt;</ph> method to write <ph id="ph2">`Base64`</ph> data.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBase64%2A&gt;</ph> método escribir <ph id="ph2">`Base64`</ph> datos.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`Base64`</ph> data is embedded within an <ph id="ph2">`&lt;image&gt;`</ph> element.</source>
          <target state="translated">El <ph id="ph1">`Base64`</ph> datos se incrustan en un <ph id="ph2">`&lt;image&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> o <ph id="ph2">&lt;paramref name="count" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">La longitud del búfer menos <ph id="ph1">&lt;paramref name="index" /&gt;</ph> es menor que <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>Byte array to encode.</source>
          <target state="translated">Matriz de bytes que se va a codificar.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The position in the buffer indicating the start of the bytes to write.</source>
          <target state="translated">Posición en el búfer que indica el inicio de los bytes que se van a escribir.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to write.</source>
          <target state="translated">Número de bytes que se van a escribir.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>Asynchronously encodes the specified binary bytes as Base64 and writes out the resulting text.</source>
          <target state="translated">Codifica asincrónicamente los bytes binarios especificados en Base64 y escribe el texto resultante.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteBase64" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteBase64" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBase64%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBase64%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>Byte array to encode.</source>
          <target state="translated">Matriz de bytes que se va a codificar.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The position in the buffer indicating the start of the bytes to write.</source>
          <target state="translated">Posición en el búfer que indica el inicio de los bytes que se van a escribir.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to write.</source>
          <target state="translated">Número de bytes que se van a escribir.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>When overridden in a derived class, encodes the specified binary bytes as <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> and writes out the resulting text.</source>
          <target state="translated">Cuando se invalida en una clase derivada, codifica los bytes binarios especificados en <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> y escribe el texto resultante.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBinHexAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBinHexAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBinHex%2A&gt;</ph> method to write <ph id="ph2">`BinHex`</ph> data.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBinHex%2A&gt;</ph> método escribir <ph id="ph2">`BinHex`</ph> datos.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`BinHex`</ph> data is embedded within an <ph id="ph2">`&lt;image&gt;`</ph> element.</source>
          <target state="translated">El <ph id="ph1">`BinHex`</ph> datos se incrustan en un <ph id="ph2">`&lt;image&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> o <ph id="ph2">&lt;paramref name="count" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">La longitud del búfer menos <ph id="ph1">&lt;paramref name="index" /&gt;</ph> es menor que <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>Byte array to encode.</source>
          <target state="translated">Matriz de bytes que se va a codificar.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The position in the buffer indicating the start of the bytes to write.</source>
          <target state="translated">Posición en el búfer que indica el inicio de los bytes que se van a escribir.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to write.</source>
          <target state="translated">Número de bytes que se van a escribir.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>Asynchronously encodes the specified binary bytes as <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> and writes out the resulting text.</source>
          <target state="translated">Codifica asincrónicamente los bytes binarios especificados como <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> y escribe el texto resultante.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteBinHex" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteBinHex" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBinHex%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBinHex%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCData(System.String)">
          <source>The text to place inside the CDATA block.</source>
          <target state="translated">Texto que se va a colocar en el bloque CDATA.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCData(System.String)">
          <source>When overridden in a derived class, writes out a <ph id="ph1">&amp;lt;</ph>![CDATA[...]]<ph id="ph2">&amp;gt;</ph> block containing the specified text.</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe un bloque <ph id="ph1">&amp;lt;</ph>![CDATA[...]]<ph id="ph2">&amp;gt;</ph> que contiene el texto especificado.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCData(System.String)">
          <source>If <ph id="ph1">`text`</ph> is either <ph id="ph2">`null`</ph> or <ph id="ph3">`String.Empty`</ph>, this method writes an empty CDATA block, for example <ph id="ph4">\&lt;</ph>![CDATA[]]]&gt;&lt;![CDATA[]&gt;.</source>
          <target state="translated">Si <ph id="ph1">`text`</ph> sea <ph id="ph2">`null`</ph> o <ph id="ph3">`String.Empty`</ph>, este método escribe un bloque CDATA vacío, por ejemplo <ph id="ph4">\&lt;</ph>! [ CDATA []]] &gt;&lt;! [[] CDATA &gt;.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCData(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCDataAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCDataAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCData(System.String)">
          <source>The following example writes an XML file representing a book.</source>
          <target state="translated">En el ejemplo siguiente se escribe un archivo XML que representa un libro.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCData(System.String)">
          <source>The text would result in a non-well formed XML document.</source>
          <target state="translated">El texto daría como resultado un documento XML con formato incorrecto.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCData(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCData(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
          <source>The text to place inside the CDATA block.</source>
          <target state="translated">Texto que se va a colocar en el bloque CDATA.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
          <source>Asynchronously writes out a <ph id="ph1">&amp;lt;</ph>![CDATA[...]]<ph id="ph2">&amp;gt;</ph> block containing the specified text.</source>
          <target state="translated">Escribe asincrónicamente un bloque <ph id="ph1">&amp;lt;</ph>![CDATA[...]]<ph id="ph2">&amp;gt;</ph> que contiene el texto especificado.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteCData" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteCData" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCData%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCData%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
          <source>The Unicode character for which to generate a character entity.</source>
          <target state="translated">Carácter Unicode para el que se va a generar una entidad de caracteres.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
          <source>When overridden in a derived class, forces the generation of a character entity for the specified Unicode character value.</source>
          <target state="translated">Cuando se invalida en una clase derivada, impone la generación de una entidad de caracteres para el valor de carácter Unicode especificado.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
          <source>This method writes the Unicode character in hexadecimal character entity reference format.</source>
          <target state="translated">Este método escribe el carácter Unicode en formato de referencia de entidad de carácter hexadecimal.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCharEntityAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCharEntityAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.WriteCharEntity%2A?displayProperty=nameWithType&gt;</ph> for an example using this method.</source>
          <target state="translated">Consulte <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.WriteCharEntity%2A?displayProperty=nameWithType&gt;</ph> para obtener un ejemplo con este método.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
          <source>The character is in the surrogate pair character range, <ph id="ph1">&lt;see langword="0xd800" /&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">&lt;see langword="0xdfff" /&gt;</ph>.</source>
          <target state="translated">El carácter está en el intervalo de caracteres de par suplente, <ph id="ph1">&lt;see langword="0xd800" /&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">&lt;see langword="0xdfff" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
          <source>The Unicode character for which to generate a character entity.</source>
          <target state="translated">Carácter Unicode para el que se va a generar una entidad de caracteres.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
          <source>Asynchronously forces the generation of a character entity for the specified Unicode character value.</source>
          <target state="translated">Impone asincrónicamente la generación de una entidad de caracteres para el valor de carácter Unicode especificado.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteCharEntity" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteCharEntity" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCharEntity%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCharEntity%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>Character array containing the text to write.</source>
          <target state="translated">Matriz de caracteres que contiene el texto que se va a escribir.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>The position in the buffer indicating the start of the text to write.</source>
          <target state="translated">Posición en el búfer que indica el inicio del texto que se va a escribir.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">Número de caracteres que se van a escribir.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>When overridden in a derived class, writes text one buffer at a time.</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe texto en un búfer cada vez.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>This method can be used to write large amounts of text one buffer at a time.</source>
          <target state="translated">Este método se puede utilizar para escribir grandes cantidades de un búfer de texto a la vez.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>Special handling must be done to ensure the <ph id="ph1">`WriteChars`</ph> method does not split surrogate pair characters across multiple buffer writes.</source>
          <target state="translated">Debe realizarse un tratamiento especial para garantizar la <ph id="ph1">`WriteChars`</ph> método no dividir los caracteres de par suplente en varias escrituras en el búfer.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>The XML specification defines the valid ranges for surrogate pairs.</source>
          <target state="translated">La especificación XML define los intervalos válidos para los pares suplentes.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCharsAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCharsAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> o <ph id="ph2">&lt;paramref name="count" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>; the call results in surrogate pair characters being split or an invalid surrogate pair being written.</source>
          <target state="translated">La longitud de búfer menos <ph id="ph1">&lt;paramref name="index" /&gt;</ph> es menor que <ph id="ph2">&lt;paramref name="count" /&gt;</ph>; la llamada tiene como resultado la división de los caracteres de par suplente o la escritura de un par suplente no válido.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> parameter value is not valid.</source>
          <target state="translated">El valor del parámetro <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> no es válido.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
          <source>Character array containing the text to write.</source>
          <target state="translated">Matriz de caracteres que contiene el texto que se va a escribir.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
          <source>The position in the buffer indicating the start of the text to write.</source>
          <target state="translated">Posición en el búfer que indica el inicio del texto que se va a escribir.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">Número de caracteres que se van a escribir.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
          <source>Asynchronously writes text one buffer at a time.</source>
          <target state="translated">Escribe asincrónicamente texto en un búfer cada vez.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteChars" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteChars" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteChars%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteChars%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <source>Text to place inside the comment.</source>
          <target state="translated">Texto que se va a colocar en el comentario.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <source>When overridden in a derived class, writes out a comment <ph id="ph1">&amp;lt;</ph>!--...--<ph id="ph2">&amp;gt;</ph> containing the specified text.</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe un comentario <ph id="ph1">&amp;lt;</ph>!--...--<ph id="ph2">&amp;gt;</ph> que contiene el texto especificado.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <source>If <ph id="ph1">`text`</ph> is either <ph id="ph2">`null`</ph> or <ph id="ph3">`String.Empty`</ph>, this method writes a comment with no data content, for example <ph id="ph4">\&lt;</ph>!----&gt;.</source>
          <target state="translated">Si <ph id="ph1">`text`</ph> sea <ph id="ph2">`null`</ph> o <ph id="ph3">`String.Empty`</ph>, este método escribe un comentario sin contenido de datos, por ejemplo <ph id="ph4">\&lt;</ph>!---&gt;.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <source>If <ph id="ph1">`text`</ph> contains an invalid sequence of two dashes "--" the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> can either throw an <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph> (<ph id="ph4">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> objects) or insert a space between the dashes "- -" so that the text is a valid XML comment (<ph id="ph5">&lt;xref:System.Xml.XmlWriter&gt;</ph> objects created by the <ph id="ph6">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> method).</source>
          <target state="translated">Si <ph id="ph1">`text`</ph> contiene una secuencia no válida de dos guiones "--" el <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> puede cualquier throw un <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph> (<ph id="ph4">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> objetos) o inserte un espacio entre los guiones "- -" para que el texto sea un comentario XML válido (<ph id="ph5">&lt;xref:System.Xml.XmlWriter&gt;</ph> objetos creados por el <ph id="ph6">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> método).</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCommentAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCommentAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <source>The following example writes an XML file representing a book.</source>
          <target state="translated">En el ejemplo siguiente se escribe un archivo XML que representa un libro.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <source>The text would result in a non-well-formed XML document.</source>
          <target state="translated">El texto daría como resultado un documento XML con formato incorrecto.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
          <source>Text to place inside the comment.</source>
          <target state="translated">Texto que se va a colocar en el comentario.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
          <source>Asynchronously writes out a comment <ph id="ph1">&amp;lt;</ph>!--...--<ph id="ph2">&amp;gt;</ph> containing the specified text.</source>
          <target state="translated">De forma asincrónica escribe un comentario <ph id="ph1">&amp;lt;</ph>!--...--<ph id="ph2">&amp;gt;</ph> que contiene el texto especificado.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteComment" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteComment" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteComment%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteComment%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>The name of the DOCTYPE.</source>
          <target state="translated">Nombre de DOCTYPE.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>This must be non-empty.</source>
          <target state="translated">No puede estar vacío.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>If non-null it also writes PUBLIC "pubid" "sysid" where <bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept> are replaced with the value of the given arguments.</source>
          <target state="translated">Si su valor no es nulo, también se escribe PUBLIC "pulid" "sysid", donde <bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept> y <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept> se reemplazan por el valor de los argumentos especificados.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph> and <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept> is non-null it writes SYSTEM "sysid" where <bpt id="p3">&lt;c&gt;</bpt>sysid<ept id="p3">&lt;/c&gt;</ept> is replaced with the value of this argument.</source>
          <target state="translated">Si <bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept> es <ph id="ph1">&lt;see langword="null" /&gt;</ph> y <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept> no es null, se escribe SYSTEM "sysid", donde <bpt id="p3">&lt;c&gt;</bpt>sysid<ept id="p3">&lt;/c&gt;</ept> se reemplaza por el valor de este argumento.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>If non-null it writes [subset] where subset is replaced with the value of this argument.</source>
          <target state="translated">En caso de un valor no nulo, se escribe [subset], donde subset se reemplaza por el valor de este argumento.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>When overridden in a derived class, writes the DOCTYPE declaration with the specified name and optional attributes.</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe la declaración DOCTYPE con el nombre y atributos opcionales especificados.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>This method does not check for invalid characters in <ph id="ph1">`pubid`</ph>, <ph id="ph2">`sysid`</ph> or <ph id="ph3">`subset`</ph>.</source>
          <target state="translated">Este método no comprueba los caracteres no válidos en <ph id="ph1">`pubid`</ph>, <ph id="ph2">`sysid`</ph> o <ph id="ph3">`subset`</ph>.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>It also does not check that the internal subset is well-formed.</source>
          <target state="translated">No comprueba que el subconjunto interno está bien formado.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> does not validate the data that is passed to the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteDocType%2A&gt;</ph> method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> no valida los datos que se pasan a la <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteDocType%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>You should not pass arbitrary data to this method.</source>
          <target state="translated">No debe pasar datos arbitrarios a este método.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteDocTypeAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteDocTypeAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>The following example writes an XML file representing a book.</source>
          <target state="translated">En el ejemplo siguiente se escribe un archivo XML que representa un libro.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>The value for <ph id="ph1">&lt;paramref name="name" /&gt;</ph> would result in invalid XML.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;paramref name="name" /&gt;</ph> daría como resultado un archivo XML no válido.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>The name of the DOCTYPE.</source>
          <target state="translated">Nombre de DOCTYPE.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>This must be non-empty.</source>
          <target state="translated">No puede estar vacío.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>If non-null it also writes PUBLIC "pubid" "sysid" where <bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept> are replaced with the value of the given arguments.</source>
          <target state="translated">Si su valor no es nulo, también se escribe PUBLIC "pulid" "sysid", donde <bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept> y <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept> se reemplazan por el valor de los argumentos especificados.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph> and <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept> is non-null it writes SYSTEM "sysid" where <bpt id="p3">&lt;c&gt;</bpt>sysid<ept id="p3">&lt;/c&gt;</ept> is replaced with the value of this argument.</source>
          <target state="translated">Si <bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept> es <ph id="ph1">&lt;see langword="null" /&gt;</ph> y <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept> no es null, se escribe SYSTEM "sysid", donde <bpt id="p3">&lt;c&gt;</bpt>sysid<ept id="p3">&lt;/c&gt;</ept> se reemplaza por el valor de este argumento.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>If non-null it writes [subset] where subset is replaced with the value of this argument.</source>
          <target state="translated">En caso de un valor no nulo, se escribe [subset], donde subset se reemplaza por el valor de este argumento.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>Asynchronously writes the DOCTYPE declaration with the specified name and optional attributes.</source>
          <target state="translated">Escribe asincrónicamente la declaración DOCTYPE con el nombre y los atributos opcionales especificados.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteDocType" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteDocType" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteDocType%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteDocType%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>Writes an element containing a string value.</source>
          <target state="translated">Escribe un elemento que contiene un valor de cadena.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">Nombre local del elemento.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>The value of the element.</source>
          <target state="translated">Valor del elemento.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>Writes an element with the specified local name and value.</source>
          <target state="translated">Escribe un elemento con el nombre local y el valor especificados.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>The following example uses several write methods to create an XML fragment.</source>
          <target state="translated">En el ejemplo siguiente se utiliza varios métodos de escritura para crear un fragmento XML.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="localName" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or an empty string.</source>
          <target state="translated">El valor <ph id="ph1">&lt;paramref name="localName" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph> o una cadena vacía.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>The parameter values are not valid.</source>
          <target state="translated">Los valores de parámetro no son válidos.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</source>
          <target state="translated">Hay un carácter en el búfer que es un carácter XML válido pero que no es válido para la codificación de salida.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</source>
          <target state="translated">Por ejemplo, si la codificación de salida es ASCII, sólo debería utilizar los caracteres del intervalo de 0 a 127 para el elemento y nombres de atributo.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</source>
          <target state="translated">El carácter no válido podría estar en el argumento de este método o en un argumento de métodos anteriores que estaban escribiendo en el búfer.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</source>
          <target state="translated">Las referencias a entidades de caracteres anulan a dichos caracteres siempre que sea posible (por ejemplo, en nodos de texto o valores de atributo).</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</source>
          <target state="translated">Sin embargo, la referencia de entidad de carácter no se permite en nombres de elemento y de atributo, comentarios, instrucciones de procesamiento o secciones CDATA.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">Nombre local del elemento.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>The namespace URI to associate with the element.</source>
          <target state="translated">Identificador URI de espacio de nombres que se va a asociar al elemento.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>The value of the element.</source>
          <target state="translated">Valor del elemento.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>Writes an element with the specified local name, namespace URI, and value.</source>
          <target state="translated">Escribe un elemento con el nombre local especificado, el URI de espacio de nombres y el valor.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>The following example uses several write methods to create an XML fragment.</source>
          <target state="translated">En el ejemplo siguiente se utiliza varios métodos de escritura para crear un fragmento XML.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="localName" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or an empty string.</source>
          <target state="translated">El valor <ph id="ph1">&lt;paramref name="localName" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph> o una cadena vacía.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>The parameter values are not valid.</source>
          <target state="translated">Los valores de parámetro no son válidos.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</source>
          <target state="translated">Hay un carácter en el búfer que es un carácter XML válido pero que no es válido para la codificación de salida.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</source>
          <target state="translated">Por ejemplo, si la codificación de salida es ASCII, sólo debería utilizar los caracteres del intervalo de 0 a 127 para el elemento y nombres de atributo.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</source>
          <target state="translated">El carácter no válido podría estar en el argumento de este método o en un argumento de métodos anteriores que estaban escribiendo en el búfer.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</source>
          <target state="translated">Las referencias a entidades de caracteres anulan a dichos caracteres siempre que sea posible (por ejemplo, en nodos de texto o valores de atributo).</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</source>
          <target state="translated">Sin embargo, la referencia de entidad de carácter no se permite en nombres de elemento y de atributo, comentarios, instrucciones de procesamiento o secciones CDATA.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>The prefix of the element.</source>
          <target state="translated">Prefijo del elemento.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">Nombre local del elemento.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">Identificador URI de espacio de nombres del elemento.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>The value of the element.</source>
          <target state="translated">Valor del elemento.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>Writes an element with the specified prefix, local name, namespace URI, and value.</source>
          <target state="translated">Escribe un elemento con el prefijo, nombre local, el URI de espacio de nombres y el valor especificados.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="localName" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or an empty string.</source>
          <target state="translated">El valor <ph id="ph1">&lt;paramref name="localName" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph> o una cadena vacía.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>The parameter values are not valid.</source>
          <target state="translated">Los valores de parámetro no son válidos.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</source>
          <target state="translated">Hay un carácter en el búfer que es un carácter XML válido pero que no es válido para la codificación de salida.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</source>
          <target state="translated">Por ejemplo, si la codificación de salida es ASCII, sólo debería utilizar los caracteres del intervalo de 0 a 127 para el elemento y nombres de atributo.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</source>
          <target state="translated">El carácter no válido podría estar en el argumento de este método o en un argumento de métodos anteriores que estaban escribiendo en el búfer.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</source>
          <target state="translated">Las referencias a entidades de caracteres anulan a dichos caracteres siempre que sea posible (por ejemplo, en nodos de texto o valores de atributo).</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</source>
          <target state="translated">Sin embargo, la referencia de entidad de carácter no se permite en nombres de elemento y de atributo, comentarios, instrucciones de procesamiento o secciones CDATA.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>The prefix of the element.</source>
          <target state="translated">Prefijo del elemento.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">Nombre local del elemento.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">Identificador URI de espacio de nombres del elemento.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>The value of the element.</source>
          <target state="translated">Valor del elemento.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>Asynchronously writes an element with the specified prefix, local name, namespace URI, and value.</source>
          <target state="translated">Escribe asincrónicamente un elemento con el nombre local, el URI de espacio de nombres, el valor y el prefijo especificados.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteElementString" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteElementString" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementString%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementString%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndAttribute">
          <source>When overridden in a derived class, closes the previous <ph id="ph1">&lt;see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /&gt;</ph> call.</source>
          <target state="translated">Cuando se invalida en una clase derivada, cierra la llamada a <ph id="ph1">&lt;see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /&gt;</ph> anterior.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndAttribute">
          <source>If you call <ph id="ph1">`WriteStartAttribute`</ph>, you can close the attribute with this method.</source>
          <target state="translated">Si se llama a <ph id="ph1">`WriteStartAttribute`</ph>, puede cerrar el atributo mediante este método.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndAttribute">
          <source>You can also close the attribute by calling <ph id="ph1">`WriteStartAttribute`</ph> again, calling <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph>, or calling <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph>.</source>
          <target state="translated">También puede cerrar el atributo mediante una llamada a <ph id="ph1">`WriteStartAttribute`</ph> nuevo, una llamada a <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph>, o llamar a <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndAttribute">
          <source>When you use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> methods to output XML, the elements and attributes will not be written until you call the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> method.</source>
          <target state="translated">Cuando se usa el <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> métodos para generar XML, los elementos y atributos no se escribirán hasta que llame a la <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndAttribute">
          <source>For example, if you are using the XmlWriter to populate an <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>, until you close the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>, you will not be able to observe the written elements and attributes in the target document.</source>
          <target state="translated">Por ejemplo, si usa XmlWriter para rellenar un <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>, hasta que se cierra el <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>, no podrá observar los elementos y atributos escritos en el documento de destino.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndAttribute">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndAttributeAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndAttributeAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndAttribute">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndAttribute">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
          <source>Asynchronously closes the previous <ph id="ph1">&lt;see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /&gt;</ph> call.</source>
          <target state="translated">Cierra de forma asincrónica la llamada anterior al método <ph id="ph1">&lt;see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteEndAttribute" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteEndAttribute" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndAttribute%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndAttribute%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndDocument">
          <source>When overridden in a derived class, closes any open elements or attributes and puts the writer back in the Start state.</source>
          <target state="translated">Cuando se invalida en una clase derivada, cierra todos los elementos o atributos abiertos y vuelve a colocar el sistema de escritura en el estado de inicio.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndDocument">
          <source>When you use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> methods to output XML, the elements and attributes will not be written until you call the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> method.</source>
          <target state="translated">Cuando se usa el <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> métodos para generar XML, los elementos y atributos no se escribirán hasta que llame a la <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndDocument">
          <source>For example, if you are using the XmlWriter to populate an <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>, until you close the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>, you will not be able to observe the written elements and attributes in the target document.</source>
          <target state="translated">Por ejemplo, si usa XmlWriter para rellenar un <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>, hasta que se cierra el <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>, no podrá observar los elementos y atributos escritos en el documento de destino.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndDocument">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndDocumentAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndDocumentAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndDocument">
          <source>The following example writes an XML file representing a book.</source>
          <target state="translated">En el ejemplo siguiente se escribe un archivo XML que representa un libro.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndDocument">
          <source>The XML document is invalid.</source>
          <target state="translated">El documento XML no es válido.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndDocument">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndDocument">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
          <source>Asynchronously closes any open elements or attributes and puts the writer back in the Start state.</source>
          <target state="translated">Cierra asincrónicamente todos los elementos o atributos abiertos y coloca de nuevo el sistema de escritura en el estado de inicio.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteEndDocument" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteEndDocument" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndDocument%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndDocument%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndElement">
          <source>When overridden in a derived class, closes one element and pops the corresponding namespace scope.</source>
          <target state="translated">Cuando se invalida en una clase derivada, cierra un elemento y extrae el ámbito de espacio de nombres correspondiente.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndElement">
          <source>If the element contains no content, a short end tag "/&gt;" is written; otherwise, a full end tag is written.</source>
          <target state="translated">Si el elemento no incluye ningún contenido, un valor bajo la etiqueta de cierre "/ &gt;" se escribe; en caso contrario, se escribe una etiqueta de cierre completa.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndElement">
          <source>When you use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> methods to output XML, the elements and attributes will not be written until you call the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> method.</source>
          <target state="translated">Cuando se usa el <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> métodos para generar XML, los elementos y atributos no se escribirán hasta que llame a la <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndElement">
          <source>For example, if you are using the XmlWwriter to populate an <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>, until you close the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>, you will not be able to observe the written elements and attributes in the target document.</source>
          <target state="translated">Por ejemplo, si utiliza XmlWwriter para rellenar un <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>, hasta que se cierra el <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>, no podrá observar los elementos y atributos escritos en el documento de destino.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndElement">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElementAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElementAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndElement">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph> methods.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndElement">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndElement">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndElementAsync">
          <source>Asynchronously closes one element and pops the corresponding namespace scope.</source>
          <target state="translated">Cierra asincrónicamente un elemento y extrae el correspondiente ámbito de espacio de nombres.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndElementAsync">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteEndElement" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteEndElement" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndElementAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndElementAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndElementAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndElementAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
          <source>The name of the entity reference.</source>
          <target state="translated">Nombre de la referencia a entidad.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
          <source>When overridden in a derived class, writes out an entity reference as <ph id="ph1">&lt;see langword="&amp;amp;name;" /&gt;</ph>.</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe una referencia a entidad de la siguiente forma: <ph id="ph1">&lt;see langword="&amp;amp;name;" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEntityRefAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEntityRefAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
          <source>The following example writes an XML file representing a book.</source>
          <target state="translated">En el ejemplo siguiente se escribe un archivo XML que representa un libro.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is either <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph> o <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
          <source>The name of the entity reference.</source>
          <target state="translated">Nombre de la referencia a entidad.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
          <source>Asynchronously writes out an entity reference as <ph id="ph1">&lt;see langword="&amp;amp;name;" /&gt;</ph>.</source>
          <target state="translated">De forma asincrónica coloca una referencia de entidad en tipo como <ph id="ph1">&lt;see langword="&amp;amp;name;" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteEntityRef" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteEntityRef" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEntityRef%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEntityRef%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteFullEndElement">
          <source>When overridden in a derived class, closes one element and pops the corresponding namespace scope.</source>
          <target state="translated">Cuando se invalida en una clase derivada, cierra un elemento y extrae el ámbito de espacio de nombres correspondiente.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteFullEndElement">
          <source>This method always writes the full end tag.</source>
          <target state="translated">Este método siempre escribe la etiqueta de cierre completa.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteFullEndElement">
          <source>This is useful when dealing with elements that must include a full end tag.</source>
          <target state="translated">Esto es útil cuando se trabaja con elementos que deben incluir una etiqueta de cierre completa.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteFullEndElement">
          <source>For example, browsers expect HTML script blocks to be closed with "<ph id="ph1">\&lt;</ph>/script&gt;".</source>
          <target state="translated">Por ejemplo, los exploradores esperan que los bloques de script HTML se cierren con " <ph id="ph1">\&lt;</ph> /script &gt;".</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteFullEndElement">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteFullEndElementAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteFullEndElementAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteFullEndElement">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph> methods.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteFullEndElement">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteFullEndElement">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
          <source>Asynchronously closes one element and pops the corresponding namespace scope.</source>
          <target state="translated">Cierra asincrónicamente un elemento y extrae el correspondiente ámbito de espacio de nombres.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteFullEndElement" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteFullEndElement" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteName(System.String)">
          <source>The name to write.</source>
          <target state="translated">Nombre que se va a escribir.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteName(System.String)">
          <source>When overridden in a derived class, writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>.</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe el nombre especificado, comprobando que sea un nombre válido de acuerdo con la recomendación relativa a XML 1.0 del Consorcio W3C (<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteName(System.String)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.Namespaces%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, <ph id="ph3">`WriteName`</ph> also checks that the name is also valid according to the W3C Namespaces in XML recommendation.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.Namespaces%2A&gt;</ph> está establecido en <ph id="ph2">`true`</ph>, <ph id="ph3">`WriteName`</ph> también comprueba que el nombre sea también válido de acuerdo con los espacios de nombres de W3C en la recomendación de XML.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteName(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNameAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNameAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteName(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is not a valid XML name; or <ph id="ph2">&lt;paramref name="name" /&gt;</ph> is either <ph id="ph3">&lt;see langword="null" /&gt;</ph> or <ph id="ph4">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> no es un nombre XML válido, o <ph id="ph2">&lt;paramref name="name" /&gt;</ph> es <ph id="ph3">&lt;see langword="null" /&gt;</ph> o <ph id="ph4">&lt;see langword="String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteName(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteName(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
          <source>The name to write.</source>
          <target state="translated">Nombre que se va a escribir.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
          <source>Asynchronously writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>.</source>
          <target state="translated">Escribe asincrónicamente el nombre especificado, asegurando que se trata de un nombre válido de acuerdo con la recomendación relativa a XML 1.0 del Consorcio W3C (<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteName" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteName" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteName%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteName%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
          <source>The name to write.</source>
          <target state="translated">Nombre que se va a escribir.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
          <source>When overridden in a derived class, writes out the specified name, ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation (<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>.</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe el nombre especificado, comprobando que sea un NmToken válido de acuerdo con la recomendación relativa a XML 1.0 del Consorcio W3C (<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNmTokenAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNmTokenAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is not a valid NmToken; or <ph id="ph2">&lt;paramref name="name" /&gt;</ph> is either <ph id="ph3">&lt;see langword="null" /&gt;</ph> or <ph id="ph4">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> no es un NmToken válido, o bien <ph id="ph2">&lt;paramref name="name" /&gt;</ph> es <ph id="ph3">&lt;see langword="null" /&gt;</ph> o <ph id="ph4">&lt;see langword="String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
          <source>The name to write.</source>
          <target state="translated">Nombre que se va a escribir.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
          <source>Asynchronously writes out the specified name, ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation (<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>.</source>
          <target state="translated">Escribe asincrónicamente el nombre especificado, asegurando que se trata de un NmToken válido de acuerdo con la recomendación relativa a XML 1.0 del Consorcio W3C (<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteNmToken" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteNmToken" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNmToken%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNmToken%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>Copies everything from the source object to the current writer instance.</source>
          <target state="translated">Copia todo el contenido del objeto de origen en la instancia actual del sistema de escritura.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNodeAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNodeAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to read from.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> desde el que se va a leer.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to copy the default attributes from the <ph id="ph2">&lt;see langword="XmlReader" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para copiar los atributos predeterminados de <ph id="ph2">&lt;see langword="XmlReader" /&gt;</ph>; en caso contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>When overridden in a derived class, copies everything from the reader to the writer and moves the reader to the start of the next sibling.</source>
          <target state="translated">Cuando se invalida en una clase derivada, copia todo el contenido del lector en el sistema de escritura y desplaza el lector al inicio del siguiente nodo relacionado.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>The following table shows the supported node types for this method.</source>
          <target state="translated">La tabla siguiente muestran los tipos de nodos admitidos para este método.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>NodeType</source>
          <target state="translated">NodeType</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>WriteNode Behavior</source>
          <target state="translated">Comportamiento de WriteNode</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out all the nodes irrespective of type.</source>
          <target state="translated">Escribe todos los nodos independientemente del tipo.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>That is, the writer consumes the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> and writes out all the nodes read including attributes, processing instructions, comments, and so on.</source>
          <target state="translated">Es decir, el sistema de escritura consume el <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> y escribe todos los nodos de lectura incluidos atributos, instrucciones de procesamiento, comentarios y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>This situation occurs when the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> is in an initial state.</source>
          <target state="translated">Esta situación se produce cuando el <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> está en un estado inicial.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>(The <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadState%2A?displayProperty=nameWithType&gt;</ph> property returns <ph id="ph2">`ReaderState.Initial`</ph>).</source>
          <target state="translated">(El <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadState%2A?displayProperty=nameWithType&gt;</ph> propiedad devuelve <ph id="ph2">`ReaderState.Initial`</ph>).</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the element node and any attribute nodes.</source>
          <target state="translated">Escribe el nodo de elemento y los nodos de atributo.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>No operation.</source>
          <target state="translated">No hay ninguna operación.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttribute%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> instead.</source>
          <target state="translated">Use <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttribute%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> en su lugar.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the text node.</source>
          <target state="translated">Escribe el nodo de texto.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the CDATA section node.</source>
          <target state="translated">Escribe el nodo de la sección CDATA.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the entity reference node.</source>
          <target state="translated">Escribe el nodo de referencia de entidad.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the processing instruction node.</source>
          <target state="translated">Escribe el nodo de instrucción de procesamiento.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the comment node.</source>
          <target state="translated">Escribe el nodo de comentario.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the document type node.</source>
          <target state="translated">Escribe el nodo de tipo de documento.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the significant white space node.</source>
          <target state="translated">Escribe el nodo de espacio en blanco significativo.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the white space node.</source>
          <target state="translated">Escribe el nodo de espacio en blanco.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the end element tag.</source>
          <target state="translated">Escribe la etiqueta final del elemento.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>No operation.</source>
          <target state="translated">No hay ninguna operación.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the XML declaration node.</source>
          <target state="translated">Escribe el nodo de declaración XML.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>If the reader is in the initial state, this method moves the reader to the end of file.</source>
          <target state="translated">Si el lector está en el estado inicial, este método desplaza el lector al final del archivo.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>If the reader is already at the end of file or in a closed state, this method is non-operational.</source>
          <target state="translated">Si el lector ya está al final del archivo o en un estado cerrado, este método no es operativo.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>The following C# code copies an entire XML input document to the console:</source>
          <target state="translated">El siguiente código C# copia un documento de entrada XML completo en la consola:</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>If you have moved off the root node and are positioned elsewhere in the document the following C# example correctly writes out the nodes.</source>
          <target state="translated">Si se ha movido fuera del nodo raíz y está situado en otra parte en el documento en el ejemplo de C# siguiente se escribe correctamente los nodos.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>If the reader is configured to return white space and the writer has is configured to indent output, <ph id="ph1">`WriteNode`</ph> may produce strange output.</source>
          <target state="translated">Si el lector se configura para devolver el espacio en blanco y el sistema de escritura está configurado para aplicar sangría al resultado, <ph id="ph1">`WriteNode`</ph> puede generar resultados extraños.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>You will essentially be getting double formatting.</source>
          <target state="translated">Básicamente se obtendrá doble formato.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNodeAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNodeAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>The following example writes the first and last book nodes out to the console.</source>
          <target state="translated">En el ejemplo siguiente se escribe los nodos de libro primero y último en la consola.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>The example uses the file, <ph id="ph1">`books.xml`</ph>, as input.</source>
          <target state="translated">En el ejemplo se utiliza el archivo <ph id="ph1">`books.xml`</ph>como entrada.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> contains invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> contiene caracteres no válidos.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> to copy from.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> del que se va a copiar.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to copy the default attributes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para copiar los atributos predeterminados; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Copies everything from the <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object to the writer.</source>
          <target state="translated">Copia todo el contenido del objeto <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> en el sistema de escritura.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>The position of the <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> remains unchanged.</source>
          <target state="translated">La posición de <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> permanece inalterada.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>The following table shows the supported <ph id="ph1">`XPath`</ph> node types for this method.</source>
          <target state="translated">La siguiente tabla muestra admiten <ph id="ph1">`XPath`</ph> tipos de nodo para este método.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>XPathNodeType</source>
          <target state="translated">XPathNodeType</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>WriteNode Behavior</source>
          <target state="translated">Comportamiento de WriteNode</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Writes out all the nodes irrespective of type.</source>
          <target state="translated">Escribe todos los nodos independientemente del tipo.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>That is, the writer consumes the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> and writes out all the nodes from the root node (including attributes, processing instructions, comments and so on.)</source>
          <target state="translated">Es decir, el sistema de escritura consume el <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> y escribe todos los nodos desde el nodo raíz (incluidos los atributos, instrucciones de procesamiento, comentarios y así sucesivamente).</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Writes out the element node and any attribute nodes.</source>
          <target state="translated">Escribe el nodo de elemento y los nodos de atributo.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>No operation.</source>
          <target state="translated">No hay ninguna operación.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttribute%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> instead.</source>
          <target state="translated">Use <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttribute%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> en su lugar.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Writes out the text node.</source>
          <target state="translated">Escribe el nodo de texto.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>No operation.</source>
          <target state="translated">No hay ninguna operación.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttribute%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> method to write the namespace declaration.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttribute%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> método para escribir la declaración de espacio de nombres.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Writes out the processing instruction node.</source>
          <target state="translated">Escribe el nodo de instrucción de procesamiento.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Writes out the comment node.</source>
          <target state="translated">Escribe el nodo de comentario.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Writes out the significant white space node.</source>
          <target state="translated">Escribe el nodo de espacio en blanco significativo.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Writes out the white space node.</source>
          <target state="translated">Escribe el nodo de espacio en blanco.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNodeAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNodeAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNode%2A&gt;</ph> method to copy the first book node from a document and write it to the console.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNode%2A&gt;</ph> método para copiar el primer nodo de libro de un documento y escribir en la consola.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>The example uses the books.xml file as input.</source>
          <target state="translated">En el ejemplo se utiliza el archivo books.xml como entrada.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="navigator" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="navigator" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>Asynchronously copies everything from the source object to the current writer instance.</source>
          <target state="translated">Copia asincrónicamente todo el contenido del objeto de origen en la instancia actual del sistema de escritura.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNode%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNode%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to read from.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> desde el que se va a leer.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to copy the default attributes from the <ph id="ph2">&lt;see langword="XmlReader" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para copiar los atributos predeterminados de <ph id="ph2">&lt;see langword="XmlReader" /&gt;</ph>; en caso contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
          <source>Asynchronously copies everything from the reader to the writer and moves the reader to the start of the next sibling.</source>
          <target state="translated">Copia asincrónicamente todo el contenido del lector en el sistema de escritura y desplaza el lector al inicio del siguiente nodo relacionado.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteNode" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteNode" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNode%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNode%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> to copy from.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> del que se va a copiar.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to copy the default attributes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para copiar los atributos predeterminados; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Asynchronously copies everything from the <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object to the writer.</source>
          <target state="translated">De forma asincrónica copia todo el objeto de <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> al escritor.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>The position of the <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> remains unchanged.</source>
          <target state="translated">La posición de <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> permanece inalterada.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteNode" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteNode" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNode%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNode%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>The name of the processing instruction.</source>
          <target state="translated">Nombre de la instrucción de procesamiento.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>The text to include in the processing instruction.</source>
          <target state="translated">Texto que se va a incluir en la instrucción de procesamiento.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>When overridden in a derived class, writes out a processing instruction with a space between the name and text as follows: <ph id="ph1">&amp;lt;</ph>?name text?<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe una instrucción de procesamiento con un espacio entre el nombre y el texto: <ph id="ph1">&amp;lt;</ph>?nombre texto?<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>This method can be used to write the XML declaration (rather than <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocument%2A&gt;</ph>).</source>
          <target state="translated">Este método se puede utilizar para escribir la declaración XML (en lugar de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocument%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>This could result in the encoding attribute being incorrectly written.</source>
          <target state="translated">Esto podría resultar en el atributo de codificación que se va a escritas incorrectamente.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>For example, the following C# code would result in an invalid XML document because the default encoding is UTF-8.</source>
          <target state="translated">Por ejemplo, el siguiente código C# dará como resultado un documento XML no válido porque la codificación predeterminada es UTF-8.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>If <ph id="ph1">`text`</ph> is either <ph id="ph2">`null`</ph> or <ph id="ph3">`String.Empty`</ph>, this method writes a <ph id="ph4">`ProcessingInstruction`</ph> with no data content, for example <ph id="ph5">\&lt;</ph>?name?&gt;.</source>
          <target state="translated">Si <ph id="ph1">`text`</ph> sea <ph id="ph2">`null`</ph> o <ph id="ph3">`String.Empty`</ph>, este método escribe un <ph id="ph4">`ProcessingInstruction`</ph> sin datos de contenido, por ejemplo <ph id="ph5">\&lt;</ph>? nombre? &gt;.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>If text contains an invalid sequence of "?&gt;", the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> can either throw an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> (<ph id="ph3">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> objects) or insert a space "?</source>
          <target state="translated">¿Si el texto contiene una secuencia no válida de "? &gt;", el <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> puede cualquier throw un <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> (<ph id="ph3">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> objetos) o inserte un espacio "?</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>&gt;" to avoid writing invalid XML (<ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> objects created by the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> method).</source>
          <target state="translated">&gt; "para evitar escribir un XML no válido (<ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> objetos creados por el <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> método).</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteProcessingInstructionAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteProcessingInstructionAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>The following example writes an XML file representing a book.</source>
          <target state="translated">En el ejemplo siguiente se escribe un archivo XML que representa un libro.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>The text would result in a non-well formed XML document.</source>
          <target state="translated">El texto daría como resultado un documento XML con formato incorrecto.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is either <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph> o <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>This method is being used to create an XML declaration after <ph id="ph1">&lt;see cref="M:System.Xml.XmlWriter.WriteStartDocument" /&gt;</ph> has already been called.</source>
          <target state="translated">Este método se utiliza para crear una declaración XML después de llamar al método <ph id="ph1">&lt;see cref="M:System.Xml.XmlWriter.WriteStartDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
          <source>The name of the processing instruction.</source>
          <target state="translated">Nombre de la instrucción de procesamiento.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
          <source>The text to include in the processing instruction.</source>
          <target state="translated">Texto que se va a incluir en la instrucción de procesamiento.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
          <source>Asynchronously writes out a processing instruction with a space between the name and text as follows: <ph id="ph1">&amp;lt;</ph>?name text?<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">Escribe de forma asincrónica una instrucción de procesamiento con un espacio entre el nombre y el texto: <ph id="ph1">&amp;lt;</ph>?nombre texto?<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteProcessingInstruction" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteProcessingInstruction" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>The local name to write.</source>
          <target state="translated">Nombre local que se va a escribir.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>The namespace URI for the name.</source>
          <target state="translated">Identificador URI de espacio de nombres del nombre.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>When overridden in a derived class, writes out the namespace-qualified name.</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe el nombre completo del espacio de nombres.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>This method looks up the prefix that is in scope for the given namespace.</source>
          <target state="translated">Este método busca un prefijo que está en el ámbito del espacio de nombres especificado.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>If <ph id="ph1">`ns`</ph> maps to the current default namespace, no prefix is generated.</source>
          <target state="translated">Si <ph id="ph1">`ns`</ph> se generan asignaciones para el espacio de nombres actual de forma predeterminada, ningún prefijo.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>When writing attribute values, this method generates a prefix if <ph id="ph1">`ns`</ph> is not found.</source>
          <target state="translated">Al escribir valores de atributo, este método genera un prefijo si <ph id="ph1">`ns`</ph> no se encuentra.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>When writing element content, it throws an exception if <ph id="ph1">`ns`</ph> is not found.</source>
          <target state="translated">Al escribir el contenido del elemento, produce una excepción si <ph id="ph1">`ns`</ph> no se encuentra.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>If a class derived from the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> does not override this method <ph id="ph2">`localName`</ph> is not checked to be a valid W3C XML name.</source>
          <target state="translated">Si una clase derivada de la <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> no invalida este método <ph id="ph2">`localName`</ph> no se comprueban para ser un nombre válido de XML de W3C.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>In such case, before calling this method, the validity of the string can be checked by <ph id="ph1">&lt;xref:System.Xml.XmlReader.IsName%2A&gt;</ph> method.</source>
          <target state="translated">En este caso, antes de llamar a este método, la validez de la cadena se puede comprobar por <ph id="ph1">&lt;xref:System.Xml.XmlReader.IsName%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteQualifiedNameAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteQualifiedNameAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>The example writes the following element:</source>
          <target state="translated">En el ejemplo se escribe el elemento siguiente:</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="localName" /&gt;</ph> is either <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localName" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph> o <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="localName" /&gt;</ph> is not a valid name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localName" /&gt;</ph> no es un nombre válido.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
          <source>The local name to write.</source>
          <target state="translated">Nombre local que se va a escribir.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
          <source>The namespace URI for the name.</source>
          <target state="translated">Identificador URI de espacio de nombres del nombre.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
          <source>Asynchronously writes out the namespace-qualified name.</source>
          <target state="translated">Escribe asincrónicamente el nombre completo del espacio de nombres.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
          <source>This method looks up the prefix that is in scope for the given namespace.</source>
          <target state="translated">Este método busca un prefijo que está en el ámbito del espacio de nombres especificado.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteQualifiedName" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteQualifiedName" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteQualifiedName%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteQualifiedName%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>When overridden in a derived class, writes raw markup manually.</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe marcado sin formato manualmente.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRawAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRawAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source>String containing the text to write.</source>
          <target state="translated">Cadena que contiene el texto que se va a escribir.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source>When overridden in a derived class, writes raw markup manually from a string.</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe marcado sin formato manualmente desde una cadena.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source>This method does not escape special characters.</source>
          <target state="translated">Este método no escape de caracteres especiales.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> does not validate the data that is passed to the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph> method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> no valida los datos que se pasan a la <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source>You should not pass arbitrary data to this method.</source>
          <target state="translated">No debe pasar datos arbitrarios a este método.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRawAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRawAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.WriteRaw%2A?displayProperty=nameWithType&gt;</ph> for an example using this method.</source>
          <target state="translated">Consulte <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.WriteRaw%2A?displayProperty=nameWithType&gt;</ph> para obtener un ejemplo con este método.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is either <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph> o <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>Character array containing the text to write.</source>
          <target state="translated">Matriz de caracteres que contiene el texto que se va a escribir.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>The position within the buffer indicating the start of the text to write.</source>
          <target state="translated">Posición en el búfer que indica el inicio del texto que se va a escribir.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">Número de caracteres que se van a escribir.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>When overridden in a derived class, writes raw markup manually from a character buffer.</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe marcado sin formato manualmente desde un búfer de caracteres.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>This method does not escape special characters.</source>
          <target state="translated">Este método no escape de caracteres especiales.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> does not validate the data that is passed to the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph> method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> no valida los datos que se pasan a la <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>You should not pass arbitrary data to this method.</source>
          <target state="translated">No debe pasar datos arbitrarios a este método.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRawAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRawAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> o <ph id="ph2">&lt;paramref name="count" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">La longitud del búfer menos <ph id="ph1">&lt;paramref name="index" /&gt;</ph> es menor que <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>Asynchronously writes raw markup manually.</source>
          <target state="translated">Escribe asincrónicamente el marcado sin formato.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
          <source>String containing the text to write.</source>
          <target state="translated">Cadena que contiene el texto que se va a escribir.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
          <source>Asynchronously writes raw markup manually from a string.</source>
          <target state="translated">Escribe asincrónicamente el marcado sin formato de una cadena.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteRaw" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteRaw" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
          <source>Character array containing the text to write.</source>
          <target state="translated">Matriz de caracteres que contiene el texto que se va a escribir.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
          <source>The position within the buffer indicating the start of the text to write.</source>
          <target state="translated">Posición en el búfer que indica el inicio del texto que se va a escribir.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">Número de caracteres que se van a escribir.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
          <source>Asynchronously writes raw markup manually from a character buffer.</source>
          <target state="translated">Escribe asincrónicamente el marcado sin formato de un búfer de caracteres.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteRaw" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteRaw" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>When overridden in a derived class, writes the start of an attribute.</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe el inicio de un atributo.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">Nombre local del atributo.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>Writes the start of an attribute with the specified local name.</source>
          <target state="translated">Escribe el inicio de un atributo con el nombre local especificado.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>This method enables you to write a value using multiple Write methods.</source>
          <target state="translated">Este método permite escribir un valor mediante varios métodos Write.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</source>
          <target state="translated">Hay un carácter en el búfer que es un carácter XML válido pero que no es válido para la codificación de salida.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</source>
          <target state="translated">Por ejemplo, si la codificación de salida es ASCII, sólo debería utilizar los caracteres del intervalo de 0 a 127 para el elemento y nombres de atributo.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</source>
          <target state="translated">El carácter no válido podría estar en el argumento de este método o en un argumento de métodos anteriores que estaban escribiendo en el búfer.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</source>
          <target state="translated">Las referencias a entidades de caracteres anulan a dichos caracteres siempre que sea posible (por ejemplo, en nodos de texto o valores de atributo).</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</source>
          <target state="translated">Sin embargo, la referencia de entidad de carácter no se permite en nombres de elemento y de atributo, comentarios, instrucciones de procesamiento o secciones CDATA.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">Nombre local del atributo.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">URI de espacio de nombres del atributo.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>Writes the start of an attribute with the specified local name and namespace URI.</source>
          <target state="translated">Escribe el inicio de un atributo con el URI de espacio de nombres y el nombre local especificados.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>This is a more advanced version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> that allows you to write an attribute value using multiple write methods, such as <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteQualifiedName%2A&gt;</ph>, and so on.</source>
          <target state="translated">Se trata de una versión más avanzada de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> que le permite escribir un valor de atributo con varios métodos de escritura, como <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteQualifiedName%2A&gt;</ph>, y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.WriteStartAttribute%2A?displayProperty=nameWithType&gt;</ph> for an example using this method.</source>
          <target state="translated">Consulte <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.WriteStartAttribute%2A?displayProperty=nameWithType&gt;</ph> para obtener un ejemplo con este método.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</source>
          <target state="translated">Hay un carácter en el búfer que es un carácter XML válido pero que no es válido para la codificación de salida.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</source>
          <target state="translated">Por ejemplo, si la codificación de salida es ASCII, sólo debería utilizar los caracteres del intervalo de 0 a 127 para el elemento y nombres de atributo.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</source>
          <target state="translated">El carácter no válido podría estar en el argumento de este método o en un argumento de métodos anteriores que estaban escribiendo en el búfer.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</source>
          <target state="translated">Las referencias a entidades de caracteres anulan a dichos caracteres siempre que sea posible (por ejemplo, en nodos de texto o valores de atributo).</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</source>
          <target state="translated">Sin embargo, la referencia de entidad de carácter no se permite en nombres de elemento y de atributo, comentarios, instrucciones de procesamiento o secciones CDATA.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>The namespace prefix of the attribute.</source>
          <target state="translated">Prefijo de espacio de nombres del atributo.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">Nombre local del atributo.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>The namespace URI for the attribute.</source>
          <target state="translated">Identificador URI de espacio de nombres del atributo.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>When overridden in a derived class, writes the start of an attribute with the specified prefix, local name, and namespace URI.</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe el inicio de un atributo con el prefijo, el nombre local y el URI de espacio de nombres especificados.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>This method enables you to write a value using multiple Write methods.</source>
          <target state="translated">Este método permite escribir un valor mediante varios métodos Write.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</source>
          <target state="translated">Hay un carácter en el búfer que es un carácter XML válido pero que no es válido para la codificación de salida.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</source>
          <target state="translated">Por ejemplo, si la codificación de salida es ASCII, sólo debería utilizar los caracteres del intervalo de 0 a 127 para el elemento y nombres de atributo.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</source>
          <target state="translated">El carácter no válido podría estar en el argumento de este método o en un argumento de métodos anteriores que estaban escribiendo en el búfer.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</source>
          <target state="translated">Las referencias a entidades de caracteres anulan a dichos caracteres siempre que sea posible (por ejemplo, en nodos de texto o valores de atributo).</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</source>
          <target state="translated">Sin embargo, la referencia de entidad de carácter no se permite en nombres de elemento y de atributo, comentarios, instrucciones de procesamiento o secciones CDATA.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
          <source>The namespace prefix of the attribute.</source>
          <target state="translated">Prefijo de espacio de nombres del atributo.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">Nombre local del atributo.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
          <source>The namespace URI for the attribute.</source>
          <target state="translated">Identificador URI de espacio de nombres del atributo.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
          <source>Asynchronously writes the start of an attribute with the specified prefix, local name, and namespace URI.</source>
          <target state="translated">Escribe asincrónicamente el inicio de un atributo con el prefijo, URI de espacio de nombres y el nombre local especificados.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteStartAttribute" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteStartAttribute" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttribute%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttribute%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>When overridden in a derived class, writes the XML declaration.</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe la declaración XML.</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>When overridden in a derived class, writes the XML declaration with the version "1.0".</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe la declaración XML con la versión "1.0".</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>The encoding level of the document is determined by how the writer is implemented.</source>
          <target state="translated">El nivel de codificación del documento está determinado por cómo se implementa el sistema de escritura.</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>For example, if an <ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> object is specified in the <ph id="ph2">`XmlTextWriter`</ph> constructor, this determines the value of the encoding attribute.</source>
          <target state="translated">Por ejemplo, si un <ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> se especifica en el <ph id="ph2">`XmlTextWriter`</ph> constructor, esto determina el valor del atributo de codificación.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>This method does not create a standalone attribute.</source>
          <target state="translated">Este método no crea un atributo independiente.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>When <ph id="ph1">`WriteStartDocument`</ph> is called the writer validates that what you are writing is a well-formed XML document.</source>
          <target state="translated">Cuando <ph id="ph1">`WriteStartDocument`</ph> se llama el sistema de escritura se comprueba si está escribiendo un documento XML bien formado.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>For example, it checks that the XML declaration is the first node, that one and only one root-level element exists, and so on.</source>
          <target state="translated">Por ejemplo, comprueba que la declaración XML es el primer nodo, que uno y solo un elemento de nivel raíz existe y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</source>
          <target state="translated">Si no se llama a este método, el sistema de escritura supone un fragmento XML se escribe y aplica ninguna regla de nivel de raíz.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>If <ph id="ph1">`WriteStartDocument`</ph> has been called and then the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A&gt;</ph> method is used to create another XML declaration, an exception will be thrown.</source>
          <target state="translated">Si <ph id="ph1">`WriteStartDocument`</ph> se ha llamado y, a continuación, el <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A&gt;</ph> método se usa para crear otra declaración XML, se producirá una excepción.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, it writes "standalone=yes"; if <ph id="ph2">&lt;see langword="false" /&gt;</ph>, it writes "standalone=no".</source>
          <target state="translated">Si es <ph id="ph1">&lt;see langword="true" /&gt;</ph>, escribirá "standalone=yes"; si es <ph id="ph2">&lt;see langword="false" /&gt;</ph>, escribirá "standalone=no".</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>When overridden in a derived class, writes the XML declaration with the version "1.0" and the standalone attribute.</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe la declaración XML con la versión "1.0" y el atributo independiente.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>The encoding level of the document is determined by how the writer is implemented.</source>
          <target state="translated">El nivel de codificación del documento está determinado por cómo se implementa el sistema de escritura.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>For example, if an <ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> object is specified in the <ph id="ph2">`XmlTextWriter`</ph> constructor, this determines the value of the encoding attribute.</source>
          <target state="translated">Por ejemplo, si un <ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> se especifica en el <ph id="ph2">`XmlTextWriter`</ph> constructor, esto determina el valor del atributo de codificación.</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>When <ph id="ph1">`WriteStartDocument`</ph> is called, the writer validates that what you are writing is a well-formed XML document.</source>
          <target state="translated">Cuando <ph id="ph1">`WriteStartDocument`</ph> es llama, el sistema de escritura se comprueba si está escribiendo un documento XML bien formado.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>For example, it checks that the XML declaration is the first node, that one and only one root-level element exists, and so on.</source>
          <target state="translated">Por ejemplo, comprueba que la declaración XML es el primer nodo, que uno y solo un elemento de nivel raíz existe y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</source>
          <target state="translated">Si no se llama a este método, el sistema de escritura supone un fragmento XML se escribe y aplica ninguna regla de nivel de raíz.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>If <ph id="ph1">`WriteStartDocument`</ph> has been called and then the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A&gt;</ph> method is used to create another XML declaration, an exception will be thrown.</source>
          <target state="translated">Si <ph id="ph1">`WriteStartDocument`</ph> se ha llamado y, a continuación, el <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A&gt;</ph> método se usa para crear otra declaración XML, se producirá una excepción.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>Asynchronously writes the XML declaration.</source>
          <target state="translated">De forma asincrónica escribe la declaración XML.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocument%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocument%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
          <source>Asynchronously writes the XML declaration with the version "1.0".</source>
          <target state="translated">Escribe asincrónicamente la declaración XML con la versión "1.0".</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteStartDocument" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteStartDocument" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocument%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocument%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, it writes "standalone=yes"; if <ph id="ph2">&lt;see langword="false" /&gt;</ph>, it writes "standalone=no".</source>
          <target state="translated">Si es <ph id="ph1">&lt;see langword="true" /&gt;</ph>, escribirá "standalone=yes"; si es <ph id="ph2">&lt;see langword="false" /&gt;</ph>, escribirá "standalone=no".</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
          <source>Asynchronously writes the XML declaration with the version "1.0" and the standalone attribute.</source>
          <target state="translated">Escribe asincrónicamente la declaración XML con la versión "1.0" así como el atributo independiente.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteStartDocument" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteStartDocument" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocument%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocument%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>When overridden in a derived class, writes the specified start tag.</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe la etiqueta de apertura especificada.</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElementAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElementAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>The local name of the element.</source>
          <target state="translated">Nombre local del elemento.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>When overridden in a derived class, writes out a start tag with the specified local name.</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe una etiqueta de apertura con el nombre local especificado.</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElementAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElementAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>The following example writes an XML node.</source>
          <target state="translated">En el ejemplo siguiente se escribe un nodo XML.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</source>
          <target state="translated">Hay un carácter en el búfer que es un carácter XML válido pero que no es válido para la codificación de salida.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</source>
          <target state="translated">Por ejemplo, si la codificación de salida es ASCII, sólo debería utilizar los caracteres del intervalo de 0 a 127 para el elemento y nombres de atributo.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</source>
          <target state="translated">El carácter no válido podría estar en el argumento de este método o en un argumento de métodos anteriores que estaban escribiendo en el búfer.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</source>
          <target state="translated">Las referencias a entidades de caracteres anulan a dichos caracteres siempre que sea posible (por ejemplo, en nodos de texto o valores de atributo).</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</source>
          <target state="translated">Sin embargo, la referencia de entidad de carácter no se permite en nombres de elemento y de atributo, comentarios, instrucciones de procesamiento o secciones CDATA.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">Nombre local del elemento.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>The namespace URI to associate with the element.</source>
          <target state="translated">Identificador URI de espacio de nombres que se va a asociar al elemento.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>If this namespace is already in scope and has an associated prefix, the writer automatically writes that prefix also.</source>
          <target state="translated">Si este espacio de nombres ya está en el ámbito y tiene asociado un prefijo, el sistema de escritura escribe automáticamente también dicho prefijo.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>When overridden in a derived class, writes the specified start tag and associates it with the given namespace.</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe la etiqueta de apertura especificada y la asocia al espacio de nombres especificado.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>After calling this method you can either write attributes, or create content using <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteComment%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>, or <ph id="ph3">`WriteStartElement`</ph> for child elements.</source>
          <target state="translated">Después de llamar a este método puede escribir atributos o crear contenido usando <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteComment%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>, o <ph id="ph3">`WriteStartElement`</ph> para los elementos secundarios.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>You can close the element with either <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph>.</source>
          <target state="translated">Puede cerrar el elemento con una <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>For example, the following C# code:</source>
          <target state="translated">Por ejemplo, el siguiente código de C#:</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>Generates the following output:</source>
          <target state="translated">Genera el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElementAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElementAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</source>
          <target state="translated">Hay un carácter en el búfer que es un carácter XML válido pero que no es válido para la codificación de salida.</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</source>
          <target state="translated">Por ejemplo, si la codificación de salida es ASCII, sólo debería utilizar los caracteres del intervalo de 0 a 127 para el elemento y nombres de atributo.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</source>
          <target state="translated">El carácter no válido podría estar en el argumento de este método o en un argumento de métodos anteriores que estaban escribiendo en el búfer.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</source>
          <target state="translated">Las referencias a entidades de caracteres anulan a dichos caracteres siempre que sea posible (por ejemplo, en nodos de texto o valores de atributo).</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</source>
          <target state="translated">Sin embargo, la referencia de entidad de carácter no se permite en nombres de elemento y de atributo, comentarios, instrucciones de procesamiento o secciones CDATA.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>The namespace prefix of the element.</source>
          <target state="translated">Prefijo de espacio de nombres del elemento.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">Nombre local del elemento.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>The namespace URI to associate with the element.</source>
          <target state="translated">Identificador URI de espacio de nombres que se va a asociar al elemento.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>When overridden in a derived class, writes the specified start tag and associates it with the given namespace and prefix.</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe la etiqueta de apertura especificada y la asocia al espacio de nombres y prefijo especificados.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElementAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElementAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>The following example writes out an XML fragment.</source>
          <target state="translated">En el ejemplo siguiente se escribe un fragmento XML.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</source>
          <target state="translated">Hay un carácter en el búfer que es un carácter XML válido pero que no es válido para la codificación de salida.</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</source>
          <target state="translated">Por ejemplo, si la codificación de salida es ASCII, sólo debería utilizar los caracteres del intervalo de 0 a 127 para el elemento y nombres de atributo.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</source>
          <target state="translated">El carácter no válido podría estar en el argumento de este método o en un argumento de métodos anteriores que estaban escribiendo en el búfer.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</source>
          <target state="translated">Las referencias a entidades de caracteres anulan a dichos caracteres siempre que sea posible (por ejemplo, en nodos de texto o valores de atributo).</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</source>
          <target state="translated">Sin embargo, la referencia de entidad de carácter no se permite en nombres de elemento y de atributo, comentarios, instrucciones de procesamiento o secciones CDATA.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
          <source>The namespace prefix of the element.</source>
          <target state="translated">Prefijo de espacio de nombres del elemento.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">Nombre local del elemento.</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
          <source>The namespace URI to associate with the element.</source>
          <target state="translated">Identificador URI de espacio de nombres que se va a asociar al elemento.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
          <source>Asynchronously writes the specified start tag and associates it with the given namespace and prefix.</source>
          <target state="translated">Escribe asincrónicamente la etiqueta de apertura especificada y la asocia al espacio de nombres y al prefijo especificados.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteStartElement" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteStartElement" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElement%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElement%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.WriteState">
          <source>When overridden in a derived class, gets the state of the writer.</source>
          <target state="translated">Cuando se invalida en una clase derivada, obtiene el estado del sistema de escritura.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.WriteState">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.WriteState" /&gt;</ph> values.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Xml.WriteState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.WriteState">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.WriteState">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>The text to write.</source>
          <target state="translated">Texto que se va a escribir.</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>When overridden in a derived class, writes the given text content.</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe el contenido de texto especificado.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source><ph id="ph1">`WriteString`</ph> does the following:</source>
          <target state="translated"><ph id="ph1">`WriteString`</ph> hace lo siguiente:</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>The characters <ph id="ph1">`&amp;`</ph>, <ph id="ph2">`&lt;`</ph>, and <ph id="ph3">`&gt;`</ph> are replaced with <ph id="ph4">`&amp;amp;`</ph>, <ph id="ph5">`&amp;lt;`</ph>, and <ph id="ph6">`&amp;gt;`</ph>, respectively.</source>
          <target state="translated">Los caracteres <ph id="ph1">`&amp;`</ph>, <ph id="ph2">`&lt;`</ph>, y <ph id="ph3">`&gt;`</ph> se reemplazan por <ph id="ph4">`&amp;amp;`</ph>, <ph id="ph5">`&amp;lt;`</ph>, y <ph id="ph6">`&amp;gt;`</ph>, respectivamente.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>The default behavior of an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> created using <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> is to throw an <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph> when attempting to write character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD).</source>
          <target state="translated">El comportamiento predeterminado de un <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> siguieron <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> consiste en producir una <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph> al intentar escribir los valores de caracteres en el x-0x1F del intervalo comprendido entre 0 (excluidos los caracteres de espacio en blanco 0 x 9, 0xA y 0xD).</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>These invalid XML characters can be written by creating the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> with the <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings.CheckCharacters%2A&gt;</ph> property set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Estos caracteres XML no válidos pueden escribirse creando el <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> con el <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings.CheckCharacters%2A&gt;</ph> propiedad establecida en <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>Doing so will result in the characters being replaced with numeric character entities (&amp;<ph id="ph1">\#</ph>0; through &amp;#0x1F).</source>
          <target state="translated">Si lo hace, dará como resultado de los caracteres se reemplazan con entidades de carácter numérico (&amp;<ph id="ph1">\#</ph>0; y &amp; #0x1F).</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>Additionally, an <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> created with the <ph id="ph2">`new`</ph> operator will replace the invalid characters with numeric character entities by default.</source>
          <target state="translated">Además, un <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> creado con el <ph id="ph2">`new`</ph> operador, reemplazará los caracteres no válidos por entidades de caracteres numéricos de forma predeterminada.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> Microsoft does not encourage the practice of writing invalid XML characters since many applications that consume XML are not designed to handle invalid characters.</source>
          <target state="translated"><bpt id="p1">**</bpt>Tenga en cuenta<ept id="p1">**</ept> Microsoft no recomienda escribir caracteres XML no válidos ya que muchas aplicaciones que usan XML no están diseñadas para controlar los caracteres no válidos.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>If <ph id="ph1">`WriteString`</ph> is called in the context of an attribute value, double and single quotes are replaced with <ph id="ph2">`&amp;quot;`</ph> and <ph id="ph3">`&amp;apos;`</ph> respectively.</source>
          <target state="translated">Si <ph id="ph1">`WriteString`</ph> se llama en el contexto de un valor de atributo, las comillas dobles y simples se reemplazan con <ph id="ph2">`&amp;quot;`</ph> y <ph id="ph3">`&amp;apos;`</ph> respectivamente.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>For example, this input string <ph id="ph1">`test&lt;item&gt;test`</ph> is written out as</source>
          <target state="translated">Por ejemplo, esta cadena de entrada <ph id="ph1">`test&lt;item&gt;test`</ph> se escribe como</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>If <ph id="ph1">`text`</ph> is either <ph id="ph2">`null`</ph> or <ph id="ph3">`String.Empty`</ph>, this method writes a text node with no data content.</source>
          <target state="translated">Si <ph id="ph1">`text`</ph> sea <ph id="ph2">`null`</ph> o <ph id="ph3">`String.Empty`</ph>, este método escribe un nodo de texto sin contenido de datos.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>The following example writes an XML node.</source>
          <target state="translated">En el ejemplo siguiente se escribe un nodo XML.</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>The text string contains an invalid surrogate pair.</source>
          <target state="translated">La cadena de texto contiene un par suplente no válido.</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
          <source>The text to write.</source>
          <target state="translated">Texto que se va a escribir.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
          <source>Asynchronously writes the given text content.</source>
          <target state="translated">Escribe asincrónicamente el contenido de texto dado.</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteString" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteString" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>The low surrogate.</source>
          <target state="translated">Suplente bajo.</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>This must be a value between 0xDC00 and 0xDFFF.</source>
          <target state="translated">Debe ser un valor comprendido entre 0xDC00 y 0xDFFF.</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>The high surrogate.</source>
          <target state="translated">Suplente alto.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>This must be a value between 0xD800 and 0xDBFF.</source>
          <target state="translated">Debe ser un valor comprendido entre 0xD800 y 0xDBFF.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>When overridden in a derived class, generates and writes the surrogate character entity for the surrogate character pair.</source>
          <target state="translated">Cuando se invalida en una clase derivada, genera y escribe la entidad de carácter suplente para el par de caracteres suplentes.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>This method is only applicable on systems that use UTF-16 encoding.</source>
          <target state="translated">Este método sólo es aplicable en sistemas que utilizan la codificación UTF-16.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>The surrogate character entity is written in hexadecimal format.</source>
          <target state="translated">La entidad de carácter suplente se escribe en formato hexadecimal.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>The range for surrogate characters is #x10000 to #x10FFFF.</source>
          <target state="translated">El intervalo de caracteres suplentes es #x 10000 a #x10FFFF.</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>The following formula is used to generate the surrogate character entity: (<ph id="ph1">`highChar`</ph> -0xD800) * 0x400 + (<ph id="ph2">`lowChar`</ph> -0xDC00) + 0x10000</source>
          <target state="translated">La siguiente fórmula se utiliza para generar la entidad de carácter suplente: (<ph id="ph1">`highChar`</ph> -0xD800) * 0 x 400 + (<ph id="ph2">`lowChar`</ph> -0xDC00) + 0 x 10000</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646].</source>
          <target state="translated">Para HTML y XML, el juego de caracteres del documento (y, por tanto, la notación de las referencias de carácter numérico) se basan en UCS [ISO-10646].</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate).</source>
          <target state="translated">Una referencia de carácter numérico individual en un documento de origen puede, por tanto, en algunos casos se corresponde con dos unidades de 16 bits en una cadena (un suplente alto y un suplente bajo).</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>These 16-bit units are referred to as a surrogate pair.</source>
          <target state="translated">Estas unidades de 16 bits se conocen como un par suplente.</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>For more information regarding surrogates or characters, refer to section 3.7 of the Unicode 3.0/Unicode 2.0 standard located at <ph id="ph1">http://www.unicode.org</ph>, or section 2.2 of the W3C XML 1.0 Recommendation located at <ph id="ph2">http://www.w3.org/TR/REC-xml#charsets</ph>.</source>
          <target state="translated">Para obtener más información sobre suplentes o caracteres, consulte la sección 3.7 del Unicode 3.0/Unicode 2.0 estándar que se encuentra en <ph id="ph1">http://www.unicode.org</ph>, o la sección 2.2 de la recomendación W3C XML 1.0 se encuentra en <ph id="ph2">http://www.w3.org/TR/REC-xml#charsets</ph>.</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>An invalid surrogate character pair was passed.</source>
          <target state="translated">Se ha pasado un par de caracteres suplentes no válido.</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>The low surrogate.</source>
          <target state="translated">Suplente bajo.</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>This must be a value between 0xDC00 and 0xDFFF.</source>
          <target state="translated">Debe ser un valor comprendido entre 0xDC00 y 0xDFFF.</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>The high surrogate.</source>
          <target state="translated">Suplente alto.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>This must be a value between 0xD800 and 0xDBFF.</source>
          <target state="translated">Debe ser un valor comprendido entre 0xD800 y 0xDBFF.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>Asynchronously generates and writes the surrogate character entity for the surrogate character pair.</source>
          <target state="translated">Genera y escribe asincrónicamente la entidad de carácter suplente del par de caracteres suplentes.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteSurrogateCharEntity" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteSurrogateCharEntity" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteSurrogateCharEntity%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteSurrogateCharEntity%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>Writes a single simple-typed value.</source>
          <target state="translated">Escribe un solo valor con tipo simple.</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method accepts common language runtime (CLR) simple-typed values, converts them to their string representations according to the XML schema definition language (XSD) data type conversion rules, and writes them out by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> método acepta valores de tipo simple de common language runtime (CLR), convierte en sus representaciones de cadena según las reglas de conversión XML schema definition language (XSD) datos tipo y los escribe horizontal mediante el uso de la <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>This enables you to pipeline simple-type values with minimal reparsing overhead when passing data between <ph id="ph1">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>, and <ph id="ph3">&lt;xref:System.Xml.XmlWriter&gt;</ph> objects.</source>
          <target state="translated">Esto le permite canalizar los valores de tipo simple con la mínima sobrecarga análisis cuando se pasan datos entre <ph id="ph1">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>, y <ph id="ph3">&lt;xref:System.Xml.XmlWriter&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>This ability is also useful when dealing with CLR simple-types and an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance.</source>
          <target state="translated">Esta capacidad también es útil cuando se trabaja con tipos simples de CLR y un <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>You can call the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method to write the typed value instead of using the methods in the <ph id="ph2">&lt;xref:System.Xml.XmlConvert&gt;</ph> class to convert the typed data to a string value before writing it out.</source>
          <target state="translated">Puede llamar a la <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> método para escribir el valor con tipo en lugar de utilizar los métodos de la <ph id="ph2">&lt;xref:System.Xml.XmlConvert&gt;</ph> clase para convertir los datos con tipo a un valor de cadena antes de escribirlo.</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For asynchronous operations, convert the return value of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to a string and use the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">Para las operaciones asincrónicas, convertir el valor devuelto de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> a una cadena y use la <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The following table shows the default XSD data types that correspond to CLR types.</source>
          <target state="translated">En la tabla siguiente muestra el valor predeterminado de los tipos de datos XSD que se corresponden con los tipos de CLR.</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>If the CLR object is a list type, such as <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>, or <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>, it is treated as an array of the value type.</source>
          <target state="translated">Si el objeto CLR es un tipo de lista, como <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> o <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>, se trata como una matriz del tipo de valor.</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>CLR type</source>
          <target state="translated">Tipo CLR</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Default XSD data type</source>
          <target state="translated">Tipo de datos XSD predeterminado</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:boolean</source>
          <target state="translated">xsd:boolean</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:integer</source>
          <target state="translated">xsd:integer</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><ph id="ph1">&lt;xref:System.Byte?displayProperty=nameWithType&gt;</ph> array</source>
          <target state="translated">Matriz <ph id="ph1">&lt;xref:System.Byte?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:base64Binary</source>
          <target state="translated">xsd:base64Binary</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:string</source>
          <target state="translated">xsd:string</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:dateTime</source>
          <target state="translated">xsd:dateTime</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:decimal</source>
          <target state="translated">xsd:decimal</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:double</source>
          <target state="translated">xsd:double</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:integer</source>
          <target state="translated">xsd:integer</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:integer</source>
          <target state="translated">xsd:integer</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:integer</source>
          <target state="translated">xsd:integer</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:float</source>
          <target state="translated">xsd:float</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:string</source>
          <target state="translated">xsd:string</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:string</source>
          <target state="translated">xsd:string</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:base64Binary</source>
          <target state="translated">xsd:base64Binary</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>**These types are not CLS-compliant.</source>
          <target state="translated">**Estos tipos no son conformes a CLS.</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>They do not have corresponding <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> methods.</source>
          <target state="translated">No tienen correspondiente <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> is called multiple times in succession, the values are not delimited by a space.</source>
          <target state="translated">Si se llama a <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> varias veces seguidas, los valores no se delimitan por un espacio.</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> between calls to <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to insert white space.</source>
          <target state="translated">Debe llamar a <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> entre las llamadas a <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> para insertar espacios en blanco.</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value to write.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> que se va a escribir.</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>Writes a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value.</source>
          <target state="translated">Escribe un valor <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</source>
          <target state="translated">Este método toma el objeto de common language runtime y convierte el valor de entrada para el tipo de resultado deseado utilizando las reglas de conversión de tipo de datos de esquema XML definición XSD (lenguaje).</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated">Cuando se llama al método <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> convierte el valor en sus representaciones de cadena de acuerdo con las normas de tipos de datos del esquema XML (XSD) y lo escribe utilizando el método <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> is called multiple times in succession, the values are not delimited by a space.</source>
          <target state="translated">Si se llama a <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> varias veces seguidas, los valores no se delimitan por un espacio.</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> between calls to <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to insert white space.</source>
          <target state="translated">Debe llamar a <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> entre las llamadas a <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> para insertar espacios en blanco.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>Pass an array type to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> overload to write out an array of distinct values.</source>
          <target state="translated">Pasar un tipo de matriz para el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> sobrecarga para escribir una matriz de valores distintos.</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>If this method is called on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance that outputs text-only, the typed value is serialized to text.</source>
          <target state="translated">Si se llama a este método en un <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instancia ese salidas de sólo texto, el valor con tipo se serializa en texto.</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>For asynchronous operations, convert the return value of this method to a string and use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">Para las operaciones asincrónicas, convertir el valor devuelto de este método en una cadena y usar el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>An invalid value was specified.</source>
          <target state="translated">Se ha especificado un valor no válido.</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>The <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> value to write.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> que se va a escribir.</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>Writes a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> value.</source>
          <target state="translated">Escribe un valor <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</source>
          <target state="translated">Este método toma el objeto de common language runtime y convierte el valor de entrada para el tipo de resultado deseado utilizando las reglas de conversión de tipo de datos de esquema XML definición XSD (lenguaje).</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated">Cuando se llama al método <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> convierte el valor en sus representaciones de cadena de acuerdo con las normas de tipos de datos del esquema XML (XSD) y lo escribe utilizando el método <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> is called multiple times in succession, the values are not delimited by a space.</source>
          <target state="translated">Si se llama a <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> varias veces seguidas, los valores no se delimitan por un espacio.</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> between calls to <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to insert white space.</source>
          <target state="translated">Debe llamar a <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> entre las llamadas a <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> para insertar espacios en blanco.</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>Pass an array type to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> overload to write out an array of distinct values.</source>
          <target state="translated">Pasar un tipo de matriz para el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> sobrecarga para escribir una matriz de valores distintos.</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>If this method is called on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance that outputs text-only, the typed value is serialized to text.</source>
          <target state="translated">Si se llama a este método en un <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instancia ese salidas de sólo texto, el valor con tipo se serializa en texto.</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>For asynchronous operations, convert the return value of this method to a string and use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">Para las operaciones asincrónicas, convertir el valor devuelto de este método en una cadena y usar el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>The following example writes a book node using typed data.</source>
          <target state="translated">En el ejemplo siguiente se escribe un nodo de libro mediante datos con tipo.</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>An invalid value was specified.</source>
          <target state="translated">Se ha especificado un valor no válido.</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)">
          <source>The <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> value to write.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> que se va a escribir.</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)">
          <source>Writes a <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> value.</source>
          <target state="translated">Escribe un valor <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)">
          <source>For asynchronous operations, convert the return value of this method to a string and use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">Para las operaciones asincrónicas, convertir el valor devuelto de este método en una cadena y usar el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value to write.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> que se va a escribir.</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>Writes a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">Escribe un valor <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</source>
          <target state="translated">Este método toma el objeto de common language runtime y convierte el valor de entrada para el tipo de resultado deseado utilizando las reglas de conversión de tipo de datos de esquema XML definición XSD (lenguaje).</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated">Cuando se llama al método <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> convierte el valor en sus representaciones de cadena de acuerdo con las normas de tipos de datos del esquema XML (XSD) y lo escribe utilizando el método <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> is called multiple times in succession, the values are not delimited by a space.</source>
          <target state="translated">Si se llama a <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> varias veces seguidas, los valores no se delimitan por un espacio.</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> between calls to <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to insert white space.</source>
          <target state="translated">Debe llamar a <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> entre las llamadas a <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> para insertar espacios en blanco.</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>Pass an array type to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> overload to write out an array of distinct values.</source>
          <target state="translated">Pasar un tipo de matriz para el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> sobrecarga para escribir una matriz de valores distintos.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>If this method is called on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance that outputs text-only, the typed value is serialized to text.</source>
          <target state="translated">Si se llama a este método en un <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instancia ese salidas de sólo texto, el valor con tipo se serializa en texto.</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>For asynchronous operations, convert the return value of this method to a string and use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">Para las operaciones asincrónicas, convertir el valor devuelto de este método en una cadena y usar el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>An invalid value was specified.</source>
          <target state="translated">Se ha especificado un valor no válido.</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value to write.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> que se va a escribir.</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>Writes a <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">Escribe un valor <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</source>
          <target state="translated">Este método toma el objeto de common language runtime y convierte el valor de entrada para el tipo de resultado deseado utilizando las reglas de conversión de tipo de datos de esquema XML definición XSD (lenguaje).</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated">Cuando se llama al método <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> convierte el valor en sus representaciones de cadena de acuerdo con las normas de tipos de datos del esquema XML (XSD) y lo escribe utilizando el método <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> is called multiple times in succession, the values are not delimited by a space.</source>
          <target state="translated">Si se llama a <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> varias veces seguidas, los valores no se delimitan por un espacio.</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> between calls to <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to insert white space.</source>
          <target state="translated">Debe llamar a <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> entre las llamadas a <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> para insertar espacios en blanco.</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>Pass an array type to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> overload to write out an array of distinct values.</source>
          <target state="translated">Pasar un tipo de matriz para el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> sobrecarga para escribir una matriz de valores distintos.</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>If this method is called on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance that outputs text-only, the typed value is serialized to text.</source>
          <target state="translated">Si se llama a este método en un <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instancia ese salidas de sólo texto, el valor con tipo se serializa en texto.</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>For asynchronous operations, convert the return value of this method to a string and use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">Para las operaciones asincrónicas, convertir el valor devuelto de este método en una cadena y usar el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>The following example writes a book node using typed data.</source>
          <target state="translated">En el ejemplo siguiente se escribe un nodo de libro mediante datos con tipo.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>An invalid value was specified.</source>
          <target state="translated">Se ha especificado un valor no válido.</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value to write.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> que se va a escribir.</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>Writes a <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value.</source>
          <target state="translated">Escribe un valor <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</source>
          <target state="translated">Este método toma el objeto de common language runtime y convierte el valor de entrada para el tipo de resultado deseado utilizando las reglas de conversión de tipo de datos de esquema XML definición XSD (lenguaje).</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated">Cuando se llama al método <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> convierte el valor en sus representaciones de cadena de acuerdo con las normas de tipos de datos del esquema XML (XSD) y lo escribe utilizando el método <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> is called multiple times in succession, the values are not delimited by a space.</source>
          <target state="translated">Si se llama a <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> varias veces seguidas, los valores no se delimitan por un espacio.</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> between calls to <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to insert white space.</source>
          <target state="translated">Debe llamar a <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> entre las llamadas a <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> para insertar espacios en blanco.</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>Pass an array type to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> overload to write out an array of distinct values.</source>
          <target state="translated">Pasar un tipo de matriz para el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> sobrecarga para escribir una matriz de valores distintos.</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>If this method is called on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance that outputs text-only, the typed value is serialized to text.</source>
          <target state="translated">Si se llama a este método en un <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instancia ese salidas de sólo texto, el valor con tipo se serializa en texto.</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>For asynchronous operations, convert the return value of this method to a string and use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">Para las operaciones asincrónicas, convertir el valor devuelto de este método en una cadena y usar el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>An invalid value was specified.</source>
          <target state="translated">Se ha especificado un valor no válido.</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> value to write.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> que se va a escribir.</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>Writes a <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> value.</source>
          <target state="translated">Escribe un valor <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</source>
          <target state="translated">Este método toma el objeto de common language runtime y convierte el valor de entrada para el tipo de resultado deseado utilizando las reglas de conversión de tipo de datos de esquema XML definición XSD (lenguaje).</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated">Cuando se llama al método <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> convierte el valor en sus representaciones de cadena de acuerdo con las normas de tipos de datos del esquema XML (XSD) y lo escribe utilizando el método <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> is called multiple times in succession, the values are not delimited by a space.</source>
          <target state="translated">Si se llama a <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> varias veces seguidas, los valores no se delimitan por un espacio.</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> between calls to <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to insert white space.</source>
          <target state="translated">Debe llamar a <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> entre las llamadas a <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> para insertar espacios en blanco.</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>Pass an array type to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> overload to write out an array of distinct values.</source>
          <target state="translated">Pasar un tipo de matriz para el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> sobrecarga para escribir una matriz de valores distintos.</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>If this method is called on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance that outputs text-only, the typed value is serialized to text.</source>
          <target state="translated">Si se llama a este método en un <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instancia ese salidas de sólo texto, el valor con tipo se serializa en texto.</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>For asynchronous operations, convert the return value of this method to a string and use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">Para las operaciones asincrónicas, convertir el valor devuelto de este método en una cadena y usar el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>An invalid value was specified.</source>
          <target state="translated">Se ha especificado un valor no válido.</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>The object value to write.</source>
          <target state="translated">Valor del objeto que se va a escribir.</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> With the release of the .NET Framework 3.5, this method accepts <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> as a parameter.</source>
          <target state="translated"><bpt id="p1">**</bpt>Nota<ept id="p1">**</ept> Con el lanzamiento de .NET Framework 3.5, este método acepta <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> como parámetro.</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>Writes the object value.</source>
          <target state="translated">Escribe el valor del objeto.</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>This method takes the common language runtime (CLR) object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</source>
          <target state="translated">Este método toma el objeto de common language runtime (CLR) y convierte el valor de entrada para el tipo de resultado deseado utilizando las reglas de conversión de tipo de datos de esquema XML definición XSD (lenguaje).</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>If the CLR object is a list type such as <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>, or <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>, it is treated as an array of the value type.</source>
          <target state="translated">Si el objeto CLR es un tipo de lista como <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>, o <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>, se trata como una matriz del tipo de valor.</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> convierte el valor en sus representaciones de cadena según el tipo de datos de esquemas XML (XSD) de reglas y lo escribe utilizando el <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>If this method is called on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance that outputs text-only, the typed value is serialized to text.</source>
          <target state="translated">Si se llama a este método en un <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instancia ese salidas de sólo texto, el valor con tipo se serializa en texto.</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>For asynchronous operations, convert the return value of this method to a string and use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">Para las operaciones asincrónicas, convertir el valor devuelto de este método en una cadena y usar el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>An invalid value was specified.</source>
          <target state="translated">Se ha especificado un valor no válido.</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;paramref name="value" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>The single-precision floating-point number to write.</source>
          <target state="translated">El número de punto flotante de precisión sencilla que se va a escribir.</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>Writes a single-precision floating-point number.</source>
          <target state="translated">Escribe un número de punto flotante de precisión sencilla.</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</source>
          <target state="translated">Este método toma el objeto de common language runtime y convierte el valor de entrada para el tipo de resultado deseado utilizando las reglas de conversión de tipo de datos de esquema XML definición XSD (lenguaje).</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated">Cuando se llama al método <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> convierte el valor en sus representaciones de cadena de acuerdo con las normas de tipos de datos del esquema XML (XSD) y lo escribe utilizando el método <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> is called multiple times in succession, the values are not delimited by a space.</source>
          <target state="translated">Si se llama a <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> varias veces seguidas, los valores no se delimitan por un espacio.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> between calls to <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to insert white space.</source>
          <target state="translated">Debe llamar a <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> entre las llamadas a <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> para insertar espacios en blanco.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>Pass an array type to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> overload to write out an array of distinct values.</source>
          <target state="translated">Pasar un tipo de matriz para el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> sobrecarga para escribir una matriz de valores distintos.</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>If this method is called on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance that outputs text-only, the typed value is serialized to text.</source>
          <target state="translated">Si se llama a este método en un <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instancia ese salidas de sólo texto, el valor con tipo se serializa en texto.</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>For asynchronous operations, convert the return value of this method to a string and use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">Para las operaciones asincrónicas, convertir el valor devuelto de este método en una cadena y usar el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>An invalid value was specified.</source>
          <target state="translated">Se ha especificado un valor no válido.</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> value to write.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que se va a escribir.</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>Writes a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> value.</source>
          <target state="translated">Escribe un valor <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</source>
          <target state="translated">Este método toma el objeto de common language runtime y convierte el valor de entrada para el tipo de resultado deseado utilizando las reglas de conversión de tipo de datos de esquema XML definición XSD (lenguaje).</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> is called multiple times in succession, the values are not delimited by a space.</source>
          <target state="translated">Si se llama a <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> varias veces seguidas, los valores no se delimitan por un espacio.</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> between calls to <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to insert white space.</source>
          <target state="translated">Debe llamar a <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> entre las llamadas a <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> para insertar espacios en blanco.</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>Pass an array type to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> overload to write out an array of distinct values.</source>
          <target state="translated">Pasar un tipo de matriz para el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> sobrecarga para escribir una matriz de valores distintos.</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>If this method is called on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance that outputs text-only, the typed value is serialized to text.</source>
          <target state="translated">Si se llama a este método en un <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instancia ese salidas de sólo texto, el valor con tipo se serializa en texto.</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>For asynchronous operations, use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">Para las operaciones asincrónicas, use el <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>An invalid value was specified.</source>
          <target state="translated">Se ha especificado un valor no válido.</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
          <source>The string of white space characters.</source>
          <target state="translated">Cadena de caracteres de espacio en blanco.</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
          <source>When overridden in a derived class, writes out the given white space.</source>
          <target state="translated">Cuando se invalida en una clase derivada, escribe el espacio en blanco especificado.</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
          <source>This method is used to manually format your document.</source>
          <target state="translated">Este método se usa para dar formato manualmente el documento.</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespaceAsync%2A&gt;</ph>.</source>
          <target state="translated">Para obtener la versión asincrónica de este método, consulte <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespaceAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
          <source>The string contains non-white space characters.</source>
          <target state="translated">La cadena no contiene caracteres de espacio en blanco.</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
          <source>The string of white space characters.</source>
          <target state="translated">Cadena de caracteres de espacio en blanco.</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
          <source>Asynchronously writes out the given white space.</source>
          <target state="translated">Escribe asincrónicamente el espacio en blanco especificado.</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteWhitespace" /&gt;</ph> operation.</source>
          <target state="translated">Tarea que representa la operación <ph id="ph1">&lt;see langword="WriteWhitespace" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">Esta es la versión asincrónica de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph>, con la misma funcionalidad.</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para usar este método, debe establecer el <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> indicador en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se llamó un método asincrónico de <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> sin establecer la marca <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> en <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">En este caso, se produce una <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.XmlLang">
          <source>When overridden in a derived class, gets the current <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> scope.</source>
          <target state="translated">Cuando se invalida en una clase derivada, obtiene el ámbito de <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlLang">
          <source>The current <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> scope.</source>
          <target state="translated">Ámbito de <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlLang">
          <source>This property allows one component to find out in what state another component has left the writer.</source>
          <target state="translated">Esta propiedad permite a un componente averiguar el estado en que otro componente ha dejado el sistema de escritura.</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlLang">
          <source>For example, perhaps one component wants to tell another which language help text to generate.</source>
          <target state="translated">Por ejemplo, quizás un componente desee comunicar a otro qué texto de Ayuda de lenguaje para generar.</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlLang">
          <source>The language information is communicated by writing an <ph id="ph1">`xml:lang`</ph> attribute.</source>
          <target state="translated">La información de idioma se comunica escribiendo un <ph id="ph1">`xml:lang`</ph> atributo.</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.XmlLang">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.XmlLang">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source>When overridden in a derived class, gets an <ph id="ph1">&lt;see cref="T:System.Xml.XmlSpace" /&gt;</ph> representing the current <ph id="ph2">&lt;see langword="xml:space" /&gt;</ph> scope.</source>
          <target state="translated">Cuando se invalida en una clase derivada, se obtiene un <ph id="ph1">&lt;see cref="T:System.Xml.XmlSpace" /&gt;</ph> que representa el ámbito de <ph id="ph2">&lt;see langword="xml:space" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source>An <ph id="ph1">&lt;see langword="XmlSpace" /&gt;</ph> representing the current <ph id="ph2">&lt;see langword="xml:space" /&gt;</ph> scope.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlSpace" /&gt;</ph> que representa el ámbito de <ph id="ph2">&lt;see langword="xml:space" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valor</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Significado</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="None" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> This is the default if no <ph id="ph6">&lt;see langword="xml:space" /&gt;</ph> scope exists.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="None" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> Este es el valor predeterminado si no hay ningún <ph id="ph6">&lt;see langword="xml:space" /&gt;</ph> ámbito existe.</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Default" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The current scope is <ph id="ph6">&lt;see langword="xml:space" /&gt;</ph>="default".</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Default" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> El ámbito actual es <ph id="ph6">&lt;see langword="xml:space" /&gt;</ph>= "default".</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Preserve" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The current scope is <ph id="ph6">&lt;see langword="xml:space" /&gt;</ph>="preserve".</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Preserve" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> El ámbito actual es <ph id="ph6">&lt;see langword="xml:space" /&gt;</ph>= "preserve".</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source>This allows one component to find out what state another component has left the writer in.</source>
          <target state="translated">Esto permite que un componente averiguar el estado de otro componente ha dejado el sistema de escritura.</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">Se llamó un método <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> antes de que se termine una operación asincrónica anterior.</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">En este caso, se genera <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> con el mensaje “Ya hay una operación asincrónica en curso”.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>