<Type Name="XmlNodeReader" FullName="System.Xml.XmlNodeReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ab2104775ed2c8b474493654fb02bbd656d9dbf2" /><Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/01/2018" /><Meta Name="ms.locfileid" Value="52736390" /></Metadata><TypeSignature Language="C#" Value="public class XmlNodeReader : System.Xml.XmlReader, System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlNodeReader extends System.Xml.XmlReader implements class System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlNodeReader" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlNodeReader&#xA;Inherits XmlReader&#xA;Implements IXmlNamespaceResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNodeReader : System::Xml::XmlReader, System::Xml::IXmlNamespaceResolver" />
  <TypeSignature Language="F#" Value="type XmlNodeReader = class&#xA;    inherit XmlReader&#xA;    interface IXmlNamespaceResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlReader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xml.IXmlNamespaceResolver</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Representa un lector que proporciona acceso rápido, sin almacenamiento en caché y con desplazamiento sólo hacia delante, a los datos XML de un objeto <see cref="T:System.Xml.XmlNode" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En lugar de usar el <xref:System.Xml.XmlNodeReader>, le recomendamos que cree <xref:System.Xml.XmlReader> instancias utilizando el <xref:System.Xml.XmlReaderSettings> clase y el <xref:System.Xml.XmlReader.Create%2A> método. Esto le permite aprovechar las ventajas de la comprobación del cumplimiento y el cumplimiento de la recomendación XML 1.0.  
  
 El `XmlNodeReader` tiene la capacidad de leer un subárbol DOM XML. Esta clase no es compatible con la definición de tipo de documento (DTD) o la validación del esquema. Sin embargo, puede crear un <xref:System.Xml.XmlReader> objeto que envuelve el <xref:System.Xml.XmlNodeReader> objeto para validar los datos almacenados en el <xref:System.Xml.XmlNodeReader> de objeto, como se muestra en la sección ejemplos.  
  
   
  
## Examples  
 En el siguiente ejemplo se carga y se modifica un archivo XML en un documento XML. El documento XML se pasa a un <xref:System.Xml.XmlNodeReader>, que luego se pasa al método <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>. Cuando el sistema de lectura de validación analiza el archivo, puede validar cualquier cambio realizado en el archivo XML.  
  
 [!code-csharp[XmlReader_Validate_DOM#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Validate_DOM/CS/valid_dom.cs#1)]
 [!code-vb[XmlReader_Validate_DOM#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Validate_DOM/VB/valid_dom.vb#1)]  
  
## <a name="input"></a>Entrada  
 Los siguientes archivos se utilizan como entrada.  
  
#### <a name="bookschemaxml"></a>bookSchema.xml  
 [!code-xml[XML_Core_Files#8](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/booksschema.xml#8)]  
  
#### <a name="booksxsd"></a>books.xsd  
 [!code-xml[XML_Core_Files#9](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/books.xsd#9)]  
  
## <a name="output"></a>Resultado  
 Error de validación: no se ha declarado el atributo 'publisher'.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlNodeReader (System.Xml.XmlNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.#ctor(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (node As XmlNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlNodeReader(System::Xml::XmlNode ^ node);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlNodeReader : System.Xml.XmlNode -&gt; System.Xml.XmlNodeReader" Usage="new System.Xml.XmlNodeReader node" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="node"><see langword="XmlNode" /> que se desea leer.</param>
        <summary>Crea una instancia de la clase <see langword="XmlNodeReader" /> mediante el objeto <see cref="T:System.Xml.XmlNode" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 Para obtener más información y ejemplos del código utilizado para crear un `XmlNodeReader`, consulte <xref:System.Xml.XmlReader> y sobrecarga de la <xref:System.Xml.XmlReader.Create%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeCount">
      <MemberSignature Language="C#" Value="public override int AttributeCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AttributeCount" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.AttributeCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AttributeCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int AttributeCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeCount : int" Usage="System.Xml.XmlNodeReader.AttributeCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número de atributos del nodo actual.</summary>
        <value>Número de atributos del nodo actual. Este número incluye los atributos predeterminados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 Esta propiedad es relevante para `Element`, `DocumentType` y `XmlDeclaration` sólo los nodos. (Otros tipos de nodos no tienen atributos).  
  
   
  
## Examples  
 El ejemplo siguiente lee todos los atributos en el nodo raíz.  
  
 [!code-cpp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public override string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XmlNodeReader.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el identificador URI base del nodo actual.</summary>
        <value>Identificador URI base del nodo actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 Un documento XML en red se compone de fragmentos de datos agregados mediante varios mecanismos de inclusión estándar de W3C y, por tanto, contiene nodos que proceden de distintos lugares. Las entidades DTD son un ejemplo de esto, pero esto no se limita a las DTD. La base de URI explica procedencia de estos nodos. Si no hay ningún URI base para los nodos que se devuelven (por ejemplo, han analizado desde una cadena en memoria), se devuelve String.Empty.  
  
   
  
## Examples  
 El ejemplo siguiente analiza un archivo y muestra el identificador URI base de cada uno de los nodos.  
  
 [!code-cpp[Classic WebData XmlNodeReader.BaseURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.BaseURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.BaseURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.BaseURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.BaseURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.BaseURI Example/VB/source.vb#1)]  
  
 En el ejemplo se utiliza el archivo `uri.xml`como entrada.  
  
 [!code-xml[Classic WebData XmlNodeReader.BaseURI Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNodeReader.BaseURI Example/XML/source.xml#2)]  
  
 El `style.xml` archivo contiene el texto XML `<style>hardcover</style>`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadBinaryContent">
      <MemberSignature Language="C#" Value="public override bool CanReadBinaryContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReadBinaryContent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.CanReadBinaryContent" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanReadBinaryContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReadBinaryContent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReadBinaryContent : bool" Usage="System.Xml.XmlNodeReader.CanReadBinaryContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si <see cref="T:System.Xml.XmlNodeReader" /> implementa los métodos de lectura de contenido binario.</summary>
        <value>Es <see langword="true" /> si se implementan los métodos de lectura de contenido binario; en caso contrario, es <see langword="false" />. La clase <see cref="T:System.Xml.XmlNodeReader" /> siempre devuelve <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 Lectura de contenido binario métodos incluyen la <xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A>, <xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A>, <xref:System.Xml.XmlNodeReader.ReadElementContentAsBase64%2A>, y <xref:System.Xml.XmlNodeReader.ReadElementContentAsBinHex%2A> métodos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanResolveEntity">
      <MemberSignature Language="C#" Value="public override bool CanResolveEntity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanResolveEntity" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.CanResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanResolveEntity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanResolveEntity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanResolveEntity : bool" Usage="System.Xml.XmlNodeReader.CanResolveEntity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si este lector puede analizar y resolver entidades.</summary>
        <value>Es <see langword="true" /> si el lector puede analizar y resolver entidades; en caso contrario, es <see langword="false" />. <see langword="XmlNodeReader" /> siempre devuelve <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlNodeReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cambia la propiedad <see cref="P:System.Xml.XmlNodeReader.ReadState" /> a <see langword="Closed" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 Este método también libera los recursos utilizados durante la lectura. Si `Close` ya ha sido no llamado, se realiza ninguna acción.  
  
   
  
## Examples  
 El ejemplo siguiente analiza un archivo y cierra el lector.  
  
 [!code-cpp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/VB/source.vb#1)]  
  
 En el ejemplo se utiliza el archivo `items.xml`como entrada.  
  
 [!code-xml[Classic WebData XmlNodeReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Xml.XmlNodeReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la profundidad del nodo actual en el documento XML.</summary>
        <value>Profundidad del nodo actual en el documento XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public override bool EOF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EOF" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.EOF" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EOF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EOF { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EOF : bool" Usage="System.Xml.XmlNodeReader.EOF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el lector está situado al final del flujo.</summary>
        <value>Es <see langword="true" /> si el lector está situado al final del flujo; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene el valor de un atributo.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (int attributeIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(int32 attributeIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.GetAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (attributeIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(int attributeIndex);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : int -&gt; string" Usage="xmlNodeReader.GetAttribute attributeIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="attributeIndex">Índice del atributo. El índice está basado en cero. El primer atributo tiene índice 0.</param>
        <summary>Obtiene el valor del atributo con el índice especificado.</summary>
        <returns>Valor del atributo especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 Este método no desplaza el lector.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="i" /> es menor que cero o mayor o igual que <see cref="P:System.Xml.XmlNodeReader.AttributeCount" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : string -&gt; string" Usage="xmlNodeReader.GetAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre completo del atributo.</param>
        <summary>Obtiene el valor del atributo con el nombre especificado.</summary>
        <returns>Valor del atributo especificado. Si no se encuentra el atributo, se devuelve <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 Este método no desplaza el lector.  
  
 Si el lector está situado en un `DocumentType` nodo, este método puede usarse para obtener los literales PUBLIC y SYSTEM, por ejemplo, `reader.GetAttribute("PUBLIC")`  
  
   
  
## Examples  
 El ejemplo siguiente obtiene el valor del atributo ISBN.  
  
 [!code-cpp[Classic WebData XmlNodeReader.GetAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.GetAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.GetAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.GetAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.GetAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.GetAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string name, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (name As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ name, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : string * string -&gt; string" Usage="xmlNodeReader.GetAttribute (name, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre local del atributo.</param>
        <param name="namespaceURI">URI de espacio de nombres del atributo.</param>
        <summary>Obtiene el valor del atributo con el nombre local y el identificador URI de espacio de nombres que se hayan especificado.</summary>
        <returns>Valor del atributo especificado. Si no se encuentra el atributo, se devuelve <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 El siguiente código XML contiene un atributo en un espacio de nombres específico:  
  
```xml  
<test xmlns:dt="urn:datatypes" dt:type="int"/>  
```  
  
 Para buscar el `dt:type` atributo mediante un argumento (prefijo y nombre local) o dos argumentos (nombre local y URI de espacio de nombres):  
  
```csharp  
String dt = reader.GetAttribute("dt:type");  
String dt2 = reader.GetAttribute("type","urn:datatypes");  
```  
  
 Para buscar el `xmlns:dt` atributo, utilice uno de los argumentos siguientes:  
  
```csharp  
String dt3 = reader.GetAttribute("xmlns:dt");  
String dt4 = reader.GetAttribute("dt",http://www.w3.org/2000/xmlns/);  
```  
  
 También puede obtener esta información mediante el <xref:System.Xml.XmlNodeReader.Prefix%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAttributes">
      <MemberSignature Language="C#" Value="public override bool HasAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.HasAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasAttributes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAttributes : bool" Usage="System.Xml.XmlNodeReader.HasAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el nodo actual tiene algún atributo.</summary>
        <value><see langword="true" /> si el nodo actual tiene atributos; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
   
  
## Examples  
 El ejemplo siguiente lee todos los atributos en el nodo raíz.  
  
 [!code-cpp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public override bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="System.Xml.XmlNodeReader.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el nodo actual puede tener una propiedad <see cref="P:System.Xml.XmlNodeReader.Value" />.</summary>
        <value>Es <see langword="true" /> si el nodo en el que está situado actualmente el lector puede tener un <see langword="Value" />; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 En la siguiente tabla se recogen los tipos de nodo que tienen un valor para devolver.  
  
|Tipo de nodo|Valor|  
|---------------|-----------|  
|`Attribute`|El valor del atributo.|  
|`CDATA`|Contenido de la sección CDATA.|  
|`Comment`|El contenido del comentario.|  
|`DocumentType`|El subconjunto interno.|  
|`ProcessingInstruction`|El contenido completo, sin incluir el destino.|  
|`SignificantWhitespace`|Espacio en blanco entre marcas en un modelo de contenido mixto.|  
|`Text`|El contenido del nodo de texto.|  
|`Whitespace`|El espacio en blanco entre marcado.|  
|`XmlDeclaration`|El contenido de la declaración.|  
  
   
  
## Examples  
 El ejemplo siguiente muestra el valor para todos los nodos que pueden tener un valor.  
  
 [!code-cpp[Classic WebData XmlNodeReader.HasValue Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.HasValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.HasValue Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.HasValue Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.HasValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.HasValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public override bool IsDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDefault { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDefault : bool" Usage="System.Xml.XmlNodeReader.IsDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el nodo actual es un atributo generado a partir del valor predeterminado definido en la definición de tipo de documento (DTD) o en el esquema.</summary>
        <value>Es <see langword="true" /> si el nodo actual es un atributo cuyo valor fue generado a partir del valor predeterminado definido en la DTD o el esquema; es <see langword="false" /> si el valor de atributo se estableció explícitamente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 Esta propiedad se aplica a solo los nodos de atributo. Si el lector no está situado en un nodo de atributo, esta propiedad devuelve `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmptyElement">
      <MemberSignature Language="C#" Value="public override bool IsEmptyElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.IsEmptyElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEmptyElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmptyElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmptyElement : bool" Usage="System.Xml.XmlNodeReader.IsEmptyElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el nodo actual es un elemento vacío (por ejemplo, <c>&lt;MyElement/&gt;</c>).</summary>
        <value><see langword="true" /> Si el nodo actual es un elemento (<see cref="P:System.Xml.XmlNodeReader.NodeType" /> es igual a <see langword="XmlNodeType.Element" />) y termina en <c>/ &gt;</c>; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 Esta propiedad le permite determinar la diferencia entre lo siguiente:  
  
 `<item num="123"/>` (`IsEmptyElement` es `true`).  
  
 `<item num="123">` (`IsEmptyElement` es `false`, aunque el contenido del elemento está vacío).  
  
 Correspondiente `EndElement` nodo no se genera para elementos vacíos.  
  
   
  
## Examples  
 El ejemplo siguiente muestra el contenido de texto de cada elemento.  
  
 [!code-cpp[Classic WebData XmlNodeReader.IsEmptyElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.IsEmptyElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.IsEmptyElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.IsEmptyElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.IsEmptyElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.IsEmptyElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override string this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[int] { System::String ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : string" Usage="System.Xml.XmlNodeReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Índice del atributo.</param>
        <summary>Obtiene el valor del atributo con el índice especificado.</summary>
        <value>Valor del atributo especificado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
> En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.

Esta propiedad no mueve el lector.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="i" /> es menor que cero o mayor o igual que <see cref="P:System.Xml.XmlNodeReader.AttributeCount" />.</exception>
        <altmember cref="Overload:System.Xml.XmlNodeReader.GetAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override string this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string" Usage="System.Xml.XmlNodeReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre completo del atributo.</param>
        <summary>Obtiene el valor del atributo con el nombre especificado.</summary>
        <value>Valor del atributo especificado. Si no se encuentra el atributo, se devuelve <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
> En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.

Esta propiedad no mueve el lector.

Si el lector se coloca en un nodo DocumentType, este método puede utilizarse para obtener los literales PUBLIC y SYSTEM, por ejemplo, lector\["PUBLIC"\].

## Examples  
El ejemplo siguiente obtiene el valor del atributo ISBN.

```vb
Imports System
Imports System.IO
Imports System.Xml

Public Class Sample

    Public Shared Sub Main()
        Dim reader As XmlNodeReader = Nothing
        Try
            'Create and load the XML document.
            Dim doc As New XmlDocument()
            doc.LoadXml("<book genre='novel' ISBN='1-861003-78' publicationdate='1987'>" & _
                        "</book>")

            ' Load the XmlNodeReader 
            reader = New XmlNodeReader(doc)

            'Read the ISBN attribute.
            reader.MoveToContent()
            Dim isbn As String = reader("ISBN")
            Console.WriteLine("The ISBN value: " & isbn)
        Finally
            If Not (reader Is Nothing) Then
                reader.Close()
            End If
        End Try
    End Sub 'Main 
End Class 'Sample
```

```csharp
using System;
using System.IO;
using System.Xml;

public class Sample 
{
  public static void Main()
  {
    XmlNodeReader reader = null;

    try
    {
       //Create and load the XML document.
       XmlDocument doc = new XmlDocument();
       doc.LoadXml("<book genre='novel' ISBN='1-861003-78' publicationdate='1987'> " +
                   "</book>"); 

       // Load the XmlNodeReader 
       reader = new XmlNodeReader(doc);

       //Read the ISBN attribute.
       reader.MoveToContent();
       string isbn =reader["ISBN"];
       Console.WriteLine("The ISBN value: " + isbn);

     } 

     finally 
     {
        if (reader != null)
          reader.Close();
      }
  }

} // End class
```

```cpp
#using <System.Xml.dll>

using namespace System;
using namespace System::IO;
using namespace System::Xml;

int main()
{
   XmlNodeReader^ reader = nullptr;
   try
   {

      //Create and load the XML document.
      XmlDocument^ doc = gcnew XmlDocument;
      doc->LoadXml( "<book genre='novel' ISBN='1-861003-78' publicationdate='1987'></book>" );

      // Load the XmlNodeReader 
      reader = gcnew XmlNodeReader( doc );

      //Read the ISBN attribute.
      reader->MoveToContent();
      String^ isbn = reader[ "ISBN" ];
      Console::WriteLine( "The ISBN value: {0}", isbn );
   }
   finally
   {
      if ( reader != nullptr )
            reader->Close();
   }
}
```

]]></format>
        </remarks>
        <altmember cref="Overload:System.Xml.XmlNodeReader.GetAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override string this[string name, string namespaceURI] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.Item(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^, System::String ^] { System::String ^ get(System::String ^ name, System::String ^ namespaceURI); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * string) : string" Usage="System.Xml.XmlNodeReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre local del atributo.</param>
        <param name="namespaceURI">URI de espacio de nombres del atributo.</param>
        <summary>Obtiene el valor del atributo con el nombre local y el identificador URI de espacio de nombres que se hayan especificado.</summary>
        <value>Valor del atributo especificado. Si no se encuentra el atributo, se devuelve <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
> En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.

Esta propiedad no mueve el lector.

]]></format>
        </remarks>
        <altmember cref="Overload:System.Xml.XmlNodeReader.GetAttribute" />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlNodeReader.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre local del nodo actual.</summary>
        <value>Nombre del nodo actual sin prefijo. Por ejemplo, <see langword="LocalName" /> es <see langword="book" /> para el elemento <c>&lt;bk: book&gt;</c>.  
  
Para los tipos de nodo sin nombre (por ejemplo, <see langword="Text" />, <see langword="Comment" />, etc.), esta propiedad devuelve String.Empty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
   
  
## Examples  
 El ejemplo siguiente muestra el nombre local de cada nodo, y, si existen, el prefijo y URI de espacio de nombres.  
  
 [!code-cpp[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public override string LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupNamespace (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupNamespace(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="override this.LookupNamespace : string -&gt; string" Usage="xmlNodeReader.LookupNamespace prefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Prefijo cuyo identificador URI de espacio de nombres se desea resolver. Para hacer coincidir el espacio de nombres predeterminado, pase una cadena vacía. Esta cadena no necesita subdividirse.</param>
        <summary>Resuelve un prefijo de espacio de nombres en el ámbito del elemento actual.</summary>
        <returns>Identificador URI de espacio de nombres al que se asigna el prefijo o <see langword="null" /> si no se encuentra ningún prefijo coincidente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 En la siguiente cadena XML, si el lector está situado en la `href` atributo, el prefijo `a` se resuelve mediante una llamada a `reader.LookupNamespace("a")`. La cadena devuelta es `urn:456`.  
  
```xml  
<root xmlns:a="urn:456">  
 <item>  
 <ref href="a:b"/>  
 </item>  
</root>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Se mueve al atributo especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override void MoveToAttribute (int attributeIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void MoveToAttribute(int32 attributeIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.MoveToAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub MoveToAttribute (attributeIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void MoveToAttribute(int attributeIndex);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : int -&gt; unit" Usage="xmlNodeReader.MoveToAttribute attributeIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="attributeIndex">Índice del atributo.</param>
        <summary>Se desplaza hasta el atributo con el índice especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
   
  
## Examples  
 El ejemplo siguiente lee todos los atributos en el nodo raíz.  
  
 [!code-cpp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="i" /> es menor que cero o mayor o igual que <see cref="P:System.Xml.XmlReader.AttributeCount" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : string -&gt; bool" Usage="xmlNodeReader.MoveToAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre completo del atributo.</param>
        <summary>Se desplaza hasta el atributo con el nombre especificado.</summary>
        <returns>Es <see langword="true" /> si se encuentra el atributo; en caso contrario, es <see langword="false" />. Si es <see langword="false" />, no cambia la posición del lector.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 Después de llamar a este método, el <xref:System.Xml.XmlNodeReader.Name%2A>, <xref:System.Xml.XmlNodeReader.NamespaceURI%2A>, y <xref:System.Xml.XmlNodeReader.Prefix%2A> reflejan las propiedades de dicho atributo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string name, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (name As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ name, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : string * string -&gt; bool" Usage="xmlNodeReader.MoveToAttribute (name, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre local del atributo.</param>
        <param name="namespaceURI">URI de espacio de nombres del atributo.</param>
        <summary>Se desplaza hasta el atributo con el nombre local y el URI de espacio de nombres que se hayan especificado.</summary>
        <returns>Es <see langword="true" /> si se encuentra el atributo; en caso contrario, es <see langword="false" />. Si es <see langword="false" />, no cambia la posición del lector.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 Después de llamar a este método, el <xref:System.Xml.XmlNodeReader.Name%2A>, <xref:System.Xml.XmlNodeReader.NamespaceURI%2A>, y <xref:System.Xml.XmlNodeReader.Prefix%2A> reflejan las propiedades de dicho atributo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToElement">
      <MemberSignature Language="C#" Value="public override bool MoveToElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.MoveToElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToElement () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToElement();" />
      <MemberSignature Language="F#" Value="override this.MoveToElement : unit -&gt; bool" Usage="xmlNodeReader.MoveToElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Se desplaza hasta el elemento que contiene el nodo de atributo actual.</summary>
        <returns>Es <see langword="true" /> si el lector está situado en un atributo (el lector se desplaza hasta el elemento que posee el atributo); es <see langword="false" /> si el lector no está situado en un atributo (no cambia la posición del lector).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 Utilice este método para devolver a un elemento después de navegar a través de sus atributos. Este método mueve el lector a uno de los siguientes tipos de nodo: `Element`, `DocumentType`, o `XmlDeclaration`.  
  
   
  
## Examples  
 El ejemplo siguiente lee todos los atributos en el nodo raíz.  
  
 [!code-cpp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToFirstAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToFirstAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.MoveToFirstAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToFirstAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToFirstAttribute();" />
      <MemberSignature Language="F#" Value="override this.MoveToFirstAttribute : unit -&gt; bool" Usage="xmlNodeReader.MoveToFirstAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Se mueve al primer atributo.</summary>
        <returns>Es <see langword="true" /> si existe un atributo (el lector se desplaza hasta el primer atributo); en caso contrario, es <see langword="false" /> (no cambia la posición del lector).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite aprovechar al máximo todas las nuevas características introducidas en la [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
   
  
## Examples  
 El ejemplo siguiente obtiene el valor del primer atributo del nodo raíz.  
  
 [!code-cpp[Classic WebData XmlNodeReader.MoveToFirstAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.MoveToFirstAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.MoveToFirstAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.MoveToFirstAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.MoveToFirstAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.MoveToFirstAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToNextAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToNextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToNextAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.MoveToNextAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToNextAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToNextAttribute();" />
      <MemberSignature Language="F#" Value="override this.MoveToNextAttribute : unit -&gt; bool" Usage="xmlNodeReader.MoveToNextAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Se mueve al siguiente atributo.</summary>
        <returns>Es <see langword="true" /> si hay siguiente atributo; es <see langword="false" /> si no hay más atributos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 Si el nodo actual no es un nodo de atributo, este método es equivalente a <xref:System.Xml.XmlNodeReader.MoveToFirstAttribute%2A>. Si `MoveToNextAttribute` devuelve `true`, el lector se desplaza hasta el siguiente atributo; en caso contrario, no cambia la posición del lector.  
  
   
  
## Examples  
 El ejemplo siguiente lee un libro.  
  
 [!code-cpp[Classic WebData XmlNodeReader.MoveToNextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.MoveToNextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.MoveToNextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.MoveToNextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.MoveToNextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.MoveToNextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlNodeReader.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre completo del nodo actual.</summary>
        <value>Nombre completo del nodo actual. Por ejemplo, <see langword="Name" /> es <see langword="bk:book" /> para el elemento <c>&lt;bk: book&gt;</c>.  
  
El nombre devuelto depende de la propiedad <see cref="P:System.Xml.XmlNodeReader.NodeType" /> del nodo:  Los siguientes tipos de nodo devuelven los valores que figuran en la lista. Todos los demás tipos de nodo devuelven una cadena vacía.  
  
 <list type="table"><listheader><term> Tipo de nodo 
 </term><description> Name 
 </description></listheader><item><term><see langword="Attribute" /></term><description> El nombre del atributo.  
  
 </description></item><item><term><see langword="DocumentType" /></term><description> Nombre del tipo de documento.  
  
 </description></item><item><term><see langword="Element" /></term><description> Nombre de la etiqueta.  
  
 </description></item><item><term><see langword="EntityReference" /></term><description> Nombre de la entidad a la que se hace referencia.  
  
 </description></item><item><term><see langword="ProcessingInstruction" /></term><description> Destino de la instrucción de procesamiento.  
  
 </description></item><item><term><see langword="XmlDeclaration" /></term><description> Cadena literal <see langword="xml" />.  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
   
  
## Examples  
 El ejemplo siguiente lee un archivo XML y muestra cada uno de los nodos.  
  
 [!code-cpp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/VB/source.vb#1)]  
  
 En el ejemplo se utiliza el archivo `items.xml`como entrada.  
  
 [!code-xml[Classic WebData XmlNodeReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public override string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceURI : string" Usage="System.Xml.XmlNodeReader.NamespaceURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el URI de espacio de nombres (según se define en la especificación relativa a espacios de nombres del Consorcio W3C) del nodo en el que está situado el lector.</summary>
        <value>URI de espacio de nombres del nodo actual; en caso contrario, una cadena vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 Esta propiedad es relevante para `Element` y `Attribute` sólo los nodos.  
  
   
  
## Examples  
 El ejemplo siguiente muestra el nombre local de cada nodo, y, si existen, el prefijo y URI de espacio de nombres.  
  
 [!code-cpp[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable" Usage="System.Xml.XmlNodeReader.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el <see cref="T:System.Xml.XmlNameTable" /> asociado a esta implementación.</summary>
        <value><see langword="XmlNameTable" /> que permite obtener la versión subdividida de una cadena en el nodo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 Todos los nombres de nodo y atributo devueltos de esta clase se subdividen mediante el `NameTable`. Cuando se devuelve varias veces el mismo nombre (por ejemplo, `Customer`), a continuación, en el mismo `String` se devuelve el objeto de ese nombre. Esto permite escribir código eficiente que comparaciones de objetos en estas cadenas en lugar de costosas comparaciones de cadenas.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlNodeReader.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tipo del nodo actual.</summary>
        <value>Uno de los valores de <see cref="T:System.Xml.XmlNodeType" /> que representa el tipo del nodo actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
   
  
## Examples  
 El ejemplo siguiente lee un archivo XML y muestra cada uno de los nodos.  
  
 [!code-cpp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/VB/source.vb#1)]  
  
 En el ejemplo se utiliza el archivo `items.xml`como entrada.  
  
 [!code-xml[Classic WebData XmlNodeReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public override string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string" Usage="System.Xml.XmlNodeReader.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el prefijo de espacio de nombres asociado al nodo actual.</summary>
        <value>Prefijo de espacio de nombres asociado al nodo actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
   
  
## Examples  
 El ejemplo siguiente muestra el nombre local de cada nodo, y, si existen, el prefijo y URI de espacio de nombres.  
  
 [!code-cpp[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public override char QuoteChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property char QuoteChar { char get(); };" />
      <MemberSignature Language="F#" Value="member this.QuoteChar : char" Usage="System.Xml.XmlNodeReader.QuoteChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el carácter de comillas entre las que se encierra el valor de un nodo de atributo.</summary>
        <value>XmlNodeReader siempre utiliza comillas dobles (").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="xmlNodeReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lee el siguiente nodo del flujo.</summary>
        <returns>Es <see langword="true" /> si se lee correctamente el siguiente nodo; es <see langword="false" /> si no hay más nodos que leer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 Cuando un lector primero se crea e inicializa, hay ninguna información. Debe llamar a `Read` para leer el primer nodo.  
  
   
  
## Examples  
 El ejemplo siguiente lee un archivo XML y muestra cada nodo.  
  
 [!code-cpp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/VB/source.vb#1)]  
  
 En el ejemplo se utiliza el archivo `items.xml`como entrada.  
  
 [!code-xml[Classic WebData XmlNodeReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAttributeValue">
      <MemberSignature Language="C#" Value="public override bool ReadAttributeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ReadAttributeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ReadAttributeValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAttributeValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ReadAttributeValue();" />
      <MemberSignature Language="F#" Value="override this.ReadAttributeValue : unit -&gt; bool" Usage="xmlNodeReader.ReadAttributeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Analiza el valor de atributo en uno o varios nodos <see langword="Text" />, <see langword="EntityReference" /> o <see langword="EndEntity" />.</summary>
        <returns><see langword="true" /> si hay nodos para devolver.  
  
 <see langword="false" /> si el lector no está situado en un nodo de atributo cuando se realiza la llamada inicial o si se leyeron todos los valores de atributo.  
  
Un atributo vacío, como <c>misc=""</c>, devuelve <see langword="true" /> con un solo nodo cuyo valor es String.Empty.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 Utilice este método después de llamar a <xref:System.Xml.XmlNodeReader.MoveToAttribute%2A> para leer los nodos de referencia de texto o una entidad que constituyen el valor del atributo. El <xref:System.Xml.XmlNodeReader.Depth%2A> de los nodos de valor de atributo es uno más la profundidad del nodo de atributo; aumenta y disminuye en uno al entrar y salir de las referencias de entidad general.  
  
   
  
## Examples  
 El ejemplo siguiente lee un atributo con nodos de referencia de entidad y de texto.  
  
 [!code-cpp[Classic WebData XmlNodeReader.ReadAttributeValue Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.ReadAttributeValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.ReadAttributeValue Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.ReadAttributeValue Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.ReadAttributeValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.ReadAttributeValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlNodeReader.ReadContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
        <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
        <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
        <summary>Lee el contenido y devuelve los bytes binarios descodificados en Base64.</summary>
        <returns>Número de bytes escritos en el búfer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 Este método envía el contenido, descodifica el contenido en Base64 y devuelve los bytes binarios descodificados (por ejemplo, una línea Base64 codificada en formato GIF) en el búfer. Puede llamar sucesivamente a este método para leer grandes flujos de texto incrustado. Para obtener más información, vea RFC 1521, "MIME (Multipurpose Internet Mail Extensions) parte uno: mecanismos para especificar y describir el formato de los cuerpos de mensaje de Internet". Puede obtener RFC del [sitio Web de comentarios de solicitud de](https://www.rfc-editor.org).  
  
> [!NOTE]
>  Debe tener acceso a cualquiera de las propiedades del lector entre las llamadas a no la <xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A> método hasta que el método devuelve el valor 0.  
  
 Este método tiene el siguiente comportamiento:  
  
-   <xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A> Devuelve el valor 0 cuando ha llegado al final de la secuencia de bytes que estaba operando. El lector está situado en el primer nodo sin contenido.  
  
-   Si solicita un número menor, o el número exacto de bytes que quedan en la secuencia, el lector permanece en su posición actual.  
  
-   <xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A> no se admite en los siguientes tipos de nodo XML: Element, XmlDeclaration, None, Document, DocumentType, Notation, Entity, DocumentFragment.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">El método <see cref="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> no es compatible con el nodo actual.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
        <altmember cref="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlNodeReader.ReadContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
        <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
        <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
        <summary>Lee el contenido y devuelve los bytes binarios descodificados de BinHex.</summary>
        <returns>Número de bytes escritos en el búfer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 Este método envía el contenido, descodifica el contenido en BinHex y devuelve los bytes binarios descodificados (por ejemplo, una línea BinHex codificada en formato GIF) en el búfer. Puede llamar sucesivamente a este método para leer grandes flujos de texto incrustado.  
  
> [!NOTE]
>  Debe tener acceso a cualquiera de las propiedades del lector entre las llamadas a no la <xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A> método hasta que el método devuelve el valor 0.  
  
 Este método tiene el siguiente comportamiento:  
  
-   <xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A> Devuelve el valor 0 cuando ha llegado al final de la secuencia de bytes que estaba operando. El lector está situado en el primer nodo sin contenido.  
  
-   Si solicita un número menor, o el número exacto de bytes que quedan en la secuencia, el lector permanece en su posición actual.  
  
-   <xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A> no se admite en los siguientes tipos de nodo XML: Element, XmlDeclaration, None, Document, DocumentType, Notation, Entity, DocumentFragment.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">El método <see cref="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> no es compatible con el nodo actual.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
        <altmember cref="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadElementContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlNodeReader.ReadElementContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
        <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
        <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
        <summary>Lee el elemento y descodifica el contenido de Base64.</summary>
        <returns>Número de bytes escritos en el búfer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 Este método lee el contenido, descodifica mediante la codificación Base64 y devuelve los bytes binarios descodificados (por ejemplo, una línea Base64 codificada en formato GIF) en el búfer. Para obtener más información, vea RFC 1521, "MIME (Multipurpose Internet Mail Extensions) parte uno: mecanismos para especificar y describir el formato de los cuerpos de mensaje de Internet". Puede obtener RFC del [sitio Web de comentarios de solicitud de](https://www.rfc-editor.org).  
  
 Este método solo puede leer elementos de contenido simple. El elemento puede contener texto, espacios en blanco, espacio en blanco significativo, secciones CDATA, comentarios y las instrucciones de procesamiento. También puede contener referencias de entidad, que se expanden automáticamente. El elemento no puede tener elementos secundarios.  
  
 Este método es muy similar a la <xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A> método excepto en que sólo se puede llamar en tipos de nodo de elemento.  
  
 Si el valor de count es mayor que el número de bytes en el documento, o si es igual al número de bytes en el documento, el <xref:System.Xml.XmlNodeReader> lee todos los bytes restantes en el documento y devuelve el número de bytes leídos. La siguiente <xref:System.Xml.XmlNodeReader.ReadElementContentAsBase64%2A> llamada al método devuelve un cero y desplaza el lector al siguiente nodo del <xref:System.Xml.XmlNodeType.EndElement> nodo.  
  
 Si se llama a <xref:System.Xml.XmlNodeReader.Read%2A> antes de que se consuma todo el contenido del elemento, el lector puede comportarse como si se consumió el primer contenido y, a continuación, el <xref:System.Xml.XmlNodeReader.Read%2A> se llamó al método. Esto significa que el lector lee todo el texto hasta que se encuentra el elemento final. A continuación, lee el nodo de la etiqueta final, lea el siguiente nodo y, a continuación, se sitúa en el siguiente nodo.  
  
   
  
## Examples  
 Consulte <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A?displayProperty=nameWithType> para ver un ejemplo de cómo utilizar este método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">El nodo actual no es un nodo de elemento.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
        <exception cref="T:System.Xml.XmlException">El elemento contiene contenido mixto.</exception>
        <exception cref="T:System.FormatException">El contenido no puede convertirse en el tipo solicitado.</exception>
        <altmember cref="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadElementContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlNodeReader.ReadElementContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
        <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
        <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
        <summary>Lee el elemento y descodifica el contenido de BinHex.</summary>
        <returns>Número de bytes escritos en el búfer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 Este método lee el contenido del elemento, descodifica mediante la codificación BinHex y devuelve los bytes binarios descodificados (por ejemplo, una línea BinHex codificada en formato GIF) en el búfer.  
  
 Este método solo puede leer elementos de contenido simple. El elemento puede contener texto, espacios en blanco, espacio en blanco significativo, secciones CDATA, comentarios y las instrucciones de procesamiento. También puede contener referencias de entidad, que se expanden automáticamente. El elemento no puede tener elementos secundarios.  
  
 Este método es muy similar a la <xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A> método excepto en que sólo se puede llamar en tipos de nodo de elemento.  
  
 Si el valor de count es mayor que el número de bytes en el documento, o si es igual al número de bytes en el documento, el <xref:System.Xml.XmlNodeReader> lee todos los bytes restantes en el documento y devuelve el número de bytes leídos. La siguiente <xref:System.Xml.XmlNodeReader> llamada al método devuelve un cero y desplaza el lector al siguiente nodo del <xref:System.Xml.XmlNodeType.EndElement> nodo.  
  
 Si se llama a <xref:System.Xml.XmlNodeReader.Read%2A> antes de que se consuma todo el contenido del elemento, el lector puede comportarse como si se consumió el primer contenido y, a continuación, el <xref:System.Xml.XmlNodeReader.Read%2A> se llamó al método. Esto significa que el lector lee todo el texto hasta que se encuentra el elemento final. A continuación, lee el nodo de la etiqueta final, lea el siguiente nodo y, a continuación, se sitúa en el siguiente nodo.  
  
   
  
## Examples  
 Consulte <xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A?displayProperty=nameWithType> para ver un ejemplo de cómo utilizar este método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">El nodo actual no es un nodo de elemento.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
        <exception cref="T:System.Xml.XmlException">El elemento contiene contenido mixto.</exception>
        <exception cref="T:System.FormatException">El contenido no puede convertirse en el tipo solicitado.</exception>
        <altmember cref="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadState">
      <MemberSignature Language="C#" Value="public override System.Xml.ReadState ReadState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ReadState ReadState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.ReadState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReadState As ReadState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::ReadState ReadState { System::Xml::ReadState get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadState : System.Xml.ReadState" Usage="System.Xml.XmlNodeReader.ReadState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ReadState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el estado del lector.</summary>
        <value>Uno de los valores de <see cref="T:System.Xml.ReadState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadString">
      <MemberSignature Language="C#" Value="public override string ReadString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ReadString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadString();" />
      <MemberSignature Language="F#" Value="override this.ReadString : unit -&gt; string" Usage="xmlNodeReader.ReadString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lee el contenido de un nodo de elemento o de texto como una cadena.</summary>
        <returns>Contenido del nodo de elemento o de texto (puede incluir nodos CDATA, Text, etc.). Puede ser una cadena vacía si el lector está situado en un nodo que no sea de elemento ni de texto, o si no hay más contenido de texto para devolver en el contexto actual.  
  
 <see langword="Note:" /> El nodo de texto puede ser un nodo de texto de elemento o de atributo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 Si se coloca en un elemento, `ReadString` concatene todo el texto, espacios en blanco significativos, espacios en blanco y tipos de nodo de sección CData y devuelve los datos concatenados como el contenido del elemento. Se detiene cuando se encuentra cualquier marcado. Esto se podría producir en un modelo de contenido mixto o cuando se lee una etiqueta de fin de elemento.  
  
 Si se coloca en un nodo de texto, `ReadString` realiza la misma concatenación desde el nodo de texto hasta la etiqueta de cierre del elemento. Si el sistema de lectura está situado en un nodo de texto de atributos, `ReadString` tiene la misma funcionalidad que si el sistema de lectura estuviera situado en la etiqueta de inicio de elemento. Devuelve todos los nodos de texto de elementos concatenados.  
  
   
  
## Examples  
 El ejemplo siguiente muestra el contenido de texto de cada uno de los elementos.  
  
 [!code-cpp[Classic WebData XmlNodeReader.IsEmptyElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.IsEmptyElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.IsEmptyElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.IsEmptyElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.IsEmptyElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.IsEmptyElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveEntity">
      <MemberSignature Language="C#" Value="public override void ResolveEntity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResolveEntity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResolveEntity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResolveEntity();" />
      <MemberSignature Language="F#" Value="override this.ResolveEntity : unit -&gt; unit" Usage="xmlNodeReader.ResolveEntity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resuelve la referencia a entidad de los nodos <see langword="EntityReference" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 Si el lector está situado en un `EntityReference` nodo (`XmlNodeType.EntityReference`), si <xref:System.Xml.XmlNodeReader.Read%2A> se llama después de llamar a este método, el texto de reemplazo de entidad se analiza. Cuando finalice el texto de reemplazo de entidad, un `EndEntity` nodo se devuelve al cerrar el ámbito de referencia de entidad.  
  
> [!NOTE]
>  Después de llamar a este método, si la entidad forma parte de un valor de atributo, debe llamar a <xref:System.Xml.XmlNodeReader.ReadAttributeValue%2A> para ir a la entidad.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa `ResolveEntity` para expandir una entidad general.  
  
 [!code-cpp[Classic WebData XmlNodeReader.ResolveEntity Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.ResolveEntity Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.ResolveEntity Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.ResolveEntity Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.ResolveEntity Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.ResolveEntity Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El lector no se encuentra en un nodo <see langword="EntityReference" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public override System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaInfo : System.Xml.Schema.IXmlSchemaInfo" Usage="System.Xml.XmlNodeReader.SchemaInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la información de esquema que se ha asignado al nodo actual.</summary>
        <value>Objeto <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que contiene la información de esquema del nodo actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 El <xref:System.Xml.Schema.IXmlSchemaInfo> interfaz representa Infoset de validación de esquema (PSVI) de Post del nodo XML subyacente. El contenido PSVI de esta propiedad se establece después de que se ha validado el nodo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
        <altmember cref="Overload:System.Xml.XmlDocument.Validate" />
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public override void Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Skip ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Skip();" />
      <MemberSignature Language="F#" Value="override this.Skip : unit -&gt; unit" Usage="xmlNodeReader.Skip " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Omite los nodos secundarios del nodo actual.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 Por ejemplo, suponga que tiene el siguiente código XML de entrada:  
  
```xml  
<a name="bob" age="123">  
   <x/>abc<y/>  
 </a>  
 <b>  
...  
 </b>  
```  
  
 Si el lector está situado en la "\<un >" nodo o cualquiera de sus atributos, una llamada a `Skip` coloca el lector a la "\<b >" nodo.  
  
 Si el lector está situado en un nodo hoja ya (por ejemplo, el elemento "x" o el nodo de texto "abc"), una llamada a `Skip` es igual que llamar a <xref:System.Xml.XmlNodeReader.Read%2A>.  
  
 Este método comprueba XML bien formado.  
  
   
  
## Examples  
 El ejemplo siguiente lee el nodo de elemento de precio en el documento XML.  
  
 [!code-cpp[Classic WebData XmlNodeReader.Skip Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.Skip Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.Skip Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.Skip Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.Skip Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.Skip Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.GetNamespacesInScope">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IDictionary&lt;string,string&gt; IXmlNamespaceResolver.GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(valuetype System.Xml.XmlNamespaceScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Function GetNamespacesInScope (scope As XmlNamespaceScope) As IDictionary(Of String, String) Implements IXmlNamespaceResolver.GetNamespacesInScope" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System::Xml::XmlNamespaceScope scope) = System::Xml::IXmlNamespaceResolver::GetNamespacesInScope;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" />
      </Parameters>
      <Docs>
        <param name="scope">Objeto <see cref="T:System.Xml.XmlNamespaceScope" />.</param>
        <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
        <returns>Objeto <see cref="T:System.Collections.IDictionary" /> que contiene los espacios de nombres que están dentro del ámbito.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Xml.XmlNodeReader> se convierte en una interfaz <xref:System.Xml.IXmlNamespaceResolver>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupNamespace">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupNamespace (prefix As String) As String Implements IXmlNamespaceResolver.LookupNamespace" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupNamespace(System::String ^ prefix) = System::Xml::IXmlNamespaceResolver::LookupNamespace;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Objeto <see cref="T:System.String" /> que contiene el prefijo del espacio de nombres.</param>
        <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
        <returns>Objeto <see cref="T:System.String" /> que contiene el nombre del espacio de nombres.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Xml.XmlNodeReader> se convierte en una interfaz <xref:System.Xml.IXmlNamespaceResolver>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupPrefix">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupPrefix (string namespaceName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupPrefix(string namespaceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupPrefix (namespaceName As String) As String Implements IXmlNamespaceResolver.LookupPrefix" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupPrefix(System::String ^ namespaceName) = System::Xml::IXmlNamespaceResolver::LookupPrefix;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceName">Objeto <see cref="T:System.String" /> que identifica el espacio de nombres.</param>
        <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
        <returns>Objeto <see cref="T:System.String" /> que contiene el prefijo del espacio de nombres.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Xml.XmlNodeReader> se convierte en una interfaz <xref:System.Xml.IXmlNamespaceResolver>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Xml.XmlNodeReader.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor de texto del nodo actual.</summary>
        <value>El valor devuelto depende de la propiedad <see cref="P:System.Xml.XmlNodeReader.NodeType" /> del nodo:  En la siguiente tabla se recogen los tipos de nodo que tienen un valor para devolver. Todos los demás tipos de nodo devuelven String.Empty.  
  
 <list type="table"><listheader><term> Tipo de nodo 
 </term><description> Valor 
 </description></listheader><item><term><see langword="Attribute" /></term><description> El valor del atributo.  
  
 </description></item><item><term><see langword="CDATA" /></term><description> Contenido de la sección CDATA.  
  
 </description></item><item><term><see langword="Comment" /></term><description> El contenido del comentario.  
  
 </description></item><item><term><see langword="DocumentType" /></term><description> El subconjunto interno.  
  
 </description></item><item><term><see langword="ProcessingInstruction" /></term><description> El contenido completo, sin incluir el destino.  
  
 </description></item><item><term><see langword="SignificantWhitespace" /></term><description> Espacio en blanco entre marcas en un modelo de contenido mixto.  
  
 </description></item><item><term><see langword="Text" /></term><description> El contenido del nodo de texto.  
  
 </description></item><item><term><see langword="Whitespace" /></term><description> El espacio en blanco entre marcado.  
  
 </description></item><item><term><see langword="XmlDeclaration" /></term><description> El contenido de la declaración.  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
   
  
## Examples  
 El ejemplo siguiente lee un archivo XML y muestra cada nodo.  
  
 [!code-cpp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/VB/source.vb#1)]  
  
 En el ejemplo se utiliza el archivo `items.xml`como entrada.  
  
 [!code-xml[Classic WebData XmlNodeReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlNodeReader.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el ámbito de <see langword="xml:lang" /> actual.</summary>
        <value>Ámbito de <see langword="xml:lang" /> actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 Esta propiedad representa el ámbito de XML: lang en el que reside el nodo actual. Por ejemplo, este es un fragmento XML con `xml:lang` establecido en inglés de Estados Unidos en el elemento raíz:  
  
```xml  
<root xml:lang="en-us">   
<name>Fred</name>   
</root>   
```  
  
 Cuando el lector está situado en la `name` elemento, puede utilizar esta propiedad para saber que está en el ámbito de un inglés de Estados Unidos `xml:lang` atributo.  
  
 La cadena devuelta también está en <xref:System.Xml.XmlNodeReader.NameTable%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlNodeReader.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el ámbito de <see langword="xml:space" /> actual.</summary>
        <value>Uno de los valores de <see cref="T:System.Xml.XmlSpace" />. Si no existe ningún ámbito de <see langword="xml:space" />, el valor predeterminado de esta propiedad será <see langword="XmlSpace.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la práctica recomendada es crear instancias <xref:System.Xml.XmlReader> mediante la clase <xref:System.Xml.XmlReaderSettings> y el método <xref:System.Xml.XmlReader.Create%2A>. Esto le permite sacar el máximo provecho de todas las nuevas características introducidas en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Para obtener más información, vea la sección Comentarios de la <xref:System.Xml.XmlReader> página de referencia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>