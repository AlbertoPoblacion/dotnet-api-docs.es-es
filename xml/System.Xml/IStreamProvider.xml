<Type Name="IStreamProvider" FullName="System.Xml.IStreamProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b7f9bada72f0e036f0fdb2ae93db2c823ab1aa15" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="37729962" /></Metadata><TypeSignature Language="C#" Value="public interface IStreamProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStreamProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xml.IStreamProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStreamProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStreamProvider" />
  <TypeSignature Language="F#" Value="type IStreamProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Representa una interfaz que se puede implementar mediante clases que proporcionan secuencias.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al escribir un mensaje saliente que contiene un cuerpo transmitido a un sistema de escritura XML, <xref:System.ServiceModel.Channels.Message> utilizará una secuencia de llamadas similar a la siguiente en su implementación <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29>:  
  
-   Escriba cualquier información necesaria que preceda a la secuencia (por ejemplo, la etiqueta de apertura XML).  
  
-   Escriba la secuencia.  
  
-   Escriba cualquier información que siga a la secuencia (por ejemplo, la etiqueta de cierre XML).  
  
 Esto funciona bien con codificaciones similares a la codificación XML textual. Sin embargo, hay algunas codificaciones que no proporcionan información del conjunto de información (por ejemplo, etiquetas para iniciar y finalizar elementos XML) de XML junto con los datos contenidos en los elementos. Por ejemplo, para la codificación MTOM, la codificación del mensaje se divide en varias partes. Una parte contiene el conjunto de información XML, que puede contener referencias a otras partes de contenidos de elementos reales. Puesto que el conjunto de información XML será normalmente pequeño en comparación con el contenido transmitido, tiene sentido almacenar en búfer el conjunto de información, escribirlo y, a continuación, escribir el contenido de una manera transmitida. Esto significa que cuando se escribe la etiqueta de elemento de cierre, no deberíamos haber escrito todavía la secuencia.  
  
 Para este propósito, se utiliza la interfaz <xref:System.Xml.IStreamProvider> . La interfaz tiene un método <xref:System.Xml.IStreamProvider.GetStream> que devuelve la secuencia que se va a escribir. La manera correcta de escribir un cuerpo de mensaje transmitido <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29> es la siguiente:  
  
-   Escriba cualquier información necesaria que preceda a la secuencia (por ejemplo, la etiqueta de apertura XML)  
  
-   Llame a la sobrecarga `WriteValue` en el <xref:System.Xml.XmlDictionaryWriter> que toma <xref:System.Xml.IStreamProvider>, con una implementación `IStreamProvider` que devuelve la secuencia que se va a escribir.  
  
-   Escriba cualquier información que siga a la secuencia (por ejemplo, la etiqueta de cierre XML)  
  
 Con este enfoque, el sistema de escritura XML puede escoger cuándo llamar <xref:System.Xml.IStreamProvider.GetStream> y escribir los datos transmitidos por secuencias. Por ejemplo, los sistemas de escritura XML textual y binario lo llamarán inmediatamente y escribirán el contenido transmitido entre las etiquetas de cierre e inicio. El sistema de escritura de MTOM puede decidir llamar <xref:System.Xml.IStreamProvider.GetStream> posteriormente, cuando esté listo para escribir la parte adecuada del mensaje.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.IStreamProvider.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream();" />
      <MemberSignature Language="F#" Value="abstract member GetStream : unit -&gt; System.IO.Stream" Usage="iStreamProvider.GetStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene una secuencia.</summary>
        <returns>Un objeto <see cref="T:System.IO.Stream" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se puede utilizar para recuperar la secuencia que se va a escribir.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseStream">
      <MemberSignature Language="C#" Value="public void ReleaseStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseStream(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseStream : System.IO.Stream -&gt; unit" Usage="iStreamProvider.ReleaseStream stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">La secuencia que se libera.</param>
        <summary>Libera una secuencia para la salida.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>