<Type Name="XmlSecureResolver" FullName="System.Xml.XmlSecureResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c72760f37069405eccc6d5f577dd959ae33e136f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36434216" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlSecureResolver : System.Xml.XmlResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSecureResolver extends System.Xml.XmlResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlSecureResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSecureResolver&#xA;Inherits XmlResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSecureResolver : System::Xml::XmlResolver" />
  <TypeSignature Language="F#" Value="type XmlSecureResolver = class&#xA;    inherit XmlResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlResolver</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ayuda a proteger otra implementación de <see cref="T:System.Xml.XmlResolver" /> ajustando el objeto <see cref="T:System.Xml.XmlResolver" /> y restringiendo los recursos a los que tiene acceso el <see cref="T:System.Xml.XmlResolver" /> subyacente.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clase <xref:System.Xml.XmlUrlResolver> es la resolución predeterminada de todas las clases del espacio de nombres <xref:System.Xml>. Sirve para cargar documentos XML y para resolver recursos externos como entidades, DTD o esquemas e importar o directivas de inclusión.  
  
 Puede invalidar este comportamiento predeterminado mediante la especificación de la <xref:System.Xml.XmlResolver> objeto que se va a usar. Por ejemplo, si desea restringir los recursos que subyacente <xref:System.Xml.XmlResolver> puede tener acceso, puede usar un <xref:System.Xml.XmlSecureResolver> objeto.  
  
 <xref:System.Xml.XmlSecureResolver> se ajusta alrededor de una implementación concreta de <xref:System.Xml.XmlResolver> y restringe los recursos que subyacente <xref:System.Xml.XmlResolver> tiene acceso a. Por ejemplo, <xref:System.Xml.XmlSecureResolver> tiene la capacidad de prohibir el redireccionamiento entre dominios, lo que ocurre desde una referencia a un identificador uniforme de recursos (URI) incrustada.  
  
 Al construir un <xref:System.Xml.XmlSecureResolver> objeto, proporcione válido <xref:System.Xml.XmlResolver> implementación junto con una dirección URL, una instancia de un objeto evidence o un conjunto de permisos, que es utilizada por el <xref:System.Xml.XmlSecureResolver> para determinar la seguridad. Ya sea un <xref:System.Security.PermissionSet?displayProperty=nameWithType> se genera o utiliza uno existente y <xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=nameWithType> se llama en ella para ayudar a proteger subyacente <xref:System.Xml.XmlResolver>.  
  
> [!IMPORTANT]
>  Los objetos <xref:System.Xml.XmlSecureResolver> pueden contener información confidencial como, por ejemplo, credenciales de usuario. Debe tener cuidado al almacenar en caché <xref:System.Xml.XmlSecureResolver> objetos y no debe pasar el <xref:System.Xml.XmlSecureResolver> objeto a un componente no es de confianza.  
  
> [!IMPORTANT]
>  Existen diferencias en la infraestructura de seguridad para código que se ejecuta en common language runtime (CLR) de .NET Framework y de código que se ejecuta en el CLR que está integrado en Microsoft SQL Server 2005. Esto puede conducir a los casos donde el código desarrollado para el CLR de .NET Framework funciona de forma diferente cuando se utiliza en el servidor SQL Server integra CLR. Una de estas diferencias afecta a la <xref:System.Xml.XmlSecureResolver> clase cuando se dispone de pruebas que se basa en una dirección URL (es decir, cuando usa el <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%28System.String%29> método o la <xref:System.Xml.XmlSecureResolver.%23ctor%2A> constructor). La directiva de resolución de mecanismo de SQL Server integra CLR no utiliza la <xref:System.Security.Policy.Url> o <xref:System.Security.Policy.Zone> información. En su lugar, concede permisos basados en el GUID que el servidor agrega cuando se cargan los ensamblados. Cuando se usa el <xref:System.Xml.XmlSecureResolver> en CLR integrado de SQL Server, proporcione la evidencia necesaria directamente mediante un determinado <xref:System.Security.PermissionSet>.  
  
## <a name="to-use-a-secure-resolver"></a>Para utilizar a un solucionador seguro  
  
1.  Cree un objeto <xref:System.Xml.XmlSecureResolver> con el conjunto de permisos correcto.  
  
2.  Cree un objeto <xref:System.Xml.XmlReaderSettings> que utilice el objeto <xref:System.Xml.XmlSecureResolver>.  
  
     [!code-csharp[XmlSecureResolver_Samples#5a](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#5a)]
     [!code-vb[XmlSecureResolver_Samples#5a](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#5a)]  
  
3.  Pasar el <xref:System.Xml.XmlReaderSettings> el objeto a la <xref:System.Xml.XmlReader.Create%2A> método cuando se va a crear la <xref:System.Xml.XmlReader> objeto.  
  
     [!code-csharp[XmlSecureResolver_Samples#5b](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#5b)]
     [!code-vb[XmlSecureResolver_Samples#5b](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#5b)]  
  
## <a name="to-restrict-access-by-using-a-url"></a>Para restringir el acceso mediante una dirección URL  
 Use la <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> constructor para crear un <xref:System.Xml.XmlSecureResolver> objeto que se permite el acceso a su sitio de intranet local únicamente.  
  
 [!code-csharp[XmlSecureResolver_Samples#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#3)]
 [!code-vb[XmlSecureResolver_Samples#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#3)]  
  
## <a name="to-restrict-access-by-using-a-permission-set"></a>Para restringir el acceso mediante el uso de un conjunto de permisos  
  
1.  Crear un objeto <xref:System.Net.WebPermission>.  
  
     [!code-csharp[XmlSecureResolver_Samples#4a](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#4a)]
     [!code-vb[XmlSecureResolver_Samples#4a](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#4a)]  
  
2.  Especifique las direcciones URL que desea permitir el acceso a.  
  
     [!code-csharp[XmlSecureResolver_Samples#4b](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#4b)]
     [!code-vb[XmlSecureResolver_Samples#4b](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#4b)]  
  
3.  Agregue permisos web al objeto <xref:System.Security.PermissionSet>.  
  
     [!code-csharp[XmlSecureResolver_Samples#4c](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#4c)]
     [!code-vb[XmlSecureResolver_Samples#4c](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#4c)]  
  
4.  Use la <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.PermissionSet%29> constructor para crear un <xref:System.Xml.XmlSecureResolver> objeto utilizando el conjunto de permisos.  
  
     [!code-csharp[XmlSecureResolver_Samples#4d](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#4d)]
     [!code-vb[XmlSecureResolver_Samples#4d](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#4d)]  
  
     Consulte la <xref:System.Xml.XmlSecureResolver.%23ctor%2A> página de referencia para ver otro ejemplo.  
  
## <a name="to-restrict-access-by-using-evidence"></a>Para restringir el acceso mediante el uso de evidencia  
 Puede restringir el acceso mediante el uso de la <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> constructor y especificando <xref:System.Security.Policy.Evidence>. <xref:System.Security.Policy.Evidence> se utiliza para crear el <xref:System.Security.PermissionSet> que se aplica al <xref:System.Xml.XmlResolver> subyacente. <xref:System.Xml.XmlSecureResolver> llama a <xref:System.Security.PermissionSet.PermitOnly%2A> en el <xref:System.Security.PermissionSet> creado antes de abrir cualquier recurso.  
  
 Estos son algunos escenarios comunes y el tipo de evidencia que debe proporcionar para cada uno:  
  
-   Si está trabajando en un entorno de plena confianza, use el ensamblado para crear la evidencia:  
  
     [!code-csharp[XmlSecureResolver_Samples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#1)]
     [!code-vb[XmlSecureResolver_Samples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#1)]  
  
-   Si está trabajando en un entorno de confianza parcial, tiene código o datos procedentes de un origen externo y conocer el origen del origen externo y tiene un identificador URI comprobable, utilice el URI para crear la evidencia:  
  
     [!code-csharp[XmlSecureResolver_Samples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#2)]
     [!code-vb[XmlSecureResolver_Samples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#2)]  
  
-   Si está trabajando en un entorno de confianza parcial y tiene el código o datos procedentes de un origen externo, pero no conoce el origen del origen externo, ya sea:  
  
     Establezca el parámetro `evidence` en `null`. De esta manera, no se permite el acceso a los recursos.  
  
     O bien  
  
     Si su aplicación necesita determinado acceso a los recursos, solicite evidencias a quien realiza la llamada.  
  
## <a name="to-use-the-secure-resolver-to-load-an-xslt-style-sheet"></a>Para utilizar al Solucionador seguro para cargar una hoja de estilos XSLT  
  
1.  Cree un objeto <xref:System.Xml.XmlSecureResolver> con el conjunto de permisos correcto.  
  
2.  Pasar <xref:System.Xml.XmlSecureResolver> al método <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>.  
  
     [!code-csharp[XmlSecureResolver_Samples#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#6)]
     [!code-vb[XmlSecureResolver_Samples#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#6)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Esta clase tiene una petición de herencia. Se requiere plena confianza para heredar de la <see cref="T:System.Xml.XmlSecureResolver" /> clase.</para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlSecureResolver" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los tres constructores proporcionan tres tipos de restricciones de acceso:  
  
-   El <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> constructor restringe el acceso mediante una dirección URL.  
  
-   El <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.PermissionSet%29> constructor restringe el acceso mediante el uso de un conjunto de permisos.  
  
-   El <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> constructor restringe el acceso mediante el uso de evidencia.  
  
 Vea los temas de referencia de constructor para obtener ejemplos de estos tipos de restricciones.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSecureResolver (System.Xml.XmlResolver resolver, System.Security.PermissionSet permissionSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlResolver resolver, class System.Security.PermissionSet permissionSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSecureResolver(System::Xml::XmlResolver ^ resolver, System::Security::PermissionSet ^ permissionSet);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlSecureResolver : System.Xml.XmlResolver * System.Security.PermissionSet -&gt; System.Xml.XmlSecureResolver" Usage="new System.Xml.XmlSecureResolver (resolver, permissionSet)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="permissionSet" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="resolver">Resolución XML ajustada por el <see cref="T:System.Xml.XmlSecureResolver" />.</param>
        <param name="permissionSet">Conjunto de permisos que se va a aplicar al <see cref="T:System.Xml.XmlResolver" /> subyacente. El <see cref="T:System.Xml.XmlSecureResolver" /> llama a <see cref="M:System.Security.PermissionSet.PermitOnly" /> en el conjunto de permisos antes de llamar al método <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /> en el objeto de resolución XML subyacente.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlSecureResolver" /> con los objetos <see cref="T:System.Xml.XmlResolver" /> y <see cref="T:System.Security.PermissionSet" /> especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Xml.XmlSecureResolver> objeto mediante el uso de un conjunto de permisos personalizados.  
  
 [!code-cpp[XmlSecureResolver.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSecureResolver.cctor/CPP/secresolver.cpp#1)]
 [!code-csharp[XmlSecureResolver.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver.cctor/CS/secresolver.cs#1)]
 [!code-vb[XmlSecureResolver.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver.cctor/VB/secresolver.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
        <altmember cref="T:System.Security.Policy.Evidence" />
        <altmember cref="T:System.Net.WebPermission" />
        <altmember cref="T:System.Security.SecurityManager" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSecureResolver (System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSecureResolver(System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlSecureResolver : System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; System.Xml.XmlSecureResolver" Usage="new System.Xml.XmlSecureResolver (resolver, evidence)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="resolver">Resolución XML ajustada por el <see cref="T:System.Xml.XmlSecureResolver" />.</param>
        <param name="evidence">Evidencia usada para crear el objeto <see cref="T:System.Security.PermissionSet" /> que se aplicará al <see cref="T:System.Xml.XmlResolver" /> subyacente. El <see cref="T:System.Xml.XmlSecureResolver" /> llama al método <see cref="M:System.Security.PermissionSet.PermitOnly" /> en el objeto <see cref="T:System.Security.PermissionSet" /> creado antes de llamar a <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /> en el <see cref="T:System.Xml.XmlResolver" /> subyacente.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlSecureResolver" /> con los objetos <see cref="T:System.Xml.XmlResolver" /> y <see cref="T:System.Security.Policy.Evidence" /> especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Estos son algunos escenarios posibles y el tipo de evidencia que debe proporcionar para cada escenario:  
  
-   Si está trabajando en un entorno de plena confianza, use el ensamblado para crear la evidencia:  
  
     [!code-csharp[XmlSecureResolver_Samples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#1)]
     [!code-vb[XmlSecureResolver_Samples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#1)]  
  
-   Si está trabajando en un entorno de confianza parcial, tiene código o datos procedentes de un origen externo y conocer el origen del origen externo y tiene un identificador URI comprobable, utilice el URI para crear la evidencia:  
  
     [!code-csharp[XmlSecureResolver_Samples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#2)]
     [!code-vb[XmlSecureResolver_Samples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#2)]  
  
-   Si está trabajando en un entorno de confianza parcial y tiene el código o datos procedentes de un origen externo, pero no conoce el origen del origen externo, ya sea:  
  
     Establezca el parámetro `evidence` en `null`. De esta manera, no se permite el acceso a los recursos.  
  
     O bien  
  
     Si su aplicación necesita determinado acceso a los recursos, solicite evidencias a quien realiza la llamada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSecureResolver (System.Xml.XmlResolver resolver, string securityUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlResolver resolver, string securityUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As XmlResolver, securityUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSecureResolver(System::Xml::XmlResolver ^ resolver, System::String ^ securityUrl);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlSecureResolver : System.Xml.XmlResolver * string -&gt; System.Xml.XmlSecureResolver" Usage="new System.Xml.XmlSecureResolver (resolver, securityUrl)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="securityUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resolver">Resolución XML ajustada por el <see cref="T:System.Xml.XmlSecureResolver" />.</param>
        <param name="securityUrl">Dirección URL utilizada para crear el objeto <see cref="T:System.Security.PermissionSet" /> que se aplicará al <see cref="T:System.Xml.XmlResolver" /> subyacente. El <see cref="T:System.Xml.XmlSecureResolver" /> llama a <see cref="M:System.Security.PermissionSet.PermitOnly" /> en el objeto <see cref="T:System.Security.PermissionSet" /> creado antes de llamar a <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /> en el <see cref="T:System.Xml.XmlResolver" /> subyacente.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlSecureResolver" /> con el objeto <see cref="T:System.Xml.XmlResolver" /> y la dirección URL especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Existen diferencias en la infraestructura de seguridad para código que se ejecuta en common language runtime (CLR) de .NET Framework y de código que se ejecuta en el CLR que está integrado en Microsoft SQL Server 2005. Esto puede conducir a los casos donde el código desarrollado para el CLR de .NET Framework funciona de forma diferente cuando se utiliza en el servidor SQL Server integra CLR. Una de estas diferencias afecta a la <xref:System.Xml.XmlSecureResolver> clase cuando se dispone de pruebas que se basa en una dirección URL (es decir, cuando usa el <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A> método o la <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> constructor). La directiva de resolución de mecanismo de SQL Server integra CLR no utiliza la <xref:System.Security.Policy.Url> o <xref:System.Security.Policy.Zone> información. En su lugar, concede permisos basados en el GUID que el servidor agrega cuando se cargan los ensamblados. Cuando se usa el <xref:System.Xml.XmlSecureResolver> en CLR integrado de SQL Server, proporcione la evidencia necesaria directamente mediante un determinado <xref:System.Security.PermissionSet>.  
  
   
  
## Examples  
 Este ejemplo se utiliza la <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> constructor para crear un <xref:System.Xml.XmlSecureResolver> objeto que se permite el acceso a su sitio de intranet local únicamente.  
  
 [!code-csharp[XmlSecureResolver_Samples#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#3)]
 [!code-vb[XmlSecureResolver_Samples#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEvidenceForUrl">
      <MemberSignature Language="C#" Value="public static System.Security.Policy.Evidence CreateEvidenceForUrl (string securityUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Policy.Evidence CreateEvidenceForUrl(string securityUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateEvidenceForUrl (securityUrl As String) As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Policy::Evidence ^ CreateEvidenceForUrl(System::String ^ securityUrl);" />
      <MemberSignature Language="F#" Value="static member CreateEvidenceForUrl : string -&gt; System.Security.Policy.Evidence" Usage="System.Xml.XmlSecureResolver.CreateEvidenceForUrl securityUrl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="securityUrl">URL usada para crear la evidencia.</param>
        <summary>Crea una evidencia con la dirección URL proporcionada.</summary>
        <returns>Evidencia generada a partir de la dirección URL proporcionada, definida por la directiva predeterminada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Existen diferencias en la infraestructura de seguridad para código que se ejecuta en common language runtime (CLR) de .NET Framework y de código que se ejecuta en el CLR que está integrado en Microsoft SQL Server 2005. Esto puede conducir a los casos donde el código desarrollado para el CLR de .NET Framework funciona de forma diferente cuando se utiliza en el servidor SQL Server integra CLR. Una de estas diferencias afecta a la <xref:System.Xml.XmlSecureResolver> clase cuando se dispone de pruebas que se basa en una dirección URL (es decir, cuando usa el <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A> método o la <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> constructor). La directiva de resolución de CLR integrado de mecanismo de SQL Server no usa la <xref:System.Security.Policy.Url> o <xref:System.Security.Policy.Zone> información. En su lugar, concede permisos basados en el GUID que el servidor agrega cuando se cargan los ensamblados. Cuando se usa el <xref:System.Xml.XmlSecureResolver> en CLR integrado de SQL Server, proporcione la evidencia necesaria directamente mediante un determinado <xref:System.Security.PermissionSet>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public override System.Net.ICredentials Credentials { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlSecureResolver.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials {  void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials" Usage="System.Xml.XmlSecureResolver.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Establece las credenciales usadas para autenticar las solicitudes web.</summary>
        <value>Credenciales que se usan para autenticar las solicitudes web. <see cref="T:System.Xml.XmlSecureResolver" /> establece las credenciales dadas en el <see cref="T:System.Xml.XmlResolver" /> subyacente. Si no se establece esta propiedad, el valor predeterminado es <see langword="null" />; es decir, el objeto <see cref="T:System.Xml.XmlSecureResolver" /> no tiene credenciales de usuario.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se usa un <xref:System.Xml.XmlSecureResolver> con las credenciales predeterminadas para resolver y abrir los recursos de red que necesite el <xref:System.Xml.XmlTextReader>.  
  
 [!code-cpp[XmlSecureResolver.Credentials#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSecureResolver.Credentials/CPP/secresolver2.cpp#1)]
 [!code-csharp[XmlSecureResolver.Credentials#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver.Credentials/CS/secresolver2.cs#1)]
 [!code-vb[XmlSecureResolver.Credentials#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver.Credentials/VB/secresolver2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="P:System.Net.CredentialCache.DefaultCredentials" />
      </Docs>
    </Member>
    <Member MemberName="GetEntity">
      <MemberSignature Language="C#" Value="public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetEntity(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEntity (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetEntity(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="override this.GetEntity : Uri * string * Type -&gt; obj" Usage="xmlSecureResolver.GetEntity (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">URI que se devuelve desde <see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />.</param>
        <param name="role">No se usa actualmente.</param>
        <param name="ofObjectToReturn">Tipo de objeto que se va a devolver. La versión actual sólo devuelve objetos <see cref="T:System.IO.Stream" />.</param>
        <summary>Asigna un identificador URI a un objeto que contiene el recurso real. Este método establece provisionalmente el objeto <see cref="T:System.Security.PermissionSet" /> creado en el constructor llamando a <see cref="M:System.Security.PermissionSet.PermitOnly" /> antes de llamar a <see langword="GetEntity" /> en el <see cref="T:System.Xml.XmlResolver" /> subyacente para abrir el recurso.</summary>
        <returns>Flujo devuelto por una llamada a <see langword="GetEntity" /> en el <see cref="T:System.Xml.XmlResolver" /> subyacente. Si se especifica un tipo que no sea <see cref="T:System.IO.Stream" />, el método devuelve <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  La aplicación puede mitigar memoria de denegación de servicio para el <xref:System.Xml.XmlSecureResolver.GetEntity%2A> método implementando un <xref:System.Runtime.InteropServices.ComTypes.IStream> que limita el número de bytes leídos. Esto ayuda a protegerse contra situaciones donde el código malintencionado intenta pasar una secuencia infinita de bytes que el <xref:System.Xml.XmlSecureResolver.GetEntity%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="ofObjectToReturn" /> no es un tipo <see langword="null" /> ni <see cref="T:System.IO.Stream" />.</exception>
        <exception cref="T:System.UriFormatException">El identificador URI especificado no es un identificador URI absoluto.</exception>
        <exception cref="T:System.NullReferenceException">
          <paramref name="absoluteUri" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Exception">Se ha producido un error en tiempo de ejecución (por ejemplo, una interrupción en la conexión con el servidor).</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntityAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;object&gt; GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; GetEntityAsync(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEntityAsync (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ GetEntityAsync(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="override this.GetEntityAsync : Uri * string * Type -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="xmlSecureResolver.GetEntityAsync (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">Identificador URI devuelto desde <see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />.</param>
        <param name="role">No se usa actualmente.</param>
        <param name="ofObjectToReturn">Tipo de objeto que se va a devolver. La versión actual sólo devuelve objetos <see cref="T:System.IO.Stream" />.</param>
        <summary>Asigna asincrónicamente un identificador URI a un objeto que contiene el recurso real.</summary>
        <returns>Flujo devuelto por una llamada a <see langword="GetEntity" /> en el <see cref="T:System.Xml.XmlResolver" /> subyacente. Si se especifica un tipo que no sea <see cref="T:System.IO.Stream" />, el método devuelve <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveUri">
      <MemberSignature Language="C#" Value="public override Uri ResolveUri (Uri baseUri, string relativeUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Uri ResolveUri(class System.Uri baseUri, string relativeUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveUri (baseUri As Uri, relativeUri As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Uri ^ ResolveUri(Uri ^ baseUri, System::String ^ relativeUri);" />
      <MemberSignature Language="F#" Value="override this.ResolveUri : Uri * string -&gt; Uri" Usage="xmlSecureResolver.ResolveUri (baseUri, relativeUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="relativeUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri">Identificador URI base que se utiliza para resolver el identificador URI relativo</param>
        <param name="relativeUri">Identificador URI que se va a resolver. El identificador URI puede ser absoluto o relativo. Si es absoluto, este valor reemplaza de manera efectiva el valor de <c>baseUri</c>. Si es relativo, se combina con <c>baseUri</c> para formar un identificador URI absoluto.</param>
        <summary>Resuelve el identificador URI absoluto a partir de los URI base y relativo llamando a <see langword="ResolveUri" /> en el <see cref="T:System.Xml.XmlResolver" /> subyacente.</summary>
        <returns>URI absoluto o <see langword="null" /> si el URI relativo no se puede resolver (devuelto mediante una llamada a <see langword="ResolveUri" /> en el <see cref="T:System.Xml.XmlResolver" /> subyacente).</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="relativeUri" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>