<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlConvert.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b857fe3" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2eccf4de-4b1c-4706-8cb3-f46682ccfb7254a403d23cfdb24b52dbf8557d9242ce9853fdf4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">54a403d23cfdb24b52dbf8557d9242ce9853fdf4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b15b8cf0f6dbc1504057c88969d9ef4b790891fe</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/11/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlConvert">
          <source>Encodes and decodes XML names, and provides methods for converting between common language runtime types and XML Schema definition language (XSD) types.</source>
          <target state="translated">Codifica y descodifica nombres XML y proporciona métodos de conversión entre tipos de Common Language Runtime y tipos de lenguajes de definición de esquema XML (XSD).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlConvert">
          <source>When converting data types, the values returned are locale-independent.</source>
          <target state="translated">Cuando se convierten tipos de datos, los valores devueltos no dependen de la configuración regional.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> class is functionally equivalent to the <ph id="ph2">&lt;xref:System.Convert&gt;</ph> class, but it supports XML standards.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> clase es funcionalmente equivalente a la <ph id="ph2">&lt;xref:System.Convert&gt;</ph> clase, pero es compatible con los estándares de XML.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>The type system is based on the XML Schema definition language (XSD) schema type, and the values returned are always locale-independent.</source>
          <target state="translated">El sistema de tipos se basa en el tipo de esquema de lenguaje de definición de esquemas XML (XSD) y los valores devueltos siempre son independientes de la configuración regional.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>Encoding and decoding</source>
          <target state="translated">Codificación y descodificación</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>Element and attribute names or ID values are limited to a range of XML characters according to the W3C <bpt id="p1">[</bpt>XML 1.0 recommendation<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept>.</source>
          <target state="translated">Nombres de elementos y atributos o valores de identificador se limitan a un intervalo de caracteres XML según el W3C <bpt id="p1">[</bpt>recomendación XML 1.0<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>When names contain invalid characters, you can use the <ph id="ph1">&lt;xref:System.Xml.XmlConvert.EncodeName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlConvert.DecodeName%2A&gt;</ph> methods in this class to translate them into valid XML names.</source>
          <target state="translated">Cuando los nombres contienen caracteres no válidos, puede utilizar el <ph id="ph1">&lt;xref:System.Xml.XmlConvert.EncodeName%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Xml.XmlConvert.DecodeName%2A&gt;</ph> métodos de esta clase para convertirlos en nombres XML válidos.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>For example, if you want to use the column heading "Order Detail" in a database, the database allows the space between the two words.</source>
          <target state="translated">Por ejemplo, si desea usar el encabezado de columna "Order Detail" en una base de datos, la base de datos permite el espacio entre las dos palabras.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>However, in XML, the space between "Order" and "Detail" is considered an invalid XML character.</source>
          <target state="translated">Sin embargo, en XML, el espacio entre "Order" y "Detalles" se considera un carácter XML no válido.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>You have to convert it into an escaped hexadecimal encoding and decode it later.</source>
          <target state="translated">Tendrá que convertir en codificación hexadecimal de escape y decodificarlo de nuevo más tarde.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>You can use the <ph id="ph1">&lt;xref:System.Xml.XmlConvert.EncodeName%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> class to ensure the names being written are valid XML names.</source>
          <target state="translated">Puede usar el <ph id="ph1">&lt;xref:System.Xml.XmlConvert.EncodeName%2A&gt;</ph> método con la <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> clase para asegurarse de que los nombres que se escriben son nombres XML válidos.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>The following C# code converts the name "Order Detail" into a valid XML name and writes the element <ph id="ph1">`&lt;Order_0x0020_Detail&gt;My order&lt;/Order_0x0020_Detail&gt;`</ph>.</source>
          <target state="translated">El siguiente código C# convierte el nombre "Order Detail" en un nombre XML válido y escribe el elemento <ph id="ph1">`&lt;Order_0x0020_Detail&gt;My order&lt;/Order_0x0020_Detail&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>The following <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> methods perform encoding and decoding.</source>
          <target state="translated">El siguiente <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> métodos realizan la codificación y descodificación.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>Method</source>
          <target state="translated">Método</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>Description</source>
          <target state="translated">Descripción</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>Takes a name and returns the encoded name along with any invalid character that is replaced by an escape string.</source>
          <target state="translated">Toma un nombre y devuelve el nombre codificado junto con cualquier carácter no válido que se reemplaza por una cadena de escape.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>This method allows colons in any position, which means that the name may still be invalid according to the W3C <bpt id="p1">[</bpt>Namespaces in XML 1.0 recommendation<ept id="p1">](http://www.w3.org/TR/REC-xml-names)</ept>.</source>
          <target state="translated">Este método permite a los dos puntos en cualquier posición, lo que significa que el nombre podría ser válido de acuerdo con el W3C <bpt id="p1">[</bpt>espacios de nombres en la recomendación de XML 1.0<ept id="p1">](http://www.w3.org/TR/REC-xml-names)</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>Takes a name and returns the encoded name.</source>
          <target state="translated">Toma un nombre y devuelve el nombre codificado.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>Same as <ph id="ph1">&lt;xref:System.Xml.XmlConvert.EncodeName%2A&gt;</ph> except that it also encodes the colon character, guaranteeing that the name can be used as the <ph id="ph2">`LocalName`</ph> part of a namespace-qualified name.</source>
          <target state="translated">Igual que <ph id="ph1">&lt;xref:System.Xml.XmlConvert.EncodeName%2A&gt;</ph> excepto en que también codifica el carácter de dos puntos, para garantizar que el nombre puede utilizarse como el <ph id="ph2">`LocalName`</ph> forma parte de un nombre completo de espacio de nombres.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>Reverses the transformation for all the encoding methods.</source>
          <target state="translated">Invierte la transformación para todos los métodos de codificación.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>Name validation</source>
          <target state="translated">Validación de nombre</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> class contains two methods that check the characters in an element or attribute name and verify that the name conforms to the rules set by the W3C <bpt id="p1">[</bpt>XML 1.0 recommendation<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept>:</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> clase contiene dos métodos que comprueban los caracteres de un nombre de elemento o atributo y compruebe que el nombre se ajusta a las reglas establecidas por el W3C <bpt id="p1">[</bpt>recomendación XML 1.0<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept>:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlConvert.VerifyName%2A&gt;</ph> checks the characters and verifies that the name is valid.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlConvert.VerifyName%2A&gt;</ph> comprueba los caracteres y que el nombre es válido.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>The method returns the name if it's valid, and throws an exception if it isn't.</source>
          <target state="translated">El método devuelve el nombre si es válido y produce una excepción si no se encuentra.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlConvert.VerifyNCName%2A&gt;</ph> performs the same validation, but accepts non-qualified names.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlConvert.VerifyNCName%2A&gt;</ph> realiza la misma validación, pero acepta nombres no calificados.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> contains additional methods that validate tokens, white-space characters, public IDs, and other strings.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> contiene métodos adicionales que validan símbolos (tokens), caracteres de espacio en blanco, identificadores públicos y otras cadenas.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>Data type conversion</source>
          <target state="translated">Conversión de tipos de datos</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> also provides methods that enable you to convert data from a string to a strongly typed data type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> También proporciona métodos que permiten convertir datos de una cadena a un tipo de datos fuertemente tipados.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>For example, the <ph id="ph1">&lt;xref:System.Xml.XmlConvert.ToDateTime%2A&gt;</ph> method converts a string to its <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> equivalent.</source>
          <target state="translated">Por ejemplo, el <ph id="ph1">&lt;xref:System.Xml.XmlConvert.ToDateTime%2A&gt;</ph> método convierte una cadena en su <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>This is useful because most methods in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> class return data as a string.</source>
          <target state="translated">Esto es útil porque mayoría de los métodos en la <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> clase devolver datos como una cadena.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>After the data is read, it can be converted to the proper data type before being used.</source>
          <target state="translated">Después de que se leen los datos, se puede convertir al tipo de datos correcto antes de utilizarse.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlConvert.ToString%2A&gt;</ph> overloads provide the complementary operation by converting strongly typed data to strings.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.XmlConvert.ToString%2A&gt;</ph> sobrecargas proporcionan la operación complementaria mediante la conversión de datos fuertemente tipados a cadenas.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>For example, this is useful when you want to add the data to text boxes on a webpage.</source>
          <target state="translated">Por ejemplo, esto es útil cuando desea agregar los datos a los cuadros de texto en una página Web.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>Locale settings are not taken into account during data conversion.</source>
          <target state="translated">Configuración regional no se tiene en cuenta durante la conversión de datos.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlConvert">
          <source>The data types are based on the XML Schema (XSD) data types.</source>
          <target state="translated">Los tipos de datos se basan en los tipos de datos de esquemas XML (XSD).</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlConvert" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Xml.XmlConvert" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.DecodeName(System.String)">
          <source>The name to be transformed.</source>
          <target state="translated">Nombre que se va a transformar.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.DecodeName(System.String)">
          <source>Decodes a name.</source>
          <target state="translated">Descodifica un nombre.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.DecodeName(System.String)">
          <source>This method does the reverse of the <ph id="ph1">&lt;see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" /&gt;</ph> methods.</source>
          <target state="translated">Este método hace lo contrario que los métodos <ph id="ph1">&lt;see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /&gt;</ph> y <ph id="ph2">&lt;see cref="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.DecodeName(System.String)">
          <source>The decoded name.</source>
          <target state="translated">Nombre descodificado.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.DecodeName(System.String)">
          <source>The names are decoded using the following rules:</source>
          <target state="translated">Los nombres se descodifican utilizando las reglas siguientes:</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.DecodeName(System.String)">
          <source>Names are decoded from left to right.</source>
          <target state="translated">Los nombres se descodifican de izquierda a derecha.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.DecodeName(System.String)">
          <source>Any sequence _x <ph id="ph1">`HHHH_`</ph> (where HHHH stands for a valid, four digit hexadecimal UCS-2 code) that has not been decoded is transformed into the corresponding Unicode 2.1 (Unicode 3.0 if supported by the application) character.</source>
          <target state="translated">Toda secuencia _x <ph id="ph1">`HHHH_`</ph> (donde HHHH representa un cuatro válido, código UCS-2 hexadecimal de dígito) no descodificada se transforma en el correspondiente Unicode 2.1 (Unicode 3.0 si lo admite la aplicación) caracteres.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.DecodeName(System.String)">
          <source>No shortforms are recognized.</source>
          <target state="translated">No hay formatos cortos se reconocen.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.DecodeName(System.String)">
          <source>They are passed on without translation.</source>
          <target state="translated">Se pasan sin conversión.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.DecodeName(System.String)">
          <source>For example, _x20<ph id="ph1">\_</ph> or __ are not decoded.</source>
          <target state="translated">Por ejemplo, _x20<ph id="ph1">\_</ph> o __ no se descodifican.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.DecodeName(System.String)">
          <source>The actual encoding of the character is application-specific.</source>
          <target state="translated">La codificación real del carácter es específica de la aplicación.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.DecodeName(System.String)">
          <source>For example, Order_x0020_Details becomes Order Details.</source>
          <target state="translated">Por ejemplo, Order_x0020_Details pasa a ser Order Details.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.DecodeName(System.String)">
          <source>Even escaped characters that are invalid in XML names will be recognized and decoded.</source>
          <target state="translated">Se reconozcan y descodificar los caracteres de escape incluso que no son válidos en los nombres XML.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.DecodeName(System.String)">
          <source>The following example encodes and decodes names.</source>
          <target state="translated">En el ejemplo siguiente se codifica y descodifica nombres.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.EncodeLocalName(System.String)">
          <source>The name to be encoded.</source>
          <target state="translated">Nombre que se va a codificar.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.EncodeLocalName(System.String)">
          <source>Converts the name to a valid XML local name.</source>
          <target state="translated">Convierte el nombre en un nombre XML local válido.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.EncodeLocalName(System.String)">
          <source>The encoded name.</source>
          <target state="translated">Nombre codificado.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.EncodeLocalName(System.String)">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Xml.XmlConvert.EncodeName%2A&gt;</ph> method except that it encodes the colon character, which guarantees that the name can be used as the local name part of a namespace qualified name.</source>
          <target state="translated">Este método es similar a la <ph id="ph1">&lt;xref:System.Xml.XmlConvert.EncodeName%2A&gt;</ph> método excepto en que codifica el carácter de dos puntos, lo que garantiza que el nombre puede utilizarse como parte del nombre local de un nombre completo de espacio de nombres.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.EncodeLocalName(System.String)">
          <source>For example, if you passed this method the invalid name a:b, it returns a_x003a_b, which is a valid local name.</source>
          <target state="translated">Por ejemplo, si se pasa a este método el nombre no válido un: b, devuelve a_x003a_b, que es un nombre local válido.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.EncodeLocalName(System.String)">
          <source>If <ph id="ph1">`name`</ph> is <ph id="ph2">`null`</ph> or <ph id="ph3">`String.Empty`</ph> then you get the same value returned.</source>
          <target state="translated">Si <ph id="ph1">`name`</ph> es <ph id="ph2">`null`</ph> o <ph id="ph3">`String.Empty`</ph> , a continuación, obtendrá el mismo valor devuelto.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.EncodeLocalName(System.String)">
          <source>The following example encodes and decodes names.</source>
          <target state="translated">En el ejemplo siguiente se codifica y descodifica nombres.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.EncodeName(System.String)">
          <source>A name to be translated.</source>
          <target state="translated">Nombre que se va a convertir.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.EncodeName(System.String)">
          <source>Converts the name to a valid XML name.</source>
          <target state="translated">Convierte el nombre en un nombre XML válido.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.EncodeName(System.String)">
          <source>Returns the name with any invalid characters replaced by an escape string.</source>
          <target state="translated">Devuelve el nombre con los caracteres no válidos sustituidos por una cadena de escape.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.EncodeName(System.String)">
          <source>This method translates invalid characters, such as spaces or half-width Katakana, that need to be mapped to XML names without the support or presence of schemas.</source>
          <target state="translated">Este método convierte los caracteres no válidos, como espacios o caracteres Katakana, que es necesario asignar a nombres XML sin la funcionalidad o la presencia de esquemas.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.EncodeName(System.String)">
          <source>The invalid characters are translated into escaped numeric entity encodings.</source>
          <target state="translated">Los caracteres no válidos se convierten en codificaciones de entidad numérica de escape.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.EncodeName(System.String)">
          <source>The escape character is "_".</source>
          <target state="translated">El carácter de escape es "_".</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.EncodeName(System.String)">
          <source>Any XML name character that does not conform to the <bpt id="p1">[</bpt>XML 1.0 spec (fourth edition) recommendation<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept> is escaped as _xHHHH<ph id="ph1">\_</ph>.</source>
          <target state="translated">Cualquier carácter de nombre XML que no se ajusta a la <bpt id="p1">[</bpt>especificaciones de XML 1.0 (cuarta edición) recomendación<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept> es los caracteres de escape con formato _xHHHH<ph id="ph1">\_</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.EncodeName(System.String)">
          <source>The HHHH string stands for the four-digit hexadecimal UCS-2 code for the character in most significant bit first order.</source>
          <target state="translated">La cadena HHHH representa el código UCS-2 hexadecimal de cuatro dígitos para el carácter en orden de primer bit más significativo.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.EncodeName(System.String)">
          <source>For example, the name Order Details is encoded as Order_x0020_Details.</source>
          <target state="translated">Por ejemplo, el nombre Order Details se codifica como Order_x0020_Details.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.EncodeName(System.String)">
          <source>The underscore character does not need to be escaped unless it is followed by a character sequence that together with the underscore can be misinterpreted as an escape sequence when decoding the name.</source>
          <target state="translated">No es necesario que el carácter de subrayado sea de escape a menos que vaya seguido de una secuencia de caracteres que, junto con el carácter de subrayado, se pueda interpretar erróneamente como una secuencia de escape al descodificar el nombre.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.EncodeName(System.String)">
          <source>For example, Order_Details is not encoded, but Order_x0020_ is encoded as Order_x005f_x0020_.</source>
          <target state="translated">Por ejemplo, Order_Details no se codifica, pero Order_x0020_ se codifica como Order_x005f_x0020_.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.EncodeName(System.String)">
          <source>No shortforms are allowed.</source>
          <target state="translated">No se permiten formatos cortos.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.EncodeName(System.String)">
          <source>For example, the forms _x20<ph id="ph1">\_</ph> and __ are not generated.</source>
          <target state="translated">Por ejemplo, el _x20 formularios<ph id="ph1">\_</ph> y __ no se generan.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.EncodeName(System.String)">
          <source>This method guarantees the name is valid according to the XML specification.</source>
          <target state="translated">Este método garantiza que el nombre es válido de acuerdo con la especificación XML.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.EncodeName(System.String)">
          <source>It allows colons in any position, which means the name may still be invalid according to the <bpt id="p1">[</bpt>W3C Namespace Specification<ept id="p1">](http://www.w3.org/TR/REC-xml-names)</ept>.</source>
          <target state="translated">Permite que los dos puntos en cualquier posición, lo que significa que es posible que sigan el nombre no sea válido según el <bpt id="p1">[</bpt>especificación de W3C Namespace<ept id="p1">](http://www.w3.org/TR/REC-xml-names)</ept>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.EncodeName(System.String)">
          <source>To guarantee it is a valid namespace qualified name use <ph id="ph1">&lt;xref:System.Xml.XmlConvert.EncodeLocalName%2A&gt;</ph> for the prefix and local name parts and join the result with a colon.</source>
          <target state="translated">Para garantizar que es un espacio de nombres válido calificar el nombre, utilice <ph id="ph1">&lt;xref:System.Xml.XmlConvert.EncodeLocalName%2A&gt;</ph> para el prefijo local nombre partes y unir el resultado con un signo de dos puntos.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.EncodeName(System.String)">
          <source>The following example encodes and decodes names.</source>
          <target state="translated">En el ejemplo siguiente se codifica y descodifica nombres.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.EncodeNmToken(System.String)">
          <source>The name to be encoded.</source>
          <target state="translated">Nombre que se va a codificar.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.EncodeNmToken(System.String)">
          <source>Verifies the name is valid according to the XML specification.</source>
          <target state="translated">Comprueba que el nombre es válido de acuerdo con la especificación XML.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.EncodeNmToken(System.String)">
          <source>The encoded name.</source>
          <target state="translated">Nombre codificado.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.EncodeNmToken(System.String)">
          <source>This method guarantees that the name is valid according to the XML specification.</source>
          <target state="translated">Este método garantiza que el nombre es válido de acuerdo con la especificación XML.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.EncodeNmToken(System.String)">
          <source>For example, if you passed this method the invalid name 70+, it returns 70_x002b_ which is a valid XML name.</source>
          <target state="translated">Por ejemplo, si se pasa a este método el nombre no válido 70 +, devuelve 70_x002b, que es un nombre XML válido.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.EncodeNmToken(System.String)">
          <source>If <ph id="ph1">`name`</ph> is <ph id="ph2">`null`</ph> or String.Empty then you get the same value returned.</source>
          <target state="translated">Si <ph id="ph1">`name`</ph> es <ph id="ph2">`null`</ph> o String.Empty, a continuación, se obtienen el mismo valor devuelto.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.IsNCNameChar(System.Char)">
          <source>The character to verify as a non-colon character.</source>
          <target state="translated">Carácter que se va a comprobar que no sea un carácter distinto de dos puntos.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.IsNCNameChar(System.Char)">
          <source>Checks whether the passed-in character is a valid non-colon character type.</source>
          <target state="translated">Comprueba si el carácter pasado es un tipo de carácter distinto de dos puntos válido.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.IsNCNameChar(System.Char)">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character is a valid non-colon character type; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el carácter es un tipo de carácter distinto de dos puntos válido; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.IsPublicIdChar(System.Char)">
          <source><ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> object to validate.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> que se va a validar.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.IsPublicIdChar(System.Char)">
          <source>Returns the passed-in character instance if the character in the argument is a valid public id character, otherwise <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Devuelve la instancia de carácter pasada si el carácter del argumento es un carácter de identificador público válido; en caso contrario, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.IsPublicIdChar(System.Char)">
          <source>Returns the passed-in character if the character is a valid public id character, otherwise <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Devuelve el carácter pasado si es un carácter de identificador público válido; en caso contrario, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.IsStartNCNameChar(System.Char)">
          <source>The character to validate.</source>
          <target state="translated">Carácter que se va a validar.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.IsStartNCNameChar(System.Char)">
          <source>Checks if the passed-in character is a valid Start Name Character type.</source>
          <target state="translated">Comprueba si el carácter pasado es un tipo Start Name Character válido.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.IsStartNCNameChar(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character is a valid Start Name Character type; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el carácter es un tipo Start Name Character válido; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.IsStartNCNameChar(System.Char)">
          <source>For details about allowed characters, see the <bpt id="p1">[</bpt>XML 1.0 spec (fourth edition)<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=147985)</ept> recommendation.</source>
          <target state="translated">Para obtener más información sobre los caracteres permitidos, consulte la <bpt id="p1">[</bpt>especificaciones de XML 1.0 (cuarta edición)<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=147985)</ept> recomendación.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.IsWhitespaceChar(System.Char)">
          <source>The character to validate.</source>
          <target state="translated">Carácter que se va a validar.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.IsWhitespaceChar(System.Char)">
          <source>Checks if the passed-in character is a valid XML whitespace character.</source>
          <target state="translated">Comprueba si el carácter pasado es un carácter de espacio en blanco XML válido.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.IsWhitespaceChar(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the passed in character is a valid XML whitespace character; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el carácter pasado es un carácter de espacio en blanco XML válido; en casi contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.IsWhitespaceChar(System.Char)">
          <source>For details about allowed characters, see the <bpt id="p1">[</bpt>XML 1.0 spec (fourth edition)<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=147985)</ept> recommendation.</source>
          <target state="translated">Para obtener más información sobre los caracteres permitidos, consulte la <bpt id="p1">[</bpt>especificaciones de XML 1.0 (cuarta edición)<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=147985)</ept> recomendación.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.IsXmlChar(System.Char)">
          <source>The character to validate.</source>
          <target state="translated">Carácter que se va a validar.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.IsXmlChar(System.Char)">
          <source>Checks if the passed-in character is a valid XML character.</source>
          <target state="translated">Comprueba si el carácter pasado es un carácter XML válido.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.IsXmlChar(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the passed in character is a valid XML character; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el carácter pasado es un carácter XML válido; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.IsXmlChar(System.Char)">
          <source>For details about allowed characters, see the <bpt id="p1">[</bpt>XML 1.0 spec (fourth edition)<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=147985)</ept> recommendation.</source>
          <target state="translated">Para obtener más información sobre los caracteres permitidos, consulte la <bpt id="p1">[</bpt>especificaciones de XML 1.0 (cuarta edición)<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=147985)</ept> recomendación.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.IsXmlSurrogatePair(System.Char,System.Char)">
          <source>The surrogate character to validate.</source>
          <target state="translated">Carácter suplente que se va a validar.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.IsXmlSurrogatePair(System.Char,System.Char)">
          <source>The surrogate character to validate.</source>
          <target state="translated">Carácter suplente que se va a validar.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.IsXmlSurrogatePair(System.Char,System.Char)">
          <source>Checks if the passed-in surrogate pair of characters is a valid XML character.</source>
          <target state="translated">Comprueba si el par de caracteres suplentes pasado es un carácter XML válido.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.IsXmlSurrogatePair(System.Char,System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the passed in surrogate pair of characters is a valid XML character; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el par de caracteres suplemente que se ha pasado es un carácter XML válido; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToBoolean(System.String)">
          <source>The string to convert.</source>
          <target state="translated">Cadena que se va a convertir.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToBoolean(System.String)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> en un <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToBoolean(System.String)">
          <source>A <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value, that is, <ph id="ph2">&lt;see langword="true" /&gt;</ph> or <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>; es decir, <ph id="ph2">&lt;see langword="true" /&gt;</ph> o <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToBoolean(System.String)">
          <source>Valid strings are "1" or "true" for <ph id="ph1">`true`</ph> and "0" or "false" for <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Las cadenas válidas son "1" o "true" para <ph id="ph1">`true`</ph> y "0" o "false" para <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToBoolean(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToBoolean(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> does not represent a <ph id="ph2">&lt;see langword="Boolean" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> no representa un valor <ph id="ph2">&lt;see langword="Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToByte(System.String)">
          <source>The string to convert.</source>
          <target state="translated">Cadena que se va a convertir.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToByte(System.String)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> en un <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToByte(System.String)">
          <source>A <ph id="ph1">&lt;see langword="Byte" /&gt;</ph> equivalent of the string.</source>
          <target state="translated">Equivalente <ph id="ph1">&lt;see langword="Byte" /&gt;</ph> de la cadena.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToByte(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToByte(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not in the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> no tiene el formato correcto.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToByte(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> representa un número menor que <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToChar(System.String)">
          <source>The string containing a single character to convert.</source>
          <target state="translated">Cadena que contiene un carácter único que se va a convertir.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToChar(System.String)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> en un <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToChar(System.String)">
          <source>A <ph id="ph1">&lt;see langword="Char" /&gt;</ph> representing the single character.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Char" /&gt;</ph> que representa el carácter único.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToChar(System.String)">
          <source>The value of the <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor del parámetro <ph id="ph1">&lt;paramref name="s" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToChar(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parameter contains more than one character.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="s" /&gt;</ph> contiene más de un carácter.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlConvert">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> en un <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String)">
          <source>The string to convert.</source>
          <target state="translated">Cadena que se va a convertir.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> en un <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String)">
          <source>A <ph id="ph1">&lt;see langword="DateTime" /&gt;</ph> equivalent of the string.</source>
          <target state="translated">Equivalente <ph id="ph1">&lt;see langword="DateTime" /&gt;</ph> de la cadena.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToDateTime(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlConvert.ToDateTime%28System.String%29?displayProperty=nameWithType&gt;</ph> method is obsolete in the 2.0 version of the .NET Framework and has been replaced by the <ph id="ph2">&lt;xref:System.Xml.XmlConvert.ToDateTime%28System.String%2CSystem.Xml.XmlDateTimeSerializationMode%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.XmlConvert.ToDateTime%28System.String%29?displayProperty=nameWithType&gt;</ph> método está obsoleto en la versión 2.0 de .NET Framework y se ha reemplazado por la <ph id="ph2">&lt;xref:System.Xml.XmlConvert.ToDateTime%28System.String%2CSystem.Xml.XmlDateTimeSerializationMode%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToDateTime(System.String)">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Xml.XmlConvert.ToDouble%2A&gt;</ph> and <ph id="ph2">`ToDateTime`</ph> to read strongly typed data.</source>
          <target state="translated">En el ejemplo siguiente se utiliza <ph id="ph1">&lt;xref:System.Xml.XmlConvert.ToDouble%2A&gt;</ph> y <ph id="ph2">`ToDateTime`</ph> para leer datos fuertemente tipados.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToDateTime(System.String)">
          <source>The example uses the file, <ph id="ph1">`orderData.xml`</ph>, as input.</source>
          <target state="translated">En el ejemplo se utiliza el archivo <ph id="ph1">`orderData.xml`</ph>como entrada.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is an empty string or is not in the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> es una cadena vacía o no tiene el formato correcto.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)">
          <source>The string to convert.</source>
          <target state="translated">Cadena que se va a convertir.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)">
          <source>The format structure to apply to the converted <ph id="ph1">&lt;see langword="DateTime" /&gt;</ph>.</source>
          <target state="translated">Estructura de formato que se va a aplicar al <ph id="ph1">&lt;see langword="DateTime" /&gt;</ph> convertido.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)">
          <source>Valid formats include "yyyy-MM-ddTHH:mm:sszzzzzz" and its subsets.</source>
          <target state="translated">Entre los formatos válidos se incluyen "yyyy-MM-ddTHH:mm:sszzzzzz" y sus subconjuntos.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)">
          <source>The string is validated against this format.</source>
          <target state="translated">La cadena se valida comparándola con este formato.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> en un <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)">
          <source>A <ph id="ph1">&lt;see langword="DateTime" /&gt;</ph> equivalent of the string.</source>
          <target state="translated">Equivalente <ph id="ph1">&lt;see langword="DateTime" /&gt;</ph> de la cadena.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> or <ph id="ph2">&lt;paramref name="format" /&gt;</ph> is String.Empty</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> o <ph id="ph2">&lt;paramref name="format" /&gt;</ph> es String.Empty</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> does not contain a date and time that corresponds to <ph id="ph2">&lt;paramref name="format" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> no contiene ninguna fecha ni hora que se correspondan con <ph id="ph2">&lt;paramref name="format" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])">
          <source>The string to convert.</source>
          <target state="translated">Cadena que se va a convertir.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])">
          <source>An array containing the format structures to apply to the converted <ph id="ph1">&lt;see langword="DateTime" /&gt;</ph>.</source>
          <target state="translated">Matriz que contiene las estructuras de formato que se van a aplicar al <ph id="ph1">&lt;see langword="DateTime" /&gt;</ph> convertido.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])">
          <source>Valid formats include "yyyy-MM-ddTHH:mm:sszzzzzz" and its subsets.</source>
          <target state="translated">Entre los formatos válidos se incluyen "yyyy-MM-ddTHH:mm:sszzzzzz" y sus subconjuntos.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> en un <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])">
          <source>A <ph id="ph1">&lt;see langword="DateTime" /&gt;</ph> equivalent of the string.</source>
          <target state="translated">Equivalente <ph id="ph1">&lt;see langword="DateTime" /&gt;</ph> de la cadena.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])">
          <source>This method allows multiple formats for the string to be validated against.</source>
          <target state="translated">Este método permite varios formatos para que se validan con la cadena.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> or an element of <ph id="ph2">&lt;paramref name="formats" /&gt;</ph> is String.Empty</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> o un elemento de <ph id="ph2">&lt;paramref name="formats" /&gt;</ph> es String.Empty</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> does not contain a date and time that corresponds to any of the elements of <ph id="ph2">&lt;paramref name="formats" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> no contiene una fecha y hora que se correspondan con ninguno de los elementos de <ph id="ph2">&lt;paramref name="formats" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> value to convert.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que se va a convertir.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlDateTimeSerializationMode" /&gt;</ph> values that specify whether the date should be converted to local time or preserved as Coordinated Universal Time (UTC), if it is a UTC date.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Xml.XmlDateTimeSerializationMode" /&gt;</ph> que especifican si la fecha se debe pasar a la hora local o mantenerse como hora universal coordinada (UTC), si se trata de una fecha de UTC.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> using the <ph id="ph3">&lt;see cref="T:System.Xml.XmlDateTimeSerializationMode" /&gt;</ph> specified</source>
          <target state="translated">Convierte <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> en un <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> mediante el <ph id="ph3">&lt;see cref="T:System.Xml.XmlDateTimeSerializationMode" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> equivalent of the <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> equivalente de la <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)">
          <source>The <ph id="ph1">&lt;paramref name="dateTimeOption" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor <ph id="ph1">&lt;paramref name="dateTimeOption" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is an empty string or is not in a valid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> es una cadena vacía o su formato no es válido.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlConvert">
          <source>Converts the supplied <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte la <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> proporcionada en un equivalente de <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
          <source>The string to convert.</source>
          <target state="translated">Cadena que se va a convertir.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> The string must conform to a subset of the W3C Recommendation for the XML dateTime type.</source>
          <target state="translated"><bpt id="p1">**</bpt>Nota<ept id="p1">**</ept> La cadena debe ajustarse a un subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
          <source>For more information see <ph id="ph1">http://www.w3.org/TR/xmlschema-2/#dateTime</ph>.</source>
          <target state="translated">Para obtener más información, vea <ph id="ph1">http://www.w3.org/TR/xmlschema-2/#dateTime</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
          <source>Converts the supplied <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte la <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> proporcionada en un equivalente de <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> equivalent of the supplied string.</source>
          <target state="translated">Equivalente de <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> de la cadena proporcionada.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
          <source>When more than seven digits are specified for fractional seconds, the value is rounded.</source>
          <target state="translated">Cuando se especifican más de siete dígitos para las fracciones de segundo, el valor se redondea.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
          <source>For example, 00000004 becomes 0000000 and 00000005 becomes 0000001.</source>
          <target state="translated">Por ejemplo, 00000004 se redondea a 0000000 y 00000005 a 0000001.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
          <source>The following example demonstrates how to read a string from an XML file and use the <ph id="ph1">&lt;xref:System.Xml.XmlConvert.ToDateTimeOffset%2A&gt;</ph> method to convert the string to a <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> type.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo leer una cadena de un archivo XML y usar la <ph id="ph1">&lt;xref:System.Xml.XmlConvert.ToDateTimeOffset%2A&gt;</ph> método para convertir la cadena a un <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> tipo.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
          <source>The example uses the transactions.xml file.</source>
          <target state="translated">En el ejemplo se usa el archivo transactions.xml.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
          <source>The argument passed to this method is outside the range of allowable values.</source>
          <target state="translated">El argumento pasado a este método está fuera del intervalo de valores permitidos.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
          <source>For information about allowable values, see <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</source>
          <target state="translated">Para obtener información sobre los valores permitidos, vea <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
          <source>The argument passed to this method does not conform to a subset of the W3C Recommendations for the XML dateTime type.</source>
          <target state="translated">El argumento pasado a este método no se ajusta a un subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
          <source>For more information see <bpt id="p1">[</bpt><ph id="ph1">http://www.w3.org/TR/xmlschema-2/#dateTime</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=97914)</ept>.</source>
          <target state="translated">Para obtener más información, vea <bpt id="p1">[</bpt><ph id="ph1">http://www.w3.org/TR/xmlschema-2/#dateTime</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=97914)</ept>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
          <source>The string to convert.</source>
          <target state="translated">Cadena que se va a convertir.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
          <source>The format from which <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> is converted.</source>
          <target state="translated">Formato desde el que se convierte <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
          <source>The format parameter can be any subset of the W3C Recommendation for the XML dateTime type.</source>
          <target state="translated">El parámetro de formato puede ser cualquier subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
          <source>(For more information see <ph id="ph1">http://www.w3.org/TR/xmlschema-2/#dateTime.)</ph> The string <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> is validated against this format.</source>
          <target state="translated">Para obtener más información, vea <ph id="ph1">http://www.w3.org/TR/xmlschema-2/#dateTime.)</ph> La cadena <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> se valida comparándola con este formato.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
          <source>Converts the supplied <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte la <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> proporcionada en un equivalente de <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> equivalent of the supplied string.</source>
          <target state="translated">Equivalente de <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> de la cadena proporcionada.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
          <source>If the offset specified within the input string will cause an overflow in the deserialized representation of the DateTimeOffset, a FormatException is thrown.</source>
          <target state="translated">Si el desplazamiento especificado dentro de la cadena de entrada va a producir un desbordamiento en la representación deserializada de DateTimeOffset, se inicia.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
          <source>When more than seven digits are specified for fractional seconds, the value is rounded.</source>
          <target state="translated">Cuando se especifican más de siete dígitos para las fracciones de segundo, el valor se redondea.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
          <source>For example, 00000004 becomes 0000000 and 00000005 becomes 0000001.</source>
          <target state="translated">Por ejemplo, 00000004 se redondea a 0000000 y 00000005 a 0000001.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
          <source>The following example demonstrates how to read a string from an XML file and use the <ph id="ph1">&lt;xref:System.Xml.XmlConvert.ToDateTimeOffset%2A&gt;</ph> method to convert the string to a <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> type.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo leer una cadena de un archivo XML y usar la <ph id="ph1">&lt;xref:System.Xml.XmlConvert.ToDateTimeOffset%2A&gt;</ph> método para convertir la cadena a un <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> tipo.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
          <source>The input string is validated against the specified format before being converted.</source>
          <target state="translated">La cadena de entrada se valida con el formato especificado antes de que se va a convertir.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
          <source>The example uses the transactions.xml file.</source>
          <target state="translated">En el ejemplo se usa el archivo transactions.xml.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> or <ph id="ph2">&lt;paramref name="format" /&gt;</ph> is an empty string or is not in the specified format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> o <ph id="ph2">&lt;paramref name="format" /&gt;</ph> es una cadena vacía o no tiene el formato especificado.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])">
          <source>The string to convert.</source>
          <target state="translated">Cadena que se va a convertir.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])">
          <source>An array of formats from which <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> can be converted.</source>
          <target state="translated">Matriz de formatos a partir de los cuales puede convertirse <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])">
          <source>Each format in <bpt id="p1">&lt;c&gt;</bpt>formats<ept id="p1">&lt;/c&gt;</ept> can be any subset of the W3C Recommendation for the XML dateTime type.</source>
          <target state="translated">Cada formato de <bpt id="p1">&lt;c&gt;</bpt>formats<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])">
          <source>(For more information see <ph id="ph1">http://www.w3.org/TR/xmlschema-2/#dateTime.)</ph> The string <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> is validated against one of these formats.</source>
          <target state="translated">Para obtener más información, vea <ph id="ph1">http://www.w3.org/TR/xmlschema-2/#dateTime.)</ph> La cadena <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> se valida comparándola con uno de estos formatos.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])">
          <source>Converts the supplied <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte la <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> proporcionada en un equivalente de <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> equivalent of the supplied string.</source>
          <target state="translated">Equivalente de <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> de la cadena proporcionada.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])">
          <source>If the offset specified within the input string will cause an overflow in the deserialized representation of the DateTimeOffset, a FormatException is thrown.</source>
          <target state="translated">Si el desplazamiento especificado dentro de la cadena de entrada va a producir un desbordamiento en la representación deserializada de DateTimeOffset, se inicia.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])">
          <source>When more than seven digits are specified for fractional seconds, the value is rounded.</source>
          <target state="translated">Cuando se especifican más de siete dígitos para las fracciones de segundo, el valor se redondea.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])">
          <source>For example, 00000004 becomes 0000000 and 00000005 becomes 0000001.</source>
          <target state="translated">Por ejemplo, 00000004 se redondea a 0000000 y 00000005 a 0000001.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])">
          <source>The following example demonstrates how to read a string from an XML file and use the <ph id="ph1">&lt;xref:System.Xml.XmlConvert.ToDateTimeOffset%2A&gt;</ph> method to convert the string to a <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> type.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo leer una cadena de un archivo XML y usar la <ph id="ph1">&lt;xref:System.Xml.XmlConvert.ToDateTimeOffset%2A&gt;</ph> método para convertir la cadena a un <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> tipo.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])">
          <source>The input string must validate against one of the specified formats before being converted.</source>
          <target state="translated">Debe validar la cadena de entrada en uno de los formatos especificados antes de que se va a convertir.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])">
          <source>The example uses the transactions.xml file.</source>
          <target state="translated">En el ejemplo se usa el archivo transactions.xml.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDecimal(System.String)">
          <source>The string to convert.</source>
          <target state="translated">Cadena que se va a convertir.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDecimal(System.String)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> en un <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDecimal(System.String)">
          <source>A <ph id="ph1">&lt;see langword="Decimal" /&gt;</ph> equivalent of the string.</source>
          <target state="translated">Equivalente <ph id="ph1">&lt;see langword="Decimal" /&gt;</ph> de la cadena.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDecimal(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDecimal(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not in the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> no tiene el formato correcto.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDecimal(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> representa un número menor que <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDouble(System.String)">
          <source>The string to convert.</source>
          <target state="translated">Cadena que se va a convertir.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDouble(System.String)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> en un <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDouble(System.String)">
          <source>A <ph id="ph1">&lt;see langword="Double" /&gt;</ph> equivalent of the string.</source>
          <target state="translated">Equivalente <ph id="ph1">&lt;see langword="Double" /&gt;</ph> de la cadena.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToDouble(System.String)">
          <source>If <ph id="ph1">`s`</ph> is INF or -INF, this method returns Double.PositiveInfinity or Double.NegativeInfinity respectively.</source>
          <target state="translated">Si <ph id="ph1">`s`</ph> es INF o -INF, este método devuelve Double.PositiveInfinity o Double.NegativeInfinity, respectivamente.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToDouble(System.String)">
          <source>The following example uses <ph id="ph1">`ToDouble`</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlConvert.ToDateTime%2A&gt;</ph> to read strongly typed data.</source>
          <target state="translated">En el ejemplo siguiente se utiliza <ph id="ph1">`ToDouble`</ph> y <ph id="ph2">&lt;xref:System.Xml.XmlConvert.ToDateTime%2A&gt;</ph> para leer datos fuertemente tipados.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToDouble(System.String)">
          <source>The example uses the file, <ph id="ph1">`orderData.xml`</ph>, as input.</source>
          <target state="translated">En el ejemplo se utiliza el archivo <ph id="ph1">`orderData.xml`</ph>como entrada.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDouble(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDouble(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not in the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> no tiene el formato correcto.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToDouble(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Double.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> representa un número menor que <ph id="ph2">&lt;see cref="F:System.Double.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToGuid(System.String)">
          <source>The string to convert.</source>
          <target state="translated">Cadena que se va a convertir.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToGuid(System.String)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> en un <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToGuid(System.String)">
          <source>A <ph id="ph1">&lt;see langword="Guid" /&gt;</ph> equivalent of the string.</source>
          <target state="translated">Equivalente <ph id="ph1">&lt;see langword="Guid" /&gt;</ph> de la cadena.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToInt16(System.String)">
          <source>The string to convert.</source>
          <target state="translated">Cadena que se va a convertir.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToInt16(System.String)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Int16" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> en un <ph id="ph2">&lt;see cref="T:System.Int16" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToInt16(System.String)">
          <source>An <ph id="ph1">&lt;see langword="Int16" /&gt;</ph> equivalent of the string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Int16" /&gt;</ph> equivalente de la cadena.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToInt16(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToInt16(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not in the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> no tiene el formato correcto.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToInt16(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> representa un número menor que <ph id="ph2">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToInt32(System.String)">
          <source>The string to convert.</source>
          <target state="translated">Cadena que se va a convertir.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToInt32(System.String)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> en un <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToInt32(System.String)">
          <source>An <ph id="ph1">&lt;see langword="Int32" /&gt;</ph> equivalent of the string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Int32" /&gt;</ph> equivalente de la cadena.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToInt32(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToInt32(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not in the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> no tiene el formato correcto.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToInt32(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> representa un número menor que <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToInt64(System.String)">
          <source>The string to convert.</source>
          <target state="translated">Cadena que se va a convertir.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToInt64(System.String)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> en un <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToInt64(System.String)">
          <source>An <ph id="ph1">&lt;see langword="Int64" /&gt;</ph> equivalent of the string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Int64" /&gt;</ph> equivalente de la cadena.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToInt64(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToInt64(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not in the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> no tiene el formato correcto.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToInt64(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> representa un número menor que <ph id="ph2">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToSByte(System.String)">
          <source>The string to convert.</source>
          <target state="translated">Cadena que se va a convertir.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToSByte(System.String)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.SByte" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> en un <ph id="ph2">&lt;see cref="T:System.SByte" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToSByte(System.String)">
          <source>An <ph id="ph1">&lt;see langword="SByte" /&gt;</ph> equivalent of the string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="SByte" /&gt;</ph> equivalente de la cadena.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToSByte(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToSByte(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not in the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> no tiene el formato correcto.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToSByte(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> representa un número menor que <ph id="ph2">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToSingle(System.String)">
          <source>The string to convert.</source>
          <target state="translated">Cadena que se va a convertir.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToSingle(System.String)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> en un <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToSingle(System.String)">
          <source>A <ph id="ph1">&lt;see langword="Single" /&gt;</ph> equivalent of the string.</source>
          <target state="translated">Equivalente <ph id="ph1">&lt;see langword="Single" /&gt;</ph> de la cadena.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToSingle(System.String)">
          <source>If <ph id="ph1">`s`</ph> is INF or -INF, this method returns Single.PositiveInfinity or Single.NegativeInfinity respectively.</source>
          <target state="translated">Si <ph id="ph1">`s`</ph> es INF o -INF, este método devuelve Single.PositiveInfinity o Single.NegativeInfinity, respectivamente.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToSingle(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToSingle(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not in the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> no tiene el formato correcto.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToSingle(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Single.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> representa un número menor que <ph id="ph2">&lt;see cref="F:System.Single.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlConvert">
          <source>Converts strongly typed data to an equivalent <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> representation.</source>
          <target state="translated">Convierte los datos fuertemente tipados en la representación de un <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Boolean)">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Boolean)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Convierte la clase <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> en una clase <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Boolean)">
          <source>A string representation of the <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>, that is, "true" or "false".</source>
          <target state="translated">Representación de cadena de <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>; es decir, "true" o "false".</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Byte)">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Byte)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Convierte la clase <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> en una clase <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Byte)">
          <source>A string representation of the <ph id="ph1">&lt;see langword="Byte" /&gt;</ph>.</source>
          <target state="translated">Representación de cadena de <ph id="ph1">&lt;see langword="Byte" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Char)">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Char)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Convierte la clase <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> en una clase <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Char)">
          <source>A string representation of the <ph id="ph1">&lt;see langword="Char" /&gt;</ph>.</source>
          <target state="translated">Representación de cadena de <ph id="ph1">&lt;see langword="Char" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.DateTime)">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.DateTime)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Convierte la clase <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> en una clase <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.DateTime)">
          <source>A string representation of the <ph id="ph1">&lt;see langword="DateTime" /&gt;</ph> in the format yyyy-MM-ddTHH:mm:ss where 'T' is a constant literal.</source>
          <target state="translated">Representación de cadena de <ph id="ph1">&lt;see langword="DateTime" /&gt;</ph> con el formato yyyy-MM-ddTHH:mm:ss donde "T" es una constante literal.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToString(System.DateTime)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlConvert.ToString%28System.DateTime%29?displayProperty=nameWithType&gt;</ph> method is obsolete in the 2.0 version of the .NET Framework and has been replaced with the <ph id="ph2">&lt;xref:System.Xml.XmlConvert.ToString%28System.DateTime%2CSystem.Xml.XmlDateTimeSerializationMode%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.XmlConvert.ToString%28System.DateTime%29?displayProperty=nameWithType&gt;</ph> método está obsoleto en la versión 2.0 de .NET Framework y se ha reemplazado por la <ph id="ph2">&lt;xref:System.Xml.XmlConvert.ToString%28System.DateTime%2CSystem.Xml.XmlDateTimeSerializationMode%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset)">
          <source>The <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> to be converted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> que va a convertirse.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset)">
          <source>Converts the supplied <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Convierte el <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> proporcionado en una <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> representation of the supplied <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</source>
          <target state="translated">Representación de tipo <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> del <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> proporcionado.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset)">
          <source>The following example converts a <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> representation of the current time to a <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">El ejemplo siguiente se convierte un <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> representación de la hora actual en un <ph id="ph2">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Decimal)">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Decimal)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Convierte la clase <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> en una clase <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Decimal)">
          <source>A string representation of the <ph id="ph1">&lt;see langword="Decimal" /&gt;</ph>.</source>
          <target state="translated">Representación de cadena de <ph id="ph1">&lt;see langword="Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Double)">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Double)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Convierte la clase <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> en una clase <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Double)">
          <source>A string representation of the <ph id="ph1">&lt;see langword="Double" /&gt;</ph>.</source>
          <target state="translated">Representación de cadena de <ph id="ph1">&lt;see langword="Double" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToString(System.Double)">
          <source>If <ph id="ph1">`value`</ph> is Double.PositiveInfinity or Double.NegativeInfinity, this method returns the string INF or -INF respectively.</source>
          <target state="translated">Si <ph id="ph1">`value`</ph> es Double.PositiveInfinity o Double.NegativeInfinity, este método devuelve la cadena INF o -INF, respectivamente.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToString(System.Double)">
          <source>The following example, converts data types to string and then writes the information out to the console.</source>
          <target state="translated">El ejemplo siguiente, convierte los tipos de datos en cadena y, a continuación, escribe la información en la consola.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Guid)">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Guid)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Convierte la clase <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> en una clase <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Guid)">
          <source>A string representation of the <ph id="ph1">&lt;see langword="Guid" /&gt;</ph>.</source>
          <target state="translated">Representación de cadena de <ph id="ph1">&lt;see langword="Guid" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Int16)">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Int16)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Convierte la clase <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph> en una clase <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Int16)">
          <source>A string representation of the <ph id="ph1">&lt;see langword="Int16" /&gt;</ph>.</source>
          <target state="translated">Representación de cadena de <ph id="ph1">&lt;see langword="Int16" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToString(System.Int16)">
          <source>The following example, converts data types to string and then writes the information out to the console.</source>
          <target state="translated">El ejemplo siguiente, convierte los tipos de datos en cadena y, a continuación, escribe la información en la consola.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Int32)">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Int32)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Convierte la clase <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> en una clase <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Int32)">
          <source>A string representation of the <ph id="ph1">&lt;see langword="Int32" /&gt;</ph>.</source>
          <target state="translated">Representación de cadena de <ph id="ph1">&lt;see langword="Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Int64)">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Int64)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Convierte la clase <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> en una clase <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Int64)">
          <source>A string representation of the <ph id="ph1">&lt;see langword="Int64" /&gt;</ph>.</source>
          <target state="translated">Representación de cadena de <ph id="ph1">&lt;see langword="Int64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.SByte)">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.SByte)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Convierte la clase <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph> en una clase <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.SByte)">
          <source>A string representation of the <ph id="ph1">&lt;see langword="SByte" /&gt;</ph>.</source>
          <target state="translated">Representación de cadena de <ph id="ph1">&lt;see langword="SByte" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Single)">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Single)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Convierte la clase <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> en una clase <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.Single)">
          <source>A string representation of the <ph id="ph1">&lt;see langword="Single" /&gt;</ph>.</source>
          <target state="translated">Representación de cadena de <ph id="ph1">&lt;see langword="Single" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToString(System.Single)">
          <source>If <ph id="ph1">`value`</ph> is Single.PositiveInfinity or Single.NegativeInfinity, this method returns the string INF or -INF respectively.</source>
          <target state="translated">Si <ph id="ph1">`value`</ph> es Single.PositiveInfinity o Single.NegativeInfinity, este método devuelve la cadena INF o -INF, respectivamente.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.TimeSpan)">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.TimeSpan)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Convierte la clase <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> en una clase <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.TimeSpan)">
          <source>A string representation of the <ph id="ph1">&lt;see langword="TimeSpan" /&gt;</ph>.</source>
          <target state="translated">Representación de cadena de <ph id="ph1">&lt;see langword="TimeSpan" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.UInt16)">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.UInt16)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Convierte la clase <ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph> en una clase <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.UInt16)">
          <source>A string representation of the <ph id="ph1">&lt;see langword="UInt16" /&gt;</ph>.</source>
          <target state="translated">Representación de cadena de <ph id="ph1">&lt;see langword="UInt16" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.UInt32)">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.UInt32)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Convierte la clase <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> en una clase <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.UInt32)">
          <source>A string representation of the <ph id="ph1">&lt;see langword="UInt32" /&gt;</ph>.</source>
          <target state="translated">Representación de cadena de <ph id="ph1">&lt;see langword="UInt32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.UInt64)">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.UInt64)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Convierte la clase <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> en una clase <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.UInt64)">
          <source>A string representation of the <ph id="ph1">&lt;see langword="UInt64" /&gt;</ph>.</source>
          <target state="translated">Representación de cadena de <ph id="ph1">&lt;see langword="UInt64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.DateTime,System.String)">
          <source>The value to convert.</source>
          <target state="translated">Valor que se va a convertir.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.DateTime,System.String)">
          <source>The format structure that defines how to display the converted string.</source>
          <target state="translated">Estructura de formato que define cómo se muestra la cadena convertida.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.DateTime,System.String)">
          <source>Valid formats include "yyyy-MM-ddTHH:mm:sszzzzzz" and its subsets.</source>
          <target state="translated">Entre los formatos válidos se incluyen "yyyy-MM-ddTHH:mm:sszzzzzz" y sus subconjuntos.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.DateTime,System.String)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Convierte la clase <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> en una clase <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.DateTime,System.String)">
          <source>A string representation of the <ph id="ph1">&lt;see langword="DateTime" /&gt;</ph> in the specified format.</source>
          <target state="translated">Representación de cadena de <ph id="ph1">&lt;see langword="DateTime" /&gt;</ph> en el formato especificado.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToString(System.DateTime,System.String)">
          <source>The following example, converts data types to string and then writes the information out to the console.</source>
          <target state="translated">El ejemplo siguiente, convierte los tipos de datos en cadena y, a continuación, escribe la información en la consola.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.DateTime,System.Xml.XmlDateTimeSerializationMode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> value to convert.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> que se va a convertir.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.DateTime,System.Xml.XmlDateTimeSerializationMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlDateTimeSerializationMode" /&gt;</ph> values that specify how to treat the <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> value.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Xml.XmlDateTimeSerializationMode" /&gt;</ph> que especifica cómo tratar el valor <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.DateTime,System.Xml.XmlDateTimeSerializationMode)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> using the <ph id="ph3">&lt;see cref="T:System.Xml.XmlDateTimeSerializationMode" /&gt;</ph> specified.</source>
          <target state="translated">Convierte <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> en <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> mediante el <ph id="ph3">&lt;see cref="T:System.Xml.XmlDateTimeSerializationMode" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.DateTime,System.Xml.XmlDateTimeSerializationMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> equivalent of the <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> equivalente de la <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.DateTime,System.Xml.XmlDateTimeSerializationMode)">
          <source>The <ph id="ph1">&lt;paramref name="dateTimeOption" /&gt;</ph> value is not valid.</source>
          <target state="translated">El valor <ph id="ph1">&lt;paramref name="dateTimeOption" /&gt;</ph> no es válido.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.DateTime,System.Xml.XmlDateTimeSerializationMode)">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> or <ph id="ph2">&lt;paramref name="dateTimeOption" /&gt;</ph> value is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;paramref name="value" /&gt;</ph> o <ph id="ph2">&lt;paramref name="dateTimeOption" /&gt;</ph> es <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> to be converted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> que va a convertirse.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset,System.String)">
          <source>The format to which <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> is converted.</source>
          <target state="translated">Formato al que se convierte <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset,System.String)">
          <source>The format parameter can be any subset of the W3C Recommendation for the XML dateTime type.</source>
          <target state="translated">El parámetro de formato puede ser cualquier subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset,System.String)">
          <source>(For more information see <ph id="ph1">http://www.w3.org/TR/xmlschema-2/#dateTime.)</ph></source>
          <target state="translated">Para obtener más información, vea <ph id="ph1">http://www.w3.org/TR/xmlschema-2/#dateTime.)</ph></target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset,System.String)">
          <source>Converts the supplied <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> in the specified format.</source>
          <target state="translated">Convierte el <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> proporcionado en una <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> con el formato especificado.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> representation in the specified format of the supplied <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</source>
          <target state="translated">Representación <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> con el formato especificado del <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> proporcionado.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset,System.String)">
          <source>The following example converts a <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> representation of the current time to a <ph id="ph2">&lt;xref:System.String&gt;</ph> in the specified format.</source>
          <target state="translated">El ejemplo siguiente se convierte un <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> representación de la hora actual en un <ph id="ph2">&lt;xref:System.String&gt;</ph> en el formato especificado.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToTimeSpan(System.String)">
          <source>The string to convert.</source>
          <target state="translated">Cadena que se va a convertir.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToTimeSpan(System.String)">
          <source>The string format must conform to the W3C XML Schema Part 2: Datatypes recommendation for duration.</source>
          <target state="translated">El formato de cadena debe cumplir la recomendación sobre la duración del Consorcio W3C "XML Schema Part 2: Datatypes".</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToTimeSpan(System.String)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> en un <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToTimeSpan(System.String)">
          <source>A <ph id="ph1">&lt;see langword="TimeSpan" /&gt;</ph> equivalent of the string.</source>
          <target state="translated">Equivalente <ph id="ph1">&lt;see langword="TimeSpan" /&gt;</ph> de la cadena.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToTimeSpan(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not in correct format to represent a <ph id="ph2">&lt;see langword="TimeSpan" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> no tiene el formato correcto para representar un valor <ph id="ph2">&lt;see langword="TimeSpan" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToUInt16(System.String)">
          <source>The string to convert.</source>
          <target state="translated">Cadena que se va a convertir.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToUInt16(System.String)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.UInt16" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> en un <ph id="ph2">&lt;see cref="T:System.UInt16" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToUInt16(System.String)">
          <source>A <ph id="ph1">&lt;see langword="UInt16" /&gt;</ph> equivalent of the string.</source>
          <target state="translated">Equivalente <ph id="ph1">&lt;see langword="UInt16" /&gt;</ph> de la cadena.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToUInt16(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToUInt16(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not in the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> no tiene el formato correcto.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToUInt16(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.UInt16.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> representa un número menor que <ph id="ph2">&lt;see cref="F:System.UInt16.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToUInt32(System.String)">
          <source>The string to convert.</source>
          <target state="translated">Cadena que se va a convertir.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToUInt32(System.String)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> en un <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToUInt32(System.String)">
          <source>A <ph id="ph1">&lt;see langword="UInt32" /&gt;</ph> equivalent of the string.</source>
          <target state="translated">Equivalente <ph id="ph1">&lt;see langword="UInt32" /&gt;</ph> de la cadena.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToUInt32(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToUInt32(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not in the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> no tiene el formato correcto.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToUInt32(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.UInt32.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> representa un número menor que <ph id="ph2">&lt;see cref="F:System.UInt32.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToUInt64(System.String)">
          <source>The string to convert.</source>
          <target state="translated">Cadena que se va a convertir.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToUInt64(System.String)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph> equivalent.</source>
          <target state="translated">Convierte <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> en un <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph> equivalente.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToUInt64(System.String)">
          <source>A <ph id="ph1">&lt;see langword="UInt64" /&gt;</ph> equivalent of the string.</source>
          <target state="translated">Equivalente <ph id="ph1">&lt;see langword="UInt64" /&gt;</ph> de la cadena.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToUInt64(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToUInt64(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not in the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> no tiene el formato correcto.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.ToUInt64(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.UInt64.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> representa un número menor que <ph id="ph2">&lt;see cref="F:System.UInt64.MinValue" /&gt;</ph> o mayor que <ph id="ph3">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyName(System.String)">
          <source>The name to verify.</source>
          <target state="translated">Nombre que se va a comprobar.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyName(System.String)">
          <source>Verifies that the name is a valid name according to the W3C Extended Markup Language recommendation.</source>
          <target state="translated">Comprueba que el nombre sea válido de acuerdo con la recomendación sobre el lenguaje de marcado extensible del Consorcio W3C.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyName(System.String)">
          <source>The name, if it is a valid XML name.</source>
          <target state="translated">Nombre, si es un nombre XML válido.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.VerifyName(System.String)">
          <source>This method can be used with the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> class in the following manner.</source>
          <target state="translated">Este método puede utilizarse con la <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> clase de la siguiente manera.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.VerifyName(System.String)">
          <source>The following example uses the <ph id="ph1">`VerifyName`</ph> method to write an element name.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">`VerifyName`</ph> método para escribir un nombre de elemento.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyName(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is not a valid XML name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> no es un nombre XML válido.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyName(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or String.Empty.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph> o String.Empty.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyNCName(System.String)">
          <source>The name to verify.</source>
          <target state="translated">Nombre que se va a comprobar.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyNCName(System.String)">
          <source>Verifies that the name is a valid <ph id="ph1">&lt;see langword="NCName" /&gt;</ph> according to the W3C Extended Markup Language recommendation.</source>
          <target state="translated">Comprueba que el nombre sea un <ph id="ph1">&lt;see langword="NCName" /&gt;</ph> válido de acuerdo con la recomendación sobre el lenguaje de marcado extensible del Consorcio W3C.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyNCName(System.String)">
          <source>An <ph id="ph1">&lt;see langword="NCName" /&gt;</ph> is a name that cannot contain a colon.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="NCName" /&gt;</ph> es un nombre que no puede contener un carácter de dos puntos.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyNCName(System.String)">
          <source>The name, if it is a valid NCName.</source>
          <target state="translated">Nombre, si es un nombre NCName válido.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyNCName(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <bpt id="p1">&lt;c&gt;</bpt>String.Empty<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph> o <bpt id="p1">&lt;c&gt;</bpt>String.Empty<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyNCName(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is not a valid non-colon name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> no es un nombre distinto de dos puntos válido.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyNMTOKEN(System.String)">
          <source>The string you wish to verify.</source>
          <target state="translated">La cadena que desea comprobar.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyNMTOKEN(System.String)">
          <source>Verifies that the string is a valid NMTOKEN according to the W3C XML Schema Part2: Datatypes recommendation</source>
          <target state="translated">Comprueba que la cadena es un NMTOKEN válido según la recomendación "XML Schema Part 2: Datatypes" del esquema XML del Consorcio W3C.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyNMTOKEN(System.String)">
          <source>The name token, if it is a valid NMTOKEN.</source>
          <target state="translated">Token del nombre, si es un NMTOKEN válido.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.VerifyNMTOKEN(System.String)">
          <source>This method ensures that the name token follows the proper syntax for a valid NMTOKEN.</source>
          <target state="translated">Este método garantiza que el token de nombre sigue la sintaxis correcta para un NMTOKEN válido.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.VerifyNMTOKEN(System.String)">
          <source>It can be used in the following manner:</source>
          <target state="translated">Se puede utilizar de la siguiente manera:</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.VerifyNMTOKEN(System.String)">
          <source>For more information on the NMTOKEN data type, see <ph id="ph1">http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/#NMTOKEN</ph>.</source>
          <target state="translated">Para obtener más información sobre el tipo de datos NMTOKEN, vea <ph id="ph1">http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/#NMTOKEN</ph>.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyNMTOKEN(System.String)">
          <source>The string is not a valid name token.</source>
          <target state="translated">La cadena no es un símbolo (token) de nombre válido.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyNMTOKEN(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyPublicId(System.String)">
          <source><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the id to validate.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contiene el Id. que se va a validar.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyPublicId(System.String)">
          <source>Returns the passed in string instance if all the characters in the string argument are valid public id characters.</source>
          <target state="translated">Devuelve la instancia de cadena pasada si todos los caracteres del argumento de cadena son caracteres de identificadores públicos válidos.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyPublicId(System.String)">
          <source>Returns the passed-in string if all the characters in the argument are valid public id characters.</source>
          <target state="translated">Devuelve la cadena pasada si todos los caracteres del argumento son caracteres de identificadores públicos válidos.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.VerifyPublicId(System.String)">
          <source>No other values than the passed in argument should be returned.</source>
          <target state="translated">No se debería devolver ningún otro valor que el argumento pasado.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.VerifyPublicId(System.String)">
          <source>The characters valid for public id do not vary between XML editions, so no <ph id="ph1">`XmlVersion`</ph> overload is required.</source>
          <target state="translated">Los caracteres válidos para el identificador público no varían entre las ediciones de XML, por lo que no <ph id="ph1">`XmlVersion`</ph> sobrecarga es necesaria.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.VerifyPublicId(System.String)">
          <source>See <bpt id="p1">[</bpt>XML 1.0 spec (fourth edition)<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=147985)</ept> production [13] <ph id="ph1">`PublidChar`</ph> for details on the allowed characters</source>
          <target state="translated">Vea <bpt id="p1">[</bpt>especificaciones de XML 1.0 (cuarta edición)<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=147985)</ept> producción [13] <ph id="ph1">`PublidChar`</ph> para obtener más información sobre los caracteres permitidos</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.VerifyPublicId(System.String)">
          <source>If the parameter is null, an <ph id="ph1">`ArgumentNullException`</ph> will be thrown.</source>
          <target state="translated">Si el parámetro es null, un <ph id="ph1">`ArgumentNullException`</ph> se iniciará.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.VerifyPublicId(System.String)">
          <source>If any of the characters are not valid public id characters, an <ph id="ph1">`XmlException`</ph> is thrown with information about the first invalid character encountered.</source>
          <target state="translated">Si ninguno de los caracteres no son caracteres de identificador público válido; un <ph id="ph1">`XmlException`</ph> se produce con información sobre el primer carácter no válido encontrado.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyTOKEN(System.String)">
          <source>The string value you wish to verify.</source>
          <target state="translated">Valor de cadena que desea comprobar.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyTOKEN(System.String)">
          <source>Verifies that the string is a valid token according to the W3C XML Schema Part2: Datatypes recommendation.</source>
          <target state="translated">Comprueba que la cadena es un símbolo (token) válido según la recomendación "XML Schema Part 2: Datatypes" del esquema XML del Consorcio W3C.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyTOKEN(System.String)">
          <source>The token, if it is a valid token.</source>
          <target state="translated">Símbolo, si es un token válido.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.VerifyTOKEN(System.String)">
          <source>This method ensures that the name token follows the proper syntax for a valid token.</source>
          <target state="translated">Este método garantiza que el token de nombre sigue la sintaxis correcta para un token válido.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.VerifyTOKEN(System.String)">
          <source>It can be used in the following manner:</source>
          <target state="translated">Se puede utilizar de la siguiente manera:</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.VerifyTOKEN(System.String)">
          <source>For more information on tokens, see <bpt id="p1">[</bpt><ph id="ph1">http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/#token</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=103183)</ept>.</source>
          <target state="translated">Para obtener más información sobre los tokens, consulte <bpt id="p1">[</bpt> <ph id="ph1">http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/#token</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=103183)</ept>.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyTOKEN(System.String)">
          <source>The string value is not a valid token.</source>
          <target state="translated">El valor de cadena no es un símbolo (token) válido.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyWhitespace(System.String)">
          <source><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to verify.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que se va a comprobar.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyWhitespace(System.String)">
          <source>Returns the passed-in string instance if all the characters in the string argument are valid whitespace characters.</source>
          <target state="translated">Devuelve la instancia de cadena pasada si todos los caracteres del argumento de cadena son caracteres de espacio en blanco válidos.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyWhitespace(System.String)">
          <source>Returns the passed-in string instance if all the characters in the string argument are valid whitespace characters, otherwise <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Devuelve la instancia de cadena pasada si todos los caracteres del argumento de cadena son caracteres de espacio en blanco válidos; en caso contrario, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.VerifyWhitespace(System.String)">
          <source>No other values than the passed in argument should be returned.</source>
          <target state="translated">No se debería devolver ningún otro valor que el argumento pasado.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.VerifyWhitespace(System.String)">
          <source>The characters that are valid for whitespace do not vary between XML editions, so no xml version overload is required.</source>
          <target state="translated">Los caracteres que son válidos para el espacio en blanco no varían entre las ediciones de XML, por lo que no es necesaria ninguna sobrecarga de la versión de xml.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.VerifyWhitespace(System.String)">
          <source>See <bpt id="p1">[</bpt>XML 1.0 spec (fourth edition)<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=147985)</ept> production [3] S for details on the allowed characters.</source>
          <target state="translated">Vea <bpt id="p1">[</bpt>especificaciones de XML 1.0 (cuarta edición)<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=147985)</ept> producción S [3] para obtener más información sobre los caracteres permitidos.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.VerifyWhitespace(System.String)">
          <source>If the parameter is null, an <ph id="ph1">`ArgumentNullException`</ph> will be thrown.</source>
          <target state="translated">Si el parámetro es null, un <ph id="ph1">`ArgumentNullException`</ph> se iniciará.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.VerifyWhitespace(System.String)">
          <source>If any of the characters are not valid whitespace characters, an <ph id="ph1">`XmlException`</ph> is thrown with information about the first invalid character encountered.</source>
          <target state="translated">Si ninguno de los caracteres no son caracteres de espacio en blanco válidos; un <ph id="ph1">`XmlException`</ph> se produce con información sobre el primer carácter no válido encontrado.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.VerifyWhitespace(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlConvert.VerifyWhitespace%2A&gt;</ph> method to detect the presence of an invalid character in a value assigned to the start element.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Xml.XmlConvert.VerifyWhitespace%2A&gt;</ph> método para detectar la presencia de un carácter no válido en un valor asignado al elemento de inicio.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyXmlChars(System.String)">
          <source><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains characters to verify.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contiene los caracteres que se van a comprobar.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyXmlChars(System.String)">
          <source>Returns the passed-in string if all the characters and surrogate pair characters in the string argument are valid XML characters, otherwise an <ph id="ph1">&lt;see langword="XmlException" /&gt;</ph> is thrown with information on the first invalid character encountered.</source>
          <target state="translated">Devuelve la cadena que se pasa si todos los caracteres y pares de caracteres suplentes de un argumento de la cadena son caracteres XML válidos, en caso contrario se produce una <ph id="ph1">&lt;see langword="XmlException" /&gt;</ph> con información sobre el primer carácter no válido encontrado.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlConvert.VerifyXmlChars(System.String)">
          <source>Returns the passed-in string if all the characters and surrogate-pair characters in the string argument are valid XML characters, otherwise an <ph id="ph1">&lt;see langword="XmlException" /&gt;</ph> is thrown with information on the first invalid character encountered.</source>
          <target state="translated">Devuelve la cadena que se pasa si todos los caracteres y pares de caracteres suplentes de un argumento de la cadena son caracteres XML válidos, en caso contrario se produce una <ph id="ph1">&lt;see langword="XmlException" /&gt;</ph> con información sobre el primer carácter no válido encontrado.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.VerifyXmlChars(System.String)">
          <source>No other values than the passed in argument should be returned.</source>
          <target state="translated">No se debería devolver ningún otro valor que el argumento pasado.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.VerifyXmlChars(System.String)">
          <source>See <bpt id="p1">[</bpt>XML 1.0 spec (fourth edition)<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=147985)</ept> production [2] <ph id="ph1">`Char`</ph> for details on the allowed characters.</source>
          <target state="translated">Vea <bpt id="p1">[</bpt>especificaciones de XML 1.0 (cuarta edición)<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=147985)</ept> producción [2] <ph id="ph1">`Char`</ph> para obtener más información sobre los caracteres permitidos.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.VerifyXmlChars(System.String)">
          <source>If the parameter is null, an <ph id="ph1">`ArgumentNullException`</ph> will be thrown.</source>
          <target state="translated">Si el parámetro es null, un <ph id="ph1">`ArgumentNullException`</ph> se iniciará.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.VerifyXmlChars(System.String)">
          <source>If any of the characters are not valid xml characters, an <ph id="ph1">`XmlException`</ph> is thrown with information on the first invalid character encountered.</source>
          <target state="translated">Si ninguno de los caracteres no son caracteres xml válidos, un <ph id="ph1">`XmlException`</ph> se produce con información sobre el primer carácter no válido encontrado.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlConvert.VerifyXmlChars(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlConvert.VerifyXmlChars%2A&gt;</ph> method used to detect an illegal character in the start element.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Xml.XmlConvert.VerifyXmlChars%2A&gt;</ph> método utilizado para detectar un carácter no válido en el elemento de inicio.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>