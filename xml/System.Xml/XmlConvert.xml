<Type Name="XmlConvert" FullName="System.Xml.XmlConvert">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cbb6ab75fcf3ce3be72cecb77e9bd1abaabda898" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlConvert" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlConvert extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlConvert" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlConvert" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlConvert" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="961ed-101">Codifica y descodifica nombres XML y proporciona métodos de conversión entre tipos de Common Language Runtime y tipos de lenguajes de definición de esquema XML (XSD).</span>
      <span class="sxs-lookup">
        <span data-stu-id="961ed-101">Encodes and decodes XML names, and provides methods for converting between common language runtime types and XML Schema definition language (XSD) types.</span>
      </span>
      <span data-ttu-id="961ed-102">Cuando se convierten tipos de datos, los valores devueltos no dependen de la configuración regional.</span>
      <span class="sxs-lookup">
        <span data-stu-id="961ed-102">When converting data types, the values returned are locale-independent.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961ed-103">El <xref:System.Xml.XmlConvert> clase es funcionalmente equivalente a la <xref:System.Convert> clase, pero es compatible con los estándares de XML.</span><span class="sxs-lookup"><span data-stu-id="961ed-103">The <xref:System.Xml.XmlConvert> class is functionally equivalent to the <xref:System.Convert> class, but it supports XML standards.</span></span> <span data-ttu-id="961ed-104">El sistema de tipos se basa en el tipo de esquema de lenguaje de definición de esquemas XML (XSD) y los valores devueltos siempre son independientes de la configuración regional.</span><span class="sxs-lookup"><span data-stu-id="961ed-104">The type system is based on the XML Schema definition language (XSD) schema type, and the values returned are always locale-independent.</span></span>  
  
## <a name="encoding-and-decoding"></a><span data-ttu-id="961ed-105">Codificación y descodificación</span><span class="sxs-lookup"><span data-stu-id="961ed-105">Encoding and decoding</span></span>  
 <span data-ttu-id="961ed-106">Nombres de elementos y atributos o valores de identificador se limitan a un intervalo de caracteres XML según el W3C [recomendación XML 1.0](http://www.w3.org/TR/2006/REC-xml-20060816/).</span><span class="sxs-lookup"><span data-stu-id="961ed-106">Element and attribute names or ID values are limited to a range of XML characters according to the W3C [XML 1.0 recommendation](http://www.w3.org/TR/2006/REC-xml-20060816/).</span></span> <span data-ttu-id="961ed-107">Cuando los nombres contienen caracteres no válidos, puede utilizar el <xref:System.Xml.XmlConvert.EncodeName%2A> y <xref:System.Xml.XmlConvert.DecodeName%2A> métodos de esta clase para convertirlos en nombres XML válidos.</span><span class="sxs-lookup"><span data-stu-id="961ed-107">When names contain invalid characters, you can use the <xref:System.Xml.XmlConvert.EncodeName%2A> and <xref:System.Xml.XmlConvert.DecodeName%2A> methods in this class to translate them into valid XML names.</span></span>  
  
 <span data-ttu-id="961ed-108">Por ejemplo, si desea usar el encabezado de columna "Order Detail" en una base de datos, la base de datos permite el espacio entre las dos palabras.</span><span class="sxs-lookup"><span data-stu-id="961ed-108">For example, if you want to use the column heading "Order Detail" in a database, the database allows the space between the two words.</span></span> <span data-ttu-id="961ed-109">Sin embargo, en XML, el espacio entre "Order" y "Detalles" se considera un carácter XML no válido.</span><span class="sxs-lookup"><span data-stu-id="961ed-109">However, in XML, the space between "Order" and "Detail" is considered an invalid XML character.</span></span> <span data-ttu-id="961ed-110">Tendrá que convertir en codificación hexadecimal de escape y decodificarlo de nuevo más tarde.</span><span class="sxs-lookup"><span data-stu-id="961ed-110">You have to convert it into an escaped hexadecimal encoding and decode it later.</span></span>  
  
 <span data-ttu-id="961ed-111">Puede usar el <xref:System.Xml.XmlConvert.EncodeName%2A> método con la <xref:System.Xml.XmlWriter> clase para asegurarse de que los nombres que se escriben son nombres XML válidos.</span><span class="sxs-lookup"><span data-stu-id="961ed-111">You can use the <xref:System.Xml.XmlConvert.EncodeName%2A> method with the <xref:System.Xml.XmlWriter> class to ensure the names being written are valid XML names.</span></span> <span data-ttu-id="961ed-112">El siguiente código C# convierte el nombre "Order Detail" en un nombre XML válido y escribe el elemento `<Order_0x0020_Detail>My order</Order_0x0020_Detail>`.</span><span class="sxs-lookup"><span data-stu-id="961ed-112">The following C# code converts the name "Order Detail" into a valid XML name and writes the element `<Order_0x0020_Detail>My order</Order_0x0020_Detail>`.</span></span>  
  
```  
writer.WriteElementString(XmlConvert.EncodeName("Order Detail"),"My order");  
  
```  
  
 <span data-ttu-id="961ed-113">El siguiente <xref:System.Xml.XmlConvert> métodos realizan la codificación y descodificación.</span><span class="sxs-lookup"><span data-stu-id="961ed-113">The following <xref:System.Xml.XmlConvert> methods perform encoding and decoding.</span></span>  
  
|<span data-ttu-id="961ed-114">Método</span><span class="sxs-lookup"><span data-stu-id="961ed-114">Method</span></span>|<span data-ttu-id="961ed-115">Descripción</span><span class="sxs-lookup"><span data-stu-id="961ed-115">Description</span></span>|  
|------------|-----------------|  
|<xref:System.Xml.XmlConvert.EncodeName%2A>|<span data-ttu-id="961ed-116">Toma un nombre y devuelve el nombre codificado junto con cualquier carácter no válido que se reemplaza por una cadena de escape.</span><span class="sxs-lookup"><span data-stu-id="961ed-116">Takes a name and returns the encoded name along with any invalid character that is replaced by an escape string.</span></span> <span data-ttu-id="961ed-117">Este método permite a los dos puntos en cualquier posición, lo que significa que el nombre podría ser válido de acuerdo con el W3C [espacios de nombres en la recomendación de XML 1.0](http://www.w3.org/TR/REC-xml-names).</span><span class="sxs-lookup"><span data-stu-id="961ed-117">This method allows colons in any position, which means that the name may still be invalid according to the W3C [Namespaces in XML 1.0 recommendation](http://www.w3.org/TR/REC-xml-names).</span></span>|  
|<xref:System.Xml.XmlConvert.EncodeNmToken%2A>|<span data-ttu-id="961ed-118">Toma un nombre y devuelve el nombre codificado.</span><span class="sxs-lookup"><span data-stu-id="961ed-118">Takes a name and returns the encoded name.</span></span>|  
|<xref:System.Xml.XmlConvert.EncodeLocalName%2A>|<span data-ttu-id="961ed-119">Igual que <xref:System.Xml.XmlConvert.EncodeName%2A> excepto en que también codifica el carácter de dos puntos, para garantizar que el nombre puede utilizarse como el `LocalName` forma parte de un nombre completo de espacio de nombres.</span><span class="sxs-lookup"><span data-stu-id="961ed-119">Same as <xref:System.Xml.XmlConvert.EncodeName%2A> except that it also encodes the colon character, guaranteeing that the name can be used as the `LocalName` part of a namespace-qualified name.</span></span>|  
|<xref:System.Xml.XmlConvert.DecodeName%2A>|<span data-ttu-id="961ed-120">Invierte la transformación para todos los métodos de codificación.</span><span class="sxs-lookup"><span data-stu-id="961ed-120">Reverses the transformation for all the encoding methods.</span></span>|  
  
## <a name="name-validation"></a><span data-ttu-id="961ed-121">Validación de nombre</span><span class="sxs-lookup"><span data-stu-id="961ed-121">Name validation</span></span>  
 <span data-ttu-id="961ed-122">El <xref:System.Xml.XmlConvert> clase contiene dos métodos que comprueban los caracteres de un nombre de elemento o atributo y compruebe que el nombre se ajusta a las reglas establecidas por el W3C [recomendación XML 1.0](http://www.w3.org/TR/2006/REC-xml-20060816/):</span><span class="sxs-lookup"><span data-stu-id="961ed-122">The <xref:System.Xml.XmlConvert> class contains two methods that check the characters in an element or attribute name and verify that the name conforms to the rules set by the W3C [XML 1.0 recommendation](http://www.w3.org/TR/2006/REC-xml-20060816/):</span></span>  
  
-   <span data-ttu-id="961ed-123"><xref:System.Xml.XmlConvert.VerifyName%2A> comprueba los caracteres y que el nombre es válido.</span><span class="sxs-lookup"><span data-stu-id="961ed-123"><xref:System.Xml.XmlConvert.VerifyName%2A> checks the characters and verifies that the name is valid.</span></span> <span data-ttu-id="961ed-124">El método devuelve el nombre si es válido y produce una excepción si no se encuentra.</span><span class="sxs-lookup"><span data-stu-id="961ed-124">The method returns the name if it's valid, and throws an exception if it isn't.</span></span>  
  
-   <span data-ttu-id="961ed-125"><xref:System.Xml.XmlConvert.VerifyNCName%2A> realiza la misma validación, pero acepta nombres no calificados.</span><span class="sxs-lookup"><span data-stu-id="961ed-125"><xref:System.Xml.XmlConvert.VerifyNCName%2A> performs the same validation, but accepts non-qualified names.</span></span>  
  
 <span data-ttu-id="961ed-126">El <xref:System.Xml.XmlConvert> contiene métodos adicionales que validan símbolos (tokens), caracteres de espacio en blanco, identificadores públicos y otras cadenas.</span><span class="sxs-lookup"><span data-stu-id="961ed-126">The <xref:System.Xml.XmlConvert> contains additional methods that validate tokens, white-space characters, public IDs, and other strings.</span></span>  
  
## <a name="data-type-conversion"></a><span data-ttu-id="961ed-127">Conversión de tipos de datos</span><span class="sxs-lookup"><span data-stu-id="961ed-127">Data type conversion</span></span>  
 <span data-ttu-id="961ed-128"><xref:System.Xml.XmlConvert> También proporciona métodos que permiten convertir datos de una cadena a un tipo de datos fuertemente tipados.</span><span class="sxs-lookup"><span data-stu-id="961ed-128"><xref:System.Xml.XmlConvert> also provides methods that enable you to convert data from a string to a strongly typed data type.</span></span> <span data-ttu-id="961ed-129">Por ejemplo, el <xref:System.Xml.XmlConvert.ToDateTime%2A> método convierte una cadena en su <xref:System.DateTime> equivalente.</span><span class="sxs-lookup"><span data-stu-id="961ed-129">For example, the <xref:System.Xml.XmlConvert.ToDateTime%2A> method converts a string to its <xref:System.DateTime> equivalent.</span></span> <span data-ttu-id="961ed-130">Esto es útil porque mayoría de los métodos en la <xref:System.Xml.XmlReader> clase devolver datos como una cadena.</span><span class="sxs-lookup"><span data-stu-id="961ed-130">This is useful because most methods in the <xref:System.Xml.XmlReader> class return data as a string.</span></span> <span data-ttu-id="961ed-131">Después de que se leen los datos, se puede convertir al tipo de datos correcto antes de utilizarse.</span><span class="sxs-lookup"><span data-stu-id="961ed-131">After the data is read, it can be converted to the proper data type before being used.</span></span> <span data-ttu-id="961ed-132">El <xref:System.Xml.XmlConvert.ToString%2A> sobrecargas proporcionan la operación complementaria mediante la conversión de datos fuertemente tipados a cadenas.</span><span class="sxs-lookup"><span data-stu-id="961ed-132">The <xref:System.Xml.XmlConvert.ToString%2A> overloads provide the complementary operation by converting strongly typed data to strings.</span></span> <span data-ttu-id="961ed-133">Por ejemplo, esto es útil cuando desea agregar los datos a los cuadros de texto en una página Web.</span><span class="sxs-lookup"><span data-stu-id="961ed-133">For example, this is useful when you want to add the data to text boxes on a webpage.</span></span> <span data-ttu-id="961ed-134">Configuración regional no se tiene en cuenta durante la conversión de datos.</span><span class="sxs-lookup"><span data-stu-id="961ed-134">Locale settings are not taken into account during data conversion.</span></span> <span data-ttu-id="961ed-135">Los tipos de datos se basan en los tipos de datos de esquemas XML (XSD).</span><span class="sxs-lookup"><span data-stu-id="961ed-135">The data types are based on the XML Schema (XSD) data types.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlConvert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlConvert();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="961ed-136">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlConvert" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-136">Initializes a new instance of the <see cref="T:System.Xml.XmlConvert" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeName">
      <MemberSignature Language="C#" Value="public static string DecodeName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DecodeName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.DecodeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeName (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ DecodeName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="961ed-137">Nombre que se va a transformar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-137">The name to be transformed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-138">Descodifica un nombre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-138">Decodes a name.</span>
          </span>
          <span data-ttu-id="961ed-139">Este método hace lo contrario que los métodos <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> y <see cref="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-139">This method does the reverse of the <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> and <see cref="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" /> methods.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-140">Nombre descodificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-140">The decoded name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961ed-141">Los nombres se descodifican utilizando las reglas siguientes:</span><span class="sxs-lookup"><span data-stu-id="961ed-141">The names are decoded using the following rules:</span></span>  
  
-   <span data-ttu-id="961ed-142">Los nombres se descodifican de izquierda a derecha.</span><span class="sxs-lookup"><span data-stu-id="961ed-142">Names are decoded from left to right.</span></span>  
  
-   <span data-ttu-id="961ed-143">Toda secuencia _x `HHHH_` (donde HHHH representa un cuatro válido, código UCS-2 hexadecimal de dígito) no descodificada se transforma en el correspondiente Unicode 2.1 (Unicode 3.0 si lo admite la aplicación) caracteres.</span><span class="sxs-lookup"><span data-stu-id="961ed-143">Any sequence _x `HHHH_` (where HHHH stands for a valid, four digit hexadecimal UCS-2 code) that has not been decoded is transformed into the corresponding Unicode 2.1 (Unicode 3.0 if supported by the application) character.</span></span>  
  
-   <span data-ttu-id="961ed-144">No hay formatos cortos se reconocen.</span><span class="sxs-lookup"><span data-stu-id="961ed-144">No shortforms are recognized.</span></span> <span data-ttu-id="961ed-145">Se pasan sin conversión.</span><span class="sxs-lookup"><span data-stu-id="961ed-145">They are passed on without translation.</span></span> <span data-ttu-id="961ed-146">Por ejemplo, _x20\_ o __ no se descodifican.</span><span class="sxs-lookup"><span data-stu-id="961ed-146">For example, _x20\_ or __ are not decoded.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="961ed-147">La codificación real del carácter es específica de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="961ed-147">The actual encoding of the character is application-specific.</span></span> <span data-ttu-id="961ed-148">Por ejemplo, Order_x0020_Details pasa a ser Order Details.</span><span class="sxs-lookup"><span data-stu-id="961ed-148">For example, Order_x0020_Details becomes Order Details.</span></span> <span data-ttu-id="961ed-149">Se reconozcan y descodificar los caracteres de escape incluso que no son válidos en los nombres XML.</span><span class="sxs-lookup"><span data-stu-id="961ed-149">Even escaped characters that are invalid in XML names will be recognized and decoded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="961ed-150">En el ejemplo siguiente se codifica y descodifica nombres.</span><span class="sxs-lookup"><span data-stu-id="961ed-150">The following example encodes and decodes names.</span></span>  
  
 [!code-cpp[XmlConvert.EncodeName#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlConvert.EncodeName/CPP/convert.cpp#1)]
 [!code-csharp[XmlConvert.EncodeName#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert.EncodeName/CS/convert.cs#1)]
 [!code-vb[XmlConvert.EncodeName#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert.EncodeName/VB/convert.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeLocalName">
      <MemberSignature Language="C#" Value="public static string EncodeLocalName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EncodeLocalName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncodeLocalName (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EncodeLocalName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="961ed-151">Nombre que se va a codificar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-151">The name to be encoded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-152">Convierte el nombre en un nombre XML local válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-152">Converts the name to a valid XML local name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-153">Nombre codificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-153">The encoded name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961ed-154">Este método es similar a la <xref:System.Xml.XmlConvert.EncodeName%2A> método excepto en que codifica el carácter de dos puntos, lo que garantiza que el nombre puede utilizarse como parte del nombre local de un nombre completo de espacio de nombres.</span><span class="sxs-lookup"><span data-stu-id="961ed-154">This method is similar to the <xref:System.Xml.XmlConvert.EncodeName%2A> method except that it encodes the colon character, which guarantees that the name can be used as the local name part of a namespace qualified name.</span></span>  
  
 <span data-ttu-id="961ed-155">Por ejemplo, si se pasa a este método el nombre no válido un: b, devuelve a_x003a_b, que es un nombre local válido.</span><span class="sxs-lookup"><span data-stu-id="961ed-155">For example, if you passed this method the invalid name a:b, it returns a_x003a_b, which is a valid local name.</span></span>  
  
 <span data-ttu-id="961ed-156">Si `name` es `null` o `String.Empty` , a continuación, obtendrá el mismo valor devuelto.</span><span class="sxs-lookup"><span data-stu-id="961ed-156">If `name` is `null` or `String.Empty` then you get the same value returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="961ed-157">En el ejemplo siguiente se codifica y descodifica nombres.</span><span class="sxs-lookup"><span data-stu-id="961ed-157">The following example encodes and decodes names.</span></span>  
  
 [!code-cpp[XmlConvert.EncodeName#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlConvert.EncodeName/CPP/convert.cpp#1)]
 [!code-csharp[XmlConvert.EncodeName#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert.EncodeName/CS/convert.cs#1)]
 [!code-vb[XmlConvert.EncodeName#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert.EncodeName/VB/convert.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlConvert.EncodeName(System.String)" />
        <altmember cref="M:System.Xml.XmlConvert.DecodeName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="EncodeName">
      <MemberSignature Language="C#" Value="public static string EncodeName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EncodeName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.EncodeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncodeName (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EncodeName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="961ed-158">Nombre que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-158">A name to be translated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-159">Convierte el nombre en un nombre XML válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-159">Converts the name to a valid XML name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-160">Devuelve el nombre con los caracteres no válidos sustituidos por una cadena de escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-160">Returns the name with any invalid characters replaced by an escape string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961ed-161">Este método convierte los caracteres no válidos, como espacios o caracteres Katakana, que es necesario asignar a nombres XML sin la funcionalidad o la presencia de esquemas.</span><span class="sxs-lookup"><span data-stu-id="961ed-161">This method translates invalid characters, such as spaces or half-width Katakana, that need to be mapped to XML names without the support or presence of schemas.</span></span> <span data-ttu-id="961ed-162">Los caracteres no válidos se convierten en codificaciones de entidad numérica de escape.</span><span class="sxs-lookup"><span data-stu-id="961ed-162">The invalid characters are translated into escaped numeric entity encodings.</span></span>  
  
 <span data-ttu-id="961ed-163">El carácter de escape es "_".</span><span class="sxs-lookup"><span data-stu-id="961ed-163">The escape character is "_".</span></span> <span data-ttu-id="961ed-164">Cualquier carácter de nombre XML que no se ajusta a la [especificaciones de XML 1.0 (cuarta edición) recomendación](http://www.w3.org/TR/2006/REC-xml-20060816/) es los caracteres de escape con formato _xHHHH\_.</span><span class="sxs-lookup"><span data-stu-id="961ed-164">Any XML name character that does not conform to the [XML 1.0 spec (fourth edition) recommendation](http://www.w3.org/TR/2006/REC-xml-20060816/) is escaped as _xHHHH\_.</span></span> <span data-ttu-id="961ed-165">La cadena HHHH representa el código UCS-2 hexadecimal de cuatro dígitos para el carácter en orden de primer bit más significativo.</span><span class="sxs-lookup"><span data-stu-id="961ed-165">The HHHH string stands for the four-digit hexadecimal UCS-2 code for the character in most significant bit first order.</span></span> <span data-ttu-id="961ed-166">Por ejemplo, el nombre Order Details se codifica como Order_x0020_Details.</span><span class="sxs-lookup"><span data-stu-id="961ed-166">For example, the name Order Details is encoded as Order_x0020_Details.</span></span>  
  
 <span data-ttu-id="961ed-167">No es necesario que el carácter de subrayado sea de escape a menos que vaya seguido de una secuencia de caracteres que, junto con el carácter de subrayado, se pueda interpretar erróneamente como una secuencia de escape al descodificar el nombre.</span><span class="sxs-lookup"><span data-stu-id="961ed-167">The underscore character does not need to be escaped unless it is followed by a character sequence that together with the underscore can be misinterpreted as an escape sequence when decoding the name.</span></span> <span data-ttu-id="961ed-168">Por ejemplo, Order_Details no se codifica, pero Order_x0020_ se codifica como Order_x005f_x0020_.</span><span class="sxs-lookup"><span data-stu-id="961ed-168">For example, Order_Details is not encoded, but Order_x0020_ is encoded as Order_x005f_x0020_.</span></span> <span data-ttu-id="961ed-169">No se permiten formatos cortos.</span><span class="sxs-lookup"><span data-stu-id="961ed-169">No shortforms are allowed.</span></span> <span data-ttu-id="961ed-170">Por ejemplo, el _x20 formularios\_ y __ no se generan.</span><span class="sxs-lookup"><span data-stu-id="961ed-170">For example, the forms _x20\_ and __ are not generated.</span></span>  
  
 <span data-ttu-id="961ed-171">Este método garantiza que el nombre es válido de acuerdo con la especificación XML.</span><span class="sxs-lookup"><span data-stu-id="961ed-171">This method guarantees the name is valid according to the XML specification.</span></span> <span data-ttu-id="961ed-172">Permite que los dos puntos en cualquier posición, lo que significa que es posible que sigan el nombre no sea válido según el [especificación de W3C Namespace](http://www.w3.org/TR/REC-xml-names).</span><span class="sxs-lookup"><span data-stu-id="961ed-172">It allows colons in any position, which means the name may still be invalid according to the [W3C Namespace Specification](http://www.w3.org/TR/REC-xml-names).</span></span> <span data-ttu-id="961ed-173">Para garantizar que es un espacio de nombres válido calificar el nombre, utilice <xref:System.Xml.XmlConvert.EncodeLocalName%2A> para el prefijo local nombre partes y unir el resultado con un signo de dos puntos.</span><span class="sxs-lookup"><span data-stu-id="961ed-173">To guarantee it is a valid namespace qualified name use <xref:System.Xml.XmlConvert.EncodeLocalName%2A> for the prefix and local name parts and join the result with a colon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="961ed-174">En el ejemplo siguiente se codifica y descodifica nombres.</span><span class="sxs-lookup"><span data-stu-id="961ed-174">The following example encodes and decodes names.</span></span>  
  
 [!code-cpp[XmlConvert.EncodeName#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlConvert.EncodeName/CPP/convert.cpp#1)]
 [!code-csharp[XmlConvert.EncodeName#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert.EncodeName/CS/convert.cs#1)]
 [!code-vb[XmlConvert.EncodeName#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert.EncodeName/VB/convert.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" />
        <altmember cref="M:System.Xml.XmlConvert.DecodeName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="EncodeNmToken">
      <MemberSignature Language="C#" Value="public static string EncodeNmToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EncodeNmToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.EncodeNmToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncodeNmToken (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EncodeNmToken(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="961ed-175">Nombre que se va a codificar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-175">The name to be encoded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-176">Comprueba que el nombre es válido de acuerdo con la especificación XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-176">Verifies the name is valid according to the XML specification.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-177">Nombre codificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-177">The encoded name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961ed-178">Este método garantiza que el nombre es válido de acuerdo con la especificación XML.</span><span class="sxs-lookup"><span data-stu-id="961ed-178">This method guarantees that the name is valid according to the XML specification.</span></span> <span data-ttu-id="961ed-179">Por ejemplo, si se pasa a este método el nombre no válido 70 +, devuelve 70_x002b, que es un nombre XML válido.</span><span class="sxs-lookup"><span data-stu-id="961ed-179">For example, if you passed this method the invalid name 70+, it returns 70_x002b_ which is a valid XML name.</span></span>  
  
 <span data-ttu-id="961ed-180">Si `name` es `null` o String.Empty, a continuación, se obtienen el mismo valor devuelto.</span><span class="sxs-lookup"><span data-stu-id="961ed-180">If `name` is `null` or String.Empty then you get the same value returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNCNameChar">
      <MemberSignature Language="C#" Value="public static bool IsNCNameChar (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNCNameChar(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.IsNCNameChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNCNameChar (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNCNameChar(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="961ed-181">Carácter que se va a comprobar que no sea un carácter distinto de dos puntos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-181">The character to verify as a non-colon character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-182">Comprueba si el carácter pasado es un tipo de carácter distinto de dos puntos válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-182">Checks whether the passed-in character is a valid non-colon character type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-183">Devuelve <see langword="true" /> si el carácter es un tipo de carácter distinto de dos puntos válido; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-183">Returns <see langword="true" /> if the character is a valid non-colon character type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublicIdChar">
      <MemberSignature Language="C#" Value="public static bool IsPublicIdChar (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPublicIdChar(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.IsPublicIdChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPublicIdChar (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPublicIdChar(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="961ed-184">Objeto <see cref="T:System.Char" /> que se va a validar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-184">
              <see cref="T:System.Char" /> object to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-185">Devuelve la instancia de carácter pasada si el carácter del argumento es un carácter de identificador público válido; en caso contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-185">Returns the passed-in character instance if the character in the argument is a valid public id character, otherwise <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-186">Devuelve el carácter pasado si es un carácter de identificador público válido; en caso contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-186">Returns the passed-in character if the character is a valid public id character, otherwise <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStartNCNameChar">
      <MemberSignature Language="C#" Value="public static bool IsStartNCNameChar (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsStartNCNameChar(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.IsStartNCNameChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsStartNCNameChar (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsStartNCNameChar(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="961ed-187">Carácter que se va a validar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-187">The character to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-188">Comprueba si el carácter pasado es un tipo Start Name Character válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-188">Checks if the passed-in character is a valid Start Name Character type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-189">
            <see langword="true" /> si el carácter es un tipo Start Name Character válido; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-189">
              <see langword="true" /> if the character is a valid Start Name Character type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961ed-190">Para obtener más información sobre los caracteres permitidos, consulte la [especificaciones de XML 1.0 (cuarta edición)](http://go.microsoft.com/fwlink/?LinkId=147985) recomendación.</span><span class="sxs-lookup"><span data-stu-id="961ed-190">For details about allowed characters, see the [XML 1.0 spec (fourth edition)](http://go.microsoft.com/fwlink/?LinkId=147985) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWhitespaceChar">
      <MemberSignature Language="C#" Value="public static bool IsWhitespaceChar (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhitespaceChar(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.IsWhitespaceChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhitespaceChar (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhitespaceChar(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="961ed-191">Carácter que se va a validar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-191">The character to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-192">Comprueba si el carácter pasado es un carácter de espacio en blanco XML válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-192">Checks if the passed-in character is a valid XML whitespace character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-193">
            <see langword="true" /> si el carácter pasado es un carácter de espacio en blanco XML válido; en casi contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-193">
              <see langword="true" /> if the passed in character is a valid XML whitespace character; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961ed-194">Para obtener más información sobre los caracteres permitidos, consulte la [especificaciones de XML 1.0 (cuarta edición)](http://go.microsoft.com/fwlink/?LinkID=147985) recomendación.</span><span class="sxs-lookup"><span data-stu-id="961ed-194">For details about allowed characters, see the [XML 1.0 spec (fourth edition)](http://go.microsoft.com/fwlink/?LinkID=147985) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXmlChar">
      <MemberSignature Language="C#" Value="public static bool IsXmlChar (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsXmlChar(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.IsXmlChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsXmlChar (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsXmlChar(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="961ed-195">Carácter que se va a validar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-195">The character to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-196">Comprueba si el carácter pasado es un carácter XML válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-196">Checks if the passed-in character is a valid XML character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-197">
            <see langword="true" /> si el carácter pasado es un carácter XML válido; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-197">
              <see langword="true" /> if the passed in character is a valid XML character; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961ed-198">Para obtener más información sobre los caracteres permitidos, consulte la [especificaciones de XML 1.0 (cuarta edición)](http://go.microsoft.com/fwlink/?LinkId=147985) recomendación.</span><span class="sxs-lookup"><span data-stu-id="961ed-198">For details about allowed characters, see the [XML 1.0 spec (fourth edition)](http://go.microsoft.com/fwlink/?LinkId=147985) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXmlSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsXmlSurrogatePair (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsXmlSurrogatePair(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.IsXmlSurrogatePair(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsXmlSurrogatePair (lowChar As Char, highChar As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsXmlSurrogatePair(char lowChar, char highChar);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar">
          <span data-ttu-id="961ed-199">Carácter suplente que se va a validar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-199">The surrogate character to validate.</span>
          </span>
        </param>
        <param name="highChar">
          <span data-ttu-id="961ed-200">Carácter suplente que se va a validar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-200">The surrogate character to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-201">Comprueba si el par de caracteres suplentes pasado es un carácter XML válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-201">Checks if the passed-in surrogate pair of characters is a valid XML character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-202">
            <see langword="true" /> si el par de caracteres suplemente que se ha pasado es un carácter XML válido; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-202">
              <see langword="true" /> if the passed in surrogate pair of characters is a valid XML character; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToBoolean(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (s As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="961ed-203">Cadena que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-203">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-204">Convierte <see cref="T:System.String" /> en un <see cref="T:System.Boolean" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-204">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Boolean" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-205">Valor <see langword="Boolean" />; es decir, <see langword="true" /> o <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-205">A <see langword="Boolean" /> value, that is, <see langword="true" /> or <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961ed-206">Las cadenas válidas son "1" o "true" para `true` y "0" o "false" para `false`.</span><span class="sxs-lookup"><span data-stu-id="961ed-206">Valid strings are "1" or "true" for `true` and "0" or "false" for `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="961ed-207">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-207">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="961ed-208">
            <paramref name="s" /> no representa un valor <see langword="Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-208">
              <paramref name="s" /> does not represent a <see langword="Boolean" /> value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToByte(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (s As String) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="961ed-209">Cadena que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-209">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-210">Convierte <see cref="T:System.String" /> en un <see cref="T:System.Byte" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-210">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Byte" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-211">Equivalente <see langword="Byte" /> de la cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-211">A <see langword="Byte" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="961ed-212">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-212">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="961ed-213">
            <paramref name="s" /> no tiene el formato correcto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-213">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="961ed-214">
            <paramref name="s" /> representa un número menor que <see cref="F:System.Byte.MinValue" /> o mayor que <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-214">
              <paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToChar(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (s As String) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="961ed-215">Cadena que contiene un carácter único que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-215">The string containing a single character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-216">Convierte <see cref="T:System.String" /> en un <see cref="T:System.Char" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-216">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Char" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-217">
            <see langword="Char" /> que representa el carácter único.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-217">A <see langword="Char" /> representing the single character.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="961ed-218">El valor del parámetro <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-218">The value of the <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="961ed-219">El parámetro <paramref name="s" /> contiene más de un carácter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-219">The <paramref name="s" /> parameter contains more than one character.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDateTime">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="961ed-220">Convierte <see cref="T:System.String" /> en un <see cref="T:System.DateTime" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-220">Converts the <see cref="T:System.String" /> to a <see cref="T:System.DateTime" /> equivalent.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToDateTime(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (s As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use XmlConvert.ToDateTime() that takes in XmlDateTimeSerializationMode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="961ed-221">Cadena que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-221">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-222">Convierte <see cref="T:System.String" /> en un <see cref="T:System.DateTime" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-222">Converts the <see cref="T:System.String" /> to a <see cref="T:System.DateTime" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-223">Equivalente <see langword="DateTime" /> de la cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-223">A <see langword="DateTime" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="961ed-224">El <xref:System.Xml.XmlConvert.ToDateTime%28System.String%29?displayProperty=nameWithType> método está obsoleto en la versión 2.0 de .NET Framework y se ha reemplazado por la <xref:System.Xml.XmlConvert.ToDateTime%28System.String%2CSystem.Xml.XmlDateTimeSerializationMode%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="961ed-224">The <xref:System.Xml.XmlConvert.ToDateTime%28System.String%29?displayProperty=nameWithType> method is obsolete in the 2.0 version of the .NET Framework and has been replaced by the <xref:System.Xml.XmlConvert.ToDateTime%28System.String%2CSystem.Xml.XmlDateTimeSerializationMode%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="961ed-225">En el ejemplo siguiente se utiliza <xref:System.Xml.XmlConvert.ToDouble%2A> y `ToDateTime` para leer datos fuertemente tipados.</span><span class="sxs-lookup"><span data-stu-id="961ed-225">The following example uses <xref:System.Xml.XmlConvert.ToDouble%2A> and `ToDateTime` to read strongly typed data.</span></span>  
  
 [!code-cpp[XmlConvert.ToDouble#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlConvert.ToDouble/CPP/readData.cpp#1)]
 [!code-csharp[XmlConvert.ToDouble#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert.ToDouble/CS/readdata.cs#1)]
 [!code-vb[XmlConvert.ToDouble#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert.ToDouble/VB/readdata.vb#1)]  
  
 <span data-ttu-id="961ed-226">En el ejemplo se utiliza el archivo `orderData.xml`como entrada.</span><span class="sxs-lookup"><span data-stu-id="961ed-226">The example uses the file, `orderData.xml`, as input.</span></span>  
  
 [!code-xml[XmlConvert.ToDouble#2](~/samples/snippets/xml/VS_Snippets_Data/XmlConvert.ToDouble/XML/orderdata.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="961ed-227">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-227">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="961ed-228">
            <paramref name="s" /> es una cadena vacía o no tiene el formato correcto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-228">
              <paramref name="s" /> is an empty string or is not in the correct format.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (string s, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(string s, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (s As String, format As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::String ^ s, System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="961ed-229">Cadena que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-229">The string to convert.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="961ed-230">Estructura de formato que se va a aplicar al <see langword="DateTime" /> convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-230">The format structure to apply to the converted <see langword="DateTime" />.</span>
          </span>
          <span data-ttu-id="961ed-231">Entre los formatos válidos se incluyen "yyyy-MM-ddTHH:mm:sszzzzzz" y sus subconjuntos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-231">Valid formats include "yyyy-MM-ddTHH:mm:sszzzzzz" and its subsets.</span>
          </span>
          <span data-ttu-id="961ed-232">La cadena se valida comparándola con este formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-232">The string is validated against this format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-233">Convierte <see cref="T:System.String" /> en un <see cref="T:System.DateTime" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-233">Converts the <see cref="T:System.String" /> to a <see cref="T:System.DateTime" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-234">Equivalente <see langword="DateTime" /> de la cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-234">A <see langword="DateTime" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="961ed-235">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-235">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="961ed-236">
            <paramref name="s" /> o <paramref name="format" /> es String.Empty</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-236">
              <paramref name="s" /> or <paramref name="format" /> is String.Empty</span>
          </span>
          <span data-ttu-id="961ed-237">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-237">-or-</span>
          </span>
          <span data-ttu-id="961ed-238">
            <paramref name="s" /> no contiene ninguna fecha ni hora que se correspondan con <paramref name="format" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-238">
              <paramref name="s" /> does not contain a date and time that corresponds to <paramref name="format" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (string s, string[] formats);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(string s, string[] formats) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (s As String, formats As String()) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::String ^ s, cli::array &lt;System::String ^&gt; ^ formats);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="961ed-239">Cadena que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-239">The string to convert.</span>
          </span>
        </param>
        <param name="formats">
          <span data-ttu-id="961ed-240">Matriz que contiene las estructuras de formato que se van a aplicar al <see langword="DateTime" /> convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-240">An array containing the format structures to apply to the converted <see langword="DateTime" />.</span>
          </span>
          <span data-ttu-id="961ed-241">Entre los formatos válidos se incluyen "yyyy-MM-ddTHH:mm:sszzzzzz" y sus subconjuntos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-241">Valid formats include "yyyy-MM-ddTHH:mm:sszzzzzz" and its subsets.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-242">Convierte <see cref="T:System.String" /> en un <see cref="T:System.DateTime" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-242">Converts the <see cref="T:System.String" /> to a <see cref="T:System.DateTime" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-243">Equivalente <see langword="DateTime" /> de la cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-243">A <see langword="DateTime" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961ed-244">Este método permite varios formatos para que se validan con la cadena.</span><span class="sxs-lookup"><span data-stu-id="961ed-244">This method allows multiple formats for the string to be validated against.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="961ed-245">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-245">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="961ed-246">
            <paramref name="s" /> o un elemento de <paramref name="formats" /> es String.Empty</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-246">
              <paramref name="s" /> or an element of <paramref name="formats" /> is String.Empty</span>
          </span>
          <span data-ttu-id="961ed-247">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-247">-or-</span>
          </span>
          <span data-ttu-id="961ed-248">
            <paramref name="s" /> no contiene una fecha y hora que se correspondan con ninguno de los elementos de <paramref name="formats" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-248">
              <paramref name="s" /> does not contain a date and time that corresponds to any of the elements of <paramref name="formats" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (string s, System.Xml.XmlDateTimeSerializationMode dateTimeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(string s, valuetype System.Xml.XmlDateTimeSerializationMode dateTimeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (s As String, dateTimeOption As XmlDateTimeSerializationMode) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::String ^ s, System::Xml::XmlDateTimeSerializationMode dateTimeOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="dateTimeOption" Type="System.Xml.XmlDateTimeSerializationMode" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="961ed-249">Valor <see cref="T:System.String" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-249">The <see cref="T:System.String" /> value to convert.</span>
          </span>
        </param>
        <param name="dateTimeOption">
          <span data-ttu-id="961ed-250">Uno de los valores de <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> que especifican si la fecha se debe pasar a la hora local o mantenerse como hora universal coordinada (UTC), si se trata de una fecha de UTC.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-250">One of the <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> values that specify whether the date should be converted to local time or preserved as Coordinated Universal Time (UTC), if it is a UTC date.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-251">Convierte <see cref="T:System.String" /> en un <see cref="T:System.DateTime" /> mediante el <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-251">Converts the <see cref="T:System.String" /> to a <see cref="T:System.DateTime" /> using the <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> specified</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-252">
            <see cref="T:System.DateTime" /> equivalente de la <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-252">A <see cref="T:System.DateTime" /> equivalent of the <see cref="T:System.String" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="961ed-253">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-253">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="961ed-254">El valor <paramref name="dateTimeOption" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-254">The <paramref name="dateTimeOption" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="961ed-255">
            <paramref name="s" /> es una cadena vacía o su formato no es válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-255">
              <paramref name="s" /> is an empty string or is not in a valid format.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDateTimeOffset">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="961ed-256">Convierte la <see cref="T:System.String" /> proporcionada en un equivalente de <see cref="T:System.DateTimeOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-256">Converts the supplied <see cref="T:System.String" /> to a <see cref="T:System.DateTimeOffset" /> equivalent.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDateTimeOffset">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ToDateTimeOffset (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ToDateTimeOffset(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTimeOffset (s As String) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ToDateTimeOffset(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="961ed-257">Cadena que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-257">The string to convert.</span>
          </span>
          <span data-ttu-id="961ed-258">**Nota** La cadena debe ajustarse a un subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-258">**Note** The string must conform to a subset of the W3C Recommendation for the XML dateTime type.</span>
          </span>
          <span data-ttu-id="961ed-259">Para obtener más información, vea http://www.w3.org/TR/xmlschema-2/#dateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-259">For more information see http://www.w3.org/TR/xmlschema-2/#dateTime.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-260">Convierte la <see cref="T:System.String" /> proporcionada en un equivalente de <see cref="T:System.DateTimeOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-260">Converts the supplied <see cref="T:System.String" /> to a <see cref="T:System.DateTimeOffset" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-261">Equivalente de <see cref="T:System.DateTimeOffset" /> de la cadena proporcionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-261">The <see cref="T:System.DateTimeOffset" /> equivalent of the supplied string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961ed-262">Cuando se especifican más de siete dígitos para las fracciones de segundo, el valor se redondea.</span><span class="sxs-lookup"><span data-stu-id="961ed-262">When more than seven digits are specified for fractional seconds, the value is rounded.</span></span> <span data-ttu-id="961ed-263">Por ejemplo, 00000004 se redondea a 0000000 y 00000005 a 0000001.</span><span class="sxs-lookup"><span data-stu-id="961ed-263">For example, 00000004 becomes 0000000 and 00000005 becomes 0000001.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="961ed-264">En el ejemplo siguiente se muestra cómo leer una cadena de un archivo XML y usar la <xref:System.Xml.XmlConvert.ToDateTimeOffset%2A> método para convertir la cadena a un <xref:System.DateTimeOffset> tipo.</span><span class="sxs-lookup"><span data-stu-id="961ed-264">The following example demonstrates how to read a string from an XML file and use the <xref:System.Xml.XmlConvert.ToDateTimeOffset%2A> method to convert the string to a <xref:System.DateTimeOffset> type.</span></span>  
  
 [!code-csharp[XmlConvert_ToDateTimeOffset_ex1#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert_ToDateTimeOffset_ex1/CS/XmlConvert_ToDateTimeOffset_ex1.cs#1)]
 [!code-vb[XmlConvert_ToDateTimeOffset_ex1#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert_ToDateTimeOffset_ex1/VB/XmlConvert_ToDateTimeOffset_ex1.vb#1)]  
  
 <span data-ttu-id="961ed-265">En el ejemplo se usa el archivo transactions.xml.</span><span class="sxs-lookup"><span data-stu-id="961ed-265">The example uses the transactions.xml file.</span></span>  
  
```  
<?xml version="1.0"?>  
<transactions>  
   <transaction>  
      <id>123456789</id>  
      <amount>1.00</amount>  
      <currency>USD</currency>  
      <time>2007-08-03T22:05:13-07:00</time>  
   </transaction>  
</transactions>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="961ed-266">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-266">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="961ed-267">El argumento pasado a este método está fuera del intervalo de valores permitidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-267">The argument passed to this method is outside the range of allowable values.</span>
          </span>
          <span data-ttu-id="961ed-268">Para obtener información sobre los valores permitidos, vea <see cref="T:System.DateTimeOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-268">For information about allowable values, see <see cref="T:System.DateTimeOffset" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="961ed-269">El argumento pasado a este método no se ajusta a un subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-269">The argument passed to this method does not conform to a subset of the W3C Recommendations for the XML dateTime type.</span>
          </span>
          <span data-ttu-id="961ed-270">Para obtener más información, vea [http://www.w3.org/TR/xmlschema-2/#dateTime](http://go.microsoft.com/fwlink/?LinkId=97914).</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-270">For more information see [http://www.w3.org/TR/xmlschema-2/#dateTime](http://go.microsoft.com/fwlink/?LinkId=97914).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTimeOffset">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ToDateTimeOffset (string s, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ToDateTimeOffset(string s, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTimeOffset (s As String, format As String) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ToDateTimeOffset(System::String ^ s, System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="961ed-271">Cadena que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-271">The string to convert.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="961ed-272">Formato desde el que se convierte <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-272">The format from which <c>s</c> is converted.</span>
          </span>
          <span data-ttu-id="961ed-273">El parámetro de formato puede ser cualquier subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-273">The format parameter can be any subset of the W3C Recommendation for the XML dateTime type.</span>
          </span>
          <span data-ttu-id="961ed-274">Para obtener más información, vea http://www.w3.org/TR/xmlschema-2/#dateTime.) La cadena <c>s</c> se valida comparándola con este formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-274">(For more information see http://www.w3.org/TR/xmlschema-2/#dateTime.) The string <c>s</c> is validated against this format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-275">Convierte la <see cref="T:System.String" /> proporcionada en un equivalente de <see cref="T:System.DateTimeOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-275">Converts the supplied <see cref="T:System.String" /> to a <see cref="T:System.DateTimeOffset" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-276">Equivalente de <see cref="T:System.DateTimeOffset" /> de la cadena proporcionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-276">The <see cref="T:System.DateTimeOffset" /> equivalent of the supplied string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961ed-277">Si el desplazamiento especificado dentro de la cadena de entrada va a producir un desbordamiento en la representación deserializada de DateTimeOffset, se inicia.</span><span class="sxs-lookup"><span data-stu-id="961ed-277">If the offset specified within the input string will cause an overflow in the deserialized representation of the DateTimeOffset, a FormatException is thrown.</span></span>  
  
 <span data-ttu-id="961ed-278">Cuando se especifican más de siete dígitos para las fracciones de segundo, el valor se redondea.</span><span class="sxs-lookup"><span data-stu-id="961ed-278">When more than seven digits are specified for fractional seconds, the value is rounded.</span></span> <span data-ttu-id="961ed-279">Por ejemplo, 00000004 se redondea a 0000000 y 00000005 a 0000001.</span><span class="sxs-lookup"><span data-stu-id="961ed-279">For example, 00000004 becomes 0000000 and 00000005 becomes 0000001.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="961ed-280">En el ejemplo siguiente se muestra cómo leer una cadena de un archivo XML y usar la <xref:System.Xml.XmlConvert.ToDateTimeOffset%2A> método para convertir la cadena a un <xref:System.DateTimeOffset> tipo.</span><span class="sxs-lookup"><span data-stu-id="961ed-280">The following example demonstrates how to read a string from an XML file and use the <xref:System.Xml.XmlConvert.ToDateTimeOffset%2A> method to convert the string to a <xref:System.DateTimeOffset> type.</span></span> <span data-ttu-id="961ed-281">La cadena de entrada se valida con el formato especificado antes de que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="961ed-281">The input string is validated against the specified format before being converted.</span></span>  
  
 [!code-csharp[XmlConvert_ToDateTimeOffset_ex2#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert_ToDateTimeOffset_ex2/CS/XmlConvert_ToDateTimeOffset_ex2.cs#1)]
 [!code-vb[XmlConvert_ToDateTimeOffset_ex2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert_ToDateTimeOffset_ex2/VB/XmlConvert_ToDateTimeOffset_ex2.vb#1)]  
  
 <span data-ttu-id="961ed-282">En el ejemplo se usa el archivo transactions.xml.</span><span class="sxs-lookup"><span data-stu-id="961ed-282">The example uses the transactions.xml file.</span></span>  
  
```  
<?xml version="1.0"?>  
<transactions>  
   <transaction>  
      <id>123456789</id>  
      <amount>1.00</amount>  
      <currency>USD</currency>  
      <time>2007-08-03T22:05:13-07:00</time>  
   </transaction>  
</transactions>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="961ed-283">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-283">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="961ed-284">
            <paramref name="s" /> o <paramref name="format" /> es una cadena vacía o no tiene el formato especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-284">
              <paramref name="s" /> or <paramref name="format" /> is an empty string or is not in the specified format.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTimeOffset">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ToDateTimeOffset (string s, string[] formats);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ToDateTimeOffset(string s, string[] formats) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTimeOffset (s As String, formats As String()) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ToDateTimeOffset(System::String ^ s, cli::array &lt;System::String ^&gt; ^ formats);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="961ed-285">Cadena que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-285">The string to convert.</span>
          </span>
        </param>
        <param name="formats">
          <span data-ttu-id="961ed-286">Matriz de formatos a partir de los cuales puede convertirse <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-286">An array of formats from which <c>s</c> can be converted.</span>
          </span>
          <span data-ttu-id="961ed-287">Cada formato de <c>formats</c> puede ser cualquier subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-287">Each format in <c>formats</c> can be any subset of the W3C Recommendation for the XML dateTime type.</span>
          </span>
          <span data-ttu-id="961ed-288">Para obtener más información, vea http://www.w3.org/TR/xmlschema-2/#dateTime.) La cadena <c>s</c> se valida comparándola con uno de estos formatos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-288">(For more information see http://www.w3.org/TR/xmlschema-2/#dateTime.) The string <c>s</c> is validated against one of these formats.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-289">Convierte la <see cref="T:System.String" /> proporcionada en un equivalente de <see cref="T:System.DateTimeOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-289">Converts the supplied <see cref="T:System.String" /> to a <see cref="T:System.DateTimeOffset" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-290">Equivalente de <see cref="T:System.DateTimeOffset" /> de la cadena proporcionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-290">The <see cref="T:System.DateTimeOffset" /> equivalent of the supplied string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961ed-291">Si el desplazamiento especificado dentro de la cadena de entrada va a producir un desbordamiento en la representación deserializada de DateTimeOffset, se inicia.</span><span class="sxs-lookup"><span data-stu-id="961ed-291">If the offset specified within the input string will cause an overflow in the deserialized representation of the DateTimeOffset, a FormatException is thrown.</span></span>  
  
 <span data-ttu-id="961ed-292">Cuando se especifican más de siete dígitos para las fracciones de segundo, el valor se redondea.</span><span class="sxs-lookup"><span data-stu-id="961ed-292">When more than seven digits are specified for fractional seconds, the value is rounded.</span></span> <span data-ttu-id="961ed-293">Por ejemplo, 00000004 se redondea a 0000000 y 00000005 a 0000001.</span><span class="sxs-lookup"><span data-stu-id="961ed-293">For example, 00000004 becomes 0000000 and 00000005 becomes 0000001.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="961ed-294">En el ejemplo siguiente se muestra cómo leer una cadena de un archivo XML y usar la <xref:System.Xml.XmlConvert.ToDateTimeOffset%2A> método para convertir la cadena a un <xref:System.DateTimeOffset> tipo.</span><span class="sxs-lookup"><span data-stu-id="961ed-294">The following example demonstrates how to read a string from an XML file and use the <xref:System.Xml.XmlConvert.ToDateTimeOffset%2A> method to convert the string to a <xref:System.DateTimeOffset> type.</span></span> <span data-ttu-id="961ed-295">Debe validar la cadena de entrada en uno de los formatos especificados antes de que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="961ed-295">The input string must validate against one of the specified formats before being converted.</span></span>  
  
 [!code-csharp[XmlConvert_ToDateTimeOffset_ex3#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert_ToDateTimeOffset_ex3/CS/XmlConvert_ToDateTimeOffset_ex3.cs#1)]
 [!code-vb[XmlConvert_ToDateTimeOffset_ex3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert_ToDateTimeOffset_ex3/VB/XmlConvert_ToDateTimeOffset_ex3.vb#1)]  
  
 <span data-ttu-id="961ed-296">En el ejemplo se usa el archivo transactions.xml.</span><span class="sxs-lookup"><span data-stu-id="961ed-296">The example uses the transactions.xml file.</span></span>  
  
```  
<?xml version="1.0"?>  
<transactions>  
   <transaction>  
      <id>123456789</id>  
      <amount>1.00</amount>  
      <currency>USD</currency>  
      <time>2007-08-03T22:05:13-07:00</time>  
   </transaction>  
</transactions>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToDecimal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (s As String) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="961ed-297">Cadena que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-297">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-298">Convierte <see cref="T:System.String" /> en un <see cref="T:System.Decimal" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-298">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Decimal" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-299">Equivalente <see langword="Decimal" /> de la cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-299">A <see langword="Decimal" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="961ed-300">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-300">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="961ed-301">
            <paramref name="s" /> no tiene el formato correcto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-301">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="961ed-302">
            <paramref name="s" /> representa un número menor que <see cref="F:System.Decimal.MinValue" /> o mayor que <see cref="F:System.Decimal.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-302">
              <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToDouble(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (s As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="961ed-303">Cadena que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-303">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-304">Convierte <see cref="T:System.String" /> en un <see cref="T:System.Double" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-304">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Double" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-305">Equivalente <see langword="Double" /> de la cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-305">A <see langword="Double" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961ed-306">Si `s` es INF o -INF, este método devuelve Double.PositiveInfinity o Double.NegativeInfinity, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="961ed-306">If `s` is INF or -INF, this method returns Double.PositiveInfinity or Double.NegativeInfinity respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="961ed-307">En el ejemplo siguiente se utiliza `ToDouble` y <xref:System.Xml.XmlConvert.ToDateTime%2A> para leer datos fuertemente tipados.</span><span class="sxs-lookup"><span data-stu-id="961ed-307">The following example uses `ToDouble` and <xref:System.Xml.XmlConvert.ToDateTime%2A> to read strongly typed data.</span></span>  
  
 [!code-cpp[XmlConvert.ToDouble#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlConvert.ToDouble/CPP/readData.cpp#1)]
 [!code-csharp[XmlConvert.ToDouble#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert.ToDouble/CS/readdata.cs#1)]
 [!code-vb[XmlConvert.ToDouble#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert.ToDouble/VB/readdata.vb#1)]  
  
 <span data-ttu-id="961ed-308">En el ejemplo se utiliza el archivo `orderData.xml`como entrada.</span><span class="sxs-lookup"><span data-stu-id="961ed-308">The example uses the file, `orderData.xml`, as input.</span></span>  
  
 [!code-xml[XmlConvert.ToDouble#2](~/samples/snippets/xml/VS_Snippets_Data/XmlConvert.ToDouble/XML/orderdata.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="961ed-309">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-309">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="961ed-310">
            <paramref name="s" /> no tiene el formato correcto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-310">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="961ed-311">
            <paramref name="s" /> representa un número menor que <see cref="F:System.Double.MinValue" /> o mayor que <see cref="F:System.Double.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-311">
              <paramref name="s" /> represents a number less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="F:System.Double.PositiveInfinity" />
        <altmember cref="F:System.Double.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="ToGuid">
      <MemberSignature Language="C#" Value="public static Guid ToGuid (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid ToGuid(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToGuid(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToGuid (s As String) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid ToGuid(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="961ed-312">Cadena que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-312">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-313">Convierte <see cref="T:System.String" /> en un <see cref="T:System.Guid" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-313">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Guid" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-314">Equivalente <see langword="Guid" /> de la cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-314">A <see langword="Guid" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToInt16(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (s As String) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="961ed-315">Cadena que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-315">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-316">Convierte <see cref="T:System.String" /> en un <see cref="T:System.Int16" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-316">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Int16" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-317">
            <see langword="Int16" /> equivalente de la cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-317">An <see langword="Int16" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="961ed-318">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-318">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="961ed-319">
            <paramref name="s" /> no tiene el formato correcto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-319">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="961ed-320">
            <paramref name="s" /> representa un número menor que <see cref="F:System.Int16.MinValue" /> o mayor que <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-320">
              <paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToInt32(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="961ed-321">Cadena que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-321">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-322">Convierte <see cref="T:System.String" /> en un <see cref="T:System.Int32" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-322">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Int32" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-323">
            <see langword="Int32" /> equivalente de la cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-323">An <see langword="Int32" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="961ed-324">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-324">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="961ed-325">
            <paramref name="s" /> no tiene el formato correcto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-325">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="961ed-326">
            <paramref name="s" /> representa un número menor que <see cref="F:System.Int32.MinValue" /> o mayor que <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-326">
              <paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToInt64(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (s As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="961ed-327">Cadena que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-327">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-328">Convierte <see cref="T:System.String" /> en un <see cref="T:System.Int64" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-328">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Int64" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-329">
            <see langword="Int64" /> equivalente de la cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-329">An <see langword="Int64" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="961ed-330">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-330">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="961ed-331">
            <paramref name="s" /> no tiene el formato correcto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-331">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="961ed-332">
            <paramref name="s" /> representa un número menor que <see cref="F:System.Int64.MinValue" /> o mayor que <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-332">
              <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToSByte(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (s As String) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="961ed-333">Cadena que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-333">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-334">Convierte <see cref="T:System.String" /> en un <see cref="T:System.SByte" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-334">Converts the <see cref="T:System.String" /> to a <see cref="T:System.SByte" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-335">
            <see langword="SByte" /> equivalente de la cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-335">An <see langword="SByte" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="961ed-336">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-336">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="961ed-337">
            <paramref name="s" /> no tiene el formato correcto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-337">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="961ed-338">
            <paramref name="s" /> representa un número menor que <see cref="F:System.SByte.MinValue" /> o mayor que <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-338">
              <paramref name="s" /> represents a number less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToSingle(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (s As String) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="961ed-339">Cadena que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-339">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-340">Convierte <see cref="T:System.String" /> en un <see cref="T:System.Single" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-340">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Single" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-341">Equivalente <see langword="Single" /> de la cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-341">A <see langword="Single" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961ed-342">Si `s` es INF o -INF, este método devuelve Single.PositiveInfinity o Single.NegativeInfinity, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="961ed-342">If `s` is INF or -INF, this method returns Single.PositiveInfinity or Single.NegativeInfinity respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="961ed-343">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-343">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="961ed-344">
            <paramref name="s" /> no tiene el formato correcto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-344">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="961ed-345">
            <paramref name="s" /> representa un número menor que <see cref="F:System.Single.MinValue" /> o mayor que <see cref="F:System.Single.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-345">
              <paramref name="s" /> represents a number less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="F:System.Single.PositiveInfinity" />
        <altmember cref="F:System.Single.NegativeInfinity" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="961ed-346">Convierte los datos fuertemente tipados en la representación de un <see cref="T:System.String" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-346">Converts strongly typed data to an equivalent <see cref="T:System.String" /> representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="961ed-347">Valor que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-347">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-348">Convierte la clase <see cref="T:System.Boolean" /> en una clase <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-348">Converts the <see cref="T:System.Boolean" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-349">Representación de cadena de <see langword="Boolean" />; es decir, "true" o "false".</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-349">A string representation of the <see langword="Boolean" />, that is, "true" or "false".</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="961ed-350">Valor que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-350">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-351">Convierte la clase <see cref="T:System.Byte" /> en una clase <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-351">Converts the <see cref="T:System.Byte" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-352">Representación de cadena de <see langword="Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-352">A string representation of the <see langword="Byte" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="961ed-353">Valor que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-353">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-354">Convierte la clase <see cref="T:System.Char" /> en una clase <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-354">Converts the <see cref="T:System.Char" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-355">Representación de cadena de <see langword="Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-355">A string representation of the <see langword="Char" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As DateTime) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(DateTime value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use XmlConvert.ToString() that takes in XmlDateTimeSerializationMode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="961ed-356">Valor que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-356">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-357">Convierte la clase <see cref="T:System.DateTime" /> en una clase <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-357">Converts the <see cref="T:System.DateTime" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-358">Representación de cadena de <see langword="DateTime" /> con el formato yyyy-MM-ddTHH:mm:ss donde "T" es una constante literal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-358">A string representation of the <see langword="DateTime" /> in the format yyyy-MM-ddTHH:mm:ss where 'T' is a constant literal.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="961ed-359">El <xref:System.Xml.XmlConvert.ToString%28System.DateTime%29?displayProperty=nameWithType> método está obsoleto en la versión 2.0 de .NET Framework y se ha reemplazado por la <xref:System.Xml.XmlConvert.ToString%28System.DateTime%2CSystem.Xml.XmlDateTimeSerializationMode%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="961ed-359">The <xref:System.Xml.XmlConvert.ToString%28System.DateTime%29?displayProperty=nameWithType> method is obsolete in the 2.0 version of the .NET Framework and has been replaced with the <xref:System.Xml.XmlConvert.ToString%28System.DateTime%2CSystem.Xml.XmlDateTimeSerializationMode%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As DateTimeOffset) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(DateTimeOffset value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="961ed-360">
            <see cref="T:System.DateTimeOffset" /> que va a convertirse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-360">The <see cref="T:System.DateTimeOffset" /> to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-361">Convierte el <see cref="T:System.DateTimeOffset" /> proporcionado en una <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-361">Converts the supplied <see cref="T:System.DateTimeOffset" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-362">Representación de tipo <see cref="T:System.String" /> del <see cref="T:System.DateTimeOffset" /> proporcionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-362">A <see cref="T:System.String" /> representation of the supplied <see cref="T:System.DateTimeOffset" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="961ed-363">El ejemplo siguiente se convierte un <xref:System.DateTimeOffset> representación de la hora actual en un <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="961ed-363">The following example converts a <xref:System.DateTimeOffset> representation of the current time to a <xref:System.String>.</span></span>  
  
 [!code-csharp[XmlConvert_ToString_DTO#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert_ToString_DTO/CS/XmlConvert_ToString_DTO.cs#1)]
 [!code-vb[XmlConvert_ToString_DTO#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert_ToString_DTO/VB/XmlConvert_ToString_DTO.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Decimal) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="961ed-364">Valor que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-364">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-365">Convierte la clase <see cref="T:System.Decimal" /> en una clase <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-365">Converts the <see cref="T:System.Decimal" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-366">Representación de cadena de <see langword="Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-366">A string representation of the <see langword="Decimal" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="961ed-367">Valor que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-367">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-368">Convierte la clase <see cref="T:System.Double" /> en una clase <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-368">Converts the <see cref="T:System.Double" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-369">Representación de cadena de <see langword="Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-369">A string representation of the <see langword="Double" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961ed-370">Si `value` es Double.PositiveInfinity o Double.NegativeInfinity, este método devuelve la cadena INF o -INF, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="961ed-370">If `value` is Double.PositiveInfinity or Double.NegativeInfinity, this method returns the string INF or -INF respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="961ed-371">El ejemplo siguiente, convierte los tipos de datos en cadena y, a continuación, escribe la información en la consola.</span><span class="sxs-lookup"><span data-stu-id="961ed-371">The following example, converts data types to string and then writes the information out to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlConvert.ToString Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlConvert.ToString Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlConvert.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlConvert.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlConvert.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlConvert.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Double.PositiveInfinity" />
        <altmember cref="F:System.Double.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (Guid value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.Guid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Guid) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(Guid value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="961ed-372">Valor que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-372">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-373">Convierte la clase <see cref="T:System.Guid" /> en una clase <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-373">Converts the <see cref="T:System.Guid" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-374">Representación de cadena de <see langword="Guid" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-374">A string representation of the <see langword="Guid" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Short) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="961ed-375">Valor que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-375">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-376">Convierte la clase <see cref="T:System.Int16" /> en una clase <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-376">Converts the <see cref="T:System.Int16" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-377">Representación de cadena de <see langword="Int16" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-377">A string representation of the <see langword="Int16" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="961ed-378">El ejemplo siguiente, convierte los tipos de datos en cadena y, a continuación, escribe la información en la consola.</span><span class="sxs-lookup"><span data-stu-id="961ed-378">The following example, converts data types to string and then writes the information out to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlConvert.ToString Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlConvert.ToString Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlConvert.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlConvert.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlConvert.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlConvert.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="961ed-379">Valor que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-379">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-380">Convierte la clase <see cref="T:System.Int32" /> en una clase <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-380">Converts the <see cref="T:System.Int32" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-381">Representación de cadena de <see langword="Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-381">A string representation of the <see langword="Int32" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Long) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="961ed-382">Valor que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-382">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-383">Convierte la clase <see cref="T:System.Int64" /> en una clase <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-383">Converts the <see cref="T:System.Int64" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-384">Representación de cadena de <see langword="Int64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-384">A string representation of the <see langword="Int64" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As SByte) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="961ed-385">Valor que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-385">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-386">Convierte la clase <see cref="T:System.SByte" /> en una clase <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-386">Converts the <see cref="T:System.SByte" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-387">Representación de cadena de <see langword="SByte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-387">A string representation of the <see langword="SByte" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Single) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="961ed-388">Valor que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-388">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-389">Convierte la clase <see cref="T:System.Single" /> en una clase <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-389">Converts the <see cref="T:System.Single" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-390">Representación de cadena de <see langword="Single" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-390">A string representation of the <see langword="Single" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961ed-391">Si `value` es Single.PositiveInfinity o Single.NegativeInfinity, este método devuelve la cadena INF o -INF, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="961ed-391">If `value` is Single.PositiveInfinity or Single.NegativeInfinity, this method returns the string INF or -INF respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Single.PositiveInfinity" />
        <altmember cref="F:System.Single.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (TimeSpan value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.TimeSpan value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As TimeSpan) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(TimeSpan value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="961ed-392">Valor que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-392">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-393">Convierte la clase <see cref="T:System.TimeSpan" /> en una clase <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-393">Converts the <see cref="T:System.TimeSpan" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-394">Representación de cadena de <see langword="TimeSpan" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-394">A string representation of the <see langword="TimeSpan" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UShort) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="961ed-395">Valor que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-395">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-396">Convierte la clase <see cref="T:System.UInt16" /> en una clase <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-396">Converts the <see cref="T:System.UInt16" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-397">Representación de cadena de <see langword="UInt16" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-397">A string representation of the <see langword="UInt16" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UInteger) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="961ed-398">Valor que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-398">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-399">Convierte la clase <see cref="T:System.UInt32" /> en una clase <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-399">Converts the <see cref="T:System.UInt32" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-400">Representación de cadena de <see langword="UInt32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-400">A string representation of the <see langword="UInt32" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As ULong) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="961ed-401">Valor que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-401">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-402">Convierte la clase <see cref="T:System.UInt64" /> en una clase <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-402">Converts the <see cref="T:System.UInt64" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-403">Representación de cadena de <see langword="UInt64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-403">A string representation of the <see langword="UInt64" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (DateTime value, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.DateTime value, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.DateTime,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As DateTime, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(DateTime value, System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="961ed-404">Valor que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-404">The value to convert.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="961ed-405">Estructura de formato que define cómo se muestra la cadena convertida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-405">The format structure that defines how to display the converted string.</span>
          </span>
          <span data-ttu-id="961ed-406">Entre los formatos válidos se incluyen "yyyy-MM-ddTHH:mm:sszzzzzz" y sus subconjuntos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-406">Valid formats include "yyyy-MM-ddTHH:mm:sszzzzzz" and its subsets.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-407">Convierte la clase <see cref="T:System.DateTime" /> en una clase <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-407">Converts the <see cref="T:System.DateTime" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-408">Representación de cadena de <see langword="DateTime" /> en el formato especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-408">A string representation of the <see langword="DateTime" /> in the specified format.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="961ed-409">El ejemplo siguiente, convierte los tipos de datos en cadena y, a continuación, escribe la información en la consola.</span><span class="sxs-lookup"><span data-stu-id="961ed-409">The following example, converts data types to string and then writes the information out to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlConvert.ToString Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlConvert.ToString Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlConvert.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlConvert.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlConvert.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlConvert.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (DateTime value, System.Xml.XmlDateTimeSerializationMode dateTimeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.DateTime value, valuetype System.Xml.XmlDateTimeSerializationMode dateTimeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.DateTime,System.Xml.XmlDateTimeSerializationMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As DateTime, dateTimeOption As XmlDateTimeSerializationMode) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(DateTime value, System::Xml::XmlDateTimeSerializationMode dateTimeOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
        <Parameter Name="dateTimeOption" Type="System.Xml.XmlDateTimeSerializationMode" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="961ed-410">Valor <see cref="T:System.DateTime" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-410">The <see cref="T:System.DateTime" /> value to convert.</span>
          </span>
        </param>
        <param name="dateTimeOption">
          <span data-ttu-id="961ed-411">Uno de los valores de <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> que especifica cómo tratar el valor <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-411">One of the <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> values that specify how to treat the <see cref="T:System.DateTime" /> value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-412">Convierte <see cref="T:System.DateTime" /> en <see cref="T:System.String" /> mediante el <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-412">Converts the <see cref="T:System.DateTime" /> to a <see cref="T:System.String" /> using the <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-413">
            <see cref="T:System.String" /> equivalente de la <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-413">A <see cref="T:System.String" /> equivalent of the <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="961ed-414">El valor <paramref name="dateTimeOption" /> no es válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-414">The <paramref name="dateTimeOption" /> value is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="961ed-415">El valor de <paramref name="value" /> o <paramref name="dateTimeOption" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-415">The <paramref name="value" /> or <paramref name="dateTimeOption" /> value is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (DateTimeOffset value, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.DateTimeOffset value, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As DateTimeOffset, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(DateTimeOffset value, System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="961ed-416">
            <see cref="T:System.DateTimeOffset" /> que va a convertirse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-416">The <see cref="T:System.DateTimeOffset" /> to be converted.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="961ed-417">Formato al que se convierte <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-417">The format to which <c>s</c> is converted.</span>
          </span>
          <span data-ttu-id="961ed-418">El parámetro de formato puede ser cualquier subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-418">The format parameter can be any subset of the W3C Recommendation for the XML dateTime type.</span>
          </span>
          <span data-ttu-id="961ed-419">Para obtener más información, vea http://www.w3.org/TR/xmlschema-2/#dateTime.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-419">(For more information see http://www.w3.org/TR/xmlschema-2/#dateTime.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-420">Convierte el <see cref="T:System.DateTimeOffset" /> proporcionado en una <see cref="T:System.String" /> con el formato especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-420">Converts the supplied <see cref="T:System.DateTimeOffset" /> to a <see cref="T:System.String" /> in the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-421">Representación <see cref="T:System.String" /> con el formato especificado del <see cref="T:System.DateTimeOffset" /> proporcionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-421">A <see cref="T:System.String" /> representation in the specified format of the supplied <see cref="T:System.DateTimeOffset" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="961ed-422">El ejemplo siguiente se convierte un <xref:System.DateTimeOffset> representación de la hora actual en un <xref:System.String> en el formato especificado.</span><span class="sxs-lookup"><span data-stu-id="961ed-422">The following example converts a <xref:System.DateTimeOffset> representation of the current time to a <xref:System.String> in the specified format.</span></span>  
  
 [!code-csharp[XmlConvert_ToString_DTO_Format#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert_ToString_DTO_Format/CS/XmlConvert_ToString_DTO_Format.cs#1)]
 [!code-vb[XmlConvert_ToString_DTO_Format#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert_ToString_DTO_Format/VB/XmlConvert_ToString_DTO_Format.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTimeSpan">
      <MemberSignature Language="C#" Value="public static TimeSpan ToTimeSpan (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ToTimeSpan(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToTimeSpan(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToTimeSpan (s As String) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan ToTimeSpan(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="961ed-423">Cadena que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-423">The string to convert.</span>
          </span>
          <span data-ttu-id="961ed-424">El formato de cadena debe cumplir la recomendación sobre la duración del Consorcio W3C "XML Schema Part 2: Datatypes".</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-424">The string format must conform to the W3C XML Schema Part 2: Datatypes recommendation for duration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-425">Convierte <see cref="T:System.String" /> en un <see cref="T:System.TimeSpan" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-425">Converts the <see cref="T:System.String" /> to a <see cref="T:System.TimeSpan" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-426">Equivalente <see langword="TimeSpan" /> de la cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-426">A <see langword="TimeSpan" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="961ed-427">
            <paramref name="s" /> no tiene el formato correcto para representar un valor <see langword="TimeSpan" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-427">
              <paramref name="s" /> is not in correct format to represent a <see langword="TimeSpan" /> value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToUInt16(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (s As String) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="961ed-428">Cadena que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-428">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-429">Convierte <see cref="T:System.String" /> en un <see cref="T:System.UInt16" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-429">Converts the <see cref="T:System.String" /> to a <see cref="T:System.UInt16" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-430">Equivalente <see langword="UInt16" /> de la cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-430">A <see langword="UInt16" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="961ed-431">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-431">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="961ed-432">
            <paramref name="s" /> no tiene el formato correcto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-432">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="961ed-433">
            <paramref name="s" /> representa un número menor que <see cref="F:System.UInt16.MinValue" /> o mayor que <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-433">
              <paramref name="s" /> represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToUInt32(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (s As String) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="961ed-434">Cadena que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-434">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-435">Convierte <see cref="T:System.String" /> en un <see cref="T:System.UInt32" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-435">Converts the <see cref="T:System.String" /> to a <see cref="T:System.UInt32" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-436">Equivalente <see langword="UInt32" /> de la cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-436">A <see langword="UInt32" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="961ed-437">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-437">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="961ed-438">
            <paramref name="s" /> no tiene el formato correcto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-438">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="961ed-439">
            <paramref name="s" /> representa un número menor que <see cref="F:System.UInt32.MinValue" /> o mayor que <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-439">
              <paramref name="s" /> represents a number less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToUInt64(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (s As String) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="961ed-440">Cadena que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-440">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-441">Convierte <see cref="T:System.String" /> en un <see cref="T:System.UInt64" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-441">Converts the <see cref="T:System.String" /> to a <see cref="T:System.UInt64" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-442">Equivalente <see langword="UInt64" /> de la cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-442">A <see langword="UInt64" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="961ed-443">
            <paramref name="s" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-443">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="961ed-444">
            <paramref name="s" /> no tiene el formato correcto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-444">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="961ed-445">
            <paramref name="s" /> representa un número menor que <see cref="F:System.UInt64.MinValue" /> o mayor que <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-445">
              <paramref name="s" /> represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyName">
      <MemberSignature Language="C#" Value="public static string VerifyName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string VerifyName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.VerifyName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyName (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VerifyName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="961ed-446">Nombre que se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-446">The name to verify.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-447">Comprueba que el nombre sea válido de acuerdo con la recomendación sobre el lenguaje de marcado extensible del Consorcio W3C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-447">Verifies that the name is a valid name according to the W3C Extended Markup Language recommendation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-448">Nombre, si es un nombre XML válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-448">The name, if it is a valid XML name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961ed-449">Este método puede utilizarse con la <xref:System.Xml.XmlWriter> clase de la siguiente manera.</span><span class="sxs-lookup"><span data-stu-id="961ed-449">This method can be used with the <xref:System.Xml.XmlWriter> class in the following manner.</span></span>  
  
```  
try{  
  writer.WriteStartElement(XmlConvert.VerifyName("item"),"bar");  
}  
catch(Exception e)  
{  
  Console.WriteLine("error");  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="961ed-450">En el ejemplo siguiente se usa el `VerifyName` método para escribir un nombre de elemento.</span><span class="sxs-lookup"><span data-stu-id="961ed-450">The following example uses the `VerifyName` method to write an element name.</span></span>  
  
 [!code-cpp[XmlConvert.VerifyName#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlConvert.VerifyName/CPP/verifyname.cpp#1)]
 [!code-csharp[XmlConvert.VerifyName#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert.VerifyName/CS/verifyname.cs#1)]
 [!code-vb[XmlConvert.VerifyName#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert.VerifyName/VB/verifyname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="961ed-451">
            <paramref name="name" /> no es un nombre XML válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-451">
              <paramref name="name" /> is not a valid XML name.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="961ed-452">
            <paramref name="name" /> es <see langword="null" /> o String.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-452">
              <paramref name="name" /> is <see langword="null" /> or String.Empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlConvert.VerifyNCName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="VerifyNCName">
      <MemberSignature Language="C#" Value="public static string VerifyNCName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string VerifyNCName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.VerifyNCName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyNCName (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VerifyNCName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="961ed-453">Nombre que se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-453">The name to verify.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-454">Comprueba que el nombre sea un <see langword="NCName" /> válido de acuerdo con la recomendación sobre el lenguaje de marcado extensible del Consorcio W3C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-454">Verifies that the name is a valid <see langword="NCName" /> according to the W3C Extended Markup Language recommendation.</span>
          </span>
          <span data-ttu-id="961ed-455">
            <see langword="NCName" /> es un nombre que no puede contener un carácter de dos puntos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-455">An <see langword="NCName" /> is a name that cannot contain a colon.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-456">Nombre, si es un nombre NCName válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-456">The name, if it is a valid NCName.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="961ed-457">
            <paramref name="name" /> es <see langword="null" /> o <c>String.Empty</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-457">
              <paramref name="name" /> is <see langword="null" /> or <c>String.Empty</c>.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="961ed-458">
            <paramref name="name" /> no es un nombre distinto de dos puntos válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-458">
              <paramref name="name" /> is not a valid non-colon name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyNMTOKEN">
      <MemberSignature Language="C#" Value="public static string VerifyNMTOKEN (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string VerifyNMTOKEN(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.VerifyNMTOKEN(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyNMTOKEN (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VerifyNMTOKEN(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="961ed-459">La cadena que desea comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-459">The string you wish to verify.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-460">Comprueba que la cadena es un NMTOKEN válido según la recomendación "XML Schema Part 2: Datatypes" del esquema XML del Consorcio W3C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-460">Verifies that the string is a valid NMTOKEN according to the W3C XML Schema Part2: Datatypes recommendation</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-461">Token del nombre, si es un NMTOKEN válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-461">The name token, if it is a valid NMTOKEN.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961ed-462">Este método garantiza que el token de nombre sigue la sintaxis correcta para un NMTOKEN válido.</span><span class="sxs-lookup"><span data-stu-id="961ed-462">This method ensures that the name token follows the proper syntax for a valid NMTOKEN.</span></span> <span data-ttu-id="961ed-463">Se puede utilizar de la siguiente manera:</span><span class="sxs-lookup"><span data-stu-id="961ed-463">It can be used in the following manner:</span></span>  
  
```  
try {  
  writer.WriteStartElement(XmlConvert.VerifyNMTOKEN("abc"),"book");  
}  
catch(Exception e) {  
  Console.WriteLine("error");  
}  
```  
  
 <span data-ttu-id="961ed-464">Para obtener más información sobre el tipo de datos NMTOKEN, vea http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/#NMTOKEN.</span><span class="sxs-lookup"><span data-stu-id="961ed-464">For more information on the NMTOKEN data type, see http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/#NMTOKEN.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="961ed-465">La cadena no es un símbolo (token) de nombre válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-465">The string is not a valid name token.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="961ed-466">
            <paramref name="name" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-466">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyPublicId">
      <MemberSignature Language="C#" Value="public static string VerifyPublicId (string publicId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string VerifyPublicId(string publicId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.VerifyPublicId(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyPublicId (publicId As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VerifyPublicId(System::String ^ publicId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="publicId">
          <span data-ttu-id="961ed-467">Objeto <see cref="T:System.String" /> que contiene el Id. que se va a validar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-467">
              <see cref="T:System.String" /> that contains the id to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-468">Devuelve la instancia de cadena pasada si todos los caracteres del argumento de cadena son caracteres de identificadores públicos válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-468">Returns the passed in string instance if all the characters in the string argument are valid public id characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-469">Devuelve la cadena pasada si todos los caracteres del argumento son caracteres de identificadores públicos válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-469">Returns the passed-in string if all the characters in the argument are valid public id characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961ed-470">No se debería devolver ningún otro valor que el argumento pasado.</span><span class="sxs-lookup"><span data-stu-id="961ed-470">No other values than the passed in argument should be returned.</span></span> <span data-ttu-id="961ed-471">Los caracteres válidos para el identificador público no varían entre las ediciones de XML, por lo que no `XmlVersion` sobrecarga es necesaria.</span><span class="sxs-lookup"><span data-stu-id="961ed-471">The characters valid for public id do not vary between XML editions, so no `XmlVersion` overload is required.</span></span>  
  
 <span data-ttu-id="961ed-472">Vea [especificaciones de XML 1.0 (cuarta edición)](http://go.microsoft.com/fwlink/?LinkID=147985) producción [13] `PublidChar` para obtener más información sobre los caracteres permitidos</span><span class="sxs-lookup"><span data-stu-id="961ed-472">See [XML 1.0 spec (fourth edition)](http://go.microsoft.com/fwlink/?LinkID=147985) production [13] `PublidChar` for details on the allowed characters</span></span>  
  
 <span data-ttu-id="961ed-473">Si el parámetro es null, un `ArgumentNullException` se iniciará.</span><span class="sxs-lookup"><span data-stu-id="961ed-473">If the parameter is null, an `ArgumentNullException` will be thrown.</span></span> <span data-ttu-id="961ed-474">Si ninguno de los caracteres no son caracteres de identificador público válido; un `XmlException` se produce con información sobre el primer carácter no válido encontrado.</span><span class="sxs-lookup"><span data-stu-id="961ed-474">If any of the characters are not valid public id characters, an `XmlException` is thrown with information about the first invalid character encountered.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyTOKEN">
      <MemberSignature Language="C#" Value="public static string VerifyTOKEN (string token);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string VerifyTOKEN(string token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.VerifyTOKEN(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyTOKEN (token As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VerifyTOKEN(System::String ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="961ed-475">Valor de cadena que desea comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-475">The string value you wish to verify.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-476">Comprueba que la cadena es un símbolo (token) válido según la recomendación "XML Schema Part 2: Datatypes" del esquema XML del Consorcio W3C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-476">Verifies that the string is a valid token according to the W3C XML Schema Part2: Datatypes recommendation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-477">Símbolo, si es un token válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-477">The token, if it is a valid token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961ed-478">Este método garantiza que el token de nombre sigue la sintaxis correcta para un token válido.</span><span class="sxs-lookup"><span data-stu-id="961ed-478">This method ensures that the name token follows the proper syntax for a valid token.</span></span> <span data-ttu-id="961ed-479">Se puede utilizar de la siguiente manera:</span><span class="sxs-lookup"><span data-stu-id="961ed-479">It can be used in the following manner:</span></span>  
  
```  
try {  
  writer.WriteStartElement(XmlConvert.VerifyTOKEN("abc"),"book");  
}  
catch(Exception e) {  
  Console.WriteLine("error");  
}  
```  
  
 <span data-ttu-id="961ed-480">Para obtener más información sobre los tokens, consulte [ http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/#token ](http://go.microsoft.com/fwlink/?LinkId=103183).</span><span class="sxs-lookup"><span data-stu-id="961ed-480">For more information on tokens, see [http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/#token](http://go.microsoft.com/fwlink/?LinkId=103183).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="961ed-481">El valor de cadena no es un símbolo (token) válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-481">The string value is not a valid token.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyWhitespace">
      <MemberSignature Language="C#" Value="public static string VerifyWhitespace (string content);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string VerifyWhitespace(string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.VerifyWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyWhitespace (content As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VerifyWhitespace(System::String ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="content">
          <span data-ttu-id="961ed-482">Objeto <see cref="T:System.String" /> que se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-482">
              <see cref="T:System.String" /> to verify.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-483">Devuelve la instancia de cadena pasada si todos los caracteres del argumento de cadena son caracteres de espacio en blanco válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-483">Returns the passed-in string instance if all the characters in the string argument are valid whitespace characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-484">Devuelve la instancia de cadena pasada si todos los caracteres del argumento de cadena son caracteres de espacio en blanco válidos; en caso contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-484">Returns the passed-in string instance if all the characters in the string argument are valid whitespace characters, otherwise <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961ed-485">No se debería devolver ningún otro valor que el argumento pasado.</span><span class="sxs-lookup"><span data-stu-id="961ed-485">No other values than the passed in argument should be returned.</span></span> <span data-ttu-id="961ed-486">Los caracteres que son válidos para el espacio en blanco no varían entre las ediciones de XML, por lo que no es necesaria ninguna sobrecarga de la versión de xml.</span><span class="sxs-lookup"><span data-stu-id="961ed-486">The characters that are valid for whitespace do not vary between XML editions, so no xml version overload is required.</span></span>  
  
 <span data-ttu-id="961ed-487">Vea [especificaciones de XML 1.0 (cuarta edición)](http://go.microsoft.com/fwlink/?LinkID=147985) producción S [3] para obtener más información sobre los caracteres permitidos.</span><span class="sxs-lookup"><span data-stu-id="961ed-487">See [XML 1.0 spec (fourth edition)](http://go.microsoft.com/fwlink/?LinkID=147985) production [3] S for details on the allowed characters.</span></span>  
  
 <span data-ttu-id="961ed-488">Si el parámetro es null, un `ArgumentNullException` se iniciará.</span><span class="sxs-lookup"><span data-stu-id="961ed-488">If the parameter is null, an `ArgumentNullException` will be thrown.</span></span>  
  
 <span data-ttu-id="961ed-489">Si ninguno de los caracteres no son caracteres de espacio en blanco válidos; un `XmlException` se produce con información sobre el primer carácter no válido encontrado.</span><span class="sxs-lookup"><span data-stu-id="961ed-489">If any of the characters are not valid whitespace characters, an `XmlException` is thrown with information about the first invalid character encountered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="961ed-490">En el ejemplo siguiente se usa el <xref:System.Xml.XmlConvert.VerifyWhitespace%2A> método para detectar la presencia de un carácter no válido en un valor asignado al elemento de inicio.</span><span class="sxs-lookup"><span data-stu-id="961ed-490">The following example uses the <xref:System.Xml.XmlConvert.VerifyWhitespace%2A> method to detect the presence of an invalid character in a value assigned to the start element.</span></span>  
  
 [!code-csharp[XmlConvert.NewVerify#5](~/samples/snippets/csharp/VS_Snippets_Data/xmlconvert.newverify/cs/xmlconvertnewverify.cs#5)]
 [!code-vb[XmlConvert.NewVerify#5](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlconvert.newverify/vb/xmlconvertnewverify.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyXmlChars">
      <MemberSignature Language="C#" Value="public static string VerifyXmlChars (string content);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string VerifyXmlChars(string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.VerifyXmlChars(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyXmlChars (content As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VerifyXmlChars(System::String ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="content">
          <span data-ttu-id="961ed-491">
            <see cref="T:System.String" /> que contiene los caracteres que se van a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-491">
              <see cref="T:System.String" /> that contains characters to verify.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961ed-492">Devuelve la cadena que se pasa si todos los caracteres y pares de caracteres suplentes de un argumento de la cadena son caracteres XML válidos, en caso contrario se produce una <see langword="XmlException" /> con información sobre el primer carácter no válido encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-492">Returns the passed-in string if all the characters and surrogate pair characters in the string argument are valid XML characters, otherwise an <see langword="XmlException" /> is thrown with information on the first invalid character encountered.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961ed-493">Devuelve la cadena que se pasa si todos los caracteres y pares de caracteres suplentes de un argumento de la cadena son caracteres XML válidos, en caso contrario se produce una <see langword="XmlException" /> con información sobre el primer carácter no válido encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961ed-493">Returns the passed-in string if all the characters and surrogate-pair characters in the string argument are valid XML characters, otherwise an <see langword="XmlException" /> is thrown with information on the first invalid character encountered.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961ed-494">No se debería devolver ningún otro valor que el argumento pasado.</span><span class="sxs-lookup"><span data-stu-id="961ed-494">No other values than the passed in argument should be returned.</span></span> <span data-ttu-id="961ed-495">Vea [especificaciones de XML 1.0 (cuarta edición)](http://go.microsoft.com/fwlink/?LinkID=147985) producción [2] `Char` para obtener más información sobre los caracteres permitidos.</span><span class="sxs-lookup"><span data-stu-id="961ed-495">See [XML 1.0 spec (fourth edition)](http://go.microsoft.com/fwlink/?LinkID=147985) production [2] `Char` for details on the allowed characters.</span></span>  
  
 <span data-ttu-id="961ed-496">Si el parámetro es null, un `ArgumentNullException` se iniciará.</span><span class="sxs-lookup"><span data-stu-id="961ed-496">If the parameter is null, an `ArgumentNullException` will be thrown.</span></span> <span data-ttu-id="961ed-497">Si ninguno de los caracteres no son caracteres xml válidos, un `XmlException` se produce con información sobre el primer carácter no válido encontrado.</span><span class="sxs-lookup"><span data-stu-id="961ed-497">If any of the characters are not valid xml characters, an `XmlException` is thrown with information on the first invalid character encountered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="961ed-498">En el ejemplo siguiente se usa el <xref:System.Xml.XmlConvert.VerifyXmlChars%2A> método utilizado para detectar un carácter no válido en el elemento de inicio.</span><span class="sxs-lookup"><span data-stu-id="961ed-498">The following example uses the <xref:System.Xml.XmlConvert.VerifyXmlChars%2A> method used to detect an illegal character in the start element.</span></span>  
  
 [!code-csharp[XmlConvert.NewVerify#3](~/samples/snippets/csharp/VS_Snippets_Data/xmlconvert.newverify/cs/xmlconvertnewverify.cs#3)]
 [!code-vb[XmlConvert.NewVerify#3](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlconvert.newverify/vb/xmlconvertnewverify.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>