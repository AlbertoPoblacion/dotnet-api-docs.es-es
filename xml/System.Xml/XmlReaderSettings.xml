<Type Name="XmlReaderSettings" FullName="System.Xml.XmlReaderSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e0563ce45abbbac15192e7e8161cc89691e303a8" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48739599" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlReaderSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlReaderSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlReaderSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlReaderSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlReaderSettings sealed" />
  <TypeSignature Language="F#" Value="type XmlReaderSettings = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Especifica un conjunto de características compatibles en el objeto <see cref="T:System.Xml.XmlReader" /> creado mediante el método <see cref="Overload:System.Xml.XmlReader.Create" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usa el <xref:System.Xml.XmlReader.Create%2A> método para obtener <xref:System.Xml.XmlReader> instancias. Este método usa la <xref:System.Xml.XmlReaderSettings> clase para especificar las características que desea implementar en el <xref:System.Xml.XmlReader> objeto lo crea.  
  
 Consulte las secciones de comentarios de la <xref:System.Xml.XmlReader> y <xref:System.Xml.XmlReader.Create%2A> páginas para obtener información acerca de qué opciones de configuración que se usará para las comprobaciones del cumplimiento, validación y otros escenarios comunes de referencia. Consulte la <xref:System.Xml.XmlReaderSettings.%23ctor> constructor para obtener una lista de valores predeterminados.  
  
## <a name="security-considerations"></a>Consideraciones de seguridad  
 Tenga en cuenta lo siguiente cuando se usa el <xref:System.Xml.XmlReaderSettings> clase.  
  
-   Las marcas de validación <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> y <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> de un objeto <xref:System.Xml.XmlReaderSettings> no están establecidos de manera predeterminada. Cuando se establecen estas marcas, se utiliza el <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> del objeto <xref:System.Xml.XmlReaderSettings> para resolver las ubicaciones de esquemas que se encuentra en el documento de la instancia de <xref:System.Xml.XmlReader>. Si el <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> objeto es `null`, las ubicaciones de esquemas no se resuelven aunque el <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> y <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> se establecen marcas de validación.  
  
-   Los esquemas agregados durante la validación agregan nuevos tipos y pueden cambiar el resultado de la validación del documento. Como consecuencia, los esquemas externos solo se deberían resolver desde orígenes de confianza.  
  
-   Los mensajes de error de validación pueden exponer información sobre el modelo de contenido confidencial. Mensajes de advertencia y error de validación se controlan mediante el <xref:System.Xml.Schema.ValidationEventHandler> delegar o se exponen como un <xref:System.Xml.Schema.XmlSchemaValidationException> si no se proporciona ningún controlador de eventos para el <xref:System.Xml.XmlReaderSettings> objeto (advertencias de validación no provocan un <xref:System.Xml.Schema.XmlSchemaValidationException> que se produzca). Esta información del modelo de contenido no debe exponerse en escenarios de confianza. Los mensajes de advertencia de validación se han suprimido de forma predeterminada y se pueden notificar estableciendo el <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings> marca.  
  
-   El <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> propiedad de un <xref:System.Xml.Schema.XmlSchemaValidationException> devuelve la ruta de acceso URI para el archivo de esquema que produjo la excepción. El <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> propiedad no debe exponerse en escenarios de confianza.  
  
-   Deshabilitar el <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> marca (habilitada de forma predeterminada) se recomienda cuando los documentos XML grande validando, que no se confía en escenarios de alta disponibilidad en un esquema con las restricciones de identidad en una gran parte del documento.  
  
-   Los objetos <xref:System.Xml.XmlReaderSettings> pueden contener información confidencial como, por ejemplo, credenciales de usuario. Debería tener cuidado al almacenar en caché objetos <xref:System.Xml.XmlReaderSettings> o al pasar el objeto <xref:System.Xml.XmlReaderSettings> de un componente a otro.  
  
-   El procesamiento de DTD está deshabilitado de manera predeterminada. Si habilita el procesamiento de DTD, deberá tener en cuenta, incluidos las DTD de orígenes de confianza y posibles ataques de denegación de servicio. Use la <xref:System.Xml.XmlSecureResolver> para restringir los recursos que la <xref:System.Xml.XmlReader> puede tener acceso.  
  
-   No admita componentes como, por ejemplo, objetos <xref:System.Xml.NameTable>, <xref:System.Xml.XmlNamespaceManager> y <xref:System.Xml.XmlResolver>, de un origen que no sea de confianza.  
  
-   El uso de la memoria que hace una aplicación que utiliza el <xref:System.Xml.XmlReader> puede tener una correlación con el tamaño del documento XML analizado. Una forma de provocar un ataque de denegación de servicio es enviando documentos XML excesivamente grandes para ser analizados. Puede limitar el tamaño del documento que se puede analizar estableciendo la <xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A> propiedad y, a continuación, limitar el número de caracteres que resultan de expandir las entidades estableciendo la <xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Xml.XmlReader> que usa un <xref:System.Xml.XmlUrlResolver> con las credenciales necesarias.  
  
 [!code-csharp[XmlReader.Create#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#2)]
 [!code-vb[XmlReader.Create#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#2)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/e695047f-3c0f-4045-8708-5baea91cc380">Documentos y datos XML</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReaderSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReaderSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La siguiente tabla muestra los valores de propiedad iniciales de una instancia de <xref:System.Xml.XmlReaderSettings>.  
  
|Propiedad.|Valor inicial|  
|--------------|-------------------|  
|<xref:System.Xml.XmlReaderSettings.Async%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.CheckCharacters%2A>|`true`.|  
|<xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreComments%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreWhitespace%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A>|0.|  
|<xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A>|0.|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A>|0 (no hay ningún límite en el número de caracteres que resultan de expandir las entidades).|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A>|0 (no hay ningún límite en el tamaño del documento XML).|  
|<xref:System.Xml.XmlReaderSettings.NameTable%2A>|`null`.|  
|<xref:System.Xml.XmlTextReader.DtdProcessing%2A>|<xref:System.Xml.DtdProcessing.Prohibit>|  
|<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>|`true`. Esta propiedad ha quedado obsoleta. Utilice <xref:System.Xml.XmlTextReader.DtdProcessing%2A> en su lugar. Si se hubiera establecido <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> a su valor predeterminado `true` establecer <xref:System.Xml.XmlTextReader.DtdProcessing%2A> a `Prohibit`. Si se hubiera establecido <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> a `false` establecer <xref:System.Xml.XmlTextReader.DtdProcessing%2A> a `Parse`.|  
|<xref:System.Xml.XmlReaderSettings.Schemas%2A>|Objeto <xref:System.Xml.Schema.XmlSchemaSet> vacío.|  
|<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>|<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>.|  
|<xref:System.Xml.XmlReaderSettings.ValidationType%2A>|<xref:System.Xml.ValidationType.None>.|  
|<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>|Un nuevo objeto <xref:System.Xml.XmlUrlResolver>.|  
  
   
  
## Examples  
 El ejemplo siguiente crea un objeto de configuración que se puede usar para construir un lector que se eliminan las instrucciones de procesamiento, comentarios y espacios en blanco insignificantes.  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReaderSettings (System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.#ctor(System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReaderSettings(System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlReaderSettings : System.Xml.XmlResolver -&gt; System.Xml.XmlReaderSettings" Usage="new System.Xml.XmlReaderSettings resolver" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="resolver">Resolución XML.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Async">
      <MemberSignature Language="C#" Value="public bool Async { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Async" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.Async" />
      <MemberSignature Language="VB.NET" Value="Public Property Async As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Async { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Async : bool with get, set" Usage="System.Xml.XmlReaderSettings.Async" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece si los métodos asincrónicos de <see cref="T:System.Xml.XmlReader" /> se pueden usar en una instancia determinada de <see cref="T:System.Xml.XmlReader" /> .</summary>
        <value>
          <see langword="true" /> si se pueden usar métodos asincrónicos; si no, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Debe establecer este valor en `true` cuando se crea un nuevo <xref:System.Xml.XmlReader> instancia si desea utilizar asincrónica <xref:System.Xml.XmlReader> métodos en esa instancia. Después de la <xref:System.Xml.XmlReader> se crea una instancia, el <xref:System.Xml.XmlReaderSettings.Async%2A> propiedad es de solo lectura. El valor predeterminado de esta propiedad es `false`.  
  
 Este marcador omite la <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> sobrecargar. Esto significa que si crea un nuevo <xref:System.Xml.XmlReader> basado en un <xref:System.Xml.XmlReader>, el comportamiento asincrónico depende de la entrada <xref:System.Xml.XmlReader>, y no se puede usar el <xref:System.Xml.XmlReaderSettings.Async%2A> marca para cambiar el comportamiento asincrónico.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programación asincrónica con Async y Await (C# y Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="CheckCharacters">
      <MemberSignature Language="C#" Value="public bool CheckCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.CheckCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCharacters { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckCharacters : bool with get, set" Usage="System.Xml.XmlReaderSettings.CheckCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se va a realizar la comprobación de caracteres.</summary>
        <value>Es <see langword="true" /> si se va a realizar la comprobación de caracteres; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.  
  
 <block subset="none" type="note"><para>  
 Si <see cref="T:System.Xml.XmlReader" /> procesa datos de texto, siempre comprueba que los nombres XML y el contenido de texto son válidos, independientemente de la configuración de la propiedad. Al establecer la propiedad <see cref="P:System.Xml.XmlReaderSettings.CheckCharacters" /> en <see langword="false" />, se desactiva la comprobación de caracteres en las referencias a entidades de caracteres.  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad indica al lector XML para comprobar si los datos XML se está leyendo y producir una <xref:System.Xml.XmlException> si los caracteres están fuera del intervalo de caracteres XML legales. Si habilita la comprobación de caracteres, tiene garantizado lo siguiente:  
  
-   Caracteres están dentro del intervalo de caracteres XML legales, tal como se define por la [2.2 Characters](https://www.w3.org/TR/2006/REC-xml-20060816/#charsets) sección de la recomendación W3C XML 1.0.  
  
-   Todos los nombres XML son válidos, tal como se define por la [2.3 Common Syntactic Constructs construcciones](https://www.w3.org/TR/2006/REC-xml-20060816/#NT-Name) sección de la recomendación W3C XML 1.0.  
  
 Cuando esta propiedad se establece en `true`, que es el valor predeterminado, un <xref:System.Xml.XmlException> excepción se produce si el archivo XML contiene caracteres no válidos o los nombres XML no válidos (por ejemplo, un nombre de elemento se inicia con un número).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReaderSettings Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReaderSettings Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As XmlReaderSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReaderSettings ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Xml.XmlReaderSettings" Usage="xmlReaderSettings.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReaderSettings</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una copia de la instancia de la clase <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
        <returns>Objeto <see cref="T:System.Xml.XmlReaderSettings" /> clonado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Clonado <xref:System.Xml.XmlReaderSettings> objeto puede modificarse sin que afecte a la configuración en el objeto original.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CloseInput">
      <MemberSignature Language="C#" Value="public bool CloseInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CloseInput" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.CloseInput" />
      <MemberSignature Language="VB.NET" Value="Public Property CloseInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CloseInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CloseInput : bool with get, set" Usage="System.Xml.XmlReaderSettings.CloseInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se debe cerrar la secuencia o el objeto <see cref="T:System.IO.TextReader" /> subyacente al cerrar el lector.</summary>
        <value>Es <see langword="true" /> para cerrar la secuencia o <see cref="T:System.IO.TextReader" /> subyacente al cerrar el lector; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta configuración se utiliza cuando un flujo o <xref:System.IO.TextReader> se pasa a la <xref:System.Xml.XmlReader.Create%2A> método. Si el lector para su propio procesamiento, crea una secuencia, como cuando el lector se crea con un URI o cuando se abre una definición de tipo de documento externo, siempre se cierra cuando se cierra el lector.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConformanceLevel">
      <MemberSignature Language="C#" Value="public System.Xml.ConformanceLevel ConformanceLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ConformanceLevel ConformanceLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ConformanceLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ConformanceLevel As ConformanceLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ConformanceLevel ConformanceLevel { System::Xml::ConformanceLevel get(); void set(System::Xml::ConformanceLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ConformanceLevel : System.Xml.ConformanceLevel with get, set" Usage="System.Xml.XmlReaderSettings.ConformanceLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ConformanceLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nivel de conformidad que cumplirá <see cref="T:System.Xml.XmlReader" />.</summary>
        <value>Uno de los valores de enumeración que especifica el nivel de conformidad que el lector XML aplicará. El valor predeterminado es <see cref="F:System.Xml.ConformanceLevel.Document" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los lectores XML que se crean mediante el <xref:System.Xml.XmlReader.Create%2A> método cumplir los siguientes requisitos de cumplimiento de forma predeterminada:  
  
-   Las líneas nuevas y el valor del atributo se normalizan según el W3C [recomendación XML 1.0](https://www.w3.org/TR/2006/REC-xml-20060816/).  
  
-   Todas las entidades se expanden automáticamente.  
  
-   Siempre se agregan atributos predeterminados declarados en la definición de tipo de documento incluso cuando el lector no se valida.  
  
-   Se permite la declaración de prefijo XML asignado para el espacio de nombres XML correcto URI.  
  
-   Los nombres de notación de una sola `NotationType` declaración de atributos y `NmTokens` en una sola `Enumeration` declaración de atributo son distintos.  
  
 Puede usar el <xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> propiedad para comprobar y garantizar que la secuencia que se está leyendo cumple las reglas para un fragmento de documento o un documento XML 1.0 correcto. Si los datos no es compatible, un <xref:System.Xml.XmlException> es una excepción. El valor predeterminado es <xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (conformidad de nivel de documento).  
  
 Son los tres niveles:  
  
|Parámetro|Descripción|  
|-------------|-----------------|  
|<xref:System.Xml.ConformanceLevel.Document>|Garantiza que los datos XML cumplen las reglas de un documento XML 1.0 correcto. Este nivel de comprobación garantiza que cualquier procesador pueda consumir la secuencia que se está leyendo como un [documento XML 1.0 correcto](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-well-formed).<br /><br /> El sistema de lectura comprueba lo siguiente:<br /><br /> -El elemento de nivel superior no debe tener los nodos que no sean la declaración XML, definición de tipo de documento (DTD), elemento, comentario, espacio en blanco o instrucción de procesamiento.<br />-Los datos XML deben tener exactamente un nodo de elemento de nivel superior.|  
|<xref:System.Xml.ConformanceLevel.Fragment>|Garantiza que los datos XML cumplen las reglas de un fragmento de documento XML 1.0 correcto.<br /><br /> Este valor acepta datos XML con varios elementos raíz o nodos de texto en el nivel superior. Este nivel de comprobación garantiza que cualquier procesador pueda consumir la secuencia que se está leyendo como un [externo entidad analizada](https://www.w3.org/TR/2006/REC-xml-20060816/#wf-entities).|  
|<xref:System.Xml.ConformanceLevel.Auto>|Especifica que el lector debe determinar el nivel de comprobación del cumplimiento en función de los datos entrantes.<br /><br /> La comprobación del cumplimiento en documentos se aplica si los datos XML contienen información DTD.<br /><br /> La comprobación del cumplimiento en fragmentos se aplica si los datos XML contienen algo de lo siguiente:<br /><br /> -Nodo de referencia de text, CDATA o entidad en el nivel raíz.<br />-Más de un elemento en el nivel raíz.<br />-Ningún elemento en el nivel raíz.<br /><br /> Se inicia una <xref:System.Xml.XmlException> si hay un conflicto como, por ejemplo, si hay un nodo de texto y una DTD en el nivel raíz.<br /><br /> Este valor se puede utilizar en situaciones de contención, en las que se utiliza un método <xref:System.Xml.XmlReader.Create%2A> para agregar características adicionales a un <xref:System.Xml.XmlReader> existente. En este caso, <xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> no agrega ninguna comprobación del cumplimiento nueva. La comprobación del cumplimiento se deja al <xref:System.Xml.XmlReader> que se está conteniendo.|  
  
> [!NOTE]
>  La recomendación de XML 1.0 requiere que haya cumplimiento a nivel del documento cuando hay una DTD. Por lo tanto, si el lector está configurado para admitir <xref:System.Xml.ConformanceLevel.Fragment?displayProperty=nameWithType>, pero los datos XML contienen una definición de tipo de documento (DTD), un <xref:System.Xml.XmlException> se produce.  
  
 Aquí es cómo controla el lector las infracciones de conformidad específicas según la configuración de la <xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> propiedad:  
  
|Condición|<xref:System.Xml.ConformanceLevel.Document>|<xref:System.Xml.ConformanceLevel.Fragment>|<xref:System.Xml.ConformanceLevel.Auto>|  
|---------------|---------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|  
|Texto o un valor con tipo aparece en el nivel superior.|<xref:System.Xml.XmlException> se produce.|No se considera una infracción de esta configuración.|No se considera una infracción de esta configuración.|  
|Varios elementos o ningún elemento aparecen en el nivel superior.|<xref:System.Xml.XmlException> se produce.|No se considera una infracción de esta configuración.|No se considera una infracción de esta configuración.|  
|Elemento de nivel superior es un espacio en blanco.|No se considera una infracción de esta configuración.|No se considera una infracción de esta configuración.|No se considera una infracción de esta configuración.|  
|Elemento de nivel superior es un atributo (que se reconoce como un nodo de texto).|<xref:System.Xml.XmlException> se produce.|No se considera una infracción de esta configuración.|No se considera una infracción de esta configuración.|  
|Se encuentran varios nodos de texto contiguos.|No se considera una infracción de esta configuración.|No se considera una infracción de esta configuración.|No se considera una infracción de esta configuración.|  
|El mismo prefijo de espacio de nombres se declara dos veces en el mismo ámbito local.|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|  
|El espacio de nombres en un elemento o atributo no existe en el ámbito local.|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|  
|Los datos contienen un error de coincidencia de prefijo y espacio de nombres.|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|  
|`xml:space` atributo contiene un valor no válido.|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|  
|Se ha encontrado un nombre no válido.|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|  
|El `xml` prefijo no está asociado a la http://www.w3.org/XML/1998/namespace URI.|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|<xref:System.Xml.XmlException> se produce.|  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Xml.XmlReader> objeto que lee un fragmento de XML.  
  
 [!code-csharp[XmlReader.Create#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#1)]
 [!code-vb[XmlReader.Create#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DtdProcessing">
      <MemberSignature Language="C#" Value="public System.Xml.DtdProcessing DtdProcessing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.DtdProcessing DtdProcessing" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.DtdProcessing" />
      <MemberSignature Language="VB.NET" Value="Public Property DtdProcessing As DtdProcessing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::DtdProcessing DtdProcessing { System::Xml::DtdProcessing get(); void set(System::Xml::DtdProcessing value); };" />
      <MemberSignature Language="F#" Value="member this.DtdProcessing : System.Xml.DtdProcessing with get, set" Usage="System.Xml.XmlReaderSettings.DtdProcessing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.DtdProcessing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que determine el procesamiento de DTD.</summary>
        <value>Uno de los valores de enumeración que determina el procesamiento de DTD. El valor predeterminado es <see cref="F:System.Xml.DtdProcessing.Prohibit" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Validación de definición (DTD) de tipo de documento se implementa mediante las restricciones de validez definidas en el W3C [Extensible Markup Language (XML) 1.0 (fourth edition) recomendación](https://www.w3.org/TR/2006/REC-xml-20060816/). Las DTD utilizan una gramática formal para describir la estructura y sintaxis de documentos conforme a XML; especifican el contenido y los valores permitidos para el documento XML.  
  
 Esta propiedad puede tener uno de los siguientes valores:  
  
-   <xref:System.Xml.DtdProcessing.Parse?displayProperty=nameWithType> Para habilitar el procesamiento de DTD.  
  
-   <xref:System.Xml.DtdProcessing.Prohibit?displayProperty=nameWithType> para producir una <xref:System.Xml.XmlException> excepción cuando se encuentre una DTD.  
  
-   <xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType> Para deshabilitar el procesamiento sin advertencias ni las excepciones de DTD.  
  
 Para llevar a cabo una validación con una DTD, <xref:System.Xml.XmlReader> utiliza la DTD definida en la declaración DOCTYPE de un documento XML. La declaración DOCTYPE puede apuntar a una DTD en línea o hacer referencia a un archivo DTD externo. Para validar un archivo XML con una DTD:  
  
-   Establezca la propiedad <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A?displayProperty=nameWithType> en `DtdProcessing.Parse.`.  
  
-   Establezca la propiedad <xref:System.Xml.XmlReaderSettings.ValidationType%2A?displayProperty=nameWithType> en `ValidationType.DTD`.  
  
-   Si la DTD es un archivo externo almacenado en un recurso de red que requiere autenticación, pase un objeto <xref:System.Xml.XmlResolver> con las credenciales necesarias al método <xref:System.Xml.XmlReader.Create%2A>.  
  
> [!IMPORTANT]
>  Si el <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> propiedad está establecida en <xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType>, el <xref:System.Xml.XmlReader> no notificará las DTD. Esto significa que la DTD/DOCTYPE se perderá en la salida.  
  
   
  
## Examples  
 En el siguiente ejemplo se valida un archivo XML utilizando un archivo DTD.  
  
 [!code-cpp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CPP/XmlReaderSettings.DtdValidate.cpp#1)]
 [!code-csharp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CS/validdtd.cs#1)]
 [!code-vb[XmlReaderSettings.DtdValidate#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.DtdValidate/VB/validdtd.vb#1)]  
  
## <a name="input"></a>Entrada  
 En el ejemplo se utiliza como entrada el archivo `itemDTD.xml`.  
  
 [!code-xml[XmlReaderSettings.DtdValidate#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReaderSettings.DtdValidate/XML/itemDTD.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreComments">
      <MemberSignature Language="C#" Value="public bool IgnoreComments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreComments" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.IgnoreComments" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreComments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreComments { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreComments : bool with get, set" Usage="System.Xml.XmlReaderSettings.IgnoreComments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se van a omitir los comentarios.</summary>
        <value>Es <see langword="true" /> para omitir los comentarios; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Establecer esta propiedad en `true` puede dar lugar a varios nodos de texto contiguos que se devuelven desde el lector. Esto no afecta a la validación.  
  
   
  
## Examples  
 El ejemplo siguiente crea un objeto de configuración que se puede usar para construir un lector que se eliminan las instrucciones de procesamiento, comentarios y espacios en blanco insignificantes.  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreProcessingInstructions">
      <MemberSignature Language="C#" Value="public bool IgnoreProcessingInstructions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreProcessingInstructions" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreProcessingInstructions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreProcessingInstructions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreProcessingInstructions : bool with get, set" Usage="System.Xml.XmlReaderSettings.IgnoreProcessingInstructions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se van a omitir las instrucciones de procesamiento.</summary>
        <value>Es <see langword="true" /> para omitir las instrucciones de procesamiento; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Establecer esta propiedad en `true` puede dar lugar a varios nodos de texto contiguos que se devuelven desde el lector. Esto no afecta a la validación.  
  
   
  
## Examples  
 El ejemplo siguiente crea un objeto de configuración que se puede usar para construir un lector que se eliminan las instrucciones de procesamiento, comentarios y espacios en blanco insignificantes.  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreWhitespace">
      <MemberSignature Language="C#" Value="public bool IgnoreWhitespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.IgnoreWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreWhitespace { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreWhitespace : bool with get, set" Usage="System.Xml.XmlReaderSettings.IgnoreWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se va a omitir el espacio en blanco no significativo.</summary>
        <value>Es <see langword="true" /> para omitir el espacio en blanco; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Espacio en blanco que no se considera significativo incluye espacios, tabuladores y líneas en blanco que se utilizan para separar el marcado para mayor legibilidad. Un ejemplo de esto es un espacio en blanco en contenido del elemento.  
  
 Valor de esta propiedad no afecta al espacio en blanco entre marcas en un modo de contenido mixto o espacio en blanco que se produce dentro del ámbito de un `xml:space='preserve'` atributo.  
  
   
  
## Examples  
 El ejemplo siguiente crea un objeto de configuración que se puede usar para construir un lector que se eliminan las instrucciones de procesamiento, comentarios y espacios en blanco insignificantes.  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LineNumberOffset">
      <MemberSignature Language="C#" Value="public int LineNumberOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumberOffset" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.LineNumberOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property LineNumberOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumberOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LineNumberOffset : int with get, set" Usage="System.Xml.XmlReaderSettings.LineNumberOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el desplazamiento del número de línea del objeto <see cref="T:System.Xml.XmlReader" />.</summary>
        <value>Desplazamiento del número de línea. El valor predeterminado es 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A> configuración determina el punto donde el <xref:System.Xml.IXmlLineInfo.LineNumber%2A> propiedad comienza a contar. Esto es útil si los datos XML se incrustan dentro de un documento mayor. Por ejemplo, si los datos XML se insertaban en un documento mayor, y los datos empezaran en la línea 101 del documento, puede especificar que el lector de inicio de la línea 100. Por lo tanto, si el lector generó una excepción al analizar la primera línea del código XML, que podría notificar el número de línea como línea 101, en lugar de la línea 1.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LinePositionOffset">
      <MemberSignature Language="C#" Value="public int LinePositionOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePositionOffset" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.LinePositionOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property LinePositionOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePositionOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LinePositionOffset : int with get, set" Usage="System.Xml.XmlReaderSettings.LinePositionOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el desplazamiento de la posición de línea del objeto <see cref="T:System.Xml.XmlReader" />.</summary>
        <value>Desplazamiento de la posición de la línea. El valor predeterminado es 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A> configuración determina el punto donde el <xref:System.Xml.IXmlLineInfo.LinePosition%2A> propiedad comienza a contar. Esto es útil si los datos XML se incrustan dentro de un documento más grande y no hay ninguna línea nueva al principio del código XML. En este caso, si el lector produce una excepción al analizar el XML, tiene que devolver la posición de línea relativa al documento principal, no solo en relación con el fragmento XML.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MaxCharactersFromEntities">
      <MemberSignature Language="C#" Value="public long MaxCharactersFromEntities { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxCharactersFromEntities" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.MaxCharactersFromEntities" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCharactersFromEntities As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxCharactersFromEntities { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharactersFromEntities : int64 with get, set" Usage="System.Xml.XmlReaderSettings.MaxCharactersFromEntities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica el número máximo de caracteres permitido en un documento que resulta de expandir las entidades.</summary>
        <value>El número máximo de caracteres permitido de las entidades expandidas. El valor predeterminado es 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un valor cero (0) significa que no hay límites en el número de caracteres que resultan de expandir las entidades. Un valor distinto de cero especifica el número máximo de caracteres que pueden resultar de expandir las entidades.  
  
 Si el lector intenta leer un documento que contiene las entidades de modo que el tamaño expandido será superior a esta propiedad, un <xref:System.Xml.XmlException> se iniciará.  
  
 Esta propiedad le permite mitigar denegación de servicio que el atacante envía documentos XML que intentan superar los límites de memoria mediante la expansión de entidades. Al limitar los caracteres que se derivan las entidades expandidas, puede detectar el ataque y recuperar de forma confiable.  
  
   
  
## Examples  
 El código siguiente establece esta propiedad y, a continuación, intenta analizar un documento que contiene una entidad que se expande a un tamaño mayor que el límite establecido. En un escenario real, se establecería este límite en un valor suficientemente grande como para administrar los documentos válidos, aún lo suficientemente pequeño como para limitar la amenaza de documentos malintencionados.  
  
```csharp  
string markup =  
@"<!DOCTYPE Root [  
  <!ENTITY anEntity ""Expands to more than 30 characters"">  
  <!ELEMENT Root (#PCDATA)>  
]>  
<Root>Content &anEntity;</Root>";  
  
XmlReaderSettings settings = new XmlReaderSettings();  
settings.DtdProcessing = DtdProcessing.Parse;  
settings.ValidationType = ValidationType.DTD;  
settings.MaxCharactersFromEntities = 30;  
  
try  
{  
    XmlReader reader = XmlReader.Create(new StringReader(markup), settings);  
    while (reader.Read()) { }  
}  
catch (XmlException ex)  
{  
    Console.WriteLine(ex.Message);  
}  
```  
  
```vb  
Dim markup As String = _  
    "<!DOCTYPE Root [" + Environment.NewLine + _  
    "  <!ENTITY anEntity ""Expands to more than 30 characters"">" + Environment.NewLine + _  
    "  <!ELEMENT Root (#PCDATA)>" + Environment.NewLine + _  
    ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCharactersInDocument">
      <MemberSignature Language="C#" Value="public long MaxCharactersInDocument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxCharactersInDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.MaxCharactersInDocument" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCharactersInDocument As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxCharactersInDocument { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharactersInDocument : int64 with get, set" Usage="System.Xml.XmlReaderSettings.MaxCharactersInDocument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica el número máximo de caracteres permitido en un documento XML. Un valor cero (0) significa que no existe ningún límite en el tamaño del documento XML. Un valor distinto de cero especifica el tamaño máximo, en caracteres.</summary>
        <value>El número máximo de caracteres permitido en un documento XML. El valor predeterminado es 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un valor cero (0) significa que no hay límites en el número de caracteres en el documento analizado. Un valor distinto de cero especifica el número máximo de caracteres que se pueda analizar.  
  
 El número máximo de caracteres para el documento incluye el recuento de caracteres que resultan de las entidades expandidas.  
  
 Si el lector intenta leer un documento con un tamaño que supera esta propiedad, un <xref:System.Xml.XmlException> se iniciará.  
  
 Esta propiedad le permite mitigar denegación de servicio que el atacante envía documentos XML extremadamente grandes. Al limitar el tamaño de un documento, puede detectar el ataque y recuperar de forma confiable.  
  
   
  
## Examples  
 El código siguiente establece esta propiedad y, a continuación, intenta analizar un documento mayor que el límite. En un escenario real, se establecería este límite en un valor suficientemente grande como para administrar los documentos válidos, aún lo suficientemente pequeño como para limitar la amenaza de documentos malintencionados.  
  
```csharp  
string markup = "<Root>Content</Root>";  
  
XmlReaderSettings settings = new XmlReaderSettings();  
settings.MaxCharactersInDocument = 10;  
  
try  
{  
    XmlReader reader = XmlReader.Create(new StringReader(markup), settings);  
    while (reader.Read()) { }  
}  
catch (XmlException ex)  
{  
    Console.WriteLine(ex.Message);  
}  
```  
  
```vb  
Dim markup As String = "<Root>Content</Root>"  
  
Dim settings As XmlReaderSettings = New XmlReaderSettings()  
settings.MaxCharactersInDocument = 10  
  
Try  
    Dim reader As XmlReader = XmlReader.Create(New StringReader(markup), settings)  
    While (reader.Read())  
    End While  
Catch ex As XmlException  
    Console.WriteLine(ex.Message)  
End Try  
```  
  
 Este código genera el siguiente resultado:  
  
```  
There is an error in XML document (MaxCharactersInDocument, ).  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNameTable NameTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); void set(System::Xml::XmlNameTable ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable with get, set" Usage="System.Xml.XmlReaderSettings.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el objeto <see cref="T:System.Xml.XmlNameTable" /> utilizado para las comparaciones de cadenas subdivididas.</summary>
        <value>Objeto <see cref="T:System.Xml.XmlNameTable" /> que almacena todas las cadenas subdivididas que utilizan todas las instancias del objeto <see cref="T:System.Xml.XmlReader" /> creadas mediante este objeto <see cref="T:System.Xml.XmlReaderSettings" />.  
  
El valor predeterminado es <see langword="null" />. La instancia de <see cref="T:System.Xml.XmlReader" /> creada utilizará un nuevo objeto <see cref="T:System.Xml.NameTable" /> vacío si este valor es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Establezca esta propiedad en un <xref:System.Xml.XmlNameTable> instancia si desea compartir una tabla de nombres común entre todos creado <xref:System.Xml.XmlReader> instancias.  
  
> [!NOTE]
>  La clase <xref:System.Xml.NameTable> no es segura para la ejecución de subprocesos. Por lo tanto, no puede compartirse entre <xref:System.Xml.XmlReader> objetos que se ejecutan simultáneamente en diferentes subprocesos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProhibitDtd">
      <MemberSignature Language="C#" Value="public bool ProhibitDtd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProhibitDtd" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ProhibitDtd" />
      <MemberSignature Language="VB.NET" Value="Public Property ProhibitDtd As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProhibitDtd { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ProhibitDtd : bool with get, set" Usage="System.Xml.XmlReaderSettings.ProhibitDtd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("Use XmlReaderSettings.DtdProcessing property instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se va a prohibir el procesamiento de la definición de tipo de documento (DTD). Esta propiedad ha quedado obsoleta. Utilice <see cref="P:System.Xml.XmlTextReader.DtdProcessing" /> en su lugar.</summary>
        <value>Es <see langword="true" /> para prohibir el procesamiento de DTD; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se establece en `true`, <xref:System.Xml.XmlReader> produce una <xref:System.Xml.XmlException> cuando se encuentra contenido DTD. No habilite el procesamiento de DTD si le preocupan los problemas de denegación de servicio o si trabaja con orígenes que no son de confianza.  
  
 Si tiene habilitado el procesamiento de DTD, puede utilizar <xref:System.Xml.XmlSecureResolver> para restringir los recursos a los que tiene acceso <xref:System.Xml.XmlReader>. También puede diseñar su aplicación para que el procesamiento XML se realice con restricciones de memoria y tiempo. Por ejemplo, puede configurar límites de tiempo de espera en la aplicación ASP.NET.  
  
 Esta propiedad ha quedado obsoleta. Utilice <xref:System.Xml.XmlTextReader.DtdProcessing%2A> en su lugar. Si se hubiera establecido <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> a su valor predeterminado `true` establecer <xref:System.Xml.XmlTextReader.DtdProcessing%2A> a `Prohibit`. Si se hubiera establecido <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> a `false` establecer <xref:System.Xml.XmlTextReader.DtdProcessing%2A> a `Parse`.  
  
   
  
## Examples  
 El siguiente ejemplo valida datos utilizando una DTD.  
  
 [!code-cpp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CPP/XmlReaderSettings.DtdValidate.cpp#1)]
 [!code-csharp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CS/validdtd.cs#1)]
 [!code-vb[XmlReaderSettings.DtdValidate#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.DtdValidate/VB/validdtd.vb#1)]  
  
 En el ejemplo se utiliza el archivo itemDTD.xml como entrada.  
  
 [!code-xml[XmlReaderSettings.DtdValidate#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReaderSettings.DtdValidate/XML/itemDTD.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="xmlReaderSettings.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restablece los miembros de la clase de configuración a sus valores predeterminados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La siguiente tabla muestra los valores de propiedad iniciales de una instancia de <xref:System.Xml.XmlReaderSettings>.  
  
|Propiedad.|Valor inicial|  
|--------------|-------------------|  
|<xref:System.Xml.XmlReaderSettings.Async%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.CheckCharacters%2A>|`true`.|  
|<xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreComments%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreWhitespace%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A>|0.|  
|<xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A>|0.|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A>|0 (no hay ningún límite en el número de caracteres que resultan de expandir las entidades).|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A>|0 (no hay ningún límite en el tamaño del documento XML).|  
|<xref:System.Xml.XmlReaderSettings.NameTable%2A>|`null`.|  
|<xref:System.Xml.XmlTextReader.DtdProcessing%2A>|<xref:System.Xml.DtdProcessing.Prohibit>|  
|<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>|`true`. Esta propiedad ha quedado obsoleta. Utilice <xref:System.Xml.XmlTextReader.DtdProcessing%2A> en su lugar. Si se hubiera establecido <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> a su valor predeterminado `true` establecer <xref:System.Xml.XmlTextReader.DtdProcessing%2A> a `Prohibit`. Si se hubiera establecido <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> a `false` establecer <xref:System.Xml.XmlTextReader.DtdProcessing%2A> a `Parse`.|  
|<xref:System.Xml.XmlReaderSettings.Schemas%2A>|Objeto <xref:System.Xml.Schema.XmlSchemaSet> vacío.|  
|<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>|<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>.|  
|<xref:System.Xml.XmlReaderSettings.ValidationType%2A>|<xref:System.Xml.ValidationType.None>.|  
|<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>|Un nuevo objeto <xref:System.Xml.XmlUrlResolver>.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet Schemas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public Property Schemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ Schemas { System::Xml::Schema::XmlSchemaSet ^ get(); void set(System::Xml::Schema::XmlSchemaSet ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Schemas : System.Xml.Schema.XmlSchemaSet with get, set" Usage="System.Xml.XmlReaderSettings.Schemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que se va a utilizar al realizar la validación del esquema.</summary>
        <value>
          <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que se usará al realizar la validación de esquemas. El valor predeterminado es un objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> vacío</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  -   No utilizar esquemas desde orígenes desconocidos o que no se confía o ubicaciones. Si lo hace, compromete la seguridad del código.  
> -   Esquemas XML (incluidos los esquemas en línea) son intrínsecamente vulnerables a la denegación de servicio; no los acepta en escenarios de confianza.  
> -   Excepciones y mensajes de error de validación de esquema pueden exponer información confidencial sobre el modelo de contenido o las rutas de acceso URI para el archivo de esquema. Tenga cuidado de no exponer esta información a los llamadores de confianza.  
> -   Para obtener más información, consulte la sección "Consideraciones de seguridad".  
  
 La <xref:System.Xml.Schema.XmlSchemaSet> clase sólo admite los esquemas (XSD). <xref:System.Xml.XmlReader> las instancias creadas por el <xref:System.Xml.XmlReader.Create%2A> método no se puede configurar para habilitar la validación de esquemas reducidos de datos XML (XDR).  
  
## <a name="security-considerations"></a>Consideraciones de seguridad  
  
-   No utilizar esquemas de orígenes desconocidos o que no se confía. Si lo hace, compromete la seguridad del código. La <xref:System.Xml.XmlUrlResolver> clase se utiliza para resolver los esquemas externos de forma predeterminada. Para deshabilitar la resolución de inclusión, importación y volver a definir los elementos de un esquema, establezca el <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType> propiedad `null`.  
  
-   Las excepciones generadas como resultado de utilizar el <xref:System.Xml.Schema.XmlSchemaSet> clase, como el <xref:System.Xml.Schema.XmlSchemaException> clase puede contener información confidencial que no debe exponerse en escenarios de confianza. Por ejemplo, el <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> propiedad de un <xref:System.Xml.Schema.XmlSchemaException> devuelve la ruta de acceso URI para el archivo de esquema que produjo la excepción. El <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> propiedad no debe exponerse en escenarios de confianza. Las excepciones se deben administrar correctamente para que esta información confidencial no se expone en escenarios de confianza.  
  
   
  
## Examples  
 El ejemplo siguiente usa el <xref:System.Xml.XmlReaderSettings> objeto y el <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para asociar un esquema a un documento XML. El esquema se agrega a la <xref:System.Xml.XmlReaderSettings.Schemas%2A> propiedad de la <xref:System.Xml.XmlReaderSettings> objeto. El valor de la <xref:System.Xml.XmlReaderSettings.Schemas%2A> propiedad es una <xref:System.Xml.Schema.XmlSchemaSet> objeto. El esquema se utiliza para validar que el documento XML se ajusta al modelo de contenido del esquema. Las advertencias y errores de validación de esquema se controlan mediante el <xref:System.Xml.XmlReaderSettings.ValidationEventHandler> definido en el <xref:System.Xml.XmlReaderSettings> objeto.  
  
 [!code-cpp[XmlSchemaSetOverall Example#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaSetOverall Example/CPP/xmlschemasetexample.cpp#1)]
 [!code-csharp[XmlSchemaSetOverall Example#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaSetOverall Example/CS/xmlschemasetexample.cs#1)]
 [!code-vb[XmlSchemaSetOverall Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaSetOverall Example/VB/xmlschemasetexample.vb#1)]  
  
 En el ejemplo se utiliza el archivo books.xml como entrada.  
  
 [!code-xml[XmlSchemaSetOverall Example#2](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xml#2)]  
  
 El ejemplo utiliza el archivo books.xsd como entrada.  
  
 [!code-xml[XmlSchemaSetOverall Example#3](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlReaderSettings.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberSignature Language="F#" Value="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " Usage="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando el lector encuentra errores de validación.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Estos eventos se producen al leer un documento XML de instancia si el <xref:System.Xml.XmlReaderSettings.ValidationType%2A> está establecida en <xref:System.Xml.ValidationType.DTD> o <xref:System.Xml.ValidationType.Schema>. Si el <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings> se ha habilitado la configuración en el <xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> estos eventos también se producen cuando se producen las advertencias de validación de propiedad.  
  
 Si el lector está configurado para la validación y no se ha establecido ningún controlador de eventos de validación, un <xref:System.Xml.Schema.XmlSchemaValidationException> se produce para todos los errores de validación. (Las advertencias de validación no provocan un <xref:System.Xml.Schema.XmlSchemaValidationException> que se produzca).  
  
> [!IMPORTANT]
>  Los mensajes de error de validación pueden exponer información sobre el modelo de contenido confidencial. Mensajes de advertencia y error de validación se controlan mediante el <xref:System.Xml.Schema.ValidationEventHandler> delegar o se exponen como un <xref:System.Xml.Schema.XmlSchemaValidationException> si no se proporciona ningún controlador de eventos para el <xref:System.Xml.XmlReaderSettings> objeto (advertencias de validación no provocan un <xref:System.Xml.Schema.XmlSchemaValidationException> que se produzca). Esta información del modelo de contenido no debe exponerse en escenarios de confianza. Los mensajes de advertencia de validación se han suprimido de forma predeterminada y se pueden notificar estableciendo el <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings> marca.  
>   
>  El <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> propiedad de un <xref:System.Xml.Schema.XmlSchemaValidationException> devuelve la ruta de acceso URI para el archivo de esquema que produjo la excepción. El <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> propiedad no debe exponerse en escenarios de confianza.  
  
   
  
## Examples  
 El ejemplo siguiente muestra la configuración para especificar que desea crear un lector que valida mediante un esquema en línea y que también muestra las advertencias de validación. El controlador de eventos de validación utiliza la <xref:System.Xml.Schema.XmlSeverityType> enumeración para diferenciar entre los errores y advertencias.  
  
 [!code-csharp[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/CS/factory_rdr_cctor.cs#1)]
 [!code-vb[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/VB/factory_rdr_cctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidationFlags">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaValidationFlags ValidationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaValidationFlags ValidationFlags" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ValidationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationFlags As XmlSchemaValidationFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaValidationFlags ValidationFlags { System::Xml::Schema::XmlSchemaValidationFlags get(); void set(System::Xml::Schema::XmlSchemaValidationFlags value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationFlags : System.Xml.Schema.XmlSchemaValidationFlags with get, set" Usage="System.Xml.XmlReaderSettings.ValidationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica la configuración de validación de esquemas. Esta configuración se aplica a los objetos <see cref="T:System.Xml.XmlReader" /> que validan esquemas (con la propiedad <see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> establecida en <see langword="ValidationType.Schema" />).</summary>
        <value>Una combinación bit a bit de valores de enumeración que especifican opciones de validación. Los campos <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" /> y <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" /> están deshabilitados de forma predeterminada. <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />, <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" /> y <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" /> están deshabilitados de forma predeterminada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Las marcas de validación <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> y <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> de un objeto <xref:System.Xml.XmlReaderSettings> no están establecidos de manera predeterminada. Cuando se establecen estas marcas, se utiliza el <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> del objeto <xref:System.Xml.XmlReaderSettings> para resolver las ubicaciones de esquemas que se encuentra en el documento de la instancia de <xref:System.Xml.XmlReader>. Si el <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> objeto es `null`, las ubicaciones de esquemas no se resuelven aunque el <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> y <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> se establecen marcas de validación.  
>   
>  Los esquemas agregados durante la validación agregan nuevos tipos y pueden cambiar el resultado de la validación del documento. Como consecuencia, los esquemas externos solo se deberían resolver desde orígenes de confianza.  
>   
>  Deshabilitar el <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> marca (habilitada de forma predeterminada) se recomienda cuando los documentos XML grande validando, que no se confía en escenarios de alta disponibilidad en un esquema con las restricciones de identidad en una gran parte del documento.  
  
   
  
## Examples  
 El siguiente ejemplo valida un archivo XML con un esquema XML alineado habilitando la <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> configuración. El lector XML está configurado para mostrar advertencias de validación, sp también aparece la advertencia esperada en el elemento raíz.  
  
 [!code-csharp[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/CS/factory_rdr_cctor.cs#1)]
 [!code-vb[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/VB/factory_rdr_cctor.vb#1)]  
  
## <a name="input"></a>Entrada  
 El ejemplo utiliza como entrada el archivo inlineSchema.xml.  
  
 [!code-xml[XmlReaderSettings.IgnoreInlineSchema#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/XML/inlineSchema.xml#3)]  
  
## <a name="output"></a>Salida  
 Advertencia: Coincidencia de esquema no encontrado. No se ha producido la validación. No se ha podido encontrar la información de esquema del elemento 'raíz'.  
  
 Error de validación: el elemento 'xsdHeadCount: HeadCount' tiene un elemento secundario no válido 'division'. Se esperaba 'ID'.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidationType">
      <MemberSignature Language="C#" Value="public System.Xml.ValidationType ValidationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ValidationType ValidationType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ValidationType" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationType As ValidationType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ValidationType ValidationType { System::Xml::ValidationType get(); void set(System::Xml::ValidationType value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationType : System.Xml.ValidationType with get, set" Usage="System.Xml.XmlReaderSettings.ValidationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ValidationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el objeto <see cref="T:System.Xml.XmlReader" /> realizará la validación o la asignación de tipos al leer.</summary>
        <value>Uno de los valores de <see cref="T:System.Xml.ValidationType" /> que indica si XmlReader realizará la validación o la asignación de tipos al leer. El valor predeterminado es <see langword="ValidationType.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La tabla siguiente se describen los <xref:System.Xml.ValidationType> valores.  
  
> [!NOTE]
>  El <xref:System.Xml.ValidationType.Auto> y <xref:System.Xml.ValidationType.XDR> valores de enumeración están obsoletos en .NET Framework versión 2.0.  
  
|ValidationType|Descripción|  
|--------------------|-----------------|  
|`DTD`|Se realiza la validación utilizando una definición de tipo de documento (DTD). **Nota:** el <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> propiedad debe establecerse en <xref:System.Xml.DtdProcessing.Parse>.|  
|`None`|El <xref:System.Xml.XmlReader> no validar los datos o realizar cualquier tipo de asignación.|  
|`Schema`|Validación y el tipo de asignación se realiza mediante un esquema (XSD) del lenguaje de definición de esquemas XML. El lector tiene acceso el esquema XML mediante lo siguiente:<br /><br /> : Usa el <xref:System.Xml.XmlReaderSettings.Schemas%2A> propiedad para tener acceso a la <xref:System.Xml.Schema.XmlSchemaSet> objeto asociado a este lector.<br />-Utiliza el esquema de en la línea de contenido en el documento de instancia XML. (El <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> opción debe estar habilitada.)<br />: Usa el esquema XML especificado mediante sugerencias de ubicación de esquema (`xsi:schemaLocation` o `xsi:noNamespaceSchemaLocation` atributo) se encuentra en el documento de instancia XML. (El <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> opción debe estar habilitada.)|  
  
   
  
## Examples  
 El ejemplo siguiente se valida mediante un esquema almacenado en el <xref:System.Xml.Schema.XmlSchemaSet>.  
  
 [!code-cpp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CPP/XmlReader_Validate_SchemaSet.cpp#1)]
 [!code-csharp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CS/validschemaset.cs#1)]
 [!code-vb[XmlReader_Validate_SchemaSet#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Validate_SchemaSet/VB/validschemaset.vb#1)]  
  
 El ejemplo usa los archivos de entrada siguientes:  
  
 `booksSchemaFail.xml`  
  
 [!code-xml[XmlReader_Validate_SchemaSet#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/booksschemafail.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[XmlReader_Validate_SchemaSet#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.XmlReaderSettings.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Establece el objeto <see cref="T:System.Xml.XmlResolver" /> utilizado para obtener acceso a documentos externos.</summary>
        <value>Objeto <see cref="T:System.Xml.XmlResolver" /> utilizado para tener acceso a documentos externos. Si se establece en <see langword="null" />, se produce una excepción <see cref="T:System.Xml.XmlException" /> cuando el objeto <see cref="T:System.Xml.XmlReader" /> intenta obtener acceso a un recurso externo. El valor predeterminado es un nuevo objeto <see cref="T:System.Xml.XmlUrlResolver" /> sin credenciales.  A partir de .NET Framework 4.5.2, esta configuración tiene un valor predeterminado de <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Xml.XmlResolver> se utiliza para localizar y abrir un documento de instancia XML, o para buscar y abrir cualquier recurso externo al que hace referencia el documento de instancia XML. Esto puede incluir entidades, DTD o esquemas. El <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType> propiedad puede usarse para especificar las credenciales necesarias para la autenticación de red.  
  
> [!IMPORTANT]
>  Dado que el <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> puede contener información confidencial como credenciales de usuario, debe tener cuidado al almacenar en caché <xref:System.Xml.XmlReaderSettings> objetos, o al pasar el <xref:System.Xml.XmlReaderSettings> objeto de un componente a otro.  
>   
>  Un <xref:System.Xml.XmlSecureResolver> puede utilizarse para tener acceso a documentos externos. El <xref:System.Xml.XmlSecureResolver> clase ayuda a proteger otra implementación de <xref:System.Xml.XmlResolver> ajustando el <xref:System.Xml.XmlResolver> objeto y restringiendo los recursos que subyacente <xref:System.Xml.XmlResolver> tiene acceso a.  
>   
>  Las marcas de validación <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> y <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> de un objeto <xref:System.Xml.XmlReaderSettings> no están establecidos de manera predeterminada. Cuando se establecen estas marcas, se utiliza el <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> del objeto <xref:System.Xml.XmlReaderSettings> para resolver las ubicaciones de esquemas que se encuentra en el documento de la instancia de <xref:System.Xml.XmlReader>. Si el <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> objeto es `null`, las ubicaciones de esquemas no se resuelven aunque el <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> y <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> se establecen marcas de validación.  
>   
>  Los esquemas agregados durante la validación agregan nuevos tipos y pueden cambiar el resultado de la validación del documento. Como consecuencia, los esquemas externos solo se deberían resolver desde orígenes de confianza.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Xml.XmlReader> que usa un <xref:System.Xml.XmlSecureResolver> con credenciales predeterminadas.  
  
 [!code-csharp[XmlReader.Create#10](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#10)]
 [!code-vb[XmlReader.Create#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>