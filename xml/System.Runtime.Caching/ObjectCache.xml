<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ObjectCache.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53a3f877a2a018a9c5f39e477e544f6da9125c9cd.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3a3f877a2a018a9c5f39e477e544f6da9125c9cd</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Caching.ObjectCache">
          <source>Represents an object cache and provides the base methods and properties for accessing the object cache.</source>
          <target state="translated">Representa una memoria caché de objetos, y proporciona los métodos y las propiedades base para tener acceso a la memoria caché de objetos.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> type is the primary type for the in-memory object cache.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> tipo es el tipo primario de la caché de objetos en memoria.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>To develop a custom cache implementation, you derive from the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class.</source>
          <target state="translated">Para desarrollar una implementación de caché personalizado, derive de la <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class is new as of the <ph id="ph2">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> clase es una novedad de la <ph id="ph2">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The built-in <ph id="ph1">&lt;xref:System.Runtime.Caching.MemoryCache&gt;</ph> class derives from the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class.</source>
          <target state="translated">Integrado <ph id="ph1">&lt;xref:System.Runtime.Caching.MemoryCache&gt;</ph> clase se deriva de la <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.MemoryCache&gt;</ph> class is the only concrete object cache implementation in the <ph id="ph2">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> that derives from the <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Runtime.Caching.MemoryCache&gt;</ph> clase es la implementación de la caché de objeto concreta solo en el <ph id="ph2">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> que se deriva de la <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>This type is thread safe.</source>
          <target state="translated">Este tipo es seguro para la ejecución de subprocesos.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>Because the <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> type represents only common cache functions, there is no requirement for how an <ph id="ph2">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> instance must be instantiated and obtained.</source>
          <target state="translated">Dado que la <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> tipo representa funciones comunes de caché, no hay ningún requisito para saber cómo un <ph id="ph2">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> instancia se debe crear una instancia y obtenida.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>In addition, there is no requirement that concrete implementations of the <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> class must be singletons.</source>
          <target state="translated">Además, no es necesario que las implementaciones concretas de la <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> clase debe ser singletons.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source><ph id="ph1">&lt;block subset="none" type="note"&gt;</ph><ph id="ph2">&lt;para&gt;</ph><ph id="ph3">&lt;see cref="T:System.Runtime.Caching.MemoryCache" /&gt;</ph> is not a singleton, but you should create only a few or potentially only one <ph id="ph4">&lt;see cref="T:System.Runtime.Caching.MemoryCache" /&gt;</ph> instance and code that caches items should use those instances.</source>
          <target state="translated"><ph id="ph1">&lt;block subset="none" type="note"&gt;</ph><ph id="ph2">&lt;para&gt;</ph><ph id="ph3">&lt;see cref="T:System.Runtime.Caching.MemoryCache" /&gt;</ph> no es un singleton, pero debe crear solo pocos o potencialmente solo uno <ph id="ph4">&lt;see cref="T:System.Runtime.Caching.MemoryCache" /&gt;</ph> instancia y el código que almacena en caché elementos deberían usar esas instancias.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>When you inherit from the <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> class, you must override its methods.</source>
          <target state="translated">Al heredar de la <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> (clase), debe invalidar sus métodos.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.#ctor">
          <source>Called from constructors in derived classes in order to initialize the <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> class.</source>
          <target state="translated">Este método lo invocan los constructores de las clases derivadas para inicializar la clase <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Runtime.Caching.ObjectCache">
          <source>When overridden in a derived class, inserts a cache entry into the cache, without requiring that an existing cache entry with a matching key be returned.</source>
          <target state="translated">Cuando se invalida en una clase derivada, inserta una entrada de caché sin que sea necesario devolver una entrada existente con la misma clave.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method overloads try to insert a cache entry into the cache, without overwriting or removing an existing cache entry that has the same key.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> sobrecargas del método intentan insertar una entrada de caché en la memoria caché, sin sobrescribir o quitar una entrada de caché existente que tiene la misma clave.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The cache entry can be a typed <ph id="ph1">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> object or a generic object.</source>
          <target state="translated">La entrada de caché puede ser un tipo <ph id="ph1">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> objeto o un objeto genérico.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> method overloads and the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method overloads have one significant difference.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> sobrecargas de método y la <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> sobrecargas de método tienen una diferencia significativa.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>When these methods insert a cache entry, if a matching entry is found in the cache, the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> method overloads return the existing cache entry, but the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method overloads do not.</source>
          <target state="translated">Cuando estos métodos insertan una entrada de caché, si se encuentra una entrada coincidente en la memoria caché, el <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> sobrecargas del método devuelven la entrada de caché existente, pero la <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> sobrecargas de método no tienen que serlo.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>Having these different method overloads enables callers to optimize their code based on whether they need the existing cache entry.</source>
          <target state="translated">Con estas sobrecargas de método diferentes permite a los llamadores optimizar su código basado en si necesitan la entrada de caché existente.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>In distributed caches, returning an existing value by using the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> method might be more expensive than returning a Boolean value by using <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method.</source>
          <target state="translated">En las memorias caché distribuidas, devolver un valor existente utilizando el <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> método podría ser más cara que devolver un valor booleano mediante <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>The object to add.</source>
          <target state="translated">Objeto que se va a agregar.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">Objeto que contiene detalles sobre la expulsión de la entrada de caché.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">Este objeto proporciona más opciones de expulsión que una simple expiración absoluta.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>When overridden in a derived class, tries to insert a cache entry into the cache as a <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheItem" /&gt;</ph> instance, and adds details about how the entry should be evicted.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, intenta insertar una entrada en la memoria caché como una instancia de <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheItem" /&gt;</ph> y agrega detalles sobre cómo debe expulsarse la entrada.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if insertion succeeded, or <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there is an already an entry in the cache that has the same key as <ph id="ph3">&lt;paramref name="item" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si la inserción se realiza correctamente; es <ph id="ph2">&lt;see langword="false" /&gt;</ph> si ya hay una entrada en la memoria caché que tiene la misma clave que <ph id="ph3">&lt;paramref name="item" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method overloads are virtual (not abstract) on the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class, because the <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method internally calls <ph id="ph4">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> sobrecargas de método son virtuales (no abstractas) en el <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> de la clase, porque la <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> método llama internamente <ph id="ph4">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>This reduces the number of method overloads that a cache implementer has to provide.</source>
          <target state="translated">Esto reduce el número de sobrecargas del método que un implementador de la memoria caché tiene que proporcionar.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>If a cache implementation does not require any special behavior for the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method, it can just implement the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> method overloads.</source>
          <target state="translated">Si una implementación de caché no requiere ningún comportamiento especial para la <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> método, simplemente puede implementar la <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> sobrecargas del método.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">Identificador único de la entrada de caché.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>The object to insert.</source>
          <target state="translated">Objeto que se va a insertar.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>The fixed date and time at which the cache entry will expire.</source>
          <target state="translated">Fecha y hora fijas a la que expirará la entrada de caché.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>This parameter is required when the <ph id="ph1">&lt;see cref="Overload:System.Runtime.Caching.ObjectCache.Add" /&gt;</ph> method is called.</source>
          <target state="translated">Este parámetro es necesario cuando se llama al método <ph id="ph1">&lt;see cref="Overload:System.Runtime.Caching.ObjectCache.Add" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">Región con nombre de la memoria caché a la que se puede agregar la entrada si se implementan regiones.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>Because regions are not implemented in <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, the default value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Dado que no se implementan regiones en <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, el valor predeterminado es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>When overridden in a derived class, inserts a cache entry into the cache without overwriting any existing cache entry.</source>
          <target state="translated">Cuando se invalida en una clase derivada, inserta una entrada de caché en la memoria caché sin sobrescribir ninguna entrada existente.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if insertion succeeded, or <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there is an already an entry in the cache that has the same key as <ph id="ph3">&lt;paramref name="key" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si la inserción se realiza correctamente; es <ph id="ph2">&lt;see langword="false" /&gt;</ph> si ya hay una entrada en la memoria caché que tiene la misma clave que <ph id="ph3">&lt;paramref name="key" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method overloads are virtual (not abstract) on the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class, because the <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method internally calls <ph id="ph4">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> sobrecargas de método son virtuales (no abstractas) en el <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> de la clase, porque la <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> método llama internamente <ph id="ph4">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>This reduces the number of method overloads that a cache implementer has to provide.</source>
          <target state="translated">Esto reduce el número de sobrecargas del método que un implementador de la memoria caché tiene que proporcionar.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>If a cache implementation does not require any special behavior for the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method, it can just implement the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> method overloads.</source>
          <target state="translated">Si una implementación de caché no requiere ningún comportamiento especial para la <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> método, simplemente puede implementar la <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> sobrecargas del método.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">Identificador único de la entrada de caché.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>The object to insert.</source>
          <target state="translated">Objeto que se va a insertar.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">Objeto que contiene detalles sobre la expulsión de la entrada de caché.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">Este objeto proporciona más opciones de expulsión que una simple expiración absoluta.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">Región con nombre de la memoria caché a la que se puede agregar la entrada si se implementan regiones.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado para el parámetro opcional es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>When overridden in a derived class, inserts a cache entry into the cache, specifying information about how the entry will be evicted.</source>
          <target state="translated">Cuando se invalida en una clase derivada, inserta una entrada de caché en la memoria caché, y especifica información sobre cómo se expulsará la entrada.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the insertion try succeeds, or <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there is an already an entry in the cache with the same key as <ph id="ph3">&lt;paramref name="key" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el intento de inserción se realiza correctamente; es <ph id="ph2">&lt;see langword="false" /&gt;</ph> si ya hay una entrada en la memoria caché que tiene la misma clave que <ph id="ph3">&lt;paramref name="key" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method overloads are virtual (not abstract) on the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class, because the <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method internally calls <ph id="ph4">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> sobrecargas de método son virtuales (no abstractas) en el <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> de la clase, porque la <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> método llama internamente <ph id="ph4">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>This reduces the number of method overloads that a cache implementer has to provide.</source>
          <target state="translated">Esto reduce el número de sobrecargas del método que un implementador de la memoria caché tiene que proporcionar.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>If a cache implementation does not require any special behavior for the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method, it can just implement the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> method overloads.</source>
          <target state="translated">Si una implementación de caché no requiere ningún comportamiento especial para la <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> método, simplemente puede implementar la <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> sobrecargas del método.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="T:System.Runtime.Caching.ObjectCache">
          <source>When overridden in a derived class, tries to insert a cache entry into the cache, and returns an existing cache entry with a matching key.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, intenta insertar una entrada en la memoria caché y devuelve una entrada existente con la misma clave.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> method overloads insert an entry into the cache.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> sobrecargas del método insertan una entrada en la memoria caché.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>If a cache entry with a matching key already exists, they return the existing entry.</source>
          <target state="translated">Si ya existe una entrada de caché con una clave coincidente, devuelven la entrada existente.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The cache entry can be a <ph id="ph1">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> object or a generic object.</source>
          <target state="translated">La entrada de caché puede ser un <ph id="ph1">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> objeto o un objeto genérico.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>There is one difference between the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> overloads and the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> overloads.</source>
          <target state="translated">Hay una diferencia entre el <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> sobrecargas y el <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> sobrecargas.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>When these overloaded methods try to insert a cache entry, if an existing entry is found that has a key that matches an existing inserted cache entry, the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> overloads return the existing cache entry.</source>
          <target state="translated">Cuando estos métodos sobrecargados intentan insertar una entrada de caché, si se encuentra una entrada existente que ha insertado una clave que coincida con otra entrada de caché, el <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> sobrecargas devuelven la entrada de caché existente.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> overloads do not.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> sobrecargas no tienen que serlo.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>The object to insert.</source>
          <target state="translated">Objeto que se va a insertar.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">Objeto que contiene detalles sobre la expulsión de la entrada de caché.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">Este objeto proporciona más opciones de expulsión que una simple expiración absoluta.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>When overridden in a derived class, inserts the specified <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheItem" /&gt;</ph> object into the cache, specifying information about how the entry will be evicted.</source>
          <target state="translated">Cuando se invalida en una clase derivada, inserta el objeto <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheItem" /&gt;</ph> especificado en la memoria caché, y especifica información sobre cómo se expulsará la entrada.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>If a cache entry with the same key exists, the specified cache entry; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Si existe una entrada de caché con la misma clave, se devuelve la entrada de caché especificada; de lo contrario, se devuelve <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">Identificador único de la entrada de caché.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>The object to insert.</source>
          <target state="translated">Objeto que se va a insertar.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>The fixed date and time at which the cache entry will expire.</source>
          <target state="translated">Fecha y hora fijas a la que expirará la entrada de caché.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">Región con nombre de la memoria caché a la que se puede agregar la entrada si se implementan regiones.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado para el parámetro opcional es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>When overridden in a derived class, inserts a cache entry into the cache, by using a key, an object for the cache entry, an absolute expiration value, and an optional region to add the cache into.</source>
          <target state="translated">Cuando se invalida en una clase derivada, inserta una entrada de caché en la memoria caché utilizando una clave, un objeto para la entrada de caché, un valor de expiración absoluto y una región opcional a la que se va a agregar la entrada.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>If a cache entry with the same key exists, the specified cache entry's value; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Si ya existe una entrada de caché con la misma clave, se devuelve el valor de la entrada de caché especificada; de lo contrario, se devuelve <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>This <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29&gt;</ph> method overload returns an object value, not a <ph id="ph2">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> object.</source>
          <target state="translated">Esto <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29&gt;</ph> sobrecarga del método devuelve un valor de objeto, no un <ph id="ph2">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">Identificador único de la entrada de caché.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>The object to insert.</source>
          <target state="translated">Objeto que se va a insertar.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">Objeto que contiene detalles sobre la expulsión de la entrada de caché.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">Este objeto proporciona más opciones de expulsión que una simple expiración absoluta.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">Región con nombre de la memoria caché a la que se puede agregar la entrada si se implementan regiones.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado para el parámetro opcional es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>When overridden in a derived class, inserts a cache entry into the cache, specifying a key and a value for the cache entry, and information about how the entry will be evicted.</source>
          <target state="translated">Cuando se invalida en una clase derivada, inserta una entrada de caché en la memoria caché, y especifica una clave y un valor para la entrada, así como información sobre cómo va a expulsarse.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>If a cache entry with the same key exists, the specified cache entry's value; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Si ya existe una entrada de caché con la misma clave, se devuelve el valor de la entrada de caché especificada; de lo contrario, se devuelve <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29&gt;</ph> method returns an object value, not a <ph id="ph2">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> object.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29&gt;</ph> método devuelve un valor de objeto, no un <ph id="ph2">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">Identificador único de la entrada de caché.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)">
          <source>A named region in the cache where the cache can be found, if regions are implemented.</source>
          <target state="translated">Región con nombre de la memoria caché donde puede encontrarse la entrada si se implementan regiones.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado para el parámetro opcional es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)">
          <source>When overridden in a derived class, checks whether the cache entry already exists in the cache.</source>
          <target state="translated">Cuando se invalida en una clase derivada, comprueba si la entrada ya existe en la memoria caché.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the cache contains a cache entry with the same key value as <ph id="ph2">&lt;paramref name="key" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si la memoria caché contiene una entrada con el mismo valor de clave que <ph id="ph2">&lt;paramref name="key" /&gt;</ph>; de lo contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>The unique identifiers for cache entries to monitor.</source>
          <target state="translated">Identificadores únicos de las entradas de caché que se van a supervisar.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>A named region in the cache where the cache keys in the <bpt id="p1">&lt;c&gt;</bpt>keys<ept id="p1">&lt;/c&gt;</ept> parameter exist, if regions are implemented.</source>
          <target state="translated">Región con nombre de la memoria caché donde existen las claves de caché en el parámetro <bpt id="p1">&lt;c&gt;</bpt>keys<ept id="p1">&lt;/c&gt;</ept>, si se implementan regiones.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado para el parámetro opcional es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>When overridden in a derived class, creates a <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /&gt;</ph> object that can trigger events in response to changes to specified cache entries.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, crea un objeto <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /&gt;</ph> que puede activar eventos en respuesta a los cambios realizados en las entradas especificadas de la memoria caché.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>A change monitor that monitors cache entries in the cache.</source>
          <target state="translated">Supervisor de cambios que supervisa las entradas de la memoria caché.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>When a derived <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class overrides the base <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A&gt;</ph> method, the cache implementation must create a <ph id="ph3">&lt;xref:System.Runtime.Caching.CacheEntryChangeMonitor&gt;</ph> object.</source>
          <target state="translated">Cuando un derivada <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> clase invalida la base de <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A&gt;</ph> método, debe crear la implementación de la memoria caché un <ph id="ph3">&lt;xref:System.Runtime.Caching.CacheEntryChangeMonitor&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>This specialized change monitor notifies callers when there are changes to the cache entries that are specified in the <ph id="ph1">`keys`</ph> parameter.</source>
          <target state="translated">Este monitor de cambios especializado notifica a los llamadores cuando hay cambios en las entradas de caché que se especifican en el <ph id="ph1">`keys`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>For example, if a monitored item in the <ph id="ph1">`keys`</ph> parameter is updated or removed from the cache, the change monitor created by this method triggers an event.</source>
          <target state="translated">Por ejemplo, si un elemento supervisado en el <ph id="ph1">`keys`</ph> parámetro se actualizó o se quitó de la memoria caché, la supervisión de cambios creada por este método desencadena un evento.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>If a cache implementation supports named cache regions, a string value can be specified as the <ph id="ph1">`regionName`</ph> parameter.</source>
          <target state="translated">Si una implementación de caché es compatible con las regiones de caché con nombre, puede especificarse un valor de cadena como el <ph id="ph1">`regionName`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>Otherwise, the parameter defaults to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">En caso contrario, el parámetro tiene como valor predeterminado <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>Not all cache implementations support cache-entry change monitors.</source>
          <target state="translated">No todas las implementaciones de la memoria caché admiten monitores de cambio de entrada de caché.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>To determine whether your cache implementation supports <ph id="ph1">&lt;xref:System.Runtime.Caching.CacheEntryChangeMonitor&gt;</ph> objects, see the documentation for the specific cache implementation.</source>
          <target state="translated">Para determinar si su implementación de caché es compatible con <ph id="ph1">&lt;xref:System.Runtime.Caching.CacheEntryChangeMonitor&gt;</ph> objetos, consulte la documentación para la implementación de caché específica.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="P:System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities">
          <source>When overridden in a derived class, gets a description of the features that a cache implementation provides.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, obtiene una descripción de las características proporcionadas por una implementación de caché.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities">
          <source>A bitwise combination of flags that indicate the default capabilities of a cache implementation.</source>
          <target state="translated">Combinación bit a bit de las marcas que indican las características predeterminadas de una implementación de caché.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)">
          <source>A unique identifier for the cache entry to get.</source>
          <target state="translated">Un identificador único para la entrada de caché que se va a obtener.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)">
          <source>A named region in the cache to which the cache entry was added, if regions are implemented.</source>
          <target state="translated">Región con nombre de la memoria caché a la que se agregó la entrada si se implementan regiones.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado para el parámetro opcional es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)">
          <source>When overridden in a derived class, gets the specified cache entry from the cache as an object.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, obtiene la entrada especificada de la memoria caché como un objeto.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)">
          <source>The cache entry that is identified by <ph id="ph1">&lt;paramref name="key" /&gt;</ph>.</source>
          <target state="translated">Entrada de caché identificada por <ph id="ph1">&lt;paramref name="key" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>A unique identifier for the cache entry to get.</source>
          <target state="translated">Un identificador único para la entrada de caché que se va a obtener.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>A named region in the cache to which the cache was added, if regions are implemented.</source>
          <target state="translated">Región con nombre de la memoria caché a la que se agregó la entrada de caché, si se implementan regiones.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>Because regions are not implemented in <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, the default is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Dado que no se implementan regiones en <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, el valor predeterminado es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>When overridden in a derived class, gets the specified cache entry from the cache as a <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheItem" /&gt;</ph> instance.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, obtiene la entrada especificada de la memoria caché como una instancia de <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheItem" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>The cache entry that is identified by <ph id="ph1">&lt;paramref name="key" /&gt;</ph>.</source>
          <target state="translated">Entrada de caché identificada por <ph id="ph1">&lt;paramref name="key" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>This method overload exists because some cache implementations might extend the <ph id="ph1">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> class.</source>
          <target state="translated">Esta sobrecarga de método existe porque algunas implementaciones de la memoria caché pueden aumentar la <ph id="ph1">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>In that case, the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29&gt;</ph> method overload will not necessarily return all the information about cached data.</source>
          <target state="translated">En ese caso, el <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29&gt;</ph> sobrecarga del método no devolverá necesariamente toda la información sobre los datos almacenados en caché.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>However, the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29&gt;</ph> method overload enables custom caches to return more than just the cache value.</source>
          <target state="translated">Sin embargo, la <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29&gt;</ph> sobrecarga del método permite que las memorias caché personalizadas devolver algo más que el valor de la memoria caché.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29&gt;</ph> method is like the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29&gt;</ph> method, except that the <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29&gt;</ph> method returns return the cache entry as a <ph id="ph4">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> instance.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29&gt;</ph> método es similar a la <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29&gt;</ph> método, salvo que la <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29&gt;</ph> método devuelve de la entrada de caché como un <ph id="ph4">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)">
          <source>A named region in the cache for which the cache entry count should be computed, if regions are implemented.</source>
          <target state="translated">Región con nombre de la memoria caché para la que se debe calcular el recuento de entradas de caché, si se implementan regiones.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado para el parámetro opcional es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)">
          <source>When overridden in a derived class, gets the total number of cache entries in the cache.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, obtiene el número total de entradas de la memoria caché.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)">
          <source>The number of cache entries in the cache.</source>
          <target state="translated">Número de entradas de la memoria caché.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)">
          <source>If <ph id="ph1">&lt;paramref name="regionName" /&gt;</ph> is not <ph id="ph2">&lt;see langword="null" /&gt;</ph>, the count indicates the number of entries that are in the specified cache region.</source>
          <target state="translated">Si <ph id="ph1">&lt;paramref name="regionName" /&gt;</ph> no es <ph id="ph2">&lt;see langword="null" /&gt;</ph>, se devuelve el número de entradas en la región especificada de la memoria caché.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetEnumerator">
          <source>When overridden in a derived class, creates an enumerator that can be used to iterate through a collection of cache entries.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, crea un enumerador que puede usarse para iterar por una colección de entradas de la memoria caché.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetEnumerator">
          <source>The enumerator object that provides access to the cache entries in the cache.</source>
          <target state="translated">Objeto de enumerador que proporciona acceso a las entradas de la memoria caché.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetEnumerator">
          <source>Cache implementers can override and extend this method to provide a custom means of iterating through a collection of cache entries.</source>
          <target state="translated">Los implementadores de la memoria caché pueden invalidar y extender este método para proporcionar un medio personalizado para recorrer en iteración una colección de entradas de caché.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetEnumerator">
          <source>Returning an enumerator is typically a more expensive operation than returning the entire cache entry.</source>
          <target state="translated">Devuelve un enumerador es normalmente una operación más costosa que devolver la entrada de caché completa.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetEnumerator">
          <source>This method is called by the explicit interface implementations that the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class has for the <ph id="ph2">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> methods.</source>
          <target state="translated">Este método llama a las implementaciones de interfaz explícita que la <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> clase tiene para la <ph id="ph2">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> y <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="T:System.Runtime.Caching.ObjectCache">
          <source>Gets a set of cache entries.</source>
          <target state="translated">Obtiene un conjunto de entradas de la memoria caché.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>A collection of unique identifiers for the cache entries to get.</source>
          <target state="translated">Colección de identificadores únicos correspondientes a las entradas de caché que se van a obtener.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>A named region in the cache to which the cache entry or entries were added, if regions are implemented.</source>
          <target state="translated">Región con nombre de la memoria caché a la que se agregaron una o varias entradas de caché, si se implementan regiones.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado para el parámetro opcional es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>When overridden in a derived class, gets a set of cache entries that correspond to the specified keys.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, obtiene un conjunto de entradas de la memoria caché que corresponden a las claves especificadas.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>A dictionary of key/value pairs that represent cache entries.</source>
          <target state="translated">Diccionario de pares clave-valor que representan entradas de caché.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt;</ph> method overload is a performance optimization for distributed caches that support fetching multiple cache entries from the cache during a single network call.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt;</ph> sobrecarga del método es una optimización de rendimiento para las memorias caché distribuidas que admiten la captura de varias entradas de caché de la memoria caché durante una llamada de red único.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>Although a caller can pass one or more keys to the method, there is no guarantee that all keys represent entries in the cache.</source>
          <target state="translated">Aunque un llamador puede pasar una o más claves al método, no hay ninguna garantía de que todas las claves representan las entradas en la memoria caché.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>Therefore, the returned dictionary might contain fewer items than the number of keys that were passed to the method.</source>
          <target state="translated">Por lo tanto, el diccionario devuelto podría contener menos elementos que el número de claves que se pasaron al método.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])">
          <source>A named region in the cache to which the cache entry or entries were added, if regions are implemented.</source>
          <target state="translated">Región con nombre de la memoria caché a la que se agregaron una o varias entradas de caché, si se implementan regiones.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])">
          <source>Because regions are not implemented in <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, the default is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Dado que no se implementan regiones en <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, el valor predeterminado es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])">
          <source>A collection of unique identifiers for the cache entries to get.</source>
          <target state="translated">Colección de identificadores únicos correspondientes a las entradas de caché que se van a obtener.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])">
          <source>Gets a set of cache entries that correspond to the specified keys.</source>
          <target state="translated">Obtiene un conjunto de entradas de la memoria caché que corresponden a las claves especificadas.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])">
          <source>A dictionary of key/value pairs that represent cache entries.</source>
          <target state="translated">Diccionario de pares clave-valor que representan entradas de caché.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=nameWithType&gt;</ph> method overload is like the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt;</ph> method overload, but lets you pass the named region by using optional parameter syntax that is supported by managed languages such as C#.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=nameWithType&gt;</ph> sobrecarga del método es similar a la <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt;</ph> sobrecarga del método, pero permite pasar la región con nombre mediante la sintaxis de parámetro opcional que es compatible con los lenguajes administrados como C#.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])">
          <source>This method is a virtual method because the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class provides a default implementation that passes the <ph id="ph2">`params`</ph> array to the <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt;</ph> method overload.</source>
          <target state="translated">Este método es un método virtual porque el <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> clase proporciona una implementación predeterminada que pasa la <ph id="ph2">`params`</ph> de matriz para el <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt;</ph> sobrecarga del método.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>Gets or set a reference to a managed hosting environment that is available to <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> implementations and that can provide host-specific services to <ph id="ph2">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> implementations.</source>
          <target state="translated">Obtiene o establece una referencia a un entorno de hospedaje administrado que está disponible para las implementaciones de <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> y puede proporcionar servicios específicos del host a las implementaciones de <ph id="ph2">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>A reference to a cache-aware managed hosting environment.</source>
          <target state="translated">Referencia a un entorno de hospedaje administrado que reconoce la memoria caché.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Host%2A&gt;</ph> property is intended for use by <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> host environments and by cache implementations that implement behavior that depends on the .NET Framework host environment.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Host%2A&gt;</ph> propiedad está pensada para usarse en <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> entornos de host y entorno de host implementaciones de caché que implementan el comportamiento que depende de .NET Framework.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>The following table lists the set of host environment services that might be available from a managed hosting environment and that are available to <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> implementations through the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Host%2A&gt;</ph> property:</source>
          <target state="translated">La tabla siguiente enumera el conjunto de servicios de entorno de host que podrían estar disponibles en un entorno de hospedaje administrado y que están disponibles para <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> las implementaciones a través del <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Host%2A&gt;</ph> propiedad:</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>Service</source>
          <target state="translated">Servicio</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>Description</source>
          <target state="translated">Descripción</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>Lets host environments provide application domain identifiers that might be needed by a cache implementation for features such as identifying performance counters.</source>
          <target state="translated">Permite a los entornos de host proporcionar identificadores de dominio de aplicación que podrían ser necesarios en una implementación de la memoria caché para características como identificar los contadores de rendimiento.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>Lets host environments provide a custom file-change notification system, instead of using the one provided in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">Permite a los entornos de host proporcionar un sistema de notificación de cambio de archivo personalizado, en lugar de usar el uno incluido en el <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>Lets cache implementations report cache memory consumption to the host environment.</source>
          <target state="translated">Permite el consumo de memoria caché de informes de implementaciones de caché al entorno de host.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>This enables host environments to centrally manage memory consumption across multiple cache implementations.</source>
          <target state="translated">Esto permite administrar centralmente el consumo de memoria a través de varias implementaciones de la memoria caché de los entornos de host.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>Callers of this property value require unrestricted code access security permissions.</source>
          <target state="translated">Los llamadores del valor de esta propiedad, requieren permisos de seguridad de acceso de código sin restricciones.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>The value being assigned to the property is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor que se asigna a la propiedad es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>An attempt was made to set the property value more than one time.</source>
          <target state="translated">Se intentó establecer el valor de propiedad más de una vez.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>for full trust for all accessors of this property.</source>
          <target state="translated">de plena confianza para todos los descriptores de acceso de esta propiedad.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>This property cannot be used by partially trusted code.</source>
          <target state="translated">Esta propiedad no se puede usar por código de confianza parcial.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration">
          <source>Gets a value that indicates that a cache entry has no absolute expiration.</source>
          <target state="translated">Obtiene un valor que indica que una entrada de caché no tiene ninguna expiración absoluta.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration">
          <source>A cache entry that is inserted into the cache with the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration&gt;</ph> field value set as the expiration value should never expire based on an absolute point in time.</source>
          <target state="translated">Una entrada de caché que se inserta en la memoria caché con el <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration&gt;</ph> valor del campo como el valor de expiración no debe caducar nunca en función de un punto absoluto en el tiempo.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration">
          <source>However, a cache entry with this setting can be evicted from the cache for other reasons that are determined by a particular cache implementation, such as a change-monitor event eviction caused by memory pressure.</source>
          <target state="translated">Sin embargo, una entrada de caché con esta configuración puede ser expulsada de la memoria caché por otras razones que vengan determinados por una implementación de caché concreta, como una expulsión de evento de supervisión de cambios causada por la presión de memoria.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="P:System.Runtime.Caching.ObjectCache.Item(System.String)">
          <source>A unique identifier for a cache entry in the cache.</source>
          <target state="translated">Identificador único de una entrada de caché en la memoria caché.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.Runtime.Caching.ObjectCache.Item(System.String)">
          <source>Gets or sets the default indexer for the <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> class.</source>
          <target state="translated">Obtiene o establece el indizador predeterminado para la clase <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Item(System.String)">
          <source>A key that serves as an indexer into the cache instance.</source>
          <target state="translated">Clave que sirve de indizador en la instancia de la memoria caché.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Item(System.String)">
          <source>The behavior of the set accessor of this property is like the <ph id="ph1">&lt;xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29&gt;</ph> method.</source>
          <target state="translated">El comportamiento del descriptor de acceso set de esta propiedad es similar a la <ph id="ph1">&lt;xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Item(System.String)">
          <source>Internally, a cache implementation could set the absolute expiration of the specified value to the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration&gt;</ph> method.</source>
          <target state="translated">Internamente, una implementación de la memoria caché podría establecer la expiración absoluta del valor especificado para el <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Item(System.String)">
          <source>However this behavior is ultimately up to the cache implementation.</source>
          <target state="translated">Sin embargo este comportamiento es el usuario quien hasta la implementación de la memoria caché.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Item(System.String)">
          <source>The behavior of get accessor is like calling the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29&gt;</ph> method and using <ph id="ph2">`null`</ph> for the region name.</source>
          <target state="translated">El comportamiento del descriptor de acceso get es como llamar a la <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29&gt;</ph> método y usar <ph id="ph2">`null`</ph> para el nombre de región.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="P:System.Runtime.Caching.ObjectCache.Name">
          <source>Gets the name of a specific <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> instance.</source>
          <target state="translated">Obtiene el nombre de una instancia específica de <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Name">
          <source>The name of a specific cache instance.</source>
          <target state="translated">Nombre de una instancia específica de la memoria caché.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Name">
          <source>Some cache implementations might support multiple instances of the cache that is running in a single application.</source>
          <target state="translated">Algunas implementaciones de la memoria caché podrían admitir varias instancias de la memoria caché que se ejecuta en una sola aplicación.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Name">
          <source>This property lets cache implementers return a name that identifies a specific cache instance.</source>
          <target state="translated">Esta propiedad permite a los implementadores de la memoria caché devolver un nombre que identifica una instancia de caché específica.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration">
          <source>Indicates that a cache entry has no sliding expiration time.</source>
          <target state="translated">Indica que una entrada de caché no tiene ningún tiempo de expiración variable.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration">
          <source>Expiration that is based on duration or a defined window of time is also referred to as sliding expiration.</source>
          <target state="translated">Expiración que se basa en la duración o una ventana definida de tiempo también se conoce como la expiración variable.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration">
          <source>Normally, a cache implementation that evicts items that are based on sliding expiration will remove an item that has not been accessed in the specified window of time.</source>
          <target state="translated">Normalmente, una implementación de caché que extrae elementos que se basan en la expiración variable quitará un elemento que no se tuvo acceso en el intervalo de tiempo especificado.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration">
          <source>A cache entry that is inserted into the cache with the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration&gt;</ph> field value set as the expiration value should never be evicted because of non-activity in a sliding time window.</source>
          <target state="translated">Una entrada de caché que se inserta en la memoria caché con el <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration&gt;</ph> establecido como el valor de expiración nunca se debe expulsar debido a falta de actividad en una ventana deslizante de tiempo del valor del campo.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration">
          <source>However, a cache item can be evicted if it has an absolute expiration, or if some other eviction event occurs, such a change monitor or memory pressure.</source>
          <target state="translated">Sin embargo, un elemento de caché se pueda expulsar si tiene una expiración absoluta, o si se produce algún otro evento de expulsión, tal una presión de memoria o el monitor de cambio.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">Identificador único de la entrada de caché.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>A named region in the cache to which the cache entry was added, if regions are implemented.</source>
          <target state="translated">Región con nombre de la memoria caché a la que se agregó la entrada si se implementan regiones.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado para el parámetro opcional es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>When overridden in a derived class, removes the cache entry from the cache.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, quita la entrada de la memoria caché.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>An object that represents the value of the removed cache entry that was specified by the key, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the specified entry was not found.</source>
          <target state="translated">Objeto que representa el valor de la entrada de caché que se quitó y que se especificó mediante la clave, o <ph id="ph1">&lt;see langword="null" /&gt;</ph> si no se encontró la entrada especificada.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>If you override this method in a custom cache implementation, if there is a cache entry in the cache that corresponds to <ph id="ph1">`key`</ph>, the value of the removed item should be returned.</source>
          <target state="translated">Si invalide este método en una implementación de caché personalizado, si hay una entrada de caché en la memoria caché que corresponde a <ph id="ph1">`key`</ph>, se debe devolver el valor del elemento quitado.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>If nothing was removed from the cache, the method should return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Si no se quitó nada de la memoria caché, el método debe devolver <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>Some distributed cache implementations might not support the ability to return the value that was removed from the cache.</source>
          <target state="translated">Algunas implementaciones de caché distribuida podrían no admitir la capacidad de devolver el valor que se ha quitado de la memoria caché.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>This might be because the cache implementation does not support returning the value of a removed cache item.</source>
          <target state="translated">Esto podría deberse a que la implementación de la memoria caché no permite devolver el valor de un elemento de la memoria caché quitada.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>It might also be because marshaling the object as a return value is too expensive.</source>
          <target state="translated">También es posible que el cálculo de referencias del objeto como un valor devuelto es demasiado costoso.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>In such cases, cache implementations can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">En tales casos, las implementaciones de caché pueden devolver <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="T:System.Runtime.Caching.ObjectCache">
          <source>When overridden in a derived class, inserts a cache entry into the cache.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, inserta una entrada en la memoria caché.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The typical behavior of the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Set%2A&gt;</ph> overload methods is an insert-or-update operation.</source>
          <target state="translated">El comportamiento típico de la <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Set%2A&gt;</ph> métodos de sobrecarga es una operación de inserción o actualización.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>A cache entry is either inserted as a new entry if the specified entry does not exist, or the cache entry is updated with a new value if it already exists.</source>
          <target state="translated">Una entrada de caché es inserta como una nueva entrada si la entrada especificada no existe o se actualiza la entrada de caché con un nuevo valor si ya existe.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>The cache item to add.</source>
          <target state="translated">Elemento de caché que se va a agregar.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">Objeto que contiene detalles sobre la expulsión de la entrada de caché.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">Este objeto proporciona más opciones de expulsión que una simple expiración absoluta.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>When overridden in a derived class, inserts the cache entry into the cache as a <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheItem" /&gt;</ph> instance, specifying information about how the entry will be evicted.</source>
          <target state="translated">Cuando se invalida en una clase derivada, inserta la entrada de caché en la memoria caché como una instancia de <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheItem" /&gt;</ph>, y especifica información sobre cómo se expulsará la entrada.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>If the key for <ph id="ph1">`item`</ph> does not exist, <ph id="ph2">`item`</ph> is inserted as a new cache entry.</source>
          <target state="translated">Si la clave de <ph id="ph1">`item`</ph> no existe, <ph id="ph2">`item`</ph> se inserta como una nueva entrada de caché.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>If an item with a key that matches <ph id="ph1">`item`</ph> exists, the value from <ph id="ph2">`item`</ph> is used to update or overwrite the value of the existing cache entry.</source>
          <target state="translated">Si un elemento con una clave que coincida con <ph id="ph1">`item`</ph> existe, el valor de <ph id="ph2">`item`</ph> se utiliza para actualizar o sobrescribir el valor de la entrada de caché existente.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">Identificador único de la entrada de caché.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>The object to insert.</source>
          <target state="translated">Objeto que se va a insertar.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>The fixed date and time at which the cache entry will expire.</source>
          <target state="translated">Fecha y hora fijas a la que expirará la entrada de caché.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">Región con nombre de la memoria caché a la que se puede agregar la entrada si se implementan regiones.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado para el parámetro opcional es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>When overridden in a derived class, inserts a cache entry into the cache, specifying time-based expiration details.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, inserta una entrada de caché en la memoria caché, y especifica los detalles de la expiración basada en el tiempo.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>If an item that matches <ph id="ph1">`key`</ph> does not exist in the cache, <ph id="ph2">`value`</ph> and <ph id="ph3">`key`</ph> are used to insert as a new cache entry.</source>
          <target state="translated">Si un elemento que coincida con <ph id="ph1">`key`</ph> no existe en la memoria caché, <ph id="ph2">`value`</ph> y <ph id="ph3">`key`</ph> se usan para insertar como una nueva entrada de caché.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>If an item with a key that matches <ph id="ph1">`item`</ph> exists, the cache entry is updated or overwritten by using <ph id="ph2">`value`</ph>.</source>
          <target state="translated">Si un elemento con una clave que coincida con <ph id="ph1">`item`</ph> existe, se actualiza o sobrescribir mediante la entrada de caché <ph id="ph2">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">Identificador único de la entrada de caché.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>The object to insert.</source>
          <target state="translated">Objeto que se va a insertar.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">Objeto que contiene detalles sobre la expulsión de la entrada de caché.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">Este objeto proporciona más opciones de expulsión que una simple expiración absoluta.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">Región con nombre de la memoria caché a la que se puede agregar la entrada si se implementan regiones.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado para el parámetro opcional es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>When overridden in a derived class, inserts a cache entry into the cache.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, inserta una entrada en la memoria caché.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>This method overload lets you provide more eviction or expiration details than those that are available in time-based absolute expiration.</source>
          <target state="translated">Esta sobrecarga del método permite proporcionar más detalles de expulsión o expiración que los que están disponibles en tiempo de expiración absoluta.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>If an item that matches <ph id="ph1">`key`</ph> does not exist in the cache, <ph id="ph2">`value`</ph> and <ph id="ph3">`key`</ph> are used to insert as a new cache entry.</source>
          <target state="translated">Si un elemento que coincida con <ph id="ph1">`key`</ph> no existe en la memoria caché, <ph id="ph2">`value`</ph> y <ph id="ph3">`key`</ph> se usan para insertar como una nueva entrada de caché.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>If an item with a key that matches <ph id="ph1">`item`</ph> exists, the cache entry is updated or overwritten by using <ph id="ph2">`value`</ph>.</source>
          <target state="translated">Si un elemento con una clave que coincida con <ph id="ph1">`item`</ph> existe, se actualiza o sobrescribir mediante la entrada de caché <ph id="ph2">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator">
          <source>Supports iteration over a generic collection.</source>
          <target state="translated">Admite la iteración en una colección genérica.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator object that provides access to the items in the cache.</source>
          <target state="translated">Objeto de enumerador que proporciona acceso a los elementos de la memoria caché.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator">
          <source>It can be used only when a derived <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated">Se puede utilizar solo cuando un derivada <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> instancia se convierte en un <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interfaz.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator">
          <source>Developers can use this method to iterate through a generic collection of cache entries.</source>
          <target state="translated">Los desarrolladores pueden usar este método para recorrer en iteración una colección genérica de entradas de caché.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator">
          <source>This is the default <ph id="ph1">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> implementation that internally calls the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">Este es el valor predeterminado <ph id="ph1">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> implementación que internamente llama el <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A&gt;</ph> método.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>