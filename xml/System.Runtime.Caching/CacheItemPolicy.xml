<Type Name="CacheItemPolicy" FullName="System.Runtime.Caching.CacheItemPolicy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="88eb7fb93c5f8453c9b3179fe757b3ed4c72120a" />
    <Meta Name="ms.sourcegitcommit" Value="81d387351cc43c342755705908f4a5eb8af153d3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/04/2018" />
    <Meta Name="ms.locfileid" Value="34568212" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CacheItemPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CacheItemPolicy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.CacheItemPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Class CacheItemPolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class CacheItemPolicy" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa un conjunto de detalles de expulsión y expiración para una entrada específica de la memoria caché.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Runtime.Caching.CacheItemPolicy> instancia contiene información que se puede asociar con una entrada de caché. Por ejemplo, cuando una entrada de caché está a punto de quitarse de la memoria caché, un <xref:System.Runtime.Caching.CacheEntryUpdateArguments> objeto se pasa a un método de devolución de llamada. El <xref:System.Runtime.Caching.CacheEntryUpdateArguments.UpdatedCacheItemPolicy%2A> propiedad de la <xref:System.Runtime.Caching.CacheEntryUpdateArguments> objeto puede pasar una referencia a un <xref:System.Runtime.Caching.CacheItemPolicy> instancia que puede incluir detalles de expulsión y expiración sobre la entrada de caché.  
  
 Algunos métodos en la <xref:System.Runtime.Caching.MemoryCache> y <xref:System.Runtime.Caching.ObjectCache> clases aceptan un <xref:System.Runtime.Caching.CacheItemPolicy> instancia para describir la directiva de expulsión o expiración.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo crear un elemento de caché en memoria que supervisa la ruta de acceso para un archivo de texto. La memoria caché se crea un <xref:System.Runtime.Caching.CacheItemPolicy> objeto y establece el <xref:System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration%2A> propiedad para expulsar la memoria caché después de 60 segundos.  
  
```vb  
Protected Sub Button1_Click(ByVal sender As Object, _  
            ByVal e As System.EventArgs) Handles Button1.Click  
    Dim cache As ObjectCache = MemoryCache.Default  
    Dim fileContents As String = TryCast(cache("filecontents"), _  
            String)  
    If fileContents Is Nothing Then  
        Dim policy As New CacheItemPolicy()  
        policy.AbsoluteExpiration = _  
            DateTimeOffset.Now.AddSeconds(60.0)  
        Dim filePaths As New List(Of String)()  
     Dim cachedFilePath As String = Server.MapPath("~") & _  
         "\cacheText.txt"  
        filePaths.Add(cachedFilePath)  
        policy.ChangeMonitors.Add(New _  
            HostFileChangeMonitor(filePaths))  
  
        ' Fetch the file contents.  
        fileContents = File.ReadAllText(cachedFilePath)  
        cache.Set("filecontents", fileContents, policy)  
    End If  
    Label1.Text = fileContents  
End Sub  
```  
  
```csharp  
protected void Button1_Click(object sender, EventArgs e)  
    {  
        ObjectCache cache = MemoryCache.Default;  
            string fileContents = cache["filecontents"] as string;  
            if (fileContents == null)  
            {  
                CacheItemPolicy policy = new CacheItemPolicy();  
                policy.AbsoluteExpiration =   
                    DateTimeOffset.Now.AddSeconds(60.0);  
  
                List<string> filePaths = new List<string>();  
             string cachedFilePath = Server.MapPath("~") +   
                 "\\cacheText.txt";  
             filePaths.Add(cachedFilePath);  
  
                policy.ChangeMonitors.Add(new   
                    HostFileChangeMonitor(filePaths));  
  
                // Fetch the file contents.  
                fileContents = File.ReadAllText(cachedFilePath);  
  
                cache.Set("filecontents", fileContents, policy);  
  
            }  
  
            Label1.Text = fileContents;  
        }  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>El <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> tipo está sellado para que los desarrolladores de caché personalizado pueden ampliarlo.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheItemPolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.CacheItemPolicy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheItemPolicy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Caching.CacheItemPolicy" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbsoluteExpiration">
      <MemberSignature Language="C#" Value="public DateTimeOffset AbsoluteExpiration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset AbsoluteExpiration" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Property AbsoluteExpiration As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTimeOffset AbsoluteExpiration { DateTimeOffset get(); void set(DateTimeOffset value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se debe expulsar una entrada de caché en un punto temporal determinado.</summary>
        <value>El punto en el tiempo en el que se expulsa una entrada de caché. El valor predeterminado es <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" />, lo que significa que la entrada no expira.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeMonitors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Runtime.Caching.ChangeMonitor&gt; ChangeMonitors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Runtime.Caching.ChangeMonitor&gt; ChangeMonitors" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.CacheItemPolicy.ChangeMonitors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChangeMonitors As Collection(Of ChangeMonitor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Runtime::Caching::ChangeMonitor ^&gt; ^ ChangeMonitors { System::Collections::ObjectModel::Collection&lt;System::Runtime::Caching::ChangeMonitor ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Runtime.Caching.ChangeMonitor&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la colección de objetos <see cref="T:System.Runtime.Caching.ChangeMonitor" /> que están asociados a una entrada de la memoria caché.</summary>
        <value>Colección de supervisores de cambios. El valor predeterminado es una colección vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede agregar a o quitar a los monitores de cambio que están asociados a una entrada de caché. Sin embargo, el conjunto de monitores de cambio debe ser completo antes de pasar una <xref:System.Runtime.Caching.CacheItemPolicy> instancia a un <xref:System.Runtime.Caching.ObjectCache> implementación. Si cambia el conjunto de monitores de cambio en un <xref:System.Runtime.Caching.CacheItemPolicy> objeto después de la <xref:System.Runtime.Caching.CacheItemPolicy> objeto se ha pasado un <xref:System.Runtime.Caching.ObjectCache> implementación, los cambios no tienen ningún efecto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Runtime.Caching.CacheItemPriority Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Caching.CacheItemPriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.CacheItemPolicy.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As CacheItemPriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Caching::CacheItemPriority Priority { System::Runtime::Caching::CacheItemPriority get(); void set(System::Runtime::Caching::CacheItemPriority value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItemPriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor de prioridad que se usa para determinar si se va a expulsar una entrada de la memoria caché.</summary>
        <value>Uno de los valores de enumeración que indica la prioridad de expulsión. El valor de prioridad predeterminado es <see cref="F:System.Runtime.Caching.CacheItemPriority.Default" />, lo que significa que no hay prioridad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En ASP.NET, la enumeración de prioridad solo tiene dos prioridades posibles: <xref:System.Runtime.Caching.CacheItemPriority.Default> (lo que significa que no hay ninguna prioridad), y <xref:System.Runtime.Caching.CacheItemPriority.NotRemovable> (lo que significa que la entrada no se puede quitar). Por lo tanto, la única prioridad que se puede establecer es si una entrada de caché debe permanecer en la memoria caché indefinidamente.  
  
> [!IMPORTANT]
>  Agregue una entrada a la caché con un nivel de prioridad de <xref:System.Runtime.Caching.CacheItemPriority.NotRemovable> puede hacer que la memoria caché del desbordamiento con entradas que nunca se pueden quitar. Las implementaciones de la memoria caché deberían establecer el <xref:System.Runtime.Caching.CacheItemPriority.NotRemovable> prioridad para una entrada de caché solo si la implementación de la memoria caché proporciona maneras para expulsar las entradas de la memoria caché y para administrar el número de entradas de caché.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovedCallback">
      <MemberSignature Language="C#" Value="public System.Runtime.Caching.CacheEntryRemovedCallback RemovedCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Caching.CacheEntryRemovedCallback RemovedCallback" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.CacheItemPolicy.RemovedCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property RemovedCallback As CacheEntryRemovedCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Caching::CacheEntryRemovedCallback ^ RemovedCallback { System::Runtime::Caching::CacheEntryRemovedCallback ^ get(); void set(System::Runtime::Caching::CacheEntryRemovedCallback ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheEntryRemovedCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una referencia a un delegado <see cref="T:System.Runtime.Caching.CacheEntryRemovedCallback" /> que se invoca después de quitar una entrada de la memoria caché.</summary>
        <value>Referencia a un delegado al que llama una implementación de caché.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Después de una entrada de caché se ha quitado de la memoria caché, la memoria caché, invoca el objeto de devolución de llamada que hace referencia el <xref:System.Runtime.Caching.CacheItemPolicy.RemovedCallback%2A> propiedad. Una implementación de caché puede usar esta devolución de llamada para notificar el método de llamada que se ha quitado una entrada de caché.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SlidingExpiration">
      <MemberSignature Language="C#" Value="public TimeSpan SlidingExpiration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan SlidingExpiration" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Property SlidingExpiration As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan SlidingExpiration { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se debe expulsar una entrada de la memoria caché si no se ha obtenido acceso a la misma en el intervalo de tiempo especificado.</summary>
        <value>Intervalo de tiempo en el que se debe obtener acceso a una entrada antes de que sea expulsada de la memoria caché. El valor predeterminado es <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />, lo que significa que el elemento no debe expirar según un intervalo de tiempo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCallback">
      <MemberSignature Language="C#" Value="public System.Runtime.Caching.CacheEntryUpdateCallback UpdateCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Caching.CacheEntryUpdateCallback UpdateCallback" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.CacheItemPolicy.UpdateCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCallback As CacheEntryUpdateCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Caching::CacheEntryUpdateCallback ^ UpdateCallback { System::Runtime::Caching::CacheEntryUpdateCallback ^ get(); void set(System::Runtime::Caching::CacheEntryUpdateCallback ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheEntryUpdateCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una referencia a un delegado <see cref="T:System.Runtime.Caching.CacheEntryUpdateCallback" /> al que se llama antes de quitar una entrada de la memoria caché.</summary>
        <value>Referencia a un delegado al que llama una implementación de caché.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>