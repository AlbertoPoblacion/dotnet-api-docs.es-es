<Type Name="HostFileChangeMonitor" FullName="System.Runtime.Caching.HostFileChangeMonitor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9766bc72336871e34c9cfc627b4f217c5c9854da" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36637459" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HostFileChangeMonitor : System.Runtime.Caching.FileChangeMonitor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HostFileChangeMonitor extends System.Runtime.Caching.FileChangeMonitor" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.HostFileChangeMonitor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HostFileChangeMonitor&#xA;Inherits FileChangeMonitor" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostFileChangeMonitor sealed : System::Runtime::Caching::FileChangeMonitor" />
  <TypeSignature Language="F#" Value="type HostFileChangeMonitor = class&#xA;    inherit FileChangeMonitor" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.Caching.FileChangeMonitor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Supervisa directorios y rutas de acceso de archivo, y notifica a la memoria caché los cambios efectuados en los elementos supervisados. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Runtime.Caching.HostFileChangeMonitor> clase es una implementación concreta de la <xref:System.Runtime.Caching.FileChangeMonitor> tipo. Esta clase está sellada, por lo tanto, no se puede ampliar. Esta clase es útil si desea usar una implementación existente de la memoria caché y para supervisar cambios en directorios y archivos.  
  
 Para cada archivo especificado o la ruta de acceso de directorio, la <xref:System.Runtime.Caching.HostFileChangeMonitor> clase desencadena una notificación de cambio si se produce alguno de los siguientes cambios:  
  
-   El nombre del archivo supervisado o cambios en el directorio.  
  
-   El archivo o directorio especificado no existía en el momento en que se creó el monitor, pero se crea con posterioridad. En otras palabras, un archivo o directorio se creó en el ámbito de los elementos supervisados.  
  
-   Cambia el tamaño de un archivo supervisado.  
  
-   El contenido de un archivo supervisado cambiado o el contenido de un directorio supervisado cambiado.  
  
-   Se cambió la lista de control de acceso (ACL) del archivo o directorio.  
  
-   Se eliminó el archivo o directorio supervisado.  
  
 Si se producen demasiados cambios para el archivo o directorio supervisado al mismo tiempo, el <xref:System.Runtime.Caching.HostFileChangeMonitor> instancia puede perder la pista de cambios concretos. En este escenario, la <xref:System.Runtime.Caching.HostFileChangeMonitor> clase desencadena una notificación de cambio. Este escenario es más probable que se produzca cuando el <xref:System.Runtime.Caching.HostFileChangeMonitor> instancia supervisa un directorio y se producen muchos cambios en el ámbito de la estructura de directorios en un breve período de tiempo.  
  
 Dado que el propósito de la <xref:System.Runtime.Caching.HostFileChangeMonitor> clase es solo señalar que algo ha cambiado entre el conjunto de archivos supervisados y directorios, no se considera importante que no se capturan los detalles sobre un cambio concreto. El propósito de la <xref:System.Runtime.Caching.HostFileChangeMonitor> clase es proporcionar la notificación de estado ha cambiado para que se pueda expulsar una entrada de caché (o entradas). Dado que la <xref:System.Runtime.Caching.HostFileChangeMonitor> clase no indica lo que cambió exactamente, desbordamiento de seguimiento de cambios interna es irrelevante.  
  
 Al proporcionar rutas de acceso a un <xref:System.Runtime.Caching.HostFileChangeMonitor> las rutas de acceso de instancia, el directorio y el archivo deben ser rutas de acceso completas al directorio o archivo. No se permiten rutas de acceso relativas ni caracteres comodín en las rutas de acceso.  
  
 Cuando el <xref:System.Runtime.Caching.HostFileChangeMonitor> clase se usa en una aplicación ASP.NET, la identidad de Windows que se utiliza para tener acceso a los elementos supervisados es la identidad de aplicación para la aplicación ASP.NET. En otras palabras, la identidad de aplicación será uno de los siguientes:  
  
-   La identidad del proceso.  
  
-   La identidad de la aplicación configurada.  
  
-   La credencial UNC si la aplicación se ejecuta desde un recurso compartido UNC.  
  
 Cuando el <xref:System.Runtime.Caching.HostFileChangeMonitor> clase se utiliza en una aplicación no sean ASP.NET, el <xref:System.IO.FileSystemWatcher> clase se utiliza internamente para supervisar los archivos. Como resultado, la lista de control de acceso (ACL) se aplica a un archivo o directorio supervisado se aplica a la identidad de Windows del subproceso actual.  
  
> [!NOTE]
>  Los llamadores deben tener el nivel adecuado de permisos de seguridad (CAS) de acceso del código y deben tener permisos de NTFS supervisados todos los directorios y rutas de acceso.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un elemento de caché que usa un <xref:System.Runtime.Caching.HostFileChangeMonitor> objeto para supervisar el estado de los datos de origen (que es un archivo) del sistema de archivos. La entrada de caché se define utilizando un <xref:System.Runtime.Caching.CacheItemPolicy> objeto para proporcionar detalles de expulsión y expiración para la entrada de caché.  
  
 [!code-csharp[CachingASPNetApplications#1](~/samples/snippets/csharp/VS_Snippets_WebNet/cachingaspnetapplications/cs/default.aspx.cs#1)]
 [!code-vb[CachingASPNetApplications#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/cachingaspnetapplications/vb/default.aspx.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostFileChangeMonitor (System.Collections.Generic.IList&lt;string&gt; filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;string&gt; filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filePaths As IList(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostFileChangeMonitor(System::Collections::Generic::IList&lt;System::String ^&gt; ^ filePaths);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Caching.HostFileChangeMonitor : System.Collections.Generic.IList&lt;string&gt; -&gt; System.Runtime.Caching.HostFileChangeMonitor" Usage="new System.Runtime.Caching.HostFileChangeMonitor filePaths" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="filePaths">Una lista que contiene una o más rutas de acceso de directorios o de archivos que se van a supervisar.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Caching.HostFileChangeMonitor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llamadas a la <xref:System.Runtime.Caching.HostFileChangeMonitor.%23ctor%2A> constructor debe proporcionar un valor distinto de null para la `filePaths` parámetro. Como mínimo, el constructor valida la colección de rutas de acceso que se pasa en él y, a continuación, inicializa la supervisión de esas rutas.  
  
> [!NOTE]
>  El constructor realiza sólo validación de cadenas de nombre de ruta de acceso. No normalizar las rutas de acceso ni validar la existen de las rutas de acceso.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filePaths" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="filePaths" /> contiene cero elementos.  -o bien- Una ruta de acceso en la lista de <paramref name="filePaths" /> es <see langword="null" /> o una cadena vacía.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.HostFileChangeMonitor.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="hostFileChangeMonitor.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePaths">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; FilePaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; FilePaths" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.HostFileChangeMonitor.FilePaths" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FilePaths As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ FilePaths { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilePaths : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="System.Runtime.Caching.HostFileChangeMonitor.FilePaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la colección de rutas de acceso de directorios y archivos que se pasó al constructor <see cref="M:System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})" />.</summary>
        <value>Colección de rutas de acceso de directorios y archivos.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastModified">
      <MemberSignature Language="C#" Value="public override DateTimeOffset LastModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset LastModified" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.HostFileChangeMonitor.LastModified" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LastModified As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTimeOffset LastModified { DateTimeOffset get(); };" />
      <MemberSignature Language="F#" Value="member this.LastModified : DateTimeOffset" Usage="System.Runtime.Caching.HostFileChangeMonitor.LastModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor de solo lectura que indica la última vez que se produjo la escritura de un archivo o ruta de acceso que se supervisa.</summary>
        <value>La última vez que se produjo la escritura de un archivo o ruta de acceso que se supervisa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un monitor de cambio de archivo está supervisando varios archivos o rutas de acceso, esta propiedad devuelve la hora de escritura más reciente en el conjunto de todos los archivos y rutas de acceso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UniqueId">
      <MemberSignature Language="C#" Value="public override string UniqueId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueId" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.HostFileChangeMonitor.UniqueId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UniqueId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UniqueId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniqueId : string" Usage="System.Runtime.Caching.HostFileChangeMonitor.UniqueId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un identificador de la instancia <see cref="T:System.Runtime.Caching.HostFileChangeMonitor" /> que se basa en el conjunto de rutas de acceso de directorios y archivo supervisados.</summary>
        <value>Identificador de la supervisión de cambios.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La cadena que constituye el <xref:System.Runtime.Caching.HostFileChangeMonitor.UniqueId%2A> valor de propiedad se construye a partir de las siguientes partes:  
  
-   Una ruta de acceso de archivo o directorio.  
  
-   La hora de escritura más reciente en hora UTC, medida como pasos pero representada como una cadena hexadecimal.  
  
-   El tamaño del archivo, representado como una cadena hexadecimal.  
  
 Si un monitor de cambio de archivo está supervisando varias rutas de acceso, la información devuelta por esta propiedad se concatena en una única cadena para todos los directorios supervisados y rutas de acceso de archivo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>