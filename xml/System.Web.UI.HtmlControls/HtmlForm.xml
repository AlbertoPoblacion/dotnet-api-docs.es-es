<Type Name="HtmlForm" FullName="System.Web.UI.HtmlControls.HtmlForm">
  <Metadata><Meta Name="ms.openlocfilehash" Value="195d23ce0a1bbbc979457bbc959e8f21590858fc" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53457633" /></Metadata><TypeSignature Language="C#" Value="public class HtmlForm : System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlForm extends System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlForm" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlForm&#xA;Inherits HtmlContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlForm : System::Web::UI::HtmlControls::HtmlContainerControl" />
  <TypeSignature Language="F#" Value="type HtmlForm = class&#xA;    inherit HtmlContainerControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona acceso mediante programación al elemento HTML <see langword="&lt;form&gt;" /> del servidor.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.HtmlControls.HtmlForm> control es un contenedor para los controles de servidor en una página de formularios Web Forms. Todos los controles de servidor que registrar el servidor deben colocarse entre las etiquetas apertura y cierre de un <xref:System.Web.UI.HtmlControls.HtmlForm> control.  
  
> [!NOTE]
>  ASP.NET permite una sola <xref:System.Web.UI.HtmlControls.HtmlForm> control estén activos en una página de formularios Web Forms. Si hay más de un activo <xref:System.Web.UI.HtmlControls.HtmlForm> control en una página de formularios Web Forms, common language runtime iniciará una <xref:System.Web.HttpException?displayProperty=nameWithType> excepción cuando se solicite la página. Sin embargo, puede usar un <xref:System.Web.UI.WebControls.MultiView> controlan dónde cada <xref:System.Web.UI.WebControls.View> objeto contiene uno <xref:System.Web.UI.HtmlControls.HtmlForm> controlar, porque sólo un <xref:System.Web.UI.WebControls.View> está activo en un momento dado.  
  
 Puede controlar el comportamiento de la <xref:System.Web.UI.HtmlControls.HtmlForm> control estableciendo sus propiedades. Para especificar el tipo de codificación para los datos del formulario, establezca el <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> propiedad. El método (`GET` o `POST`) que usa un explorador para publicar datos de formulario en el servidor para el procesamiento se especifica estableciendo el <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> propiedad.  
  
> [!CAUTION]
>  De forma predeterminada, la propiedad <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> se establece en `POST`. Puede modificar el valor de esta propiedad en `GET`, pero esto podría interrumpir el estado integrado y devolución de datos de servicios proporcionados por el marco de páginas ASP.NET.  
  
 Puede configurar los controles que implementan el <xref:System.Web.UI.WebControls.IButtonControl> interfaz para publicar en una página de destino diferente. Esto se conoce como publicación entre páginas. Para obtener más información, consulte [entre páginas de registro en los formularios Web Forms ASP.NET](https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).  
  
 Para obtener una lista de valores de propiedad iniciales de una instancia de <xref:System.Web.UI.HtmlControls.HtmlForm>, consulte el <xref:System.Web.UI.HtmlControls.HtmlForm.%23ctor%2A> constructor.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.HtmlControls.HtmlForm> clase para crear un formulario simple.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
    <related type="Article" href="https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b">Entre páginas de registro en una página Web ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlForm();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este constructor para crear e inicializar una nueva instancia de la <xref:System.Web.UI.HtmlControls.HtmlForm> clase.  
  
 En la tabla siguiente se muestra el valor de propiedad iniciales de una instancia de <xref:System.Web.UI.HtmlControls.HtmlForm>.  
  
|Propiedad.|Valor inicial|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|La cadena literal "formulario".|  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear una nueva instancia de la <xref:System.Web.UI.HtmlControls.HtmlForm> controlar y colóquelo en la página Web.  
  
 [!code-aspx-csharp[HtmlFormCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormCtor/CS/htmlformctorcs.aspx#1)]
 [!code-aspx-vb[HtmlFormCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormCtor/VB/htmlformctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.TagName" />
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el atributo action del formulario HTML.</summary>
        <value>Atributo action del formulario HTML. El valor predeterminado es <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usa el <xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A> propiedad cuando vuelva a escribir la dirección URL de la solicitud original, pero desea conservar la dirección URL original para el atributo action del formulario HTML. Establecer el <xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A> en el valor de la dirección URL que desea conservar.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpContext.RewritePath(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.HtmlControls.HtmlForm.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el identificador generado por [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] para el control <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <value>El identificador de control generado por [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] para el <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para evitar conflictos de nomenclatura cuando se presentan varias instancias de un control, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] genera automáticamente un único <xref:System.Web.UI.HtmlControls.HtmlForm.ClientID%2A> valor para cada control en una página. Para obtener más información, vea la propiedad <xref:System.Web.UI.Control.ClientID%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7">Identificación de controles de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="htmlForm.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una nueva colección <see cref="T:System.Web.UI.ControlCollection" /> para el control <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <returns>Colección <see cref="T:System.Web.UI.ControlCollection" /> que contiene los controles de servidor secundarios del control <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el control secundario del control <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> que origina el postback cuando se presiona la tecla ENTRAR.</summary>
        <value>Propiedad <see cref="P:System.Web.UI.Control.ID" /> del control de botón que se va a mostrar como botón predeterminado cuando se cargue el objeto <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> propiedad le permite especificar que los usuarios pueden producir un postback, presione ENTRAR en un control de entrada en el formulario (por ejemplo, un cuadro de texto). Puede especificar como un botón predeterminado cualquier control que se deriva el <xref:System.Web.UI.WebControls.IButtonControl> interfaz, excepto el <xref:System.Web.UI.WebControls.LinkButton> control. Si el control al que hace referencia el <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> propiedad no se deriva de <xref:System.Web.UI.WebControls.IButtonControl>, un <xref:System.InvalidOperationException> es una excepción.  
  
 Si utiliza las páginas maestras y establece el <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> propiedad desde una página de contenido, use el <xref:System.Web.UI.Control.UniqueID%2A> propiedad de la <xref:System.Web.UI.WebControls.IButtonControl> botón. Para obtener más información acerca de las páginas maestras, vea [páginas maestras en ASP.NET](https://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b).  
  
 El <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> propiedad no puede provocar una devolución de datos en los siguientes escenarios:  
  
-   Al presionar ENTRAR cuando el foco está fuera de los controles de entrada en el formulario. La acción de devolución de datos predeterminada no se garantiza que se desencadene.  
  
-   Al presionar ENTRAR cuando el foco está dentro de un cuadro de texto multilínea. En un cuadro de texto de varias líneas, el comportamiento esperado es que al presionar ENTRAR crea una nueva línea en el cuadro de texto. En algunos exploradores, al presionar ENTRAR dentro de los desencadenadores de cuadro de texto multilínea una devolución de datos. En ese caso, si desea entrar para crear una nueva línea en su lugar, puede asociar una función de JavaScript para el control de entrada. El script debe capturar la tecla ENTRAR y detener la devolución de datos. Por ejemplo, puede usar el <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> colección de propiedades para agregar el script de cliente para el `onKeyPress` eventos.  
  
-   Especificar un <xref:System.Web.UI.WebControls.LinkButton> control como un botón predeterminado. Solo <xref:System.Web.UI.WebControls.Button> y <xref:System.Web.UI.WebControls.ImageButton> se admiten los controles.  
  
-   Cambiar el <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> propiedad mediante programación durante un postback asincrónico. Se pueden habilitar los postbacks asincrónicos en una página mediante la adición de uno o más <xref:System.Web.UI.UpdatePanel> controles a la página. Para obtener más información, consulte [información general del Control UpdatePanel](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) y [información general de representación de página parcial](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo establecer el <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> propiedad para establecer el control predeterminado que se produce un postback.  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El control al que se hace referencia como botón predeterminado no es del tipo <see cref="T:System.Web.UI.WebControls.IButtonControl" />.</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <related type="Article" href="https://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b">ASP.NET Master Pages Overview</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultFocus">
      <MemberSignature Language="C#" Value="public string DefaultFocus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultFocus" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultFocus As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultFocus { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultFocus : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el control del formulario que se va a mostrar como control con el foco de entrada cuando se cargue el control <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <value>Obtiene o establece el control <see cref="P:System.Web.UI.Control.ClientID" /> del formulario que se va a mostrar como control con el foco de entrada cuando se cargue el control <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> propiedad para tener acceso al control en el formulario para mostrar como control con la entrada centrarse cuando el <xref:System.Web.UI.HtmlControls.HtmlForm> se carga el control. Se muestran los controles que se pueden seleccionar con una indicación visual que indica tienen el foco. Por ejemplo, un <xref:System.Web.UI.WebControls.TextBox> control con el foco se muestra con el punto de inserción se coloca dentro de él.  
  
 También se puede establecer el control tiene el foco mediante el <xref:System.Web.UI.Control.Focus%2A> o <xref:System.Web.UI.Page.SetFocus%2A> métodos. Estos métodos tienen precedencia sobre la <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> propiedad. Si cualquiera de estos métodos se llama para establecer el control con el foco, el valor de la <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> propiedad se omite.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo establecer el <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> propiedad para mostrar un control especificado en un formulario como control con el foco de entrada cuando se carga el formulario. Cuando `Form1` representaciones, tenga en cuenta que el punto de inserción se coloca en `TextBox1`, lo que indica que `TextBox1` es el control tiene el foco.  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Enctype">
      <MemberSignature Language="C#" Value="public string Enctype { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Enctype" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      <MemberSignature Language="VB.NET" Value="Public Property Enctype As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Enctype { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Enctype : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tipo de codificación que utiliza el explorador cuando envía datos del formulario al servidor.</summary>
        <value>Cadena que contiene el tipo de codificación. El valor predeterminado es una cadena vacía (""), que indica que se utiliza el tipo de contenido predeterminado del explorador.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> propiedad para especificar el tipo de codificación un explorador que se usa para enviar datos al servidor.  
  
 En la tabla siguiente se muestra los tipos de codificación comunes.  
  
|Tipo de codificación|Descripción|  
|-------------------|-----------------|  
|application/x-www-form-urlencoded|Datos del formulario se codifican como pares nombre/valor. Este es el formato de codificación estándar.|  
|varias partes/datos de formulario|Datos del formulario se codifican como un mensaje con una parte independiente para cada control en la página.|  
|text/plain|Datos de formulario están codificados en texto sin formato, sin controles ni caracteres de formato.|  
  
 Para obtener más información sobre tipos de codificación, consulte el [World Wide Web Consortium (sitio Web de W3C](https://go.microsoft.com/fwlink/?linkid=37125).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> propiedad para especificar el tipo de codificación del explorador que se usa para enviar datos al servidor.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      <MemberSignature Language="VB.NET" Value="Public Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica la forma en que un explorador envía los datos del formulario al servidor para su procesamiento.</summary>
        <value>Cadena que indica la forma en que un explorador envía los datos del formulario al servidor. El valor predeterminado es <see langword="POST" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esta propiedad para especificar cómo el explorador envía los datos del formulario al servidor para su procesamiento. Los dos métodos comunes compatibles con todos los exploradores son `GET` y `POST`.  
  
> [!CAUTION]
>  Puede invalidar el valor predeterminado de esta propiedad y use la `GET` método en lugar de `POST`. Sin embargo, dado que `GET` las solicitudes se limitan en la cantidad de datos que pueden incluir, mediante el `GET` método podrían, en algunos casos, las capacidades de administración de postback y de estado proporcionadas por el marco de páginas ASP.NET producir un error.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> propiedad para especificar que se registran datos de formulario al servidor.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de identificador del control <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <value>Cadena que contiene el nombre de identificador del control <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> propiedad para determinar el nombre de identificador único para un <xref:System.Web.UI.HtmlControls.HtmlForm> control. En esta implementación, al obtener esta propiedad devuelve el valor de la <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> propiedad. Sin embargo, al establecer la propiedad no asigna un valor a la propiedad. Establecer la propiedad no asigna un valor a esta propiedad porque el <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> propiedad debe tener el mismo valor que el <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> propiedad.  
  
> [!NOTE]
>  El `name` atributo no es un atributo compatibles con XHTML y no se representa por ASP.NET, independientemente de la `xhtmlConformance` configuración.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
        <related type="Article" href="https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">ASP.NET y compatibilidad con XHTML</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="htmlForm.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene datos de eventos.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.Control.Init" /> para el control <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando sean notificadas por el <xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A> método, los controles de servidor Web deben realizar todos los pasos de inicialización que son necesarios para crear y configurar una instancia. En esta fase del ciclo de vida del control de servidor, estado de vista del control aún no se rellena. Además, no se puede tener acceso a otros controles de servidor cuando se llama a este método, independientemente de si es un secundario o primario de este control. Otros controles de servidor no se garantiza que se crea y se prepara para el acceso.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Web.UI.WebControls.GridView.OnInit%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 El <xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A> método usan principalmente los desarrolladores de controles amplían la funcionalidad de la <xref:System.Web.UI.HtmlControls.HtmlForm> control.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Cuando se reemplaza el <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> método en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> método para que los delegados registrados reciban el evento. Además, una llamada a la clase base <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> método garantiza que el <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control está establecido correctamente como formulario de la página Web y se conserva el estado de vista.</para></block>
        <altmember cref="M:System.Web.UI.Page.RegisterViewStateHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="htmlForm.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.Control.PreRender" /> para el control <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A> se llama al método justo antes de procesar el <xref:System.Web.UI.HtmlControls.HtmlForm> control. Si el <xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType> propiedad está establecida en `true`, el <xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A> método registra la referencia de archivo de secuencia de comandos de navegación inteligente para que se represente.  
  
> [!NOTE]
>  El <xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType> propiedad ha quedado obsoleto en la versión 2.0 de ASP.NET.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (output As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.Render output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="output">Objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> que recibe el resultado representado.</param>
        <summary>Representa el control <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> en el objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> método representa un elemento HTML `<iframe>` elemento si el <xref:System.Web.UI.Page.SmartNavigation%2A> propiedad está establecida en `true`. El <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> método llama a la base de <xref:System.Web.UI.Control.Render%2A> método.  
  
 El <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> método usan principalmente los desarrolladores de controles amplían la funcionalidad de la <xref:System.Web.UI.HtmlControls.HtmlForm> control.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">El control <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> no se representa sin una referencia a la instancia <see cref="T:System.Web.UI.Page" />.</exception>
        <block subset="none" type="overrides"><para>Cuando se reemplaza el <see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" /> método en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" /> método para que el <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> controles secundarios del control se representan correctamente.</para></block>
        <altmember cref="T:System.Web.HttpException" />
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> que recibe el resultado representado.</param>
        <summary>Representa los atributos del control <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> en el objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> método usa la <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> método para comprobar la <xref:System.Web.UI.HtmlControls.HtmlForm> atributos del control para asegurarse de que puede representarse en la etiqueta de apertura de un `<form>` elemento HTML.  
  
 Además, el <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> método representa el `method`, `action`, y `onsubmit` los atributos de la <xref:System.Web.UI.HtmlControls.HtmlForm> control. Si establece el identificador del control el <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> propiedad no implementa el <xref:System.Web.UI.WebControls.IButtonControl> interfaz, un <xref:System.InvalidOperationException> excepción.  
  
 El <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> método usan principalmente los desarrolladores de controles amplían la funcionalidad de la <xref:System.Web.UI.HtmlControls.HtmlForm> control.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El id. de control establecido en la propiedad <see cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" /> no es del tipo <see cref="T:System.Web.UI.WebControls.IButtonControl" />.</exception>
        <block subset="none" type="overrides"><para>Cuando se reemplaza el <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" /> método en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" /> método para que el <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> se representen correctamente los atributos del control.</para></block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <altmember cref="T:System.InvalidOperationException" />
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> que recibe el resultado representado.</param>
        <summary>Representa los controles secundarios del control <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.HtmlControls.HtmlForm.RenderChildren%2A> método representa script de cliente para asegurarse de que se establece el foco del explorador en el control especificado en el <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> propiedad.  
  
> [!NOTE]
>  Un control especificado por el <xref:System.Web.UI.Page.SetFocus%2A?displayProperty=nameWithType> propiedad tiene prioridad sobre un control especificado por el <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">La página Web tiene más de una etiqueta <see langword="&lt;form&gt;" /> del servidor.</exception>
        <block subset="none" type="overrides"><para>Cuando se reemplaza el <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" /> método en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" /> método para que el <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> controles secundarios del control se representan correctamente.</para></block>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
      </Docs>
    </Member>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="public override void RenderControl (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderControl(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderControl (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderControl(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderControl : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderControl writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> que recibe el contenido del control de formulario.</param>
        <summary>Representa el control <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> en el objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> especificado.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Cuando se reemplaza el <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" /> método en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)" /> método para que el <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control se represente correctamente.</para></block>
        <altmember cref="P:System.Web.UI.Control.DesignMode" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SubmitDisabledControls">
      <MemberSignature Language="C#" Value="public virtual bool SubmitDisabledControls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SubmitDisabledControls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SubmitDisabledControls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SubmitDisabledControls { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SubmitDisabledControls : bool with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor booleano que indica si se debe forzar el envío de los valores de los controles deshabilitados en el cliente, permitiéndoles conservar sus valores una vez que la página devuelve los datos al servidor.</summary>
        <value>Es <see langword="true" /> si se fuerza el envío de los valores de los controles deshabilitados en el cliente; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> propiedad para especificar si se debe forzar los controles deshabilitados en el cliente pueda enviar sus valores cuando devuelve la página. Esto permite que los controles deshabilitados conservar sus valores después de la página realiza devoluciones al servidor. Cuando el <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> propiedad está establecida en `false`, los controles del formulario que se han deshabilitado mediante script de cliente no se enviará al servidor la próxima vez que devuelve la página. Como resultado, los valores almacenados por los controles deshabilitados se pierden. Para permitir que los controles deshabilitados conservar sus valores después de la página realiza devoluciones al servidor, establezca el <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> propiedad `true`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo establecer el <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> propiedad en un formulario para `true` para hacer que los controles deshabilitados mediante script de cliente para mantener sus valores después de la página realiza devoluciones al servidor. En este ejemplo, si establece la <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> propiedad `false` y, a continuación, haga clic en el **devuelven datos** botón, se pierde el texto en el cuadro de texto HTML y ya no está seleccionada la casilla de verificación HTML.  
  
 [!code-aspx-csharp[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/CS/htmlform.submitdisabledcontrolscs.aspx#1)]
 [!code-aspx-vb[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/VB/htmlform.submitdisabledcontrolsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el marco o la ventana donde se van a representar los resultados de la información enviada al servidor.</summary>
        <value>La ventana o el marco del explorador que muestra los resultados de la información enviada al servidor. El valor predeterminado es una cadena vacía (""), que actualiza la ventana o marco con el foco.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> propiedad para especificar la ventana de destino o de fotogramas que muestra los resultados de la información que se registra con el servidor. Redirigir los resultados de la información enviada al servidor es una tarea avanzada. No se recomienda usar esta propiedad simplemente a devolver.  
  
> [!NOTE]
>  El <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> propiedad se representa como un `target` atributo. El `target` atributo `form` elementos no se permite en XHTML 1.1. Por lo tanto, si el marcado representado debe cumplir los estándares XHTML o debe cumplir los estándares de accesibilidad, no establezca la <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> propiedad. Para obtener más información, consulte [estándares de XHTML en Visual Studio y ASP.NET](https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97) y [accesibilidad en Visual Studio y ASP.NET](https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13).  
  
 El <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> valor debe empezar con una letra de la A Z (mayúsculas y minúsculas), excepto los siguientes valores especiales que empiezan por un carácter de subrayado.  
  
|Valor del objetivo|Descripción|  
|------------------|-----------------|  
|`_blank`|Representa el contenido en una nueva ventana sin marcos.|  
|`_parent`|Representa el contenido en el conjunto de marcos principal inmediato.|  
|`_search`|Representa el contenido en el panel de búsqueda.|  
|`_self`|Representa el contenido en el marco con foco.|  
|`_top`|Representa el contenido en una ventana completa sin marcos.|  
  
> [!NOTE]
>  Consulte la documentación del explorador para determinar si admite el valor `_search`.  Por ejemplo, Microsoft Internet Explorer 5.0 y versiones posteriores admiten el valor de destino `_search`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> registrado de propiedad para especificar una nueva ventana sin marcos para mostrar los resultados de la información de vuelta al servidor.  
  
 [!code-aspx-csharp[HtmlFormTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormTarget/CS/htmlformtargetcs.aspx#1)]
 [!code-aspx-vb[HtmlFormTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormTarget/VB/htmlformtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">ASP.NET y compatibilidad con XHTML</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13">Accesibilidad en Visual Studio 2010 y ASP.NET 4</related>
      </Docs>
    </Member>
    <Member MemberName="UniqueID">
      <MemberSignature Language="C#" Value="public override string UniqueID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UniqueID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UniqueID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniqueID : string" Usage="System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el identificador de programación único asignado al control <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <value>Identificador de programación único asignado al control <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> propiedad va a obtener el identificador de programación único asignado a la <xref:System.Web.UI.HtmlControls.HtmlForm> control. Esta propiedad reemplaza la implementación base para devolver un valor constante cuando el control está incluido en un <xref:System.Web.UI.INamingContainer>-implementa el objeto que no sea una página, como un control de servidor personalizado. Si el contenedor de nomenclatura es una página, el valor de la <xref:System.Web.UI.HtmlControls.HtmlForm> del control <xref:System.Web.UI.Control.ID%2A> se devuelve la propiedad.  
  
 El <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> propiedad y el <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> propiedad siempre devuelven el mismo valor. Esto es útil cuando la <xref:System.Web.UI.HtmlControls.HtmlForm> control se representa en un explorador que requiere el <xref:System.Web.UI.HtmlControls.HtmlForm> del control <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> y <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> propiedades sean los mismos. Para mantener estas propiedades sincronizadas, la <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> propiedad siempre devuelve el valor de la <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> propiedad.  
  
> [!NOTE]
>  El `name` atributo no es un atributo compatibles con XHTML y no se representa de forma predeterminada por ASP.NET.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> propiedad para recuperar el identificador único para un <xref:System.Web.UI.HtmlControls.HtmlForm> control.  
  
 [!code-aspx-csharp[HtmlForm.UniqueID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.UniqueID/CS/htmlform.uniqueidcs.aspx#1)]
 [!code-aspx-vb[HtmlForm.UniqueID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.UniqueID/VB/htmlform.uniqueidvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
        <related type="Article" href="https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">ASP.NET y compatibilidad con XHTML</related>
      </Docs>
    </Member>
  </Members>
</Type>