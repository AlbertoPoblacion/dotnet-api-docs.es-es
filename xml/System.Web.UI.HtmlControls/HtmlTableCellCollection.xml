<Type Name="HtmlTableCellCollection" FullName="System.Web.UI.HtmlControls.HtmlTableCellCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="161e8663a03dd3688a17aafd880d17de962d77ec" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36588436" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HtmlTableCellCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HtmlTableCellCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HtmlTableCellCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlTableCellCollection sealed : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type HtmlTableCellCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Colección de objetos <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> que representan las celdas de una sola fila de un control <see cref="T:System.Web.UI.HtmlControls.HtmlTable" />. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> clase para administrar mediante programación una colección de <xref:System.Web.UI.HtmlControls.HtmlTableCell> objetos que representan las celdas de una sola fila en un <xref:System.Web.UI.HtmlControls.HtmlTable> control. Esta clase se suele utilizar para agregar, quitar o modificar el contenido de una celda de una fila de una <xref:System.Web.UI.HtmlControls.HtmlTable> control.  
  
> [!NOTE]
>  Un <xref:System.Web.UI.HtmlControls.HtmlTable> control contiene un <xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A> propiedad que contiene una colección de <xref:System.Web.UI.HtmlControls.HtmlTableRow> objetos. Cada <xref:System.Web.UI.HtmlControls.HtmlTableRow> objeto representa una fila individual en la tabla. Un <xref:System.Web.UI.HtmlControls.HtmlTableRow> objeto contiene un <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> propiedad que representa una colección de <xref:System.Web.UI.HtmlControls.HtmlTableCell> objetos. Estos objetos, a su vez, representan las celdas individuales de una fila. Para recuperar una celda individual, primero hay que obtener el <xref:System.Web.UI.HtmlControls.HtmlTableRow> objeto que representa la fila que contiene la celda de la tabla (desde la <xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A> colección de la <xref:System.Web.UI.HtmlControls.HtmlTable> control). A continuación, puede obtener el <xref:System.Web.UI.HtmlControls.HtmlTableCell> objeto que representa la celda de la fila (desde la <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> colección de la <xref:System.Web.UI.HtmlControls.HtmlTableRow> objeto).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo generar dinámicamente el contenido de un <xref:System.Web.UI.HtmlControls.HtmlTable> control mediante la adición de las celdas para un <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> colección. Tenga en cuenta que la <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> propiedad de una fila, representada por un <xref:System.Web.UI.HtmlControls.HtmlTableRow> de objetos, es el <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> colección.  
  
 [!code-aspx-csharp[HtmlTableCellCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollection/CS/htmltablecellcollectioncs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollection/VB/htmltablecellcollectionvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTable" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.Rows" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.UI.HtmlControls.HtmlTableCell cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.UI.HtmlControls.HtmlTableCell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Add(System.Web.UI.HtmlControls.HtmlTableCell)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (cell As HtmlTableCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Web::UI::HtmlControls::HtmlTableCell ^ cell);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.HtmlControls.HtmlTableCell -&gt; unit" Usage="htmlTableCellCollection.Add cell" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.HtmlControls.HtmlTableCell" />
      </Parameters>
      <Docs>
        <param name="cell">
          <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> que se agrega a la colección.</param>
        <summary>Anexa el objeto <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> especificado al final de la colección <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método para agregar especificado <xref:System.Web.UI.HtmlControls.HtmlTableCell> objeto al final de una <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> colección. Si desea insertar un <xref:System.Web.UI.HtmlControls.HtmlTableCell> objeto en una ubicación especificada en la colección, utilice el <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert%2A> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Add%2A> método para agregar una celda de una tabla, representada por un <xref:System.Web.UI.HtmlControls.HtmlTableCell> objeto al final de una <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> colección. Tenga en cuenta que la <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> propiedad de una fila representada por una <xref:System.Web.UI.HtmlControls.HtmlTableRow> objeto es el <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> colección.  
  
 [!code-aspx-csharp[HtmlTableCellCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollection/CS/htmltablecellcollectioncs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollection/VB/htmltablecellcollectionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="htmlTableCellCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quita todos los objetos <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> de la colección <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método para todos los quitar <xref:System.Web.UI.HtmlControls.HtmlTableCell> objetos desde el <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> recopilación y restablecer el <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count%2A> propiedad a `0`.  
  
> [!NOTE]
>  Este método quita las celdas de una fila, pero no elimina la fila de la tabla. Para quitar una fila de la tabla, asegúrese de que también quita el <xref:System.Web.UI.HtmlControls.HtmlTableRow> objeto que representa la fila de la <xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A> colección de la <xref:System.Web.UI.HtmlControls.HtmlTable> control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Clear%2A> método para quitar todos los elementos de la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> colección. Las nuevas entradas, a continuación, se agrega a la colección y se muestran en el <xref:System.Web.UI.HtmlControls.HtmlTable> control.  
  
 [!code-aspx-csharp[HtmlTableCellCollectioncClear#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectioncClear/CS/htmltablecellcollectionclearcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectioncClear#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectioncClear/VB/htmltablecellcollectionclearvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="htmlTableCellCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <see cref="T:System.Array" /> de base cero que recibe los elementos copiados de <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</param>
        <param name="index">El primer índice de <see cref="T:System.Array" /> que recibe los elementos.</param>
        <summary>Copia los elementos de la colección <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> en el objeto <see cref="T:System.Array" /> especificado, empezando por el índice especificado en <see cref="T:System.Array" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método para copiar el contenido de la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> colección en especificado <xref:System.Array?displayProperty=nameWithType>, empezando por el índice especificado de la matriz.  
  
> [!NOTE]
>  El `array` parámetro debe ser una base cero <xref:System.Array?displayProperty=nameWithType>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.CopyTo%2A> método para crear una matriz que contiene el mismo contenido que el <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> colección. A continuación, se recorre la matriz para mostrar el contenido de la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> colección.  
  
 [!code-aspx-csharp[HtmlTableCellCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionCopyTo/CS/htmltablecellcollectioncopytocs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionCopyTo/VB/htmltablecellcollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.HtmlControls.HtmlTableCellCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número de objetos <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> de la colección <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</summary>
        <value>Número de objetos <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> de la colección <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />. El valor predeterminado es <see langword="0" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count%2A> propiedad para determinar el número de celdas contenidas en el <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> colección. El <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count%2A> propiedad suele utilizarse cuando recorra en iteración la colección para determinar la esquina superior enlazado.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count%2A> propiedad para determinar el número de celdas de una fila de la <xref:System.Web.UI.HtmlControls.HtmlTable> control. Este valor, a continuación, se utiliza como el límite superior de un bucle para recorrer en iteración las celdas de una fila en la tabla.  
  
 [!code-aspx-csharp[HtmlTableCellCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionCount/CS/htmltablecellcollectioncountcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionCount/VB/htmltablecellcollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="htmlTableCellCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve un objeto implementado mediante <see cref="T:System.Collections.IEnumerator" /> que contiene todos los objetos <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> de la colección <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</summary>
        <returns>Objeto implementado mediante <see cref="T:System.Collections.IEnumerator" /> que contiene todos los objetos <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> de <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método para crear un <xref:System.Collections.IEnumerator?displayProperty=nameWithType>-implementa el objeto que se pueda realizar fácilmente una iteración para recuperar el contenido de cada elemento en el <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> colección.  
  
 Use la <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> propiedad que se va a obtener el elemento actualmente que se apunta en la colección.  
  
 Use la <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> método para desplazarse al siguiente elemento de la colección.  
  
 Use la <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> método para desplazar el enumerador a la posición inicial.  
  
> [!NOTE]
>  El <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> debe llamar al método después de crear el <xref:System.Collections.IEnumerator?displayProperty=nameWithType>-implementado, o después de utilizar el <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> método para desplazar el enumerador al primer elemento de la colección. En caso contrario, el elemento representado por la <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> propiedad no está definida.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.GetEnumerator%2A> método para crear un <xref:System.Collections.IEnumerator?displayProperty=nameWithType>-objeto implementado. A continuación, se recorre el objeto para mostrar el contenido de la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> colección.  
  
 [!code-aspx-csharp[HtmlTableCellCollectionienumerator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionienumerator/CS/htmltablecellcollectionienumeratorcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionienumerator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionienumerator/VB/htmltablecellcollectionienumeratorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.UI.HtmlControls.HtmlTableCell cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.UI.HtmlControls.HtmlTableCell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert(System.Int32,System.Web.UI.HtmlControls.HtmlTableCell)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, cell As HtmlTableCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Web::UI::HtmlControls::HtmlTableCell ^ cell);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Web.UI.HtmlControls.HtmlTableCell -&gt; unit" Usage="htmlTableCellCollection.Insert (index, cell)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="cell" Type="System.Web.UI.HtmlControls.HtmlTableCell" />
      </Parameters>
      <Docs>
        <param name="index">Ubicación de la colección <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> donde se va a agregar el objeto <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />.</param>
        <param name="cell">
          <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> que se va a agregar a <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</param>
        <summary>Agrega el objeto <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> especificado en la posición de índice especificada de la colección <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert%2A> método para agregar especificado <xref:System.Web.UI.HtmlControls.HtmlTableCell> el objeto a un <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> colección en el índice especificado. Si desea anexar simplemente un <xref:System.Web.UI.HtmlControls.HtmlTableCell> objeto al final de la colección, utilice el <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Add%2A> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert%2A> método para insertar dinámicamente una celda de una tabla, representada por un <xref:System.Web.UI.HtmlControls.HtmlTableCell> objeto, en un <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> colección.  
  
 [!code-aspx-csharp[HtmlTableCellCollectionInsert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionInsert/CS/htmltablecellcollectioninsertcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionInsert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionInsert/VB/htmltablecellcollectioninsertvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.UI.HtmlControls.HtmlTableCellCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si la colección <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> es de solo lectura.</summary>
        <value>Es <see langword="false" /> para todos los casos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad devuelve siempre `false` para indicar que el <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> colección puede escribirse en todos los casos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el acceso a la colección <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> está sincronizado (es seguro para la ejecución de subprocesos).</summary>
        <value>Es <see langword="false" /> para todos los casos, lo que indica que el acceso a <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> no está sincronizado (no es seguro para la ejecución de subprocesos).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad se deriva de <xref:System.Collections.ICollection?displayProperty=nameWithType> y se reemplaza para que siempre devuelva `false` para indicar que el acceso a la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> colección está sincronizada (no es seguro para la ejecución de subprocesos).  
  
 Para obtener más información sobre la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized%2A> propiedad, vea la <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=nameWithType> propiedad de la <xref:System.Collections.ICollection?displayProperty=nameWithType> interfaz.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.HtmlControls.HtmlTableCell this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.HtmlControls.HtmlTableCell Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As HtmlTableCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::HtmlControls::HtmlTableCell ^ default[int] { System::Web::UI::HtmlControls::HtmlTableCell ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.HtmlControls.HtmlTableCell" Usage="System.Web.UI.HtmlControls.HtmlTableCellCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlControls.HtmlTableCell</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Valor de índice ordinal que especifica el objeto <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> que se va a devolver.</param>
        <summary>Obtiene el objeto <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> en el índice especificado de la colección <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</summary>
        <value>
          <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> que representa una celda incluida en <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este indizador para obtener un <xref:System.Web.UI.HtmlControls.HtmlTableCell> objeto desde el <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> colección. Puede tener acceso a un <xref:System.Web.UI.HtmlControls.HtmlTableCell> objeto en el índice especificado mediante la notación de matriz simple.  
  
> [!NOTE]
>  La colección está basada en cero; por lo tanto, el primer elemento de la colección contiene un valor de índice `0`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el indizador para recuperar una celda de una tabla, representada por un <xref:System.Web.UI.HtmlControls.HtmlTableCell> objeto, desde el <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> colección. La celda, a continuación, se actualiza con nuevo contenido. Tenga en cuenta que la <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> propiedad de una fila representada por una <xref:System.Web.UI.HtmlControls.HtmlTableRow> objeto es el <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> colección.  
  
 [!code-aspx-csharp[HtmlTableCellCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollection/CS/htmltablecellcollectioncs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollection/VB/htmltablecellcollectionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.HtmlControls.HtmlTableCell cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.HtmlControls.HtmlTableCell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove(System.Web.UI.HtmlControls.HtmlTableCell)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (cell As HtmlTableCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::HtmlControls::HtmlTableCell ^ cell);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.HtmlControls.HtmlTableCell -&gt; unit" Usage="htmlTableCellCollection.Remove cell" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.HtmlControls.HtmlTableCell" />
      </Parameters>
      <Docs>
        <param name="cell">
          <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> que se va a quitar de <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</param>
        <summary>Quita el objeto <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> especificado de la colección <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este método para quitar especificado <xref:System.Web.UI.HtmlControls.HtmlTableCell> objeto desde el <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> colección.  
  
> [!NOTE]
>  Si especifica un <xref:System.Web.UI.HtmlControls.HtmlTableCell> objeto que no existe en el <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> colección, no hay ningún elemento se quita de la colección.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove%2A> método para quitar la celda especificada de una tabla, representada por un <xref:System.Web.UI.HtmlControls.HtmlTableCell> objeto, desde el <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> colección. Este ejemplo quita las celdas de la primera columna de la <xref:System.Web.UI.HtmlControls.HtmlTable> control.  
  
 [!code-aspx-csharp[HtmlTableCellCollectionRemove#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionRemove/CS/htmltablecellcollectionremovecs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionRemove#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionRemove/VB/htmltablecellcollectionremovevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt(System.Int32)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="htmlTableCellCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Índice del objeto <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> que se va a quitar de la colección <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</param>
        <summary>Quita el objeto <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> del índice especificado de la colección <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este método para quitar el <xref:System.Web.UI.HtmlControls.HtmlTableCell> objeto en el índice especificado de un <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> colección. El número de índice está basado en cero; por lo tanto, el primer elemento de la colección tiene un valor de índice `0`.  
  
> [!NOTE]
>  Si especifica un índice que está fuera del intervalo de valores de índice, se produce una excepción.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt%2A> método para quitar el elemento situado en el índice especificado de la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> colección. Este ejemplo quita las celdas de la primera columna de la <xref:System.Web.UI.HtmlControls.HtmlTable> control.  
  
 [!code-aspx-csharp[HtmlTableCellCollectionRemoveAt#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionRemoveAt/CS/htmltablecellcollectionremoveatcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionRemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionRemoveAt/VB/htmltablecellcollectionremoveatvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El índice especificado no está comprendido en el intervalo de valores de índice de la colección.</exception>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove(System.Web.UI.HtmlControls.HtmlTableCell)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto que se puede utilizar para sincronizar el acceso a la colección <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</summary>
        <value>Objeto que se puede utilizar para sincronizar el acceso a la colección.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El objeto devuelto en esta implementación es la instancia actual de la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> clase.  
  
 Para obtener más información sobre la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot%2A> propiedad, vea la <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=nameWithType> propiedad de la <xref:System.Collections.ICollection?displayProperty=nameWithType> interfaz.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
  </Members>
</Type>