<Type Name="HtmlInputImage" FullName="System.Web.UI.HtmlControls.HtmlInputImage">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="32865b302417a81103b55fb3e3cf09eda510833b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30590849" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlInputImage : System.Web.UI.HtmlControls.HtmlInputControl, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlInputImage extends System.Web.UI.HtmlControls.HtmlInputControl implements class System.Web.UI.IPostBackDataHandler, class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlInputImage" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlInputImage&#xA;Inherits HtmlInputControl&#xA;Implements IPostBackDataHandler, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlInputImage : System::Web::UI::HtmlControls::HtmlInputControl, System::Web::UI::IPostBackDataHandler, System::Web::UI::IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlInputControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerClick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Permite el acceso mediante programación al elemento HTML <see langword="&lt;input type= image&gt;" /> en el servidor.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.HtmlControls.HtmlInputImage> control para crear un botón que muestra una imagen. Se puede controlar mediante programación la acción asociada con el <xref:System.Web.UI.HtmlControls.HtmlInputImage> control proporcionando un controlador de eventos para el <xref:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick> eventos.  
  
 Las coordenadas donde el usuario hace clic en un <xref:System.Web.UI.HtmlControls.HtmlInputImage> control se puede determinar mediante el <xref:System.Web.UI.ImageClickEventArgs.X?displayProperty=nameWithType> y <xref:System.Web.UI.ImageClickEventArgs.Y?displayProperty=nameWithType> propiedades de la <xref:System.Web.UI.ImageClickEventArgs?displayProperty=nameWithType> objeto que se pasa como parámetro al controlador de eventos definido por el usuario.  
  
 Para obtener una lista de valores de propiedad iniciales para una instancia de <xref:System.Web.UI.HtmlControls.HtmlInputImage>, consulte el <xref:System.Web.UI.HtmlControls.HtmlInputImage.%23ctor%2A> constructor.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlControls.HtmlInputImage> control para crear un botón que muestra una imagen.  
  
> [!NOTE]
>  Debe proporcionar sus propios archivos de imagen para este ejemplo funcione correctamente.  
  
 [!code-aspx-csharp[Classic HtmlInputImage.Src Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputImage.Src Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputImage.Src Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputImage.Src Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputControl" />
    <altmember cref="E:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick" />
    <altmember cref="T:System.Web.UI.ImageClickEventArgs" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlInputImage();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este constructor para crear e inicializar una nueva instancia de la <xref:System.Web.UI.HtmlControls.HtmlInputImage> control.  
  
 En la tabla siguiente muestra el valor de propiedad iniciales para una instancia de <xref:System.Web.UI.HtmlControls.HtmlInputImage>.  
  
|Propiedad.|Valor inicial|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|La cadena literal "imagen".|  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear una nueva instancia de la <xref:System.Web.UI.HtmlControls.HtmlInputImage> de control y lo coloca en la página Web.  
  
 [!code-aspx-csharp[HtmlInputImageCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputImageCtor/CS/htmlinputimagectorcs.aspx#1)]
 [!code-aspx-vb[HtmlInputImageCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputImageCtor/VB/htmlinputimagectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Align">
      <MemberSignature Language="C#" Value="public string Align { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Align" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputImage.Align" />
      <MemberSignature Language="VB.NET" Value="Public Property Align As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Align { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la alineación del control <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> con respecto a otros elementos de la página Web.</summary>
        <value>Alineación del control <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> con respecto a otros elementos de la página Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.HtmlControls.HtmlInputImage.Align%2A> propiedad para especificar la alineación de la <xref:System.Web.UI.HtmlControls.HtmlInputImage> control con respecto a los demás elementos en la página Web.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlControls.HtmlInputImage.Align%2A> propiedad para especificar la alineación de la <xref:System.Web.UI.HtmlControls.HtmlInputImage> control con respecto a otros elementos en la página Web.  
  
 [!code-aspx-csharp[Classic HtmlInputImage.Align Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputImage.Align Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputImage.Align Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputImage.Align Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Alt">
      <MemberSignature Language="C#" Value="public string Alt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Alt" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputImage.Alt" />
      <MemberSignature Language="VB.NET" Value="Public Property Alt As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Alt { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el texto alternativo que muestra el explorador si la imagen no está disponible o aún no se ha cargado.</summary>
        <value>Texto alternativo para la imagen especificada. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.HtmlControls.HtmlInputImage.Alt%2A> propiedad para especificar el texto que se muestra cuando la imagen especificada no está disponible o no se ha descargado. También puede utilizar esta propiedad para determinar mediante programación el texto alternativo especificado.  
  
 En los exploradores que admiten la característica de información sobre herramientas, este texto también aparece como una información sobre herramientas para el <xref:System.Web.UI.HtmlControls.HtmlInputImage> control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlControls.HtmlInputImage.Alt%2A> propiedad para especificar el texto alternativo que se muestra cuando la imagen no está disponible.  
  
 [!code-aspx-csharp[Classic HtmlInputImage.Src Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputImage.Src Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputImage.Src Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputImage.Src Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputImage.Src" />
      </Docs>
    </Member>
    <Member MemberName="Border">
      <MemberSignature Language="C#" Value="public int Border { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Border" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputImage.Border" />
      <MemberSignature Language="VB.NET" Value="Public Property Border As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Border { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el ancho del borde del control <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" />.</summary>
        <value>Ancho del borde, en píxeles, del control <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.HtmlControls.HtmlInputImage.Border%2A> propiedad para especificar el ancho del borde para el <xref:System.Web.UI.HtmlControls.HtmlInputImage> control.  
  
> [!NOTE]
>  Esta propiedad no se admite en todos los exploradores. Compruebe si su explorador para determinar la compatibilidad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlControls.HtmlInputImage.Border%2A> propiedad para especificar el ancho del borde para el <xref:System.Web.UI.HtmlControls.HtmlInputImage> control.  
  
 [!code-aspx-csharp[Classic HtmlInputImage.Align Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputImage.Align Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputImage.Align Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputImage.Align Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si la validación se realiza al hacer clic en el control <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" />.</summary>
        <value>
          Es <see langword="true" /> si se realiza la validación cuando se hace clic en el control <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" />; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, se realiza la validación de la página cuando un <xref:System.Web.UI.HtmlControls.HtmlInputImage> se hace clic en el control. Validación de la página determina si los controles de entrada asociada a un control de validación en la página que superan todas las reglas de validación especificadas por el control de validación.  
  
 Puede especificar o determinar si se realiza la validación en el cliente y el servidor cuando una <xref:System.Web.UI.HtmlControls.HtmlInputImage> control se hace clic en usando el <xref:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation%2A> propiedad. Para evitar que se realice la validación, establezca la <xref:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation%2A> propiedad `false`.  
  
 Esta propiedad se utiliza normalmente en el controlador de eventos para el <xref:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick> evento para evitar que se produzca cuando se hace clic en un botón Cancelar o restablecer la validación de la página.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation%2A> propiedad para evitar que se produzca la validación de la página. Observe cómo el <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> método activa cada control de validación de forma independiente.  
  
 [!code-aspx-csharp[HtmlInputImageCausesValidation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputImageCausesValidation/CS/htmlinputimagecausesvalidationcs.aspx#1)]
 [!code-aspx-vb[HtmlInputImageCausesValidation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputImageCausesValidation/VB/htmlinputimagecausesvalidationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputImage.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identificador de clave del control.</param>
        <param name="postCollection">Colección de todos los valores de nombre entrantes.</param>
        <summary>Procesa los datos de postback para el control <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" />.</summary>
        <returns>
          <see langword="true" /> si el estado del control <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> cambió a consecuencia del postback; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.HtmlControls.HtmlInputImage.LoadPostData%2A> método comprueba si las coordenadas que representan la posición donde se hace clic en la imagen por el usuario son parte de los datos de devolución para la <xref:System.Web.UI.HtmlControls.HtmlInputImage> control. Si coordenadas forman parte de los datos de postback, la <xref:System.Web.UI.HtmlControls.HtmlInputImage.LoadPostData%2A> método registra el <xref:System.Web.UI.HtmlControls.HtmlInputImage> control con la página Web como un control que requiere que un evento se desencadena cuando se procesa.  
  
> [!NOTE]
>  Las coordenadas de origen (0,0) se encuentran en la esquina superior izquierda de la imagen.  
  
 El <xref:System.Web.UI.HtmlControls.HtmlInputImage.LoadPostData%2A> método la usan principalmente los programadores de controles para extender la funcionalidad de la <xref:System.Web.UI.HtmlControls.HtmlInputImage> control.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.Control.PreRender" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.HtmlControls.HtmlInputImage.OnPreRender%2A> método se llama justo antes de procesar el <xref:System.Web.UI.HtmlControls.HtmlInputImage> control. El <xref:System.Web.UI.HtmlControls.HtmlInputImage.OnPreRender%2A> método la usan principalmente los programadores de controles para extender la funcionalidad de la <xref:System.Web.UI.HtmlControls.HtmlInputImage> control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.HtmlControls.HtmlInputImage.OnPreRender%2A> método por lo que TI siempre muestra un personalizado <xref:System.Web.UI.HtmlControls.HtmlInputImage> control de servidor sin borde.  
  
 [!code-aspx-csharp[CustomHtmlInputImageOnPreRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputImageOnPreRender/CS/custom_htmlinputimage_onprerendercs.aspx#1)]
 [!code-aspx-vb[CustomHtmlInputImageOnPreRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputImageOnPreRender/VB/custom_htmlinputimage_onprerendervb.aspx#1)]  
  
 [!code-csharp[CustomHtmlInputImageOnPreRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputImageOnPreRender/CS/custom_htmlinputimage_onprerender.cs#2)]
 [!code-vb[CustomHtmlInputImageOnPreRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputImageOnPreRender/VB/custom_htmlinputimage_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar el <see cref="M:System.Web.UI.HtmlControls.HtmlInputImage.OnPreRender(System.EventArgs)" /> método en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Web.UI.HtmlControls.HtmlInputImage.OnPreRender(System.EventArgs)" /> método para que los delegados registrados reciban el <see cref="E:System.Web.UI.Control.PreRender" /> eventos.</para>
        </block>
        <altmember cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnServerClick">
      <MemberSignature Language="C#" Value="protected virtual void OnServerClick (System.Web.UI.ImageClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnServerClick(class System.Web.UI.ImageClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.OnServerClick(System.Web.UI.ImageClickEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnServerClick (e As ImageClickEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnServerClick(System::Web::UI::ImageClickEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.ImageClickEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.ImageClickEventArgs" /> que contiene datos de eventos.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick> evento se desencadena cuando el usuario hace clic en un <xref:System.Web.UI.HtmlControls.HtmlInputImage> control.  
  
 Las coordenadas donde el usuario hace clic en un <xref:System.Web.UI.HtmlControls.HtmlInputImage> control se puede determinar mediante el <xref:System.Web.UI.ImageClickEventArgs.X?displayProperty=nameWithType> y <xref:System.Web.UI.ImageClickEventArgs.Y?displayProperty=nameWithType> propiedades de la <xref:System.Web.UI.ImageClickEventArgs?displayProperty=nameWithType> objeto. La <xref:System.Web.UI.ImageClickEventArgs?displayProperty=nameWithType> objeto se pasa como un parámetro al controlador de eventos definido por el usuario.  
  
> [!NOTE]
>  El origen (0, 0) se encuentra en la esquina superior izquierda de la imagen.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Web.UI.HtmlControls.HtmlInputImage.OnServerClick%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo especificar y codificar un controlador para el <xref:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick> eventos para determinar las coordenadas donde el usuario hace clic en el <xref:System.Web.UI.HtmlControls.HtmlInputImage> control.  
  
 [!code-aspx-csharp[Classic HtmlInputImage.ServerClick Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputImage.ServerClick Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputImage.ServerClick Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputImage.ServerClick Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[HtmlInputImageServerClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputImageServerClick/CS/htmlinputimageserverclickcs.aspx#1)]
 [!code-aspx-vb[HtmlInputImageServerClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputImageServerClick/VB/htmlinputimageserverclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar <see cref="M:System.Web.UI.HtmlControls.HtmlInputImage.OnServerClick(System.Web.UI.ImageClickEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Web.UI.HtmlControls.HtmlInputImage.OnServerClick(System.Web.UI.ImageClickEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick" />
        <altmember cref="T:System.Web.UI.ImageClickEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argumento para el evento.</param>
        <summary>Genera eventos para el control <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> cuando devuelve datos al servidor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.HtmlControls.HtmlInputImage.RaisePostBackEvent%2A> método lo usa el <xref:System.Web.UI.HtmlControls.HtmlInputImage> control, cuando se hace clic, para generar un <xref:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick> eventos.  
  
 Si el <xref:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation%2A> propiedad es `true`; el <xref:System.Web.UI.Page.Validate%2A> es llamar al método mediante el grupo de controles especificado en la <xref:System.Web.UI.HtmlControls.HtmlInputImage.ValidationGroup%2A> propiedad.  
  
 Este método se usa principalmente los programadores de controles para extender la funcionalidad de la <xref:System.Web.UI.HtmlControls.HtmlInputImage> control.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputImage.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifica al control <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> que el estado del control ha cambiado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.HtmlControls.HtmlInputImage.RaisePostDataChangedEvent%2A> método no participa en el procesamiento de la <xref:System.Web.UI.HtmlControls.HtmlInputImage> controlar y se incluye para completar la <xref:System.Web.UI.IPostBackDataHandler> implementación de la interfaz.  
  
 El <xref:System.Web.UI.HtmlControls.HtmlInputImage.RaisePostDataChangedEvent%2A> método la usan principalmente los programadores de controles para extender la funcionalidad de la <xref:System.Web.UI.HtmlControls.HtmlInputImage> control.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputImage.ValidationGroup" />
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> que contiene el flujo de salida que se representará en el cliente.</param>
        <summary>Representa los atributos del control <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> en el objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.HtmlControls.HtmlInputImage.RenderAttributes%2A> método resuelve la dirección URL establecido el <xref:System.Web.UI.HtmlControls.HtmlInputImage.Src%2A> propiedad, escribe el `onclick` atributo de la representado <xref:System.Web.UI.HtmlControls.HtmlInputImage> controlar si el <xref:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation%2A> propiedad es `true`y por último, se llama a la base de <xref:System.Web.UI.HtmlControls.HtmlInputControl.RenderAttributes%2A> método. Si el valor de la <xref:System.Web.UI.HtmlControls.HtmlInputImage.Src%2A> propiedad es una dirección URL con formato incorrecto, un <xref:System.Web.HttpException> se produce la excepción.  
  
 El <xref:System.Web.UI.HtmlControls.HtmlInputImage.RenderAttributes%2A> método la usan principalmente los programadores de controles para extender la funcionalidad de la <xref:System.Web.UI.HtmlControls.HtmlInputImage> control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.HtmlControls.HtmlInputImage.RenderAttributes%2A> controlar el método en un servidor personalizado para que siempre se muestre el texto alternativo exacto, accesible como una información sobre herramientas, con el <xref:System.Web.UI.HtmlControls.HtmlInputImage>.  
  
 [!code-aspx-csharp[CustomHtmlInputImageRenderAttributes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputImageRenderAttributes/CS/custom_htmlinputimage_renderattributescs.aspx#1)]
 [!code-aspx-vb[CustomHtmlInputImageRenderAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputImageRenderAttributes/VB/custom_htmlinputimage_renderattributesvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlInputImageRenderAttributes#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputImageRenderAttributes/CS/custom_htmlinputimage_renderattributes.cs#2)]
 [!code-vb[CustomHtmlInputImageRenderAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputImageRenderAttributes/VB/custom_htmlinputimage_renderattributes.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">La propiedad <see cref="P:System.Web.UI.HtmlControls.HtmlInputImage.Src" /> contiene una dirección URL incorrecta.</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation" />
        <altmember cref="M:System.Web.UI.Control.ResolveClientUrl(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="ServerClick">
      <MemberSignature Language="C#" Value="public event System.Web.UI.ImageClickEventHandler ServerClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.ImageClickEventHandler ServerClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ServerClick As ImageClickEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::ImageClickEventHandler ^ ServerClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ImageClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce en el servidor cuando el usuario hace clic en un control <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick> evento se desencadena cuando el usuario hace clic en un <xref:System.Web.UI.HtmlControls.HtmlInputImage> control.  
  
 Para obtener más información sobre el control de eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo especificar y codificar un controlador para el <xref:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick> eventos para determinar las coordenadas donde el usuario hace clic en el <xref:System.Web.UI.HtmlControls.HtmlInputImage> control.  
  
 [!code-aspx-csharp[Classic HtmlInputImage.ServerClick Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputImage.ServerClick Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputImage.ServerClick Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputImage.ServerClick Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[HtmlInputImageServerClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputImageServerClick/CS/htmlinputimageserverclickcs.aspx#1)]
 [!code-aspx-vb[HtmlInputImageServerClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputImageServerClick/VB/htmlinputimageserverclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputImage.OnServerClick(System.Web.UI.ImageClickEventArgs)" />
        <altmember cref="T:System.Web.UI.ImageClickEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Src">
      <MemberSignature Language="C#" Value="public string Src { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Src" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputImage.Src" />
      <MemberSignature Language="VB.NET" Value="Public Property Src As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Src { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la ubicación del archivo de imagen.</summary>
        <value>Ubicación del archivo de imagen. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.HtmlControls.HtmlInputImage.Src%2A> propiedad para especificar la ubicación de la imagen que se muestra en el <xref:System.Web.UI.HtmlControls.HtmlInputImage> control. Si la imagen no está disponible, el texto especificado en el <xref:System.Web.UI.HtmlControls.HtmlInputImage.Alt%2A> se muestra la propiedad.  
  
 Puede usar una dirección URL relativa o absoluta. Una dirección URL relativa relaciona la ubicación de la imagen a la ubicación de la página Web sin especificar una ruta de acceso completa en el servidor. La ruta de acceso es relativa a la ubicación de la página Web. Resulta más fácil mover todo el sitio a otro directorio en el servidor sin actualizar la ruta de acceso a la imagen en el código. Puede usar la ruta de acceso relativa " `~/` " para hacer referencia al directorio virtual actual donde se encuentra la página. Por ejemplo, el valor de <xref:System.Web.UI.HtmlControls.HtmlInputImage.Src%2A> para `<input type="image" runat="server" src="~/abc/d.gif">` en una página en "XspTest" es el directorio virtual `<input type="image" src="/XspText/abc/d.gif">`. Una dirección URL absoluta proporciona la ruta de acceso completa. Por lo tanto, mover el sitio a otro directorio requiere que actualice el código.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlControls.HtmlInputImage.Src%2A> propiedad para especificar la ruta de acceso a una imagen que aparece en el <xref:System.Web.UI.HtmlControls.HtmlInputImage> control.  
  
 [!code-aspx-csharp[Classic HtmlInputImage.Src Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputImage.Src Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputImage.Src Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputImage.Src Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputImage.Alt" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identificador de clave del control.</param>
        <param name="postCollection">Colección de todos los valores de nombre entrantes.</param>
        <summary>Implementa el método de interfaz <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> llamando al método <see cref="M:System.Web.UI.HtmlControls.HtmlInputImage.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />.</summary>
        <returns>
          <see langword="true" /> si el estado del control <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> cambió a consecuencia del postback; de lo contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implementa el método de interfaz <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" /> llamando al método <see cref="M:System.Web.UI.HtmlControls.HtmlInputImage.RaisePostDataChangedEvent" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argumento para el evento.</param>
        <summary>Permite que el control <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> genere eventos en el postback.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputImage.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el grupo de controles para los que el control <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> ejecuta la validación cuando realiza devoluciones al servidor.</summary>
        <value>Grupo de controles para los que el control <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> ejecuta la validación cuando realiza devoluciones al servidor. El valor predeterminado es una cadena vacía (""), para indicar que no se ha establecido esta propiedad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Grupos de validación permiten asignar controles de validación de una página a una categoría específica. Cada grupo de validación se puede validar de forma independiente de otros grupos de validación en la página. Use la <xref:System.Web.UI.HtmlControls.HtmlInputImage.ValidationGroup%2A> propiedad para especificar el nombre del grupo de validación para el que el <xref:System.Web.UI.HtmlControls.HtmlInputImage> control ejecuta una validación cuando devuelve datos al servidor.  
  
 Esta propiedad no tiene un efecto solo cuando el valor de la <xref:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation%2A> propiedad está establecida en `true`. Cuando se especifica un valor para el <xref:System.Web.UI.HtmlControls.HtmlInputImage.ValidationGroup%2A> son de propiedad, los controles de validación que forman parte del grupo especificado cuando valida el <xref:System.Web.UI.HtmlControls.HtmlInputImage> control devuelve datos al servidor. Si no especifica un valor para esta propiedad y la <xref:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation%2A> propiedad está establecida en `true`, todos los controles de validación en la página que no están asignados a un grupo de validación se validan cuando el control devuelve datos al servidor.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlControls.HtmlInputImage.ValidationGroup%2A> propiedad para especificar los controles para validar cuando un <xref:System.Web.UI.HtmlControls.HtmlInputImage> control devuelve datos al servidor. La página contiene dos cuadros de texto para capturar los datos del usuario y dos <xref:System.Web.UI.WebControls.RequiredFieldValidator> controles para asegurarse de que el usuario no deje un cuadro de texto en blanco. El <xref:System.Web.UI.WebControls.RequiredFieldValidator> de control para el primer cuadro de texto está en el `CityInfoGroup` grupo de validación y el <xref:System.Web.UI.WebControls.RequiredFieldValidator> controlar para el segundo cuadro es en el `StateInfoGroup` grupo de validación. Cuando el `CityQueryButton` se hace clic en, solo el control en el `CityInfoGroup` se valida el grupo de validación. Cuando el `StateQueryButton` se hace clic en, solo el control en el `StateInfoGroup` se valida el grupo de validación.  
  
 [!code-aspx-csharp[HtmlInputImageValidationGroup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputImageValidationGroup/cs/htmlinputimagevalidationgroupcs.aspx#1)]
 [!code-aspx-vb[HtmlInputImageValidationGroup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputImageValidationGroup/vb/htmlinputimagevalidationgroupvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation" />
      </Docs>
    </Member>
  </Members>
</Type>