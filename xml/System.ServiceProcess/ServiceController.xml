<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ServiceController.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59a3b28ab31ae22be9c5d05c1e032e4a25945f287.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9a3b28ab31ae22be9c5d05c1e032e4a25945f287</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceProcess.ServiceController">
          <source>Represents a Windows service and allows you to connect to a running or stopped service, manipulate it, or get information about it.</source>
          <target state="translated">Representa un servicio de Windows y permite conectarse a un servicio en ejecución o detenido, manipularlo u obtener información sobre él.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceController">
          <source>You can use the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> class to connect to and control the behavior of existing services.</source>
          <target state="translated">Puede usar el <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> clase para conectarse y controlar el comportamiento de los servicios existentes.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceController">
          <source>When you create an instance of the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> class, you set its properties so it interacts with a specific Windows service.</source>
          <target state="translated">Cuando se crea una instancia de la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> (clase), establecer sus propiedades para que interactúe con un servicio de Windows específico.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceController">
          <source>You can then use the class to start, stop, and otherwise manipulate the service.</source>
          <target state="translated">A continuación, puede utilizar la clase para iniciar, detener y manipular el servicio.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceController">
          <source>You will most likely use the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> component in an administrative capacity.</source>
          <target state="translated">Probablemente utilizará el <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> componente en una capacidad administrativa.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceController">
          <source>For example, you could create a Windows or Web application that sends custom commands to a service through the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> instance.</source>
          <target state="translated">Por ejemplo, puede crear una ventana o una aplicación Web que envíe personalizada comandos a un servicio a través de la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceController">
          <source>This would be useful, because the Service Control Manager (SCM) Microsoft Management Console snap-in does not support custom commands.</source>
          <target state="translated">Esto resultaría útil, ya que el complemento Administrador de Control de servicios (SCM) de Microsoft Management Console no admite comandos personalizados.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceController">
          <source>After you create an instance of <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph>, you must set two properties on it to identify the service with which it interacts: the computer name and the name of the service you want to control.</source>
          <target state="translated">Después de crear una instancia de <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph>, se deben establecer dos propiedades en ella para identificar el servicio con el que interactúa: el nombre del equipo y el nombre del servicio que desea controlar.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceController">
          <source>By default, <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.MachineName%2A&gt;</ph> is set to the local computer, so you do not need to change it unless you want to set the instance to point to another computer.</source>
          <target state="translated">De forma predeterminada, <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.MachineName%2A&gt;</ph> se establece en el equipo local, por lo que no necesite cambiarla a menos que desee establecer la instancia para que apunte a otro equipo.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceController">
          <source>Generally, the service author writes code that customizes the action associated with a specific command.</source>
          <target state="translated">Por lo general, el autor del servicio escribe código que personaliza la acción asociada con un comando específico.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceController">
          <source>For example, a service can contain code to respond to an <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A?displayProperty=nameWithType&gt;</ph> command.</source>
          <target state="translated">Por ejemplo, un servicio puede contener código para responder a un <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A?displayProperty=nameWithType&gt;</ph> comando.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceController">
          <source>In that case, the custom processing for the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Pause%2A&gt;</ph> task runs before the system pauses the service.</source>
          <target state="translated">En ese caso, el procesamiento personalizado de la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Pause%2A&gt;</ph> tarea se ejecuta antes de que el sistema pause el servicio.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceController">
          <source>The set of commands a service can process depends on its properties; for example, you can set the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.CanStop%2A&gt;</ph> property for a service to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">El conjunto de comandos de que un servicio puede procesar depende de sus propiedades; Por ejemplo, puede establecer la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.CanStop%2A&gt;</ph> propiedad para que un servicio <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceController">
          <source>This setting renders the <ph id="ph1">`Stop`</ph> command unavailable on that particular service; it prevents you from stopping the service from the SCM by disabling the necessary button.</source>
          <target state="translated">Este valor representa el <ph id="ph1">`Stop`</ph> comando no está disponible en ese servicio concreto; impide que se detenga el servicio del SCM al deshabilitar el botón necesario.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceController">
          <source>If you try to stop the service from your code, the system raises an error and displays the error message "Failed to stop <ph id="ph1">`servicename`</ph>."</source>
          <target state="translated">Si intenta detener el servicio desde el código, el sistema genera un error y muestra el mensaje de error "no se pudo detener <ph id="ph1">`servicename`</ph>."</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceController">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> class to control the <ph id="ph2">`SimpleService`</ph> service example.</source>
          <target state="translated">En el ejemplo siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> clase para controlar la <ph id="ph2">`SimpleService`</ph> ejemplo del servicio.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="T:System.ServiceProcess.ServiceController">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph> class that is not associated with a specific service.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph> que no está asociada a un servicio determinado.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.#ctor(System.String)">
          <source>The name that identifies the service to the system.</source>
          <target state="translated">Nombre que identifica el servicio ante el sistema.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.#ctor(System.String)">
          <source>This can also be the display name for the service.</source>
          <target state="translated">También puede ser el nombre para mostrar del servicio.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph> class that is associated with an existing service on the local computer.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph> que está asociada a un servicio existente en el equipo local.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.#ctor(System.String)">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> constructor to create a <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> object that is used to control a sample service.</source>
          <target state="translated">En el ejemplo siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> constructor para crear un <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> objeto que se utiliza para controlar un servicio de ejemplo.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.#ctor(System.String)">
          <source>This example is part of a larger example that is provided for the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> class.</source>
          <target state="translated">Este ejemplo forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> no es válido.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.#ctor(System.String,System.String)">
          <source>The name that identifies the service to the system.</source>
          <target state="translated">Nombre que identifica el servicio ante el sistema.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.#ctor(System.String,System.String)">
          <source>This can also be the display name for the service.</source>
          <target state="translated">También puede ser el nombre para mostrar del servicio.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.#ctor(System.String,System.String)">
          <source>The computer on which the service resides.</source>
          <target state="translated">Equipo en el que reside el servicio.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph> class that is associated with an existing service on the specified computer.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph> que está asociada a un servicio existente en el equipo especificado.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.#ctor(System.String,System.String)">
          <source>For the <ph id="ph1">`machineName`</ph> parameter, you can use "." to represent the local computer.</source>
          <target state="translated">Para el <ph id="ph1">`machineName`</ph> parámetro, puede utilizar "." para representar el equipo local.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.#ctor(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> no es válido.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.#ctor(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.#ctor(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> no es válido.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.CanPauseAndContinue">
          <source>Gets a value indicating whether the service can be paused and resumed.</source>
          <target state="translated">Obtiene un valor que indica si se puede pausar y reanudar el servicio.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.CanPauseAndContinue">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the service can be paused; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si se puede pausar el servicio; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.CanPauseAndContinue">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.CanPauseAndContinue%2A&gt;</ph> property to determine whether a service can pause and continue.</source>
          <target state="translated">En el ejemplo siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.CanPauseAndContinue%2A&gt;</ph> propiedad para determinar si un servicio puede pausar y continuar.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.CanPauseAndContinue">
          <source>This example is part of a larger example that is provided for the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> class.</source>
          <target state="translated">Este ejemplo forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.CanPauseAndContinue">
          <source>An error occurred when accessing a system API.</source>
          <target state="translated">Error de acceso a la API del sistema.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.CanPauseAndContinue">
          <source>The service was not found.</source>
          <target state="translated">No se encontró el servicio.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.CanShutdown">
          <source>Gets a value indicating whether the service should be notified when the system is shutting down.</source>
          <target state="translated">Obtiene un valor que indica si se debe notificar al servicio cuando se está cerrando el sistema.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.CanShutdown">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the service should be notified when the system is shutting down; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si se debe notificar al servicio cuando se está cerrando el sistema; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.CanShutdown">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.CanShutdown%2A&gt;</ph> property to determine whether a service provides a handler for a shutdown event.</source>
          <target state="translated">En el ejemplo siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.CanShutdown%2A&gt;</ph> propiedad para determinar si un servicio proporciona un controlador para un evento de cierre.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.CanShutdown">
          <source>This example is part of a larger example that is provided for the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> class.</source>
          <target state="translated">Este ejemplo forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.CanShutdown">
          <source>An error occurred when accessing a system API.</source>
          <target state="translated">Error de acceso a la API del sistema.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.CanShutdown">
          <source>The service was not found.</source>
          <target state="translated">No se encontró el servicio.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.CanStop">
          <source>Gets a value indicating whether the service can be stopped after it has started.</source>
          <target state="translated">Obtiene un valor que indica si el servicio puede detenerse después de haberse iniciado.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.CanStop">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the service can be stopped and the <ph id="ph2">&lt;see cref="M:System.ServiceProcess.ServiceBase.OnStop" /&gt;</ph> method called; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si se puede detener el servicio y llamar al método <ph id="ph2">&lt;see cref="M:System.ServiceProcess.ServiceBase.OnStop" /&gt;</ph>; en caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.CanStop">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.CanStop%2A&gt;</ph> property to determine whether a service provides a handler for a stop event.</source>
          <target state="translated">En el ejemplo siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.CanStop%2A&gt;</ph> propiedad para determinar si un servicio proporciona un controlador para un evento de detención.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.CanStop">
          <source>This example is part of a larger example that is provided for the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> class.</source>
          <target state="translated">Este ejemplo forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.CanStop">
          <source>An error occurred when accessing a system API.</source>
          <target state="translated">Error de acceso a la API del sistema.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.CanStop">
          <source>The service was not found.</source>
          <target state="translated">No se encontró el servicio.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.Close">
          <source>Disconnects this <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph> instance from the service and frees all the resources that the instance allocated.</source>
          <target state="translated">Desconecta esta instancia de <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph> desde el servicio y libera todos los recursos que asignó la instancia.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Close">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Close%2A&gt;</ph> releases all the handles associated with the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Close%2A&gt;</ph> Libera todos los identificadores asociados con el <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.Continue">
          <source>Continues a service after it has been paused.</source>
          <target state="translated">Reanuda un servicio después de que se haya dejado en pausa.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Continue">
          <source>When you call <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Continue%2A&gt;</ph> for a service, its status is first changed to <ph id="ph2">`ContinuePending`</ph> and then, when the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceController.Continue%2A&gt;</ph> method returns, it is changed to <ph id="ph4">`Running`</ph>.</source>
          <target state="translated">Cuando se llama a <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Continue%2A&gt;</ph> para un servicio, primero se cambió su estado a <ph id="ph2">`ContinuePending`</ph> y, después, cuando la <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceController.Continue%2A&gt;</ph> método vuelve, se cambia a <ph id="ph4">`Running`</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Continue">
          <source>You cannot call <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Continue%2A&gt;</ph> for the service until the service controller status is <ph id="ph2">`Paused`</ph>.</source>
          <target state="translated">No se puede llamar <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Continue%2A&gt;</ph> para el servicio hasta que el estado del controlador de servicio es <ph id="ph2">`Paused`</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Continue">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Continue%2A&gt;</ph> method to continue a paused service.</source>
          <target state="translated">En el ejemplo siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Continue%2A&gt;</ph> método continuar un servicio en pausa.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Continue">
          <source>This example is part of a larger example that is provided for the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> class.</source>
          <target state="translated">Este ejemplo forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.Continue">
          <source>An error occurred when accessing a system API.</source>
          <target state="translated">Error de acceso a la API del sistema.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.Continue">
          <source>The service was not found.</source>
          <target state="translated">No se encontró el servicio.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Continue">
          <source>for controlling services on the computer.</source>
          <target state="translated">para controlar servicios en el equipo.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Continue">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Continue">
          <source>for unrestricted access to service information.</source>
          <target state="translated">Para obtener acceso no restringido a la información de servicio.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Continue">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.DependentServices">
          <source>Gets the set of services that depends on the service associated with this <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph> instance.</source>
          <target state="translated">Obtiene el conjunto de servicios que depende del servicio asociado a esta instancia <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.DependentServices">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph> instances, each of which is associated with a service that depends on this service.</source>
          <target state="translated">Una matriz de instancias de <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph>, cada una de las cuales está asociada a una servicio que depende de este servicio.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.DependentServices">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.DependentServices%2A&gt;</ph> array represents the services that the system stops if your application calls <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceController.Stop%2A&gt;</ph> for this service.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.DependentServices%2A&gt;</ph> matriz representa los servicios que el sistema se detiene si la aplicación llama a <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceController.Stop%2A&gt;</ph> para este servicio.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.DependentServices">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> class to display the set of services that are dependent on the Event Log service.</source>
          <target state="translated">En el ejemplo siguiente se utiliza la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> clase para mostrar el conjunto de servicios que dependen del servicio de registro de eventos.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.DependentServices">
          <source>An error occurred when accessing a system API.</source>
          <target state="translated">Error de acceso a la API del sistema.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.DependentServices">
          <source>The service was not found.</source>
          <target state="translated">No se encontró el servicio.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.DependentServices">
          <source>for connecting to existing services on the computer.</source>
          <target state="translated">para conectarse a los servicios existentes en el equipo.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.DependentServices">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.DisplayName">
          <source>Gets or sets a friendly name for the service.</source>
          <target state="translated">Obtiene o establece un nombre descriptivo para el servicio.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.DisplayName">
          <source>The friendly name of the service, which can be used to identify the service.</source>
          <target state="translated">Nombre descriptivo del servicio, que se puede utilizar para identificarlo.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.DisplayName">
          <source>You can set the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.DisplayName%2A&gt;</ph> to an empty string (""), but setting the property to <ph id="ph2">`null`</ph> throws an exception.</source>
          <target state="translated">Puede establecer la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.DisplayName%2A&gt;</ph> en una cadena vacía (""), pero si se establece la propiedad en <ph id="ph2">`null`</ph> produce una excepción.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.DisplayName">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> class to display the set of services that are dependent on the Event Log service.</source>
          <target state="translated">En el ejemplo siguiente se utiliza la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> clase para mostrar el conjunto de servicios que dependen del servicio de registro de eventos.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.DisplayName">
          <source>The <ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceController.DisplayName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceController.DisplayName" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.DisplayName">
          <source>An error occurred when accessing a system API.</source>
          <target state="translated">Error de acceso a la API del sistema.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.DisplayName">
          <source>The service was not found.</source>
          <target state="translated">No se encontró el servicio.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar tanto recursos administrados como no administrados; es <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar únicamente recursos no administrados.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libera los recursos no administrados que usa <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph> y, de forma opcional, libera los recursos administrados.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Se llama a este método público <ph id="ph1">`Dispose()`</ph> método y <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> se invoca el protegido <ph id="ph2">`Dispose(Boolean)`</ph> método con el <ph id="ph3">`disposing`</ph> parámetro establecido en <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invoca <ph id="ph2">`Dispose`</ph> con <ph id="ph3">`disposing`</ph> establecido en <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> references.</source>
          <target state="translated">Cuando el <ph id="ph1">`disposing`</ph> del parámetro es true, este método libera todos los recursos retenidos por los objetos administrados que este <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> referencias.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Este método invoca al método <ph id="ph1">`Dispose()`</ph> de cada uno de los objetos a los que se hace referencia.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> puede recibir varias llamadas de otros objetos.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Al reemplazar <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo implementar <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, consulte <bpt id="p1">[</bpt>implementa un método Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Para obtener más información acerca de <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> y <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, consulte <bpt id="p1">[</bpt>limpiar recursos no administrados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> y <bpt id="p2">[</bpt>reemplazar el método Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.ExecuteCommand(System.Int32)">
          <source>An application-defined command flag that indicates which custom command to execute.</source>
          <target state="translated">Marca de comandos definida por la aplicación que indica qué comando personalizado se va a ejecutar.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.ExecuteCommand(System.Int32)">
          <source>The value must be between 128 and 256, inclusive.</source>
          <target state="translated">El valor debe estar comprendido entre 128 y 256, ambos inclusive.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.ExecuteCommand(System.Int32)">
          <source>Executes a custom command on the service.</source>
          <target state="translated">Ejecuta un comando personalizado en el servicio.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.ExecuteCommand(System.Int32)">
          <source>When you call <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.ExecuteCommand%2A&gt;</ph>, the status of the service does not change.</source>
          <target state="translated">Cuando se llama a <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.ExecuteCommand%2A&gt;</ph>, no cambia el estado del servicio.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.ExecuteCommand(System.Int32)">
          <source>If the service was started, the status remains <ph id="ph1">`Running`</ph>.</source>
          <target state="translated">Si se inició el servicio, el estado permanece <ph id="ph1">`Running`</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.ExecuteCommand(System.Int32)">
          <source>If the service was stopped, the status remains <ph id="ph1">`Stopped`</ph>, and so on.</source>
          <target state="translated">Si se ha detenido el servicio, el estado permanece <ph id="ph1">`Stopped`</ph>, y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.ExecuteCommand(System.Int32)">
          <source>To process the custom command, the service must override the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A&gt;</ph> method and provide a handler for the command identified by the <ph id="ph2">`command`</ph> parameter.</source>
          <target state="translated">Para procesar el comando personalizado, debe invalidar el servicio la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A&gt;</ph> método y se proporciona un controlador para el comando identificado por el <ph id="ph2">`command`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.ExecuteCommand(System.Int32)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.ExecuteCommand%28System.Int32%29?displayProperty=nameWithType&gt;</ph> method to execute custom commands in the <ph id="ph2">`SimpleService`</ph> service example.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.ExecuteCommand%28System.Int32%29?displayProperty=nameWithType&gt;</ph> método para ejecutar comandos personalizados en la <ph id="ph2">`SimpleService`</ph> ejemplo del servicio.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.ExecuteCommand(System.Int32)">
          <source>An error occurred when accessing a system API.</source>
          <target state="translated">Error de acceso a la API del sistema.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.ExecuteCommand(System.Int32)">
          <source>The service was not found.</source>
          <target state="translated">No se encontró el servicio.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.ExecuteCommand(System.Int32)">
          <source>for controlling services on the computer.</source>
          <target state="translated">para controlar servicios en el equipo.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.ExecuteCommand(System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.ExecuteCommand(System.Int32)">
          <source>for unrestricted access to service information.</source>
          <target state="translated">Para obtener acceso no restringido a la información de servicio.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.ExecuteCommand(System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="T:System.ServiceProcess.ServiceController">
          <source>Retrieves the device driver services on a computer.</source>
          <target state="translated">Recupera los servicios del controlador de dispositivos en un equipo.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.GetDevices">
          <source>Retrieves the device driver services on the local computer.</source>
          <target state="translated">Recupera los servicios del controlador de dispositivos en el equipo local.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.GetDevices">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph> in which each element is associated with a device driver service on the local computer.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph> en la que cada elemento está asociado a un servicio de controlador de dispositivos en el equipo local.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.GetDevices">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetDevices%2A&gt;</ph> returns only the device driver services from the local computer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetDevices%2A&gt;</ph> Devuelve solo el dispositivo servicios del controlador desde el equipo local.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.GetDevices">
          <source>To retrieve the non-device driver services or services that are not drivers, call the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetServices%2A&gt;</ph> method.</source>
          <target state="translated">Para recuperar los servicios de controladores de dispositivos o servicios que no sean controladores, llame a la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetServices%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.GetDevices">
          <source>Together, the two methods provide access to all the services on a computer.</source>
          <target state="translated">En conjunto, los dos métodos proporcionan acceso a todos los servicios en un equipo.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.GetDevices">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> class to display the device driver services on the local computer.</source>
          <target state="translated">En el ejemplo siguiente se utiliza la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> clase para mostrar los servicios del controlador de dispositivo en el equipo local.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.GetDevices">
          <source>An error occurred when accessing a system API.</source>
          <target state="translated">Error de acceso a la API del sistema.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.GetDevices(System.String)">
          <source>The computer from which to retrieve the device driver services.</source>
          <target state="translated">Equipo desde el que se recuperan los servicios del controlador de dispositivos.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.GetDevices(System.String)">
          <source>Retrieves the device driver services on the specified computer.</source>
          <target state="translated">Recupera los servicios del controlador de dispositivos en el equipo especificado.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.GetDevices(System.String)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph> in which each element is associated with a device driver service on the specified computer.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph> en la que cada elemento está asociado a un servicio de controlador de dispositivos en el equipo especificado.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.GetDevices(System.String)">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetDevices%2A&gt;</ph> returns only the device driver services from the specified computer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetDevices%2A&gt;</ph> Devuelve solo el dispositivo servicios del controlador desde el equipo especificado.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.GetDevices(System.String)">
          <source>To retrieve the non-device driver services or services that are not drivers, call the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetServices%2A&gt;</ph> method.</source>
          <target state="translated">Para recuperar los servicios de controladores de dispositivos o servicios que no sean controladores, llame a la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetServices%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.GetDevices(System.String)">
          <source>Together, the two methods provide access to all the services on a computer.</source>
          <target state="translated">En conjunto, los dos métodos proporcionan acceso a todos los servicios en un equipo.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.GetDevices(System.String)">
          <source>An error occurred when accessing a system API.</source>
          <target state="translated">Error de acceso a la API del sistema.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.GetDevices(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> parameter has invalid syntax.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> tiene una sintaxis no válida.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="T:System.ServiceProcess.ServiceController">
          <source>Retrieves the non-device driver services on a computer, and those that are not drivers.</source>
          <target state="translated">Recupera los servicios de controladores que no son dispositivos en un equipo y los que no son controladores.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.GetServices">
          <source>Retrieves all the services on the local computer, except for the device driver services.</source>
          <target state="translated">Recupera todos los servicios del equipo local, excepto los servicios de controlador de dispositivos.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.GetServices">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph> in which each element is associated with a service on the local computer.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph> en la que cada elemento está asociado a un servicio en el equipo local.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.GetServices">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetServices%2A&gt;</ph> returns only the non-device driver services and the services that are not drivers from the local computer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetServices%2A&gt;</ph> Devuelve solo los servicios de controladores de dispositivos y los servicios que no sean controladores del equipo local.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.GetServices">
          <source>To retrieve device driver services, call the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetDevices%2A&gt;</ph> method.</source>
          <target state="translated">Para recuperar los servicios del controlador de dispositivo, llame a la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetDevices%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.GetServices">
          <source>Together, the two methods provide access to all the services on a computer.</source>
          <target state="translated">En conjunto, los dos métodos proporcionan acceso a todos los servicios en un equipo.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.GetServices">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> class to display the services that are running on the local computer.</source>
          <target state="translated">En el ejemplo siguiente se utiliza la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> clase para mostrar los servicios que se ejecutan en el equipo local.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.GetServices">
          <source>An error occurred when accessing a system API.</source>
          <target state="translated">Error de acceso a la API del sistema.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.GetServices(System.String)">
          <source>The computer from which to retrieve the services.</source>
          <target state="translated">Equipo desde el que se recuperan los servicios.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.GetServices(System.String)">
          <source>Retrieves all the services on the specified computer, except for the device driver services.</source>
          <target state="translated">Recupera todos los servicios del equipo especificado, excepto los servicios de controlador de dispositivos.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.GetServices(System.String)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph> in which each element is associated with a service on the specified computer.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph> en la que cada elemento está asociado a un servicio en el equipo especificado.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.GetServices(System.String)">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetServices%2A&gt;</ph> returns only the non-device driver services and the services that are not drivers from the specified computer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetServices%2A&gt;</ph> Devuelve solo los servicios de controladores de dispositivos y los servicios que no sean controladores del equipo especificado.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.GetServices(System.String)">
          <source>To retrieve device driver services, call the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetDevices%2A&gt;</ph> method.</source>
          <target state="translated">Para recuperar los servicios del controlador de dispositivo, llame a la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetDevices%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.GetServices(System.String)">
          <source>Together, the two methods provide access to all the services on a computer.</source>
          <target state="translated">En conjunto, los dos métodos proporcionan acceso a todos los servicios en un equipo.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.GetServices(System.String)">
          <source>An error occurred when accessing a system API.</source>
          <target state="translated">Error de acceso a la API del sistema.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.GetServices(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> parameter has invalid syntax.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> tiene una sintaxis no válida.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.MachineName">
          <source>Gets or sets the name of the computer on which this service resides.</source>
          <target state="translated">Obtiene o establece el nombre del equipo en el que reside el servicio.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.MachineName">
          <source>The name of the computer that is running the service associated with this <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph> instance.</source>
          <target state="translated">Nombre del equipo que está ejecutando el servicio asociado a esta instancia de <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.MachineName">
          <source>The default is the local computer (".").</source>
          <target state="translated">El valor predeterminado es el equipo local (".").</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.MachineName">
          <source>The computer name is the name of the server that is running this service, without the preceding backslash characters (<ph id="ph1">\\</ph><ph id="ph2">\\</ph>).</source>
          <target state="translated">El nombre del equipo es el nombre del servidor que está ejecutando este servicio, sin los caracteres de barra diagonal inversa anterior (<ph id="ph1">\\</ph><ph id="ph2">\\</ph>).</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.MachineName">
          <source>The <ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceController.MachineName" /&gt;</ph> syntax is invalid.</source>
          <target state="translated">La sintaxis de <ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceController.MachineName" /&gt;</ph> no es válida.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.Pause">
          <source>Suspends a service's operation.</source>
          <target state="translated">Suspende la operación de un servicio.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Pause">
          <source>You cannot call <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Continue%2A&gt;</ph> for the service until the service controller status is <ph id="ph2">`Paused`</ph>.</source>
          <target state="translated">No se puede llamar <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Continue%2A&gt;</ph> para el servicio hasta que el estado del controlador de servicio es <ph id="ph2">`Paused`</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Pause">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Pause%2A&gt;</ph> method to pause a service.</source>
          <target state="translated">En el ejemplo siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Pause%2A&gt;</ph> método para pausar un servicio.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Pause">
          <source>This example is part of a larger example that is provided for the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> class.</source>
          <target state="translated">Este ejemplo forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.Pause">
          <source>An error occurred when accessing a system API.</source>
          <target state="translated">Error de acceso a la API del sistema.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.Pause">
          <source>The service was not found.</source>
          <target state="translated">No se encontró el servicio.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Pause">
          <source>for controlling services on the computer.</source>
          <target state="translated">para controlar servicios en el equipo.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Pause">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Pause">
          <source>for unrestricted access to service information.</source>
          <target state="translated">Para obtener acceso no restringido a la información de servicio.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Pause">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.Refresh">
          <source>Refreshes property values by resetting the properties to their current values.</source>
          <target state="translated">Actualiza los valores de propiedades y las restablece en sus valores actuales.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Refresh">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Refresh%2A&gt;</ph> method causes the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceController.DependentServices%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceController.Status%2A&gt;</ph> properties to be reset to their current values when they are next referenced.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Refresh%2A&gt;</ph> método hace la <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceController.DependentServices%2A&gt;</ph>, y <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceController.Status%2A&gt;</ph> propiedades se restablezca en sus valores actuales que se hace referencia a continuación.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Refresh">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Refresh%2A&gt;</ph> method to obtain the status of a service.</source>
          <target state="translated">En el ejemplo siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Refresh%2A&gt;</ph> método para obtener el estado de un servicio.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Refresh">
          <source>The code instructs a service to pause, and then waits for the status to reflect the change.</source>
          <target state="translated">El código indica a un servicio en pausa y, a continuación, espera a que el estado reflejar el cambio.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Refresh">
          <source>This example is part of a larger example that is provided for the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> class.</source>
          <target state="translated">Este ejemplo forma parte de un ejemplo mayor proporcionado para el <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.ServiceHandle">
          <source>Gets the handle for the service.</source>
          <target state="translated">Obtiene el identificador del servicio.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.ServiceHandle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.SafeHandle" /&gt;</ph> that contains the handle for the service.</source>
          <target state="translated">Clase <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.SafeHandle" /&gt;</ph> que contiene el identificador del servicio.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.ServiceHandle">
          <source>The service was not found.</source>
          <target state="translated">No se encontró el servicio.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.ServiceHandle">
          <source>for access to unmanaged code.</source>
          <target state="translated">Para obtener acceso a código no administrado.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.ServiceHandle">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.ServiceName">
          <source>Gets or sets the name that identifies the service that this instance references.</source>
          <target state="translated">Obtiene o establece el nombre que identifica el servicio al que hace referencia esta instancia.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.ServiceName">
          <source>The name that identifies the service that this <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph> instance references.</source>
          <target state="translated">Nombre que identifica el servicio al que hace referencia esta instancia de <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.ServiceName">
          <source>The default is an empty string ("").</source>
          <target state="translated">El valor predeterminado es una cadena vacía ("").</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.ServiceName">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.ServiceName%2A&gt;</ph> identifies the service to the Service Control Manager.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.ServiceName%2A&gt;</ph> identifica el servicio con el Administrador de Control de servicios.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.ServiceName">
          <source>Changing this property causes the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> instance to bind to another service, it does not change what the Service Control Manager's Microsoft Management Console snap-in displays.</source>
          <target state="translated">Si cambia esta propiedad hace que el <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> para enlazar a otro servicio, no cambia el Control del administrador del servicio Microsoft Management Console complemento muestra la instancia.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.ServiceName">
          <source>When you are implementing a custom service, the value of this property must be identical to the name recorded for the service in the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> property of the corresponding <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> class.</source>
          <target state="translated">Cuando se implementa un servicio personalizado, el valor de esta propiedad debe ser idéntico al nombre registrado para el servicio en la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> propiedad de los correspondientes <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.ServiceName">
          <source>In code, the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.ServiceName%2A&gt;</ph> is usually set in the <ph id="ph2">`main()`</ph> function of the executable.</source>
          <target state="translated">En el código, el <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.ServiceName%2A&gt;</ph> normalmente se establece el <ph id="ph2">`main()`</ph> función del archivo ejecutable.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.ServiceName">
          <source>When you reset the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.ServiceName%2A&gt;</ph> property, the method that sets the property sets this instance's <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceController.DisplayName%2A&gt;</ph> to an empty string ("").</source>
          <target state="translated">Cuando se restablece el <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.ServiceName%2A&gt;</ph> propiedad, el método que establece la propiedad establece esta instancia <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceController.DisplayName%2A&gt;</ph> en una cadena vacía ("").</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.ServiceName">
          <source>The <ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceController.ServiceName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceController.ServiceName" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.ServiceName">
          <source>The syntax of the <ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceController.ServiceName" /&gt;</ph> property is invalid.</source>
          <target state="translated">La sintaxis de la propiedad <ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceController.ServiceName" /&gt;</ph> no es válida.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.ServiceName">
          <source>The service was not found.</source>
          <target state="translated">No se encontró el servicio.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.ServicesDependedOn">
          <source>The set of services that this service depends on.</source>
          <target state="translated">Conjunto de servicios de los que depende este servicio.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.ServicesDependedOn">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph> instances, each of which is associated with a service that must be running for this service to run.</source>
          <target state="translated">Matriz de instancias de <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph>, cada una de las cuales está asociada a un servicio que debe estar en ejecución para que se ejecute este servicio.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.ServicesDependedOn">
          <source>If any service in the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A&gt;</ph> array is not running, you will not be able to start this service.</source>
          <target state="translated">Si cualquier servicio en la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A&gt;</ph> matriz no se está ejecutando, no podrá iniciar este servicio.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.ServicesDependedOn">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> class to display the set of services that the Messenger service is dependent on.</source>
          <target state="translated">En el ejemplo siguiente se utiliza la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> clase para mostrar el conjunto de servicios que depende el servicio Messenger.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.ServicesDependedOn">
          <source>An error occurred when accessing a system API.</source>
          <target state="translated">Error de acceso a la API del sistema.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.ServicesDependedOn">
          <source>The service was not found.</source>
          <target state="translated">No se encontró el servicio.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.ServicesDependedOn">
          <source>for connecting to existing services on the computer.</source>
          <target state="translated">para conectarse a los servicios existentes en el equipo.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.ServicesDependedOn">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.ServiceType">
          <source>Gets the type of service that this object references.</source>
          <target state="translated">Obtiene el tipo de servicio al que hace referencia este objeto.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.ServiceType">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceType" /&gt;</ph> values, used to indicate the network service type.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceType" /&gt;</ph> que se utiliza para indicar el tipo de servicio de red.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.ServiceType">
          <source>The service type indicates how the service is used by the system.</source>
          <target state="translated">El tipo de servicio indica cómo se utiliza el servicio por el sistema.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.ServiceType">
          <source>The value of the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.ServiceType%2A&gt;</ph> property represents a set of flags combined using the bitwise OR operator.</source>
          <target state="translated">El valor de la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.ServiceType%2A&gt;</ph> propiedad representa un conjunto de indicadores combinados mediante el operador OR bit a bit.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.ServiceType">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> class to display the device driver services on the local computer.</source>
          <target state="translated">En el ejemplo siguiente se utiliza la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> clase para mostrar los servicios del controlador de dispositivo en el equipo local.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.ServiceType">
          <source>An error occurred when accessing a system API.</source>
          <target state="translated">Error de acceso a la API del sistema.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.ServiceType">
          <source>The service was not found.</source>
          <target state="translated">No se encontró el servicio.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="T:System.ServiceProcess.ServiceController">
          <source>Starts the service.</source>
          <target state="translated">Inicia el servicio.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.Start">
          <source>Starts the service, passing no arguments.</source>
          <target state="translated">Inicia el servicio sin pasar argumentos.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Start">
          <source>You cannot call <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Stop%2A&gt;</ph> for the service until the service controller status is <ph id="ph2">`Running`</ph>.</source>
          <target state="translated">No se puede llamar <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Stop%2A&gt;</ph> para el servicio hasta que el estado del controlador de servicio es <ph id="ph2">`Running`</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Start">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> class to check whether the Alerter service is stopped.</source>
          <target state="translated">En el ejemplo siguiente se utiliza la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> clase para comprobar si se detiene el servicio de alerta.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Start">
          <source>If the service is stopped, the example starts the service and waits until the service status is set to <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceControllerStatus.Running&gt;</ph>.</source>
          <target state="translated">Si se detiene el servicio, en el ejemplo se inicia el servicio y espera hasta que el estado del servicio se establece en <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceControllerStatus.Running&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.Start">
          <source>An error occurred when accessing a system API.</source>
          <target state="translated">Error de acceso a la API del sistema.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.Start">
          <source>The service was not found.</source>
          <target state="translated">No se encontró el servicio.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Start">
          <source>for controlling services on the computer.</source>
          <target state="translated">para controlar servicios en el equipo.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Start">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Start">
          <source>for unrestricted access to service information.</source>
          <target state="translated">Para obtener acceso no restringido a la información de servicio.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Start">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.Start(System.String[])">
          <source>An array of arguments to pass to the service when it starts.</source>
          <target state="translated">Matriz de argumentos que se va a pasar al servicio cuando se inicie.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.Start(System.String[])">
          <source>Starts a service, passing the specified arguments.</source>
          <target state="translated">Inicia un servicio y pasa los argumentos especificados.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Start(System.String[])">
          <source>You cannot call <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Stop%2A&gt;</ph> for the service until the service controller status is <ph id="ph2">`Running`</ph>.</source>
          <target state="translated">No se puede llamar <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Stop%2A&gt;</ph> para el servicio hasta que el estado del controlador de servicio es <ph id="ph2">`Running`</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.Start(System.String[])">
          <source>An error occurred when accessing a system API.</source>
          <target state="translated">Error de acceso a la API del sistema.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.Start(System.String[])">
          <source>The service cannot be started.</source>
          <target state="translated">El servicio no se puede iniciar.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.Start(System.String[])">
          <source><ph id="ph1">&lt;paramref name="args" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="args" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.Start(System.String[])">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.Start(System.String[])">
          <source>A member of the array is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Un miembro de la matriz es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Start(System.String[])">
          <source>for controlling services on the computer.</source>
          <target state="translated">para controlar servicios en el equipo.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Start(System.String[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Start(System.String[])">
          <source>for unrestricted access to service information.</source>
          <target state="translated">Para obtener acceso no restringido a la información de servicio.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Start(System.String[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.StartType">
          <source>Gets a value that indicates how the service represented by the <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph> object starts.</source>
          <target state="translated">Obtiene un valor que indica cómo se inicia el servicio representado por el objeto <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceController" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.StartType">
          <source>A value that indicates how the service starts.</source>
          <target state="translated">Valor que indica cómo se inicia el servicio.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.StartType">
          <source>An error occurred when accessing a system API.</source>
          <target state="translated">Error de acceso a la API del sistema.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.StartType">
          <source>for browsing services on the computer.</source>
          <target state="translated">para examinar los servicios en el equipo.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.StartType">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse" /&gt;</ph>.</source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.Status">
          <source>Gets the status of the service that is referenced by this instance.</source>
          <target state="translated">Obtiene el estado del servicio al que hace referencia esta instancia.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.Status">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceControllerStatus" /&gt;</ph> values that indicates whether the service is running, stopped, or paused, or whether a start, stop, pause, or continue command is pending.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceControllerStatus" /&gt;</ph> que indica si el servicio se está ejecutando, detenido o en pausa, o si hay pendiente un comando iniciar, detener, pausar o continuar.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.Status">
          <source>The status indicates the current state of the service.</source>
          <target state="translated">El estado indica el estado actual del servicio.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.Status">
          <source>The set of possible values includes several that indicate whether a state-changing command is pending.</source>
          <target state="translated">El conjunto de valores posibles incluye varios que indican si un comando de cambio de estado es pendiente.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.Status">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> class to check the current status of the Telnet service.</source>
          <target state="translated">En el ejemplo siguiente se utiliza la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> clase para comprobar el estado actual del servicio Telnet.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.Status">
          <source>If the service is stopped, the example starts the service.</source>
          <target state="translated">Si se detiene el servicio, en el ejemplo se inicia el servicio.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceController.Status">
          <source>If the service is running, the example stops the service.</source>
          <target state="translated">Si está ejecutando el servicio, en el ejemplo se detiene el servicio.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.Status">
          <source>An error occurred when accessing a system API.</source>
          <target state="translated">Error de acceso a la API del sistema.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceController.Status">
          <source>The service was not found.</source>
          <target state="translated">No se encontró el servicio.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.Stop">
          <source>Stops this service and any services that are dependent on this service.</source>
          <target state="translated">Detiene este servicio y todos los servicios que dependan de él.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Stop">
          <source>If any services depend on this service for their operation, they will be stopped before this service is stopped.</source>
          <target state="translated">Si los servicios dependen de este servicio para su funcionamiento, se detendrá antes de que se detiene este servicio.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Stop">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.DependentServices%2A&gt;</ph> property contains the set of services that depend on this one.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.DependentServices%2A&gt;</ph> propiedad contiene el conjunto de servicios que dependen de éste.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Stop">
          <source>If you stop a service that this service depends on, call the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Stop%2A&gt;</ph> method on this service within the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceController.Stop%2A&gt;</ph> method of the parent service.</source>
          <target state="translated">Si se detiene un servicio que depende este servicio, llame a la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Stop%2A&gt;</ph> método en este servicio dentro de la <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceController.Stop%2A&gt;</ph> método del servicio principal.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Stop">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A&gt;</ph> property contains the services that this service depends on.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A&gt;</ph> propiedad contiene los servicios que depende este servicio.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Stop">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> class to check the current status of the Telnet service.</source>
          <target state="translated">En el ejemplo siguiente se utiliza la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> clase para comprobar el estado actual del servicio Telnet.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Stop">
          <source>If the service is stopped, the example starts the service.</source>
          <target state="translated">Si se detiene el servicio, en el ejemplo se inicia el servicio.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Stop">
          <source>If the service is running, the example stops the service.</source>
          <target state="translated">Si está ejecutando el servicio, en el ejemplo se detiene el servicio.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.Stop">
          <source>An error occurred when accessing a system API.</source>
          <target state="translated">Error de acceso a la API del sistema.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.Stop">
          <source>The service was not found.</source>
          <target state="translated">No se encontró el servicio.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Stop">
          <source>for controlling services on the computer.</source>
          <target state="translated">para controlar servicios en el equipo.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Stop">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Stop">
          <source>for unrestricted access to service information.</source>
          <target state="translated">Para obtener acceso no restringido a la información de servicio.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.Stop">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="T:System.ServiceProcess.ServiceController">
          <source>Waits for the service to reach the specified status.</source>
          <target state="translated">Espera a que el servicio alcance el estado especificado.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)">
          <source>The status to wait for.</source>
          <target state="translated">Estado al que se espera.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)">
          <source>Infinitely waits for the service to reach the specified status.</source>
          <target state="translated">No actúa hasta que el servicio alcanza el estado especificado.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.WaitForStatus%2A&gt;</ph> to suspend an application's processing until the service has reached the required status.</source>
          <target state="translated">Use <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.WaitForStatus%2A&gt;</ph> suspender una aplicación de procesamiento hasta que el servicio ha alcanzado el estado requerido.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.WaitForStatus%2A&gt;</ph> method waits approximately 250 milliseconds between each status check.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.WaitForStatus%2A&gt;</ph> método espera aproximadamente 250 milisegundos entre cada comprobación de estado.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.WaitForStatus%2A&gt;</ph> cannot detect the case of the observed service changing to the <ph id="ph2">`desiredStatus`</ph> and then immediately to another status in that interval.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.WaitForStatus%2A&gt;</ph> no se puede detectar el caso del servicio comprobado al cambiar a la <ph id="ph2">`desiredStatus`</ph> y, a continuación, inmediatamente a otro estado en ese intervalo.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> class to check whether the Alerter service is stopped.</source>
          <target state="translated">En el ejemplo siguiente se utiliza la <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> clase para comprobar si se detiene el servicio de alerta.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)">
          <source>If the service is stopped, the example starts the service and waits until the service status is set to <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceControllerStatus.Running&gt;</ph>.</source>
          <target state="translated">Si se detiene el servicio, en el ejemplo se inicia el servicio y espera hasta que el estado del servicio se establece en <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceControllerStatus.Running&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)">
          <source>The <ph id="ph1">&lt;paramref name="desiredStatus" /&gt;</ph> parameter is not any of the values defined in the <ph id="ph2">&lt;see cref="T:System.ServiceProcess.ServiceControllerStatus" /&gt;</ph> enumeration.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="desiredStatus" /&gt;</ph> no es ninguno de los valores definidos en la enumeración <ph id="ph2">&lt;see cref="T:System.ServiceProcess.ServiceControllerStatus" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,System.TimeSpan)">
          <source>The status to wait for.</source>
          <target state="translated">Estado al que se espera.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,System.TimeSpan)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> object specifying the amount of time to wait for the service to reach the specified status.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> que especifica el tiempo que se debe esperar a que el servicio alcance el estado especificado.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,System.TimeSpan)">
          <source>Waits for the service to reach the specified status or for the specified time-out to expire.</source>
          <target state="translated">Espera a que el servicio alcance el estado especificado o a que expire el tiempo de espera especificado.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,System.TimeSpan)">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.WaitForStatus%2A&gt;</ph> to suspend an application's processing until the service has reached the required status.</source>
          <target state="translated">Use <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.WaitForStatus%2A&gt;</ph> suspender una aplicación de procesamiento hasta que el servicio ha alcanzado el estado requerido.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.WaitForStatus%2A&gt;</ph> method waits approximately 250 milliseconds between each status check.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.WaitForStatus%2A&gt;</ph> método espera aproximadamente 250 milisegundos entre cada comprobación de estado.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,System.TimeSpan)">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.WaitForStatus%2A&gt;</ph> cannot detect the case of the observed service changing to the <ph id="ph2">`desiredStatus`</ph> and then immediately to another status in that interval.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.WaitForStatus%2A&gt;</ph> no se puede detectar el caso del servicio comprobado al cambiar a la <ph id="ph2">`desiredStatus`</ph> y, a continuación, inmediatamente a otro estado en ese intervalo.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;paramref name="desiredStatus" /&gt;</ph> parameter is not any of the values defined in the <ph id="ph2">&lt;see cref="T:System.ServiceProcess.ServiceControllerStatus" /&gt;</ph> enumeration.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="desiredStatus" /&gt;</ph> no es ninguno de los valores definidos en la enumeración <ph id="ph2">&lt;see cref="T:System.ServiceProcess.ServiceControllerStatus" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,System.TimeSpan)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter expires.</source>
          <target state="translated">El valor especificado para el parámetro <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> expira.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>