<Type Name="ServiceProcessInstaller" FullName="System.ServiceProcess.ServiceProcessInstaller">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="79299cc2f8fd9772fbb8c8961ba6f8b4705dbc5a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceProcessInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceProcessInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.ServiceProcess.ServiceProcessInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceProcessInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceProcessInstaller : System::Configuration::Install::ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="208a1-101">Instala un ejecutable que contiene clases que extienden <see cref="T:System.ServiceProcess.ServiceBase" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="208a1-101">Installs an executable containing classes that extend <see cref="T:System.ServiceProcess.ServiceBase" />.</span>
      </span>
      <span data-ttu-id="208a1-102">Las utilidades de instalación, como InstallUtil.exe, llaman a esta clase al instalar una aplicación de servicio.</span>
      <span class="sxs-lookup">
        <span data-stu-id="208a1-102">This class is called by installation utilities, such as InstallUtil.exe, when installing a service application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="208a1-103">El <xref:System.ServiceProcess.ServiceProcessInstaller> trabajo común a todos los servicios en un archivo ejecutable.</span><span class="sxs-lookup"><span data-stu-id="208a1-103">The <xref:System.ServiceProcess.ServiceProcessInstaller> does work common to all services in an executable.</span></span> <span data-ttu-id="208a1-104">Se usa la utilidad de instalación para escribir valores del registro asociados con los servicios que desea instalar.</span><span class="sxs-lookup"><span data-stu-id="208a1-104">It is used by the installation utility to write registry values associated with services you want to install.</span></span>  
  
 <span data-ttu-id="208a1-105">Para instalar un servicio, cree una clase de instalador de proyecto que herede de <xref:System.Configuration.Install.Installer>y establezca el <xref:System.ComponentModel.RunInstallerAttribute> en la clase para `true`.</span><span class="sxs-lookup"><span data-stu-id="208a1-105">To install a service, create a project installer class that inherits from <xref:System.Configuration.Install.Installer>, and set the <xref:System.ComponentModel.RunInstallerAttribute> on the class to `true`.</span></span> <span data-ttu-id="208a1-106">Dentro del proyecto, crear instancias de una <xref:System.ServiceProcess.ServiceProcessInstaller> instancia por la aplicación de servicio y uno <xref:System.ServiceProcess.ServiceInstaller> instancia para cada servicio en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="208a1-106">Within your project, instantiate one <xref:System.ServiceProcess.ServiceProcessInstaller> instance per service application, and one <xref:System.ServiceProcess.ServiceInstaller> instance for each service in the application.</span></span> <span data-ttu-id="208a1-107">Por último, agregue el <xref:System.ServiceProcess.ServiceProcessInstaller> instancia y el <xref:System.ServiceProcess.ServiceInstaller> instancias de la clase de instalador del proyecto.</span><span class="sxs-lookup"><span data-stu-id="208a1-107">Finally, add the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and the <xref:System.ServiceProcess.ServiceInstaller> instances to your project installer class.</span></span>  
  
 <span data-ttu-id="208a1-108">Cuando se ejecuta InstallUtil.exe, la utilidad busca clases en el ensamblado de servicio con el <xref:System.ComponentModel.RunInstallerAttribute> establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="208a1-108">When InstallUtil.exe runs, the utility looks for classes in the service assembly with the <xref:System.ComponentModel.RunInstallerAttribute> set to `true`.</span></span> <span data-ttu-id="208a1-109">Agregar clases al ensamblado de servicio agregándolas a la <xref:System.Configuration.Install.Installer.Installers%2A> colección asociada al instalador del proyecto.</span><span class="sxs-lookup"><span data-stu-id="208a1-109">Add classes to the service assembly by adding them to the <xref:System.Configuration.Install.Installer.Installers%2A> collection associated with your project installer.</span></span> <span data-ttu-id="208a1-110">Si <xref:System.ComponentModel.RunInstallerAttribute> es `false`, la utilidad de instalación omite el instalador del proyecto.</span><span class="sxs-lookup"><span data-stu-id="208a1-110">If <xref:System.ComponentModel.RunInstallerAttribute> is `false`, the install utility ignores the project installer.</span></span>  
  
 <span data-ttu-id="208a1-111">Para una instancia de <xref:System.ServiceProcess.ServiceProcessInstaller>, puede modificar las propiedades incluyen especificar que una aplicación de servicio se ejecute bajo una cuenta que no sea el usuario ha iniciado sesión.</span><span class="sxs-lookup"><span data-stu-id="208a1-111">For an instance of <xref:System.ServiceProcess.ServiceProcessInstaller>, properties you can modify include specifying that a service application run under an account other than the logged-on user.</span></span> <span data-ttu-id="208a1-112">Puede especificar un determinado <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> y <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> par con la que debe ejecutarse el servicio o puede usar <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> para especificar que el servicio se ejecutará bajo la cuenta del sistema del equipo, una variable local o cuenta de servicio de red o una cuenta de usuario.</span><span class="sxs-lookup"><span data-stu-id="208a1-112">You can specify a particular <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> pair under which the service should run, or you can use <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> to specify that the service run under the computer's System account, a local or network service account, or a user account.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="208a1-113">Cuenta del sistema del equipo no es igual que la cuenta de administrador.</span><span class="sxs-lookup"><span data-stu-id="208a1-113">The computer's System account is not the same as the Administrator account.</span></span>  
  
 <span data-ttu-id="208a1-114">Normalmente, no se llame a los métodos en <xref:System.ServiceProcess.ServiceInstaller> dentro del código; se denomina generalmente solo por la utilidad de instalación.</span><span class="sxs-lookup"><span data-stu-id="208a1-114">Normally, you do not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="208a1-115">La utilidad de instalación llama automáticamente a la <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> y <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> métodos durante el proceso de instalación.</span><span class="sxs-lookup"><span data-stu-id="208a1-115">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> and <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> methods during the installation process.</span></span> <span data-ttu-id="208a1-116">Deshace los errores, si es necesario, mediante una llamada a <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (o <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) en todos los componentes instalados anteriormente.</span><span class="sxs-lookup"><span data-stu-id="208a1-116">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (or <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) on all previously installed components.</span></span>  
  
 <span data-ttu-id="208a1-117">La rutina de instalación de la aplicación mantiene información automáticamente acerca de los componentes ya instalados, mediante el instalador de proyecto <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="208a1-117">An application's install routine maintains information automatically about the components already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="208a1-118">Esta información de estado se actualiza continuamente en el <xref:System.ServiceProcess.ServiceProcessInstaller> instancia y cada uno de ellos <xref:System.ServiceProcess.ServiceInstaller> está instalada la instancia por la utilidad.</span><span class="sxs-lookup"><span data-stu-id="208a1-118">This state information is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="208a1-119">Normalmente no es necesario para el código modificar esta información de estado de forma explícita.</span><span class="sxs-lookup"><span data-stu-id="208a1-119">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 <span data-ttu-id="208a1-120">Crear instancias de un <xref:System.ServiceProcess.ServiceProcessInstaller> hace que el constructor de clase base, <xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>, que se llame a.</span><span class="sxs-lookup"><span data-stu-id="208a1-120">Instantiating a <xref:System.ServiceProcess.ServiceProcessInstaller> causes the base class constructor, <xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>, to be called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="208a1-121">En el ejemplo siguiente se crea un instalador del proyecto denominado MyProjectInstaller, que hereda de <xref:System.Configuration.Install.Installer>.</span><span class="sxs-lookup"><span data-stu-id="208a1-121">The following example creates a project installer called MyProjectInstaller, which inherits from <xref:System.Configuration.Install.Installer>.</span></span> <span data-ttu-id="208a1-122">Se supone que hay un ejecutable de servicio que contiene dos servicios, "Hello World Service 1" y "Hello World Service 2".</span><span class="sxs-lookup"><span data-stu-id="208a1-122">It is assumed there is a service executable that contains two services, "Hello-World Service 1" and "Hello-World Service 2".</span></span> <span data-ttu-id="208a1-123">En el constructor de MyProjectInstaller (que se llamará desde la utilidad de instalación), <xref:System.ServiceProcess.ServiceInstaller> objetos se crean para cada servicio y un <xref:System.ServiceProcess.ServiceProcessInstaller> se crea para el archivo ejecutable.</span><span class="sxs-lookup"><span data-stu-id="208a1-123">Within the constructor for MyProjectInstaller (which would be called by the install utility), <xref:System.ServiceProcess.ServiceInstaller> objects are created for each service, and a <xref:System.ServiceProcess.ServiceProcessInstaller> is created for the executable.</span></span> <span data-ttu-id="208a1-124">Para que la utilidad de instalación reconozca MyProjectInstaller como un instalador válido, el <xref:System.ComponentModel.RunInstallerAttribute> atributo está establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="208a1-124">For the install utility to recognize MyProjectInstaller as a valid installer, the <xref:System.ComponentModel.RunInstallerAttribute> attribute is set to `true`.</span></span>  
  
 <span data-ttu-id="208a1-125">Las propiedades opcionales se establecen en el instalador del proceso y los instaladores del servicio antes de que los instaladores se agregan a la <xref:System.Configuration.Install.Installer.Installers%2A> colección.</span><span class="sxs-lookup"><span data-stu-id="208a1-125">Optional properties are set on the process installer and the service installers before the installers are added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span> <span data-ttu-id="208a1-126">Cuando la utilidad de instalación tiene acceso a MyProjectInstaller, los objetos se agregan a la <xref:System.Configuration.Install.Installer.Installers%2A> colección mediante una llamada a <xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType> se instalará a su vez.</span><span class="sxs-lookup"><span data-stu-id="208a1-126">When the install utility accesses MyProjectInstaller, the objects added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection through a call to <xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType> will be installed in turn.</span></span> <span data-ttu-id="208a1-127">Durante el proceso, el instalador mantiene información de estado que indica qué objetos se han instalado, por lo que cada objeto puede descartarse a su vez en el caso de un error de instalación.</span><span class="sxs-lookup"><span data-stu-id="208a1-127">During the process, the installer maintains state information indicating which objects have been installed, so each object can be backed out in turn in case of an installation failure.</span></span>  
  
 <span data-ttu-id="208a1-128">Normalmente, se crean no instancias de la clase de instalador de proyecto explícitamente.</span><span class="sxs-lookup"><span data-stu-id="208a1-128">Normally, you would not instantiate your project installer class explicitly.</span></span> <span data-ttu-id="208a1-129">¿Cree y agregue el <xref:System.ComponentModel.RunInstallerAttribute>, pero la utilidad de instalación realmente llama y, por tanto, crea una instancia, la clase.</span><span class="sxs-lookup"><span data-stu-id="208a1-129">You would create it and add the <xref:System.ComponentModel.RunInstallerAttribute>, but the install utility actually calls, and therefore instantiates, the class.</span></span>  
  
 [!code-cpp[Classic ServiceInstaller Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ServiceInstaller Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CS/source.cs#1)]
 [!code-vb[Classic ServiceInstaller Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceProcess.ServiceInstaller" />
    <altmember cref="T:System.ServiceProcess.ServiceBase" />
    <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
    <altmember cref="P:System.Configuration.Install.Installer.Installers" />
    <altmember cref="T:System.ServiceProcess.ServiceAccount" />
    <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceProcessInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceProcessInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="208a1-130">Crea una nueva instancia de la clase <see cref="T:System.ServiceProcess.ServiceProcessInstaller" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="208a1-130">Creates a new instance of the <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Account">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceAccount Account { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceProcess.ServiceAccount Account" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
      <MemberSignature Language="VB.NET" Value="Public Property Account As ServiceAccount" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceProcess::ServiceAccount Account { System::ServiceProcess::ServiceAccount get(); void set(System::ServiceProcess::ServiceAccount value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceProcessInstallerAccount")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceAccount</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="208a1-131">Obtiene o establece el tipo de cuenta en la que se ejecutará esta aplicación de servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="208a1-131">Gets or sets the type of account under which to run this service application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="208a1-132">
            <see cref="T:System.ServiceProcess.ServiceAccount" /> que define el tipo de cuenta en la que el sistema ejecuta este servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="208a1-132">A <see cref="T:System.ServiceProcess.ServiceAccount" /> that defines the type of account under which the system runs this service.</span>
          </span>
          <span data-ttu-id="208a1-133">El valor predeterminado es <see langword="User" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="208a1-133">The default is <see langword="User" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="208a1-134">Cuando el <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> propiedad es `User`, <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> y <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> propiedades se utilizan para definir una cuenta con la que se ejecuta la aplicación de servicio.</span><span class="sxs-lookup"><span data-stu-id="208a1-134">When the <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> property is `User`, the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> properties are used to define an account under which the service application runs.</span></span>  
  
 <span data-ttu-id="208a1-135">El <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> y <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> par permite al servicio para ejecutarse bajo una cuenta distinta de la cuenta del sistema.</span><span class="sxs-lookup"><span data-stu-id="208a1-135">The <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> pair allows the service to run under an account other than the system account.</span></span> <span data-ttu-id="208a1-136">Esto puede, por ejemplo, permitir que el servicio se inicie automáticamente en el reinicio, cuando ningún usuario haya iniciado sesión.</span><span class="sxs-lookup"><span data-stu-id="208a1-136">This can, for example, allow the service to start automatically at reboot, when no user is logged on.</span></span> <span data-ttu-id="208a1-137">Si se deja el <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> o <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> vacías y se establece <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> a `User`, se le pedirá un nombre de usuario válido y una contraseña durante la instalación.</span><span class="sxs-lookup"><span data-stu-id="208a1-137">If you leave either the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> or <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> empty and set <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> to `User`, you will be prompted for a valid user name and password at installation.</span></span>  
  
 <span data-ttu-id="208a1-138">También puede especificar que el servicio se ejecute bajo la cuenta sistema local o como una variable local o servicio de red.</span><span class="sxs-lookup"><span data-stu-id="208a1-138">You can also specify that the service run under the local system account, or as a local or network service.</span></span> <span data-ttu-id="208a1-139">Consulte la <xref:System.ServiceProcess.ServiceAccount> enumeración para obtener más información sobre los tipos de cuentas.</span><span class="sxs-lookup"><span data-stu-id="208a1-139">See the <xref:System.ServiceProcess.ServiceAccount> enumeration for details on types of accounts.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="T:System.ServiceProcess.ServiceAccount" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent comp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent comp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (comp As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ comp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="comp">
          <span data-ttu-id="208a1-140">
            <see cref="T:System.ComponentModel.IComponent" /> que representa el proceso de servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="208a1-140">The <see cref="T:System.ComponentModel.IComponent" /> that represents the service process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="208a1-141">Implementa el método <see cref="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" /> de la clase base sin un comportamiento específico de la clase <see cref="T:System.ServiceProcess.ServiceProcessInstaller" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="208a1-141">Implements the base class <see cref="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" /> method with no <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> class-specific behavior.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="208a1-142">No se debería llamar al método dentro del código.</span><span class="sxs-lookup"><span data-stu-id="208a1-142">This method should not be called within your code.</span></span> <span data-ttu-id="208a1-143">El método de clase base en <xref:System.Configuration.Install.ComponentInstaller> es `abstract`, por lo que se implementa aquí en la clase derivada.</span><span class="sxs-lookup"><span data-stu-id="208a1-143">The base class method on <xref:System.Configuration.Install.ComponentInstaller> is `abstract`, so it is implemented here on the derived class.</span></span> <span data-ttu-id="208a1-144">Sin embargo, no hay ningún <xref:System.ServiceProcess.ServiceProcessInstaller> específicos de las clases de procesamiento en la implementación del método.</span><span class="sxs-lookup"><span data-stu-id="208a1-144">However, there is no <xref:System.ServiceProcess.ServiceProcessInstaller> class-specific processing in the method's implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="HelpText">
      <MemberSignature Language="C#" Value="public override string HelpText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpText" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.HelpText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpText { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="208a1-145">Obtiene un texto de ayuda que se muestra para las opciones de instalación del servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="208a1-145">Gets help text displayed for service installation options.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="208a1-146">Texto de ayuda que proporciona una descripción de los pasos necesarios para establecer el nombre de usuario y la contraseña a fin de ejecutar el servicio en una cuenta determinada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="208a1-146">Help text that provides a description of the steps for setting the user name and password in order to run the service under a particular account.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="208a1-147">Este texto de ayuda puede usarse cuando un servicio se inicia de forma manual.</span><span class="sxs-lookup"><span data-stu-id="208a1-147">This help text can be used when a service starts manually.</span></span> <span data-ttu-id="208a1-148">Indica al usuario cómo especificar información de nombre y la contraseña de usuario.</span><span class="sxs-lookup"><span data-stu-id="208a1-148">It indicates to the user how to enter user name and password information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">
          <span data-ttu-id="208a1-149">
            <see cref="T:System.Collections.IDictionary" /> que contiene la información de contexto asociada a la instalación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="208a1-149">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="208a1-150">Escribe información de la aplicación de servicio en el Registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="208a1-150">Writes service application information to the registry.</span>
          </span>
          <span data-ttu-id="208a1-151">Este método está pensado para que lo utilicen las herramientas de instalación, que llaman automáticamente a los métodos adecuados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="208a1-151">This method is meant to be used by installation tools, which call the appropriate methods automatically.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="208a1-152">Normalmente, no se llame a los métodos en <xref:System.ServiceProcess.ServiceProcessInstaller> dentro del código; se denomina generalmente solo por la utilidad de instalación.</span><span class="sxs-lookup"><span data-stu-id="208a1-152">Normally, you do not call the methods on <xref:System.ServiceProcess.ServiceProcessInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="208a1-153">La utilidad de instalación llama automáticamente a la <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> método durante el proceso de instalación.</span><span class="sxs-lookup"><span data-stu-id="208a1-153">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> method during the installation process.</span></span> <span data-ttu-id="208a1-154">Deshace los errores, si es necesario, mediante una llamada a <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> en todos los componentes instalados anteriormente.</span><span class="sxs-lookup"><span data-stu-id="208a1-154">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> on all previously installed components.</span></span> <span data-ttu-id="208a1-155">Este método pasa la instalación a la clase base <xref:System.Configuration.Install.Installer.Install%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="208a1-155">This method passes the installation to the base class <xref:System.Configuration.Install.Installer.Install%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="208a1-156">Normalmente, no llamará a los métodos en <xref:System.ServiceProcess.ServiceInstaller> dentro del código; se denomina generalmente solo por la utilidad de instalación.</span><span class="sxs-lookup"><span data-stu-id="208a1-156">Normally, you will not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="208a1-157">La utilidad de instalación llama automáticamente a la <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> y <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> métodos durante el proceso de instalación.</span><span class="sxs-lookup"><span data-stu-id="208a1-157">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> and <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> methods during the installation process.</span></span> <span data-ttu-id="208a1-158">Deshace los errores, si es necesario, mediante una llamada a <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (o <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) en todos los componentes instalados anteriormente</span><span class="sxs-lookup"><span data-stu-id="208a1-158">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (or <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) on all previously installed components</span></span>  
  
 <span data-ttu-id="208a1-159">La rutina de instalación de la aplicación mantiene información automáticamente acerca de los componentes ya instalados, mediante el instalador de proyecto <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="208a1-159">An application's install routine maintains information automatically about the components already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="208a1-160">Esta información de estado, se pasa en <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> como el `stateSaver` parámetro, se actualiza continuamente en el <xref:System.ServiceProcess.ServiceProcessInstaller> instancia y cada uno <xref:System.ServiceProcess.ServiceInstaller> está instalada la instancia por la utilidad.</span><span class="sxs-lookup"><span data-stu-id="208a1-160">This state information, passed into <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> as the `stateSaver` parameter, is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="208a1-161">Normalmente no es necesario para el código modificar esta información de estado de forma explícita.</span><span class="sxs-lookup"><span data-stu-id="208a1-161">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 <span data-ttu-id="208a1-162"><xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> pasa al método de llamada las excepciones producidas por los métodos de clase base o <xref:System.Configuration.Install.Installer.BeforeInstall>  /  <xref:System.Configuration.Install.Installer.AfterInstall> controladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="208a1-162"><xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> passes to the calling method any exceptions thrown by base class methods or <xref:System.Configuration.Install.Installer.BeforeInstall> / <xref:System.Configuration.Install.Installer.AfterInstall> event handlers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="208a1-163">El valor de <paramref name="stateSaver" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="208a1-163">The <paramref name="stateSaver" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="208a1-164">Obtiene o establece la contraseña asociada a la cuenta de usuario en la que se ejecuta la aplicación de servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="208a1-164">Gets or sets the password associated with the user account under which the service application runs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="208a1-165">La contraseña asociada a la cuenta en la que se debe ejecutar el servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="208a1-165">The password associated with the account under which the service should run.</span>
          </span>
          <span data-ttu-id="208a1-166">El valor predeterminado es una cadena vacía ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="208a1-166">The default is an empty string ("").</span>
          </span>
          <span data-ttu-id="208a1-167">La propiedad no es pública y nunca se serializa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="208a1-167">The property is not public, and is never serialized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="208a1-168">El <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> y <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> par permite al servicio para ejecutarse bajo una cuenta distinta de la cuenta del sistema.</span><span class="sxs-lookup"><span data-stu-id="208a1-168">The <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> pair allows the service to run under an account other than the system account.</span></span> <span data-ttu-id="208a1-169">Esto puede, por ejemplo, permitir que el servicio se inicie automáticamente en el reinicio, cuando ningún usuario haya iniciado sesión.</span><span class="sxs-lookup"><span data-stu-id="208a1-169">This can, for example, allow the service to start automatically at reboot, when no user is logged on.</span></span>  
  
 <span data-ttu-id="208a1-170"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> y <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> se controlan de forma segura en que nunca se serializan ni se guardan en el estado de instalación (el instalador de proyecto <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) o en otra ubicación con acceso público.</span><span class="sxs-lookup"><span data-stu-id="208a1-170"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> are handled in a secure manner in that they are never serialized or saved to the install state (the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) or other location with public access.</span></span>  
  
 <span data-ttu-id="208a1-171">Establecer el <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> y <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> permite que una cuenta que se asociará automáticamente con el servicio durante la instalación.</span><span class="sxs-lookup"><span data-stu-id="208a1-171">Setting the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> allows an account to be associated automatically with the service at install time.</span></span> <span data-ttu-id="208a1-172">Si se deja el <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> o <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> vacías y se establece <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> a `User`, se le pedirá un nombre de usuario válido y una contraseña durante la instalación.</span><span class="sxs-lookup"><span data-stu-id="208a1-172">If you leave either the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> or <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> empty and set <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> to `User`, you will be prompted for a valid user name and password at installation.</span></span>  
  
 <span data-ttu-id="208a1-173">Otra opción para ejecutar un servicio en una cuenta independiente es utilizar la cuenta del sistema del equipo.</span><span class="sxs-lookup"><span data-stu-id="208a1-173">Another option for running a service under a separate account is to use the computer's System account.</span></span> <span data-ttu-id="208a1-174">Esta cuenta, que es distinta de la cuenta de administrador, requiere ninguna contraseña.</span><span class="sxs-lookup"><span data-stu-id="208a1-174">That account, which is distinct from the Administrator account, requires no password.</span></span> <span data-ttu-id="208a1-175">Privilegios de la cuenta de sistema pueden superarlas del usuario que ha iniciado.</span><span class="sxs-lookup"><span data-stu-id="208a1-175">The System account's privileges may exceed those of the user currently logged in.</span></span> <span data-ttu-id="208a1-176">Requiere que el servicio ejecutando bajo la cuenta del sistema en lugar de una cuenta de usuario evita problemas causados por el usuario no disponga del permiso</span><span class="sxs-lookup"><span data-stu-id="208a1-176">Running under the System account rather than a user account avoids problems resulting from the user lacking a permission the service requires</span></span>  
  
 <span data-ttu-id="208a1-177">Si <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> es cualquier valor distinto de `User`, se utiliza la cuenta especificada (local o servicio de red o sistema local), incluso si la <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> y <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> se rellenan las propiedades.</span><span class="sxs-lookup"><span data-stu-id="208a1-177">If <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> is any value other than `User`, the specifed account (local or network service, or local system) is used, even if the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> properties are populated.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <span data-ttu-id="208a1-178">
            <see cref="T:System.Collections.IDictionary" /> que contiene la información de contexto asociada a la instalación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="208a1-178">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="208a1-179">Deshace la información de la aplicación de servicio que el procedimiento de instalación escribió en el Registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="208a1-179">Rolls back service application information written to the registry by the installation procedure.</span>
          </span>
          <span data-ttu-id="208a1-180">Este método está pensado para que lo utilicen las herramientas de instalación que procesan automáticamente los métodos apropiados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="208a1-180">This method is meant to be used by installation tools, which process the appropriate methods automatically.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="208a1-181">Normalmente, no se llame a los métodos en <xref:System.ServiceProcess.ServiceProcessInstaller> dentro del código; se denomina generalmente solo por la utilidad de instalación.</span><span class="sxs-lookup"><span data-stu-id="208a1-181">Normally, you do not call the methods on <xref:System.ServiceProcess.ServiceProcessInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="208a1-182">La utilidad de instalación llama automáticamente a la <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> método durante el proceso de instalación.</span><span class="sxs-lookup"><span data-stu-id="208a1-182">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> method during the installation process.</span></span> <span data-ttu-id="208a1-183">Deshace los errores, si es necesario, mediante una llamada a <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> en el objeto que generó la excepción.</span><span class="sxs-lookup"><span data-stu-id="208a1-183">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> on the object that generated the exception.</span></span>  
  
 <span data-ttu-id="208a1-184">La rutina de instalación de la aplicación mantiene información automáticamente acerca de los componentes ya instalados, mediante el instalador de proyecto <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="208a1-184">An application's install routine maintains information automatically about the components already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="208a1-185">Esta información de estado, se pasa en <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> como el `savedState` parámetro, se actualiza continuamente en el <xref:System.ServiceProcess.ServiceProcessInstaller> instancia y cada uno <xref:System.ServiceProcess.ServiceInstaller> está instalada la instancia por la utilidad.</span><span class="sxs-lookup"><span data-stu-id="208a1-185">This state information, passed into <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> as the `savedState` parameter, is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="208a1-186">Normalmente no es necesario para el código modificar esta información de estado de forma explícita.</span><span class="sxs-lookup"><span data-stu-id="208a1-186">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 <span data-ttu-id="208a1-187"><xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> pasa al método de llamada las excepciones producidas por los métodos de clase base o <xref:System.Configuration.Install.Installer.BeforeInstall>  /  <xref:System.Configuration.Install.Installer.AfterInstall> controladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="208a1-187"><xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> passes to the calling method any exceptions thrown by base class methods or <xref:System.Configuration.Install.Installer.BeforeInstall> / <xref:System.Configuration.Install.Installer.AfterInstall> event handlers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="208a1-188">El valor de <paramref name="savedState" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="208a1-188">The <paramref name="savedState" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="208a1-189">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="208a1-189">-or-</span>
          </span>
          <span data-ttu-id="208a1-190">El parámetro <paramref name="savedState" /> está dañado o no existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="208a1-190">The <paramref name="savedState" /> is corrupted or non-existent.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
      </Docs>
    </Member>
    <Member MemberName="Username">
      <MemberSignature Language="C#" Value="public string Username { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Username" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
      <MemberSignature Language="VB.NET" Value="Public Property Username As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Username { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="208a1-191">Obtiene o establece la cuenta de usuario en la que se ejecutará la aplicación de servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="208a1-191">Gets or sets the user account under which the service application will run.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="208a1-192">La cuenta en la que tiene que ejecutarse el servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="208a1-192">The account under which the service should run.</span>
          </span>
          <span data-ttu-id="208a1-193">El valor predeterminado es una cadena vacía ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="208a1-193">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="208a1-194">El <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> y <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> par permite al servicio para ejecutarse bajo una cuenta distinta de la cuenta del sistema.</span><span class="sxs-lookup"><span data-stu-id="208a1-194">The <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> pair allows the service to run under an account other than the system account.</span></span> <span data-ttu-id="208a1-195">Esto puede, por ejemplo, permitir que el servicio se inicie automáticamente en el reinicio, cuando ningún usuario haya iniciado sesión.</span><span class="sxs-lookup"><span data-stu-id="208a1-195">This can, for example, allow the service to start automatically at reboot, when no user is logged on.</span></span>  
  
 <span data-ttu-id="208a1-196"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> y <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> se controlan de forma segura en que nunca se serializan ni se guardan en el estado de instalación (el instalador de proyecto <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) o en otra ubicación con acceso público.</span><span class="sxs-lookup"><span data-stu-id="208a1-196"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> are handled in a secure manner in that they are never serialized or saved to the install state (the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) or other location with public access.</span></span>  
  
 <span data-ttu-id="208a1-197">Establecer el <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> y <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> permite que una cuenta que se asociará automáticamente con el servicio durante la instalación.</span><span class="sxs-lookup"><span data-stu-id="208a1-197">Setting the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> allows an account to be associated automatically with the service at install time.</span></span> <span data-ttu-id="208a1-198">Si se deja el <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> o <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> vacías y se establece <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> a `User`, se le pedirá un nombre de usuario válido y una contraseña durante la instalación.</span><span class="sxs-lookup"><span data-stu-id="208a1-198">If you leave either the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> or <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> empty and set <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> to `User`, you will be prompted for a valid user name and password at installation.</span></span>  
  
 <span data-ttu-id="208a1-199">Otra opción para ejecutar un servicio en una cuenta independiente es utilizar la cuenta del sistema del equipo.</span><span class="sxs-lookup"><span data-stu-id="208a1-199">Another option for running a service under a separate account is to use the computer's System account.</span></span> <span data-ttu-id="208a1-200">Esta cuenta, que es distinta de la cuenta de administrador, requiere ninguna contraseña.</span><span class="sxs-lookup"><span data-stu-id="208a1-200">That account, which is distinct from the Administrator account, requires no password.</span></span> <span data-ttu-id="208a1-201">Privilegios de la cuenta de sistema pueden superarlas del usuario que ha iniciado.</span><span class="sxs-lookup"><span data-stu-id="208a1-201">The System account's privileges may exceed those of the user currently logged in.</span></span> <span data-ttu-id="208a1-202">Requiere que el servicio ejecutando bajo la cuenta del sistema en lugar de una cuenta de usuario evita problemas causados por el usuario no disponga del permiso</span><span class="sxs-lookup"><span data-stu-id="208a1-202">Running under the System account rather than a user account avoids problems resulting from the user lacking a permission the service requires</span></span>  
  
 <span data-ttu-id="208a1-203">Si <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> es cualquier valor distinto de `User`, se utiliza la cuenta especificada (local o servicio de red o sistema local), incluso si la <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> y <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> se rellenan las propiedades.</span><span class="sxs-lookup"><span data-stu-id="208a1-203">If <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> is any value other than `User`, the specified account (local or network service, or local system) is used, even if the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> properties are populated.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
  </Members>
</Type>