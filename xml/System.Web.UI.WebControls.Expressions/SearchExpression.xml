<Type Name="SearchExpression" FullName="System.Web.UI.WebControls.Expressions.SearchExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fdc792f734bfb346f5798c3d3dca05811266108b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39962856" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SearchExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SearchExpression extends System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.SearchExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class SearchExpression&#xA;Inherits ParameterDataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class SearchExpression : System::Web::UI::WebControls::Expressions::ParameterDataSourceExpression" />
  <TypeSignature Language="F#" Value="type SearchExpression = class&#xA;    inherit ParameterDataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona una manera de buscar uno o más campos para los valores de cadena y los compara con un valor de cadena especificado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.QueryExtender> control proporciona la capacidad de filtrar los datos en una página Web utilizando la <xref:System.Web.UI.WebControls.Expressions.SearchExpression> clase. La <xref:System.Web.UI.WebControls.Expressions.SearchExpression> clase compara una cadena especificada en uno o varios campos en un valor que proporcione. La expresión realiza una "comienza con", "contiene" o "termina con" búsqueda. Debe especificar valores para el <xref:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType%2A> y <xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields%2A> propiedades con el fin de indicar el tipo de búsqueda que desee realizar y los campos de datos que desea buscar. Si el proveedor LINQ que se utiliza en el <xref:System.Web.UI.WebControls.QueryExtender> control es compatible con mayúsculas y minúsculas, puede usar el <xref:System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType%2A> propiedad para habilitar o ignorar mayúsculas y minúsculas.  
  
 Puede proporcionar el valor para buscar un [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] control. Para especificar esto, establezca el <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> propiedad de la <xref:System.Web.UI.WebControls.ControlParameter> clase en el <xref:System.Web.UI.WebControls.Expressions.SearchExpression> objeto en el identificador de un [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] control. Por ejemplo, si se especifica el valor para buscar en un cuadro de texto, el <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> propiedad debe establecerse en el identificador del control de cuadro de texto. Puede usar el <xref:System.Web.UI.WebControls.Expressions.SearchExpression> clase junto con las demás expresiones que el <xref:System.Web.UI.WebControls.QueryExtender> admite, como el <xref:System.Web.UI.WebControls.Expressions.RangeExpression> filtro. Por ejemplo, puede buscar nombres de producto que contengan la cadena "té" y una lista de precios entre 100 y 200.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo buscar en la columna de nombre de la tabla Products de la base de datos de AdventureWorks para productos cuya que comienzan con la cadena especificada en el `SearchTextBox` control. El resultado que devuelve el <xref:System.Web.UI.WebControls.LinqDataSource> control se muestra en un <xref:System.Web.UI.WebControls.GridView> control.  
  
 Este ejemplo de código forma parte de un ejemplo más extenso que se proporciona en [Tutorial: filtrar datos en una página Web mediante declarativa la sintaxis](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> es <see langword="null" /> (<see langword="Nothing" /> en Visual Basic)</exception>
    <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SearchExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.SearchExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SearchExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.Expressions.SearchExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComparisonType">
      <MemberSignature Language="C#" Value="public StringComparison ComparisonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.StringComparison ComparisonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType" />
      <MemberSignature Language="VB.NET" Value="Public Property ComparisonType As StringComparison" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property StringComparison ComparisonType { StringComparison get(); void set(StringComparison value); };" />
      <MemberSignature Language="F#" Value="member this.ComparisonType : StringComparison with get, set" Usage="System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparison</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tipo de comparación de cadenas que se va a realizar.</summary>
        <value>Tipo de comparación de cadenas que se va a realizar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad le permite usar el <xref:System.StringComparison> enumeración para especificar cómo se realiza la búsqueda. El <xref:System.StringComparison> enumeración se utiliza para especificar si una comparación de cadenas utiliza la referencia cultural actual o la referencia cultural invariable, y si usa texto o las reglas de ordenación ordinal. Si el proveedor de datos que el <xref:System.Web.UI.WebControls.QueryExtender> utiliza admite mayúsculas y minúsculas, puede usar una de las propiedades de tipo de comparación para habilitar o ignorar mayúsculas y minúsculas.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DataFields">
      <MemberSignature Language="C#" Value="public string DataFields { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFields" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" />
      <MemberSignature Language="VB.NET" Value="Public Property DataFields As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataFields { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFields : string with get, set" Usage="System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene y establece un campo único o una lista separada por comas de campos para buscar.</summary>
        <value>Campo o campos para buscar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.UI.WebControls.Expressions.SearchExpression> clase realiza la búsqueda en uno o varios campos de datos en la tabla especificada. Debe especificarse al menos un campo de datos en el <xref:System.Web.UI.WebControls.Expressions.SearchExpression> instancia. Si especifica más de un campo de datos, separe los campos con una coma.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo buscar lo campos Name y ProductNumber datos en la tabla Products de la base de datos de AdventureWorks para productos que tienen nombres que empiezan con una cadena especificada. Este ejemplo de código forma parte de un ejemplo más extenso incluido en [Tutorial: filtrar datos en una página Web mediante declarativa la sintaxis](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:SearchExpression SearchType="StartsWith"   
      DataFields="Name","ProductNumber" >  
  <asp:ControlParameter ControlID="SearchTextBox" />  
</asp:SearchExpression>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="searchExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">Objeto que se va a utilizar.</param>
        <summary>Aplica un objeto <see cref="T:System.Web.UI.WebControls.Expressions.SearchExpression" /> al objeto <see cref="T:System.Linq.IQueryable" /> especificado en función del objeto <see cref="T:System.Web.UI.WebControls.Expressions.SearchType" />.</summary>
        <returns>Instancia del objeto <see cref="T:System.Linq.IQueryable" /> al que se aplicó <see cref="T:System.Web.UI.WebControls.Expressions.SearchExpression" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad evalúa la colección de parámetros que se usan en el <xref:System.Web.UI.WebControls.Expressions.SearchExpression> de objetos y se aplica la expresión a la <xref:System.Linq.IQueryable> objeto. Si se especifican varios campos de datos, el `AND` operador se aplica a los campos de datos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SearchType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.SearchType SearchType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Expressions.SearchType SearchType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType" />
      <MemberSignature Language="VB.NET" Value="Public Property SearchType As SearchType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::SearchType SearchType { System::Web::UI::WebControls::Expressions::SearchType get(); void set(System::Web::UI::WebControls::Expressions::SearchType value); };" />
      <MemberSignature Language="F#" Value="member this.SearchType : System.Web.UI.WebControls.Expressions.SearchType with get, set" Usage="System.Web.UI.WebControls.Expressions.SearchExpression.SearchType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.SearchType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor <see cref="T:System.Web.UI.WebControls.Expressions.SearchType" /> que determina en qué punto de la cadena se produce la búsqueda.</summary>
        <value>Tipo de búsqueda que se va a realizar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Expressions.SearchType> propiedad usa el <xref:System.Web.UI.WebControls.Expressions.SearchType> enumeración que contiene los tipos de búsqueda para usarlo en una instancia de la <xref:System.Web.UI.WebControls.Expressions.SearchExpression> clase.  
  
 En la tabla siguiente se enumera los posibles valores de enumeración.  
  
|Enumeración|Descripción|  
|-----------------|-----------------|  
|<xref:System.Web.UI.WebControls.Expressions.SearchType.StartsWith>|Indica una búsqueda que se inicia en cualquier lugar en un campo.|  
|<xref:System.Web.UI.WebControls.Expressions.SearchType.Contains>|Indica una búsqueda que se inicia al principio de un campo.|  
|<xref:System.Web.UI.WebControls.Expressions.SearchType.EndsWith>|Indica una búsqueda que al final de un campo.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>