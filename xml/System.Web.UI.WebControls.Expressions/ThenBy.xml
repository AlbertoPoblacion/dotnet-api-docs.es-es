<Type Name="ThenBy" FullName="System.Web.UI.WebControls.Expressions.ThenBy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d6fb5f93ec8ea5410e9f2f3949bd633caae03125" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51913270" /></Metadata><TypeSignature Language="C#" Value="public class ThenBy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ThenBy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.ThenBy" />
  <TypeSignature Language="VB.NET" Value="Public Class ThenBy" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThenBy" />
  <TypeSignature Language="F#" Value="type ThenBy = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona una manera de aplicar una expresión de ordenación a un objeto de origen de datos <see cref="T:System.Linq.IQueryable" /> después de que se haya aplicado una expresión <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Después de un criterio de ordenación se realiza mediante el uso de la <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> expresión en el <xref:System.Web.UI.WebControls.QueryExtender> controlar la ordenación subsiguiente se pueden realizar operaciones mediante el uso de la <xref:System.Web.UI.WebControls.Expressions.ThenBy> clase en un campo de datos diferente.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo ordenar los datos por el campo ListPrice en orden descendente y, a continuación, en el ProductID de campos en orden ascendente de pedido mediante el <xref:System.Web.UI.WebControls.Expressions.ThenBy> tipo. Este ejemplo de código forma parte de un ejemplo más extenso incluido en [Tutorial: filtrar datos en una página Web mediante declarativa la sintaxis](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/b93e32b9-af41-4539-a009-6cbbe809c702">Información general sobre el Control de servidor Web QueryExtender</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThenBy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.ThenBy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThenBy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.ThenBy.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.Expressions.ThenBy.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la propiedad del objeto <see cref="T:System.Linq.IQueryable" /> al que se va a aplicar la expresión <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" />.</summary>
        <value>Propiedad del objeto <see cref="T:System.Linq.IQueryable" /> al que se va a aplicar la expresión <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> ordena los datos en un campo de datos especificado. Las operaciones de ordenación subsiguiente pueden realizarse en un campo de datos diferente mediante la <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> el <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> colección. Esta propiedad especifica el campo de datos para aplicar el `ThenBy` ordenar la operación.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo ordenar los datos por el campo ListPrice en orden descendente y, a continuación, en el campo de Id. de producto en orden ascendente. Este ejemplo de código forma parte de un ejemplo más extenso incluido en [Tutorial: filtrar datos en una página Web mediante declarativa la sintaxis](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SortDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SortDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.ThenBy.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As SortDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SortDirection Direction { System::Web::UI::WebControls::SortDirection get(); void set(System::Web::UI::WebControls::SortDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Web.UI.WebControls.SortDirection with get, set" Usage="System.Web.UI.WebControls.Expressions.ThenBy.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la dirección de ordenación del objeto de origen de datos <see cref="T:System.Linq.IQueryable" />.</summary>
        <value>Dirección de ordenación del objeto de origen de datos <see cref="T:System.Linq.IQueryable" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> se utiliza en el <xref:System.Web.UI.WebControls.QueryExtender> control para ordenar los datos en orden ascendente o descendente. La dirección de la operación de ordenación se especifica mediante el <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A> propiedad.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo ordenar los datos por el campo ListPrice en orden descendente y en el campo ProductID en orden ascendente mediante el <xref:System.Web.UI.WebControls.Expressions.ThenBy.Direction%2A> propiedad. Este ejemplo de código forma parte de un ejemplo más extenso incluido en [Tutorial: filtrar datos en una página Web mediante declarativa la sintaxis](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>