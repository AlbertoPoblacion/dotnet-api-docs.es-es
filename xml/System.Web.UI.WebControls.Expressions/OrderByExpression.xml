<Type Name="OrderByExpression" FullName="System.Web.UI.WebControls.Expressions.OrderByExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1724706a6b8b092accb33969f755b40bb9fa7ffc" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55308948" /></Metadata><TypeSignature Language="C#" Value="public class OrderByExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OrderByExpression extends System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.OrderByExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class OrderByExpression&#xA;Inherits DataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class OrderByExpression : System::Web::UI::WebControls::Expressions::DataSourceExpression" />
  <TypeSignature Language="F#" Value="type OrderByExpression = class&#xA;    inherit DataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.DataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "ThenByExpressions")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona una manera de aplicar una expresión de ordenación a un objeto <see cref="T:System.Linq.IQueryable" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> clase se utiliza en el <xref:System.Web.UI.WebControls.QueryExtender> control para ordenar los datos en orden ascendente o descendente. La ordenación se realiza mediante el comparador predeterminado del tipo de elemento.  
  
 El <xref:System.Web.UI.WebControls.QueryExtender> control admite una variedad de opciones que puede usar para filtrar los datos. Después de usar las opciones de filtro, puede usar el <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> objeto para ordenar los datos.  
  
 Especifique el campo de datos para ordenar mediante el <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField%2A> propiedad. Especificar la dirección de ordenación mediante el <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A> propiedad. Después de la <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> objeto se ha aplicado al origen de datos, puede usar el <xref:System.Web.UI.WebControls.Expressions.ThenBy> expresiones para realizar una ordenación subsiguiente en otro campo de datos.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo buscar la tabla Products de la base de datos de AdventureWorks para productos que tienen nombres que empiecen por la cadena especificada en el `SearchTextBox` cuadro de texto. El <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> object ordena los datos por el campo de datos ListPrice en orden descendente y después por el campo de Id. de producto en orden ascendente. El resultado de la consulta que se devuelve desde el <xref:System.Web.UI.WebControls.LinqDataSource> control se muestra en un <xref:System.Web.UI.WebControls.GridView> control.  
  
 Este ejemplo de código forma parte de un ejemplo más extenso que se proporciona en [Tutorial: Filtrar datos en una página Web mediante la sintaxis declarativa](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" /> es <see langword="null" />.</exception>
    <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
    <related type="Article" href="https://msdn.microsoft.com/library/b93e32b9-af41-4539-a009-6cbbe809c702">Información general sobre el Control de servidor Web QueryExtender</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OrderByExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OrderByExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la propiedad del objeto <see cref="T:System.Linq.IQueryable" /> por la que se va a ordenar.</summary>
        <value>Propiedad del objeto de origen de datos <see cref="T:System.Linq.IQueryable" /> por la que se va a ordenar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> object ordena los datos en un campo de datos. Operación de ordenación subsiguiente puede realizarse en un campo de datos diferente mediante la <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> propiedad.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo ordenar los datos por el campo ListPrice en orden descendente y, a continuación, en el campo de Id. de producto en orden ascendente. Este ejemplo de código forma parte de un ejemplo más extenso que se proporciona en [Tutorial: Filtrar datos en una página Web mediante la sintaxis declarativa](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SortDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SortDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As SortDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SortDirection Direction { System::Web::UI::WebControls::SortDirection get(); void set(System::Web::UI::WebControls::SortDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Web.UI.WebControls.SortDirection with get, set" Usage="System.Web.UI.WebControls.Expressions.OrderByExpression.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la dirección de ordenación del objeto de origen de datos <see cref="T:System.Linq.IQueryable" />.</summary>
        <value>Dirección de ordenación del objeto de origen de datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> clase se utiliza en el <xref:System.Web.UI.WebControls.QueryExtender> control para ordenar los datos en orden ascendente o descendente. La dirección de la operación de ordenación se especifica mediante el <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A> propiedad.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo ordenar los datos por el campo ListPrice en orden descendente y, a continuación, en el campo ProductID en orden ascendente. Este ejemplo de código forma parte de un ejemplo más extenso incluido en [Tutorial: Filtrar datos en una página Web mediante la sintaxis declarativa](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="orderByExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">Especifica el origen de datos al que se va a aplicar la ordenación.</param>
        <summary>Aplica una expresión de ordenación a un objeto <see cref="T:System.Linq.IQueryable" /> basándose en un valor de <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" /> y un valor de <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction" />.</summary>
        <returns>Instancia del origen de datos al que se aplicó la expresión.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenByExpressions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Web.UI.WebControls.Expressions.ThenBy&gt; ThenByExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Web.UI.WebControls.Expressions.ThenBy&gt; ThenByExpressions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThenByExpressions As Collection(Of ThenBy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Web::UI::WebControls::Expressions::ThenBy ^&gt; ^ ThenByExpressions { System::Collections::ObjectModel::Collection&lt;System::Web::UI::WebControls::Expressions::ThenBy ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThenByExpressions : System.Collections.ObjectModel.Collection&lt;System.Web.UI.WebControls.Expressions.ThenBy&gt;" Usage="System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Web.UI.WebControls.Expressions.ThenBy&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la colección de expresiones <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> que se van a aplicar después de aplicar un valor de <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" /> al origen de datos.</summary>
        <value>Colección de expresiones <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> que se van a aplicar después de aplicar un valor de <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" /> al origen de datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Después de un criterio de ordenación se realiza mediante el uso de la <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> en el <xref:System.Web.UI.WebControls.QueryExtender> controlar la ordenación subsiguiente se pueden realizar operaciones mediante el uso de la <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> propiedad.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo ordenar los datos por el campo ListPrice en orden descendente y, a continuación, mediante el campo de Id. de producto en orden ascendente de pedido mediante el <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A>. Este ejemplo de código forma parte de un ejemplo más extenso que se proporciona en [Tutorial: Filtrar datos en una página Web mediante la sintaxis declarativa](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>