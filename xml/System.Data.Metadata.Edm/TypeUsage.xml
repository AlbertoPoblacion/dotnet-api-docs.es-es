<Type Name="TypeUsage" FullName="System.Data.Metadata.Edm.TypeUsage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2b143d3af61aac8a5378ae99985fa278e1a6b182" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51931835" /></Metadata><TypeSignature Language="C#" Value="public sealed class TypeUsage : System.Data.Metadata.Edm.MetadataItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeUsage extends System.Data.Metadata.Edm.MetadataItem" />
  <TypeSignature Language="DocId" Value="T:System.Data.Metadata.Edm.TypeUsage" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeUsage&#xA;Inherits MetadataItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeUsage sealed : System::Data::Metadata::Edm::MetadataItem" />
  <TypeSignature Language="F#" Value="type TypeUsage = class&#xA;    inherit MetadataItem" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Metadata.Edm.MetadataItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("EdmType={EdmType}, Facets.Count={Facets.Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Describe un tipo y un conjunto de facetas para ese tipo.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BuiltInTypeKind">
      <MemberSignature Language="C#" Value="public override System.Data.Metadata.Edm.BuiltInTypeKind BuiltInTypeKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Metadata.Edm.BuiltInTypeKind BuiltInTypeKind" />
      <MemberSignature Language="DocId" Value="P:System.Data.Metadata.Edm.TypeUsage.BuiltInTypeKind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BuiltInTypeKind As BuiltInTypeKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::Metadata::Edm::BuiltInTypeKind BuiltInTypeKind { System::Data::Metadata::Edm::BuiltInTypeKind get(); };" />
      <MemberSignature Language="F#" Value="member this.BuiltInTypeKind : System.Data.Metadata.Edm.BuiltInTypeKind" Usage="System.Data.Metadata.Edm.TypeUsage.BuiltInTypeKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.BuiltInTypeKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la modalidad del tipo integrado para <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.</summary>
        <value>Objeto <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> que representa la modalidad del tipo integrado para <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateBinaryTypeUsage">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> que describe un tipo binario mediante el uso de los valores de facetas especificados.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateBinaryTypeUsage">
      <MemberSignature Language="C#" Value="public static System.Data.Metadata.Edm.TypeUsage CreateBinaryTypeUsage (System.Data.Metadata.Edm.PrimitiveType primitiveType, bool isFixedLength);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Metadata.Edm.TypeUsage CreateBinaryTypeUsage(class System.Data.Metadata.Edm.PrimitiveType primitiveType, bool isFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.TypeUsage.CreateBinaryTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Metadata::Edm::TypeUsage ^ CreateBinaryTypeUsage(System::Data::Metadata::Edm::PrimitiveType ^ primitiveType, bool isFixedLength);" />
      <MemberSignature Language="F#" Value="static member CreateBinaryTypeUsage : System.Data.Metadata.Edm.PrimitiveType * bool -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="System.Data.Metadata.Edm.TypeUsage.CreateBinaryTypeUsage (primitiveType, isFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveType" Type="System.Data.Metadata.Edm.PrimitiveType" />
        <Parameter Name="isFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="primitiveType"><see cref="T:System.Data.Metadata.Edm.PrimitiveType" /> para el que se crea el objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.</param>
        <param name="isFixedLength">Es <see langword="true" /> para establecer la longitud del tipo binario en fija; de lo contrario, es <see langword="false" />.</param>
        <summary>Crea un objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> que describe un tipo binario mediante el uso de los valores de facetas especificados.</summary>
        <returns>Crea un objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> que describe un tipo binario mediante el uso de los valores de facetas especificados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información acerca de los tipos binarios, vea [Binary (EDM)](https://msdn.microsoft.com/library/ca858ce4-62d3-4516-bfb1-8a943dc66c61).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBinaryTypeUsage">
      <MemberSignature Language="C#" Value="public static System.Data.Metadata.Edm.TypeUsage CreateBinaryTypeUsage (System.Data.Metadata.Edm.PrimitiveType primitiveType, bool isFixedLength, int maxLength);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Metadata.Edm.TypeUsage CreateBinaryTypeUsage(class System.Data.Metadata.Edm.PrimitiveType primitiveType, bool isFixedLength, int32 maxLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.TypeUsage.CreateBinaryTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Boolean,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Metadata::Edm::TypeUsage ^ CreateBinaryTypeUsage(System::Data::Metadata::Edm::PrimitiveType ^ primitiveType, bool isFixedLength, int maxLength);" />
      <MemberSignature Language="F#" Value="static member CreateBinaryTypeUsage : System.Data.Metadata.Edm.PrimitiveType * bool * int -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="System.Data.Metadata.Edm.TypeUsage.CreateBinaryTypeUsage (primitiveType, isFixedLength, maxLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveType" Type="System.Data.Metadata.Edm.PrimitiveType" />
        <Parameter Name="isFixedLength" Type="System.Boolean" />
        <Parameter Name="maxLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="primitiveType"><see cref="T:System.Data.Metadata.Edm.PrimitiveType" /> para el que se crea el objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.</param>
        <param name="isFixedLength">Es <see langword="true" /> para establecer la longitud del tipo binario en fija; de lo contrario, es <see langword="false" />.</param>
        <param name="maxLength">Longitud máxima del tipo binario.</param>
        <summary>Crea un objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> que describe un tipo binario mediante el uso de los valores de facetas especificados.</summary>
        <returns>Crea un objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> que describe un tipo binario mediante el uso de los valores de facetas especificados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información acerca de los tipos binarios, vea [Binary (EDM)](https://msdn.microsoft.com/library/ca858ce4-62d3-4516-bfb1-8a943dc66c61).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDateTimeOffsetTypeUsage">
      <MemberSignature Language="C#" Value="public static System.Data.Metadata.Edm.TypeUsage CreateDateTimeOffsetTypeUsage (System.Data.Metadata.Edm.PrimitiveType primitiveType, Nullable&lt;byte&gt; precision);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Metadata.Edm.TypeUsage CreateDateTimeOffsetTypeUsage(class System.Data.Metadata.Edm.PrimitiveType primitiveType, valuetype System.Nullable`1&lt;unsigned int8&gt; precision) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.TypeUsage.CreateDateTimeOffsetTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Nullable{System.Byte})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Metadata::Edm::TypeUsage ^ CreateDateTimeOffsetTypeUsage(System::Data::Metadata::Edm::PrimitiveType ^ primitiveType, Nullable&lt;System::Byte&gt; precision);" />
      <MemberSignature Language="F#" Value="static member CreateDateTimeOffsetTypeUsage : System.Data.Metadata.Edm.PrimitiveType * Nullable&lt;byte&gt; -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="System.Data.Metadata.Edm.TypeUsage.CreateDateTimeOffsetTypeUsage (primitiveType, precision)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveType" Type="System.Data.Metadata.Edm.PrimitiveType" />
        <Parameter Name="precision" Type="System.Nullable&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="primitiveType">Tipo simple que define las unidades de medida del desplazamiento.</param>
        <param name="precision">Nivel de granularidad de <see cref="T:System.DateTimeOffset" /> en fracciones de segundo, basado en el número de posiciones decimales admitidas. Por ejemplo, una precisión de 3 significa que la granularidad admitida es milisegundos.</param>
        <summary>Crea un objeto <see cref="F:System.Data.Metadata.Edm.PrimitiveTypeKind.DateTimeOffset" /><see cref="T:System.Data.Metadata.Edm.TypeUsage" /> del tipo descrito por los parámetros.</summary>
        <returns>Un objeto <see cref="F:System.Data.Metadata.Edm.PrimitiveTypeKind.DateTimeOffset" /><see cref="T:System.Data.Metadata.Edm.TypeUsage" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDateTimeTypeUsage">
      <MemberSignature Language="C#" Value="public static System.Data.Metadata.Edm.TypeUsage CreateDateTimeTypeUsage (System.Data.Metadata.Edm.PrimitiveType primitiveType, Nullable&lt;byte&gt; precision);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Metadata.Edm.TypeUsage CreateDateTimeTypeUsage(class System.Data.Metadata.Edm.PrimitiveType primitiveType, valuetype System.Nullable`1&lt;unsigned int8&gt; precision) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.TypeUsage.CreateDateTimeTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Nullable{System.Byte})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Metadata::Edm::TypeUsage ^ CreateDateTimeTypeUsage(System::Data::Metadata::Edm::PrimitiveType ^ primitiveType, Nullable&lt;System::Byte&gt; precision);" />
      <MemberSignature Language="F#" Value="static member CreateDateTimeTypeUsage : System.Data.Metadata.Edm.PrimitiveType * Nullable&lt;byte&gt; -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="System.Data.Metadata.Edm.TypeUsage.CreateDateTimeTypeUsage (primitiveType, precision)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveType" Type="System.Data.Metadata.Edm.PrimitiveType" />
        <Parameter Name="precision" Type="System.Nullable&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="primitiveType">Tipo simple que define las unidades de medida del objeto <see cref="T:System.DateTime" />.</param>
        <param name="precision">Nivel de granularidad de <see cref="T:System.DateTimeOffset" /> en fracciones de segundo, basado en el número de posiciones decimales admitidas. Por ejemplo, una precisión de 3 significa que la granularidad admitida es milisegundos.</param>
        <summary>Crea un objeto <see cref="F:System.Data.Metadata.Edm.PrimitiveTypeKind.DateTime" /><see cref="T:System.Data.Metadata.Edm.TypeUsage" /> del tipo descrito por los parámetros.</summary>
        <returns>Un objeto <see cref="F:System.Data.Metadata.Edm.PrimitiveTypeKind.DateTime" /><see cref="T:System.Data.Metadata.Edm.TypeUsage" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateDecimalTypeUsage">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> que describe un tipo decimal.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDecimalTypeUsage">
      <MemberSignature Language="C#" Value="public static System.Data.Metadata.Edm.TypeUsage CreateDecimalTypeUsage (System.Data.Metadata.Edm.PrimitiveType primitiveType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Metadata.Edm.TypeUsage CreateDecimalTypeUsage(class System.Data.Metadata.Edm.PrimitiveType primitiveType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.TypeUsage.CreateDecimalTypeUsage(System.Data.Metadata.Edm.PrimitiveType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Metadata::Edm::TypeUsage ^ CreateDecimalTypeUsage(System::Data::Metadata::Edm::PrimitiveType ^ primitiveType);" />
      <MemberSignature Language="F#" Value="static member CreateDecimalTypeUsage : System.Data.Metadata.Edm.PrimitiveType -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="System.Data.Metadata.Edm.TypeUsage.CreateDecimalTypeUsage primitiveType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveType" Type="System.Data.Metadata.Edm.PrimitiveType" />
      </Parameters>
      <Docs>
        <param name="primitiveType"><see cref="T:System.Data.Metadata.Edm.PrimitiveType" /> para el que se crea el objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.</param>
        <summary>Crea un objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> que describe un tipo decimal con valores de facetas de escala y precisión sin enlazar.</summary>
        <returns>Un objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> que describe un tipo decimal con valores de facetas de escala y precisión sin enlazar.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información acerca de los tipos decimal, consulte [decimal](https://msdn.microsoft.com/library/99239537-0336-4705-b581-a79d89430bc7).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDecimalTypeUsage">
      <MemberSignature Language="C#" Value="public static System.Data.Metadata.Edm.TypeUsage CreateDecimalTypeUsage (System.Data.Metadata.Edm.PrimitiveType primitiveType, byte precision, byte scale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Metadata.Edm.TypeUsage CreateDecimalTypeUsage(class System.Data.Metadata.Edm.PrimitiveType primitiveType, unsigned int8 precision, unsigned int8 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.TypeUsage.CreateDecimalTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Byte,System.Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Metadata::Edm::TypeUsage ^ CreateDecimalTypeUsage(System::Data::Metadata::Edm::PrimitiveType ^ primitiveType, System::Byte precision, System::Byte scale);" />
      <MemberSignature Language="F#" Value="static member CreateDecimalTypeUsage : System.Data.Metadata.Edm.PrimitiveType * byte * byte -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="System.Data.Metadata.Edm.TypeUsage.CreateDecimalTypeUsage (primitiveType, precision, scale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveType" Type="System.Data.Metadata.Edm.PrimitiveType" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="primitiveType"><see cref="T:System.Data.Metadata.Edm.PrimitiveType" /> para el que se crea el objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.</param>
        <param name="precision">Precisión del tipo decimal como tipo <see cref="T:System.Byte" />.</param>
        <param name="scale">Escala del tipo decimal como tipo <see cref="T:System.Byte" />.</param>
        <summary>Crea un objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> que describe un tipo decimal mediante el uso de los valores de facetas especificados.</summary>
        <returns>Un objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> que describe un tipo decimal mediante el uso de los valores de facetas especificados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información acerca de los tipos decimal, consulte [decimal](https://msdn.microsoft.com/library/99239537-0336-4705-b581-a79d89430bc7).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultTypeUsage">
      <MemberSignature Language="C#" Value="public static System.Data.Metadata.Edm.TypeUsage CreateDefaultTypeUsage (System.Data.Metadata.Edm.EdmType edmType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Metadata.Edm.TypeUsage CreateDefaultTypeUsage(class System.Data.Metadata.Edm.EdmType edmType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.TypeUsage.CreateDefaultTypeUsage(System.Data.Metadata.Edm.EdmType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Metadata::Edm::TypeUsage ^ CreateDefaultTypeUsage(System::Data::Metadata::Edm::EdmType ^ edmType);" />
      <MemberSignature Language="F#" Value="static member CreateDefaultTypeUsage : System.Data.Metadata.Edm.EdmType -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="System.Data.Metadata.Edm.TypeUsage.CreateDefaultTypeUsage edmType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmType" Type="System.Data.Metadata.Edm.EdmType" />
      </Parameters>
      <Docs>
        <param name="edmType"><see cref="T:System.Data.Metadata.Edm.EdmType" /> para el que se crea el objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.</param>
        <summary>Crea un objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> con el tipo de modelo conceptual especificado.</summary>
        <returns>Un objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> con los valores de facetas predeterminados para el <see cref="T:System.Data.Metadata.Edm.EdmType" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Data.Metadata.Edm.EdmType> es un tipo primitivo, como `String`, `Decimal`, `Binary` o `DateTime`, este método llama a uno de los métodos correspondientes declarados en el <xref:System.Data.Metadata.Edm.TypeUsage> clase. De lo contrario, crea directamente un objeto <xref:System.Data.Metadata.Edm.TypeUsage> con el <xref:System.Data.Metadata.Edm.EdmType> especificado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateStringTypeUsage">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> que describe un tipo cadena mediante el uso de los valores de facetas especificados.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateStringTypeUsage">
      <MemberSignature Language="C#" Value="public static System.Data.Metadata.Edm.TypeUsage CreateStringTypeUsage (System.Data.Metadata.Edm.PrimitiveType primitiveType, bool isUnicode, bool isFixedLength);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Metadata.Edm.TypeUsage CreateStringTypeUsage(class System.Data.Metadata.Edm.PrimitiveType primitiveType, bool isUnicode, bool isFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.TypeUsage.CreateStringTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Metadata::Edm::TypeUsage ^ CreateStringTypeUsage(System::Data::Metadata::Edm::PrimitiveType ^ primitiveType, bool isUnicode, bool isFixedLength);" />
      <MemberSignature Language="F#" Value="static member CreateStringTypeUsage : System.Data.Metadata.Edm.PrimitiveType * bool * bool -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="System.Data.Metadata.Edm.TypeUsage.CreateStringTypeUsage (primitiveType, isUnicode, isFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveType" Type="System.Data.Metadata.Edm.PrimitiveType" />
        <Parameter Name="isUnicode" Type="System.Boolean" />
        <Parameter Name="isFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="primitiveType"><see cref="T:System.Data.Metadata.Edm.PrimitiveType" /> para el que se crea el objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.</param>
        <param name="isUnicode">Es <see langword="true" /> para establecer en Unicode el estándar de codificación de caracteres del tipo de cadena; de lo contrario, es <see langword="false" />.</param>
        <param name="isFixedLength"><see langword="true" /> para establecer una longitud fija para el tipo de cadena; de lo contrario, <see langword="false" />.</param>
        <summary>Crea un objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> para describir un tipo de cadena mediante los valores de faceta especificados y la propiedad <see langword="MaxLength" /> sin enlazar.</summary>
        <returns>Un objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> que describe un tipo cadena mediante los valores de faceta especificados y la propiedad <see langword="MaxLength" /> sin enlazar.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información acerca de los tipos de cadena, vea [String (EDM)](https://msdn.microsoft.com/library/66035587-41f3-4c36-8be0-71b035700c82).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStringTypeUsage">
      <MemberSignature Language="C#" Value="public static System.Data.Metadata.Edm.TypeUsage CreateStringTypeUsage (System.Data.Metadata.Edm.PrimitiveType primitiveType, bool isUnicode, bool isFixedLength, int maxLength);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Metadata.Edm.TypeUsage CreateStringTypeUsage(class System.Data.Metadata.Edm.PrimitiveType primitiveType, bool isUnicode, bool isFixedLength, int32 maxLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.TypeUsage.CreateStringTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Boolean,System.Boolean,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Metadata::Edm::TypeUsage ^ CreateStringTypeUsage(System::Data::Metadata::Edm::PrimitiveType ^ primitiveType, bool isUnicode, bool isFixedLength, int maxLength);" />
      <MemberSignature Language="F#" Value="static member CreateStringTypeUsage : System.Data.Metadata.Edm.PrimitiveType * bool * bool * int -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="System.Data.Metadata.Edm.TypeUsage.CreateStringTypeUsage (primitiveType, isUnicode, isFixedLength, maxLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveType" Type="System.Data.Metadata.Edm.PrimitiveType" />
        <Parameter Name="isUnicode" Type="System.Boolean" />
        <Parameter Name="isFixedLength" Type="System.Boolean" />
        <Parameter Name="maxLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="primitiveType"><see cref="T:System.Data.Metadata.Edm.PrimitiveType" /> para el que se crea el objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.</param>
        <param name="isUnicode">Es <see langword="true" /> para establecer en Unicode el estándar de codificación de caracteres del tipo de cadena; de lo contrario, es <see langword="false" />.</param>
        <param name="isFixedLength">Es <see langword="true" /> para establecer en Unicode el estándar de codificación de caracteres del tipo de cadena; de lo contrario, es <see langword="false" />.</param>
        <param name="maxLength">Es <see langword="true" /> para establecer la longitud del tipo de cadena en fija; de lo contrario, es <see langword="false" />.</param>
        <summary>Crea un objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> que describe un tipo cadena mediante el uso de los valores de facetas especificados.</summary>
        <returns>Un objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> que describe un tipo cadena mediante el uso de los valores de facetas especificados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información acerca de los tipos de cadena, vea [String (EDM)](https://msdn.microsoft.com/library/66035587-41f3-4c36-8be0-71b035700c82).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTimeTypeUsage">
      <MemberSignature Language="C#" Value="public static System.Data.Metadata.Edm.TypeUsage CreateTimeTypeUsage (System.Data.Metadata.Edm.PrimitiveType primitiveType, Nullable&lt;byte&gt; precision);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Metadata.Edm.TypeUsage CreateTimeTypeUsage(class System.Data.Metadata.Edm.PrimitiveType primitiveType, valuetype System.Nullable`1&lt;unsigned int8&gt; precision) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.TypeUsage.CreateTimeTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Nullable{System.Byte})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Metadata::Edm::TypeUsage ^ CreateTimeTypeUsage(System::Data::Metadata::Edm::PrimitiveType ^ primitiveType, Nullable&lt;System::Byte&gt; precision);" />
      <MemberSignature Language="F#" Value="static member CreateTimeTypeUsage : System.Data.Metadata.Edm.PrimitiveType * Nullable&lt;byte&gt; -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="System.Data.Metadata.Edm.TypeUsage.CreateTimeTypeUsage (primitiveType, precision)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveType" Type="System.Data.Metadata.Edm.PrimitiveType" />
        <Parameter Name="precision" Type="System.Nullable&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="primitiveType">Tipo simple que define las unidades de medida del objeto <see cref="T:System.DateTime" />.</param>
        <param name="precision">Nivel de granularidad de <see cref="T:System.DateTimeOffset" /> en fracciones de segundo, basado en el número de posiciones decimales admitidas. Por ejemplo, una precisión de 3 significa que la granularidad admitida es milisegundos.</param>
        <summary>Crea un objeto <see cref="F:System.Data.Metadata.Edm.PrimitiveTypeKind.Time" /><see cref="T:System.Data.Metadata.Edm.TypeUsage" /> del tipo descrito por los parámetros.</summary>
        <returns>Un objeto <see cref="F:System.Data.Metadata.Edm.PrimitiveTypeKind.Time" /><see cref="T:System.Data.Metadata.Edm.TypeUsage" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EdmType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EdmType EdmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.EdmType EdmType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Metadata.Edm.TypeUsage.EdmType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EdmType As EdmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::EdmType ^ EdmType { System::Data::Metadata::Edm::EdmType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EdmType : System.Data.Metadata.Edm.EdmType" Usage="System.Data.Metadata.Edm.TypeUsage.EdmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la información de tipos descrita por este <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.</summary>
        <value>Un objeto <see cref="T:System.Data.Metadata.Edm.EdmType" /> que representa la información de tipos descrita por este <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Facets">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Metadata.Edm.Facet&gt; Facets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1&lt;class System.Data.Metadata.Edm.Facet&gt; Facets" />
      <MemberSignature Language="DocId" Value="P:System.Data.Metadata.Edm.TypeUsage.Facets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Facets As ReadOnlyMetadataCollection(Of Facet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::ReadOnlyMetadataCollection&lt;System::Data::Metadata::Edm::Facet ^&gt; ^ Facets { System::Data::Metadata::Edm::ReadOnlyMetadataCollection&lt;System::Data::Metadata::Edm::Facet ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Facets : System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Metadata.Edm.Facet&gt;" Usage="System.Data.Metadata.Edm.TypeUsage.Facets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Metadata.Edm.Facet&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la lista de facetas del tipo descrito por este <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.</summary>
        <value>Una colección de tipo <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> que contiene la lista de facetas del tipo descrito por este <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubtypeOf">
      <MemberSignature Language="C#" Value="public bool IsSubtypeOf (System.Data.Metadata.Edm.TypeUsage typeUsage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsSubtypeOf(class System.Data.Metadata.Edm.TypeUsage typeUsage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.TypeUsage.IsSubtypeOf(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubtypeOf(System::Data::Metadata::Edm::TypeUsage ^ typeUsage);" />
      <MemberSignature Language="F#" Value="member this.IsSubtypeOf : System.Data.Metadata.Edm.TypeUsage -&gt; bool" Usage="typeUsage.IsSubtypeOf typeUsage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeUsage" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="typeUsage">Objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> que se va a comprobar.</param>
        <summary>Comprueba si este objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> es un subtipo del objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> especificado.</summary>
        <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> es un subtipo del objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" />especificado; de lo contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.TypeUsage.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="typeUsage.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve el nombre completo del tipo descrito por este <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.</summary>
        <returns>Nombre completo del tipo descrito por este objeto <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> como cadena.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>