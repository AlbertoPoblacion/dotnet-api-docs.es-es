<Type Name="ValuePattern+ValuePatternInformation" FullName="System.Windows.Automation.ValuePattern+ValuePatternInformation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6b5d92ad87ade849f1042885eade0daa81a15055" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37525089" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct ValuePattern.ValuePatternInformation" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit ValuePattern/ValuePatternInformation extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.ValuePattern.ValuePatternInformation" />
  <TypeSignature Language="VB.NET" Value="Public Structure ValuePattern.ValuePatternInformation" />
  <TypeSignature Language="C++ CLI" Value="public: value class ValuePattern::ValuePatternInformation" />
  <TypeSignature Language="F#" Value="type ValuePattern.ValuePatternInformation = struct" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona acceso a los valores de propiedades de un objeto <see cref="T:System.Windows.Automation.ValuePattern" /> mediante sus descriptores de acceso <see cref="P:System.Windows.Automation.ValuePattern.Current" /> o <see cref="P:System.Windows.Automation.ValuePattern.Cached" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.ValuePattern.ValuePatternInformation.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Automation.ValuePattern.ValuePatternInformation.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que especifica si el valor de un elemento [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] es de solo lectura.</summary>
        <value>
          <see langword="true" /> si el valor es de solo lectura; <see langword="false" /> si se puede modificar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un control debe tener su <xref:System.Windows.Automation.AutomationElement.IsEnabledProperty> establecido en `true` y su <xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty> establecido en `false` antes de que el cliente trata de una llamada a <xref:System.Windows.Automation.ValuePattern.SetValue%2A>.  
  
   
  
## Examples  
 En el ejemplo siguiente, un <xref:System.Windows.Automation.AutomationElement> que admita la <xref:System.Windows.Automation.ValuePattern> patrón de control tiene su <xref:System.Windows.Automation.RangeValuePattern.ValueProperty> establecida en un valor especificado por el usuario.  
  
 [!code-csharp[UIAValuePattern_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAValuePattern_snip/CSharp/UIAValuePattern_snippets.cs#103)]
 [!code-vb[UIAValuePattern_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAValuePattern_snip/VisualBasic/UIAValuePattern_snippets.vb#103)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.ValuePattern.ValuePatternInformation.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Windows.Automation.ValuePattern.ValuePatternInformation.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor del elemento [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)].</summary>
        <value>El valor de la [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elemento como una cadena. El valor predeterminado es una cadena vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controles de edición de línea única admiten el acceso mediante programación a su contenido a través de <xref:System.Windows.Automation.ValuePattern>. Sin embargo, los controles de edición multilínea no admiten la <xref:System.Windows.Automation.ValuePattern> patrón de control.  
  
 Para recuperar el contenido textual de varias líneas los controles deben admitir los controles de edición del <xref:System.Windows.Automation.TextPattern> patrón de control. Sin embargo, <xref:System.Windows.Automation.TextPattern> no admite establecer el valor de un control.  
  
 <xref:System.Windows.Automation.ValuePattern> no se admite la recuperación de información de formato ni valores de subcadena. El <xref:System.Windows.Automation.TextPattern> se debe usar el patrón de control en estos escenarios.  
  
   
  
## Examples  
 En el ejemplo siguiente, un <xref:System.Windows.Automation.ValuePattern> objeto obtenido de un control de destino se pasa a una función que recupera actual <xref:System.Windows.Automation.ValuePattern> los valores de propiedad.  
  
 [!code-csharp[UIAValuePattern_snip#102](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAValuePattern_snip/CSharp/UIAValuePattern_snippets.cs#102)]
 [!code-vb[UIAValuePattern_snip#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAValuePattern_snip/VisualBasic/UIAValuePattern_snippets.vb#102)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>