<Type Name="CacheRequest" FullName="System.Windows.Automation.CacheRequest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ba79b367856f83c772f8c7971dde04e0ee956e6d" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
    <Meta Name="ms.locfileid" Value="31909951" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CacheRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CacheRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.CacheRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CacheRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class CacheRequest sealed" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="456db-101">Especifica las propiedades y modelos que el marco de automatización de la interfaz de usuario almacena en caché cuando se obtiene un objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="456db-101">Specifies properties and patterns that the UI Automation framework caches when an <see cref="T:System.Windows.Automation.AutomationElement" /> is obtained.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="456db-102">Recuperar propiedades y patrones a través de [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] requiere llamadas entre procesos que pueden ralentizar el rendimiento.</span><span class="sxs-lookup"><span data-stu-id="456db-102">Retrieving properties and patterns through [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] requires cross-process calls that can slow down performance.</span></span> <span data-ttu-id="456db-103">Almacenando en memoria caché los valores de propiedades y modelos en una operación por lotes, puede mejorar el rendimiento de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="456db-103">By caching values of proprieties and patterns in a batch operation, you can enhance the performance of your application.</span></span>  
  
 <span data-ttu-id="456db-104">Crear una nueva solicitud de caché mediante una llamada al constructor de clase.</span><span class="sxs-lookup"><span data-stu-id="456db-104">Create a new cache request by calling the class constructor.</span></span> <span data-ttu-id="456db-105">La solicitud se rellena con las llamadas repetidas a la <xref:System.Windows.Automation.CacheRequest.Add%2A> método.</span><span class="sxs-lookup"><span data-stu-id="456db-105">The request is populated by repeated calls to the <xref:System.Windows.Automation.CacheRequest.Add%2A> method.</span></span>  
  
 <span data-ttu-id="456db-106">Solo una <xref:System.Windows.Automation.CacheRequest> pueden estar activas.</span><span class="sxs-lookup"><span data-stu-id="456db-106">Only a single <xref:System.Windows.Automation.CacheRequest> can be active.</span></span> <span data-ttu-id="456db-107">Hay dos formas de activar una solicitud:</span><span class="sxs-lookup"><span data-stu-id="456db-107">There are two ways to activate a request:</span></span>  
  
-   <span data-ttu-id="456db-108">Llamar a <xref:System.Windows.Automation.CacheRequest.Activate%2A> en la solicitud.</span><span class="sxs-lookup"><span data-stu-id="456db-108">Call <xref:System.Windows.Automation.CacheRequest.Activate%2A> on the request.</span></span> <span data-ttu-id="456db-109">Esto inserta la solicitud en la pila y la solicitud se extrae cuando se elimina el objeto.</span><span class="sxs-lookup"><span data-stu-id="456db-109">This pushes the request onto the stack, and the request is popped when the object is disposed.</span></span> <span data-ttu-id="456db-110">Para garantizar la eliminación incluso si se produce una excepción, use el valor devuelto de <xref:System.Windows.Automation.CacheRequest.Activate%2A> dentro de un `using` bloque (`Using` en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="456db-110">To ensure disposal even if an exception is raised, use the return value from <xref:System.Windows.Automation.CacheRequest.Activate%2A> within a `using` block (`Using` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="456db-111">Coloca la solicitud en la pila interna mediante una llamada a <xref:System.Windows.Automation.CacheRequest.Push%2A>.</span><span class="sxs-lookup"><span data-stu-id="456db-111">Put the request onto the internal stack by calling <xref:System.Windows.Automation.CacheRequest.Push%2A>.</span></span> <span data-ttu-id="456db-112">Solo la solicitud superior de la pila está activa y debe ser el siguiente se quita de la pila por <xref:System.Windows.Automation.CacheRequest.Pop%2A>.</span><span class="sxs-lookup"><span data-stu-id="456db-112">Only the topmost request on the stack is active, and it must be the next one removed from the stack by <xref:System.Windows.Automation.CacheRequest.Pop%2A>.</span></span> <span data-ttu-id="456db-113">Retirar la solicitud, desactiva.</span><span class="sxs-lookup"><span data-stu-id="456db-113">Popping the request deactivates it.</span></span>  
  
 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]<span data-ttu-id="456db-114"> elementos obtenidos mientras la solicitud está activa habrá almacenado en memoria caché los valores para las propiedades y los patrones especificados.</span><span class="sxs-lookup"><span data-stu-id="456db-114"> elements obtained while the request is active will have cached values for the properties and patterns specified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="456db-115">En el ejemplo siguiente se muestra cómo usar <xref:System.Windows.Automation.CacheRequest.Activate%2A> a propiedades y los patrones de la memoria caché.</span><span class="sxs-lookup"><span data-stu-id="456db-115">The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to cache patterns and properties.</span></span>  
  
 [!code-csharp[UIAClient_snip#107](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#107)]
 [!code-vb[UIAClient_snip#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#107)]  
  
 <span data-ttu-id="456db-116">En el ejemplo siguiente se muestra cómo usar <xref:System.Windows.Automation.CacheRequest.Push%2A> y <xref:System.Windows.Automation.CacheRequest.Pop%2A> a propiedades y los patrones de la memoria caché.</span><span class="sxs-lookup"><span data-stu-id="456db-116">The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Push%2A> and <xref:System.Windows.Automation.CacheRequest.Pop%2A> to cache patterns and properties.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheRequest();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="456db-117">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="456db-117">Initializes a new instance of the <see cref="T:System.Windows.Automation.CacheRequest" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="456db-118">Cuando un <xref:System.Windows.Automation.CacheRequest> se crea, el <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identificador se agrega como una propiedad predeterminada en memoria caché.</span><span class="sxs-lookup"><span data-stu-id="456db-118">When a <xref:System.Windows.Automation.CacheRequest> is created, the <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identifier is added as a default property to cache.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public IDisposable Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="456db-119">Establece <see cref="T:System.Windows.Automation.CacheRequest" /> como especificación activa para los elementos devueltos cuando se solicita <see cref="T:System.Windows.Automation.AutomationElement" /> en el mismo subproceso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="456db-119">Sets this <see cref="T:System.Windows.Automation.CacheRequest" /> as the active specification for the items that are returned when an <see cref="T:System.Windows.Automation.AutomationElement" /> is requested on the same thread.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="456db-120">Objeto que puede utilizarse para eliminar <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="456db-120">The object that can be used to dispose the <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="456db-121">Con este método es preferible al uso de <xref:System.Windows.Automation.CacheRequest.Push%2A> y <xref:System.Windows.Automation.CacheRequest.Pop%2A> como medio para activar el <xref:System.Windows.Automation.CacheRequest>.</span><span class="sxs-lookup"><span data-stu-id="456db-121">Using this method is usually preferable to using <xref:System.Windows.Automation.CacheRequest.Push%2A> and <xref:System.Windows.Automation.CacheRequest.Pop%2A> as a means of activating the <xref:System.Windows.Automation.CacheRequest>.</span></span> <span data-ttu-id="456db-122">El objeto se inserta en la pila cuando <xref:System.Windows.Automation.CacheRequest.Activate%2A> se llama y, a continuación, extrae cuando se elimina.</span><span class="sxs-lookup"><span data-stu-id="456db-122">The object is pushed onto the stack when <xref:System.Windows.Automation.CacheRequest.Activate%2A> is called, and then popped off when it is disposed.</span></span> <span data-ttu-id="456db-123">Para garantizar la eliminación, coloque el valor devuelto en un `using` bloque (`Using` en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="456db-123">To ensure disposal, place the return value within a `using` block (`Using` in Visual Basic).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="456db-124">En el ejemplo siguiente se muestra cómo usar <xref:System.Windows.Automation.CacheRequest.Activate%2A> a propiedades y los patrones de la memoria caché.</span><span class="sxs-lookup"><span data-stu-id="456db-124">The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to cache patterns and properties.</span></span>  
  
 [!code-csharp[UIAClient_snip#107](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#107)]
 [!code-vb[UIAClient_snip#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#107)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.CacheRequest.Push" />
        <altmember cref="M:System.Windows.Automation.CacheRequest.Pop" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="456db-125">Agrega un identificador de propiedad o modelo a <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="456db-125">Adds a property or pattern identifier to a <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="456db-126">Cuando un <xref:System.Windows.Automation.CacheRequest> se crea el objeto, el <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identificador se agrega como una propiedad predeterminada en memoria caché.</span><span class="sxs-lookup"><span data-stu-id="456db-126">When a <xref:System.Windows.Automation.CacheRequest> object is created, the <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identifier is added as a default property to cache.</span></span>  
  
 <span data-ttu-id="456db-127">Agregar un objeto que ya está en la solicitud de caché no tiene ningún efecto.</span><span class="sxs-lookup"><span data-stu-id="456db-127">Adding an object that is already in the cache request has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Automation.AutomationPattern pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Automation.AutomationPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (pattern As AutomationPattern)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Windows::Automation::AutomationPattern ^ pattern);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
      </Parameters>
      <Docs>
        <param name="pattern">
          <span data-ttu-id="456db-128">Identificador que especifica un modelo para almacenar en memoria caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="456db-128">An identifier specifying a pattern to cache.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="456db-129">Agrega el identificador de <see cref="T:System.Windows.Automation.AutomationPattern" /> especificado a <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="456db-129">Adds the specified <see cref="T:System.Windows.Automation.AutomationPattern" /> identifier to this <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="456db-130">Agregar un modelo que ya está en la solicitud de caché no tiene ningún efecto.</span><span class="sxs-lookup"><span data-stu-id="456db-130">Adding a pattern that is already in the cache request has no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="456db-131">En el ejemplo siguiente se muestra cómo construir un <xref:System.Windows.Automation.CacheRequest> y agregar un modelo en la memoria caché.</span><span class="sxs-lookup"><span data-stu-id="456db-131">The following example shows how to construct a <xref:System.Windows.Automation.CacheRequest> and add a pattern to be cached.</span></span>  
  
 [!code-csharp[UIAClient_snip#202](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#202)]
 [!code-vb[UIAClient_snip#202](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#202)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="456db-132">El objeto <see cref="T:System.Windows.Automation.CacheRequest" /> está activo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="456db-132">The <see cref="T:System.Windows.Automation.CacheRequest" /> is active.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Automation.AutomationProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Automation.AutomationProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (property As AutomationProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Windows::Automation::AutomationProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="456db-133">Identificador que especifica un valor de propiedad para almacenar en memoria caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="456db-133">An identifier specifying a property value to cache.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="456db-134">Agrega el identificador de <see cref="T:System.Windows.Automation.AutomationProperty" /> especificado a <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="456db-134">Adds the specified <see cref="T:System.Windows.Automation.AutomationProperty" /> identifier to this <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="456db-135">Cuando un <xref:System.Windows.Automation.CacheRequest> se crea, el <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identificador se agrega como una propiedad predeterminada en memoria caché.</span><span class="sxs-lookup"><span data-stu-id="456db-135">When a <xref:System.Windows.Automation.CacheRequest> is created, the <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identifier is added as a default property to cache.</span></span>  
  
 <span data-ttu-id="456db-136">Agregar una propiedad que ya está en la solicitud de caché no tiene ningún efecto.</span><span class="sxs-lookup"><span data-stu-id="456db-136">Adding a property that is already in the cache request has no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="456db-137">En el ejemplo siguiente se muestra cómo construir un <xref:System.Windows.Automation.CacheRequest> y agregar una propiedad que se va a almacenar en caché.</span><span class="sxs-lookup"><span data-stu-id="456db-137">The following example shows how to construct a <xref:System.Windows.Automation.CacheRequest> and add a property to be cached.</span></span>  
  
 [!code-csharp[UIAClient_snip#202](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#202)]
 [!code-vb[UIAClient_snip#202](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#202)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="456db-138">El objeto <see cref="T:System.Windows.Automation.CacheRequest" /> está activo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="456db-138">The <see cref="T:System.Windows.Automation.CacheRequest" /> is active.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AutomationElementMode">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElementMode AutomationElementMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.AutomationElementMode AutomationElementMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.AutomationElementMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomationElementMode As AutomationElementMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElementMode AutomationElementMode { System::Windows::Automation::AutomationElementMode get(); void set(System::Windows::Automation::AutomationElementMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElementMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="456db-139">Obtiene o establece un valor que especifica si los elementos devueltos deben contener referencias completas a la [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] subyacente o sólo información almacenada en caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="456db-139">Gets or sets a value that specifies whether returned elements should contain full references to the underlying [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], or only cached information.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="456db-140">
            <see cref="F:System.Windows.Automation.AutomationElementMode.Full" /> si los elementos devueltos tienen una referencia completa a la [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] subyacente; en caso contrario, <see cref="F:System.Windows.Automation.AutomationElementMode.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="456db-140">
              <see cref="F:System.Windows.Automation.AutomationElementMode.Full" /> if the returned elements have a full reference to the underlying [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]; otherwise <see cref="F:System.Windows.Automation.AutomationElementMode.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="456db-141"><xref:System.Windows.Automation.AutomationElementMode.Full> es el valor predeterminado y especifica que los elementos devueltos contienen una referencia completa a subyacente [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="456db-141"><xref:System.Windows.Automation.AutomationElementMode.Full> is the default value, and specifies that returned elements contain a full reference to the underlying [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span> <span data-ttu-id="456db-142"><xref:System.Windows.Automation.AutomationElementMode.None> Especifica que los elementos devueltos no tienen ninguna referencia a subyacente [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]y contienen solo información almacenada en caché.</span><span class="sxs-lookup"><span data-stu-id="456db-142"><xref:System.Windows.Automation.AutomationElementMode.None> specifies that the returned elements have no reference to the underlying [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], and contain only cached information.</span></span>  
  
 <span data-ttu-id="456db-143">Ciertas operaciones en los elementos, incluidos los <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>, <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>, y <xref:System.Windows.Automation.AutomationElement.SetFocus%2A>, requieren una referencia completa; al intentar realizar estas operaciones en un elemento que no tiene ninguno da como resultado un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="456db-143">Certain operations on elements, including <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>, <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>, and <xref:System.Windows.Automation.AutomationElement.SetFocus%2A>, require a full reference; attempting to perform these on an element that has none results in an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="456db-144">Con <xref:System.Windows.Automation.AutomationElementMode.None> puede ser más eficaz cuando sólo se necesitan propiedades, ya que evita la sobrecarga implicada en la configuración de referencias completas.</span><span class="sxs-lookup"><span data-stu-id="456db-144">Using <xref:System.Windows.Automation.AutomationElementMode.None> can be more efficient when only properties are needed, as it avoids the overhead involved in setting up full references.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="456db-145">En el ejemplo siguiente, <xref:System.Windows.Automation.CacheRequest.AutomationElementMode%2A> se establece en <xref:System.Windows.Automation.AutomationElementMode.None>, con lo que solo propiedades almacenadas en caché y patrones están disponibles para el objeto recuperado.</span><span class="sxs-lookup"><span data-stu-id="456db-145">In the following example, <xref:System.Windows.Automation.CacheRequest.AutomationElementMode%2A> is set to <xref:System.Windows.Automation.AutomationElementMode.None>, with the result that only cached properties and patterns are available for the retrieved object.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.CacheRequest Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.CacheRequest Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As CacheRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::CacheRequest ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.CacheRequest</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="456db-146">Crea una copia de <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="456db-146">Creates a copy of this <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="456db-147">Copia modificable del objeto actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="456db-147">A modifiable copy of the current object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.CacheRequest Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Automation.CacheRequest Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As CacheRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Automation::CacheRequest ^ Current { System::Windows::Automation::CacheRequest ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.CacheRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="456db-148">Obtiene el objeto <see cref="T:System.Windows.Automation.CacheRequest" /> activo en el subproceso actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="456db-148">Gets the <see cref="T:System.Windows.Automation.CacheRequest" /> that is active on the current thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="456db-149">Objeto <see cref="T:System.Windows.Automation.CacheRequest" /> activo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="456db-149">The active <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public void Pop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Pop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="456db-150">Quita el objeto <see cref="T:System.Windows.Automation.CacheRequest" /> activo de la pila interna para el subproceso actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="456db-150">Removes the active <see cref="T:System.Windows.Automation.CacheRequest" /> from the internal stack for the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="456db-151">Solo la solicitud actualmente activa se puede quitar mediante el <xref:System.Windows.Automation.CacheRequest.Pop%2A> método.</span><span class="sxs-lookup"><span data-stu-id="456db-151">Only the currently active request can be removed using the <xref:System.Windows.Automation.CacheRequest.Pop%2A> method.</span></span> <span data-ttu-id="456db-152">Intento de quitar una solicitud que es no la actual tiene como resultado una excepción.</span><span class="sxs-lookup"><span data-stu-id="456db-152">Attempting to remove a request that is not the current one results in an exception.</span></span>  
  
 <span data-ttu-id="456db-153">A menos que se aniden las solicitudes de caché, es preferible utilizar <xref:System.Windows.Automation.CacheRequest.Activate%2A> para colocar la solicitud en la pila.</span><span class="sxs-lookup"><span data-stu-id="456db-153">Unless you are nesting cache requests, it is preferable to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to place the request on the stack.</span></span> <span data-ttu-id="456db-154">La razón es que puede usar <xref:System.Windows.Automation.CacheRequest.Activate%2A> dentro de un `using` bloque (`Using` en Visual Basic), asegurándose de que la solicitud se extrae de la pila, incluso si se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="456db-154">The reason is that you can use <xref:System.Windows.Automation.CacheRequest.Activate%2A> within a `using` block (`Using` in Visual Basic), ensuring that the request is popped off the stack even if an exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="456db-155">En el ejemplo siguiente se muestra cómo desactivar un <xref:System.Windows.Automation.CacheRequest> utilizando <xref:System.Windows.Automation.CacheRequest.Pop%2A>.</span><span class="sxs-lookup"><span data-stu-id="456db-155">The following example shows how to deactivate a <xref:System.Windows.Automation.CacheRequest> by using <xref:System.Windows.Automation.CacheRequest.Pop%2A>.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="456db-156">Se realizó un intento de quitar una solicitud de caché que no era la última insertada en la pila.</span>
          <span class="sxs-lookup">
            <span data-stu-id="456db-156">An attempt was made to remove a cache request that was not the last one pushed onto the stack.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Automation.CacheRequest.Push" />
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public void Push ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Push() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Push" />
      <MemberSignature Language="VB.NET" Value="Public Sub Push ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Push();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="456db-157">Coloca <see cref="T:System.Windows.Automation.CacheRequest" /> en la pila de estado interna, que lo convierte en la solicitud activa en el subproceso actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="456db-157">Places the <see cref="T:System.Windows.Automation.CacheRequest" /> on the internal state stack, making it the active request on the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="456db-158">Varios <xref:System.Windows.Automation.CacheRequest> objetos pueden colocarse en la pila de estado.</span><span class="sxs-lookup"><span data-stu-id="456db-158">Multiple <xref:System.Windows.Automation.CacheRequest> objects can be placed onto the state stack.</span></span> <span data-ttu-id="456db-159">Solicitudes de caché deben quitarse de la pila en el orden en que se insertaron; en caso contrario, un <xref:System.InvalidOperationException> se produce la excepción.</span><span class="sxs-lookup"><span data-stu-id="456db-159">Cache requests must be removed from the stack in the order they were pushed on; otherwise, an <xref:System.InvalidOperationException> exception is raised.</span></span>  
  
 <span data-ttu-id="456db-160">A menos que se aniden las solicitudes de caché, es preferible utilizar <xref:System.Windows.Automation.CacheRequest.Activate%2A> para colocar la solicitud en la pila.</span><span class="sxs-lookup"><span data-stu-id="456db-160">Unless you are nesting cache requests, it is preferable to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to place the request on the stack.</span></span> <span data-ttu-id="456db-161">La razón es que puede usar <xref:System.Windows.Automation.CacheRequest.Activate%2A> dentro de un `using` bloque (`Using` en Visual Basic), asegurándose de que la solicitud se extrae de la pila, incluso si se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="456db-161">The reason is that you can use <xref:System.Windows.Automation.CacheRequest.Activate%2A> within a `using` block (`Using` in Visual Basic), ensuring that the request is popped off the stack even if an exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="456db-162">En el ejemplo siguiente se muestra cómo activar un <xref:System.Windows.Automation.CacheRequest> utilizando <xref:System.Windows.Automation.CacheRequest.Push%2A>.</span><span class="sxs-lookup"><span data-stu-id="456db-162">The following example shows how to activate a <xref:System.Windows.Automation.CacheRequest> by using <xref:System.Windows.Automation.CacheRequest.Push%2A>.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.CacheRequest.Pop" />
      </Docs>
    </Member>
    <Member MemberName="TreeFilter">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Condition TreeFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.Condition TreeFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.TreeFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property TreeFilter As Condition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Condition ^ TreeFilter { System::Windows::Automation::Condition ^ get(); void set(System::Windows::Automation::Condition ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Condition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="456db-163">Obtiene o establece un valor que especifica la vista del árbol de elementos de [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] que se utiliza para almacenar en memoria caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="456db-163">Gets or sets a value specifying the view of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree to use when caching.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="456db-164">Vista del árbol de elementos de [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="456db-164">The view of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree.</span>
          </span>
          <span data-ttu-id="456db-165">La vista predeterminada es <see cref="F:System.Windows.Automation.Automation.ControlViewCondition" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="456db-165">The default view is <see cref="F:System.Windows.Automation.Automation.ControlViewCondition" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="456db-166">Para obtener más información sobre las vistas de la [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] árbol de elementos, vea [información general sobre el árbol de automatización de interfaz de usuario](~/docs/framework/ui-automation/ui-automation-tree-overview.md).</span><span class="sxs-lookup"><span data-stu-id="456db-166">For additional information on views of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree, see [UI Automation Tree Overview](~/docs/framework/ui-automation/ui-automation-tree-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="456db-167">En el ejemplo siguiente, <xref:System.Windows.Automation.CacheRequest.TreeFilter%2A> está establecido en <xref:System.Windows.Automation.Automation.RawViewCondition> para que el almacenamiento en caché se realiza para todos los elementos, independientemente de si forman parte de la vista de contenido o la vista de control.</span><span class="sxs-lookup"><span data-stu-id="456db-167">In the following example, <xref:System.Windows.Automation.CacheRequest.TreeFilter%2A> is set to <xref:System.Windows.Automation.Automation.RawViewCondition> so that caching is done for all elements, regardless of whether they are part of the content view or the control view.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.Automation.ContentViewCondition" />
      </Docs>
    </Member>
    <Member MemberName="TreeScope">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.TreeScope TreeScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.TreeScope TreeScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.TreeScope" />
      <MemberSignature Language="VB.NET" Value="Public Property TreeScope As TreeScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::TreeScope TreeScope { System::Windows::Automation::TreeScope get(); void set(System::Windows::Automation::TreeScope value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.TreeScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="456db-168">Obtiene o establece un valor que especifica si el almacenamiento en caché sólo se realiza para la raíz del subárbol o también para sus elementos secundarios o descendientes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="456db-168">Gets or sets a value that specifies whether caching is done only for the root of the subtree, or also for its children or descendants.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="456db-169">Uno o varios de los miembros siguientes: <see cref="F:System.Windows.Automation.TreeScope.Element" />, <see cref="F:System.Windows.Automation.TreeScope.Children" />, <see cref="F:System.Windows.Automation.TreeScope.Descendants" /> o <see cref="F:System.Windows.Automation.TreeScope.Subtree" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="456db-169">One or more of <see cref="F:System.Windows.Automation.TreeScope.Element" />, <see cref="F:System.Windows.Automation.TreeScope.Children" />, <see cref="F:System.Windows.Automation.TreeScope.Descendants" />, or <see cref="F:System.Windows.Automation.TreeScope.Subtree" />.</span>
          </span>
          <span data-ttu-id="456db-170">El valor predeterminado es <see cref="F:System.Windows.Automation.TreeScope.Element" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="456db-170">The default value is <see cref="F:System.Windows.Automation.TreeScope.Element" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="456db-171">El ámbito del almacenamiento en caché está en relación con el objeto u objetos que se capturan, no en relación con el objeto en el que <xref:System.Windows.Automation.AutomationElement.FindFirst%2A> o <xref:System.Windows.Automation.AutomationElement.FindAll%2A> se llama.</span><span class="sxs-lookup"><span data-stu-id="456db-171">The scope of caching is in relation to the object or objects being fetched, not in relation to the object on which <xref:System.Windows.Automation.AutomationElement.FindFirst%2A> or <xref:System.Windows.Automation.AutomationElement.FindAll%2A> is called.</span></span> <span data-ttu-id="456db-172">Vea el ejemplo.</span><span class="sxs-lookup"><span data-stu-id="456db-172">See the example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="456db-173">En el ejemplo siguiente, se obtiene un elemento de cuadro de lista desde el elemento de la ventana principal mientras un <xref:System.Windows.Automation.CacheRequest> está activo y <xref:System.Windows.Automation.CacheRequest.TreeScope%2A> es <xref:System.Windows.Automation.TreeScope.Children>.</span><span class="sxs-lookup"><span data-stu-id="456db-173">In the following example, a list box element is obtained from the parent window element while a <xref:System.Windows.Automation.CacheRequest> is active and <xref:System.Windows.Automation.CacheRequest.TreeScope%2A> is <xref:System.Windows.Automation.TreeScope.Children>.</span></span> <span data-ttu-id="456db-174">Las propiedades especificadas de los elementos secundarios (es decir, los elementos de lista) se almacenan en la memoria caché y se pueden recuperar desde el <xref:System.Windows.Automation.AutomationElement.CachedChildren%2A> del cuadro de lista.</span><span class="sxs-lookup"><span data-stu-id="456db-174">The specified properties of the child elements (that is, the list items) are stored in the cache and can be retrieved from the <xref:System.Windows.Automation.AutomationElement.CachedChildren%2A> of the list box.</span></span>  
  
 [!code-csharp[UIAClient_snip#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient_snip#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="456db-175">Se ha intentado establecer la propiedad en <see cref="F:System.Windows.Automation.TreeScope.Parent" /> o <see cref="F:System.Windows.Automation.TreeScope.Ancestors" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="456db-175">An attempt was made to set the property to <see cref="F:System.Windows.Automation.TreeScope.Parent" /> or <see cref="F:System.Windows.Automation.TreeScope.Ancestors" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>