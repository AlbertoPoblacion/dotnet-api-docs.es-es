<Type Name="AutomationEventArgs" FullName="System.Windows.Automation.AutomationEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f8bfb894fe52c224e55f7d02f6379ca5ad2359a4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30617879" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AutomationEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AutomationEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.AutomationEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class AutomationEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class AutomationEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationTypes</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona datos para eventos de automatización de la interfaz de usuario que se pasan a un delegado <see cref="T:System.Windows.Automation.AutomationEventHandler" />.</summary>
    <remarks>To be added.</remarks>
    <altmember cref="M:System.Windows.Automation.Automation.AddAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationEventHandler)" />
    <altmember cref="M:System.Windows.Automation.Automation.RemoveAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationEventHandler)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AutomationEventArgs (System.Windows.Automation.AutomationEvent eventId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Automation.AutomationEvent eventId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationEventArgs.#ctor(System.Windows.Automation.AutomationEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventId As AutomationEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AutomationEventArgs(System::Windows::Automation::AutomationEvent ^ eventId);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventId" Type="System.Windows.Automation.AutomationEvent" />
      </Parameters>
      <Docs>
        <param name="eventId">Identificador de evento.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Automation.AutomationEventArgs" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El código siguiente muestra cómo puede crear un proveedor de automatización de interfaz de usuario una <xref:System.Windows.Automation.AutomationEventArgs> y genere el evento.  
  
 [!code-csharp[UIAFragmentProvider_snip#122](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListFragment.cs#122)]
 [!code-vb[UIAFragmentProvider_snip#122](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListFragment.vb#122)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventId">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationEvent EventId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.AutomationEvent EventId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationEventArgs.EventId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventId As AutomationEvent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationEvent ^ EventId { System::Windows::Automation::AutomationEvent ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el identificador de evento.</summary>
        <value>Identificador de evento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un cliente ha agregado controladores de eventos para más de un evento con el mismo <xref:System.Windows.Automation.AutomationEventHandler> instancia, <xref:System.Windows.Automation.AutomationEventArgs.EventId%2A> puede utilizarse para identificar el evento que el delegado debe procesar.  
  
   
  
## Examples  
 En el ejemplo siguiente, el controlador de eventos comprueba el <xref:System.Windows.Automation.AutomationEventArgs.EventId%2A> del evento y controla el evento en consecuencia.  
  
 [!code-csharp[UIAClient_snip#173](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#173)]
 [!code-vb[UIAClient_snip#173](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#173)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>