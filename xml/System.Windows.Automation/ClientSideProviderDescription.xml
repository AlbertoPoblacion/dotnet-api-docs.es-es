<Type Name="ClientSideProviderDescription" FullName="System.Windows.Automation.ClientSideProviderDescription">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b9298293bed87b204f827b7ce19c1275b88fb16" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39751256" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct ClientSideProviderDescription" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ClientSideProviderDescription extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.ClientSideProviderDescription" />
  <TypeSignature Language="VB.NET" Value="Public Structure ClientSideProviderDescription" />
  <TypeSignature Language="C++ CLI" Value="public value class ClientSideProviderDescription" />
  <TypeSignature Language="F#" Value="type ClientSideProviderDescription = struct" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7b070-101">Describe el ámbito de un proveedor de Automatización de la interfaz de usuario en el cliente para que se pueda registrar con la aplicación cliente Automatización de la interfaz de usuario.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7b070-101">Describes the scope of a client-side UI Automation provider so that it can be registered with the UI Automation client application.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7b070-102">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Automation.ClientSideProviderDescription" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b070-102">Initializes a new instance of the <see cref="T:System.Windows.Automation.ClientSideProviderDescription" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientSideProviderDescription (System.Windows.Automation.ClientSideProviderFactoryCallback clientSideProviderFactoryCallback, string className);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Automation.ClientSideProviderFactoryCallback clientSideProviderFactoryCallback, string className) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.ClientSideProviderDescription.#ctor(System.Windows.Automation.ClientSideProviderFactoryCallback,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientSideProviderDescription(System::Windows::Automation::ClientSideProviderFactoryCallback ^ clientSideProviderFactoryCallback, System::String ^ className);" />
      <MemberSignature Language="F#" Value="new System.Windows.Automation.ClientSideProviderDescription : System.Windows.Automation.ClientSideProviderFactoryCallback * string -&gt; System.Windows.Automation.ClientSideProviderDescription" Usage="new System.Windows.Automation.ClientSideProviderDescription (clientSideProviderFactoryCallback, className)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clientSideProviderFactoryCallback" Type="System.Windows.Automation.ClientSideProviderFactoryCallback" />
        <Parameter Name="className" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientSideProviderFactoryCallback">
          <span data-ttu-id="7b070-103">Método que crea el proveedor de cliente para una ventana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b070-103">The method that creates the client-side provider for a window.</span>
          </span>
        </param>
        <param name="className">
          <span data-ttu-id="7b070-104">Nombre de clase de las ventanas para las que se utiliza el proveedor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b070-104">The class name of the windows that the provider is used for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b070-105">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Automation.ClientSideProviderDescription" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b070-105">Initializes a new instance of the <see cref="T:System.Windows.Automation.ClientSideProviderDescription" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b070-106">Cuando la automatización de interfaz de usuario encuentra una ventana de la clase `className`, llama a `clientSideProviderFactoryCallback` para crear una instancia del proveedor del lado cliente.</span><span class="sxs-lookup"><span data-stu-id="7b070-106">When UI Automation encounters a window of class `className`, it calls `clientSideProviderFactoryCallback` to create an instance of the client-side provider.</span></span>  
  
 <span data-ttu-id="7b070-107">Si `className` es `null`, el proveedor se utiliza para todas las ventanas para que no se encuentra ningún otro proveedor.</span><span class="sxs-lookup"><span data-stu-id="7b070-107">If `className` is `null`, the provider is used for all windows for which no other provider is found.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b070-108">Por ejemplo de código, consulte [crear un proveedor de automatización de interfaz de usuario del lado cliente](~/docs/framework/ui-automation/create-a-client-side-ui-automation-provider.md).</span><span class="sxs-lookup"><span data-stu-id="7b070-108">For example code, see [Create a Client-Side UI Automation Provider](~/docs/framework/ui-automation/create-a-client-side-ui-automation-provider.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientSideProviderDescription (System.Windows.Automation.ClientSideProviderFactoryCallback clientSideProviderFactoryCallback, string className, string imageName, System.Windows.Automation.ClientSideProviderMatchIndicator flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Automation.ClientSideProviderFactoryCallback clientSideProviderFactoryCallback, string className, string imageName, valuetype System.Windows.Automation.ClientSideProviderMatchIndicator flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.ClientSideProviderDescription.#ctor(System.Windows.Automation.ClientSideProviderFactoryCallback,System.String,System.String,System.Windows.Automation.ClientSideProviderMatchIndicator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientSideProviderDescription(System::Windows::Automation::ClientSideProviderFactoryCallback ^ clientSideProviderFactoryCallback, System::String ^ className, System::String ^ imageName, System::Windows::Automation::ClientSideProviderMatchIndicator flags);" />
      <MemberSignature Language="F#" Value="new System.Windows.Automation.ClientSideProviderDescription : System.Windows.Automation.ClientSideProviderFactoryCallback * string * string * System.Windows.Automation.ClientSideProviderMatchIndicator -&gt; System.Windows.Automation.ClientSideProviderDescription" Usage="new System.Windows.Automation.ClientSideProviderDescription (clientSideProviderFactoryCallback, className, imageName, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clientSideProviderFactoryCallback" Type="System.Windows.Automation.ClientSideProviderFactoryCallback" />
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="imageName" Type="System.String" />
        <Parameter Name="flags" Type="System.Windows.Automation.ClientSideProviderMatchIndicator" />
      </Parameters>
      <Docs>
        <param name="clientSideProviderFactoryCallback">
          <span data-ttu-id="7b070-109">Método que crea el proveedor de cliente para una ventana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b070-109">The method that creates the client-side provider for a window.</span>
          </span>
        </param>
        <param name="className">
          <span data-ttu-id="7b070-110">Nombre de clase de la ventana para la que se utiliza el proveedor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b070-110">The class name of the window that the provider is used for.</span>
          </span>
        </param>
        <param name="imageName">
          <span data-ttu-id="7b070-111">Nombre de la aplicación ejecutable o DLL para el proceso en el que reside la ventana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b070-111">The name of the executable or DLL for the process where the window resides.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="7b070-112">Marcadores que especifican el comportamiento al comparar nombres de clase de ventana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b070-112">Flags that specify behavior when matching window class names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b070-113">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Automation.ClientSideProviderDescription" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b070-113">Initializes a new instance of the <see cref="T:System.Windows.Automation.ClientSideProviderDescription" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b070-114">Cuando [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] encuentra una ventana de la clase `className` dentro del proceso especificado por `imageName`, llama a `clientSideProviderFactoryCallback` para crear una instancia del proveedor del lado cliente.</span><span class="sxs-lookup"><span data-stu-id="7b070-114">When [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] encounters a window of class `className` within the process specified by `imageName`, it calls `clientSideProviderFactoryCallback` to create an instance of the client-side provider.</span></span>  
  
 <span data-ttu-id="7b070-115">Si `className` es `null`, el proveedor se utiliza para todas las ventanas para que no se encuentra ningún otro proveedor.</span><span class="sxs-lookup"><span data-stu-id="7b070-115">If `className` is `null`, the provider is used for all windows for which no other provider is found.</span></span>  
  
 <span data-ttu-id="7b070-116">Si `imageName` es `null`, se utiliza el proveedor para todos los procesos que contiene la clase de ventana.</span><span class="sxs-lookup"><span data-stu-id="7b070-116">If `imageName` is `null`, the provider is used for all processes containing the window class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassName">
      <MemberSignature Language="C#" Value="public string ClassName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClassName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.ClientSideProviderDescription.ClassName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClassName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClassName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClassName : string" Usage="System.Windows.Automation.ClientSideProviderDescription.ClassName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7b070-117">Obtiene el nombre de clase de las ventanas para las que se utiliza el proveedor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b070-117">Gets the class name of the windows that the provider is used for.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b070-118">Nombre de clase de la ventana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b070-118">The window class name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b070-119">Si <xref:System.Windows.Automation.ClientSideProviderDescription.ClassName%2A> es `null`, se llama al proveedor para todas las ventanas para que no se encuentra ningún otro proveedor.</span><span class="sxs-lookup"><span data-stu-id="7b070-119">If <xref:System.Windows.Automation.ClientSideProviderDescription.ClassName%2A> is `null`, the provider is called for all windows for which no other provider is found.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientSideProviderFactoryCallback">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.ClientSideProviderFactoryCallback ClientSideProviderFactoryCallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.ClientSideProviderFactoryCallback ClientSideProviderFactoryCallback" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.ClientSideProviderDescription.ClientSideProviderFactoryCallback" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientSideProviderFactoryCallback As ClientSideProviderFactoryCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::ClientSideProviderFactoryCallback ^ ClientSideProviderFactoryCallback { System::Windows::Automation::ClientSideProviderFactoryCallback ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientSideProviderFactoryCallback : System.Windows.Automation.ClientSideProviderFactoryCallback" Usage="System.Windows.Automation.ClientSideProviderDescription.ClientSideProviderFactoryCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ClientSideProviderFactoryCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7b070-120">Obtiene el método que crea el proveedor de cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b070-120">Gets the method that creates the client-side provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b070-121">Método de devolución de llamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b070-121">The callback method.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.ClientSideProviderMatchIndicator Flags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.ClientSideProviderMatchIndicator Flags" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.ClientSideProviderDescription.Flags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Flags As ClientSideProviderMatchIndicator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::ClientSideProviderMatchIndicator Flags { System::Windows::Automation::ClientSideProviderMatchIndicator get(); };" />
      <MemberSignature Language="F#" Value="member this.Flags : System.Windows.Automation.ClientSideProviderMatchIndicator" Usage="System.Windows.Automation.ClientSideProviderDescription.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ClientSideProviderMatchIndicator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7b070-122">Obtiene los marcadores que especifican el comportamiento al comparar nombres de clase de ventana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b070-122">Gets the flags that specify behavior when matching window class names.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b070-123">Combinación bit a bit de valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b070-123">A bitwise combination of values.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageName">
      <MemberSignature Language="C#" Value="public string ImageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.ClientSideProviderDescription.ImageName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImageName : string" Usage="System.Windows.Automation.ClientSideProviderDescription.ImageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7b070-124">Obtiene el nombre del archivo ejecutable o [!INCLUDE[TLA#tla_dll](~/includes/tlasharptla-dll-md.md)] para el proceso en el que la ventana reside.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b070-124">Gets the name of the executable or [!INCLUDE[TLA#tla_dll](~/includes/tlasharptla-dll-md.md)] for the process where the window resides.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b070-125">Nombre de imagen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b070-125">The image name.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>