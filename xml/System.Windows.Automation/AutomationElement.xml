<Type Name="AutomationElement" FullName="System.Windows.Automation.AutomationElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aa3164dbf684e77693c4a1676812479a9cefcf9e" />
    <Meta Name="ms.sourcegitcommit" Value="058bfa0b75b777d3171411d35da8f11617fc06b0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="05/04/2018" />
    <Meta Name="ms.locfileid" Value="33659304" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AutomationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AutomationElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.AutomationElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AutomationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class AutomationElement sealed" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa un elemento de automatización de la interfaz de usuario en el árbol de automatización de la interfaz de usuario y contiene valores que las aplicaciones cliente de automatización de la interfaz de usuario usan como identificadores.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Automation.AutomationElement> corresponde a una parte de [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], independientemente de la implementación subyacente (como [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] o [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AcceleratorKeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty AcceleratorKeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty AcceleratorKeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceleratorKeyProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ AcceleratorKeyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Esta propiedad también se puede recuperar desde el <xref:System.Windows.Automation.AutomationElement.Current%2A> o <xref:System.Windows.Automation.AutomationElement.Cached%2A> propiedades.  
  
 Combinaciones de teclas de aceleración invocan una acción. Por ejemplo, CTRL+O se utiliza a menudo para invocar el **abiertos** cuadro de diálogo común de archivo. Un <xref:System.Windows.Automation.AutomationElement> que la propiedad de clave de acelerador estableció siempre implementa la <xref:System.Windows.Automation.InvokePattern> clase.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.String>. El valor predeterminado de la propiedad es una cadena vacía.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la propiedad. Si el elemento no proporciona ninguno, se devuelve el valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#124](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#124)]
 [!code-vb[UIAClient_snip#124](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#124)]  
  
 En el ejemplo siguiente se recupera el valor actual de la propiedad, pero especifica que, si el propio elemento no proporciona un valor para la propiedad <xref:System.Windows.Automation.AutomationElement.NotSupported> se devuelve en lugar de un valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#125](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#125)]
 [!code-vb[UIAClient_snip#125](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#125)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessKeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty AccessKeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty AccessKeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AccessKeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AccessKeyProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ AccessKeyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Esta propiedad también se puede recuperar desde el <xref:System.Windows.Automation.AutomationElement.Current%2A> o <xref:System.Windows.Automation.AutomationElement.Cached%2A> propiedades.  
  
 Una tecla de acceso es un carácter en el texto de un menú, el elemento de menú o la etiqueta de un control como un botón que activa la función de menú asociada. Por ejemplo, la letra "O" se utiliza a menudo para invocar el **abrir archivo** cuadro de diálogo común de un **archivo** menú.  
  
 Los valores de clave de acceso son de tipo <xref:System.String> y contienen el carácter registrado como tecla de acceso para el elemento. El valor predeterminado de la cadena es una cadena vacía.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la propiedad. Si el elemento no proporciona ninguno, se devuelve el valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#127](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#127)]
 [!code-vb[UIAClient_snip#127](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#127)]  
  
 En el ejemplo siguiente se recupera el valor actual de la propiedad, pero especifica que, si el propio elemento no proporciona un valor para la propiedad <xref:System.Windows.Automation.AutomationElement.NotSupported> se devuelve en lugar de un valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#128](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#128)]
 [!code-vb[UIAClient_snip#128](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#128)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncContentLoadedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent AsyncContentLoadedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent AsyncContentLoadedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AsyncContentLoadedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ AsyncContentLoadedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica un evento provocado durante la carga de contenido asincrónica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Este evento se usa principalmente por los proveedores para indicar que se han producido eventos de carga de contenido asincrónicos.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AsyncContentLoadedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="AutomationFocusChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent AutomationFocusChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent AutomationFocusChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutomationFocusChangedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ AutomationFocusChangedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica un evento que se genera cuando el foco cambia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationFocusChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="AutomationIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty AutomationIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty AutomationIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AutomationIdProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutomationIdProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ AutomationIdProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId" />, que se usa para identificar los elementos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Esta propiedad también se puede recuperar desde el <xref:System.Windows.Automation.AutomationElement.Current%2A> o <xref:System.Windows.Automation.AutomationElement.Cached%2A> propiedades.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.String>. El valor predeterminado de la propiedad es una cadena vacía.  
  
 Cuando está disponible el <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty> de un elemento que se espera que siempre sea el mismo en cualquier instancia de la aplicación sin tener en cuenta el idioma local. El valor debe ser único entre elementos del mismo nivel, pero no es necesariamente único en todo el escritorio. Por ejemplo, varias instancias de una aplicación o varias vistas de carpeta en el Explorador de Windows de Microsoft, pueden contener elementos con el mismo <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty>, por ejemplo, "SystemMenuBar".  
  
 Aunque la compatibilidad de un <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> siempre se recomienda para una mejor capacidad de prueba, esta propiedad no es obligatoria. Donde se admite, un <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> es útil para crear la automatización de prueba de las secuencias de comandos que se ejecuta independientemente del idioma de interfaz de usuario. Los clientes deberían hacer ninguna suposición sobre el <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>s expuestos por otras aplicaciones. Un <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> compilaciones de una aplicación o no es necesariamente garantiza que sea estable entre versiones diferentes.  
  
 Instancias de [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementos se identifican en el escritorio por sus <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> propiedades.  
  
> [!NOTE]
>  Todos los elementos de UI Automation admiten <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty> en la vista de control con la excepción de las ventanas de aplicación de nivel superior, los elementos de Automation de la interfaz de usuario derivados de controles [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] que no tienen un identificador o un elemento x:Uid, y los elementos de UI Automation derivados de controles [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] que no tienen un identificador de control.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la propiedad. Si el elemento no proporciona ninguno, se devuelve el valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#129](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#129)]
 [!code-vb[UIAClient_snip#129](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#129)]  
  
 En el ejemplo siguiente se recupera el valor actual de la propiedad, pero especifica que, si el propio elemento no proporciona un valor para la propiedad <xref:System.Windows.Automation.AutomationElement.NotSupported> se devuelve en lugar de un valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#130](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#130)]
 [!code-vb[UIAClient_snip#130](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#130)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.AutomationElement.RuntimeIdProperty" />
      </Docs>
    </Member>
    <Member MemberName="AutomationPropertyChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent AutomationPropertyChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent AutomationPropertyChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutomationPropertyChangedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ AutomationPropertyChangedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica un evento cambiado por propiedad.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationPropertyChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="BoundingRectangleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty BoundingRectangleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty BoundingRectangleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.BoundingRectangleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BoundingRectangleProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ BoundingRectangleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Esta propiedad también se puede recuperar desde el <xref:System.Windows.Automation.AutomationElement.Current%2A> o <xref:System.Windows.Automation.AutomationElement.Cached%2A> propiedades.  
  
 Los rectángulos delimitadores son de tipo <xref:System.Windows.Rect>. El rectángulo devuelto está en coordenadas físicas de la pantalla. El valor predeterminado es <xref:System.Windows.Rect.Empty%2A>. <xref:System.Windows.Rect.Empty%2A> se devuelve si el elemento no está mostrando un [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].  
  
 El rectángulo devuelto puede contener puntos que no son seleccionables. Incluyen los casos donde esto puede ocurrir cuando la [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elemento tiene una forma irregular o un área seleccionable o está oculto por otro [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elementos.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la propiedad. Si el elemento no proporciona ninguno, se devuelve el valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#131](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#131)]
 [!code-vb[UIAClient_snip#131](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#131)]  
  
 En el ejemplo siguiente se recupera el valor actual de la propiedad, pero especifica que, si el propio elemento no proporciona un valor para la propiedad <xref:System.Windows.Automation.AutomationElement.NotSupported> se devuelve en lugar de un valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#132](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#132)]
 [!code-vb[UIAClient_snip#132](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#132)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cached">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement.AutomationElementInformation Cached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.AutomationElement/AutomationElementInformation Cached" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.Cached" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cached As AutomationElement.AutomationElementInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElement::AutomationElementInformation Cached { System::Windows::Automation::AutomationElement::AutomationElementInformation get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement+AutomationElementInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene los valores de propiedad de [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] almacenados en memoria caché para este objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <value>Estructura que contiene los valores de propiedades almacenados en caché para <see cref="T:System.Windows.Automation.AutomationElement" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los descriptores de acceso para [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] propiedades se representan como propiedades de la estructura devuelta por <xref:System.Windows.Automation.AutomationElement.Cached%2A>. No es necesario recuperar la estructura; puede tener acceso a sus miembros directamente, como se muestra en el ejemplo siguiente. Para obtener información específica sobre las propiedades disponibles y su uso, consulte <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>.  
  
 Para obtener el valor actual de [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] propiedades en este elemento, utilice la <xref:System.Windows.Automation.AutomationElement.Current%2A> propiedad.  
  
   
  
## Examples  
 El siguiente ejemplo se muestra cómo el <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> propiedad puede se almacenan en caché y, a continuación, recuperar mediante el <xref:System.Windows.Automation.AutomationElement.Cached%2A> propiedad.  
  
 [!code-csharp[UIAClient_snip#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient_snip#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No hay ninguna propiedad almacenada en memoria caché.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">La interfaz de usuario para el <see cref="T:System.Windows.Automation.AutomationElement" /> ya no existe.</exception>
      </Docs>
    </Member>
    <Member MemberName="CachedChildren">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElementCollection CachedChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.AutomationElementCollection CachedChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.CachedChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CachedChildren As AutomationElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElementCollection ^ CachedChildren { System::Windows::Automation::AutomationElementCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene los elementos secundarios almacenados en memoria caché de <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <value>Colección de elementos secundarios. Esta colección puede estar vacía si el elemento no tiene ningún elemento secundario.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La vista de la colección devuelta está determinada por la <xref:System.Windows.Automation.CacheRequest.TreeFilter%2A> condición de la <xref:System.Windows.Automation.CacheRequest> que estaba activo cuando esto <xref:System.Windows.Automation.AutomationElement> se obtuvo el objeto.  
  
 Los elementos secundarios se almacenan en caché solo si el ámbito de la <xref:System.Windows.Automation.CacheRequest> incluyen <xref:System.Windows.Automation.TreeScope.Subtree>, <xref:System.Windows.Automation.TreeScope.Children>, o <xref:System.Windows.Automation.TreeScope.Descendants>.  
  
 Si el <xref:System.Windows.Automation.CacheRequest> especifica que los elementos secundarios tenían en la memoria caché en este nivel, pero no hay ningún elemento secundario, entonces el valor de esta propiedad es 0. Sin embargo, si no hay ninguna solicitud se realizó con elementos secundarios de la memoria caché en este nivel, intentar recuperar la propiedad produce una excepción.  
  
   
  
## Examples  
 En el ejemplo siguiente, se obtiene un elemento de cuadro de lista desde el elemento de la ventana principal mientras un <xref:System.Windows.Automation.CacheRequest> está activo y <xref:System.Windows.Automation.CacheRequest.TreeScope%2A> es <xref:System.Windows.Automation.TreeScope.Children>. Las propiedades especificadas de los elementos secundarios (es decir, los elementos de lista) se almacenan en la memoria caché y se pueden recuperar desde el <xref:System.Windows.Automation.AutomationElement.CachedChildren%2A> del cuadro de lista.  
  
 [!code-csharp[UIAClient_snip#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient_snip#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">La interfaz de usuario para el <see cref="T:System.Windows.Automation.AutomationElement" /> ya no existe.</exception>
        <exception cref="T:System.InvalidOperationException">No se realizó ninguna solicitud de almacenar los elementos secundarios de este elemento en memoria caché.</exception>
      </Docs>
    </Member>
    <Member MemberName="CachedParent">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement CachedParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.AutomationElement CachedParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.CachedParent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CachedParent As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElement ^ CachedParent { System::Windows::Automation::AutomationElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el elemento primario almacenado en memoria caché de <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <value>Elemento primario. El valor devuelto puede ser <see langword="null" /> si el elemento especificado tiene ningún primario; por ejemplo, si este elemento es el nodo raíz.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente, la <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> propiedades de un cuadro de lista y sus elementos de lista se almacenan en caché. El elemento de cuadro de lista está disponible en la <xref:System.Windows.Automation.AutomationElement.CachedParent%2A> propiedad de cada elemento de lista.  
  
 [!code-csharp[UIAClient_snip#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient_snip#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No hay ningún elemento primario almacenado en memoria caché.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">La interfaz de usuario para el <see cref="T:System.Windows.Automation.AutomationElement" /> ya no existe.</exception>
      </Docs>
    </Member>
    <Member MemberName="ClassNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ClassNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ClassNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ClassNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClassNameProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ClassNameProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Esta propiedad también se puede recuperar desde el <xref:System.Windows.Automation.AutomationElement.Current%2A> o <xref:System.Windows.Automation.AutomationElement.Cached%2A> propiedades.  
  
 El nombre de clase depende de la implementación del proveedor de automatización de la interfaz de usuario y, por tanto, no se puede esperar que para estar en un formato estándar. Sin embargo, si conoce el nombre de clase puede usarlo para comprobar que la aplicación funciona con el esperado [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elemento.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.String>. El valor predeterminado es una cadena vacía.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la propiedad. Si el elemento no proporciona ninguno, se devuelve el valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#133](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#133)]
 [!code-vb[UIAClient_snip#133](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#133)]  
  
 En el ejemplo siguiente se recupera el valor actual de la propiedad, pero especifica que, si el propio elemento no proporciona un valor para la propiedad <xref:System.Windows.Automation.AutomationElement.NotSupported> se devuelve en lugar de un valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#134](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#134)]
 [!code-vb[UIAClient_snip#134](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#134)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickablePointProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ClickablePointProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ClickablePointProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ClickablePointProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClickablePointProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ClickablePointProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad del punto seleccionable.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Un <xref:System.Windows.Automation.AutomationElement> no es seleccionable si completamente está oculto por otra ventana.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Windows.Point>. El valor predeterminado es `null`.  
  
 El valor devuelto está en coordenadas físicas de la pantalla.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la propiedad.  
  
 [!code-csharp[UIAClient_snip#135](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#135)]
 [!code-vb[UIAClient_snip#135](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#135)]  
  
 En el ejemplo siguiente se recupera el valor actual de la propiedad, pero especifica que, si el propio elemento no proporciona un valor para la propiedad <xref:System.Windows.Automation.AutomationElement.NotSupported> se devuelve en lugar de un valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#166](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#166)]
 [!code-vb[UIAClient_snip#166](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#166)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetClickablePoint" />
      </Docs>
    </Member>
    <Member MemberName="ControlTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ControlTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ControlTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ControlTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ControlTypeProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ControlTypeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Esta propiedad también se puede recuperar desde el <xref:System.Windows.Automation.AutomationElement.Current%2A> o <xref:System.Windows.Automation.AutomationElement.Cached%2A> propiedades.  
  
 Es el valor predeterminado de la propiedad <xref:System.Windows.Automation.ControlType.Custom>  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la propiedad. Si el elemento no proporciona ninguno, se devuelve el valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#136](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#136)]
 [!code-vb[UIAClient_snip#136](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#136)]  
  
 En el ejemplo siguiente se recupera el valor actual de la propiedad, pero especifica que, si el propio elemento no proporciona un valor para la propiedad <xref:System.Windows.Automation.AutomationElement.NotSupported> se devuelve en lugar de un valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#137](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#137)]
 [!code-vb[UIAClient_snip#137](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#137)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CultureProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty CultureProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty CultureProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.CultureProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CultureProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ CultureProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de referencia cultural.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 En el marco de trabajo de Windows Presentation Foundation (WPF), el valor predeterminado que se notifican siempre será `en-US` dado que .NET Framework está predeterminada automáticamente en inglés. Para otros marcos de interfaz de usuario, esta propiedad debe establecerse explícitamente o no se expondrá.  
  
 Esta propiedad puede existir en una base por cada control, pero normalmente solo está disponible en un nivel de aplicación.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Globalization.CultureInfo>.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la propiedad.  
  
 [!code-csharp[UIAClient_snip#138](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#138)]
 [!code-vb[UIAClient_snip#138](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#138)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement.AutomationElementInformation Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.AutomationElement/AutomationElementInformation Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As AutomationElement.AutomationElementInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElement::AutomationElementInformation Current { System::Windows::Automation::AutomationElement::AutomationElementInformation get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement+AutomationElementInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene los valores de propiedad actuales de <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <value>Estructura que contiene los valores de propiedad actuales.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los descriptores de acceso para [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] propiedades se representan como propiedades de la estructura devuelta por <xref:System.Windows.Automation.AutomationElement.Current%2A>. No es necesario recuperar la estructura; puede tener acceso a sus miembros directamente, como se muestra en el ejemplo siguiente. Para obtener información específica sobre las propiedades disponibles y su uso, consulte <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>.  
  
 Para obtener el valor almacenado en caché de [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] propiedades en este elemento, utilice la <xref:System.Windows.Automation.AutomationElement.Cached%2A> propiedad.  
  
   
  
## Examples  
 El siguiente ejemplo se muestra cómo el <xref:System.Windows.Automation.AutomationElement.Current%2A> propiedad se utiliza para recuperar el nombre de un elemento que se ha seleccionado en una lista.  
  
 [!code-csharp[UIAClient_snip#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#106)]
 [!code-vb[UIAClient_snip#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#106)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">La interfaz de usuario para el <see cref="T:System.Windows.Automation.AutomationElement" /> ya no existe.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <see cref="T:System.Windows.Automation.AutomationElement" /> que se va a comparar.</param>
        <summary>Determina si el objeto <see cref="T:System.Windows.Automation.AutomationElement" /> especificado tiene el mismo valor que este objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <returns>
          <see langword="true" /> si el objeto <see cref="T:System.Windows.Automation.AutomationElement" /> especificado es igual que este objeto <see cref="T:System.Windows.Automation.AutomationElement" />; en caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dos elementos que se consideran iguales pueden contener información almacenada en caché diferentes en distintos puntos en el tiempo. La comprobación de igualdad solo comprueba que el <xref:System.Windows.Automation.AutomationElement> objetos hacen referencia al mismo elemento de interfaz de usuario subyacente; es decir, que tienen el mismo identificador de tiempo de ejecución.  
  
 Este método es equivalente al operador de igualdad, que también compara los identificadores en tiempo de ejecución.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
        <altmember cref="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AutomationElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AutomationElement ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Permite que un objeto intente liberar recursos y realizar otras operaciones de limpieza antes de que sea reclamado por la recolección de elementos no utilizados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElementCollection FindAll (System.Windows.Automation.TreeScope scope, System.Windows.Automation.Condition condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElementCollection FindAll(valuetype System.Windows.Automation.TreeScope scope, class System.Windows.Automation.Condition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElementCollection ^ FindAll(System::Windows::Automation::TreeScope scope, System::Windows::Automation::Condition ^ condition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElementCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Windows.Automation.TreeScope" />
        <Parameter Name="condition" Type="System.Windows.Automation.Condition" />
      </Parameters>
      <Docs>
        <param name="scope">Combinación bit a bit de valores que especifica el ámbito de la búsqueda.</param>
        <param name="condition">Objeto que contiene los criterios que deben coincidir.</param>
        <summary>Devuelve todos los objetos <see cref="T:System.Windows.Automation.AutomationElement" /> que satisfacen la condición especificada.</summary>
        <returns>Colección de objetos que satisface la condición especificada. Si no existe ninguna coincidencia, se devuelve una colección vacía.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El ámbito de la búsqueda es relativo al elemento en el que se llama al método. Los elementos se devuelven en el orden en el que se han encontrado en el árbol.  
  
 Al buscar ventanas de nivel superior en el escritorio, no olvide especificar <xref:System.Windows.Automation.TreeScope.Children> en `scope`, no <xref:System.Windows.Automation.TreeScope.Descendants>. Una búsqueda en todo el subárbol del escritorio podría recorrer en iteración miles de elementos y provocar un desbordamiento de pila.  
  
 Si la aplicación cliente puede intentar buscar elementos en su propia interfaz de usuario, debe realizar todos los [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] llama en un subproceso independiente.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar <xref:System.Windows.Automation.AutomationElement.FindAll%2A> para localizar todos habilita botones en una ventana.  
  
 [!code-csharp[UIAClient_snip#116](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#116)]
 [!code-vb[UIAClient_snip#116](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#116)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
      </Docs>
    </Member>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement FindFirst (System.Windows.Automation.TreeScope scope, System.Windows.Automation.Condition condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement FindFirst(valuetype System.Windows.Automation.TreeScope scope, class System.Windows.Automation.Condition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ FindFirst(System::Windows::Automation::TreeScope scope, System::Windows::Automation::Condition ^ condition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Windows.Automation.TreeScope" />
        <Parameter Name="condition" Type="System.Windows.Automation.Condition" />
      </Parameters>
      <Docs>
        <param name="scope">Combinación bit a bit de valores que especifica el ámbito de la búsqueda.</param>
        <param name="condition">Objeto que contiene los criterios que deben coincidir.</param>
        <summary>Devuelve el primer elemento secundario o el elemento descendiente que coincide con la condición especificada.</summary>
        <returns>Primer elemento que satisface la condición o <see langword="null" /> si no se busca ninguna coincidencia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El ámbito de la búsqueda es relativo al elemento en el que se llama al método.  
  
 Cuando se busca una ventana de nivel superior en el escritorio, no olvide especificar <xref:System.Windows.Automation.TreeScope.Children> en `scope`, no <xref:System.Windows.Automation.TreeScope.Descendants>. Una búsqueda en todo el subárbol del escritorio podría recorrer en iteración miles de elementos y provocar un desbordamiento de pila.  
  
 Si la aplicación cliente puede intentar buscar elementos en su propia interfaz de usuario, debe realizar todos los [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] llama en un subproceso independiente.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo buscar una ventana secundaria desde su identificador.  
  
 [!code-csharp[UIAClient_snip#110](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#110)]
 [!code-vb[UIAClient_snip#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#110)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FocusedElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Automation.AutomationElement FocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FocusedElement As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Automation::AutomationElement ^ FocusedElement { System::Windows::Automation::AutomationElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Windows.Automation.AutomationElement" /> que actualmente tiene el foco.</summary>
        <value>Elemento [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] que tiene el foco.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la aplicación cliente puede intentar buscar elementos en su propia interfaz de usuario, debe realizar todos los [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] llama en un subproceso independiente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FrameworkIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty FrameworkIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty FrameworkIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.FrameworkIdProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FrameworkIdProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ FrameworkIdProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.String>. El valor predeterminado es una cadena vacía.  
  
 Esta propiedad permite que las aplicaciones para casos especiales se aplican a los marcos de interfaz de usuario completas. Ejemplos de valores de propiedad son "Win32", "WinForm" y "DirectUI".  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la propiedad.  
  
 [!code-csharp[UIAClient_snip#139](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#139)]
 [!code-vb[UIAClient_snip#139](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#139)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FromHandle (IntPtr hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Automation.AutomationElement FromHandle(native int hwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (hwnd As IntPtr) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Automation::AutomationElement ^ FromHandle(IntPtr hwnd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwnd">Identificador del elemento de [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</param>
        <summary>Recupera un nuevo objeto <see cref="T:System.Windows.Automation.AutomationElement" /> para el elemento de [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] al que hace referencia el identificador de ventana especificado.</summary>
        <returns>
          <see cref="T:System.Windows.Automation.AutomationElement" /> para el elemento de [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] identificado por <paramref name="hwnd" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="FromLocalProvider">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FromLocalProvider (System.Windows.Automation.Provider.IRawElementProviderSimple localImpl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Automation.AutomationElement FromLocalProvider(class System.Windows.Automation.Provider.IRawElementProviderSimple localImpl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FromLocalProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromLocalProvider (localImpl As IRawElementProviderSimple) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Automation::AutomationElement ^ FromLocalProvider(System::Windows::Automation::Provider::IRawElementProviderSimple ^ localImpl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localImpl" Type="System.Windows.Automation.Provider.IRawElementProviderSimple" />
      </Parameters>
      <Docs>
        <param name="localImpl">Objeto del proveedor.</param>
        <summary>Recupera un nuevo objeto <see cref="T:System.Windows.Automation.AutomationElement" /> de una implementación <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /> local.</summary>
        <returns>
          <see cref="T:System.Windows.Automation.AutomationElement" /> que representa el elemento proporcionado por el objeto del proveedor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método podría utilizarse una biblioteca de aplicación auxiliar de cliente para habilitar sus llamadores a tener acceso a su propio tipo de elemento nativo. Por ejemplo, [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] utiliza internamente este método para que pueda devolver un <xref:System.Windows.Automation.AutomationElement> a los clientes que desean recibir una [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elemento directamente desde un <xref:System.Windows.UIElement>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPoint">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FromPoint (System.Windows.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Automation.AutomationElement FromPoint(valuetype System.Windows.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromPoint (pt As Point) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Automation::AutomationElement ^ FromPoint(System::Windows::Point pt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="pt">Coordenadas físicas de la pantalla en el escritorio en las que se debe buscar el elemento de [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</param>
        <summary>Recupera un nuevo objeto <see cref="T:System.Windows.Automation.AutomationElement" /> para el elemento de [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] en el punto especificado en el escritorio.</summary>
        <returns>Elemento de [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] en el punto especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.FromPoint%2A> Devuelve el elemento en el árbol lógico que está más próximo al elemento raíz.  
  
 Si la aplicación cliente puede intentar buscar elementos en su propia interfaz de usuario, debe realizar todos los [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] llama en un subproceso independiente.  
  
 Aunque el punto está dentro del rectángulo delimitador del devuelto <xref:System.Windows.Automation.AutomationElement>, no es necesariamente en una parte seleccionable del control. Por ejemplo, un botón redondo podría no ser seleccionable cerca de una de las esquinas de su rectángulo delimitador.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el <xref:System.Windows.Automation.AutomationElement> en la ubicación del cursor de sistema.  
  
 [!code-csharp[UIAClient_snip#181](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#181)]
 [!code-vb[UIAClient_snip#181](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#181)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GetCachedPattern">
      <MemberSignature Language="C#" Value="public object GetCachedPattern (System.Windows.Automation.AutomationPattern pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCachedPattern(class System.Windows.Automation.AutomationPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCachedPattern (pattern As AutomationPattern) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCachedPattern(System::Windows::Automation::AutomationPattern ^ pattern);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
      </Parameters>
      <Docs>
        <param name="pattern">Identificador del patrón que se debe recuperar.</param>
        <summary>Recupera el patrón especificado de la caché de <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <returns>Objeto que representa el patrón especificado. Si no existen patrones coincidentes, se devuelve <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A> Recupera el patrón especificado de la caché. Para recuperar el objeto actual para el patrón especificado, llame a <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>.  
  
 Este método produce una excepción si el patrón solicitado no se almacenados previamente en memoria caché.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo almacenar en caché y recuperar un patrón.  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El patrón solicitado no está en la caché o no es compatible con el elemento.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">La interfaz de usuario para el <see cref="T:System.Windows.Automation.AutomationElement" /> ya no existe.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCachedPropertyValue">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera el valor en caché de la propiedad especificada desde un objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> Recupera la propiedad especificada de la caché de la <xref:System.Windows.Automation.AutomationElement>. Para recuperar la propiedad actual, llame a <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.AutomationElement.Cached" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCachedPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCachedPropertyValue (System.Windows.Automation.AutomationProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCachedPropertyValue(class System.Windows.Automation.AutomationProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCachedPropertyValue (property As AutomationProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCachedPropertyValue(System::Windows::Automation::AutomationProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
      </Parameters>
      <Docs>
        <param name="property">Identificador de la propiedad que se debe recuperar.</param>
        <summary>Recupera el valor de la propiedad especificada de la caché de <see cref="T:System.Windows.Automation.AutomationElement" />. Se devuelve un valor predeterminado adecuado de tipo de propiedad para las propiedades no admitidas explícitamente por el elemento de [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] de destino.</summary>
        <returns>Objeto que contiene el valor de la propiedad especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el proveedor de UI Automation para el propio elemento admite la propiedad, se devuelve el valor de la propiedad. En caso contrario, una propiedad predeterminada especificada por [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] se devuelve. Para obtener información sobre las propiedades predeterminadas, vea los campos de identificador de propiedad de <xref:System.Windows.Automation.AutomationElement>, como <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>.  
  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> Recupera la propiedad especificada desde el <xref:System.Windows.Automation.AutomationElement>de la memoria caché. Para recuperar el objeto actual de la llamada de la propiedad especificada <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>.  
  
 Este método produce una excepción si la propiedad solicitada no se ha almacenado previamente en memoria caché.  
  
   
  
## Examples  
 A continuación muestra cómo se puede utilizar este método para recuperar una propiedad almacenada en caché.  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propiedad solicitada no está en la memoria caché.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">La [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] para <see cref="T:System.Windows.Automation.AutomationElement" /> ya no existe.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCachedPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCachedPropertyValue (System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCachedPropertyValue(class System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCachedPropertyValue (property As AutomationProperty, ignoreDefaultValue As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCachedPropertyValue(System::Windows::Automation::AutomationProperty ^ property, bool ignoreDefaultValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
        <Parameter Name="ignoreDefaultValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="property">Identificador de la propiedad que se debe recuperar.</param>
        <param name="ignoreDefaultValue">Valor que especifica si se debería omitir un valor predeterminado cuando no se admita la propiedad especificada.</param>
        <summary>Recupera el valor de la propiedad especificada de la caché de <see cref="T:System.Windows.Automation.AutomationElement" />; opcionalmente, se puede omitir cualquier propiedad predeterminada.</summary>
        <returns>Objeto que contiene el valor de la propiedad especificada o <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /> si el elemento no proporciona un valor e <paramref name="ignoreDefaultValue" /> es <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> Recupera la propiedad especificada de la memoria caché para el <xref:System.Windows.Automation.AutomationElement>. Para recuperar la propiedad actual, llame a <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>.  
  
 Pasar `false` en `ignoreDefaultValue` equivale a llamar a <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=nameWithType>.  
  
 Si el proveedor de UI Automation para el propio elemento admite la propiedad, se devuelve el valor de la propiedad. De lo contrario, si `ignoreDefaultValue` es `false`, una propiedad predeterminada especificada por [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] se devuelve. Para obtener información sobre las propiedades predeterminadas, vea los campos de identificador de propiedad de <xref:System.Windows.Automation.AutomationElement>, como <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>.  
  
 Este método produce una excepción si la propiedad solicitada no se ha almacenado previamente en memoria caché.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo se puede utilizar este método para recuperar una propiedad almacenada en caché.  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propiedad solicitada no está en la memoria caché.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">La interfaz de usuario para el <see cref="T:System.Windows.Automation.AutomationElement" /> ya no existe.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetClickablePoint">
      <MemberSignature Language="C#" Value="public System.Windows.Point GetClickablePoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point GetClickablePoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetClickablePoint" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClickablePoint () As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point GetClickablePoint();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera un punto en <see cref="T:System.Windows.Automation.AutomationElement" /> en el que se puede hacer clic.</summary>
        <returns>Las coordenadas físicas de la pantalla de un punto que un cliente puede usar para hacer clic en este elemento.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Automation.AutomationElement> no es seleccionable si completamente está oculto por otra ventana.  
  
 Un <xref:System.Windows.Automation.AutomationElement> es seleccionable cuando satisface todas las condiciones siguientes:  
  
-   Es visible mediante programación y está disponible con la [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] árbol.  
  
-   Se desplaza totalmente en la vista dentro de su contenedor primario, si lo hay. Si se recorta el elemento, no hay ninguna garantía de que es seleccionable.  
  
-   El elemento no se oculta por cualquier otro elemento de interfaz de usuario. Si el elemento se oculta parcialmente por algún elemento de interfaz de usuario distinto de sus antecesores, podría no ser seleccionable.  
  
-   La ventana que contiene el elemento debe ser seleccionable. Por ejemplo, la ventana no es seleccionable si la ventana contenedora es completamente transparente. Los clics del mouse a través de la ventana situada debajo, por lo que todos los controles de la ventana transparente no devuelve puntos seleccionables.  
  
-   Si el elemento es un contenedor (por ejemplo, lista o vista de árbol), debe tener un punto que, cuando hace clic en will hacer que el fondo del control para concentrarse. Si todas las partes del control contenedor está ocupada por un elemento secundario, no es interactivo.  
  
 No hay ninguna garantía de que un control hará nada cuando hace clic en un punto definido como seleccionable por el proveedor de automatización de interfaz de usuario. Considere la posibilidad de usar en su lugar los patrones de control para realizar acciones en los controles.  
  
   
  
## Examples  
 El código siguiente recupera un punto interactivo para un control y mueve el cursor del sistema a ese punto.  
  
 [!code-csharp[UIAClient_snip#179](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#179)]
 [!code-vb[UIAClient_snip#179](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#179)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.NoClickablePointException">No hay ningún punto interactivo.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">La interfaz de usuario para el <see cref="T:System.Windows.Automation.AutomationElement" /> ya no existe.</exception>
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentPattern">
      <MemberSignature Language="C#" Value="public object GetCurrentPattern (System.Windows.Automation.AutomationPattern pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCurrentPattern(class System.Windows.Automation.AutomationPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentPattern (pattern As AutomationPattern) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCurrentPattern(System::Windows::Automation::AutomationPattern ^ pattern);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
      </Parameters>
      <Docs>
        <param name="pattern">Identificador del patrón que se debe recuperar.</param>
        <summary>Recupera el objeto del patrón especificado en <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <returns>Objeto del patrón, si <see cref="T:System.Windows.Automation.AutomationElement" /> admite actualmente el patrón especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> Obtiene el patrón especificado basándose en su disponibilidad en el momento de la llamada.  
  
 Para algunas formas de [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], este método le cobrará rendimiento entre procesos. Las aplicaciones pueden concentrar la sobrecarga por el almacenamiento en caché de patrones y, a continuación, se recuperan mediante <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar este método para recuperar un <xref:System.Windows.Automation.SelectionItemPattern>, que, a continuación, se utiliza para seleccionar un elemento en un cuadro de lista.  
  
 [!code-csharp[UIAClient_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#103)]
 [!code-vb[UIAClient_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#103)]  
  
> [!NOTE]
>  Para repetir a menudo tareas como el que se muestra en el ejemplo, sería más eficaz para almacenar en caché el patrón y usar <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El elemento no admite el patrón.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">La interfaz de usuario para el <see cref="T:System.Windows.Automation.AutomationElement" /> ya no existe.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentPropertyValue">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera el valor actual de la propiedad especificada desde un objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor devuelto por la <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> método es actual en el momento en que se llama. El valor puede cambiar posteriormente para otras aplicaciones que interactúan con la [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].  
  
 Para algunas formas de [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], este método le cobrará rendimiento entre procesos. Las aplicaciones pueden concentrar la sobrecarga por el almacenamiento en caché de propiedades y, a continuación, se recuperan mediante <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.AutomationElement.Current" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCurrentPropertyValue (System.Windows.Automation.AutomationProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCurrentPropertyValue(class System.Windows.Automation.AutomationProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentPropertyValue (property As AutomationProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCurrentPropertyValue(System::Windows::Automation::AutomationProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
      </Parameters>
      <Docs>
        <param name="property">Identificador de propiedad de [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] que especifica la propiedad que se debe recuperar.</param>
        <summary>Recupera el valor de la propiedad especificada en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />. Se devuelve un valor predeterminado adecuado de tipo de propiedad para las propiedades no admitidas explícitamente por el elemento de [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] de destino.</summary>
        <returns>Objeto que contiene el valor de la propiedad especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor devuelto por la <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> método es actual en el momento en que se llama. El valor puede cambiar posteriormente para otras aplicaciones que interactúan con la [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].  
  
 Si el proveedor de UI Automation para el propio elemento admite la propiedad, se devuelve el valor de la propiedad. En caso contrario, una propiedad predeterminada especificada por [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] se devuelve. Para obtener información sobre las propiedades predeterminadas, vea los campos de identificador de propiedad de <xref:System.Windows.Automation.AutomationElement>, como <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>.  
  
 Para algunas formas de [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], este método le cobrará rendimiento entre procesos. Concentrados sobrecarga por el almacenamiento en caché de propiedades y, a continuación, se recuperan mediante <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText%2A> propiedad. Si el elemento no proporciona ninguno, se devuelve el valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#126](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#126)]
 [!code-vb[UIAClient_snip#126](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#126)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">La interfaz de usuario para el <see cref="T:System.Windows.Automation.AutomationElement" /> ya no existe.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCurrentPropertyValue (System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCurrentPropertyValue(class System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentPropertyValue (property As AutomationProperty, ignoreDefaultValue As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCurrentPropertyValue(System::Windows::Automation::AutomationProperty ^ property, bool ignoreDefaultValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
        <Parameter Name="ignoreDefaultValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="property">Identificador de propiedad de [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] que especifica la propiedad que se debe recuperar.</param>
        <param name="ignoreDefaultValue">Valor que especifica si se debería omitir un valor predeterminado cuando no se admita la propiedad especificada.</param>
        <summary>Recupera el valor de la propiedad especificada en <see cref="T:System.Windows.Automation.AutomationElement" />; opcionalmente, se puede omitir cualquier propiedad predeterminada.</summary>
        <returns>Objeto que contiene el valor de la propiedad especificada o <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /> si el elemento no proporciona un valor e <paramref name="ignoreDefaultValue" /> es <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pasar `false` en `ignoreDefaultValue` equivale a llamar a <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=nameWithType>.  
  
 Si el proveedor de UI Automation para el propio elemento admite la propiedad, se devuelve el valor de la propiedad. De lo contrario, si `ignoreDefaultValue` es `false`, una propiedad predeterminada especificada por [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] se devuelve. Para obtener información sobre las propiedades predeterminadas, vea los campos de identificador de propiedad de <xref:System.Windows.Automation.AutomationElement>, como <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>.  
  
 El valor devuelto por la <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> método es actual en el momento en que se llama. El valor puede cambiar posteriormente para otras aplicaciones que interactúan con la [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].  
  
 Para algunas formas de [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], este método le cobrará rendimiento entre procesos. Las aplicaciones pueden concentrar la sobrecarga por el almacenamiento en caché de propiedades y, a continuación, se recuperan mediante <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText%2A> propiedad, pero especifica que, si el propio elemento no proporciona un valor para la propiedad <xref:System.Windows.Automation.AutomationElement.NotSupported> se devuelve en lugar de un valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#123](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#123)]
 [!code-vb[UIAClient_snip#123](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#123)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">La interfaz de usuario para el <see cref="T:System.Windows.Automation.AutomationElement" /> ya no existe.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve el código hash de este objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <returns>Código hash de un entero de 32 bits con signo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeId">
      <MemberSignature Language="C#" Value="public int[] GetRuntimeId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetRuntimeId() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetRuntimeId" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeId () As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ GetRuntimeId();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera el identificador único asignado al elemento de [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</summary>
        <returns>Matriz de enteros que representa el identificador en tiempo de ejecución.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El identificador solo se garantiza que sea único para el [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] del escritorio en el que se generó. Los identificadores se pueden reutilizar con el tiempo.  
  
 El formato de los identificadores de tiempo de ejecución puede cambiar en futuras versiones. El identificador devuelto se debe tratar como un valor opaco y utilizarse únicamente para la comparación; Por ejemplo, para determinar si un <xref:System.Windows.Automation.AutomationElement> está en la caché.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo recuperar el identificador en tiempo de ejecución de un <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#111](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#111)]
 [!code-vb[UIAClient_snip#111](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#111)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">La interfaz de usuario para el <see cref="T:System.Windows.Automation.AutomationElement" /> ya no existe.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedPatterns">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationPattern[] GetSupportedPatterns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationPattern[] GetSupportedPatterns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetSupportedPatterns" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSupportedPatterns () As AutomationPattern()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::AutomationPattern ^&gt; ^ GetSupportedPatterns();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera los patrones de control que admite este objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <returns>Matriz de objetos <see cref="T:System.Windows.Automation.AutomationPattern" /> que representa los patrones de control admitidos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método normalmente se usaría para la depuración. Lo llaman requiere una gran cantidad de procesamiento, ya que consulta el <xref:System.Windows.Automation.AutomationElement> para todos los patrones posibles. Normalmente se utilizaría <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> para recuperar un patrón de control específico de un <xref:System.Windows.Automation.AutomationElement>. Para determinar si se admite un patrón determinado, compruebe la propiedad adecuada; Por ejemplo, <xref:System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty>.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo recuperar los patrones de control admitidos por un <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#114](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#114)]
 [!code-vb[UIAClient_snip#114](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#114)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedProperties">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationProperty[] GetSupportedProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationProperty[] GetSupportedProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetSupportedProperties" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSupportedProperties () As AutomationProperty()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::AutomationProperty ^&gt; ^ GetSupportedProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera los identificadores de propiedades admitidos por el elemento.</summary>
        <returns>Matriz de identificadores de propiedad admitidos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La matriz devuelta identifica todas las propiedades admitidas por este elemento; Sin embargo, también puede contener entradas duplicadas o propiedades que contienen `null` o valores vacíos. Para la mayoría de los casos es mejor utilizar <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> para determinar si una propiedad es compatible actualmente y obtener su valor actual.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo recuperar las propiedades admitidas por un <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#115](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#115)]
 [!code-vb[UIAClient_snip#115](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#115)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdatedCache">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetUpdatedCache (System.Windows.Automation.CacheRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetUpdatedCache(class System.Windows.Automation.CacheRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetUpdatedCache(System.Windows.Automation.CacheRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdatedCache (request As CacheRequest) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetUpdatedCache(System::Windows::Automation::CacheRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Automation.CacheRequest" />
      </Parameters>
      <Docs>
        <param name="request">Patrones y propiedades que se deben incluir en la caché actualizada.</param>
        <summary>Recupera un nuevo objeto <see cref="T:System.Windows.Automation.AutomationElement" /> con una caché actualizada.</summary>
        <returns>Nuevo objeto <see cref="T:System.Windows.Automation.AutomationElement" /> con la memoria caché actualizada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La versión original <xref:System.Windows.Automation.AutomationElement> no se ha modificado. <xref:System.Windows.Automation.AutomationElement.GetUpdatedCache%2A> Devuelve un nuevo <xref:System.Windows.Automation.AutomationElement>, que hace referencia a la misma [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] y tiene el mismo <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo una memoria caché podría actualizarse cada vez que cambia la selección de un cuadro combinado.  
  
 [!code-csharp[UIAClient_snip#109](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#109)]
 [!code-vb[UIAClient_snip#109](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#109)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasKeyboardFocusProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty HasKeyboardFocusProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty HasKeyboardFocusProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HasKeyboardFocusProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ HasKeyboardFocusProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Esta propiedad también se puede recuperar desde el <xref:System.Windows.Automation.AutomationElement.Current%2A> o <xref:System.Windows.Automation.AutomationElement.Cached%2A> propiedades.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Boolean>. El valor predeterminado para la propiedad es `false`.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la propiedad. Si el elemento no proporciona ninguno, se devuelve el valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#140](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#140)]
 [!code-vb[UIAClient_snip#140](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#140)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpTextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty HelpTextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty HelpTextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.HelpTextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HelpTextProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ HelpTextProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Esta propiedad también se puede recuperar desde el <xref:System.Windows.Automation.AutomationElement.Current%2A> o <xref:System.Windows.Automation.AutomationElement.Cached%2A> propiedades.  
  
 Esta información se obtiene normalmente de información sobre herramientas especificada por los proveedores.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.String>. El valor predeterminado de la propiedad es una cadena vacía.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la propiedad. Si el elemento no proporciona ninguno, se devuelve el valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#126](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#126)]
 [!code-vb[UIAClient_snip#126](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#126)]  
  
 En el ejemplo siguiente se recupera el valor actual de la propiedad, pero especifica que, si el propio elemento no proporciona un valor para la propiedad <xref:System.Windows.Automation.AutomationElement.NotSupported> se devuelve en lugar de un valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#123](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#123)]
 [!code-vb[UIAClient_snip#123](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#123)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContentElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsContentElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsContentElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsContentElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsContentElementProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsContentElementProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Esta propiedad también se puede recuperar desde el <xref:System.Windows.Automation.AutomationElement.Current%2A> o <xref:System.Windows.Automation.AutomationElement.Cached%2A> propiedades.  
  
 La vista de contenido de la [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] árbol proporciona una vista de la [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] que solo contenga elementos que representan los datos dentro de la [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].  
  
 Un elemento debe ser un control para poder alojar el contenido.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Boolean>. El valor predeterminado para la propiedad es `true`.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la propiedad. Si el elemento no proporciona ninguno, se devuelve el valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#141](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#141)]
 [!code-vb[UIAClient_snip#141](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#141)]  
  
 En el ejemplo siguiente se recupera el valor actual de la propiedad, pero especifica que, si el propio elemento no proporciona un valor para la propiedad <xref:System.Windows.Automation.AutomationElement.NotSupported> se devuelve en lugar de un valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#142](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#142)]
 [!code-vb[UIAClient_snip#142](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#142)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.Automation.ContentViewCondition" />
      </Docs>
    </Member>
    <Member MemberName="IsControlElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsControlElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsControlElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsControlElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsControlElementProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsControlElementProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Esta propiedad también se puede recuperar desde el <xref:System.Windows.Automation.AutomationElement.Current%2A> o <xref:System.Windows.Automation.AutomationElement.Cached%2A> propiedades.  
  
 Los controles son elementos que un usuario percibe como interactiva o que lo contiene información de la [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Boolean>. El valor predeterminado para la propiedad es `true`.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la propiedad. Si el elemento no proporciona ninguno, se devuelve el valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#143](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#143)]
 [!code-vb[UIAClient_snip#143](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#143)]  
  
 En el ejemplo siguiente se recupera el valor actual de la propiedad, pero especifica que, si el propio elemento no proporciona un valor para la propiedad <xref:System.Windows.Automation.AutomationElement.NotSupported> se devuelve en lugar de un valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#144](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#144)]
 [!code-vb[UIAClient_snip#144](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#144)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.Automation.ControlViewCondition" />
      </Docs>
    </Member>
    <Member MemberName="IsDockPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsDockPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsDockPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDockPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsDockPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.DockPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Boolean>. El valor predeterminado para la propiedad es `false`.  
  
   
  
## Examples  
 En el ejemplo siguiente se comprueba si se admite un patrón de control especificado por un <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsEnabledProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" />, que especifica si está habilitado el elemento de [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] al que <see cref="T:System.Windows.Automation.AutomationElement" /> hace referencia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Esta propiedad también se puede recuperar desde el <xref:System.Windows.Automation.AutomationElement.Current%2A> o <xref:System.Windows.Automation.AutomationElement.Cached%2A> propiedades.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Boolean>. El valor predeterminado para la propiedad es `false`.  
  
 Cuando el estado habilitado de un control es `false`, se supone que los controles secundarios también no están habilitados. No debe esperar eventos de cambio de propiedad de los elementos secundarios cuando el estado del elemento primario controla los cambios.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la propiedad. Si el elemento no proporciona ninguno, se devuelve el valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#146](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#146)]
 [!code-vb[UIAClient_snip#146](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#146)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExpandCollapsePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsExpandCollapsePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsExpandCollapsePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsExpandCollapsePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsExpandCollapsePatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.ExpandCollapsePattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Boolean>. El valor predeterminado para la propiedad es `false`.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera un valor que especifica si se admite un patrón de control especificado por un <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGridItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsGridItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsGridItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsGridItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsGridItemPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.GridItemPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Boolean>. El valor predeterminado para la propiedad es `false`.  
  
   
  
## Examples  
 En el ejemplo siguiente se comprueba si se admite un patrón de control especificado por un <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGridPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsGridPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsGridPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsGridPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsGridPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.GridPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Boolean>. El valor predeterminado para la propiedad es `false`.  
  
   
  
## Examples  
 En el ejemplo siguiente se comprueba si se admite un patrón de control especificado por un <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInvokePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsInvokePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsInvokePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsInvokePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsInvokePatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.InvokePattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Boolean>. El valor predeterminado para la propiedad es `false`.  
  
   
  
## Examples  
 En el ejemplo siguiente se comprueba si se admite un patrón de control especificado por un <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemContainerPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsItemContainerPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsItemContainerPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsItemContainerPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsItemContainerPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.ItemContainerPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsKeyboardFocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsKeyboardFocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsKeyboardFocusableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Esta propiedad también se puede recuperar desde el <xref:System.Windows.Automation.AutomationElement.Current%2A> o <xref:System.Windows.Automation.AutomationElement.Cached%2A> propiedades.  
  
 La propiedad proporciona información necesaria para el correcto funcionamiento de la <xref:System.Windows.Automation.AutomationElement.SetFocus%2A> método.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Boolean>. El valor predeterminado para la propiedad es `false`.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la propiedad. Si el elemento no proporciona ninguno, se devuelve el valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#147](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#147)]
 [!code-vb[UIAClient_snip#147](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#147)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMultipleViewPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsMultipleViewPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsMultipleViewPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMultipleViewPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsMultipleViewPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.MultipleViewPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Boolean>. El valor predeterminado para la propiedad es `false`.  
  
   
  
## Examples  
 En el ejemplo siguiente se comprueba si se admite un patrón de control especificado por un <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOffscreenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsOffscreenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsOffscreenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsOffscreenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsOffscreenProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsOffscreenProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen" />, que indica si el elemento de la [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] se ve en la pantalla.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Esta propiedad también se puede recuperar desde el <xref:System.Windows.Automation.AutomationElement.Current%2A> o <xref:System.Windows.Automation.AutomationElement.Cached%2A> propiedades.  
  
 El valor devuelto es de tipo <xref:System.Boolean>, y el valor predeterminado es `false`.  
  
 Para obtener más información sobre cuando esta propiedad es `true`, consulte <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen%2A>.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la propiedad. Si el elemento no proporciona ninguno, se devuelve el valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#148](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#148)]
 [!code-vb[UIAClient_snip#148](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#148)]  
  
 En el ejemplo siguiente se recupera el valor actual de la propiedad, pero especifica que, si el propio elemento no proporciona un valor para la propiedad <xref:System.Windows.Automation.AutomationElement.NotSupported> se devuelve en lugar de un valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#149](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#149)]
 [!code-vb[UIAClient_snip#149](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#149)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPasswordProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsPasswordProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsPasswordProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsPasswordProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsPasswordProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsPasswordProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Esta propiedad también se puede recuperar desde el <xref:System.Windows.Automation.AutomationElement.Current%2A> o <xref:System.Windows.Automation.AutomationElement.Cached%2A> propiedades.  
  
 El valor devuelto de esta propiedad es una <xref:System.Boolean>. Devuelve `true` para indicar que el contenido está protegida; en caso contrario `false`.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la propiedad.  
  
 [!code-csharp[UIAClient_snip#150](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#150)]
 [!code-vb[UIAClient_snip#150](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#150)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRangeValuePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsRangeValuePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsRangeValuePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsRangeValuePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsRangeValuePatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.RangeValuePattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Boolean>. El valor predeterminado para la propiedad es `false`.  
  
   
  
## Examples  
 En el ejemplo siguiente se comprueba si se admite un patrón de control especificado por un <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequiredForFormProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsRequiredForFormProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsRequiredForFormProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsRequiredForFormProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsRequiredForFormProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsRequiredForFormProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Esta propiedad también se puede recuperar desde el <xref:System.Windows.Automation.AutomationElement.Current%2A> o <xref:System.Windows.Automation.AutomationElement.Cached%2A> propiedades.  
  
 El valor devuelto de esta propiedad es de tipo <xref:System.Boolean>, y el valor predeterminado es `false`.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la propiedad. Si el elemento no proporciona ninguno, se devuelve el valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#151](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#151)]
 [!code-vb[UIAClient_snip#151](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#151)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsScrollItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsScrollItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsScrollItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsScrollItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsScrollItemPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.ScrollItemPattern" /> está disponible para el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Boolean>. El valor predeterminado para la propiedad es `false`.  
  
   
  
## Examples  
 En el ejemplo siguiente se comprueba si se admite un patrón de control especificado por un <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsScrollPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsScrollPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsScrollPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsScrollPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsScrollPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.ScrollPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Boolean>. El valor predeterminado para la propiedad es `false`.  
  
   
  
## Examples  
 En el ejemplo siguiente se comprueba si se admite un patrón de control especificado por un <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsSelectionItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsSelectionItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSelectionItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsSelectionItemPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.SelectionItemPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Boolean>. El valor predeterminado para la propiedad es `false`.  
  
   
  
## Examples  
 En el ejemplo siguiente se comprueba si se admite un patrón de control especificado por un <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsSelectionPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsSelectionPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSelectionPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsSelectionPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.SelectionPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Boolean>. El valor predeterminado para la propiedad es `false`.  
  
   
  
## Examples  
 En el ejemplo siguiente se comprueba si se admite un patrón de control especificado por un <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronizedInputPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsSynchronizedInputPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsSynchronizedInputPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSynchronizedInputPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsSynchronizedInputPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.SynchronizedInputPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTableItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTableItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTableItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTableItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTableItemPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.TableItemPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Boolean>. El valor predeterminado para la propiedad es `false`.  
  
   
  
## Examples  
 En el ejemplo siguiente se comprueba si se admite un patrón de control especificado por un <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTablePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTablePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTablePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTablePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTablePatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.TablePattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Boolean>. El valor predeterminado para la propiedad es `false`.  
  
   
  
## Examples  
 En el ejemplo siguiente se comprueba si se admite un patrón de control especificado por un <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTextPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTextPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTextPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTextPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTextPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.TextPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Boolean>. El valor predeterminado para la propiedad es `false`.  
  
   
  
## Examples  
 En el ejemplo siguiente se comprueba si se admite un patrón de control especificado por un <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTogglePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTogglePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTogglePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTogglePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTogglePatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.TogglePattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Boolean>. El valor predeterminado para la propiedad es `false`.  
  
   
  
## Examples  
 En el ejemplo siguiente se comprueba si se admite un patrón de control especificado por un <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTransformPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTransformPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTransformPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTransformPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTransformPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.TransformPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Boolean>. El valor predeterminado para la propiedad es `false`.  
  
   
  
## Examples  
 En el ejemplo siguiente se comprueba si se admite un patrón de control especificado por un <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValuePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsValuePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsValuePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsValuePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsValuePatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.ValuePattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Boolean>. El valor predeterminado para la propiedad es `false`.  
  
   
  
## Examples  
 En el ejemplo siguiente se comprueba si se admite un patrón de control especificado por un <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVirtualizedItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsVirtualizedItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsVirtualizedItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsVirtualizedItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsVirtualizedItemPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.VirtualizedItemPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWindowPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsWindowPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsWindowPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsWindowPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsWindowPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad que indica si el patrón de control <see cref="T:System.Windows.Automation.WindowPattern" /> está disponible en el objeto <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Boolean>. El valor predeterminado para la propiedad es `false`.  
  
   
  
## Examples  
 En el ejemplo siguiente se comprueba si se admite un patrón de control especificado por un <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemStatusProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ItemStatusProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ItemStatusProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ItemStatusProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemStatusProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ItemStatusProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus" />, que especifica el estado de la representación visual de un elemento complejo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 El valor devuelto es definido por el control <xref:System.String>. El valor predeterminado es una cadena vacía.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la propiedad. Si el elemento no proporciona ninguno, se devuelve el valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#152](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#152)]
 [!code-vb[UIAClient_snip#152](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#152)]  
  
 En el ejemplo siguiente se recupera el valor actual de la propiedad, pero especifica que, si el propio elemento no proporciona un valor para la propiedad <xref:System.Windows.Automation.AutomationElement.NotSupported> se devuelve en lugar de un valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#153](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#153)]
 [!code-vb[UIAClient_snip#153](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#153)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ItemTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ItemTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ItemTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemTypeProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ItemTypeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Esta propiedad también se puede recuperar desde el <xref:System.Windows.Automation.AutomationElement.Current%2A> o <xref:System.Windows.Automation.AutomationElement.Cached%2A> propiedades.  
  
 El valor devuelto es definido por el control <xref:System.String>. El valor predeterminado es una cadena vacía.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la propiedad. Si el elemento no proporciona ninguno, se devuelve el valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#154](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#154)]
 [!code-vb[UIAClient_snip#154](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#154)]  
  
 En el ejemplo siguiente se recupera el valor actual de la propiedad, pero especifica que si el propio elemento no proporciona un valor para la propiedad, es una cadena definida por la aplicación que se devuelvan en lugar de un valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#155](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#155)]
 [!code-vb[UIAClient_snip#155](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#155)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LabeledByProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty LabeledByProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty LabeledByProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.LabeledByProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LabeledByProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ LabeledByProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy" />, que identifica la etiqueta asociada a un control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Esta propiedad también se puede recuperar desde el <xref:System.Windows.Automation.AutomationElement.Current%2A> o <xref:System.Windows.Automation.AutomationElement.Cached%2A> propiedades.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Windows.Automation.AutomationElement>. El valor predeterminado para la propiedad es `null`.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la propiedad. Si el elemento no proporciona ninguno, se devuelve el valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#156](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#156)]
 [!code-vb[UIAClient_snip#156](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#156)]  
  
 En el ejemplo siguiente se recupera el valor actual de la propiedad, pero especifica que, si el propio elemento no proporciona un valor para la propiedad <xref:System.Windows.Automation.AutomationElement.NotSupported> se devuelve en lugar de un valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#157](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#157)]
 [!code-vb[UIAClient_snip#157](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#157)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutInvalidatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent LayoutInvalidatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent LayoutInvalidatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LayoutInvalidatedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ LayoutInvalidatedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica el evento que se provoca cuando se invalida el diseño.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Este evento se desencadena por un contenedor de elementos cada vez que se ha cambiado la información de visibilidad de muchos elementos.  Este evento es utilizado por el cliente como un indicador que necesita para actualizar la <xref:System.Windows.Automation.AutomationElement.BoundingRectangleProperty> y <xref:System.Windows.Automation.AutomationElement.IsOffscreenProperty> información que se hayan almacenado en caché para los elementos dentro del árbol. El número recomendado de cambios que desencadena este evento es 25.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="LocalizedControlTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty LocalizedControlTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty LocalizedControlTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LocalizedControlTypeProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ LocalizedControlTypeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType" /> en el idioma de la configuración regional.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Esta propiedad también se puede recuperar desde el <xref:System.Windows.Automation.AutomationElement.Current%2A> o <xref:System.Windows.Automation.AutomationElement.Cached%2A> propiedades.  
  
 Un proveedor debe exponer esta propiedad cuando representa un control personalizado que no tiene un tipo de control bien definido.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.String>. El valor predeterminado de la propiedad es una cadena vacía.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la propiedad. Si el elemento no proporciona ninguno, se devuelve el valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#158](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#158)]
 [!code-vb[UIAClient_snip#158](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#158)]  
  
 En el ejemplo siguiente se recupera el valor actual de la propiedad, pero especifica que, si el propio elemento no proporciona un valor para la propiedad <xref:System.Windows.Automation.AutomationElement.NotSupported> se devuelve en lugar de un valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#159](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#159)]
 [!code-vb[UIAClient_snip#159](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#159)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent MenuClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent MenuClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.MenuClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuClosedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ MenuClosedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica el evento que se provoca cuando se cierra un menú.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MenuOpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent MenuOpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent MenuOpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.MenuOpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuOpenedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ MenuOpenedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica el evento que se provoca cuando se abre un menú.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty NameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty NameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.NameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NameProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ NameProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Esta propiedad también se puede recuperar desde el <xref:System.Windows.Automation.AutomationElement.Current%2A> o <xref:System.Windows.Automation.AutomationElement.Cached%2A> propiedades.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.String>. El valor predeterminado de la propiedad es una cadena vacía.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la propiedad. Si el elemento no proporciona ninguno, se devuelve el valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#160](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#160)]
 [!code-vb[UIAClient_snip#160](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#160)]  
  
 En el ejemplo siguiente se recupera el valor actual de la propiedad, pero especifica que, si el propio elemento no proporciona un valor para la propiedad <xref:System.Windows.Automation.AutomationElement.NotSupported> se devuelve en lugar de un valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#161](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#161)]
 [!code-vb[UIAClient_snip#161](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#161)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NativeWindowHandleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty NativeWindowHandleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty NativeWindowHandleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.NativeWindowHandleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NativeWindowHandleProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ NativeWindowHandleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Esta propiedad también se puede recuperar desde el <xref:System.Windows.Automation.AutomationElement.Current%2A> o <xref:System.Windows.Automation.AutomationElement.Cached%2A> propiedades.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Int32>. El valor predeterminado de la propiedad es 0.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la propiedad. Si el elemento no proporciona ninguno, se devuelve el valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#162](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#162)]
 [!code-vb[UIAClient_snip#162](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#162)]  
  
 En el ejemplo siguiente se recupera el valor actual de la propiedad, pero especifica que, si el propio elemento no proporciona un valor para la propiedad <xref:System.Windows.Automation.AutomationElement.NotSupported> se devuelve en lugar de un valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#163](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#163)]
 [!code-vb[UIAClient_snip#163](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#163)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotSupported">
      <MemberSignature Language="C#" Value="public static readonly object NotSupported;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object NotSupported" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.NotSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NotSupported As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ NotSupported;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica que no se admite una propiedad.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera la propiedad de texto de ayuda para un <xref:System.Windows.Automation.AutomationElement>, especificando que <xref:System.Windows.Automation.AutomationElement.NotSupported> se debe devolver si el control no admite esa propiedad.  
  
 [!code-csharp[UIAClient_snip#123](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#123)]
 [!code-vb[UIAClient_snip#123](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#123)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Automation.AutomationElement left, System.Windows.Automation.AutomationElement right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Windows.Automation.AutomationElement left, class System.Windows.Automation.AutomationElement right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As AutomationElement, right As AutomationElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Automation::AutomationElement ^ left, System::Windows::Automation::AutomationElement ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="right" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="left">Primer objeto <see cref="T:System.Windows.Automation.AutomationElement" /> que se va a comparar.</param>
        <param name="right">Segundo objeto <see cref="T:System.Windows.Automation.AutomationElement" /> que se va a comparar.</param>
        <summary>Devuelve un valor que indica si los objetos <see cref="T:System.Windows.Automation.AutomationElement" /> especificados hacen referencia al mismo elemento de [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</summary>
        <returns>
          <see langword="true" /> si los dos objetos <see cref="T:System.Windows.Automation.AutomationElement" /> hacen referencia al mismo elemento de [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dos <xref:System.Windows.Automation.AutomationElement> objetos que comparen como iguales podrían contener información almacenada en caché diferentes en distintos puntos en el tiempo. <xref:System.Windows.Automation.AutomationElement.op_Equality%2A> solo comprueba que los objetos hacen referencia al mismo subyacente [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elemento.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.Equals(System.Object)" />
        <altmember cref="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Automation.AutomationElement left, System.Windows.Automation.AutomationElement right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Windows.Automation.AutomationElement left, class System.Windows.Automation.AutomationElement right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As AutomationElement, right As AutomationElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Automation::AutomationElement ^ left, System::Windows::Automation::AutomationElement ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="right" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="left">Primer objeto <see cref="T:System.Windows.Automation.AutomationElement" /> que se va a comparar.</param>
        <param name="right">Segundo objeto <see cref="T:System.Windows.Automation.AutomationElement" /> que se va a comparar.</param>
        <summary>Devuelve un valor que indica si los objetos <see cref="T:System.Windows.Automation.AutomationElement" /> especificados hacen referencia a elementos de [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] diferentes.</summary>
        <returns>
          <see langword="true" /> si los dos objetos hacen referencia a elementos de [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] diferentes; de lo contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.Equals(System.Object)" />
        <altmember cref="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      </Docs>
    </Member>
    <Member MemberName="OrientationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty OrientationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty OrientationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.OrientationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OrientationProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ OrientationProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Esta propiedad también se puede recuperar desde el <xref:System.Windows.Automation.AutomationElement.Current%2A> o <xref:System.Windows.Automation.AutomationElement.Cached%2A> propiedades.  
  
 El valor de la propiedad es de tipo <xref:System.Windows.Automation.OrientationType>. El valor predeterminado es <xref:System.Windows.Automation.OrientationType.None>.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la propiedad. Si el elemento no proporciona ninguno, se devuelve el valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#164](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#164)]
 [!code-vb[UIAClient_snip#164](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#164)]  
  
 En el ejemplo siguiente se recupera el valor actual de la propiedad, pero especifica que, si el propio elemento no proporciona un valor para la propiedad <xref:System.Windows.Automation.AutomationElement.NotSupported> se devuelve en lugar de un valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#165](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#165)]
 [!code-vb[UIAClient_snip#165](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#165)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ProcessIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ProcessIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ProcessIdProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ProcessIdProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ProcessIdProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Esta propiedad también se puede recuperar desde el <xref:System.Windows.Automation.AutomationElement.Current%2A> o <xref:System.Windows.Automation.AutomationElement.Cached%2A> propiedades.  
  
 Valores devueltos de la propiedad son de tipo <xref:System.Int32>. El valor predeterminado de la propiedad es 0.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la propiedad. Si el elemento no proporciona ninguno, se devuelve el valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#167](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#167)]
 [!code-vb[UIAClient_snip#167](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#167)]  
  
 En el ejemplo siguiente se recupera el valor actual de la propiedad, pero especifica que, si el propio elemento no proporciona un valor para la propiedad <xref:System.Windows.Automation.AutomationElement.NotSupported> se devuelve en lugar de un valor predeterminado.  
  
 [!code-csharp[UIAClient_snip#168](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#168)]
 [!code-vb[UIAClient_snip#168](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#168)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootElement">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement RootElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Automation.AutomationElement RootElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.RootElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RootElement As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Automation::AutomationElement ^ RootElement { System::Windows::Automation::AutomationElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Windows.Automation.AutomationElement" /> raíz del escritorio actual.</summary>
        <value>Elemento raíz.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar el elemento raíz como punto de partida para buscar otros elementos, con el <xref:System.Windows.Automation.AutomationElement.FindAll%2A> y <xref:System.Windows.Automation.AutomationElement.FindFirst%2A> métodos.  
  
 Al realizar búsquedas desde el elemento raíz, no olvide especificar <xref:System.Windows.Automation.TreeScope.Children> en el ámbito de la búsqueda, no <xref:System.Windows.Automation.TreeScope.Descendants>. Una búsqueda en todo el subárbol del escritorio podría recorrer en iteración miles de elementos y provocar un desbordamiento de pila.  
  
   
  
## Examples  
 Ejemplo de código siguiente recupera una colección de todos los elementos secundarios inmediatos del escritorio.  
  
 [!code-csharp[UIAClient_snip#201](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#201)]
 [!code-vb[UIAClient_snip#201](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#201)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RuntimeIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty RuntimeIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty RuntimeIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.RuntimeIdProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RuntimeIdProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ RuntimeIdProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad que contiene el identificador en tiempo de ejecución del elemento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 La propiedad de identificador en tiempo de ejecución especifica un identificador para un <xref:System.Windows.Automation.AutomationElement> que es único en el escritorio.  
  
 El valor devuelto de la propiedad es una matriz de tipo <xref:System.Int32>. No existe ningún valor predeterminado.  
  
   
  
## Examples  
 En el ejemplo siguiente se recupera el valor actual de la propiedad.  
  
 [!code-csharp[UIAClient_snip#169](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#169)]
 [!code-vb[UIAClient_snip#169](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#169)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetRuntimeId" />
        <altmember cref="M:System.Windows.Automation.WindowClosedEventArgs.GetRuntimeId" />
        <altmember cref="M:System.Windows.Automation.StructureChangedEventArgs.GetRuntimeId" />
        <altmember cref="F:System.Windows.Automation.AutomationElement.AutomationIdProperty" />
      </Docs>
    </Member>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.SetFocus" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Establece el foco en <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El comportamiento de este método depende de la implementación por el proveedor de UI Automation para el elemento. Establecer el foco no necesariamente traer el elemento al primer plano o hacerlo visible.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">La interfaz de usuario para el <see cref="T:System.Windows.Automation.AutomationElement" /> ya no existe.</exception>
      </Docs>
    </Member>
    <Member MemberName="StructureChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent StructureChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent StructureChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.StructureChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StructureChangedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ StructureChangedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica el evento que se provoca cuando se cambia la estructura de árbol de [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)].</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent ToolTipClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent ToolTipClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ToolTipClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolTipClosedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ ToolTipClosedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica el evento que se provoca cuando se cierra una información sobre herramientas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipOpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent ToolTipOpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent ToolTipOpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ToolTipOpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolTipOpenedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ ToolTipOpenedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica el evento que se provoca cuando se abre una información sobre herramientas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este identificador se usa por aplicaciones cliente de automatización de interfaz de usuario. Proveedores de automatización de interfaz de usuario deben utilizar el identificador equivalente en <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Información sobre herramientas es transitoria en el escritorio y la información sobre herramientas que haya cerrado cuando que el cliente recibe el evento.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="TryGetCachedPattern">
      <MemberSignature Language="C#" Value="public bool TryGetCachedPattern (System.Windows.Automation.AutomationPattern pattern, out object patternObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetCachedPattern(class System.Windows.Automation.AutomationPattern pattern, [out] object&amp; patternObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetCachedPattern (pattern As AutomationPattern, ByRef patternObject As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetCachedPattern(System::Windows::Automation::AutomationPattern ^ pattern, [Runtime::InteropServices::Out] System::Object ^ % patternObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
        <Parameter Name="patternObject" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pattern">Identificador del patrón de control que se va a recuperar.</param>
        <param name="patternObject">Al devolverse, contiene el patrón si está en la caché; de lo contrario, <see langword="null" />.</param>
        <summary>Recupera un patrón de control de la caché.</summary>
        <returns>
          <see langword="true" /> si el patrón está en la caché; <see langword="false" /> si no está en la caché o no se admite.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se muestra cómo almacenar en memoria caché y recuperar un patrón de control.  
  
 [!code-csharp[UIAClient_snip#107](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#107)]
 [!code-vb[UIAClient_snip#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#107)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
      </Docs>
    </Member>
    <Member MemberName="TryGetClickablePoint">
      <MemberSignature Language="C#" Value="public bool TryGetClickablePoint (out System.Windows.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetClickablePoint([out] valuetype System.Windows.Point&amp; pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetClickablePoint (ByRef pt As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetClickablePoint([Runtime::InteropServices::Out] System::Windows::Point % pt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Windows.Point&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pt">El resultado de este método contiene las coordenadas físicas de la pantalla de un punto seleccionable.</param>
        <summary>Recupera un punto dentro del elemento en el que se puede hacer clic.</summary>
        <returns>
          <see langword="true" /> si hay un punto que es seleccionable; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Automation.AutomationElement> no es seleccionable si completamente está oculto por otra ventana.  
  
   
  
## Examples  
 En el ejemplo siguiente se intenta recuperar un punto donde hacer clic en un <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#112](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#112)]
 [!code-vb[UIAClient_snip#112](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#112)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetClickablePoint" />
      </Docs>
    </Member>
    <Member MemberName="TryGetCurrentPattern">
      <MemberSignature Language="C#" Value="public bool TryGetCurrentPattern (System.Windows.Automation.AutomationPattern pattern, out object patternObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetCurrentPattern(class System.Windows.Automation.AutomationPattern pattern, [out] object&amp; patternObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetCurrentPattern (pattern As AutomationPattern, ByRef patternObject As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetCurrentPattern(System::Windows::Automation::AutomationPattern ^ pattern, [Runtime::InteropServices::Out] System::Object ^ % patternObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
        <Parameter Name="patternObject" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pattern">Identificador del patrón de control que se va a recuperar.</param>
        <param name="patternObject">Se devuelve el patrón de control si se admite; de lo contrario, se devuelve <see langword="null" />.</param>
        <summary>Recupera un objeto que implementa un patrón de control.</summary>
        <returns>
          <see langword="true" /> si se admite el patrón; en caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para algunas formas de [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], este método le cobrará rendimiento entre procesos. Las aplicaciones pueden concentrar la sobrecarga por el almacenamiento en caché de patrones y, a continuación, se recuperan mediante <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar este método para recuperar un patrón de control.  
  
 [!code-csharp[UIAClient_snip#113](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#113)]
 [!code-vb[UIAClient_snip#113](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#113)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
      </Docs>
    </Member>
  </Members>
</Type>