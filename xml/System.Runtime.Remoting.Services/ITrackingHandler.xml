<Type Name="ITrackingHandler" FullName="System.Runtime.Remoting.Services.ITrackingHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b5eb76b70ef0cccd11c93bcf2a32afdf06d0f7af" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36630767" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITrackingHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITrackingHandler" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Services.ITrackingHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITrackingHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITrackingHandler" />
  <TypeSignature Language="F#" Value="type ITrackingHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Indica que se debe notificar al objeto que realiza la implementación el cálculo de referencias, la resolución de referencias y la desconexión de objetos y servidores proxy mediante la infraestructura de comunicación remota.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Todos los objetos que se registra con <xref:System.Runtime.Remoting.Services.TrackingServices> se llama por la comunicación remota cuando un objeto o proxy actual <xref:System.AppDomain> se calculan las referencias, elimina las referencias o desconectado.  
  
 Tenga en cuenta que sólo los objetos se puede desconectar. Se produce una excepción cuando desconecte se llama en un servidor proxy.  
  
> [!NOTE]
>  Esta interfaz realiza una petición de vínculo. Se produce una excepción de seguridad si el llamador inmediato realiza la llamada a través de una referencia a la interfaz y no tiene permiso de infraestructura. Vea [peticiones de vínculo](~/docs/framework/misc/link-demands.md) para obtener más información.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo implementar los métodos de la <xref:System.Runtime.Remoting.Services.ITrackingHandler> interfaz para recibir notificaciones de la infraestructura de comunicación remota.  
  
 En el ejemplo de código siguiente se muestra cómo implementar esta interfaz.  
  
 [!code-csharp[System.Runtime.Remoting.Services.TrackingServices#30](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Services.TrackingServices/CS/trackinghandler.cs#30)]  
  
 En el ejemplo de código siguiente se muestra cómo implementar esta interfaz en un servidor.  
  
 [!code-csharp[System.Runtime.Remoting.Services.TrackingServices#20](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Services.TrackingServices/CS/server.cs#20)]  
  
 En el ejemplo de código siguiente se muestra cómo implementar esta interfaz en un cliente para el servidor en el ejemplo de código anterior.  
  
 [!code-csharp[System.Runtime.Remoting.Services.TrackingServices#0](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Services.TrackingServices/CS/client.cs#0)]  
  
 En el ejemplo de código siguiente se muestra el objeto remoto que se usa el servidor y el cliente.  
  
 [!code-csharp[System.Runtime.Remoting.Services.TrackingServices#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Services.TrackingServices/CS/remoteservice.cs#10)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">Para trabajar con código de infraestructura. Valor de la petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valor del permiso: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
  </Docs>
  <Members>
    <Member MemberName="DisconnectedObject">
      <MemberSignature Language="C#" Value="public void DisconnectedObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisconnectedObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Services.ITrackingHandler.DisconnectedObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisconnectedObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisconnectedObject(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member DisconnectedObject : obj -&gt; unit" Usage="iTrackingHandler.DisconnectedObject obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Objeto desconectado.</param>
        <summary>Notifica a la instancia actual que se ha desconectado un objeto de su proxy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo implementar este método. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Runtime.Remoting.Services.ITrackingHandler> interfaz.  
  
 [!code-csharp[System.Runtime.Remoting.Services.TrackingServices#33](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Services.TrackingServices/CS/trackinghandler.cs#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarshaledObject">
      <MemberSignature Language="C#" Value="public void MarshaledObject (object obj, System.Runtime.Remoting.ObjRef or);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MarshaledObject(object obj, class System.Runtime.Remoting.ObjRef or) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Services.ITrackingHandler.MarshaledObject(System.Object,System.Runtime.Remoting.ObjRef)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MarshaledObject (obj As Object, or As ObjRef)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MarshaledObject(System::Object ^ obj, System::Runtime::Remoting::ObjRef ^ or);" />
      <MemberSignature Language="F#" Value="abstract member MarshaledObject : obj * System.Runtime.Remoting.ObjRef -&gt; unit" Usage="iTrackingHandler.MarshaledObject (obj, or)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="or" Type="System.Runtime.Remoting.ObjRef" />
      </Parameters>
      <Docs>
        <param name="obj">Objeto cuyas referencias se han calculado.</param>
        <param name="or">
          <see cref="T:System.Runtime.Remoting.ObjRef" /> obtenida del cálculo de referencias y representa el objeto especificado.</param>
        <summary>Notifica a la instancia actual que ya se han calculado las referencias de un objeto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo implementar este método. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Runtime.Remoting.Services.ITrackingHandler> interfaz.  
  
 [!code-csharp[System.Runtime.Remoting.Services.TrackingServices#31](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Services.TrackingServices/CS/trackinghandler.cs#31)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnmarshaledObject">
      <MemberSignature Language="C#" Value="public void UnmarshaledObject (object obj, System.Runtime.Remoting.ObjRef or);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnmarshaledObject(object obj, class System.Runtime.Remoting.ObjRef or) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Services.ITrackingHandler.UnmarshaledObject(System.Object,System.Runtime.Remoting.ObjRef)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnmarshaledObject (obj As Object, or As ObjRef)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnmarshaledObject(System::Object ^ obj, System::Runtime::Remoting::ObjRef ^ or);" />
      <MemberSignature Language="F#" Value="abstract member UnmarshaledObject : obj * System.Runtime.Remoting.ObjRef -&gt; unit" Usage="iTrackingHandler.UnmarshaledObject (obj, or)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="or" Type="System.Runtime.Remoting.ObjRef" />
      </Parameters>
      <Docs>
        <param name="obj">Objeto cuyas referencias se han resuelto.</param>
        <param name="or">
          <see cref="T:System.Runtime.Remoting.ObjRef" /> que representa el objeto especificado.</param>
        <summary>Notifica a la instancia actual que ya se han resuelto las referencias de un objeto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo implementar este método. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Runtime.Remoting.Services.ITrackingHandler> interfaz.  
  
 [!code-csharp[System.Runtime.Remoting.Services.TrackingServices#32](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Services.TrackingServices/CS/trackinghandler.cs#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>