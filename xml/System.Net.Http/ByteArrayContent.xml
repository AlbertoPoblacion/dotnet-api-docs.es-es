<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ByteArrayContent.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d06b98425feeb50a3962c2d861064a3e184394fc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d06b98425feeb50a3962c2d861064a3e184394fc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Http.ByteArrayContent">
          <source>Provides HTTP content based on a byte array.</source>
          <target state="translated">Proporciona contenido HTTP basado en una matriz de bytes.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Net.Http.ByteArrayContent">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[])">
          <source>The content used to initialize the <ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph>.</source>
          <target state="translated">Contenido usado para inicializar <ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="content" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor del parámetro <ph id="ph1">&lt;paramref name="content" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>The content used to initialize the <ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph>.</source>
          <target state="translated">Contenido usado para inicializar <ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>The offset, in bytes, in the <bpt id="p1">&lt;c&gt;</bpt>content<ept id="p1">&lt;/c&gt;</ept> parameter used to initialize the <ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph>.</source>
          <target state="translated">Desplazamiento, en bytes, del parámetro <bpt id="p1">&lt;c&gt;</bpt>content<ept id="p1">&lt;/c&gt;</ept> usado para inicializar <ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes in the <bpt id="p1">&lt;c&gt;</bpt>content<ept id="p1">&lt;/c&gt;</ept> starting from the <bpt id="p2">&lt;c&gt;</bpt>offset<ept id="p2">&lt;/c&gt;</ept> parameter used to initialize the <ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph>.</source>
          <target state="translated">Número de bytes de <bpt id="p1">&lt;c&gt;</bpt>content<ept id="p1">&lt;/c&gt;</ept> a partir del parámetro <bpt id="p2">&lt;c&gt;</bpt>offset<ept id="p2">&lt;/c&gt;</ept> usado para inicializar <ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>Only the range specified by the <ph id="ph1">`offset`</ph> parameter and the <ph id="ph2">`count`</ph>  parameter is used as content.</source>
          <target state="translated">Solo se cambia el intervalo especificado por el <ph id="ph1">`offset`</ph> parámetro y el <ph id="ph2">`count`</ph> parámetro se utiliza como contenido.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>Syntax</source>
          <target state="translated">Sintaxis</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="content" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor del parámetro <ph id="ph1">&lt;paramref name="content" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> parameter is less than zero.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> parameter is greater than the length of content specified by the <ph id="ph2">&lt;paramref name="content" /&gt;</ph> parameter.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> es mayor que la longitud del contenido que especifica el parámetro <ph id="ph2">&lt;paramref name="content" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="count" /&gt;</ph> parameter is less than zero.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="count" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="count" /&gt;</ph> parameter is greater than the length of content specified by the <ph id="ph2">&lt;paramref name="content" /&gt;</ph> parameter - minus the <ph id="ph3">&lt;paramref name="offset" /&gt;</ph> parameter.</source>
          <target state="translated">El valor del parámetro <ph id="ph1">&lt;paramref name="count" /&gt;</ph> es mayor que la longitud del contenido que especifica <ph id="ph2">&lt;paramref name="content" /&gt;</ph> menos el parámetro <ph id="ph3">&lt;paramref name="offset" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync">
          <source>Creates an HTTP content stream as an asynchronous operation for reading whose backing store is memory from the <ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph>.</source>
          <target state="translated">Crea una secuencia de contenido HTTP como una operación asincrónica para lectura cuya memoria auxiliar es memoria procedente del objeto <ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Objeto de tarea que representa la operación asincrónica.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync">
          <source>This operation will not block.</source>
          <target state="translated">Esta operación no se bloqueará.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after all of the content stream has been created.</source>
          <target state="translated">El valor devuelto <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> objeto se completará después de que todos los de la secuencia de contenido se ha creado.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>The target stream.</source>
          <target state="translated">Secuencia de destino.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>Information about the transport, like channel binding token.</source>
          <target state="translated">Información sobre el transporte, como el token de enlace de canal.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>This parameter may be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Este parámetro puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>Serialize and write the byte array provided in the constructor to an HTTP content stream as an asynchronous operation.</source>
          <target state="translated">Serialice y escriba la matriz de bytes proporcionada en el constructor en una secuencia de contenido HTTP como operación asincrónica.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Objeto de tarea que representa la operación asincrónica.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>This operation does not block.</source>
          <target state="translated">Esta operación no se bloquea.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>When the returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object completes, the whole byte array has been written to the <ph id="ph2">`stream`</ph> parameter.</source>
          <target state="translated">Cuando el valor devuelto <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> objeto completa, la matriz de bytes todo se ha escrito en el <ph id="ph2">`stream`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
          <source>The length in bytes of the byte array.</source>
          <target state="translated">Longitud en bytes de la matriz.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
          <source>Determines whether a byte array has a valid length in bytes.</source>
          <target state="translated">Determina si una matriz de bytes tiene una longitud válida en bytes.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is a valid length; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="length" /&gt;</ph> es un longitud válida; de lo contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Http.ByteArrayContent.TryComputeLength%2A&gt;</ph> method gives a derived content type the ability to calculate the content length.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Http.ByteArrayContent.TryComputeLength%2A&gt;</ph> método proporciona un tipo de contenido derivado de la capacidad para calcular la longitud del contenido.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
          <source>This is useful for content types which are able to easily calculate the content length.</source>
          <target state="translated">Esto es útil para los tipos de contenido que se pueden calcular con facilidad la longitud del contenido.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
          <source>If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Si calcular la longitud del contenido no es posible o costoso (requieren que el sistema para almacenar en búfer todo el contenido que podría ser costoso o requieren que el sistema para asignar una gran cantidad de memoria la serialización), este método puede devolver <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
          <source>If this method returns <ph id="ph1">`false`</ph>, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.</source>
          <target state="translated">Si este método devuelve <ph id="ph1">`false`</ph>, esto implica que se necesita fragmentada o debe se almacenan en búfer el contenido antes de enviarse al servidor.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
          <source>This method always returned <ph id="ph1">`true`</ph> for <ph id="ph2">&lt;xref:System.Net.Http.ByteArrayContent&gt;</ph>.</source>
          <target state="translated">Este método siempre devuelve <ph id="ph1">`true`</ph> para <ph id="ph2">&lt;xref:System.Net.Http.ByteArrayContent&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>