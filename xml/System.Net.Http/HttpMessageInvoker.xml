<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpMessageInvoker.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac527f95261cf1e0fddae6f88df51aa00a856363734.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">27f95261cf1e0fddae6f88df51aa00a856363734</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpMessageInvoker">
          <source>A specialty class that allows applications to call the <ph id="ph1">&lt;see cref="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" /&gt;</ph> method on an HTTP handler chain.</source>
          <target state="translated">Clase especializada que permite que las aplicaciones llamen al método <ph id="ph1">&lt;see cref="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" /&gt;</ph> en una cadena de controlador HTTP.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpMessageInvoker">
          <source>This class is the base type for <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> and other message originators.</source>
          <target state="translated">Esta clase es el tipo base para <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> y otros remitentes de mensajes.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpMessageInvoker">
          <source>Most applications that are connecting to a web site will use one of the <ph id="ph1">&lt;xref:System.Net.Http.HttpClient.SendAsync%2A&gt;</ph> methods on the <ph id="ph2">&lt;xref:System.Net.Http.HttpClient&gt;</ph> class.</source>
          <target state="translated">La mayoría de las aplicaciones que se conectan a un sitio web usará uno de los <ph id="ph1">&lt;xref:System.Net.Http.HttpClient.SendAsync%2A&gt;</ph> métodos en la <ph id="ph2">&lt;xref:System.Net.Http.HttpClient&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpMessageInvoker">
          <source>Initializes an instance of a <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageInvoker" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una instancia de una clase <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageInvoker" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageHandler" /&gt;</ph> responsible for processing the HTTP response messages.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageHandler" /&gt;</ph> responsable de procesar los mensajes de respuesta HTTP.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)">
          <source>Initializes an instance of a <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageInvoker" /&gt;</ph> class with a specific <ph id="ph2">&lt;see cref="T:System.Net.Http.HttpMessageHandler" /&gt;</ph>.</source>
          <target state="translated">Inicializa una instancia de una clase <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageInvoker" /&gt;</ph> con un <ph id="ph2">&lt;see cref="T:System.Net.Http.HttpMessageHandler" /&gt;</ph> específico.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageHandler" /&gt;</ph> responsible for processing the HTTP response messages.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageHandler" /&gt;</ph> responsable de procesar los mensajes de respuesta HTTP.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the inner handler should be disposed of by Dispose(), <ph id="ph2">&lt;see langword="false" /&gt;</ph> if you intend to reuse the inner handler.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si Dispose() debe desechar el controlador interno; es <ph id="ph2">&lt;see langword="false" /&gt;</ph> si piensa reutilizar el controlador interno.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
          <source>Initializes an instance of a <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageInvoker" /&gt;</ph> class with a specific <ph id="ph2">&lt;see cref="T:System.Net.Http.HttpMessageHandler" /&gt;</ph>.</source>
          <target state="translated">Inicializa una instancia de una clase <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageInvoker" /&gt;</ph> con un <ph id="ph2">&lt;see cref="T:System.Net.Http.HttpMessageHandler" /&gt;</ph> específico.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpMessageInvoker">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageInvoker" /&gt;</ph> and optionally disposes of the managed resources.</source>
          <target state="translated">Libera los recursos no administrados que usa el objeto <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageInvoker" /&gt;</ph> y, de forma opcional, desecha los recursos administrados.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpMessageInvoker.Dispose">
          <source>Releases the unmanaged resources and disposes of the managed resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageInvoker" /&gt;</ph>.</source>
          <target state="translated">Libera los recursos no administrados y desecha los recursos administrados que usa <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageInvoker" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to releases only unmanaged resources.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar los recursos administrados y no administrados; es <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar sólo los recursos no administrados.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageInvoker" /&gt;</ph> and optionally disposes of the managed resources.</source>
          <target state="translated">Libera los recursos no administrados que usa el objeto <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageInvoker" /&gt;</ph> y, de forma opcional, desecha los recursos administrados.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The HTTP request message to send.</source>
          <target state="translated">Mensaje de la solicitud HTTP que se va a enviar.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The cancellation token to cancel operation.</source>
          <target state="translated">Token de cancelación para cancelar la operación.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>Send an HTTP request as an asynchronous operation.</source>
          <target state="translated">Envía una solicitud HTTP como una operación asincrónica.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Objeto de tarea que representa la operación asincrónica.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">Esta operación no se bloqueará.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete once the entire response including content is read.</source>
          <target state="translated">El valor devuelto <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> objeto se completará una vez que se lee la respuesta completa, incluido el contenido.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>Most applications that are connecting to a web site will use one of the <ph id="ph1">&lt;xref:System.Net.Http.HttpClient.SendAsync%2A&gt;</ph> methods on the <ph id="ph2">&lt;xref:System.Net.Http.HttpClient&gt;</ph> class.</source>
          <target state="translated">La mayoría de las aplicaciones que se conectan a un sitio web usará uno de los <ph id="ph1">&lt;xref:System.Net.Http.HttpClient.SendAsync%2A&gt;</ph> métodos en la <ph id="ph2">&lt;xref:System.Net.Http.HttpClient&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="request" /&gt;</ph> was <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;paramref name="request" /&gt;</ph> era <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>