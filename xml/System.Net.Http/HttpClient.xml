<Type Name="HttpClient" FullName="System.Net.Http.HttpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e5eec269a5b6b2dd2306a26615bf7156cdc95518" />
    <Meta Name="ms.sourcegitcommit" Value="1699faabfa691bcec226e9c5879fdae10a86b548" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="09/26/2018" />
    <Meta Name="ms.locfileid" Value="47189086" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpClient : System.Net.Http.HttpMessageInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpClient extends System.Net.Http.HttpMessageInvoker" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.HttpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpClient&#xA;Inherits HttpMessageInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpClient : System::Net::Http::HttpMessageInvoker" />
  <TypeSignature Language="F#" Value="type HttpClient = class&#xA;    inherit HttpMessageInvoker" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.HttpMessageInvoker</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ba16a-101">Proporciona una clase base para enviar solicitudes HTTP y recibir respuestas HTTP de un recurso identificado por un URI.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ba16a-101">Provides a base class for sending HTTP requests and receiving HTTP responses from a resource identified by a URI.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-102">El <xref:System.Net.Http.HttpClient> instancia de la clase actúa como una sesión para enviar solicitudes HTTP.</span><span class="sxs-lookup"><span data-stu-id="ba16a-102">The <xref:System.Net.Http.HttpClient> class instance acts as a session to send HTTP requests.</span></span> <span data-ttu-id="ba16a-103">Un <xref:System.Net.Http.HttpClient> instancia es una colección de configuración que se aplica a todas las solicitudes ejecutadas por esa instancia.</span><span class="sxs-lookup"><span data-stu-id="ba16a-103">An <xref:System.Net.Http.HttpClient> instance is a collection of settings applied to all requests executed by that instance.</span></span> <span data-ttu-id="ba16a-104">Además, cada <xref:System.Net.Http.HttpClient> instancia usa su propio grupo de conexiones, aislar sus solicitudes de solicitudes ejecutadas por otro <xref:System.Net.Http.HttpClient> instancias.</span><span class="sxs-lookup"><span data-stu-id="ba16a-104">In addition, every <xref:System.Net.Http.HttpClient> instance uses its own connection pool, isolating its requests from requests executed by other <xref:System.Net.Http.HttpClient> instances.</span></span>  
  
 <span data-ttu-id="ba16a-105">El <xref:System.Net.Http.HttpClient> también actúa como clase base para los clientes más específicos de HTTP.</span><span class="sxs-lookup"><span data-stu-id="ba16a-105">The <xref:System.Net.Http.HttpClient> also acts as a base class for more specific HTTP clients.</span></span> <span data-ttu-id="ba16a-106">Un ejemplo sería un FacebookHttpClient proporcionar métodos adicionales específicos de un servicio web de Facebook (un método GetFriends, por ejemplo).</span><span class="sxs-lookup"><span data-stu-id="ba16a-106">An example would be a FacebookHttpClient providing additional methods specific to a Facebook web service (a GetFriends method, for instance).</span></span> <span data-ttu-id="ba16a-107">Las clases derivadas no deben invalidar los métodos virtuales en la clase.</span><span class="sxs-lookup"><span data-stu-id="ba16a-107">Derived classes should not override the virtual methods on the class.</span></span> <span data-ttu-id="ba16a-108">En su lugar, use una sobrecarga del constructor que acepta <xref:System.Net.Http.HttpMessageHandler> para configurar cualquier previas y posteriores a la solicitud de procesamiento en su lugar.</span><span class="sxs-lookup"><span data-stu-id="ba16a-108">Instead, use a constructor overload that accepts <xref:System.Net.Http.HttpMessageHandler> to configure any pre- or post-request processing instead.</span></span>
  
 <span data-ttu-id="ba16a-109">De forma predeterminada en .NET Framework y Mono, <xref:System.Net.HttpWebRequest> se usa para enviar solicitudes al servidor.</span><span class="sxs-lookup"><span data-stu-id="ba16a-109">By default on .NET Framework and Mono, <xref:System.Net.HttpWebRequest> is used to send requests to the server.</span></span> <span data-ttu-id="ba16a-110">Este comportamiento puede modificarse mediante la especificación de un canal diferente en una de las sobrecargas de constructor que toma un <xref:System.Net.Http.HttpMessageHandler> instancia como parámetro.</span><span class="sxs-lookup"><span data-stu-id="ba16a-110">This behavior can be modified by specifying a different channel in one of the constructor overloads taking a <xref:System.Net.Http.HttpMessageHandler> instance as parameter.</span></span> <span data-ttu-id="ba16a-111">Si se requieren, características como la autenticación o almacenamiento en caché <xref:System.Net.Http.WebRequestHandler> se puede usar para configurar las opciones y la instancia puede pasarse al constructor.</span><span class="sxs-lookup"><span data-stu-id="ba16a-111">If features like authentication or caching are required, <xref:System.Net.Http.WebRequestHandler> can be used to configure settings and the instance can be passed to the constructor.</span></span> <span data-ttu-id="ba16a-112">El controlador devuelto se puede pasar a una de las sobrecargas de constructor que toma un <xref:System.Net.Http.HttpMessageHandler> parámetro.</span><span class="sxs-lookup"><span data-stu-id="ba16a-112">The returned handler can be passed to one of the constructor overloads taking a <xref:System.Net.Http.HttpMessageHandler> parameter.</span></span>  
  
 <span data-ttu-id="ba16a-113">Si una aplicación con <xref:System.Net.Http.HttpClient> y clases relacionadas del <xref:System.Net.Http> tiene la intención de espacio de nombres descargar grandes cantidades de datos (50 megabytes o más) y, después, la aplicación debe transmitir esas descargas y no usar el almacenamiento en búfer de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="ba16a-113">If an app using <xref:System.Net.Http.HttpClient> and related classes in the <xref:System.Net.Http> namespace intends to download large amounts of data (50 megabytes or more), then the app should stream those downloads and not use the default buffering.</span></span> <span data-ttu-id="ba16a-114">Si se usa el almacenamiento en búfer de forma predeterminada el uso de memoria de cliente obtendrá muy grande, lo que puede producir esencialmente una reducción del rendimiento.</span><span class="sxs-lookup"><span data-stu-id="ba16a-114">If the default buffering is used the client memory usage will get very large, potentially resulting in substantially reduced performance.</span></span>  
  
 <span data-ttu-id="ba16a-115">Los siguientes métodos son seguros para subprocesos:</span><span class="sxs-lookup"><span data-stu-id="ba16a-115">The following methods are thread safe:</span></span>  
  
1.  <xref:System.Net.Http.HttpClient.CancelPendingRequests%2A>  
  
2.  <xref:System.Net.Http.HttpClient.DeleteAsync%2A>  
  
3.  <xref:System.Net.Http.HttpClient.GetAsync%2A>  
  
4.  <xref:System.Net.Http.HttpClient.GetByteArrayAsync%2A>  
  
5.  <xref:System.Net.Http.HttpClient.GetStreamAsync%2A>  
  
6.  <xref:System.Net.Http.HttpClient.GetStringAsync%2A>  
  
7.  <xref:System.Net.Http.HttpClient.PostAsync%2A>  
  
8.  <xref:System.Net.Http.HttpClient.PutAsync%2A>  
  
9. <xref:System.Net.Http.HttpClient.SendAsync%2A>  
  
 <span data-ttu-id="ba16a-116"><xref:System.Net.Http.HttpClient> está pensado para que se crea una instancia y volver a usar durante la vida de una aplicación.</span><span class="sxs-lookup"><span data-stu-id="ba16a-116"><xref:System.Net.Http.HttpClient> is intended to be instantiated once and re-used throughout the life of an application.</span></span> <span data-ttu-id="ba16a-117">Crear una instancia de una clase HttpClient para cada solicitud agotará al número de sockets disponibles con cargas pesadas.</span><span class="sxs-lookup"><span data-stu-id="ba16a-117">Instantiating an HttpClient class for every request will exhaust the number of sockets available under heavy loads.</span></span> <span data-ttu-id="ba16a-118">Esto provocará errores SocketException.</span><span class="sxs-lookup"><span data-stu-id="ba16a-118">This will result in SocketException errors.</span></span> <span data-ttu-id="ba16a-119">A continuación es un ejemplo de uso de HttpClient correctamente.</span><span class="sxs-lookup"><span data-stu-id="ba16a-119">Below is an example using HttpClient correctly.</span></span>  
  
```csharp
public class GoodController : ApiController
{
    // OK
    private static readonly HttpClient HttpClient;

    static GoodController()
    {
        HttpClient = new HttpClient();
    }
}
```  
  
<span data-ttu-id="ba16a-120">El <xref:System.Net.Http.HttpClient> es una API de alto nivel que encapsula la funcionalidad de nivel inferior disponible en cada plataforma donde se ejecuta.</span><span class="sxs-lookup"><span data-stu-id="ba16a-120">The <xref:System.Net.Http.HttpClient> is a high-level API that wraps the lower-level functionality available on each platform where it runs.</span></span>

<span data-ttu-id="ba16a-121">En cada plataforma, <xref:System.Net.Http.HttpClient> intenta utilizar el mejor transporte disponible:</span><span class="sxs-lookup"><span data-stu-id="ba16a-121">On each platform, <xref:System.Net.Http.HttpClient> tries to use the best available transport:</span></span>

| <span data-ttu-id="ba16a-122">**Host/tiempo de ejecución**</span><span class="sxs-lookup"><span data-stu-id="ba16a-122">**Host/Runtime**</span></span>            | <span data-ttu-id="ba16a-123">**Back-end**</span><span class="sxs-lookup"><span data-stu-id="ba16a-123">**Backend**</span></span>                                                                               |
| --------------------------- | ----------------------------------------------------------------------------------------- |
| <span data-ttu-id="ba16a-124">Windows y .NET Framework</span><span class="sxs-lookup"><span data-stu-id="ba16a-124">Windows/.NET Framework</span></span>      | <xref:System.Net.HttpWebRequest>                                                          |
| <span data-ttu-id="ba16a-125">Windows/Mono</span><span class="sxs-lookup"><span data-stu-id="ba16a-125">Windows/Mono</span></span>                | <xref:System.Net.HttpWebRequest>                                                          |
| <span data-ttu-id="ba16a-126">Windows o UWP</span><span class="sxs-lookup"><span data-stu-id="ba16a-126">Windows/UWP</span></span>                 | <span data-ttu-id="ba16a-127">Windows nativo <xref:System.Net.Http.WinHttpHandler> (compatible con HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="ba16a-127">Windows native <xref:System.Net.Http.WinHttpHandler> (HTTP 2.0 capable)</span></span>                   |
| <span data-ttu-id="ba16a-128">Windows o .NET Core</span><span class="sxs-lookup"><span data-stu-id="ba16a-128">Windows/.NET Core</span></span>           | <span data-ttu-id="ba16a-129">Windows nativo <xref:System.Net.Http.WinHttpHandler> (compatible con HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="ba16a-129">Windows native <xref:System.Net.Http.WinHttpHandler> (HTTP 2.0 capable)</span></span>                   |
| <span data-ttu-id="ba16a-130">Android/Xamarin</span><span class="sxs-lookup"><span data-stu-id="ba16a-130">Android/Xamarin</span></span>             | <span data-ttu-id="ba16a-131">Si se selecciona en tiempo de compilación.</span><span class="sxs-lookup"><span data-stu-id="ba16a-131">Selected at build-time.</span></span> <span data-ttu-id="ba16a-132">Puede usar <xref:System.Net.HttpWebRequest> o configurarse para usar nativo de Android [`HttpURLConnection`](https://developer.xamarin.com/api/type/Java.Net.HttpURLConnection/)</span><span class="sxs-lookup"><span data-stu-id="ba16a-132">Can either use <xref:System.Net.HttpWebRequest> or be configured to use Android's native [`HttpURLConnection`](https://developer.xamarin.com/api/type/Java.Net.HttpURLConnection/)</span></span> |
| <span data-ttu-id="ba16a-133">iOS, tvOS, watchOS/Xamarin</span><span class="sxs-lookup"><span data-stu-id="ba16a-133">iOS, tvOS, watchOS/Xamarin</span></span>  | <span data-ttu-id="ba16a-134">Si se selecciona en tiempo de compilación.</span><span class="sxs-lookup"><span data-stu-id="ba16a-134">Selected at build-time.</span></span> <span data-ttu-id="ba16a-135">Puede usar <xref:System.Net.HttpWebRequest> o configurarse para usar Apple [ `NSUrlSession` ](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/) (compatible con HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="ba16a-135">Can either use <xref:System.Net.HttpWebRequest> or be configured to use Apple's [`NSUrlSession`](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/) (HTTP 2.0 capable)</span></span> |
| <span data-ttu-id="ba16a-136">macOS/Xamarin</span><span class="sxs-lookup"><span data-stu-id="ba16a-136">macOS/Xamarin</span></span>               | <span data-ttu-id="ba16a-137">Si se selecciona en tiempo de compilación.</span><span class="sxs-lookup"><span data-stu-id="ba16a-137">Selected at build-time.</span></span> <span data-ttu-id="ba16a-138">Puede usar <xref:System.Net.HttpWebRequest> o configurarse para usar Apple [ `NSUrlSession` ](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/) (compatible con HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="ba16a-138">Can either use <xref:System.Net.HttpWebRequest> or be configured to use Apple's [`NSUrlSession`](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/) (HTTP 2.0 capable)</span></span> |
| <span data-ttu-id="ba16a-139">macOS/Mono</span><span class="sxs-lookup"><span data-stu-id="ba16a-139">macOS/Mono</span></span>                  | <xref:System.Net.HttpWebRequest>                                                                          |
| <span data-ttu-id="ba16a-140">Mac OS y .NET Core</span><span class="sxs-lookup"><span data-stu-id="ba16a-140">macOS/.NET Core</span></span>             | <span data-ttu-id="ba16a-141">`libcurl`-en función de transporte HTTP (compatible con HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="ba16a-141">`libcurl`-based HTTP transport (HTTP 2.0 capable)</span></span>                                         |
| <span data-ttu-id="ba16a-142">Linux/Mono</span><span class="sxs-lookup"><span data-stu-id="ba16a-142">Linux/Mono</span></span>                  | <xref:System.Net.HttpWebRequest>                                                          |
| <span data-ttu-id="ba16a-143">Linux o .NET Core</span><span class="sxs-lookup"><span data-stu-id="ba16a-143">Linux/.NET Core</span></span>             | <span data-ttu-id="ba16a-144">`libcurl`-en función de transporte HTTP (compatible con HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="ba16a-144">`libcurl`-based HTTP transport (HTTP 2.0 capable)</span></span>                                         |

<span data-ttu-id="ba16a-145">Los usuarios también pueden configurar un transporte específico para <xref:System.Net.Http.HttpClient> invocando el <xref:System.Net.Http.HttpClient.%23ctor*> constructor que toma un <xref:System.Net.Http.HttpMessageHandler>.</span><span class="sxs-lookup"><span data-stu-id="ba16a-145">Users can also configure a specific transport for <xref:System.Net.Http.HttpClient> by invoking the <xref:System.Net.Http.HttpClient.%23ctor*> constructor that takes an <xref:System.Net.Http.HttpMessageHandler>.</span></span>

### <a name="httpclient-and-net-core"></a><span data-ttu-id="ba16a-146">HttpClient y .NET Core</span><span class="sxs-lookup"><span data-stu-id="ba16a-146">HttpClient and .NET Core</span></span>

<span data-ttu-id="ba16a-147">A partir de .NET Core 2.1, la <xref:System.Net.Http.SocketsHttpHandler?displayProperty=nameWithType> en lugar de la clase `HttpClientHandler` proporciona la implementación usa clases de redes de alto nivel HTTP como `HttpClient`.</span><span class="sxs-lookup"><span data-stu-id="ba16a-147">Starting with .NET Core 2.1, the <xref:System.Net.Http.SocketsHttpHandler?displayProperty=nameWithType> class instead of `HttpClientHandler` provides the implementation used by higher-level HTTP networking classes such as `HttpClient`.</span></span> <span data-ttu-id="ba16a-148">Puede configurar la aplicación para usar el antiguo <xref:System.Net.Http.HttpClientHandler?displayProperty=nameWithType> en su lugar, al llamar a la <xref:System.AppContext.SetSwitch%2A> método como sigue:</span><span class="sxs-lookup"><span data-stu-id="ba16a-148">You can configure your application to use the older <xref:System.Net.Http.HttpClientHandler?displayProperty=nameWithType> instead by calling the <xref:System.AppContext.SetSwitch%2A> method as follows:</span></span>

```csharp
AppContext.SetSwitch("System.Net.Http.useSocketsHttpHandler", false);
```

```vb
AppContext.SetSwitch("System.Net.Http.useSocketsHttpHandler", False)
``` 
  
## Examples  
 [!code-csharp[System.Net.Http.HttpClient#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.net.http.httpclient/cs/source.cs#1)]  
  
 <span data-ttu-id="ba16a-149">El ejemplo de código anterior usa un `async Task Main()` punto de entrada.</span><span class="sxs-lookup"><span data-stu-id="ba16a-149">The preceding code example uses an `async Task Main()` entry point.</span></span> <span data-ttu-id="ba16a-150">Esta característica requiere C# 7.1 o posterior.</span><span class="sxs-lookup"><span data-stu-id="ba16a-150">That feature requires C# 7.1 or later.</span></span>
 
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkID=245696">
      <span data-ttu-id="ba16a-151">Conectarse a un servicio web</span>
      <span class="sxs-lookup">
        <span data-stu-id="ba16a-151">Connecting to a web service</span>
      </span>
    </related>
    <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=245697">
      <span data-ttu-id="ba16a-152">Inicio rápido: Conectarse mediante HttpClient</span>
      <span class="sxs-lookup">
        <span data-stu-id="ba16a-152">Quickstart: Connecting using HttpClient</span>
      </span>
    </related>
    <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=245699">
      <span data-ttu-id="ba16a-153">Cómo usar controladores HttpClient</span>
      <span class="sxs-lookup">
        <span data-stu-id="ba16a-153">How to use HttpClient handlers</span>
      </span>
    </related>
    <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=245698">
      <span data-ttu-id="ba16a-154">Cómo proteger conexiones HttpClient</span>
      <span class="sxs-lookup">
        <span data-stu-id="ba16a-154">How to secure HttpClient connections</span>
      </span>
    </related>
    <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=242550">
      <span data-ttu-id="ba16a-155">Ejemplo de HttpClient</span>
      <span class="sxs-lookup">
        <span data-stu-id="ba16a-155">HttpClient Sample</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ba16a-156">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-156">Initializes a new instance of the <see cref="T:System.Net.Http.HttpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-157"><xref:System.Net.Http.HttpClient> está pensado para que se crea una instancia y volver a usar durante la vida de una aplicación.</span><span class="sxs-lookup"><span data-stu-id="ba16a-157"><xref:System.Net.Http.HttpClient> is intended to be instantiated once and re-used throughout the life of an application.</span></span> <span data-ttu-id="ba16a-158">Crear una instancia de una clase HttpClient para cada solicitud agotará al número de sockets disponibles con cargas pesadas.</span><span class="sxs-lookup"><span data-stu-id="ba16a-158">Instantiating an HttpClient class for every request will exhaust the number of sockets available under heavy loads.</span></span> <span data-ttu-id="ba16a-159">Esto provocará errores SocketException.</span><span class="sxs-lookup"><span data-stu-id="ba16a-159">This will result in SocketException errors.</span></span> <span data-ttu-id="ba16a-160">A continuación es un ejemplo de uso de HttpClient correctamente.</span><span class="sxs-lookup"><span data-stu-id="ba16a-160">Below is an example using HttpClient correctly.</span></span>  
  
```csharp  
public class GoodController : ApiController  
{  
    // OK  
    private static readonly HttpClient HttpClient;  
  
    static GoodController()  
    {  
        HttpClient = new HttpClient();  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ba16a-161">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-161">Initializes a new instance of the <see cref="T:System.Net.Http.HttpClient" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClient (System.Net.Http.HttpMessageHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Http.HttpMessageHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As HttpMessageHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpClient(System::Net::Http::HttpMessageHandler ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Net.Http.HttpClient : System.Net.Http.HttpMessageHandler -&gt; System.Net.Http.HttpClient" Usage="new System.Net.Http.HttpClient handler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Net.Http.HttpMessageHandler" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="ba16a-162">Pila de controlador HTTP que se va a usar para enviar solicitudes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-162">The HTTP handler stack to use for sending requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-163">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpClient" /> con un controlador específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-163">Initializes a new instance of the <see cref="T:System.Net.Http.HttpClient" /> class with a specific handler.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-164">`handler` se eliminará mediante una llamada a [HttpClient.Dispose](xref:System.Net.Http.HttpMessageInvoker.Dispose).</span><span class="sxs-lookup"><span data-stu-id="ba16a-164">`handler` will be disposed of by calling [HttpClient.Dispose](xref:System.Net.Http.HttpMessageInvoker.Dispose).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-165">El valor de <paramref name="handler" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-165">The <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClient (System.Net.Http.HttpMessageHandler handler, bool disposeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Http.HttpMessageHandler handler, bool disposeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As HttpMessageHandler, disposeHandler As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpClient(System::Net::Http::HttpMessageHandler ^ handler, bool disposeHandler);" />
      <MemberSignature Language="F#" Value="new System.Net.Http.HttpClient : System.Net.Http.HttpMessageHandler * bool -&gt; System.Net.Http.HttpClient" Usage="new System.Net.Http.HttpClient (handler, disposeHandler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Net.Http.HttpMessageHandler" />
        <Parameter Name="disposeHandler" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="ba16a-166">
            <see cref="T:System.Net.Http.HttpMessageHandler" /> responsable de procesar los mensajes de respuesta HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-166">The <see cref="T:System.Net.Http.HttpMessageHandler" /> responsible for processing the HTTP response messages.</span>
          </span>
        </param>
        <param name="disposeHandler">
          <span data-ttu-id="ba16a-167">Es <see langword="true" /> si [HttpClient.Dispose](xref:System.Net.Http.HttpMessageInvoker.Dispose) desecha el controlador interno, <see langword="false" /> si piensa volver a usar el controlador interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-167">
              <see langword="true" /> if the inner handler should be disposed of by [HttpClient.Dispose](xref:System.Net.Http.HttpMessageInvoker.Dispose), <see langword="false" /> if you intend to reuse the inner handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-168">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpClient" /> con un controlador específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-168">Initializes a new instance of the <see cref="T:System.Net.Http.HttpClient" /> class with a specific handler.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-169">El valor de <paramref name="handler" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-169">The <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseAddress">
      <MemberSignature Language="C#" Value="public Uri BaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClient.BaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseAddress : Uri with get, set" Usage="System.Net.Http.HttpClient.BaseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba16a-170">Obtiene o establece la dirección base de Identificador uniforme de recursos (URI) del recurso de Internet utilizado cuando se envían solicitudes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-170">Gets or sets the base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba16a-171">La dirección base de Identificador uniforme de recursos (URI) del recurso de Internet utilizado cuando se envían solicitudes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-171">The base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-172">Al enviar un <xref:System.Net.Http.HttpRequestMessage> con un Uri relativo, el Uri del mensaje se agregará a la <xref:System.Net.Http.HttpClient.BaseAddress%2A> propiedad para crear un Uri absoluto.</span><span class="sxs-lookup"><span data-stu-id="ba16a-172">When sending a <xref:System.Net.Http.HttpRequestMessage> with a relative Uri, the message Uri will be added to the <xref:System.Net.Http.HttpClient.BaseAddress%2A> property to create an absolute Uri.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelPendingRequests">
      <MemberSignature Language="C#" Value="public void CancelPendingRequests ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelPendingRequests() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.CancelPendingRequests" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelPendingRequests ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelPendingRequests();" />
      <MemberSignature Language="F#" Value="member this.CancelPendingRequests : unit -&gt; unit" Usage="httpClient.CancelPendingRequests " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ba16a-173">Cancela todas las solicitudes pendientes en esta instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-173">Cancel all pending requests on this instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-174">Después de llamar a este método, el <xref:System.Net.Http.HttpClient> instancia todavía puede utilizarse para ejecutar solicitudes adicionales.</span><span class="sxs-lookup"><span data-stu-id="ba16a-174">After calling this method, the <xref:System.Net.Http.HttpClient> instance can still be used to execute additional requests.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRequestHeaders">
      <MemberSignature Language="C#" Value="public System.Net.Http.Headers.HttpRequestHeaders DefaultRequestHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Http.Headers.HttpRequestHeaders DefaultRequestHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClient.DefaultRequestHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultRequestHeaders As HttpRequestHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Http::Headers::HttpRequestHeaders ^ DefaultRequestHeaders { System::Net::Http::Headers::HttpRequestHeaders ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultRequestHeaders : System.Net.Http.Headers.HttpRequestHeaders" Usage="System.Net.Http.HttpClient.DefaultRequestHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.Headers.HttpRequestHeaders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba16a-175">Obtiene los encabezados que se deben enviar con cada solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-175">Gets the headers which should be sent with each request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba16a-176">Encabezados que se deben enviar con cada solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-176">The headers which should be sent with each request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-177">Encabezados establecidos en esta propiedad no es necesario para que se vuelva a establecer en los mensajes de solicitud.</span><span class="sxs-lookup"><span data-stu-id="ba16a-177">Headers set on this property don't need to be set on request messages again.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ba16a-178">Envía una solicitud DELETE al URI especificado como una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-178">Send a DELETE request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; DeleteAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.DeleteAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteAsync (requestUri As String) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ DeleteAsync(System::String ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.DeleteAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.DeleteAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="ba16a-179">URI al que se envía la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-179">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-180">Envía una solicitud DELETE al URI especificado como una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-180">Send a DELETE request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-181">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-181">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-182">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-182">This operation will not block.</span></span> <span data-ttu-id="ba16a-183">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de que se lee la respuesta completa (incluido el contenido).</span><span class="sxs-lookup"><span data-stu-id="ba16a-183">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-184">El valor de <paramref name="requestUri" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-184">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ba16a-185">La instancia <see cref="T:System.Net.Http.HttpClient" /> ya envió el mensaje de solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-185">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-186">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-186">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; DeleteAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteAsync (requestUri As Uri) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ DeleteAsync(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.DeleteAsync : Uri -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.DeleteAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="ba16a-187">URI al que se envía la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-187">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-188">Envía una solicitud DELETE al URI especificado como una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-188">Send a DELETE request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-189">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-189">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-190">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-190">This operation will not block.</span></span> <span data-ttu-id="ba16a-191">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de que se lee la respuesta completa (incluido el contenido).</span><span class="sxs-lookup"><span data-stu-id="ba16a-191">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-192">El valor de <paramref name="requestUri" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-192">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ba16a-193">La instancia <see cref="T:System.Net.Http.HttpClient" /> ya envió el mensaje de solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-193">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-194">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-194">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (string requestUri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; DeleteAsync(string requestUri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ DeleteAsync(System::String ^ requestUri, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.DeleteAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.DeleteAsync (requestUri, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="ba16a-195">URI al que se envía la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-195">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ba16a-196">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-196">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-197">Envía una solicitud DELETE al URI especificado con un token de cancelación como operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-197">Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-198">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-198">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-199">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-199">This operation will not block.</span></span> <span data-ttu-id="ba16a-200">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de que se lee la respuesta completa (incluido el contenido).</span><span class="sxs-lookup"><span data-stu-id="ba16a-200">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-201">El valor de <paramref name="requestUri" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-201">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ba16a-202">La instancia <see cref="T:System.Net.Http.HttpClient" /> ya envió el mensaje de solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-202">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-203">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-203">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (Uri requestUri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; DeleteAsync(class System.Uri requestUri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ DeleteAsync(Uri ^ requestUri, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.DeleteAsync : Uri * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.DeleteAsync (requestUri, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="ba16a-204">URI al que se envía la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-204">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ba16a-205">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-205">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-206">Envía una solicitud DELETE al URI especificado con un token de cancelación como operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-206">Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-207">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-207">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-208">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-208">This operation will not block.</span></span> <span data-ttu-id="ba16a-209">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de que se lee la respuesta completa (incluido el contenido).</span><span class="sxs-lookup"><span data-stu-id="ba16a-209">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-210">El valor de <paramref name="requestUri" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-210">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ba16a-211">La instancia <see cref="T:System.Net.Http.HttpClient" /> ya envió el mensaje de solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-211">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-212">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-212">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="httpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="ba16a-213">Es <see langword="true" /> para liberar los recursos administrados y no administrados; es <see langword="false" /> para liberar sólo los recursos no administrados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-213">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-214">Libera los recursos no administrados que usa el objeto <see cref="T:System.Net.Http.HttpClient" /> y, de forma opcional, desecha los recursos administrados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-214">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpClient" /> and optionally disposes of the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-215">Este método se llama por el público `Dispose()` método y el <xref:System.Object.Finalize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ba16a-215">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="ba16a-216">`Dispose()` invoca el protegido `Dispose(Boolean)` método con el `disposing` parámetro establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="ba16a-216">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="ba16a-217"><xref:System.Object.Finalize%2A> invoca `Dispose` con `disposing` establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="ba16a-217"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="ba16a-218">Cuando el parámetro `disposing` es `true`, este método libera todos los recursos retenidos por los objetos administrados a los que el control <xref:System.Net.Http.HttpClient> hace referencia.</span><span class="sxs-lookup"><span data-stu-id="ba16a-218">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpClient> references.</span></span> <span data-ttu-id="ba16a-219">Este método invoca al método `Dispose()` de cada uno de los objetos a los que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="ba16a-219">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 <span data-ttu-id="ba16a-220">Cuando se llama a este método, el <xref:System.Net.Http.HttpClient.CancelPendingRequests%2A> método se llama para anular todas las solicitudes pendientes.</span><span class="sxs-lookup"><span data-stu-id="ba16a-220">When this method is called, the <xref:System.Net.Http.HttpClient.CancelPendingRequests%2A> method is called to abort all pending requests.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ba16a-221">Envía una solicitud GET al URI especificado como una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-221">Send a GET request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-222">No bloqueará la operación.</span><span class="sxs-lookup"><span data-stu-id="ba16a-222">The operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (requestUri As String) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(System::String ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.GetAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.GetAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="ba16a-223">URI al que se envía la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-223">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-224">Envía una solicitud GET al URI especificado como una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-224">Send a GET request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-225">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-225">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-226">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-226">This operation will not block.</span></span> <span data-ttu-id="ba16a-227">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de que se lee la respuesta completa (incluido el contenido).</span><span class="sxs-lookup"><span data-stu-id="ba16a-227">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-228">El valor de <paramref name="requestUri" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-228">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-229">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-229">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (requestUri As Uri) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.GetAsync : Uri -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.GetAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="ba16a-230">URI al que se envía la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-230">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-231">Envía una solicitud GET al URI especificado como una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-231">Send a GET request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-232">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-232">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-233">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-233">This operation will not block.</span></span> <span data-ttu-id="ba16a-234">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de que se lee la respuesta completa (incluido el contenido).</span><span class="sxs-lookup"><span data-stu-id="ba16a-234">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-235">El valor de <paramref name="requestUri" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-235">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-236">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-236">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri, System.Net.Http.HttpCompletionOption completionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(string requestUri, valuetype System.Net.Http.HttpCompletionOption completionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (requestUri As String, completionOption As HttpCompletionOption) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(System::String ^ requestUri, System::Net::Http::HttpCompletionOption completionOption);" />
      <MemberSignature Language="F#" Value="member this.GetAsync : string * System.Net.Http.HttpCompletionOption -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.GetAsync (requestUri, completionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="ba16a-237">URI al que se envía la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-237">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="ba16a-238">Valor de opción de finalización de HTTP que indica cuándo se debe considerar completada la operación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-238">An HTTP completion option value that indicates when the operation should be considered completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-239">Envía una solicitud GET al URI especificado con una opción de finalización de HTTP como operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-239">Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-240">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-240">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-241">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-241">This operation will not block.</span></span> <span data-ttu-id="ba16a-242">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto completará según el `completionOption` parámetro después de que se lee la parte o toda la respuesta (incluido el contenido).</span><span class="sxs-lookup"><span data-stu-id="ba16a-242">The returned <xref:System.Threading.Tasks.Task%601> object will complete based on the `completionOption` parameter after the part or all of the response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-243">El valor de <paramref name="requestUri" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-243">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-244">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-244">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(string requestUri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(System::String ^ requestUri, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.GetAsync (requestUri, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="ba16a-245">URI al que se envía la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-245">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ba16a-246">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-246">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-247">Envía una solicitud GET al URI especificado con un token de cancelación como operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-247">Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-248">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-248">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-249">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-249">This operation will not block.</span></span> <span data-ttu-id="ba16a-250">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de que se lee la respuesta completa (incluido el contenido).</span><span class="sxs-lookup"><span data-stu-id="ba16a-250">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-251">El valor de <paramref name="requestUri" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-251">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-252">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-252">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri, System.Net.Http.HttpCompletionOption completionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(class System.Uri requestUri, valuetype System.Net.Http.HttpCompletionOption completionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (requestUri As Uri, completionOption As HttpCompletionOption) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(Uri ^ requestUri, System::Net::Http::HttpCompletionOption completionOption);" />
      <MemberSignature Language="F#" Value="member this.GetAsync : Uri * System.Net.Http.HttpCompletionOption -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.GetAsync (requestUri, completionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="ba16a-253">URI al que se envía la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-253">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="ba16a-254">Valor de opción de finalización de HTTP que indica cuándo se debe considerar completada la operación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-254">An HTTP completion option value that indicates when the operation should be considered completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-255">Envía una solicitud GET al URI especificado con una opción de finalización de HTTP como operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-255">Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-256">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-256">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-257">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-257">This operation will not block.</span></span> <span data-ttu-id="ba16a-258">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto completará según el `completionOption` parámetro después de que se lee la parte o toda la respuesta (incluido el contenido).</span><span class="sxs-lookup"><span data-stu-id="ba16a-258">The returned <xref:System.Threading.Tasks.Task%601> object will complete based on the `completionOption` parameter after the part or all of the response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-259">El valor de <paramref name="requestUri" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-259">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-260">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-260">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(class System.Uri requestUri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(Uri ^ requestUri, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.GetAsync : Uri * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.GetAsync (requestUri, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="ba16a-261">URI al que se envía la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-261">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ba16a-262">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-262">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-263">Envía una solicitud GET al URI especificado con un token de cancelación como operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-263">Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-264">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-264">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-265">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-265">This operation will not block.</span></span> <span data-ttu-id="ba16a-266">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de que se lee la respuesta completa (incluido el contenido).</span><span class="sxs-lookup"><span data-stu-id="ba16a-266">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-267">El valor de <paramref name="requestUri" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-267">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-268">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-268">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(string requestUri, valuetype System.Net.Http.HttpCompletionOption completionOption, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(System::String ^ requestUri, System::Net::Http::HttpCompletionOption completionOption, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.GetAsync : string * System.Net.Http.HttpCompletionOption * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.GetAsync (requestUri, completionOption, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="ba16a-269">URI al que se envía la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-269">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="ba16a-270">Valor de opción de finalización de HTTP que indica cuándo se debe considerar completada la operación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-270">An HTTP  completion option value that indicates when the operation should be considered completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ba16a-271">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-271">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-272">Envía una solicitud GET al URI especificado con una opción de finalización de HTTP y un token de cancelación como operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-272">Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-273">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-273">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-274">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-274">This operation will not block.</span></span> <span data-ttu-id="ba16a-275">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto completará según el `completionOption` parámetro después de que se lee la parte o toda la respuesta (incluido el contenido).</span><span class="sxs-lookup"><span data-stu-id="ba16a-275">The returned <xref:System.Threading.Tasks.Task%601> object will complete based on the `completionOption` parameter after the part or all of the response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-276">El valor de <paramref name="requestUri" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-276">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-277">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-277">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(class System.Uri requestUri, valuetype System.Net.Http.HttpCompletionOption completionOption, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(Uri ^ requestUri, System::Net::Http::HttpCompletionOption completionOption, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.GetAsync : Uri * System.Net.Http.HttpCompletionOption * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.GetAsync (requestUri, completionOption, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="ba16a-278">URI al que se envía la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-278">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="ba16a-279">Valor de opción de finalización de HTTP que indica cuándo se debe considerar completada la operación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-279">An HTTP  completion option value that indicates when the operation should be considered completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ba16a-280">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-280">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-281">Envía una solicitud GET al URI especificado con una opción de finalización de HTTP y un token de cancelación como operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-281">Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-282">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-282">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-283">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-283">This operation will not block.</span></span> <span data-ttu-id="ba16a-284">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto completará según el `completionOption` parámetro después de que se lee la parte o toda la respuesta (incluido el contenido).</span><span class="sxs-lookup"><span data-stu-id="ba16a-284">The returned <xref:System.Threading.Tasks.Task%601> object will complete based on the `completionOption` parameter after the part or all of the response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-285">El valor de <paramref name="requestUri" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-285">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-286">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-286">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteArrayAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ba16a-287">Envía una solicitud GET al URI especificado y devuelve el cuerpo de la respuesta como una matriz de bytes en una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-287">Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-288">No bloqueará la operación.</span><span class="sxs-lookup"><span data-stu-id="ba16a-288">The operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteArrayAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; GetByteArrayAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; GetByteArrayAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByteArrayAsync (requestUri As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ GetByteArrayAsync(System::String ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.GetByteArrayAsync : string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="httpClient.GetByteArrayAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="ba16a-289">URI al que se envía la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-289">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-290">Envía una solicitud GET al URI especificado y devuelve el cuerpo de la respuesta como una matriz de bytes en una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-290">Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-291">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-291">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-292">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-292">This operation will not block.</span></span> <span data-ttu-id="ba16a-293">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de que se lee el cuerpo de la respuesta completa.</span><span class="sxs-lookup"><span data-stu-id="ba16a-293">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-294">El valor de <paramref name="requestUri" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-294">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-295">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-295">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetByteArrayAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; GetByteArrayAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; GetByteArrayAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByteArrayAsync (requestUri As Uri) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ GetByteArrayAsync(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.GetByteArrayAsync : Uri -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="httpClient.GetByteArrayAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="ba16a-296">URI al que se envía la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-296">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-297">Envía una solicitud GET al URI especificado y devuelve el cuerpo de la respuesta como una matriz de bytes en una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-297">Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-298">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-298">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-299">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-299">This operation will not block.</span></span> <span data-ttu-id="ba16a-300">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de que se lee el cuerpo de la respuesta completa.</span><span class="sxs-lookup"><span data-stu-id="ba16a-300">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-301">El valor de <paramref name="requestUri" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-301">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-302">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-302">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStreamAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ba16a-303">Envía una solicitud GET al URI especificado y devuelve el cuerpo de la respuesta como una secuencia en una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-303">Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-304">No bloqueará la operación.</span><span class="sxs-lookup"><span data-stu-id="ba16a-304">The operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStreamAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetStreamAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetStreamAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStreamAsync (requestUri As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ GetStreamAsync(System::String ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.GetStreamAsync : string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="httpClient.GetStreamAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="ba16a-305">URI al que se envía la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-305">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-306">Envía una solicitud GET al URI especificado y devuelve el cuerpo de la respuesta como una secuencia en una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-306">Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-307">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-307">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-308">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-308">This operation will not block.</span></span> <span data-ttu-id="ba16a-309">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de que se leen los encabezados de respuesta.</span><span class="sxs-lookup"><span data-stu-id="ba16a-309">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the response headers are read.</span></span> <span data-ttu-id="ba16a-310">Este método no lee ni almacenar en búfer el cuerpo de respuesta.</span><span class="sxs-lookup"><span data-stu-id="ba16a-310">This method does not read nor buffer the response body.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-311">El valor de <paramref name="requestUri" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-311">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-312">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-312">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStreamAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetStreamAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetStreamAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStreamAsync (requestUri As Uri) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ GetStreamAsync(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.GetStreamAsync : Uri -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="httpClient.GetStreamAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="ba16a-313">URI al que se envía la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-313">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-314">Envía una solicitud GET al URI especificado y devuelve el cuerpo de la respuesta como una secuencia en una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-314">Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-315">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-315">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-316">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-316">This operation will not block.</span></span> <span data-ttu-id="ba16a-317">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de que se leen los encabezados de respuesta.</span><span class="sxs-lookup"><span data-stu-id="ba16a-317">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the response headers are read.</span></span> <span data-ttu-id="ba16a-318">Este método no lee ni almacenar en búfer el cuerpo de respuesta.</span><span class="sxs-lookup"><span data-stu-id="ba16a-318">This method does not read nor buffer the response body.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-319">El valor de <paramref name="requestUri" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-319">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-320">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-320">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStringAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ba16a-321">Envía una solicitud GET al URI especificado y devuelve el cuerpo de la respuesta como una cadena en una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-321">Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-322">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-322">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; GetStringAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; GetStringAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetStringAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStringAsync (requestUri As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ GetStringAsync(System::String ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.GetStringAsync : string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="httpClient.GetStringAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="ba16a-323">URI al que se envía la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-323">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-324">Envía una solicitud GET al URI especificado y devuelve el cuerpo de la respuesta como una cadena en una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-324">Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-325">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-325">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-326">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-326">This operation will not block.</span></span> <span data-ttu-id="ba16a-327">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de que se lee el cuerpo de la respuesta completa.</span><span class="sxs-lookup"><span data-stu-id="ba16a-327">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-328">El valor de <paramref name="requestUri" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-328">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-329">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-329">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; GetStringAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; GetStringAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStringAsync (requestUri As Uri) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ GetStringAsync(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.GetStringAsync : Uri -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="httpClient.GetStringAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="ba16a-330">URI al que se envía la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-330">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-331">Envía una solicitud GET al URI especificado y devuelve el cuerpo de la respuesta como una cadena en una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-331">Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-332">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-332">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-333">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-333">This operation will not block.</span></span> <span data-ttu-id="ba16a-334">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de que se lee el cuerpo de la respuesta completa.</span><span class="sxs-lookup"><span data-stu-id="ba16a-334">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-335">El valor de <paramref name="requestUri" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-335">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-336">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-336">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MaxResponseContentBufferSize">
      <MemberSignature Language="C#" Value="public long MaxResponseContentBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxResponseContentBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxResponseContentBufferSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxResponseContentBufferSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxResponseContentBufferSize : int64 with get, set" Usage="System.Net.Http.HttpClient.MaxResponseContentBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba16a-337">Obtiene o establece el número máximo de bytes que se van a almacenar en búfer al leer el contenido de la respuesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-337">Gets or sets the maximum number of bytes to buffer when reading the response content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba16a-338">Número máximo de bytes que se van a almacenar en búfer al leer el contenido de la respuesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-338">The maximum number of bytes to buffer when reading the response content.</span>
          </span>
          <span data-ttu-id="ba16a-339">El valor predeterminado de esta propiedad es 2 gigabytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-339">The default value for this property is 2 gigabytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-340">Una aplicación puede establecer la <xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A> propiedad en un valor inferior para limitar el tamaño de la respuesta en búfer al leer la respuesta.</span><span class="sxs-lookup"><span data-stu-id="ba16a-340">An app can set the <xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A> property to a lower value to limit the size of the response to buffer when reading the response.</span></span> <span data-ttu-id="ba16a-341">Si el tamaño del contenido de respuesta es mayor que el <xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A> propiedad, se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="ba16a-341">If the size of the response content is greater than the  <xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A> property, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ba16a-342">El tamaño especificado es menor o igual que cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-342">The size specified is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ba16a-343">Ya se ha iniciado una operación en la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-343">An operation has already been started on the current instance.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ba16a-344">Se ha eliminado la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-344">The current instance has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PatchAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PatchAsync (string requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PatchAsync(string requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PatchAsync (requestUri As String, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PatchAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberSignature Language="F#" Value="member this.PatchAsync : string * System.Net.Http.HttpContent -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PatchAsync (requestUri, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">To be added.</param>
        <param name="content">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PatchAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PatchAsync (Uri requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PatchAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PatchAsync (requestUri As Uri, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PatchAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberSignature Language="F#" Value="member this.PatchAsync : Uri * System.Net.Http.HttpContent -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PatchAsync (requestUri, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">To be added.</param>
        <param name="content">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PatchAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PatchAsync (string requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PatchAsync(string requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PatchAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.PatchAsync : string * System.Net.Http.HttpContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PatchAsync (requestUri, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">To be added.</param>
        <param name="content">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PatchAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PatchAsync (Uri requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PatchAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PatchAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.PatchAsync : Uri * System.Net.Http.HttpContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PatchAsync (requestUri, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">To be added.</param>
        <param name="content">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PostAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ba16a-345">Envía una solicitud POST al URI especificado como una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-345">Send a POST request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-346">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-346">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="PostAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (string requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PostAsync(string requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PostAsync (requestUri As String, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PostAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberSignature Language="F#" Value="member this.PostAsync : string * System.Net.Http.HttpContent -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PostAsync (requestUri, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="ba16a-347">URI al que se envía la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-347">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="ba16a-348">Contenido de la solicitud HTTP que se envía al servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-348">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-349">Envía una solicitud POST al URI especificado como una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-349">Send a POST request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-350">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-350">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-351">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-351">This operation will not block.</span></span> <span data-ttu-id="ba16a-352">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de que se lee la respuesta completa (incluido el contenido).</span><span class="sxs-lookup"><span data-stu-id="ba16a-352">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-353">El valor de <paramref name="requestUri" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-353">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-354">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-354">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PostAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (Uri requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PostAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PostAsync (requestUri As Uri, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PostAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberSignature Language="F#" Value="member this.PostAsync : Uri * System.Net.Http.HttpContent -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PostAsync (requestUri, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="ba16a-355">URI al que se envía la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-355">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="ba16a-356">Contenido de la solicitud HTTP que se envía al servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-356">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-357">Envía una solicitud POST al URI especificado como una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-357">Send a POST request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-358">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-358">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-359">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-359">This operation will not block.</span></span> <span data-ttu-id="ba16a-360">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de que se lee la respuesta completa (incluido el contenido).</span><span class="sxs-lookup"><span data-stu-id="ba16a-360">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-361">El valor de <paramref name="requestUri" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-361">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-362">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-362">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PostAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (string requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PostAsync(string requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PostAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.PostAsync : string * System.Net.Http.HttpContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PostAsync (requestUri, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="ba16a-363">URI al que se envía la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-363">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="ba16a-364">Contenido de la solicitud HTTP que se envía al servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-364">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ba16a-365">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-365">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-366">Envía una solicitud POST con un token de cancelación como una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-366">Send a POST request with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-367">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-367">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-368">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-368">This operation will not block.</span></span> <span data-ttu-id="ba16a-369">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de que se lee la respuesta completa (incluido el contenido).</span><span class="sxs-lookup"><span data-stu-id="ba16a-369">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-370">El valor de <paramref name="requestUri" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-370">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-371">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-371">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PostAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (Uri requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PostAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PostAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.PostAsync : Uri * System.Net.Http.HttpContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PostAsync (requestUri, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="ba16a-372">URI al que se envía la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-372">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="ba16a-373">Contenido de la solicitud HTTP que se envía al servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-373">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ba16a-374">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-374">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-375">Envía una solicitud POST con un token de cancelación como una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-375">Send a POST request with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-376">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-376">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-377">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-377">This operation will not block.</span></span> <span data-ttu-id="ba16a-378">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de que se lee la respuesta completa (incluido el contenido).</span><span class="sxs-lookup"><span data-stu-id="ba16a-378">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-379">El valor de <paramref name="requestUri" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-379">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-380">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-380">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="PutAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ba16a-381">Envía una solicitud PUT al URI especificado como una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-381">Send a PUT request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-382">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-382">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="PutAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (string requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PutAsync(string requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PutAsync (requestUri As String, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PutAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberSignature Language="F#" Value="member this.PutAsync : string * System.Net.Http.HttpContent -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PutAsync (requestUri, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="ba16a-383">URI al que se envía la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-383">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="ba16a-384">Contenido de la solicitud HTTP que se envía al servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-384">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-385">Envía una solicitud PUT al URI especificado como una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-385">Send a PUT request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-386">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-386">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-387">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-387">This operation will not block.</span></span> <span data-ttu-id="ba16a-388">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de que se lee la respuesta completa (incluido el contenido).</span><span class="sxs-lookup"><span data-stu-id="ba16a-388">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-389">El valor de <paramref name="requestUri" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-389">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-390">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-390">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PutAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (Uri requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PutAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PutAsync (requestUri As Uri, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PutAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberSignature Language="F#" Value="member this.PutAsync : Uri * System.Net.Http.HttpContent -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PutAsync (requestUri, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="ba16a-391">URI al que se envía la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-391">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="ba16a-392">Contenido de la solicitud HTTP que se envía al servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-392">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-393">Envía una solicitud PUT al URI especificado como una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-393">Send a PUT request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-394">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-394">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-395">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-395">This operation will not block.</span></span> <span data-ttu-id="ba16a-396">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de que se lee la respuesta completa (incluido el contenido).</span><span class="sxs-lookup"><span data-stu-id="ba16a-396">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-397">El valor de <paramref name="requestUri" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-397">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-398">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-398">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PutAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (string requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PutAsync(string requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PutAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.PutAsync : string * System.Net.Http.HttpContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PutAsync (requestUri, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="ba16a-399">URI al que se envía la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-399">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="ba16a-400">Contenido de la solicitud HTTP que se envía al servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-400">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ba16a-401">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-401">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-402">Envía una solicitud PUT con un token de cancelación como una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-402">Send a PUT request with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-403">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-403">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-404">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-404">This operation will not block.</span></span> <span data-ttu-id="ba16a-405">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de que se lee la respuesta completa (incluido el contenido).</span><span class="sxs-lookup"><span data-stu-id="ba16a-405">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-406">El valor de <paramref name="requestUri" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-406">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-407">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-407">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PutAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (Uri requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PutAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PutAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.PutAsync : Uri * System.Net.Http.HttpContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PutAsync (requestUri, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="ba16a-408">URI al que se envía la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-408">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="ba16a-409">Contenido de la solicitud HTTP que se envía al servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-409">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ba16a-410">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-410">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-411">Envía una solicitud PUT con un token de cancelación como una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-411">Send a PUT request with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-412">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-412">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-413">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-413">This operation will not block.</span></span> <span data-ttu-id="ba16a-414">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará después de que se lee la respuesta completa (incluido el contenido).</span><span class="sxs-lookup"><span data-stu-id="ba16a-414">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-415">El valor de <paramref name="requestUri" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-415">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-416">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-416">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ba16a-417">Envía una solicitud HTTP como una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-417">Send an HTTP request as an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-418">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-418">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (request As HttpRequestMessage) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : System.Net.Http.HttpRequestMessage -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.SendAsync request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="ba16a-419">Mensaje de la solicitud HTTP que se va a enviar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-419">The HTTP request message to send.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-420">Envía una solicitud HTTP como una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-420">Send an HTTP request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-421">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-421">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-422">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-422">This operation will not block.</span></span> <span data-ttu-id="ba16a-423">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará una vez que se lee la respuesta completa, incluido el contenido.</span><span class="sxs-lookup"><span data-stu-id="ba16a-423">The returned <xref:System.Threading.Tasks.Task%601> object will complete once the entire response including content is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-424">El valor de <paramref name="request" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-424">The <paramref name="request" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ba16a-425">La instancia <see cref="T:System.Net.Http.HttpClient" /> ya envió el mensaje de solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-425">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-426">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-426">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpCompletionOption completionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Net.Http.HttpCompletionOption completionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (request As HttpRequestMessage, completionOption As HttpCompletionOption) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Net::Http::HttpCompletionOption completionOption);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : System.Net.Http.HttpRequestMessage * System.Net.Http.HttpCompletionOption -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.SendAsync (request, completionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="ba16a-427">Mensaje de la solicitud HTTP que se va a enviar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-427">The HTTP request message to send.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="ba16a-428">Cuándo se debe completar la operación (tan pronto como haya una respuesta disponible o después de leer todo el contenido de la respuesta).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-428">When the operation should complete (as soon as a response is available or after reading the whole response content).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-429">Envía una solicitud HTTP como una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-429">Send an HTTP request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-430">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-430">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-431">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-431">This operation will not block.</span></span> <span data-ttu-id="ba16a-432">Dependiendo del valor de la `completionOption` parámetro, el valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará en cuanto hay disponible una respuesta o la respuesta completa, incluido el contenido se lee.</span><span class="sxs-lookup"><span data-stu-id="ba16a-432">Depending on the value of the `completionOption` parameter, the returned <xref:System.Threading.Tasks.Task%601> object will complete as soon as a response is available or the entire response including content is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-433">El valor de <paramref name="request" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-433">The <paramref name="request" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ba16a-434">La instancia <see cref="T:System.Net.Http.HttpClient" /> ya envió el mensaje de solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-434">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-435">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-435">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : System.Net.Http.HttpRequestMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.SendAsync (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="ba16a-436">Mensaje de la solicitud HTTP que se va a enviar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-436">The HTTP request message to send.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ba16a-437">Token de cancelación para cancelar la operación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-437">The cancellation token to cancel operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-438">Envía una solicitud HTTP como una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-438">Send an HTTP request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-439">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-439">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-440">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-440">This operation will not block.</span></span> <span data-ttu-id="ba16a-441">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará una vez que se lee la respuesta completa, incluido el contenido.</span><span class="sxs-lookup"><span data-stu-id="ba16a-441">The returned <xref:System.Threading.Tasks.Task%601> object will complete once the entire response including content is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-442">El valor de <paramref name="request" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-442">The <paramref name="request" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ba16a-443">La instancia <see cref="T:System.Net.Http.HttpClient" /> ya envió el mensaje de solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-443">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-444">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-444">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Net.Http.HttpCompletionOption completionOption, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Net::Http::HttpCompletionOption completionOption, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : System.Net.Http.HttpRequestMessage * System.Net.Http.HttpCompletionOption * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.SendAsync (request, completionOption, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="ba16a-445">Mensaje de la solicitud HTTP que se va a enviar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-445">The HTTP request message to send.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="ba16a-446">Cuándo se debe completar la operación (tan pronto como haya una respuesta disponible o después de leer todo el contenido de la respuesta).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-446">When the operation should complete (as soon as a response is available or after reading the whole response content).</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ba16a-447">Token de cancelación para cancelar la operación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-447">The cancellation token to cancel operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba16a-448">Envía una solicitud HTTP como una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-448">Send an HTTP request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba16a-449">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-449">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-450">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="ba16a-450">This operation will not block.</span></span> <span data-ttu-id="ba16a-451">Dependiendo del valor de la `completionOption` parámetro, el valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará en cuanto hay disponible una respuesta o la respuesta completa, incluido el contenido se lee.</span><span class="sxs-lookup"><span data-stu-id="ba16a-451">Depending on the value of the `completionOption` parameter, the returned <xref:System.Threading.Tasks.Task%601> object will complete as soon as a response is available or the entire response including content is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba16a-452">El valor de <paramref name="request" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-452">The <paramref name="request" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ba16a-453">La instancia <see cref="T:System.Net.Http.HttpClient" /> ya envió el mensaje de solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-453">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="ba16a-454">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-454">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public TimeSpan Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClient.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Timeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : TimeSpan with get, set" Usage="System.Net.Http.HttpClient.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba16a-455">Obtiene o establece el tiempo de espera hasta que se agota el tiempo de espera de la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-455">Gets or sets the timespan to wait before the request times out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba16a-456">El tiempo de espera hasta que se agota el tiempo de espera de la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-456">The timespan to wait before the request times out.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba16a-457">El valor predeterminado es 100.000 milisegundos (100 segundos).</span><span class="sxs-lookup"><span data-stu-id="ba16a-457">The default value is 100,000 milliseconds (100 seconds).</span></span>  
  
 <span data-ttu-id="ba16a-458">Para establecer un tiempo de espera infinito, establezca el valor de propiedad en <xref:System.Threading.Timeout.InfiniteTimeSpan>.</span><span class="sxs-lookup"><span data-stu-id="ba16a-458">To set an infinite timeout, set the property value to <xref:System.Threading.Timeout.InfiniteTimeSpan>.</span></span>  
  
 <span data-ttu-id="ba16a-459">Una consulta de sistema de nombres de dominio (DNS) puede tardar hasta 15 segundos para devolver o tiempo de espera. Si la solicitud contiene un nombre de host que requiere resolución y establece <xref:System.Net.Http.HttpClient.Timeout%2A> en un valor inferior a 15 segundos, puede tardar 15 segundos o más antes de un <xref:System.Net.WebException> se produce para indicar un tiempo de espera de la solicitud.</span><span class="sxs-lookup"><span data-stu-id="ba16a-459">A Domain Name System (DNS) query may take up to 15 seconds to return or time out. If your request contains a host name that requires resolution and you set <xref:System.Net.Http.HttpClient.Timeout%2A> to a value less than 15 seconds, it may take 15 seconds or more before a <xref:System.Net.WebException> is thrown to indicate a timeout on your request.</span></span>  
  
 <span data-ttu-id="ba16a-460">Se aplicará el mismo tiempo de espera para todas las solicitudes mediante este <xref:System.Net.Http.HttpClient> instancia.</span><span class="sxs-lookup"><span data-stu-id="ba16a-460">The same timeout will apply for all requests using this <xref:System.Net.Http.HttpClient> instance.</span></span>  <span data-ttu-id="ba16a-461">También se pueden establecer distintos tiempos de espera para las solicitudes individuales mediante un <xref:System.Threading.CancellationTokenSource> en una tarea.</span><span class="sxs-lookup"><span data-stu-id="ba16a-461">You may also set different timeouts for individual requests using a <xref:System.Threading.CancellationTokenSource> on a task.</span></span> <span data-ttu-id="ba16a-462">Tenga en cuenta que se aplicará sólo el menor de los dos tiempos de espera.</span><span class="sxs-lookup"><span data-stu-id="ba16a-462">Note that only the shorter of the two timeouts will apply.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ba16a-463">El tiempo de espera especificado es menor o igual que cero y no es <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-463">The timeout specified is less than or equal to zero and is not <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ba16a-464">Ya se ha iniciado una operación en la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-464">An operation has already been started on the current instance.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ba16a-465">Se ha eliminado la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba16a-465">The current instance has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>