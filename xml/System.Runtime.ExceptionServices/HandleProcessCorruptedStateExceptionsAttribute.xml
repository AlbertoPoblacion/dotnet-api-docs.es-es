<Type Name="HandleProcessCorruptedStateExceptionsAttribute" FullName="System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="701c59e05a784e54200d5a17fe8ac504f275b94c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36539636" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HandleProcessCorruptedStateExceptionsAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HandleProcessCorruptedStateExceptionsAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HandleProcessCorruptedStateExceptionsAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class HandleProcessCorruptedStateExceptionsAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type HandleProcessCorruptedStateExceptionsAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Permite al código administrado controlar excepciones que indican un estado del proceso dañado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las excepciones de estado de proceso dañado son excepciones que indican que se ha dañado el estado de un proceso. No se recomienda ejecutar la aplicación en este estado.  
  
 De forma predeterminada, common language runtime (CLR) no entrega estas excepciones en código administrado y el `try` / `catch` bloques (y otras cláusulas de control de excepciones) no se invocan para ellos. Si está completamente seguro de que desea mantener el control de estas excepciones, debe aplicar el <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute> atributo al método cuyas cláusulas de control de excepciones que desea ejecutar. CLR ofrece la excepción del estado de proceso dañado para cláusulas de excepción es aplicable únicamente en los métodos que tienen tanto la <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute> y <xref:System.Security.SecurityCriticalAttribute> atributos.  
  
 También puede agregar al archivo de configuración de la aplicación. Así se asegurará de que las excepciones de estado dañado se entregan a los controladores de excepciones sin el <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute> o <xref:System.Security.SecurityCriticalAttribute> atributo. Este elemento de configuración no tiene ningún efecto en las aplicaciones que se compilan en versiones anteriores a la [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] pero que se ejecutan la [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] o posterior; excepciones de estado dañado continuarán entregarán para esas aplicaciones. El <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute> atributo se omite cuando se encuentra en el código de confianza parcial o transparente, porque un host de confianza no debe permitir un complemento que no se confía detectar y pasar por alto estas excepciones graves.  
  
 Para obtener más información sobre las excepciones de estado de proceso dañado, vea la entrada [controlar excepciones de estado dañado](http://go.microsoft.com/fwlink/?LinkID=179681) en el blog de CLR Inside Out.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HandleProcessCorruptedStateExceptionsAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HandleProcessCorruptedStateExceptionsAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>