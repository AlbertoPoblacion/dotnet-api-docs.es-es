<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SearchResultCollection.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51c015ee9bb7a835aa48ec5e907bafac4c4c67588.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c015ee9bb7a835aa48ec5e907bafac4c4c67588</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.DirectoryServices.SearchResultCollection">
          <source>The <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResultCollection" /&gt;</ph> class contains the <ph id="ph2">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> instances that the Active Directory hierarchy returned during a <ph id="ph3">&lt;see cref="T:System.DirectoryServices.DirectorySearcher" /&gt;</ph> query.</source>
          <target state="translated">La clase <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResultCollection" /&gt;</ph> contiene las instancias de <ph id="ph2">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> que la jerarquía de Active Directory ha devuelto durante una consulta <ph id="ph3">&lt;see cref="T:System.DirectoryServices.DirectorySearcher" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.DirectoryServices.SearchResultCollection">
          <source>Due to implementation restrictions, the <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> class cannot release all of its unmanaged resources when it is garbage collected.</source>
          <target state="translated">Debido a restricciones de implementación, la <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> clase no puede liberar todos sus recursos no administrados cuando resulta recolectado.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.DirectoryServices.SearchResultCollection">
          <source>To prevent a memory leak, you must call the <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> method when the <ph id="ph2">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> object is no longer needed.</source>
          <target state="translated">Para evitar una pérdida de memoria, debe llamar a la <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> método cuando el <ph id="ph2">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> objeto ya no es necesario.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.Contains(System.DirectoryServices.SearchResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> object to find.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> que se va a buscar.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.Contains(System.DirectoryServices.SearchResult)">
          <source>Determines if a specified <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> object is in this collection.</source>
          <target state="translated">Determina si un objeto <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> especificado está en la colección.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.Contains(System.DirectoryServices.SearchResult)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified property belongs to this collection; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si la propiedad especificada pertenece a la colección; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.CopyTo(System.DirectoryServices.SearchResult[],System.Int32)">
          <source>The array of <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> objects that receives the elements of this collection.</source>
          <target state="translated">Matriz de objetos <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> que recibe los elementos de esta colección.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.CopyTo(System.DirectoryServices.SearchResult[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>results<ept id="p1">&lt;/c&gt;</ept> where this method starts copying this collection.</source>
          <target state="translated">Índice de base cero de <bpt id="p1">&lt;c&gt;</bpt>results<ept id="p1">&lt;/c&gt;</ept> donde este método comienza a copiar esta colección.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.CopyTo(System.DirectoryServices.SearchResult[],System.Int32)">
          <source>Copies all <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> objects in this collection to the specific array, starting at the specified index in the target array.</source>
          <target state="translated">Copia todos los objetos <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> de esta colección en la matriz especificada, empezando por el índice especificado de la matriz de destino.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SearchResultCollection.Count">
          <source>Gets the number of <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> objects in this collection.</source>
          <target state="translated">Obtiene el número de objetos <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> de esta colección.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.Count">
          <source>The number of <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> objects in this collection.</source>
          <target state="translated">Número de objetos <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> de la colección.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.DirectoryServices.SearchResultCollection">
          <source>Releases all resources that are used by the <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResultCollection" /&gt;</ph> object.</source>
          <target state="translated">Libera todos los recursos que usa el objeto <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResultCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.Dispose">
          <source>Releases all resources that are used by the <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResultCollection" /&gt;</ph> object.</source>
          <target state="translated">Libera todos los recursos que usa el objeto <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResultCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> method, it allows the resources that are used by the <ph id="ph2">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> método, permite que los recursos utilizados por el <ph id="ph2">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> se reasignen para otros fines.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose">
          <source>For more information about <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Para obtener más información acerca de <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph>, consulte <bpt id="p1">[</bpt>limpiar recursos no administrados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose">
          <source>The garbage collector does not release memory for a <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> object.</source>
          <target state="translated">El recolector de elementos no utilizados no libera memoria para un <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose">
          <source>Therefore, an application must call the <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> method explicitly to prevent a memory leak.</source>
          <target state="translated">Por lo tanto, una aplicación debe llamar a la <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> método explícitamente para evitar una pérdida de memoria.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar tanto recursos administrados como no administrados; es <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar únicamente recursos no administrados.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources that are used by the <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResultCollection" /&gt;</ph> object and optionally releases the managed resources.</source>
          <target state="translated">Libera los recursos no administrados utilizados por el objeto <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResultCollection" /&gt;</ph> y, de forma opcional, libera los recursos administrados.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Se llama a este método público <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> método y <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> invokes the protected <ph id="ph2">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> se invoca el protegido <ph id="ph2">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> método con el <ph id="ph3">`disposing`</ph> parámetro establecido en <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invoca <ph id="ph2">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> con el <ph id="ph3">`disposing`</ph> parámetro establecido en <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources that are held by any managed objects that this <ph id="ph3">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> references.</source>
          <target state="translated">Cuando el <ph id="ph1">`disposing`</ph> parámetro es <ph id="ph2">`true`</ph>, este método libera todos los recursos retenidos por los objetos administrados que este <ph id="ph3">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> referencias.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
          <source>The garbage collector does not release memory for a <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> object.</source>
          <target state="translated">El recolector de elementos no utilizados no libera memoria para un <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> method explicitly to prevent a memory leak.</source>
          <target state="translated">Por lo tanto, debe llamar a la <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> método explícitamente para evitar una pérdida de memoria.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> method of each object in the collection.</source>
          <target state="translated">Este método invoca el <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> método de cada objeto de la colección.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;</ph> and <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Para obtener más información acerca de <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;</ph> y <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>, consulte <bpt id="p1">[</bpt>limpiar recursos no administrados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> y <bpt id="p2">[</bpt>reemplazar el método Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" /&gt;</ph> method can be called multiple times by other objects.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" /&gt;</ph> método puede recibir varias llamadas de otros objetos.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)" /&gt;</ph> method be careful not to reference objects that have been previously disposed of in an earlier call to the <ph id="ph2">&lt;see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" /&gt;</ph> method.</source>
          <target state="translated">Al reemplazar el <ph id="ph1">&lt;see cref="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)" /&gt;</ph> método tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a la <ph id="ph2">&lt;see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo implementar <ph id="ph1">&lt;see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" /&gt;</ph>, consulte <bpt id="p1">[</bpt>implementa un método Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.Finalize">
          <source>Overrides the <ph id="ph1">&lt;see cref="M:System.Object.Finalize" /&gt;</ph> method.</source>
          <target state="translated">Reemplaza el método <ph id="ph1">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.GetEnumerator">
          <source>Returns an enumerator that you can use to iterate through this collection.</source>
          <target state="translated">Devuelve un enumerador que puede utilizarse para recorrer en iteración la colección.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> object that you can use to iterate through this collection.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> que puede utilizarse para recorrer en iteración la colección.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SearchResultCollection.Handle">
          <source>Gets the handle that is returned by the <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> method that performs the actual search.</source>
          <target state="translated">Obtiene el identificador devuelto por el método <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> que realiza la búsqueda real.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SearchResultCollection.Handle">
          <source>For more information, see the <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> topic in the MSDN Library at <bpt id="p2">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p2">](http://msdn.microsoft.com/library)</ept>.</source>
          <target state="translated">Para más información, vea el tema <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> en MSDN Library (<bpt id="p2">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p2">](http://msdn.microsoft.com/library)</ept>).</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.Handle">
          <source>The ADS_SEARCH_HANDLE value that this collection uses.</source>
          <target state="translated">Valor ADS_SEARCH_HANDLE que la colección utiliza.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.Handle">
          <source>The  <ph id="ph1">&lt;xref:System.DirectoryServices.DirectorySearcher&gt;</ph> that created this collection calls the <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> method, which makes the query results available to the T:System.DirectoryServices.SearchResultCollection object.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.DirectoryServices.DirectorySearcher&gt;</ph> que creó esta colección llama el <bpt id="p1">[</bpt>IDirectorySearch:: ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> método, que hace que los resultados de la consulta estén disponibles para el objeto SearchResultCollection.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.Handle">
          <source>For more information, see the <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> topic in the MSDN Library at <bpt id="p2">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p2">](http://msdn.microsoft.com/library)</ept>.</source>
          <target state="translated">Para obtener más información, consulte el <bpt id="p1">[</bpt>IDirectorySearch:: ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> tema en MSDN Library en <bpt id="p2">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library</ph> <ept id="p2">](http://msdn.microsoft.com/library)</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.Handle">
          <source>Each time that a query is performed, a handle for the results of that query is associated with its  <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> object.</source>
          <target state="translated">Cada vez que se realiza una consulta, que está asociado un identificador para los resultados de esa consulta a su <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.Handle">
          <source>This handle corresponds to the search handle in ADSI.</source>
          <target state="translated">Este identificador se corresponde con el identificador de búsqueda de ADSI.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.Handle">
          <source>This handle persists until you call the <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;</ph> method on the <ph id="ph2">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> object, so you must call <ph id="ph3">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;</ph> to prevent a memory leak.</source>
          <target state="translated">Este identificador se conserva hasta que se llama a la <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;</ph> método en el <ph id="ph2">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> objeto, por lo que debe llamar a <ph id="ph3">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;</ph> para evitar una pérdida de memoria.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.Handle">
          <source>The garbage collector does not free memory for this particular object.</source>
          <target state="translated">El recolector de elementos no utilizados no libera memoria para este objeto en concreto.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.IndexOf(System.DirectoryServices.SearchResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> object to search for in this collection.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> que se va a buscar en esta colección.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.IndexOf(System.DirectoryServices.SearchResult)">
          <source>Returns the index of the first occurrence of the specified <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> object in this collection.</source>
          <target state="translated">Devuelve el índice de la primera aparición del objeto <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> especificado en esta colección.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.IndexOf(System.DirectoryServices.SearchResult)">
          <source>The zero-based index of the first matching object.</source>
          <target state="translated">Índice de base cero del primer objeto coincidente.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.IndexOf(System.DirectoryServices.SearchResult)">
          <source>Returns -1 if no member of this collection is identical to the <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> object.</source>
          <target state="translated">Devuelve -1 si ningún miembro de esta colección es idéntico al objeto <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)">
          <source>The zero-based index of the <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> object to retrieve.</source>
          <target state="translated">Índice de base cero del objeto <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> que se va a recuperar.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> object that is located at a specified index in this collection.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> que está ubicado en un índice especificado de la colección.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> object that is located at the specified index.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> que está ubicado en el índice especificado.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)">
          <source>In C#, this property is the indexer for the <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> class.</source>
          <target state="translated">En C#, esta propiedad es el indizador para la clase <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)">
          <source>In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.</source>
          <target state="translated">En JScript, puede usar las propiedades indizadas predeterminadas definidas por un tipo, pero no puede definir explícitamente sus propias.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)">
          <source>However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and with an index type of <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">Sin embargo, si se especifica el atributo expando en una clase proporciona automáticamente un valor predeterminado indizada propiedad cuyo tipo es Object y con un tipo de índice <ph id="ph1">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SearchResultCollection.PropertiesLoaded">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.DirectoryServices.DirectorySearcher" /&gt;</ph> properties that were specified before the search was executed.</source>
          <target state="translated">Obtiene las propiedades de <ph id="ph1">&lt;see cref="T:System.DirectoryServices.DirectorySearcher" /&gt;</ph> que se especificaron antes de ejecutarse la búsqueda.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.PropertiesLoaded">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the properties that were specified in the <ph id="ph2">&lt;see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /&gt;</ph> property collection before the search was executed.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contiene las propiedades que estaban especificadas en la colección de propiedades <ph id="ph2">&lt;see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /&gt;</ph> antes de ejecutarse la búsqueda.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> unidimensional que constituye el destino de los elementos copiados de <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated">La matriz <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> debe tener una indización de base cero.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Índice de base cero de <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> donde comienza la copia.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at a particular <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph> index.</source>
          <target state="translated">Copia los elementos de <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> en <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, empezando por un índice determinado de <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> es menor que cero.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> es multidimensional.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">El número de elementos de la <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> de origen es mayor que el espacio disponible desde <ph id="ph2">&lt;paramref name="index" /&gt;</ph> hasta el final de la <ph id="ph3">&lt;paramref name="array" /&gt;</ph> de destino.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">El tipo de la <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> de origen no puede convertirse automáticamente al tipo de la <ph id="ph2">&lt;paramref name="array" /&gt;</ph> de destino.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Obtiene un valor que indica si el acceso a la interfaz <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> está sincronizado (es seguro para subprocesos).</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el acceso a <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> está sincronizado (es seguro para subprocesos); de lo contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> returns an object, which can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> devuelve un objeto que puede utilizarse para sincronizar el acceso a <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized">
          <source>Most collection classes in the <ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph> namespace also implement a Synchronized method, which provides a synchronized wrapper around the underlying collection.</source>
          <target state="translated">Clases de colección mayoría en el <ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph> espacio de nombres también implementan un método Synchronized, que proporciona un contenedor sincronizado alrededor de la colección subyacente.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic, C#]</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> during the entire enumeration:</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo bloquear la colección utilizando el <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> durante toda la enumeración:</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Obtiene un objeto que se puede usar para sincronizar el acceso a <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Objeto que se puede usar para sincronizar el acceso a <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>For collections whose underlying store is not publicly available, the expected implementation is to return the current instance.</source>
          <target state="translated">Para las colecciones cuyo almacenamiento subyacente no esté disponible públicamente, la implementación esperada tan sólo debe devolver la instancia actual.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection's <ph id="ph1">`SyncRoot`</ph> property.</source>
          <target state="translated">Tenga en cuenta que el puntero a la instancia actual puede no ser suficiente para las colecciones que contienen otras colecciones; dichas colecciones deben devolver la colección subyacente <ph id="ph1">`SyncRoot`</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>Most collection classes in the <ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph> namespace also implement a <ph id="ph2">`Synchronized`</ph> method, which provides a synchronized wrapper around the underlying collection.</source>
          <target state="translated">La mayoría de las clases de colección del espacio de nombres <ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph> también implementan un método <ph id="ph2">`Synchronized`</ph> que proporciona un contenedor sincronizado alrededor de la colección subyacente.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>However, derived classes can provide their own synchronized version of the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">Sin embargo, las clases derivadas pueden proporcionar su propia versión sincronizada de la colección mediante la propiedad <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> of the collection, not directly on the collection.</source>
          <target state="translated">El código de sincronización debe realizar las operaciones en el <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> de la colección, no directamente en la colección.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">De este modo, se garantiza el funcionamiento correcto de las colecciones derivadas de otros objetos.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.</source>
          <target state="translated">En concreto, mantiene la sincronización correcta con otros subprocesos que podrían modificar al mismo tiempo la instancia de la colección.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>In the absence of a <ph id="ph1">`Synchronized`</ph> method on a collection, the expected usage for <ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> looks like this:</source>
          <target state="translated">En ausencia de un <ph id="ph1">`Synchronized`</ph> método en una colección, el uso esperado de <ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> tiene este aspecto:</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic, C#]</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> during the entire enumeration:</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo bloquear la colección utilizando el <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> durante toda la enumeración:</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>