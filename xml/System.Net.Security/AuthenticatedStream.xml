<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AuthenticatedStream.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50b832715225eb5210e665ec01b31aa01c2856f0d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b832715225eb5210e665ec01b31aa01c2856f0d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Security.AuthenticatedStream">
          <source>Provides methods for passing credentials across a stream and requesting or performing authentication for client-server applications.</source>
          <target state="translated">Proporciona métodos para pasar las credenciales a través de una secuencia y solicitar o realizar la autenticación para las aplicaciones de cliente-servidor</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.AuthenticatedStream">
          <source>This abstract class provides methods and properties that are common to authenticated streams.</source>
          <target state="translated">Esta clase abstracta proporciona métodos y propiedades que son comunes a las secuencias autenticadas.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.AuthenticatedStream">
          <source>Authenticated streams can provide authentication, data signing, and encryption services that can help maintain the integrity and confidentiality of data transmitted using the <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream.InnerStream%2A&gt;</ph>.</source>
          <target state="translated">Secuencias autenticadas pueden proporcionar autenticación, firma, de los datos y los servicios de cifrado que pueden ayudar a mantienen la integridad y confidencialidad de datos que se transmiten mediante el <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream.InnerStream%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.AuthenticatedStream">
          <source>The security protocol implemented by a class that derives from <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph> together with the security protocols supported on the client and server will determine the security features that are available to an application.</source>
          <target state="translated">El protocolo de seguridad que se implementa mediante una clase que deriva de <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph> junto con la seguridad de protocolos admitidos en el cliente y el servidor determinarán las características de seguridad que están disponibles para una aplicación.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.AuthenticatedStream">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> classes inherit from <ph id="ph3">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph> and implement the Negotiate and Secure Sockets Layer security protocols, respectively.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> y <ph id="ph2">&lt;xref:System.Net.Security.SslStream&gt;</ph> clases heredan de <ph id="ph3">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph> e implementar los protocolos de seguridad Negotiate y capa de Sockets seguros, respectivamente.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.AuthenticatedStream">
          <source>The following code example demonstrates displaying the properties of an authenticated stream.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo mostrar las propiedades de una secuencia autenticada.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.AuthenticatedStream">
          <source>The following members must be overridden in a derived class: <ph id="ph1">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsAuthenticated" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsEncrypted" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated" /&gt;</ph>, <ph id="ph4">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsServer" /&gt;</ph>, and <ph id="ph5">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsSigned" /&gt;</ph>.</source>
          <target state="translated">Los miembros siguientes se deben invalidar en una clase derivada: <ph id="ph1">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsAuthenticated" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsEncrypted" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated" /&gt;</ph>, <ph id="ph4">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsServer" /&gt;</ph>, y <ph id="ph5">&lt;see cref="P:System.Net.Security.AuthenticatedStream.IsSigned" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object used by the <ph id="ph2">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> for sending and receiving data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> que la clase <ph id="ph2">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> utiliza para enviar y recibir datos.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> that indicates whether closing this <ph id="ph2">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> object also closes <bpt id="p1">&lt;c&gt;</bpt>innerStream<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> que indica si al cerrar este objeto <ph id="ph2">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> también se cierra <bpt id="p1">&lt;c&gt;</bpt>innerStream<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>When you specify <ph id="ph1">`true`</ph> for the <ph id="ph2">`leaveStreamOpen`</ph> parameter, closing the <ph id="ph3">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph> has no effect on the <ph id="ph4">`innerStream`</ph> stream.</source>
          <target state="translated">Cuando se especifica <ph id="ph1">`true`</ph> para el <ph id="ph2">`leaveStreamOpen`</ph> parámetro, cerrar la <ph id="ph3">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph> no tiene ningún efecto sobre el <ph id="ph4">`innerStream`</ph> secuencia.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>This constructor is provided for implementers of authenticated streams, and can be called only by classes that are derived from <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph>.</source>
          <target state="translated">Este constructor se proporciona para los implementadores de secuencias autenticadas y puede ser invocado únicamente por las clases que se derivan de <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is equal to <ph id="ph2">&lt;see cref="F:System.IO.Stream.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> es igual a <ph id="ph2">&lt;see cref="F:System.IO.Stream.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar tanto recursos administrados como no administrados; es <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar únicamente recursos no administrados.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libera los recursos no administrados que utiliza <ph id="ph1">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> y libera los recursos administrados de forma opcional.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Se llama a este método público <ph id="ph1">`Dispose()`</ph> método y <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> se invoca el protegido <ph id="ph2">`Dispose(Boolean)`</ph> método con el <ph id="ph3">`disposing`</ph> parámetro establecido en <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invoca <ph id="ph2">`Dispose`</ph> con <ph id="ph3">`disposing`</ph> establecido en <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph> references.</source>
          <target state="translated">Cuando el <ph id="ph1">`disposing`</ph> del parámetro es true, este método libera todos los recursos retenidos por los objetos administrados que este <ph id="ph2">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph> referencias.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Este método invoca al método <ph id="ph1">`Dispose()`</ph> de cada uno de los objetos a los que se hace referencia.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> puede recibir varias llamadas de otros objetos.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Al reemplazar <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo implementar <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, consulte <bpt id="p1">[</bpt>implementa un método Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Para obtener más información acerca de <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> y <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, consulte <bpt id="p1">[</bpt>limpiar recursos no administrados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> y <bpt id="p2">[</bpt>reemplazar el método Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Net.Security.AuthenticatedStream.InnerStream">
          <source>Gets the stream used by this <ph id="ph1">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> for sending and receiving data.</source>
          <target state="translated">Obtiene la secuencia utilizado por esta <ph id="ph1">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> para enviar y recibir datos.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.InnerStream">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object.</source>
          <target state="translated">Un objeto <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.InnerStream">
          <source>Classes that inherit from <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph> can use this property to access the stream passed to the <ph id="ph2">&lt;xref:System.Net.Security.AuthenticatedStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29&gt;</ph>.</source>
          <target state="translated">Las clases que heredan de <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph> puede utilizar esta propiedad para tener acceso a la secuencia pasada a la <ph id="ph2">&lt;xref:System.Net.Security.AuthenticatedStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Net.Security.AuthenticatedStream.IsAuthenticated">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether authentication was successful.</source>
          <target state="translated">Obtiene un valor <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> que indica si la autenticación se realizó correctamente.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsAuthenticated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if successful authentication occurred; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si la autenticación se realizó correctamente; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsAuthenticated">
          <source>The methods called to perform authentication are defined in the classes that inherit from <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph>.</source>
          <target state="translated">Los métodos utilizados para realizar la autenticación se definen en las clases que heredan de <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsAuthenticated">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo mostrar el valor de esta propiedad.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Net.Security.AuthenticatedStream.IsEncrypted">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether data sent using this <ph id="ph2">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> is encrypted.</source>
          <target state="translated">Obtiene un valor de <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> que indica si están cifrados los datos enviados utilizando <ph id="ph2">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsEncrypted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si los datos se cifran antes de transmitirse a través de la red y se descifran al llegar al extremo remoto; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsEncrypted">
          <source>Encryption helps to protect the privacy of the data; namely, it helps to ensure that while data is in transit, it cannot be deciphered by third parties.</source>
          <target state="translated">El cifrado ayuda a proteger la privacidad de los datos; es decir, ayuda a garantizar que mientras están en tránsito, no se puede descifrar un tercero.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsEncrypted">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo mostrar el valor de esta propiedad.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether both server and client have been authenticated.</source>
          <target state="translated">Obtiene un valor de <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> que indica si se autenticaron tanto el cliente como el servidor.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the client and server have been authenticated; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si se han autenticado el cliente y el servidor; de lo contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated">
          <source>Not all security protocols support mutual authentication.</source>
          <target state="translated">No todos los protocolos de seguridad admiten la autenticación mutua.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated">
          <source>To determine whether mutual authentication is supported by the security protocol implemented in a class that inherits from <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph>, check the class documentation.</source>
          <target state="translated">Para determinar si la autenticación mutua es compatible con el protocolo de seguridad que se implementa en una clase que hereda de <ph id="ph1">&lt;xref:System.Net.Security.AuthenticatedStream&gt;</ph>, consulte la documentación de la clase.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo mostrar el valor de esta propiedad.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Net.Security.AuthenticatedStream.IsServer">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the local side of the connection was authenticated as the server.</source>
          <target state="translated">Obtiene un valor de <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> que indica si la parte local de la conexión se autenticó como servidor.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsServer">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the local endpoint was authenticated as the server side of a client-server authenticated connection; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the local endpoint was authenticated as the client.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph>, si el extremo local se autenticó como servidor de una conexión autenticada cliente-servidor; es <ph id="ph2">&lt;see langword="false" /&gt;</ph> si el extremo local se autenticó como cliente.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsServer">
          <source>Most security protocols used for client-server authentication define specific behavior and requirements for supplying credentials for authentication based on whether you are the client or the server.</source>
          <target state="translated">Mayoría protocolos de seguridad utilizados para la autenticación de cliente y servidor definen un comportamiento específico y los requisitos para proporcionar las credenciales para la autenticación en función de si el cliente o el servidor.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsServer">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo mostrar el valor de esta propiedad.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Net.Security.AuthenticatedStream.IsSigned">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the data sent using this stream is signed.</source>
          <target state="translated">Obtiene un valor <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> que indica si los datos enviados utilizando esta secuencia tienen signo.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsSigned">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the data is signed before being transmitted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si los datos se firman antes de transmitirse; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsSigned">
          <source>Data signing helps to protect the integrity of the data; namely, it helps the recipient determine whether the data has been tampered with while in transit.</source>
          <target state="translated">Firma de datos ayuda a proteger la integridad de los datos; es decir, ayuda al destinatario a determinar si se ha alterado los datos mientras están en tránsito.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.IsSigned">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo mostrar el valor de esta propiedad.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen">
          <source>Gets whether the stream used by this <ph id="ph1">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> for sending and receiving data has been left open.</source>
          <target state="translated">Obtiene si la secuencia utilizada por esta <ph id="ph1">&lt;see cref="T:System.Net.Security.AuthenticatedStream" /&gt;</ph> para enviar y recibir datos se ha dejado abierta.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the inner stream has been left open; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si la secuencia interna se ha dejado abierta; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen">
          <source>When set to <ph id="ph1">`true`</ph>, the stream passed to the constructor of this class will not be closed after the instance of this class is closed.</source>
          <target state="translated">Cuando se establece en <ph id="ph1">`true`</ph>, la secuencia pasada al constructor de esta clase no se cerrará después de cerrar la instancia de esta clase.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen">
          <source>When set to <ph id="ph1">`false`</ph>, closing the instance of this class will also close the underlined transport stream.</source>
          <target state="translated">Cuando se establece en <ph id="ph1">`false`</ph>, cierre la instancia de esta clase también se cerrará la secuencia de transporte subrayada.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen">
          <source>The default value of this property is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">El valor predeterminado de esta propiedad es <ph id="ph1">`false`</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>