<Type Name="NegotiateStream" FullName="System.Net.Security.NegotiateStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a91049778a482fee3308bf1cf44c8c630042c15e" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37478081" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NegotiateStream : System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NegotiateStream extends System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.NegotiateStream" />
  <TypeSignature Language="VB.NET" Value="Public Class NegotiateStream&#xA;Inherits AuthenticatedStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NegotiateStream : System::Net::Security::AuthenticatedStream" />
  <TypeSignature Language="F#" Value="type NegotiateStream = class&#xA;    inherit AuthenticatedStream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Security.AuthenticatedStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="5f267-101">Provides a stream that uses the Negotiate security protocol to authenticate the client, and optionally the server, in client-server communication.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5f267-101">Provides a stream that uses the Negotiate security protocol to authenticate the client, and optionally the server, in client-server communication.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-102">Use la <xref:System.Net.Security.NegotiateStream> clase para la autenticación y para ayudar a proteger la información transmitida entre un cliente y un servidor.</span><span class="sxs-lookup"><span data-stu-id="5f267-102">Use the <xref:System.Net.Security.NegotiateStream> class for authentication and to help secure information transmitted between a client and a server.</span></span> <span data-ttu-id="5f267-103">Uso de <xref:System.Net.Security.NegotiateStream>, puede hacer lo siguiente.</span><span class="sxs-lookup"><span data-stu-id="5f267-103">Using <xref:System.Net.Security.NegotiateStream>, you can do the following.</span></span>  
  
-   <span data-ttu-id="5f267-104">Enviar las credenciales del cliente al servidor para la suplantación o delegación.</span><span class="sxs-lookup"><span data-stu-id="5f267-104">Send the client's credentials to the server for Impersonation or Delegation.</span></span>  
  
-   <span data-ttu-id="5f267-105">Solicitar la autenticación de servidor.</span><span class="sxs-lookup"><span data-stu-id="5f267-105">Request server authentication.</span></span>  
  
-   <span data-ttu-id="5f267-106">Cifrar o firmar los datos antes de transmitirlos.</span><span class="sxs-lookup"><span data-stu-id="5f267-106">Encrypt and/or sign data before transmitting it.</span></span>  
  
 <span data-ttu-id="5f267-107">Autenticación se debe realizar antes de transmitir información.</span><span class="sxs-lookup"><span data-stu-id="5f267-107">Authentication must be performed before transmitting information.</span></span> <span data-ttu-id="5f267-108">Los clientes solicitan la autenticación mediante sincrónico <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> métodos, que se bloquean hasta que se complete la autenticación, o la asincrónica <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> métodos, que no se bloquean mientras esperan a completar la autenticación.</span><span class="sxs-lookup"><span data-stu-id="5f267-108">Clients request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods, which do not block while waiting for the authentication to complete.</span></span> <span data-ttu-id="5f267-109">Servidores de solicitan la autenticación mediante sincrónico <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> o asincrónicas <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="5f267-109">Servers request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span> <span data-ttu-id="5f267-110">El cliente y opcionalmente el servidor, se autentica utilizando el protocolo de seguridad Negotiate.</span><span class="sxs-lookup"><span data-stu-id="5f267-110">The client, and optionally the server, is authenticated using the Negotiate security protocol.</span></span> <span data-ttu-id="5f267-111">En los sistemas Windows 95/98, Windows NT LAN Manager (NTLM) es el protocolo utilizado para la autenticación.</span><span class="sxs-lookup"><span data-stu-id="5f267-111">On Windows 95/98 systems, Windows NT LAN Manager (NTLM) is the protocol used for authentication.</span></span> <span data-ttu-id="5f267-112">En otras plataformas Kerberos protocolo se usa para la autenticación si el cliente y servidor admiten; en caso contrario, se utiliza NTLM.</span><span class="sxs-lookup"><span data-stu-id="5f267-112">On other platforms the Kerberos protocol is used for authentication if both client and server support it; otherwise NTLM is used.</span></span> <span data-ttu-id="5f267-113">Para obtener descripciones detalladas de estos protocolos, consulte la documentación de Platform SDK en MSDN, en msdn.microsoft.com/library/.</span><span class="sxs-lookup"><span data-stu-id="5f267-113">For detailed descriptions of these protocols, see the Platform SDK documentation on MSDN, at msdn.microsoft.com/library/.</span></span> <span data-ttu-id="5f267-114">La <xref:System.Net.Security.NegotiateStream> clase realiza la autenticación mediante la interfaz del proveedor de soporte técnico de seguridad (SSPI).</span><span class="sxs-lookup"><span data-stu-id="5f267-114">The <xref:System.Net.Security.NegotiateStream> class performs the authentication using the Security Support Provider Interface (SSPI).</span></span>  
  
 <span data-ttu-id="5f267-115">Cuando la autenticación se realiza correctamente, debe comprobar la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> y <xref:System.Net.Security.NegotiateStream.IsSigned%2A> se usarán las propiedades para determinar qué servicios de seguridad mediante el <xref:System.Net.Security.NegotiateStream> para ayudar a proteger los datos durante la transmisión.</span><span class="sxs-lookup"><span data-stu-id="5f267-115">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services will be used by the <xref:System.Net.Security.NegotiateStream> to help secure your data during transmission.</span></span> <span data-ttu-id="5f267-116">Compruebe el <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propiedad para determinar si ocurrió una autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-116">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span> <span data-ttu-id="5f267-117">Puede obtener información sobre el cliente remoto o el servidor mediante el <xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="5f267-117">You can get information about the remote client or server using the <xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A> property.</span></span>  
  
 <span data-ttu-id="5f267-118">Si se produce un error en la autenticación, recibirá un <xref:System.Security.Authentication.AuthenticationException> o <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="5f267-118">If the authentication fails, you will receive an <xref:System.Security.Authentication.AuthenticationException> or a <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="5f267-119">En este caso, puede volver a intentar la autenticación con una credencial distinta.</span><span class="sxs-lookup"><span data-stu-id="5f267-119">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="5f267-120">Enviar datos mediante sincrónico <xref:System.Net.Security.NegotiateStream.Write%2A> o asincrónicas <xref:System.Net.Security.NegotiateStream.BeginWrite%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="5f267-120">You send data using the synchronous <xref:System.Net.Security.NegotiateStream.Write%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginWrite%2A> methods.</span></span> <span data-ttu-id="5f267-121">Recibir datos mediante sincrónico <xref:System.Net.Security.NegotiateStream.Read%2A> o asincrónicas <xref:System.Net.Security.NegotiateStream.BeginRead%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="5f267-121">You receive data using the synchronous <xref:System.Net.Security.NegotiateStream.Read%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginRead%2A> methods.</span></span> <span data-ttu-id="5f267-122">Si el servicio de seguridad como cifrado o firma están habilitadas, estas se aplican automáticamente a los datos por la <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-122">If security services such as encryption or signing are enabled, these are automatically applied to your data by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="5f267-123">El <xref:System.Net.Security.NegotiateStream> transmite datos mediante una secuencia que se proporciona al crear el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-123">The <xref:System.Net.Security.NegotiateStream> transmits data using a stream that you supply when creating the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="5f267-124">Al proporcionar esta secuencia subyacente, tiene la opción para especificar si se cierra el <xref:System.Net.Security.NegotiateStream> también se cierra la secuencia subyacente.</span><span class="sxs-lookup"><span data-stu-id="5f267-124">When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.NegotiateStream> also closes the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f267-125">El código siguiente muestra el lado cliente de una conexión cliente / servidor que usa el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-125">The following code example demonstrates the client side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="5f267-126">El cliente se autentica y envía un mensaje al servidor de forma asincrónica.</span><span class="sxs-lookup"><span data-stu-id="5f267-126">The client authenticates and sends a message to the server asynchronously.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#0)]
 [!code-csharp[NclNegoAsyncClient#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#0)]  
  
 <span data-ttu-id="5f267-127">El código siguiente muestra el lado del servidor de una conexión cliente / servidor que usa el <xref:System.Net.Security.NegotiateStream> para autenticar el cliente y leer un mensaje enviado por el cliente.</span><span class="sxs-lookup"><span data-stu-id="5f267-127">The following code example demonstrates the server side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream> to authenticate the client and read a message sent by the client.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#0)]
 [!code-csharp[NclNegoAsyncServer#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5f267-128">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-128">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-129">Para evitar la <xref:System.Net.Security.NegotiateStream> al cerrar la secuencia proporcionada, utilice el <xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="5f267-129">To prevent the <xref:System.Net.Security.NegotiateStream> from closing the stream that you supply, use the <xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateStream : System.IO.Stream -&gt; System.Net.Security.NegotiateStream" Usage="new System.Net.Security.NegotiateStream innerStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="5f267-130">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-130">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-131">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-131">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5f267-132">En el ejemplo de código siguiente se muestra cómo llamar a este constructor.</span><span class="sxs-lookup"><span data-stu-id="5f267-132">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#3)]
 [!code-csharp[NclNegoSyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateStream : System.IO.Stream * bool -&gt; System.Net.Security.NegotiateStream" Usage="new System.Net.Security.NegotiateStream (innerStream, leaveInnerStreamOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="5f267-133">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-133">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <param name="leaveInnerStreamOpen">
          <span data-ttu-id="5f267-134">
            <see langword="true" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> has no effect on <c>innerstream</c>; <see langword="false" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> also closes <c>innerStream</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-134">
              <see langword="true" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> has no effect on <c>innerstream</c>; <see langword="false" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> also closes <c>innerStream</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-135">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-135">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-136">Al especificar `true` para el `leaveStreamOpen` parámetro, cierre el <xref:System.Net.Security.NegotiateStream> no tiene ningún efecto el `innerStream` transmitir; deberá cerrarlo usted expresamente `innerStream` cuando ya no necesita.</span><span class="sxs-lookup"><span data-stu-id="5f267-136">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.NegotiateStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f267-137">En el ejemplo de código siguiente se muestra cómo llamar a este constructor.</span><span class="sxs-lookup"><span data-stu-id="5f267-137">The following code example demonstrates calling this constructor.</span></span> <span data-ttu-id="5f267-138">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Net.Security.NegotiateStream> clase.</span><span class="sxs-lookup"><span data-stu-id="5f267-138">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#1)]
 [!code-csharp[NclNegoAsyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f267-139">
            <paramref name="innerStream" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-139">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5f267-140">\- or -  <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-140">\- or -  <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5f267-141">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-141">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : unit -&gt; unit&#xA;override this.AuthenticateAsClient : unit -&gt; unit" Usage="negotiateStream.AuthenticateAsClient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5f267-142">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-142">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-143">La autenticación utiliza el cliente <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f267-143">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="5f267-144">Se especifica ningún nombre Principal de servicio (SPN) para el servidor.</span><span class="sxs-lookup"><span data-stu-id="5f267-144">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="5f267-145">El nivel de suplantación es <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, el nivel de seguridad es <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, y se solicita la autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-145">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="5f267-146">La <xref:System.Net.Security.NegotiateStream> clase construirá el SPN que se usa para la autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-146">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="5f267-147">Cuando la autenticación se realiza correctamente, debe comprobar la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> y <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propiedades para determinar qué servicios de seguridad se usan por el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-147">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="5f267-148">Compruebe el <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propiedad para determinar si ocurrió una autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-148">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="5f267-149">Si se produce un error en la autenticación, recibirá un <xref:System.Security.Authentication.AuthenticationException> o <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="5f267-149">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="5f267-150">En este caso, puede volver a intentar la autenticación con una credencial distinta.</span><span class="sxs-lookup"><span data-stu-id="5f267-150">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-151">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-151">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-152">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-152">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-153">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-153">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-154">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-154">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-155">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-155">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-156">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-156">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="5f267-157">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-157">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="5f267-158">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-158">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5f267-159">Para usar la configuración explícita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-159">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="5f267-160">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-160">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * string -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * string -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="5f267-161">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-161">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="5f267-162">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-162">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-163">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-163">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="5f267-164">The authentication process uses the specified client credential.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-164">The authentication process uses the specified client credential.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-165">El nivel de suplantación es <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, el nivel de seguridad es <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, y se solicita la autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-165">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="5f267-166">La <xref:System.Net.Security.NegotiateStream> clase construirá el SPN que se usa para la autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-166">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="5f267-167">Cuando la autenticación se realiza correctamente, debe comprobar la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> y <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propiedades para determinar qué servicios de seguridad se usan por el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-167">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="5f267-168">Compruebe el <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propiedad para determinar si ocurrió una autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-168">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-169">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-169">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-170">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-170">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-171">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-171">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-172">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-172">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-173">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-173">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-174">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-174">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="5f267-175">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-175">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="5f267-176">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-176">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f267-177">
            <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-177">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5f267-178">Para usar la configuración explícita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-178">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="5f267-179">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-179">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, binding, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="5f267-180">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-180">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="5f267-181">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-181">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="5f267-182">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-182">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-183">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-183">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="5f267-184">The authentication process uses the specified client credential and the channel binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-184">The authentication process uses the specified client credential and the channel binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-185">El nivel de suplantación es <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, el nivel de seguridad es <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, y se solicita la autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-185">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="5f267-186">La <xref:System.Net.Security.NegotiateStream> clase construirá el SPN que se usa para la autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-186">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="5f267-187">El <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> utilizado para la protección extendida que se pasa a este método en el `binding` parámetro se recuperaría por una aplicación de <xref:System.Net.Security.SslStream.TransportContext%2A> propiedad asociado <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-187">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="5f267-188">Cuando la autenticación se realiza correctamente, debe comprobar la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> y <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propiedades para determinar qué servicios de seguridad se usan por el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-188">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="5f267-189">Compruebe el <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propiedad para determinar si ocurrió una autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-189">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f267-190">
            <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-190">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5f267-191">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-191">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-192">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-192">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-193">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-193">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-194">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-194">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-195">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-195">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-196">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-196">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="5f267-197">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-197">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="5f267-198">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-198">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-199">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-199">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="5f267-200">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-200">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="5f267-201">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-201">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="5f267-202">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-202">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="5f267-203">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-203">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-204">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-204">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="5f267-205">The authentication process uses the specified credentials and authentication options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-205">The authentication process uses the specified credentials and authentication options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-206">Use el `requiredProtectionLevel` parámetro de solicitud de servicios de seguridad de los datos transmitidos mediante la secuencia autenticada.</span><span class="sxs-lookup"><span data-stu-id="5f267-206">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="5f267-207">Por ejemplo, para que los datos cifrados y firmados, especificar la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valor.</span><span class="sxs-lookup"><span data-stu-id="5f267-207">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="5f267-208">Autenticación correcta no garantiza que el solicitado <xref:System.Net.Security.ProtectionLevel> se ha concedido.</span><span class="sxs-lookup"><span data-stu-id="5f267-208">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="5f267-209">Debe comprobar la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> y <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propiedades para determinar qué servicios de seguridad se usan por el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-209">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="5f267-210">Si se produce un error en la autenticación, recibirá un <xref:System.Security.Authentication.AuthenticationException> o <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="5f267-210">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="5f267-211">En este caso, puede volver a intentar la autenticación con una credencial distinta.</span><span class="sxs-lookup"><span data-stu-id="5f267-211">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5f267-212">
            <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-212">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f267-213">
            <paramref name="targetName" /> is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-213">
              <paramref name="targetName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-214">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-214">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-215">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-215">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-216">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-216">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-217">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-217">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-218">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-218">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-219">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-219">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="5f267-220">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-220">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="5f267-221">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-221">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5f267-222">Para usar la configuración explícita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-222">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="5f267-223">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-223">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="5f267-224">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-224">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="5f267-225">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-225">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="5f267-226">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-226">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="5f267-227">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-227">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="5f267-228">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-228">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-229">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-229">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="5f267-230">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-230">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-231">Use el `requiredProtectionLevel` parámetro de solicitud de servicios de seguridad de los datos transmitidos mediante la secuencia autenticada.</span><span class="sxs-lookup"><span data-stu-id="5f267-231">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="5f267-232">Por ejemplo, para que los datos cifrados y firmados, especificar la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valor.</span><span class="sxs-lookup"><span data-stu-id="5f267-232">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="5f267-233">Autenticación correcta no garantiza que el solicitado <xref:System.Net.Security.ProtectionLevel> se ha concedido.</span><span class="sxs-lookup"><span data-stu-id="5f267-233">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="5f267-234">Debe comprobar la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> y <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propiedades para determinar qué servicios de seguridad se usan por el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-234">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="5f267-235">El <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> utilizado para la protección extendida que se pasa a este método en el `binding` parámetro se recuperaría por una aplicación de <xref:System.Net.Security.SslStream.TransportContext%2A> propiedad asociado <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-235">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="5f267-236">Si se produce un error en la autenticación, recibirá un <xref:System.Security.Authentication.AuthenticationException> o <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="5f267-236">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="5f267-237">En este caso, puede volver a intentar la autenticación con una credencial distinta.</span><span class="sxs-lookup"><span data-stu-id="5f267-237">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f267-238">
            <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-238">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5f267-239">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-239">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5f267-240">
            <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-240">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-241">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-241">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-242">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-242">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-243">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-243">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-244">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-244">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-245">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-245">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="5f267-246">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-246">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="5f267-247">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-247">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-248">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-248">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClientAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5f267-249">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-249">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : unit -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5f267-250">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-250">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f267-251">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-251">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-252">La autenticación utiliza el cliente <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f267-252">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="5f267-253">Se especifica ningún nombre Principal de servicio (SPN) para el servidor.</span><span class="sxs-lookup"><span data-stu-id="5f267-253">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="5f267-254">El nivel de suplantación es <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, el nivel de seguridad es <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, y se solicita la autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-254">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="5f267-255">La <xref:System.Net.Security.NegotiateStream> clase construirá el SPN que se usa para la autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-255">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="5f267-256">Cuando la autenticación se realiza correctamente, debe comprobar la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> y <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propiedades para determinar qué servicios de seguridad se usan por el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-256">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="5f267-257">Compruebe el <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propiedad para determinar si ocurrió una autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-257">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="5f267-258">Si se produce un error en la autenticación, recibirá un <xref:System.Security.Authentication.AuthenticationException> o <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="5f267-258">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="5f267-259">En este caso, puede volver a intentar la autenticación con una credencial distinta.</span><span class="sxs-lookup"><span data-stu-id="5f267-259">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-260">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-260">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-261">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-261">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-262">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-262">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-263">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-263">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-264">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-264">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-265">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-265">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="5f267-266">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-266">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="5f267-267">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-267">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5f267-268">Para usar la configuración explícita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-268">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="5f267-269">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-269">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * string -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="5f267-270">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-270">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="5f267-271">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-271">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-272">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-272">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="5f267-273">The authentication process uses the specified client credential.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-273">The authentication process uses the specified client credential.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f267-274">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-274">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-275">El nivel de suplantación es <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, el nivel de seguridad es <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, y se solicita la autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-275">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="5f267-276">La <xref:System.Net.Security.NegotiateStream> clase construirá el SPN que se usa para la autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-276">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="5f267-277">Cuando la autenticación se realiza correctamente, debe comprobar la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> y <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propiedades para determinar qué servicios de seguridad se usan por el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-277">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="5f267-278">Compruebe el <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propiedad para determinar si ocurrió una autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-278">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-279">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-279">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-280">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-280">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-281">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-281">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-282">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-282">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-283">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-283">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-284">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-284">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="5f267-285">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-285">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="5f267-286">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-286">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f267-287">
            <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-287">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5f267-288">Para usar la configuración explícita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-288">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="5f267-289">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-289">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, binding, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="5f267-290">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-290">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="5f267-291">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-291">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="5f267-292">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-292">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-293">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-293">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="5f267-294">The authentication process uses the specified client credential and the channel binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-294">The authentication process uses the specified client credential and the channel binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f267-295">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-295">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-296">El nivel de suplantación es <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, el nivel de seguridad es <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, y se solicita la autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-296">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="5f267-297">La <xref:System.Net.Security.NegotiateStream> clase construirá el SPN que se usa para la autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-297">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="5f267-298">El <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> utilizado para la protección extendida que se pasa a este método en el `binding` parámetro se recuperaría por una aplicación de <xref:System.Net.Security.SslStream.TransportContext%2A> propiedad asociado <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-298">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="5f267-299">Cuando la autenticación se realiza correctamente, debe comprobar la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> y <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propiedades para determinar qué servicios de seguridad se usan por el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-299">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="5f267-300">Compruebe el <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propiedad para determinar si ocurrió una autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-300">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f267-301">
            <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-301">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5f267-302">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-302">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-303">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-303">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-304">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-304">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-305">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-305">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-306">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-306">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-307">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-307">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="5f267-308">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-308">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="5f267-309">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-309">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-310">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-310">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="5f267-311">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-311">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="5f267-312">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-312">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="5f267-313">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-313">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="5f267-314">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-314">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-315">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-315">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="5f267-316">The authentication process uses the specified credentials and authentication options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-316">The authentication process uses the specified credentials and authentication options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f267-317">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-317">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-318">Use el `requiredProtectionLevel` parámetro de solicitud de servicios de seguridad de los datos transmitidos mediante la secuencia autenticada.</span><span class="sxs-lookup"><span data-stu-id="5f267-318">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="5f267-319">Por ejemplo, para que los datos cifrados y firmados, especificar la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valor.</span><span class="sxs-lookup"><span data-stu-id="5f267-319">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="5f267-320">Autenticación correcta no garantiza que el solicitado <xref:System.Net.Security.ProtectionLevel> se ha concedido.</span><span class="sxs-lookup"><span data-stu-id="5f267-320">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="5f267-321">Debe comprobar la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> y <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propiedades para determinar qué servicios de seguridad se usan por el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-321">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="5f267-322">Si se produce un error en la autenticación, recibirá un <xref:System.Security.Authentication.AuthenticationException> o <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="5f267-322">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="5f267-323">En este caso, puede volver a intentar la autenticación con una credencial distinta.</span><span class="sxs-lookup"><span data-stu-id="5f267-323">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5f267-324">
            <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-324">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f267-325">
            <paramref name="targetName" /> is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-325">
              <paramref name="targetName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-326">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-326">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-327">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-327">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-328">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-328">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-329">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-329">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-330">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-330">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-331">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-331">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="5f267-332">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-332">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="5f267-333">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-333">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5f267-334">Para usar la configuración explícita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-334">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="5f267-335">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-335">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="5f267-336">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-336">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="5f267-337">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-337">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="5f267-338">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-338">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="5f267-339">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-339">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="5f267-340">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-340">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-341">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-341">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="5f267-342">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-342">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f267-343">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-343">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-344">Use el `requiredProtectionLevel` parámetro de solicitud de servicios de seguridad de los datos transmitidos mediante la secuencia autenticada.</span><span class="sxs-lookup"><span data-stu-id="5f267-344">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="5f267-345">Por ejemplo, para que los datos cifrados y firmados, especificar la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valor.</span><span class="sxs-lookup"><span data-stu-id="5f267-345">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="5f267-346">Autenticación correcta no garantiza que el solicitado <xref:System.Net.Security.ProtectionLevel> se ha concedido.</span><span class="sxs-lookup"><span data-stu-id="5f267-346">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="5f267-347">Debe comprobar la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> y <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propiedades para determinar qué servicios de seguridad se usan por el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-347">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="5f267-348">El <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> utilizado para la protección extendida que se pasa a este método en el `binding` parámetro se recuperaría por una aplicación de <xref:System.Net.Security.SslStream.TransportContext%2A> propiedad asociado <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-348">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="5f267-349">Si se produce un error en la autenticación, recibirá un <xref:System.Security.Authentication.AuthenticationException> o <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="5f267-349">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="5f267-350">En este caso, puede volver a intentar la autenticación con una credencial distinta.</span><span class="sxs-lookup"><span data-stu-id="5f267-350">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f267-351">
            <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-351">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5f267-352">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-352">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5f267-353">
            <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-353">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-354">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-354">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-355">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-355">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-356">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-356">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-357">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-357">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-358">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-358">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="5f267-359">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-359">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="5f267-360">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-360">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-361">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-361">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5f267-362">Handles the server side of an authentication for a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-362">Handles the server side of an authentication for a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-363">Estos métodos se bloquean mientras la autenticación está en curso.</span><span class="sxs-lookup"><span data-stu-id="5f267-363">These methods block while the authentication is in progress.</span></span> <span data-ttu-id="5f267-364">Para evitar que la aplicación se bloquea mientras espera a completar la autenticación, utilice el <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5f267-364">To prevent the application from blocking while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : unit -&gt; unit&#xA;override this.AuthenticateAsServer : unit -&gt; unit" Usage="negotiateStream.AuthenticateAsServer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5f267-365">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-365">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-366">La autenticación utiliza el servidor <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f267-366">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="5f267-367">Se especifica ningún nombre Principal de servicio (SPN) para el servidor.</span><span class="sxs-lookup"><span data-stu-id="5f267-367">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="5f267-368">El nivel de suplantación es <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, y el nivel de seguridad es <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="5f267-368">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="5f267-369">Cuando la autenticación se realiza correctamente, debe comprobar la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> y <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propiedades para determinar qué servicios de seguridad se usan por el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-369">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="5f267-370">Compruebe el <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propiedad para determinar si ocurrió una autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-370">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="5f267-371">Este método se bloquea hasta que se complete la operación.</span><span class="sxs-lookup"><span data-stu-id="5f267-371">This method blocks until the operation completes.</span></span> <span data-ttu-id="5f267-372">Para evitar el bloqueo hasta que se complete la operación, use uno de los <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> sobrecargas del método.</span><span class="sxs-lookup"><span data-stu-id="5f267-372">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="5f267-373">Si se produce un error en la autenticación, recibirá un <xref:System.Security.Authentication.AuthenticationException> o <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="5f267-373">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="5f267-374">En este caso, puede volver a intentar la autenticación con una credencial distinta.</span><span class="sxs-lookup"><span data-stu-id="5f267-374">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-375">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-375">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-376">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-376">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-377">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-377">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-378">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-378">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-379">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-379">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5f267-380">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-380">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5f267-381">Para usar la configuración explícita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-381">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="5f267-382">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-382">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (policy As ExtendedProtectionPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; unit" Usage="negotiateStream.AuthenticateAsServer policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="5f267-383">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-383">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-384">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-384">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="5f267-385">The authentication process uses the specified extended protection policy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-385">The authentication process uses the specified extended protection policy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-386">La autenticación utiliza el servidor <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f267-386">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="5f267-387">Se especifica ningún nombre Principal de servicio (SPN) para el servidor.</span><span class="sxs-lookup"><span data-stu-id="5f267-387">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="5f267-388">El nivel de suplantación es <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, y el nivel de seguridad es <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="5f267-388">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="5f267-389">Si el `policy` parámetro es `null`, a continuación, se usa una directiva de protección extendida que tiene <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> establecido en <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="5f267-389">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="5f267-390">Cuando la autenticación se realiza correctamente, debe comprobar la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> y <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propiedades para determinar qué servicios de seguridad se usan por el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-390">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="5f267-391">Compruebe el <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propiedad para determinar si ocurrió una autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-391">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="5f267-392">Este método se bloquea hasta que se complete la operación.</span><span class="sxs-lookup"><span data-stu-id="5f267-392">This method blocks until the operation completes.</span></span> <span data-ttu-id="5f267-393">Para evitar el bloqueo hasta que se complete la operación, use uno de los <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> sobrecargas del método.</span><span class="sxs-lookup"><span data-stu-id="5f267-393">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="5f267-394">Si se produce un error en la autenticación, recibirá un <xref:System.Security.Authentication.AuthenticationException> o <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="5f267-394">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="5f267-395">En este caso, puede volver a intentar la autenticación con una credencial distinta.</span><span class="sxs-lookup"><span data-stu-id="5f267-395">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5f267-396">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-396">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-397">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-397">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-398">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-398">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-399">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-399">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-400">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-400">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5f267-401">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-401">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-402">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-402">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="5f267-403">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-403">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsServer (credential, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="5f267-404">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-404">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="5f267-405">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-405">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="5f267-406">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-406">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-407">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-407">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="5f267-408">The authentication process uses the specified server credentials and authentication options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-408">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-409">Cuando la autenticación se realiza correctamente, debe comprobar la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> y <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propiedades para determinar qué servicios de seguridad se usan por el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-409">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="5f267-410">Compruebe el <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propiedad para determinar si ocurrió una autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-410">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="5f267-411">Este método se bloquea hasta que se complete la operación.</span><span class="sxs-lookup"><span data-stu-id="5f267-411">This method blocks until the operation completes.</span></span> <span data-ttu-id="5f267-412">Para evitar el bloqueo hasta que se complete la operación, use uno de los <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> sobrecargas del método.</span><span class="sxs-lookup"><span data-stu-id="5f267-412">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="5f267-413">Si se produce un error en la autenticación, recibirá un <xref:System.Security.Authentication.AuthenticationException> o <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="5f267-413">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="5f267-414">En este caso, puede volver a intentar la autenticación con una credencial distinta.</span><span class="sxs-lookup"><span data-stu-id="5f267-414">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f267-415">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-415">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5f267-416">
            <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-416">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-417">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-417">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-418">You can use this object to try to r-authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-418">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-419">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-419">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-420">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-420">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-421">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-421">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-422">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-422">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="5f267-423">\- or -  This stream was used previously to attempt authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-423">\- or -  This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="5f267-424">You cannot use the stream to retry authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-424">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5f267-425">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-425">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5f267-426">Para usar la configuración explícita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-426">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="5f267-427">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-427">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsServer (credential, policy, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="5f267-428">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-428">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="5f267-429">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-429">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="5f267-430">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-430">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="5f267-431">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-431">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-432">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-432">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="5f267-433">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-433">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-434">Si el `policy` parámetro es `null`, a continuación, se usa una directiva de protección extendida que tiene <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> establecido en <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="5f267-434">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="5f267-435">Cuando la autenticación se realiza correctamente, debe comprobar la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> y <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propiedades para determinar qué servicios de seguridad se usan por el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-435">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="5f267-436">Compruebe el <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propiedad para determinar si ocurrió una autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-436">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="5f267-437">Este método se bloquea hasta que se complete la operación.</span><span class="sxs-lookup"><span data-stu-id="5f267-437">This method blocks until the operation completes.</span></span> <span data-ttu-id="5f267-438">Para evitar el bloqueo hasta que se complete la operación, use uno de los <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> sobrecargas del método.</span><span class="sxs-lookup"><span data-stu-id="5f267-438">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="5f267-439">Si se produce un error en la autenticación, recibirá un <xref:System.Security.Authentication.AuthenticationException> o <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="5f267-439">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="5f267-440">En este caso, puede volver a intentar la autenticación con una credencial distinta.</span><span class="sxs-lookup"><span data-stu-id="5f267-440">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5f267-441">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-441">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f267-442">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-442">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5f267-443">
            <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-443">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-444">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-444">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-445">You can use this object to try to r-authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-445">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-446">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-446">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-447">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-447">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-448">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-448">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="5f267-449">\- or -  This stream was used previously to attempt authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-449">\- or -  This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="5f267-450">You cannot use the stream to retry authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-450">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5f267-451">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-451">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-452">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-452">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="5f267-453">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-453">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5f267-454">Handles the server side of an authentication for a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-454">Handles the server side of an authentication for a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : unit -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5f267-455">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-455">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f267-456">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-456">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-457">La autenticación utiliza el servidor <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f267-457">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="5f267-458">Se especifica ningún nombre Principal de servicio (SPN) para el servidor.</span><span class="sxs-lookup"><span data-stu-id="5f267-458">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="5f267-459">El nivel de suplantación es <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, y el nivel de seguridad es <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="5f267-459">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="5f267-460">Cuando la autenticación se realiza correctamente, debe comprobar la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> y <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propiedades para determinar qué servicios de seguridad se usan por el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-460">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="5f267-461">Compruebe el <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propiedad para determinar si ocurrió una autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-461">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="5f267-462">Si se produce un error en la autenticación, recibirá un <xref:System.Security.Authentication.AuthenticationException> o <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="5f267-462">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="5f267-463">En este caso, puede volver a intentar la autenticación con una credencial distinta.</span><span class="sxs-lookup"><span data-stu-id="5f267-463">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-464">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-464">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-465">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-465">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-466">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-466">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-467">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-467">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-468">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-468">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5f267-469">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-469">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5f267-470">Para usar la configuración explícita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-470">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="5f267-471">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-471">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (policy As ExtendedProtectionPolicy) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="5f267-472">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-472">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-473">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-473">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="5f267-474">The authentication process uses the specified extended protection policy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-474">The authentication process uses the specified extended protection policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f267-475">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-475">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-476">La autenticación utiliza el servidor <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f267-476">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="5f267-477">Se especifica ningún nombre Principal de servicio (SPN) para el servidor.</span><span class="sxs-lookup"><span data-stu-id="5f267-477">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="5f267-478">El nivel de suplantación es <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, y el nivel de seguridad es <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="5f267-478">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="5f267-479">Si el `policy` parámetro es `null`, a continuación, se usa una directiva de protección extendida que tiene <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> establecido en <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="5f267-479">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="5f267-480">Cuando la autenticación se realiza correctamente, debe comprobar la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> y <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propiedades para determinar qué servicios de seguridad se usan por el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-480">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="5f267-481">Compruebe el <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propiedad para determinar si ocurrió una autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-481">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="5f267-482">Si se produce un error en la autenticación, recibirá un <xref:System.Security.Authentication.AuthenticationException> o <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="5f267-482">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="5f267-483">En este caso, puede volver a intentar la autenticación con una credencial distinta.</span><span class="sxs-lookup"><span data-stu-id="5f267-483">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5f267-484">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-484">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-485">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-485">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-486">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-486">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-487">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-487">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-488">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-488">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5f267-489">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-489">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-490">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-490">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="5f267-491">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-491">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync (credential, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="5f267-492">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-492">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="5f267-493">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-493">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="5f267-494">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-494">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-495">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-495">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="5f267-496">The authentication process uses the specified server credentials and authentication options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-496">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f267-497">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-497">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-498">Cuando la autenticación se realiza correctamente, debe comprobar la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> y <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propiedades para determinar qué servicios de seguridad se usan por el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-498">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="5f267-499">Compruebe el <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propiedad para determinar si ocurrió una autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-499">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="5f267-500">Si se produce un error en la autenticación, recibirá un <xref:System.Security.Authentication.AuthenticationException> o <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="5f267-500">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="5f267-501">En este caso, puede volver a intentar la autenticación con una credencial distinta.</span><span class="sxs-lookup"><span data-stu-id="5f267-501">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f267-502">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-502">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5f267-503">
            <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-503">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-504">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-504">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-505">You can use this object to try to r-authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-505">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-506">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-506">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-507">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-507">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-508">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-508">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-509">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-509">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="5f267-510">\- or -  This stream was used previously to attempt authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-510">\- or -  This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="5f267-511">You cannot use the stream to retry authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-511">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5f267-512">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-512">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5f267-513">Para usar la configuración explícita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-513">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="5f267-514">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-514">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync (credential, policy, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="5f267-515">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-515">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="5f267-516">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-516">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="5f267-517">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-517">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="5f267-518">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-518">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-519">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-519">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="5f267-520">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-520">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f267-521">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-521">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-522">Si el `policy` parámetro es `null`, a continuación, se usa una directiva de protección extendida que tiene <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> establecido en <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="5f267-522">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="5f267-523">Cuando la autenticación se realiza correctamente, debe comprobar la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> y <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propiedades para determinar qué servicios de seguridad se usan por el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-523">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="5f267-524">Compruebe el <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propiedad para determinar si ocurrió una autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-524">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="5f267-525">Si se produce un error en la autenticación, recibirá un <xref:System.Security.Authentication.AuthenticationException> o <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="5f267-525">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="5f267-526">En este caso, puede volver a intentar la autenticación con una credencial distinta.</span><span class="sxs-lookup"><span data-stu-id="5f267-526">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5f267-527">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-527">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f267-528">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-528">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5f267-529">
            <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-529">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-530">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-530">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-531">You can use this object to try to r-authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-531">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-532">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-532">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-533">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-533">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-534">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-534">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="5f267-535">\- or -  This stream was used previously to attempt authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-535">\- or -  This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="5f267-536">You cannot use the stream to retry authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-536">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5f267-537">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-537">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-538">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-538">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="5f267-539">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-539">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5f267-540">Begins an asynchronous operation to authenticate the client side of a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-540">Begins an asynchronous operation to authenticate the client side of a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-541">Las sobrecargas de este método no bloquea mientras la autenticación está en curso.</span><span class="sxs-lookup"><span data-stu-id="5f267-541">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="5f267-542">Para bloquear mientras espera a completar la autenticación, utilice uno de los <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="5f267-542">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="asyncCallback">
          <span data-ttu-id="5f267-543">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-543">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="5f267-544">A user-defined object containing information about the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-544">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="5f267-545">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-545">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-546">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-546">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="5f267-547">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-547">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f267-548">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-548">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-549">La autenticación utiliza el cliente <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f267-549">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="5f267-550">Se especifica ningún nombre Principal de servicio (SPN) para el servidor.</span><span class="sxs-lookup"><span data-stu-id="5f267-550">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="5f267-551">El nivel de suplantación es <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, y el nivel de seguridad es <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="5f267-551">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span> <span data-ttu-id="5f267-552">La <xref:System.Net.Security.NegotiateStream> clase construirá el SPN que se usa para la autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-552">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="5f267-553">Este método es asincrónico y no se bloquea mientras se completa la operación.</span><span class="sxs-lookup"><span data-stu-id="5f267-553">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="5f267-554">Para bloquear hasta que se complete la operación, use uno de los <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> sobrecargas del método.</span><span class="sxs-lookup"><span data-stu-id="5f267-554">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="5f267-555">Debe completar la operación asincrónica de la autenticación mediante una llamada a la <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5f267-555">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="5f267-556">Normalmente, se invoca el método por el `asyncCallback` delegar.</span><span class="sxs-lookup"><span data-stu-id="5f267-556">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="5f267-557">Para obtener información detallada acerca de cómo utilizar el modelo de programación asincrónico, vea [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="5f267-557">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="5f267-558">Si se produce un error en la autenticación, recibirá un <xref:System.Security.Authentication.AuthenticationException> o <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="5f267-558">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="5f267-559">En este caso, puede volver a intentar la autenticación con una credencial distinta.</span><span class="sxs-lookup"><span data-stu-id="5f267-559">In this case, you can retry the authentication with a different credential.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f267-560">En el ejemplo de código siguiente se muestra cómo llamar a este método para comenzar una autenticación asincrónica para el cliente.</span><span class="sxs-lookup"><span data-stu-id="5f267-560">The following code example demonstrates calling this method to begin an asynchronous authentication for the client.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#2)]
 [!code-csharp[NclNegoAsyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-561">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-561">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-562">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-562">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-563">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-563">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-564">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-564">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-565">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-565">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-566">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-566">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="5f267-567">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-567">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="5f267-568">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-568">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5f267-569">Para usar la configuración explícita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-569">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="5f267-570">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-570">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, targetName, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="5f267-571">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-571">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="5f267-572">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-572">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="5f267-573">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-573">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="5f267-574">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-574">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="5f267-575">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-575">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-576">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-576">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="5f267-577">The authentication process uses the specified credentials.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-577">The authentication process uses the specified credentials.</span>
          </span>
          <span data-ttu-id="5f267-578">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-578">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f267-579">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-579">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-580">Este método es asincrónico y no se bloquea mientras se completa la operación.</span><span class="sxs-lookup"><span data-stu-id="5f267-580">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="5f267-581">Para bloquear hasta que se complete la operación, use uno de los <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> sobrecargas del método.</span><span class="sxs-lookup"><span data-stu-id="5f267-581">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="5f267-582">Debe completar la operación asincrónica de la autenticación mediante una llamada a la <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5f267-582">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="5f267-583">Normalmente, se invoca el método por el `asyncCallback` delegar.</span><span class="sxs-lookup"><span data-stu-id="5f267-583">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="5f267-584">Para obtener información detallada acerca de cómo utilizar el modelo de programación asincrónico, vea [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="5f267-584">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="5f267-585">Si se produce un error en la autenticación, recibirá un <xref:System.Security.Authentication.AuthenticationException> o <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="5f267-585">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="5f267-586">En este caso, puede volver a intentar la autenticación con una credencial distinta.</span><span class="sxs-lookup"><span data-stu-id="5f267-586">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f267-587">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-587">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5f267-588">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-588">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-589">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-589">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-590">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-590">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-591">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-591">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-592">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-592">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-593">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-593">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-594">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-594">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="5f267-595">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-595">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="5f267-596">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-596">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5f267-597">Para usar la configuración explícita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-597">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="5f267-598">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-598">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, binding, targetName, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="5f267-599">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-599">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="5f267-600">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-600">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="5f267-601">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-601">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="5f267-602">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-602">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="5f267-603">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-603">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="5f267-604">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-604">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-605">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-605">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="5f267-606">The authentication process uses the specified credentials and channel binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-606">The authentication process uses the specified credentials and channel binding.</span>
          </span>
          <span data-ttu-id="5f267-607">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-607">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f267-608">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-608">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-609">Este método es asincrónico y no se bloquea mientras se completa la operación.</span><span class="sxs-lookup"><span data-stu-id="5f267-609">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="5f267-610">Para bloquear hasta que se complete la operación, use uno de los <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> sobrecargas del método.</span><span class="sxs-lookup"><span data-stu-id="5f267-610">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="5f267-611">Debe completar la operación asincrónica de la autenticación mediante una llamada a la <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5f267-611">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="5f267-612">Normalmente, se invoca el método por el `asyncCallback` delegar.</span><span class="sxs-lookup"><span data-stu-id="5f267-612">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="5f267-613">Para obtener información detallada acerca de cómo utilizar el modelo de programación asincrónico, vea [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="5f267-613">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="5f267-614">Si se produce un error en la autenticación, recibirá un <xref:System.Security.Authentication.AuthenticationException> o <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="5f267-614">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="5f267-615">En este caso, puede volver a intentar la autenticación con una credencial distinta.</span><span class="sxs-lookup"><span data-stu-id="5f267-615">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f267-616">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-616">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5f267-617">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-617">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-618">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-618">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-619">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-619">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-620">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-620">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-621">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-621">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-622">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-622">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="5f267-623">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-623">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="5f267-624">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-624">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-625">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-625">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="5f267-626">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-626">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="5f267-627">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-627">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="5f267-628">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-628">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="5f267-629">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-629">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="5f267-630">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-630">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="5f267-631">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-631">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="5f267-632">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-632">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-633">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-633">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="5f267-634">The authentication process uses the specified credentials and authentication options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-634">The authentication process uses the specified credentials and authentication options.</span>
          </span>
          <span data-ttu-id="5f267-635">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-635">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f267-636">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-636">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-637">Use el `requiredProtectionLevel` parámetro de solicitud de servicios de seguridad de los datos transmitidos mediante la secuencia autenticada.</span><span class="sxs-lookup"><span data-stu-id="5f267-637">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="5f267-638">Por ejemplo, para que los datos cifrados y firmados, especificar la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valor.</span><span class="sxs-lookup"><span data-stu-id="5f267-638">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="5f267-639">Autenticación correcta no garantiza que el solicitado <xref:System.Net.Security.ProtectionLevel> se ha concedido.</span><span class="sxs-lookup"><span data-stu-id="5f267-639">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="5f267-640">Debe comprobar la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> y <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propiedades para determinar qué servicios de seguridad se usan por el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-640">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="5f267-641">Este método es asincrónico y no se bloquea mientras se completa la operación.</span><span class="sxs-lookup"><span data-stu-id="5f267-641">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="5f267-642">Para bloquear hasta que se complete la operación, use uno de los <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> sobrecargas del método.</span><span class="sxs-lookup"><span data-stu-id="5f267-642">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="5f267-643">Debe completar la operación asincrónica de la autenticación mediante una llamada a la <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5f267-643">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="5f267-644">Normalmente, se invoca el método por el `asyncCallback` delegar.</span><span class="sxs-lookup"><span data-stu-id="5f267-644">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="5f267-645">Para obtener información detallada acerca de cómo utilizar el modelo de programación asincrónico, vea [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="5f267-645">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="5f267-646">Si se produce un error en la autenticación, recibirá un <xref:System.Security.Authentication.AuthenticationException> o <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="5f267-646">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="5f267-647">En este caso, puede volver a intentar la autenticación con una credencial distinta.</span><span class="sxs-lookup"><span data-stu-id="5f267-647">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f267-648">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-648">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5f267-649">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-649">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-650">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-650">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-651">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-651">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-652">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-652">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-653">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-653">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-654">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-654">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-655">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-655">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="5f267-656">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-656">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="5f267-657">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-657">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5f267-658">Para usar la configuración explícita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-658">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="5f267-659">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-659">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="5f267-660">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-660">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="5f267-661">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-661">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="5f267-662">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-662">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="5f267-663">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-663">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="5f267-664">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-664">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="5f267-665">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-665">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="5f267-666">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-666">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="5f267-667">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-667">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-668">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-668">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="5f267-669">The authentication process uses the specified credentials, authentication options, and channel binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-669">The authentication process uses the specified credentials, authentication options, and channel binding.</span>
          </span>
          <span data-ttu-id="5f267-670">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-670">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f267-671">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-671">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-672">Use el `requiredProtectionLevel` parámetro de solicitud de servicios de seguridad de los datos transmitidos mediante la secuencia autenticada.</span><span class="sxs-lookup"><span data-stu-id="5f267-672">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="5f267-673">Por ejemplo, para que los datos cifrados y firmados, especificar la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valor.</span><span class="sxs-lookup"><span data-stu-id="5f267-673">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="5f267-674">Autenticación correcta no garantiza que el solicitado <xref:System.Net.Security.ProtectionLevel> se ha concedido.</span><span class="sxs-lookup"><span data-stu-id="5f267-674">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="5f267-675">Debe comprobar la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> y <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propiedades para determinar qué servicios de seguridad se usan por el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-675">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="5f267-676">Este método es asincrónico y no se bloquea mientras se completa la operación.</span><span class="sxs-lookup"><span data-stu-id="5f267-676">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="5f267-677">Para bloquear hasta que se complete la operación, use uno de los <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> sobrecargas del método.</span><span class="sxs-lookup"><span data-stu-id="5f267-677">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="5f267-678">Debe completar la operación asincrónica de la autenticación mediante una llamada a la <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5f267-678">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="5f267-679">Normalmente, se invoca el método por el `asyncCallback` delegar.</span><span class="sxs-lookup"><span data-stu-id="5f267-679">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="5f267-680">Para obtener información detallada acerca de cómo utilizar el modelo de programación asincrónico, vea [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="5f267-680">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="5f267-681">Si se produce un error en la autenticación, recibirá un <xref:System.Security.Authentication.AuthenticationException> o <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="5f267-681">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="5f267-682">En este caso, puede volver a intentar la autenticación con una credencial distinta.</span><span class="sxs-lookup"><span data-stu-id="5f267-682">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f267-683">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-683">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5f267-684">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-684">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-685">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-685">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-686">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-686">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-687">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-687">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-688">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-688">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-689">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-689">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="5f267-690">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-690">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="5f267-691">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-691">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-692">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-692">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5f267-693">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-693">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-694">Las sobrecargas de este método no bloquea mientras la autenticación está en curso.</span><span class="sxs-lookup"><span data-stu-id="5f267-694">The overloads of this method do not block while the authentication is in progress.</span></span> <span data-ttu-id="5f267-695">Para bloquear mientras espera a completar la autenticación, utilice el <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5f267-695">To block while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="asyncCallback">
          <span data-ttu-id="5f267-696">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-696">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="5f267-697">A user-defined object containing information about the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-697">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="5f267-698">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-698">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-699">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-699">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="5f267-700">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-700">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f267-701">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-701">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-702">La autenticación utiliza el servidor <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f267-702">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="5f267-703">Se especifica ningún nombre Principal de servicio (SPN) para el servidor.</span><span class="sxs-lookup"><span data-stu-id="5f267-703">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="5f267-704">El nivel de suplantación es <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, el nivel de seguridad es <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="5f267-704">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="5f267-705">Cuando la autenticación se realiza correctamente, debe comprobar la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> y <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propiedades para determinar qué servicios de seguridad se usan por el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-705">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="5f267-706">Compruebe el <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propiedad para determinar si ocurrió una autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-706">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="5f267-707">Para bloquear hasta que se complete la operación, use uno de los <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> sobrecargas del método.</span><span class="sxs-lookup"><span data-stu-id="5f267-707">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="5f267-708">Si se produce un error en la autenticación, recibirá un <xref:System.Security.Authentication.AuthenticationException> o <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="5f267-708">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="5f267-709">En este caso, puede volver a intentar la autenticación con una credencial distinta.</span><span class="sxs-lookup"><span data-stu-id="5f267-709">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-710">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-710">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-711">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-711">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-712">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-712">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-713">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-713">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-714">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-714">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5f267-715">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-715">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5f267-716">Para usar la configuración explícita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-716">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="5f267-717">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-717">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (policy, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="5f267-718">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-718">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="5f267-719">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-719">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="5f267-720">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-720">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="5f267-721">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-721">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-722">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-722">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="5f267-723">The authentication process uses the specified extended protection policy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-723">The authentication process uses the specified extended protection policy.</span>
          </span>
          <span data-ttu-id="5f267-724">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-724">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f267-725">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-725">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-726">La autenticación utiliza el servidor <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f267-726">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="5f267-727">Se especifica ningún nombre Principal de servicio (SPN) para el servidor.</span><span class="sxs-lookup"><span data-stu-id="5f267-727">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="5f267-728">El nivel de suplantación es <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, el nivel de seguridad es <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="5f267-728">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="5f267-729">Si el `policy` parámetro es `null`, a continuación, se usa una directiva de protección extendida que tiene <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> establecido en <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="5f267-729">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="5f267-730">Cuando la autenticación se realiza correctamente, debe comprobar la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> y <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propiedades para determinar qué servicios de seguridad se usan por el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-730">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="5f267-731">Compruebe el <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propiedad para determinar si ocurrió una autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-731">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="5f267-732">Para bloquear hasta que se complete la operación, use uno de los <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> sobrecargas del método.</span><span class="sxs-lookup"><span data-stu-id="5f267-732">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="5f267-733">Si se produce un error en la autenticación, recibirá un <xref:System.Security.Authentication.AuthenticationException> o <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="5f267-733">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="5f267-734">En este caso, puede volver a intentar la autenticación con una credencial distinta.</span><span class="sxs-lookup"><span data-stu-id="5f267-734">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5f267-735">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-735">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-736">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-736">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-737">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-737">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-738">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-738">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-739">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-739">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5f267-740">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-740">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-741">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-741">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="5f267-742">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-742">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (credential, requiredProtectionLevel, requiredImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="5f267-743">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-743">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="5f267-744">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-744">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="5f267-745">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-745">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="5f267-746">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-746">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="5f267-747">A user-defined object containing information about the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-747">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="5f267-748">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-748">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-749">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-749">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="5f267-750">The authentication process uses the specified server credentials and authentication options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-750">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
          <span data-ttu-id="5f267-751">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-751">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f267-752">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-752">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-753">Use el `requiredProtectionLevel` parámetro de solicitud de servicios de seguridad de los datos transmitidos mediante la secuencia autenticada.</span><span class="sxs-lookup"><span data-stu-id="5f267-753">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="5f267-754">Por ejemplo, para que los datos cifrados y firmados, especificar la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valor.</span><span class="sxs-lookup"><span data-stu-id="5f267-754">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="5f267-755">Autenticación correcta no garantiza que, solicitado <xref:System.Net.Security.ProtectionLevel> se ha concedido.</span><span class="sxs-lookup"><span data-stu-id="5f267-755">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="5f267-756">Debe comprobar la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> y <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propiedades para determinar qué servicios de seguridad se usan por el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-756">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="5f267-757">Este método es asincrónico y no se bloquea mientras se completa la operación.</span><span class="sxs-lookup"><span data-stu-id="5f267-757">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="5f267-758">Para bloquear hasta que se complete la operación, use uno de los <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> sobrecargas del método.</span><span class="sxs-lookup"><span data-stu-id="5f267-758">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="5f267-759">Debe completar la operación asincrónica de la autenticación mediante una llamada a la <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5f267-759">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="5f267-760">Normalmente, se invoca el método por el `asyncCallback` delegar.</span><span class="sxs-lookup"><span data-stu-id="5f267-760">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="5f267-761">Para obtener información detallada acerca de cómo utilizar el modelo de programación asincrónico, vea [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="5f267-761">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="5f267-762">Si se produce un error en la autenticación, recibirá un <xref:System.Security.Authentication.AuthenticationException> o <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="5f267-762">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="5f267-763">En este caso, puede volver a intentar la autenticación con una credencial distinta.</span><span class="sxs-lookup"><span data-stu-id="5f267-763">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f267-764">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-764">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5f267-765">
            <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-765">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-766">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-766">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-767">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-767">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-768">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-768">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-769">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-769">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-770">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-770">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-771">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-771">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="5f267-772">\- or -  This stream was used previously to attempt authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-772">\- or -  This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="5f267-773">You cannot use the stream to retry authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-773">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5f267-774">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-774">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5f267-775">Para usar la configuración explícita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-775">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="5f267-776">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-776">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (credential, policy, requiredProtectionLevel, requiredImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="5f267-777">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-777">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="5f267-778">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-778">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="5f267-779">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-779">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="5f267-780">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-780">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="5f267-781">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-781">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="5f267-782">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-782">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="5f267-783">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-783">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-784">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-784">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="5f267-785">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-785">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
          <span data-ttu-id="5f267-786">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-786">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f267-787">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-787">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-788">Use el `requiredProtectionLevel` parámetro de solicitud de servicios de seguridad de los datos transmitidos mediante la secuencia autenticada.</span><span class="sxs-lookup"><span data-stu-id="5f267-788">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="5f267-789">Por ejemplo, para que los datos cifrados y firmados, especificar la <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valor.</span><span class="sxs-lookup"><span data-stu-id="5f267-789">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="5f267-790">Autenticación correcta no garantiza que, solicitado <xref:System.Net.Security.ProtectionLevel> se ha concedido.</span><span class="sxs-lookup"><span data-stu-id="5f267-790">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="5f267-791">Debe comprobar la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> y <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propiedades para determinar qué servicios de seguridad se usan por el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-791">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="5f267-792">Si el `policy` parámetro es `null`, a continuación, se usa una directiva de protección extendida que tiene <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> establecido en <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="5f267-792">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="5f267-793">Este método es asincrónico y no se bloquea mientras se completa la operación.</span><span class="sxs-lookup"><span data-stu-id="5f267-793">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="5f267-794">Para bloquear hasta que se complete la operación, use uno de los <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> sobrecargas del método.</span><span class="sxs-lookup"><span data-stu-id="5f267-794">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="5f267-795">Debe completar la operación asincrónica de la autenticación mediante una llamada a la <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5f267-795">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="5f267-796">Normalmente, se invoca el método por el `asyncCallback` delegar.</span><span class="sxs-lookup"><span data-stu-id="5f267-796">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="5f267-797">Para obtener información detallada acerca de cómo utilizar el modelo de programación asincrónico, vea [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="5f267-797">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="5f267-798">Si se produce un error en la autenticación, recibirá un <xref:System.Security.Authentication.AuthenticationException> o <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="5f267-798">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="5f267-799">En este caso, puede volver a intentar la autenticación con una credencial distinta.</span><span class="sxs-lookup"><span data-stu-id="5f267-799">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5f267-800">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-800">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f267-801">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-801">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5f267-802">
            <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-802">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-803">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-803">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-804">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-804">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-805">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-805">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-806">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-806">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-807">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-807">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="5f267-808">\- or -  This stream was used previously to attempt authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-808">\- or -  This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="5f267-809">You cannot use the stream to retry authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-809">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5f267-810">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-810">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-811">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-811">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="5f267-812">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-812">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginRead (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="5f267-813">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-813">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="5f267-814">The zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-814">The zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="5f267-815">The maximum number of bytes to read from the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-815">The maximum number of bytes to read from the stream.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="5f267-816">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-816">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="5f267-817">A user-defined object containing information about the read operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-817">A user-defined object containing information about the read operation.</span>
          </span>
          <span data-ttu-id="5f267-818">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-818">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-819">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-819">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f267-820">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-820">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-821">Si están habilitados el cifrado, firma, o cifrado y firma, la operación de lectura lee los datos de la secuencia subyacente, comprueba la integridad de los datos y lo descifra.</span><span class="sxs-lookup"><span data-stu-id="5f267-821">If encryption, signing, or encryption and signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and decrypts it.</span></span> <span data-ttu-id="5f267-822">Si ningún servicio de seguridad, como el cifrado de datos o de firma están en uso, este método inicia una operación de lectura asincrónica en la secuencia subyacente.</span><span class="sxs-lookup"><span data-stu-id="5f267-822">If no security services such as data encryption or signing are in use, this method starts an asynchronous read operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="5f267-823">Este método es asincrónico y no se bloquea mientras se completa la operación.</span><span class="sxs-lookup"><span data-stu-id="5f267-823">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="5f267-824">Para bloquear hasta que se complete la operación, utilice el <xref:System.Net.Security.NegotiateStream.Read%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5f267-824">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="5f267-825">La operación de lectura asincrónica debe realizarse mediante una llamada a la <xref:System.Net.Security.NegotiateStream.EndRead%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5f267-825">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndRead%2A> method.</span></span> <span data-ttu-id="5f267-826">Normalmente, se invoca el método por el `asyncCallback` delegar.</span><span class="sxs-lookup"><span data-stu-id="5f267-826">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="5f267-827">Para obtener información detallada acerca de cómo utilizar el modelo de programación asincrónico, vea [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="5f267-827">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="5f267-828">La <xref:System.Net.Security.NegotiateStream> clase no admite varias de las operaciones de lectura simultáneas.</span><span class="sxs-lookup"><span data-stu-id="5f267-828">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous read operations.</span></span> <span data-ttu-id="5f267-829">Si intenta iniciar una operación de lectura mientras otra lectura operación ya se está ejecutando en la misma secuencia, un <xref:System.NotSupportedException> se producirá la excepción.</span><span class="sxs-lookup"><span data-stu-id="5f267-829">If you attempt to start a read operation while another read operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="5f267-830">No se puede llamar este método hasta que se haya autenticado correctamente.</span><span class="sxs-lookup"><span data-stu-id="5f267-830">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="5f267-831">Para autenticar, llame a uno de los <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, o <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="5f267-831">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f267-832">En el ejemplo de código siguiente se muestra cómo iniciar una operación de lectura asincrónica.</span><span class="sxs-lookup"><span data-stu-id="5f267-832">The following code example demonstrates starting an asynchronous read operation.</span></span> <span data-ttu-id="5f267-833">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Net.Security.NegotiateStream> clase.</span><span class="sxs-lookup"><span data-stu-id="5f267-833">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#1)]
 [!code-csharp[NclNegoAsyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f267-834">
            <paramref name="buffer" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-834">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5f267-835">
            <paramref name="offset" /> is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-835">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="5f267-836">\- or -  <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-836">\- or -  <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="5f267-837">\- or -  <paramref name="offset" /> plus <paramref name="count" /> is greater than the length of <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-837">\- or -  <paramref name="offset" /> plus <paramref name="count" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="5f267-838">The read operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-838">The read operation failed.</span>
          </span>
          <span data-ttu-id="5f267-839">\- or -  Encryption is in use, but the data could not be decrypted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-839">\- or -  Encryption is in use, but the data could not be decrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5f267-840">There is already a read operation in progress.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-840">There is already a read operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-841">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-841">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-842">Authentication has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-842">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginWrite (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="5f267-843">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-843">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="5f267-844">The zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-844">The zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="5f267-845">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-845">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="5f267-846">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-846">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="5f267-847">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-847">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="5f267-848">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-848">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-849">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-849">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f267-850">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-850">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-851">Si están habilitados el cifrado, firma, o cifrado y firma, este método lee los datos del búfer, cifra, firma o cifra y lo firma y transmite mediante la secuencia subyacente.</span><span class="sxs-lookup"><span data-stu-id="5f267-851">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="5f267-852">Si ningún servicio de seguridad, como el cifrado de datos o de firma están en uso, este método inicia una operación de escritura asincrónica en la secuencia subyacente.</span><span class="sxs-lookup"><span data-stu-id="5f267-852">If no security services such as data encryption or signing are in use, this method starts an asynchronous write operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="5f267-853">Este método es asincrónico y no se bloquea mientras se completa la operación.</span><span class="sxs-lookup"><span data-stu-id="5f267-853">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="5f267-854">Para bloquear hasta que se complete la operación, utilice el <xref:System.Net.Security.NegotiateStream.Read%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5f267-854">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="5f267-855">La operación de lectura asincrónica debe realizarse mediante una llamada a la <xref:System.Net.Security.NegotiateStream.EndWrite%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5f267-855">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndWrite%2A> method.</span></span> <span data-ttu-id="5f267-856">Normalmente, se invoca el método por el `asyncCallback` delegar.</span><span class="sxs-lookup"><span data-stu-id="5f267-856">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="5f267-857">Para obtener información detallada acerca de cómo utilizar el modelo de programación asincrónico, vea [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="5f267-857">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="5f267-858">La <xref:System.Net.Security.NegotiateStream> clase no admite varias operaciones de escritura simultáneas.</span><span class="sxs-lookup"><span data-stu-id="5f267-858">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="5f267-859">Si intenta iniciar una operación de escritura cuando ya se está ejecutando otra operación de escritura en la misma secuencia, un <xref:System.NotSupportedException> se producirá la excepción.</span><span class="sxs-lookup"><span data-stu-id="5f267-859">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="5f267-860">No se puede llamar este método hasta que se haya autenticado correctamente.</span><span class="sxs-lookup"><span data-stu-id="5f267-860">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="5f267-861">Para autenticar, llame a uno de los <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, o <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="5f267-861">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f267-862">En el ejemplo de código siguiente se muestra a partir de una operación de escritura asincrónica.</span><span class="sxs-lookup"><span data-stu-id="5f267-862">The following code example demonstrates beginning an asynchronous write operation.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#3)]
 [!code-csharp[NclNegoAsyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#3)]  
  
 <span data-ttu-id="5f267-863">El siguiente método se llama cuando se complete la operación.</span><span class="sxs-lookup"><span data-stu-id="5f267-863">The following method is called when the operation completes.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
 [!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f267-864">
            <paramref name="buffer" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-864">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5f267-865">
            <paramref name="offset is less than 0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-865">
              <paramref name="offset is less than 0" />.</span>
          </span>
          <span data-ttu-id="5f267-866">\- or -  <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-866">\- or -  <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="5f267-867">\- or -  <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-867">\- or -  <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="5f267-868">The write operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-868">The write operation failed.</span>
          </span>
          <span data-ttu-id="5f267-869">\- or -  Encryption is in use, but the data could not be encrypted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-869">\- or -  Encryption is in use, but the data could not be encrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5f267-870">There is already a write operation in progress.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-870">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-871">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-871">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-872">Authentication has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-872">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Net.Security.NegotiateStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f267-873">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-873">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f267-874">
            <see langword="true" /> Si se produjo la autenticación y la secuencia subyacente es legible; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-874">
              <see langword="true" /> if authentication has occurred and the underlying stream is readable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-875">Si se ha producido una autenticación correcta, esta propiedad devuelve el valor devuelto al invocar el <xref:System.IO.Stream.CanRead%2A> propiedad en la secuencia subyacente.</span><span class="sxs-lookup"><span data-stu-id="5f267-875">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanRead%2A> property on the underlying stream.</span></span> <span data-ttu-id="5f267-876">La secuencia subyacente se especifica cuando se crea una instancia de la <xref:System.Net.Security.NegotiateStream> clase.</span><span class="sxs-lookup"><span data-stu-id="5f267-876">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f267-877">En el ejemplo de código siguiente se muestra cómo mostrar el valor de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="5f267-877">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Net.Security.NegotiateStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f267-878">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-878">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f267-879">Esta propiedad devuelve siempre <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-879">This property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-880">No debe intentar establecer la posición de la <xref:System.Net.Security.NegotiateStream> objeto o la secuencia subyacente.</span><span class="sxs-lookup"><span data-stu-id="5f267-880">You should not attempt to set the position of the <xref:System.Net.Security.NegotiateStream> object or its underlying stream.</span></span> <span data-ttu-id="5f267-881">La secuencia subyacente se especifica cuando se crea una instancia de la <xref:System.Net.Security.NegotiateStream> clase.</span><span class="sxs-lookup"><span data-stu-id="5f267-881">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f267-882">En el ejemplo de código siguiente se muestra cómo mostrar el valor de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="5f267-882">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Security.NegotiateStream.Position" />
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f267-883">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-883">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f267-884">
            <see langword="true" /> Si la secuencia subyacente admite tiempos de espera; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-884">
              <see langword="true" /> if the underlying stream supports time-outs; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-885">Esta propiedad devuelve el valor devuelto al invocar el <xref:System.IO.Stream.CanTimeout%2A> propiedad en la secuencia subyacente.</span><span class="sxs-lookup"><span data-stu-id="5f267-885">This property returns the value returned by invoking the <xref:System.IO.Stream.CanTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="5f267-886">La secuencia subyacente se especifica cuando se crea una instancia de la <xref:System.Net.Security.NegotiateStream> clase.</span><span class="sxs-lookup"><span data-stu-id="5f267-886">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f267-887">En el ejemplo de código siguiente se muestra cómo mostrar el valor de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="5f267-887">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Net.Security.NegotiateStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f267-888">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-888">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f267-889">
            <see langword="true" /> Si se produjo la autenticación y la secuencia subyacente es modificable; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-889">
              <see langword="true" /> if authentication has occurred and the underlying stream is writable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-890">Si se ha producido una autenticación correcta, esta propiedad devuelve el valor devuelto al invocar el <xref:System.IO.Stream.CanWrite%2A> propiedad en la secuencia subyacente.</span><span class="sxs-lookup"><span data-stu-id="5f267-890">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanWrite%2A> property on the underlying stream.</span></span> <span data-ttu-id="5f267-891">La secuencia subyacente se especifica cuando se crea una instancia de la <xref:System.Net.Security.NegotiateStream> clase.</span><span class="sxs-lookup"><span data-stu-id="5f267-891">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f267-892">En el ejemplo de código siguiente se muestra cómo mostrar el valor de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="5f267-892">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="negotiateStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="5f267-893">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-893">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-894">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.NegotiateStream" /> and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-894">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.NegotiateStream" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-895">Este método se llama por el público `Dispose()` método y el <xref:System.Object.Finalize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5f267-895">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="5f267-896">`Dispose()` invoca el protegido `Dispose(Boolean)` método con el `disposing` parámetro establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="5f267-896">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="5f267-897"><xref:System.Object.Finalize%2A> invoca `Dispose` con `disposing` establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="5f267-897"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="5f267-898">Cuando el `disposing` parámetro es true, este método libera todos los recursos mantenidos por los objetos administrados que este <xref:System.Net.Security.NegotiateStream> referencias.</span><span class="sxs-lookup"><span data-stu-id="5f267-898">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.NegotiateStream> references.</span></span> <span data-ttu-id="5f267-899">Este método invoca al método `Dispose()` de cada uno de los objetos a los que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="5f267-899">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="5f267-900">
            <para>
              <see langword="Dispose" /> puede llamarse varias veces por otros objetos. Cuando se reemplaza <see langword="Dispose(Boolean)" /> tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <see langword="Dispose" />. Para obtener más información sobre cómo implementar <see langword="Dispose(Boolean)" />, vea [implementar un Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Para obtener más información acerca de <see langword="Dispose" /> y <see cref="M:System.Object.Finalize" />, consulte [limpieza de Resources](~/docs/standard/garbage-collection/unmanaged.md) no administrado y [reemplazando el método Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-900">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsClient (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsClient(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsClient : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsClient : IAsyncResult -&gt; unit" Usage="negotiateStream.EndAuthenticateAsClient asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="5f267-901">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-901">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-902">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-902">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-903">Si no se ha completado la operación, este método se bloquea hasta que lo haga.</span><span class="sxs-lookup"><span data-stu-id="5f267-903">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="5f267-904">Cuando la autenticación se realiza correctamente, debe comprobar la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> y <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propiedades para determinar qué servicios de seguridad se usan por el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-904">When the authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="5f267-905">Compruebe el <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propiedad para determinar si ocurrió una autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-905">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="5f267-906">Si se produce un error en la autenticación, recibirá un <xref:System.Security.Authentication.AuthenticationException> o <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="5f267-906">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="5f267-907">En este caso, puede volver a intentar la autenticación con una credencial distinta.</span><span class="sxs-lookup"><span data-stu-id="5f267-907">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="5f267-908">Para realizar esta operación sincrónicamente, utilice uno de los <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5f267-908">To perform this operation synchronously, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f267-909">
            <paramref name="asyncResult" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-909">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5f267-910">
            <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-910">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-911">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-911">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-912">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-912">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-913">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-913">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-914">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-914">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-915">There is no pending client authentication to complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-915">There is no pending client authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsServer(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsServer (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsServer(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsServer : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsServer : IAsyncResult -&gt; unit" Usage="negotiateStream.EndAuthenticateAsServer asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="5f267-916">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-916">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-917">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-917">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-918">Si no se ha completado la operación, este método se bloquea hasta que lo haga.</span><span class="sxs-lookup"><span data-stu-id="5f267-918">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="5f267-919">Cuando la autenticación se realiza correctamente, debe comprobar la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> y <xref:System.Net.Security.NegotiateStream.IsSigned%2A> propiedades para determinar qué servicios de seguridad se usan por el <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-919">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="5f267-920">Compruebe el <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> propiedad para determinar si ocurrió una autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-920">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="5f267-921">Si se produce un error en la autenticación, recibirá un <xref:System.Security.Authentication.AuthenticationException> o <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="5f267-921">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="5f267-922">En este caso, puede volver a intentar la autenticación con una credencial distinta.</span><span class="sxs-lookup"><span data-stu-id="5f267-922">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="5f267-923">Para realizar esta operación sincrónicamente, utilice el <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5f267-923">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f267-924">
            <paramref name="asyncResult" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-924">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5f267-925">
            <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-925">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="5f267-926">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-926">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-927">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-927">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="5f267-928">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-928">The authentication failed.</span>
          </span>
          <span data-ttu-id="5f267-929">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-929">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-930">There is no pending authentication to complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-930">There is no pending authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="negotiateStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="5f267-931">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-931">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-932">Ends an asynchronous read operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-932">Ends an asynchronous read operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f267-933">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-933">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-934">Si no se ha completado la operación, este método se bloquea hasta que lo haga.</span><span class="sxs-lookup"><span data-stu-id="5f267-934">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="5f267-935">Para realizar esta operación sincrónicamente, utilice el <xref:System.Net.Security.NegotiateStream.Read%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5f267-935">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="5f267-936">No se puede llamar este método hasta que se haya autenticado correctamente.</span><span class="sxs-lookup"><span data-stu-id="5f267-936">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="5f267-937">Para autenticar, llame a uno de los <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, o <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="5f267-937">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f267-938">En el ejemplo de código siguiente se muestra de fin asincrónico la operación de lectura.</span><span class="sxs-lookup"><span data-stu-id="5f267-938">The following code example demonstrates ending an asynchronous read operation.</span></span> <span data-ttu-id="5f267-939">Para obtener un ejemplo que muestra cómo iniciar la operación, vea <xref:System.Net.Security.NegotiateStream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f267-939">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginRead%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#3)]
 [!code-csharp[NclNegoAsyncServer#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f267-940">
            <paramref name="asyncResult" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-940">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5f267-941">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-941">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-942">Authentication has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-942">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="5f267-943">The read operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-943">The read operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="negotiateStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="5f267-944">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-944">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-945">Ends an asynchronous write operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-945">Ends an asynchronous write operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-946">Si no se ha completado la operación, este método se bloquea hasta que lo haga.</span><span class="sxs-lookup"><span data-stu-id="5f267-946">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="5f267-947">No se puede llamar este método hasta que se haya autenticado correctamente.</span><span class="sxs-lookup"><span data-stu-id="5f267-947">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="5f267-948">Para autenticar, llame a uno de los <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, o <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="5f267-948">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="5f267-949">Para realizar esta operación sincrónicamente, utilice el <xref:System.Net.Security.NegotiateStream.Write%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5f267-949">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f267-950">En el ejemplo de código siguiente se muestra un método que se llama para completar la operación de escritura asincrónica.</span><span class="sxs-lookup"><span data-stu-id="5f267-950">The following code example demonstrates a method that is called to complete the asynchronous write operation.</span></span> <span data-ttu-id="5f267-951">Para obtener un ejemplo que muestra cómo iniciar la operación, vea <xref:System.Net.Security.NegotiateStream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f267-951">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginWrite%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
 [!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f267-952">
            <paramref name="asyncResult" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-952">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5f267-953">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-953">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-954">Authentication has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-954">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="5f267-955">The write operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-955">The write operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="negotiateStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5f267-956">Causes any buffered data to be written to the underlying device.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-956">Causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-957">Este método invoca <xref:System.IO.Stream.Flush%2A> en la secuencia subyacente.</span><span class="sxs-lookup"><span data-stu-id="5f267-957">This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f267-958">En el ejemplo de código siguiente se muestra vuelca la secuencia.</span><span class="sxs-lookup"><span data-stu-id="5f267-958">The following code example demonstrates flushing the stream.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonationLevel : System.Security.Principal.TokenImpersonationLevel" Usage="System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f267-959">Gets a value that indicates how the server can use the client's credentials.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-959">Gets a value that indicates how the server can use the client's credentials.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f267-960">Uno de los valores de <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-960">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-961">Debe autenticar correctamente antes de llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="5f267-961">You must successfully authenticate before calling this method.</span></span> <span data-ttu-id="5f267-962">Los clientes especificar el nivel de suplantación cuando solicitan la autenticación mediante una llamada a uno de los <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> o <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="5f267-962">Clients specify the impersonation level when they request authentication by calling one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="5f267-963">Si se autentica sin especificar un <xref:System.Security.Principal.TokenImpersonationLevel> , <xref:System.Security.Principal.TokenImpersonationLevel.Identification> se utiliza.</span><span class="sxs-lookup"><span data-stu-id="5f267-963">If you authenticate without specifying a <xref:System.Security.Principal.TokenImpersonationLevel> , <xref:System.Security.Principal.TokenImpersonationLevel.Identification> is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f267-964">En el ejemplo de código siguiente se muestra cómo mostrar el valor de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="5f267-964">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-965">Authentication failed or has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-965">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f267-966">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-966">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f267-967">
            <see langword="true" /> Si se produce una autenticación correcta; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-967">
              <see langword="true" /> if successful authentication occurred; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-968">Los clientes autenticarse mediante una llamada a la <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> o <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="5f267-968">Clients authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="5f267-969">Los servidores autenticarán mediante una llamada a la <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> o <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="5f267-969">Servers authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f267-970">En el ejemplo de código siguiente se muestra cómo mostrar el valor de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="5f267-970">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="C#" Value="public override bool IsEncrypted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncrypted" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEncrypted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEncrypted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEncrypted : bool" Usage="System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f267-971">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.NegotiateStream" /> uses data encryption.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-971">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.NegotiateStream" /> uses data encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f267-972">
            <see langword="true" /> Si los datos se cifran antes de transmitirse a través de la red y se descifran al llegar al extremo remoto; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-972">
              <see langword="true" /> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-973">El cifrado ayuda a proteger la privacidad de los datos; es decir, ayuda a garantizar que haya datos en tránsito no se puede descifrar un tercero.</span><span class="sxs-lookup"><span data-stu-id="5f267-973">Encryption helps to protect the privacy of the data; namely, it helps to ensure that while data is in transit it cannot be deciphered by third parties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f267-974">En el ejemplo de código siguiente se muestra cómo mostrar el valor de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="5f267-974">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Security.ProtectionLevel" />
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsMutuallyAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMutuallyAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMutuallyAuthenticated : bool" Usage="System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f267-975">Gets a <see cref="T:System.Boolean" /> value that indicates whether both the server and the client have been authenticated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-975">Gets a <see cref="T:System.Boolean" /> value that indicates whether both the server and the client have been authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f267-976">
            <see langword="true" /> Si se ha autenticado el servidor; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-976">
              <see langword="true" /> if the server has been authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-977">La autenticación mutua es especificada por el cliente cuando el cliente desea que el servidor para proporcionar las credenciales para la autenticación.</span><span class="sxs-lookup"><span data-stu-id="5f267-977">Mutual authentication is specified by the client when the client wants the server to provide credentials for authentication.</span></span> <span data-ttu-id="5f267-978">De forma predeterminada, los clientes solicitan la autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-978">By default, clients request mutual authentication.</span></span>  
  
 <span data-ttu-id="5f267-979">El protocolo de negociación selecciona NTLM o Kerberos dependiendo de los protocolos de seguridad admitidos por el cliente y servidor.</span><span class="sxs-lookup"><span data-stu-id="5f267-979">The Negotiate protocol selects either NTLM or Kerberos depending on the security protocols supported by the client and server.</span></span> <span data-ttu-id="5f267-980">NTLM no admite la autenticación mutua.</span><span class="sxs-lookup"><span data-stu-id="5f267-980">NTLM does not support mutual authentication.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f267-981">En el ejemplo de código siguiente se muestra cómo mostrar el valor de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="5f267-981">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServer">
      <MemberSignature Language="C#" Value="public override bool IsServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsServer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsServer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServer : bool" Usage="System.Net.Security.NegotiateStream.IsServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f267-982">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.NegotiateStream" /> was authenticated as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-982">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.NegotiateStream" /> was authenticated as the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f267-983">
            <see langword="true" /> Si el extremo local se autenticó correctamente como el lado del servidor de la conexión autenticada; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-983">
              <see langword="true" /> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-984">Si la autenticación no se pudo o no se ha producido, esta propiedad devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="5f267-984">If authentication failed or did not occur, this property returns `false`.</span></span>  
  
 <span data-ttu-id="5f267-985">Para autenticar que el servidor, llame a la <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> o <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="5f267-985">To authenticate as the server, call the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f267-986">En el ejemplo de código siguiente se muestra cómo mostrar el valor de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="5f267-986">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public override bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSigned { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSigned : bool" Usage="System.Net.Security.NegotiateStream.IsSigned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f267-987">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-987">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f267-988">
            <see langword="true" /> Si los datos se firman antes de transmitirse; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-988">
              <see langword="true" /> if the data is signed before being transmitted; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-989">Firma de datos ayuda a proteger la integridad de los datos; es decir, ayuda al destinatario a determinar si se ha alterado los datos mientras están en tránsito.</span><span class="sxs-lookup"><span data-stu-id="5f267-989">Data signing helps to protect the integrity of the data; namely, it helps the recipient determine whether the data has been tampered with while in transit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f267-990">En el ejemplo de código siguiente se muestra cómo mostrar el valor de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="5f267-990">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Net.Security.NegotiateStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f267-991">Gets the length of the underlying stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-991">Gets the length of the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f267-992">Un <see cref="T:System.Int64" /> que especifica la longitud de la secuencia subyacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-992">A <see cref="T:System.Int64" /> that specifies the length of the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-993">Esta propiedad devuelve el valor devuelto al invocar el <xref:System.IO.Stream.Length%2A> propiedad en la secuencia subyacente.</span><span class="sxs-lookup"><span data-stu-id="5f267-993">This property returns the value returned by invoking the <xref:System.IO.Stream.Length%2A> property on the underlying stream.</span></span> <span data-ttu-id="5f267-994">Si no se puede buscar la secuencia subyacente, esta propiedad normalmente producirá una excepción.</span><span class="sxs-lookup"><span data-stu-id="5f267-994">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="5f267-995">El tipo de tiempo de ejecución de la secuencia subyacente determina el tipo de tiempo de ejecución de la excepción que se produce.</span><span class="sxs-lookup"><span data-stu-id="5f267-995">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f267-996">En el ejemplo de código siguiente se muestra cómo mostrar el valor de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="5f267-996">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5f267-997">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-997">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Net.Security.NegotiateStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f267-998">Gets or sets the current position in the underlying stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-998">Gets or sets the current position in the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f267-999">Un <see cref="T:System.Int64" /> que especifica la posición actual en la secuencia subyacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-999">A <see cref="T:System.Int64" /> that specifies the current position in the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-1000">Esta propiedad devuelve el valor devuelto al invocar el <xref:System.IO.Stream.Position%2A> propiedad en la secuencia subyacente.</span><span class="sxs-lookup"><span data-stu-id="5f267-1000">This property returns the value returned by invoking the <xref:System.IO.Stream.Position%2A> property on the underlying stream.</span></span> <span data-ttu-id="5f267-1001">Si no se puede buscar la secuencia subyacente, esta propiedad normalmente producirá una excepción.</span><span class="sxs-lookup"><span data-stu-id="5f267-1001">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="5f267-1002">El tipo de tiempo de ejecución de la secuencia subyacente determina el tipo de tiempo de ejecución de la excepción que se produce.</span><span class="sxs-lookup"><span data-stu-id="5f267-1002">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5f267-1003">Setting this property is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1003">Setting this property is not supported.</span>
          </span>
          <span data-ttu-id="5f267-1004">\- or -  Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1004">\- or -  Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="negotiateStream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="5f267-1005">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1005">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="5f267-1006">A <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1006">A <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="5f267-1007">A <see cref="T:System.Int32" /> containing the maximum number of bytes to read from the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1007">A <see cref="T:System.Int32" /> containing the maximum number of bytes to read from the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-1008">Reads data from this stream and stores it in the specified array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1008">Reads data from this stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f267-1009">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1009">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          </span>
          <span data-ttu-id="5f267-1010">When there is no more data to be read, returns 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1010">When there is no more data to be read, returns 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-1011">El método lee un máximo de `count` secuencia de bytes del actual y los almacena en `buffer` comenzando por `offset`.</span><span class="sxs-lookup"><span data-stu-id="5f267-1011">The method reads a maximum of `count` bytes from the current stream and stores them in `buffer` beginning at `offset`.</span></span>  
  
 <span data-ttu-id="5f267-1012">No se puede llamar este método hasta que se haya autenticado correctamente.</span><span class="sxs-lookup"><span data-stu-id="5f267-1012">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="5f267-1013">Para autenticar, llame a uno de los <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, o <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="5f267-1013">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="5f267-1014">Para realizar esta operación asincrónicamente, utilice el <xref:System.Net.Security.NegotiateStream.BeginRead%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5f267-1014">To perform this operation asynchronously, use the <xref:System.Net.Security.NegotiateStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f267-1015">En el ejemplo de código siguiente se muestra cómo leer desde un <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-1015">The following code example demonstrates reading from a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncServer/CPP/NclNegoSyncServer.cpp#1)]
 [!code-csharp[NclNegoSyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="5f267-1016">The read operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1016">The read operation failed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-1017">Authentication has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1017">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5f267-1018">A <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> operation is already in progress.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1018">A <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> operation is already in progress.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f267-1019">Gets or sets the amount of time a read operation blocks waiting for data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1019">Gets or sets the amount of time a read operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f267-1020">Un <see cref="T:System.Int32" /> que especifica la cantidad de tiempo que transcurrirá antes de que falle una operación de lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1020">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a read operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-1021">Esta propiedad devuelve el valor devuelto al invocar el <xref:System.IO.Stream.ReadTimeout%2A> propiedad en la secuencia subyacente.</span><span class="sxs-lookup"><span data-stu-id="5f267-1021">This property returns the value returned by invoking the <xref:System.IO.Stream.ReadTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="5f267-1022">Al establecer esta propiedad, el <xref:System.IO.Stream.ReadTimeout%2A> valor en la secuencia subyacente se establece en el valor especificado.</span><span class="sxs-lookup"><span data-stu-id="5f267-1022">When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.</span></span>  
  
 <span data-ttu-id="5f267-1023">Si la secuencia subyacente es un <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.ReadTimeout%2A> está en milisegundos y se establece en <xref:System.Threading.Timeout.Infinite> de forma predeterminada para que las operaciones no tienen tiempo de espera de lectura.</span><span class="sxs-lookup"><span data-stu-id="5f267-1023">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f267-1024">En el ejemplo de código siguiente se muestra cómo mostrar el valor de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="5f267-1024">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteIdentity">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IIdentity RemoteIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity RemoteIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RemoteIdentity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ RemoteIdentity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteIdentity : System.Security.Principal.IIdentity" Usage="System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f267-1025">Gets information about the identity of the remote party sharing this authenticated stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1025">Gets information about the identity of the remote party sharing this authenticated stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f267-1026">Un <see cref="T:System.Security.Principal.IIdentity" /> objeto que describe la identidad del extremo remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1026">An <see cref="T:System.Security.Principal.IIdentity" /> object that describes the identity of the remote endpoint.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-1027">Cuando se tiene acceso por el cliente, esta propiedad devuelve un <xref:System.Security.Principal.GenericIdentity> que contiene el nombre Principal de servicio (SPN) del servidor y el protocolo de autenticación utilizado.</span><span class="sxs-lookup"><span data-stu-id="5f267-1027">When accessed by the client, this property returns a <xref:System.Security.Principal.GenericIdentity> containing the Service Principal Name (SPN) of the server and the authentication protocol used.</span></span> <span data-ttu-id="5f267-1028">Cuando se tiene acceso el servidor, esta propiedad devuelve un <xref:System.Security.Principal.WindowsIdentity> que describe el cliente.</span><span class="sxs-lookup"><span data-stu-id="5f267-1028">When accessed by the server, this property returns a <xref:System.Security.Principal.WindowsIdentity> that describes the client.</span></span> <span data-ttu-id="5f267-1029">Si el <xref:System.Security.Principal.WindowsIdentity> es no está disponible, se devuelve información del cliente al servidor en un <xref:System.Security.Principal.GenericIdentity>.</span><span class="sxs-lookup"><span data-stu-id="5f267-1029">If the <xref:System.Security.Principal.WindowsIdentity> is not available, client information is returned to the server in a <xref:System.Security.Principal.GenericIdentity>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f267-1030">En el ejemplo de código siguiente se muestra cómo mostrar el valor de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="5f267-1030">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#2)]
 [!code-csharp[NclNegoAsyncServer#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-1031">Authentication failed or has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1031">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="negotiateStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="5f267-1032">This value is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1032">This value is ignored.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="5f267-1033">This value is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1033">This value is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-1034">Throws <see cref="T:System.NotSupportedException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1034">Throws <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f267-1035">Always throws a <see cref="T:System.NotSupportedException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1035">Always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-1036">No llame a este método.</span><span class="sxs-lookup"><span data-stu-id="5f267-1036">Do not call this method.</span></span> <span data-ttu-id="5f267-1037">Se hereda, pero no es compatible con <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-1037">It is inherited, but is not supported by <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5f267-1038">Seeking is not supported on <see cref="T:System.Net.Security.NegotiateStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1038">Seeking is not supported on <see cref="T:System.Net.Security.NegotiateStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="negotiateStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5f267-1039">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1039">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-1040">Sets the length of the underlying stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1040">Sets the length of the underlying stream.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="negotiateStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="5f267-1041">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1041">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="5f267-1042">An <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1042">An <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="5f267-1043">A <see cref="T:System.Int32" /> containing the number of bytes to read from <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1043">A <see cref="T:System.Int32" /> containing the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f267-1044">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1044">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-1045">Si están habilitados el cifrado, firma, o cifrado y firma, este método lee los datos del búfer, cifra, firma o cifra y lo firma y transmite mediante la secuencia subyacente.</span><span class="sxs-lookup"><span data-stu-id="5f267-1045">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="5f267-1046">Si ningún servicio de seguridad, como el cifrado de datos o de firma están en uso, este método invoca <xref:System.IO.Stream.Write%2A> en la secuencia subyacente.</span><span class="sxs-lookup"><span data-stu-id="5f267-1046">If no security services such as data encryption or signing are in use, this method invokes <xref:System.IO.Stream.Write%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="5f267-1047">Este método se bloquea mientras se completa la operación de escritura.</span><span class="sxs-lookup"><span data-stu-id="5f267-1047">This method blocks while the write operation completes.</span></span> <span data-ttu-id="5f267-1048">Para evitar el bloqueo mientras se completa la operación, use el <xref:System.Net.Security.NegotiateStream.Write%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5f267-1048">To prevent blocking while the operation completes, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
 <span data-ttu-id="5f267-1049">No se puede llamar este método hasta que se haya autenticado correctamente.</span><span class="sxs-lookup"><span data-stu-id="5f267-1049">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="5f267-1050">Para autenticar, llame a uno de los <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, o <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="5f267-1050">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="5f267-1051">La <xref:System.Net.Security.NegotiateStream> clase no admite varias operaciones de escritura simultáneas.</span><span class="sxs-lookup"><span data-stu-id="5f267-1051">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="5f267-1052">Si intenta iniciar una operación de escritura cuando ya se está ejecutando otra operación de escritura en la misma secuencia, un <xref:System.NotSupportedException> se producirá la excepción.</span><span class="sxs-lookup"><span data-stu-id="5f267-1052">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f267-1053">En el ejemplo de código siguiente se muestra cómo escribir en un <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="5f267-1053">The following code example demonstrates writing to a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f267-1054">
            <paramref name="buffer" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1054">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5f267-1055">
            <paramref name="offset is less than 0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1055">
              <paramref name="offset is less than 0" />.</span>
          </span>
          <span data-ttu-id="5f267-1056">\- or -  <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1056">\- or -  <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="5f267-1057">\- or -  <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1057">\- or -  <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="5f267-1058">The write operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1058">The write operation failed.</span>
          </span>
          <span data-ttu-id="5f267-1059">\- or -  Encryption is in use, but the data could not be encrypted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1059">\- or -  Encryption is in use, but the data could not be encrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5f267-1060">There is already a write operation in progress.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1060">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5f267-1061">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1061">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f267-1062">Authentication has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1062">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f267-1063">Gets or sets the amount of time a write operation blocks waiting for data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1063">Gets or sets the amount of time a write operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f267-1064">Un <see cref="T:System.Int32" /> que especifica la cantidad de tiempo que transcurrirá antes de que falle una operación de escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f267-1064">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a write operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f267-1065">Esta propiedad devuelve el valor devuelto al invocar el <xref:System.IO.Stream.WriteTimeout%2A> propiedad en la secuencia subyacente.</span><span class="sxs-lookup"><span data-stu-id="5f267-1065">This property returns the value returned by invoking the <xref:System.IO.Stream.WriteTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="5f267-1066">Para las operaciones de conjunto, Establece el valor especificado la <xref:System.IO.Stream.WriteTimeout%2A> valor en la secuencia subyacente.</span><span class="sxs-lookup"><span data-stu-id="5f267-1066">For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.</span></span>  
  
 <span data-ttu-id="5f267-1067">Si la secuencia subyacente es un <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.WriteTimeout%2A> está en milisegundos y se establece en <xref:System.Threading.Timeout.Infinite> de forma predeterminada, por lo que escribir las operaciones no tienen tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="5f267-1067">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f267-1068">En el ejemplo de código siguiente se muestra cómo mostrar el valor de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="5f267-1068">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>