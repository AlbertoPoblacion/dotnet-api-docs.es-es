<Type Name="WmiConfigurationAttribute" FullName="System.Management.Instrumentation.WmiConfigurationAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d0f019b5b3031ce35b08b4ebefbd6258d1095bc" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58704215" /></Metadata><TypeSignature Language="C#" Value="public sealed class WmiConfigurationAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WmiConfigurationAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.WmiConfigurationAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WmiConfigurationAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class WmiConfigurationAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type WmiConfigurationAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>El atributo WmiConfiguration indica que un ensamblado contiene código que implementa un proveedor WMI mediante el modelo de extensiones de proveedor WMI.NET. El atributo acepta parámetros que establecen la configuración de alto nivel del proveedor WMI implementado.  
  
Nota: Las bibliotecas .NET de WMI ahora se consideran en estado final y no estarán disponibles desarrollos posteriores, mejoras o actualizaciones para problemas no relacionados con la seguridad que afectan a estas bibliotecas. Las [API de MI](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) deben usarse para todo el nuevo desarrollo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En la tabla siguiente se enumera los parámetros aceptados por este atributo junto con qué aspecto de la configuración del proveedor le permite controlar.  
  
|Parámetro|Configura|  
|---------------|----------------|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.Scope>|El espacio de nombres en el que el proveedor expone las clases.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity>|-La seguridad (DACL) en el espacio de nombres utilizado.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel>|-El modelo de hospedaje que se usará el proveedor.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel>|-El modo de suplantación del proveedor.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup>|El grupo de hospedaje que pertenece el proveedor. Este parámetro solo se aplica a los proveedores en proceso.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction>|La seguridad (DACL) en el proveedor de WMI.|  
  
   
  
## Examples  
  
```  
// Specify that this assembly contains code that implements a WMI  
// Provider. Use the assembly:WmiConfiguration attribute to define  
// the WMI namespace, the hosting model, and the impersonation mode  
// of the WMI provider.  
// The attribute below specifies that the class this provider  
// exposes to WMI will be in the root/MortgageCalc namespace, will  
// use the decoupled hosting model and will not allow the provider  
// to impersonate its callers.  
  
[assembly: WmiConfiguration("root/MortgageCalc",HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = false)]  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WmiConfigurationAttribute (string scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.WmiConfigurationAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WmiConfigurationAttribute(System::String ^ scope);" />
      <MemberSignature Language="F#" Value="new System.Management.Instrumentation.WmiConfigurationAttribute : string -&gt; System.Management.Instrumentation.WmiConfigurationAttribute" Usage="new System.Management.Instrumentation.WmiConfigurationAttribute scope" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope">Espacio de nombres WMI en el que el proveedor expondrá las clases. Por ejemplo, "root\MiEspacioDeNombresDeProveedor".</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Management.Instrumentation.WmiConfigurationAttribute" /> que especifica el espacio de nombres WMI en el que el proveedor WMI expondrá las clases.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un proveedor de WMI debe exponer sus clases en un espacio de nombres. Que es el motivo por el constructor requiere el ámbito como un parámetro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostingGroup">
      <MemberSignature Language="C#" Value="public string HostingGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HostingGroup" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property HostingGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HostingGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HostingGroup : string with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el grupo de hospedaje para el proveedor WMI.</summary>
        <value>Valor <see cref="T:System.String" /> que indica el grupo de hospedaje para el proveedor WMI.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Grupos de hospedaje solo se aplican a los proveedores que hospedan en el proceso. El valor se omite para los proveedores desacoplados.  
  
 Un grupo de hospedaje es un conjunto de proveedores en proceso que tienen asignado el mismo nombre de grupo de hospedaje. El nombre del grupo de hospedaje es una cadena que defina para agrupar lógicamente los proveedores. Todos los proveedores en proceso en el mismo grupo de hospedaje que se ejecutan en el mismo contexto de seguridad se hospedan en una única instancia del proceso Wmiprvse.exe. Por lo tanto, los proveedores que comparten el mismo contexto de seguridad y el grupo host comparten el mismo proceso de host de servicio.  
  
   
  
## Examples  
 En el ejemplo siguiente, el <xref:System.Management.Instrumentation.WmiConfigurationAttribute> se utiliza para indicar que el ensamblado se encuentra en implementa un proveedor en proceso que se ejecuta en el contexto de seguridad de NetworkService y se hospeda en una instancia del proceso Wmiprvse.exe que también hospeda cualquiera otros proveedores en proceso en el mismo grupo de hospedaje también se ejecutan en el contexto de seguridad de NetworkService.  
  
```  
[assembly: WmiConfiguration("root\\NVPair", HostingModel = ManagementHostingModel.NetworkService), HostingGroup = "MyProviders"]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostingModel">
      <MemberSignature Language="C#" Value="public System.Management.Instrumentation.ManagementHostingModel HostingModel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Instrumentation.ManagementHostingModel HostingModel" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel" />
      <MemberSignature Language="VB.NET" Value="Public Property HostingModel As ManagementHostingModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::Instrumentation::ManagementHostingModel HostingModel { System::Management::Instrumentation::ManagementHostingModel get(); void set(System::Management::Instrumentation::ManagementHostingModel value); };" />
      <MemberSignature Language="F#" Value="member this.HostingModel : System.Management.Instrumentation.ManagementHostingModel with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Instrumentation.ManagementHostingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el modelo de hospedaje para el proveedor WMI.</summary>
        <value>Valor <see cref="T:System.Management.Instrumentation.ManagementHostingModel" /> que indica el modelo de hospedaje del proveedor WMI.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los proveedores de WMI se pueden hospedar una aplicación o el servicio WMI. Los proveedores de WMI hospedados en una aplicación se denominan proveedores desacoplados. Los que estén hospedados por el servicio WMI se denominan proveedores en proceso. El valor de modelo de hospedaje determina tanto el modelo de hospedaje y, en el caso de los proveedores en proceso, la cuenta (contexto de seguridad) que se ejecuta el proveedor. Para obtener más detalles acerca de los valores posibles de HostingModel, vea <xref:System.Management.Instrumentation.ManagementHostingModel>.  
  
 Para obtener más información acerca de los modelos de hospedaje, vea el [Provider Hosting and Security](https://go.microsoft.com/fwlink/?LinkId=100075) tema en el SDK de WMI en MSDN.  
  
   
  
## Examples  
 En el ejemplo siguiente, el <xref:System.Management.Instrumentation.WmiConfigurationAttribute> se utiliza para indicar que el ensamblado se encuentra en implementa un proveedor que se expone a través del espacio de nombres root\NVPair. Dado que el modelo de hospedaje no es <xref:System.Management.Instrumentation.ManagementHostingModel.Decoupled>, es un proveedor en proceso. El valor <xref:System.Management.Instrumentation.ManagementHostingModel.NetworkService> indica que el proveedor en proceso se ejecuta bajo el contexto de seguridad de NetworkService.  
  
```  
[assembly: WmiConfiguration("root\\NVPair", HostingModel = ManagementHostingModel.NetworkService)]  
```  
  
 En el ejemplo siguiente, el <xref:System.Management.Instrumentation.WmiConfigurationAttribute> se utiliza para indicar que el ensamblado se encuentra en implementa un proveedor que se expone a través del espacio de nombres root\NVPair. El valor <xref:System.Management.Instrumentation.ManagementHostingModel.Decoupled> indica que es un proveedor desacoplado.  
  
```  
[assembly: WmiConfiguration("root\\NVPair", HostingModel = ManagementHostingModel.Decoupled)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentifyLevel">
      <MemberSignature Language="C#" Value="public bool IdentifyLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IdentifyLevel" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IdentifyLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IdentifyLevel { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IdentifyLevel : bool with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que especifica si el proveedor WMI puede suplantar a sus llamadores. Si el valor es false, el proveedor no puede suplantarlos y si el valor es true, el proveedor puede suplantarlos.</summary>
        <value>Valor booleano que indica si un proveedor puede o no suplantar a sus llamadores. Si el valor es false, el proveedor no puede suplantarlos y si el valor es true, el proveedor puede suplantarlos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información, vea el tema "Provider Hosting and Security" en la biblioteca MSDN en línea en [ http://www.msdn.com ](https://www.msdn.com/).  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo usar el parámetro IdentifyLevel para indicar que el proveedor puede suplantar a sus llamadores.  
  
```  
[assembly: WmiConfiguration("root/MyProv", HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = true]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceSecurity">
      <MemberSignature Language="C#" Value="public string NamespaceSecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceSecurity" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property NamespaceSecurity As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NamespaceSecurity { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceSecurity : string with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una cadena de Lenguaje de definición de descriptores de seguridad (SDDL) que especifica el descriptor de seguridad en el espacio de nombres en el que el proveedor expone los objetos de administración.</summary>
        <value>Cadena SDDL que representa el descriptor de seguridad en el espacio de nombres en el que el proveedor expone los objetos de administración.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información sobre cómo representar los descriptores de seguridad en formato SDDL, consulte el [formato de cadena de Descriptor de seguridad](https://go.microsoft.com/fwlink/?LinkId=100763) tema en MSDN library en línea.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo usar el parámetro NamespaceSecurity para establecer el descriptor de seguridad en el espacio de nombres root/SDTest en el que el proveedor implementado en este ensamblado expone las clases WMI.  
  
```  
[assembly: WmiConfiguration("root/SDTest", HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = false, NamespaceSecurity = "O:BAG:BAD:(A;CI;0x60003;;;WD)")]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public string Scope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scope" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.Scope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scope As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Scope { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scope : string" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el espacio de nombres WMI en el que el proveedor WMI expone las clases.</summary>
        <value>Valor <see cref="T:System.String" /> que indica el espacio de nombres en el que el proveedor WMI expone las clases.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un espacio de nombres WMI es una categoría dentro del repositorio WMI. El espacio de nombres root/cimv2 usadas con frecuencia contiene clases que describen el modelo de información común, versión 2, definido por el consorcio Desktop Management Task Force (DMTF). Sólo debe exponer los proveedores en ese espacio de nombres si va a expandir el modelo de CIM estándar. En caso contrario, debe crear un espacio de nombres adecuado que deje claro a los usuarios el tipo de clases WMI que pueden esperar encontrar en el espacio de nombres.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityRestriction">
      <MemberSignature Language="C#" Value="public string SecurityRestriction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SecurityRestriction" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityRestriction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SecurityRestriction { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityRestriction : string with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un descriptor de seguridad para el proveedor WMI. Para obtener más información, vea la información de la propiedad SecurityDescriptor en el tema "__Win32Provider" en la biblioteca de MSDN en línea en [http://www.msdn.com](https://www.msdn.com/).</summary>
        <value>Valor <see cref="T:System.String" /> que contiene el descriptor de seguridad para el proveedor WMI.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>