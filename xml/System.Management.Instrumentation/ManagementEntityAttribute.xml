<Type Name="ManagementEntityAttribute" FullName="System.Management.Instrumentation.ManagementEntityAttribute">
  <TypeSignature Language="C#" Value="public sealed class ManagementEntityAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagementEntityAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.ManagementEntityAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManagementEntityAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementEntityAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="19b87-101">El atributo ManagementEntity indica que una clase proporciona información de administración expuesta a través de un proveedor WMI.</span><span class="sxs-lookup"><span data-stu-id="19b87-101">The ManagementEntity attribute indicates that a class provides management information exposed through a WMI provider.</span></span>  
  
 <span data-ttu-id="19b87-102">Nota: Las bibliotecas .NET de WMI ahora se consideran en estado final y no estarán disponibles desarrollos posteriores, mejoras o actualizaciones para problemas no relacionados con la seguridad que afectan a estas bibliotecas.</span><span class="sxs-lookup"><span data-stu-id="19b87-102">Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries.</span></span> <span data-ttu-id="19b87-103">Las [API de MI](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) deben usarse para todo el nuevo desarrollo.</span><span class="sxs-lookup"><span data-stu-id="19b87-103">The [MI APIs](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19b87-104">La clase marcada por este atributo debe ser pública.</span><span class="sxs-lookup"><span data-stu-id="19b87-104">The class marked by this attribute must be public.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19b87-105">En el ejemplo siguiente se muestra cómo usar el atributo ManagementEntity para marcar una clase.</span><span class="sxs-lookup"><span data-stu-id="19b87-105">The following example shows how to use the ManagementEntity attribute to mark a class.</span></span>  
  
```  
// Use the ManagementEntity attribute on the class to specify that this // class contains management information that is available from  
// provider.  
  
    [ManagementEntity(Name = "MortgageCalc")]  
    public class MortgageCalcWMIProvider  
    {  
    }  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEntityAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.ManagementEntityAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEntityAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19b87-106">Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementEntityAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="19b87-106">Initializes a new instance of the <see cref="T:System.Management.ManagementEntityAttribute" /> class.</span></span> <span data-ttu-id="19b87-107">Éste es el constructor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="19b87-107">This is the default constructor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19b87-108">Este constructor no toma un parámetro de nombre.</span><span class="sxs-lookup"><span data-stu-id="19b87-108">This constructor does not take a name parameter.</span></span> <span data-ttu-id="19b87-109">Si no especifica un nombre mediante el <xref:System.Management.Instrumentation.ManagementEntityAttribute.Name> parámetro, el nombre de la clase WMI asociada valor predeterminado será el nombre de la clase con atributos.</span><span class="sxs-lookup"><span data-stu-id="19b87-109">If you do not specify a name by using the <xref:System.Management.Instrumentation.ManagementEntityAttribute.Name> parameter, the name of the associated WMI class will default to the name of the attributed class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="External">
      <MemberSignature Language="C#" Value="public bool External { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool External" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementEntityAttribute.External" />
      <MemberSignature Language="VB.NET" Value="Public Property External As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool External { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19b87-110">Obtiene o establece un valor que especifica si la clase representa una clase WMI en un proveedor implementado externo al ensamblado actual.</span><span class="sxs-lookup"><span data-stu-id="19b87-110">Gets or sets a value that specifies whether the class represents a WMI class in a provider implemented external to the current assembly.</span></span></summary>
        <value><span data-ttu-id="19b87-111">Valor booleano que es true si la clase representa una clase WMI externa y, de lo contrario, es false.</span><span class="sxs-lookup"><span data-stu-id="19b87-111">A boolean value that is true if the class represents an external WMI class and false otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19b87-112">Esto se usa al implementar proveedores que implementan las clases que extienden las clases WMI abstractas existentes.</span><span class="sxs-lookup"><span data-stu-id="19b87-112">This is used when implementing providers that implement classes that extend existing abstract WMI classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementEntityAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19b87-113">Obtiene o establece el nombre de la clase WMI.</span><span class="sxs-lookup"><span data-stu-id="19b87-113">Gets or sets the name of the WMI class.</span></span></summary>
        <value><span data-ttu-id="19b87-114">Cadena que contiene el nombre de la clase WMI.</span><span class="sxs-lookup"><span data-stu-id="19b87-114">A string that contains the name of the WMI class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19b87-115">Si no se especifica el nombre de la clase WMI estableciendo esta propiedad, la clase WMI predeterminada será para el nombre de la clase con atributos.</span><span class="sxs-lookup"><span data-stu-id="19b87-115">If you do not specify the name of the WMI class by setting this property, the WMI class will default to the name of the attributed class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19b87-116">En el ejemplo siguiente, se usa el parámetro Name para establecer el nombre de la clase WMI representada por la clase MortgageCalcWMIProvider.</span><span class="sxs-lookup"><span data-stu-id="19b87-116">In the following example, the Name parameter is used to set the name of the WMI class represented by the MortgageCalcWMIProvider class.</span></span> <span data-ttu-id="19b87-117">Establece el nombre en MortgageCalculator.</span><span class="sxs-lookup"><span data-stu-id="19b87-117">It sets the name to MortgageCalculator.</span></span> <span data-ttu-id="19b87-118">Si el nombre del parámetro no utiliza, la correspondiente C# nombre de clase, MortgageCalcWMIProvider en este caso, se utiliza como el nombre de clase WMI.</span><span class="sxs-lookup"><span data-stu-id="19b87-118">If the Name parameter is not used, the corresponding C# class name, MortgageCalcWMIProvider in this case, is used as the WMI class name.</span></span>  
  
```  
[ManagementEntity(Name = "MortgageCalculator")]  
public class MortgageCalcWMIProvider  
{  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Singleton">
      <MemberSignature Language="C#" Value="public bool Singleton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Singleton" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementEntityAttribute.Singleton" />
      <MemberSignature Language="VB.NET" Value="Public Property Singleton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Singleton { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19b87-119">Especifica si la clase asociada representa una clase WMI singleton.</span><span class="sxs-lookup"><span data-stu-id="19b87-119">Specifies whether the associated class represents a singleton WMI class.</span></span></summary>
        <value><span data-ttu-id="19b87-120">Valor booleano que es true si la clase representa una clase WMI singleton y, de lo contrario, es false.</span><span class="sxs-lookup"><span data-stu-id="19b87-120">A boolean value that is true if the class represents a singleton WMI class and false otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19b87-121">Una clase singleton de WMI es aquel para el que puede siempre ser una sola instancia.</span><span class="sxs-lookup"><span data-stu-id="19b87-121">A singleton WMI class is one for which there can only ever be a single instance.</span></span> <span data-ttu-id="19b87-122">Aunque podría codificar la lógica para garantizar que nunca se crea una sola instancia de una clase WMI, este atributo de parámetro se proporciona para que la tarea fácil y coherente.</span><span class="sxs-lookup"><span data-stu-id="19b87-122">Although you could code the logic to ensure that only a single instance of a WMI class is ever created, this parameter attribute is provided to make the task easy and consistent.</span></span>  
  
 <span data-ttu-id="19b87-123">Al trabajar con clases singleton de WMI, las aplicaciones cliente deben usar una sintaxis especial.</span><span class="sxs-lookup"><span data-stu-id="19b87-123">When working with singleton WMI classes, client applications must use special syntax.</span></span> <span data-ttu-id="19b87-124">Para obtener más información, vea el Describing un tema de la ruta de acceso de objeto de instancia en la biblioteca MSDN en línea en [ http://www.msdn.com ](http://www.msdn.com/).</span><span class="sxs-lookup"><span data-stu-id="19b87-124">For more information, see the Describing an Instance Object Path topic in the MSDN online library at [http://www.msdn.com](http://www.msdn.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19b87-125">El fragmento de código siguiente muestra cómo usar el parámetro Singleton para indicar que una clase de C# corresponde a una clase singleton de WMI.</span><span class="sxs-lookup"><span data-stu-id="19b87-125">The following code snippet demonstrates how to use the Singleton parameter to indicate that a C# class corresponds to a singleton WMI class.</span></span>  
  
```  
[ManagementEntity(Singleton=true)]  
public class SingletonSample  
```  
  
 <span data-ttu-id="19b87-126">Para obtener un ejemplo completo, el trabajo de un proveedor que implementa una clase singleton, vea [Cómo: crear un proveedor desacoplado básico](http://msdn.microsoft.com/library/1dabd442-c1ff-40a1-bb0e-d7b3566c2300).</span><span class="sxs-lookup"><span data-stu-id="19b87-126">For a complete, working example of a provider that implements a singleton class, see [How to: Create a Basic Decoupled Provider](http://msdn.microsoft.com/library/1dabd442-c1ff-40a1-bb0e-d7b3566c2300).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>