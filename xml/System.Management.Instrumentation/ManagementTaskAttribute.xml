<Type Name="ManagementTaskAttribute" FullName="System.Management.Instrumentation.ManagementTaskAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dbfc87eb4b5b091ee031dfe47559854e667dd222" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30458679" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ManagementTaskAttribute : System.Management.Instrumentation.ManagementMemberAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagementTaskAttribute extends System.Management.Instrumentation.ManagementMemberAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.ManagementTaskAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManagementTaskAttribute&#xA;Inherits ManagementMemberAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementTaskAttribute sealed : System::Management::Instrumentation::ManagementMemberAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Instrumentation.ManagementMemberAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5a773-101">El atributo ManagementTask indica que el método de destino implementa un método WMI.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5a773-101">The ManagementTask attribute indicates that the target method implements a WMI method.</span>
      </span>
      <span data-ttu-id="5a773-102">Nota: Las bibliotecas .NET de WMI ahora se consideran en estado final y no estarán disponibles desarrollos posteriores, mejoras o actualizaciones para problemas no relacionados con la seguridad que afectan a estas bibliotecas.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5a773-102">Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries.</span>
      </span>
      <span data-ttu-id="5a773-103">Las [API de MI](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) deben usarse para todo el nuevo desarrollo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5a773-103">The [MI APIs](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a773-104">De forma predeterminada, el nombre del método WMI será el nombre del método de destino.</span><span class="sxs-lookup"><span data-stu-id="5a773-104">By default, the WMI method name will be the name of the target method.</span></span> <span data-ttu-id="5a773-105">La clase primaria de este atributo, <xref:System.Management.Instrumentation.ManagementMemberAttribute>, incluye un parámetro de nombre.</span><span class="sxs-lookup"><span data-stu-id="5a773-105">The parent class of this attribute, <xref:System.Management.Instrumentation.ManagementMemberAttribute>, includes a Name parameter.</span></span> <span data-ttu-id="5a773-106">Puede usar ese parámetro para cambiar el nombre del método que se expone a través de WMI sin cambiar el nombre del método interno.</span><span class="sxs-lookup"><span data-stu-id="5a773-106">You can use that parameter to change the name of the method that is exposed through WMI without changing your internal method name.</span></span>  
  
 <span data-ttu-id="5a773-107">El método debe ser público y puede ser estático.</span><span class="sxs-lookup"><span data-stu-id="5a773-107">The method must be public and it may be static.</span></span> <span data-ttu-id="5a773-108">Puede incluir cualquier combinación de [in], [out], [entre], parámetros de referencia de objeto o matriz.</span><span class="sxs-lookup"><span data-stu-id="5a773-108">It can include any combination of [in], [out], [in/out], array or object reference parameters.</span></span> <span data-ttu-id="5a773-109">Parámetros de matriz no pueden ser multidimensionales o escalonados debido a las limitaciones impuestas por WMI.</span><span class="sxs-lookup"><span data-stu-id="5a773-109">Array parameters cannot be multidimensional or jagged because of limitations imposed by WMI.</span></span>  
  
 <span data-ttu-id="5a773-110">El tipo de valor devuelto del método puede ser: nulo, escalar, cadena, fecha y hora o de objeto.</span><span class="sxs-lookup"><span data-stu-id="5a773-110">The return type of the method can be: void, scalar, string, datetime or object.</span></span> <span data-ttu-id="5a773-111">No puede ser una matriz.</span><span class="sxs-lookup"><span data-stu-id="5a773-111">It cannot be an array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a773-112">En el ejemplo siguiente se muestra cómo marcar un método con el atributo ManagementTask para exponer el método a WMI.</span><span class="sxs-lookup"><span data-stu-id="5a773-112">The following example shows how to mark a method with the ManagementTask attribute to expose the method to WMI.</span></span> <span data-ttu-id="5a773-113">El método se mostrará en WMI como ResetCounters.</span><span class="sxs-lookup"><span data-stu-id="5a773-113">The method will show up in WMI as ResetCounters.</span></span>  
  
```csharp  
// Use the ManagementTask attribute to specify that a method  
// is exposed to WMI through this provider. Consumers will be  
// able to execute this method through WMI.  
[ManagementTask]  
public void ResetCounters()  
{  
    counter.Reset();  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Management.Instrumentation.ManagementConfigurationAttribute" />
    <altmember cref="T:System.Management.Instrumentation.ManagementEnumeratorAttribute" />
    <altmember cref="T:System.Management.Instrumentation.ManagementProbeAttribute" />
    <altmember cref="T:System.Management.Instrumentation.ManagementKeyAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementTaskAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.ManagementTaskAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementTaskAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a773-114">Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementTaskAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a773-114">Initializes a new instance of the <see cref="T:System.Management.ManagementTaskAttribute" /> class.</span>
          </span>
          <span data-ttu-id="5a773-115">Éste es el constructor predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a773-115">This is the default constructor.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public Type Schema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Schema" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementTaskAttribute.Schema" />
      <MemberSignature Language="VB.NET" Value="Public Property Schema As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Schema { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a773-116">Obtiene o establece un valor que define el tipo de resultado que el método marcado con el atributo ManagementTask generará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a773-116">Gets or sets a value that defines the type of output that the method that is marked with the ManagementTask attribute will output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a773-117">Valor <see cref="T:System.Type" /> que indica el tipo de resultado que el método marcado con el atributo ManagementTask generará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a773-117">A <see cref="T:System.Type" /> value that indicates the type of output that the method that is marked with the ManagementTask attribute will output.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a773-118">Si el tipo devuelto es <xref:System.Object?displayProperty=nameWithType>, a continuación, la salida debe tratarse como un valor de tipo <xref:System.Object?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5a773-118">If the returned type is <xref:System.Object?displayProperty=nameWithType>, then the output should be treated as a value of type <xref:System.Object?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>