<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CustomReflectionContext.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52cb0994464985332742e76a283814be590106a9b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2cb0994464985332742e76a283814be590106a9b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>Represents a customizable reflection context.</source>
          <target state="translated">Representa un contexto de reflexión personalizable.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source><ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> provides a way for you to add or remove custom attributes from reflection objects, or add dummy properties to those objects, without re-implementing the complete reflection model.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> Proporciona una manera de agregar o quitar atributos personalizados de los objetos de reflexión o agregar propiedades ficticios para esos objetos, sin necesidad de volver a implementar el modelo de reflexión completa.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>The default <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> simply wraps reflection objects without making any changes, but by subclassing and overriding the relevant methods, you can add, remove, or change the attributes that apply to any reflected parameter or member, or add new properties to a reflected type.</source>
          <target state="translated">El valor predeterminado <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> simplemente ajusta reflexión objetos sin realizar ningún cambio, pero con la creación de subclases y reemplazando los métodos pertinentes, puede agregar, quitar, o cambiar los atributos que se aplican a cualquier parámetro reflejado o un miembro o agregar nuevas propiedades a un tipo reflejado.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>For example, suppose that your code follows the convention of applying a particular attribute to factory methods, but you are now required to work with third-party code that lacks attributes.</source>
          <target state="translated">Por ejemplo, suponga que el código sigue la convención de aplicar un atributo determinado a patrones de diseño, pero ahora, debe trabajar con código de terceros que no tiene atributos.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>You can use <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> to specify a rule for identifying the objects that should have attributes and to supply the objects with those attributes when they are viewed from your code.</source>
          <target state="translated">Puede usar <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> para especificar una regla para identificar los objetos que deben tener atributos y para proporcionar los objetos con esos atributos cuando se visualizan desde el código.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>To use <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> effectively, the code that uses the reflected objects must support the notion of specifying a reflection context, instead of assuming that all reflected objects are associated with the runtime reflection context.</source>
          <target state="translated">Para usar <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> de hecho, el código que usa los objetos reflejados debe admitir la noción de especificar un contexto de reflexión, en lugar de suponer que todos queden reflejados de objetos están asociados con el contexto de reflexión en tiempo de ejecución.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>Many reflection methods in the .NET Framework provide a <ph id="ph1">&lt;xref:System.Reflection.ReflectionContext&gt;</ph> parameter for this purpose.</source>
          <target state="translated">Muchos métodos de reflexión en .NET Framework proporcionan un <ph id="ph1">&lt;xref:System.Reflection.ReflectionContext&gt;</ph> parámetro para este propósito.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>To modify the attributes that are applied to a reflected parameter or member, override the <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29&gt;</ph> or <ph id="ph2">&lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29&gt;</ph> method.</source>
          <target state="translated">Para modificar los atributos que se aplican a un parámetro reflejado o un miembro, reemplace el <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29&gt;</ph> o <ph id="ph2">&lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>These methods take the reflected object and the list of attributes under its current reflection context, and return the list of attributes it should have under the custom reflection context.</source>
          <target state="translated">Estos métodos toman el objeto reflejado y la lista de atributos en el contexto actual de la reflexión y devuelven la lista de atributos que debe tener en el contexto de reflexión personalizados.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source><ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> methods should not access the list of attributes of a reflected object or method directly by calling the <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> method on the provided <ph id="ph3">&lt;xref:System.Reflection.MemberInfo&gt;</ph> or <ph id="ph4">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> instance, but should instead use the <ph id="ph5">`declaredAttributes`</ph> list, which is passed as a parameter to the <ph id="ph6">&lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A&gt;</ph> method overloads.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> métodos no deben acceder a la lista de atributos de un método o un objeto reflejado directamente mediante una llamada a la <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> método en proporcionado <ph id="ph3">&lt;xref:System.Reflection.MemberInfo&gt;</ph> o <ph id="ph4">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> de instancia, pero en su lugar, debe utilizar el <ph id="ph5">`declaredAttributes`</ph> lista, que se pasa como un parámetro para el <ph id="ph6">&lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A&gt;</ph> sobrecargas del método.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>To add properties to a reflected type, override the <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt;</ph> method.</source>
          <target state="translated">Para agregar propiedades a un tipo reflejado, invalide el <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>The method accepts a parameter that specifies the reflected type, and returns a list of additional properties.</source>
          <target state="translated">El método acepta un parámetro que especifica el tipo reflejado y devuelve una lista de propiedades adicionales.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>You should use the <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A&gt;</ph> method to create property objects to return.</source>
          <target state="translated">Debe utilizar el <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A&gt;</ph> método para crear objetos de propiedad para devolver.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>You can specify delegates when creating the property that will serve as the property accessor, and you can omit one of the accessors to create a read-only or write-only property.</source>
          <target state="translated">Puede especificar a los delegados al crear la propiedad que servirá como el descriptor de acceso de propiedad y puede omitir uno de los descriptores de acceso para crear una propiedad de solo lectura o de solo escritura.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>Note that such dummy properties have no metadata or Common Intermediate Language (CIL) backing.</source>
          <target state="translated">Tenga en cuenta que estas propiedades ficticias no tienen metadatos ni copias de seguridad de Common Intermediate Language (CIL).</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>Be cautious about equality among reflected objects when you work with reflection contexts, because objects may represent the same reflected object in multiple contexts.</source>
          <target state="translated">Tenga cuidado al igualdad entre objetos reflejados cuando se trabaja con contextos de reflexión, porque los objetos que representan el mismo objeto reflejado en varios contextos.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>You can use the <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.MapType%2A&gt;</ph> method to obtain a particular reflection context's version of a reflected object.</source>
          <target state="translated">Puede usar el <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.MapType%2A&gt;</ph> método para obtener la versión de un contexto de reflexión determinado de un objeto reflejado.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>A <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> object alters the attributes returned by a particular reflection object, such as those obtained by the <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> method.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> objeto modifica los atributos devueltos por un objeto de reflexión determinado, como los obtenidos por la <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>It does not alter the custom attribute data returned by the <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A&gt;</ph> method, and these two lists will not match when you use a custom reflection context.</source>
          <target state="translated">No modifica los datos del atributo personalizado devueltos por la <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A&gt;</ph> método y estas dos listas no coincidirán cuando se usa un contexto de reflexión personalizados.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>The following example demonstrates how to subclass  <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> to add a custom attribute to all the members of a given type whose names begin with "To".</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo crear subclases de <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> para agregar un atributo personalizado a todos los miembros de un tipo determinado cuyos nombres comienzan por "A".</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>To run this code, paste it into an empty console project, and make sure to include a reference to System.Reflection.Context.dll.</source>
          <target state="translated">Para ejecutar este código, péguelo en un proyecto de consola vacía y asegúrese de incluir una referencia a System.Reflection.Context.dll.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.Context.CustomReflectionContext" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Reflection.Context.CustomReflectionContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.Context.CustomReflectionContext" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Reflection.Context.CustomReflectionContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)">
          <source>The reflection context to use as a base.</source>
          <target state="translated">El contexto de la reflexión que se va a usar como base.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.Context.CustomReflectionContext" /&gt;</ph> class with the specified reflection context as a base.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Reflection.Context.CustomReflectionContext" /&gt;</ph> con el contexto de reflexión especificado como base.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)">
          <source>The type to add properties to.</source>
          <target state="translated">Tipo al que agregar propiedades.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)">
          <source>When overridden in a derived class, provides a collection of additional properties for the specified type, as represented in this reflection context.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, proporciona una colección de propiedades adicionales para el tipo especificado, como se representa en este contexto de reflexión.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)">
          <source>A collection of additional properties for the specified type.</source>
          <target state="translated">Colección de propiedades adicionales del tipo especificado.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)">
          <source>Override this method to specify which properties should be added to a given type.</source>
          <target state="translated">Invalide este método para especificar qué propiedades deben agregarse a un tipo determinado.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)">
          <source>To create the properties, use the <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A&gt;</ph> method.</source>
          <target state="translated">Para crear las propiedades, use el <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>Creates an object that represents a property to be added to a type, as specified by the <ph id="ph1">&lt;see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /&gt;</ph> method.</source>
          <target state="translated">Crea un objeto que representa una propiedad que se va a agregar a un tipo, tal como especifica el método <ph id="ph1">&lt;see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>The type of the property to create.</source>
          <target state="translated">Tipo de la propiedad que se va a crear.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>The name of the property to create.</source>
          <target state="translated">Nombre de la propiedad que se va a crear.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>An object that represents the property's <ph id="ph1">&lt;see langword="get" /&gt;</ph> accessor.</source>
          <target state="translated">Objeto que representa el descriptor de acceso <ph id="ph1">&lt;see langword="get" /&gt;</ph> de la propiedad.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>An object that represents the property's <ph id="ph1">&lt;see langword="set" /&gt;</ph> accessor.</source>
          <target state="translated">Objeto que representa el descriptor de acceso <ph id="ph1">&lt;see langword="set" /&gt;</ph> de la propiedad.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>Creates an object that represents a property to be added to a type, to be used with the <ph id="ph1">&lt;see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /&gt;</ph> method.</source>
          <target state="translated">Crea un objeto que representa una propiedad que se va a agregar a un tipo y que se va a utilizar con el método <ph id="ph1">&lt;see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>An object that represents the property.</source>
          <target state="translated">Objeto que representa la propiedad.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>Objects that are returned by this method are not complete <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> objects, and should be used only in the context of the <ph id="ph2">&lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt;</ph> method.</source>
          <target state="translated">Los objetos devueltos por este método no están completos <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> objetos y debe utilizarse únicamente en el contexto de la <ph id="ph2">&lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>The type of the property to create.</source>
          <target state="translated">Tipo de la propiedad que se va a crear.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>The name of the property to create.</source>
          <target state="translated">Nombre de la propiedad que se va a crear.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>An object that represents the property's <ph id="ph1">&lt;see langword="get" /&gt;</ph> accessor.</source>
          <target state="translated">Objeto que representa el descriptor de acceso <ph id="ph1">&lt;see langword="get" /&gt;</ph> de la propiedad.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>An object that represents the property's <ph id="ph1">&lt;see langword="set" /&gt;</ph> accessor.</source>
          <target state="translated">Objeto que representa el descriptor de acceso <ph id="ph1">&lt;see langword="set" /&gt;</ph> de la propiedad.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>A collection of custom attributes to apply to the property.</source>
          <target state="translated">Colección de atributos personalizados para aplicar a la propiedad.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>A collection of custom attributes to apply to the property's <ph id="ph1">&lt;see langword="get" /&gt;</ph> accessor.</source>
          <target state="translated">Colección de atributos personalizados para aplicar el descriptor de acceso <ph id="ph1">&lt;see langword="get" /&gt;</ph> de la propiedad.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>A collection of custom attributes to apply to the property's <ph id="ph1">&lt;see langword="set" /&gt;</ph> accessor.</source>
          <target state="translated">Colección de atributos personalizados para aplicar el descriptor de acceso <ph id="ph1">&lt;see langword="set" /&gt;</ph> de la propiedad.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>Creates an object that represents a property to be added to a type, to be used with the <ph id="ph1">&lt;see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /&gt;</ph> method and using the specified custom attributes.</source>
          <target state="translated">Crea un objeto que representa una propiedad que se va a agregar a un tipo y que se va a utilizar con el método <ph id="ph1">&lt;see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /&gt;</ph> usando los atributos personalizados especificados.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>An object that represents the property.</source>
          <target state="translated">Objeto que representa la propiedad.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>Objects that are returned by this method are not complete <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> objects, and should be used only in the context of the <ph id="ph2">&lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt;</ph> method.</source>
          <target state="translated">Los objetos devueltos por este método no están completos <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> objetos y debe utilizarse únicamente en el contexto de la <ph id="ph2">&lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>When overridden in a derived class, provides a modified collection of custom attributes for the specified object, as represented in this reflection context.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, proporciona una colección modificada de atributos personalizados para el objeto especificado, como se representa en este contexto de reflexión.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>The member whose custom attributes will be returned.</source>
          <target state="translated">Miembro cuyos atributos personalizados se devolverán.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>A collection of the member's attributes in its current context.</source>
          <target state="translated">Colección de atributos del miembro en el contexto actual.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>When overridden in a derived class, provides a list of custom attributes for the specified member, as represented in this reflection context.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, proporciona una lista de atributos personalizados para el miembro especificado, como se representa en este contexto de reflexión.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>A collection that represents the custom attributes of the specified member in this reflection context.</source>
          <target state="translated">Colección que representa los atributos personalizados del miembro especificado en este contexto de reflexión.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>The parameter whose custom attributes will be returned.</source>
          <target state="translated">Parámetro cuyos atributos personalizados se devolverán.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>A collection of the parameter's attributes in its current context.</source>
          <target state="translated">Colección de atributos del parámetro en el contexto actual.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>When overridden in a derived class, provides a list of custom attributes for the specified parameter, as represented in this reflection context.</source>
          <target state="translated">Cuando se reemplaza en una clase derivada, proporciona una lista de atributos personalizados para el parámetro especificado, como se representa en este contexto de reflexión.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>A collection that represents the custom attributes of the specified parameter in this reflection context.</source>
          <target state="translated">Colección que representa los atributos personalizados del parámetro especificado en este contexto de reflexión.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)">
          <source>The external representation of the assembly to represent in this context.</source>
          <target state="translated">Representación externa del ensamblado que se va a representar en este contexto.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)">
          <source>Gets the representation, in this reflection context, of an assembly that is represented by an object from another reflection context.</source>
          <target state="translated">Obtiene la representación, en este contexto de reflexión, de un ensamblado representado por un objeto de otro contexto de reflexión.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)">
          <source>The representation of the assembly in this reflection context.</source>
          <target state="translated">Representación del ensamblado en este contexto de reflexión.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)">
          <source>The external representation of the type to represent in this context.</source>
          <target state="translated">Representación externa del tipo que se va a representar en este contexto.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)">
          <source>Gets the representation, in this reflection context, of a type represented by an object from another reflection context.</source>
          <target state="translated">Obtiene la representación, en este contexto de reflexión, de un tipo representado por un objeto de otro contexto de reflexión.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)">
          <source>The representation of the type in this reflection context.</source>
          <target state="translated">La representación del tipo en este contexto de reflexión.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>