<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodeMethodReferenceExpression.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55f4b42f242ef94b75bfa5594d758fe3c91c803f9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5f4b42f242ef94b75bfa5594d758fe3c91c803f9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeMethodReferenceExpression">
          <source>Represents a reference to a method.</source>
          <target state="translated">Representa una referencia a un método.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeMethodReferenceExpression">
          <source>A <ph id="ph1">&lt;xref:System.CodeDom.CodeMethodReferenceExpression&gt;</ph> can be used to represent an expression of the form Object.Method.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.CodeDom.CodeMethodReferenceExpression&gt;</ph> puede usarse para representar una expresión de la forma objeto.método.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeMethodReferenceExpression">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeMethodReferenceExpression.TargetObject%2A&gt;</ph> property indicates the object that contains the method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.CodeDom.CodeMethodReferenceExpression.TargetObject%2A&gt;</ph> propiedad indica el objeto que contiene el método.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeMethodReferenceExpression">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeMethodReferenceExpression.MethodName%2A&gt;</ph> property indicates the name of the method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.CodeDom.CodeMethodReferenceExpression.MethodName%2A&gt;</ph> propiedad indica el nombre del método.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeMethodReferenceExpression">
          <source>A <ph id="ph1">&lt;xref:System.CodeDom.CodeMethodReferenceExpression&gt;</ph> is used with a <ph id="ph2">&lt;xref:System.CodeDom.CodeMethodInvokeExpression&gt;</ph> to indicate the method to invoke, and with a <ph id="ph3">&lt;xref:System.CodeDom.CodeDelegateCreateExpression&gt;</ph> to indicate the method to handle the event.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.CodeDom.CodeMethodReferenceExpression&gt;</ph> se usa con un <ph id="ph2">&lt;xref:System.CodeDom.CodeMethodInvokeExpression&gt;</ph> para indicar el método que se invoca y con un <ph id="ph3">&lt;xref:System.CodeDom.CodeDelegateCreateExpression&gt;</ph> para indicar el método para controlar el evento.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeMethodReferenceExpression">
          <source>The following code example uses a <ph id="ph1">&lt;xref:System.CodeDom.CodeMethodReferenceExpression&gt;</ph> to refer to a method:</source>
          <target state="translated">El siguiente ejemplo de código utiliza un <ph id="ph1">&lt;xref:System.CodeDom.CodeMethodReferenceExpression&gt;</ph> para hacer referencia a un método:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeMethodReferenceExpression">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeMethodReferenceExpression" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeMethodReferenceExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeMethodReferenceExpression.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeMethodReferenceExpression" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeMethodReferenceExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> that indicates the object to target.</source>
          <target state="translated">Clase <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> que indica el objeto al que se va a dirigir.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)">
          <source>The name of the method to call.</source>
          <target state="translated">Nombre del método que se va a llamar.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeMethodReferenceExpression" /&gt;</ph> class using the specified target object and method name.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeMethodReferenceExpression" /&gt;</ph> con el objeto de destino y el nombre de método especificados.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeTypeReference[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> that indicates the object to target.</source>
          <target state="translated">Clase <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> que indica el objeto al que se va a dirigir.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeTypeReference[])">
          <source>The name of the method to call.</source>
          <target state="translated">Nombre del método que se va a llamar.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeTypeReference[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> values that specify the <ph id="ph2">&lt;see cref="P:System.CodeDom.CodeMethodReferenceExpression.TypeArguments" /&gt;</ph> for this <ph id="ph3">&lt;see cref="T:System.CodeDom.CodeMethodReferenceExpression" /&gt;</ph>.</source>
          <target state="translated">Matriz de valores de <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> que especifican la propiedad <ph id="ph2">&lt;see cref="P:System.CodeDom.CodeMethodReferenceExpression.TypeArguments" /&gt;</ph> de esta clase <ph id="ph3">&lt;see cref="T:System.CodeDom.CodeMethodReferenceExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeTypeReference[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeMethodReferenceExpression" /&gt;</ph> class using the specified target object, method name, and generic type arguments.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeMethodReferenceExpression" /&gt;</ph> con el objeto de destino, el nombre de método y los argumentos de tipo genérico especificados.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeTypeReference[])">
          <source>The <ph id="ph1">`typeParameters`</ph> parameter represents a collection of type references to be substituted for the type parameter references of the current generic method.</source>
          <target state="translated">El <ph id="ph1">`typeParameters`</ph> parámetro representa una colección de referencias de tipo que se sustituirá para las referencias del parámetro de tipo del método genérico actual.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeTypeReference[])">
          <source>The following code example shows the use of this constructor.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra el uso de este constructor.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeMethodReferenceExpression.MethodName">
          <source>Gets or sets the name of the method to reference.</source>
          <target state="translated">Obtiene o establece el nombre del método al que se hará referencia.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeMethodReferenceExpression.MethodName">
          <source>The name of the method to reference.</source>
          <target state="translated">Nombre del método al que se hace referencia.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeMethodReferenceExpression.TargetObject">
          <source>Gets or sets the expression that indicates the method to reference.</source>
          <target state="translated">Obtiene o establece la expresión que indica el método al que se hará referencia.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeMethodReferenceExpression.TargetObject">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> that represents the method to reference.</source>
          <target state="translated">Clase <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> que representa el método al que se hará referencia.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeMethodReferenceExpression.TypeArguments">
          <source>Gets the type arguments for the current generic method reference expression.</source>
          <target state="translated">Obtiene los argumentos de tipo para la expresión de referencia al método genérico actual.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeMethodReferenceExpression.TypeArguments">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReferenceCollection" /&gt;</ph> containing the type arguments for the current code <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeMethodReferenceExpression" /&gt;</ph>.</source>
          <target state="translated">Clase <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReferenceCollection" /&gt;</ph> que contiene los argumentos de tipo para el código de la clase <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeMethodReferenceExpression" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeMethodReferenceExpression.TypeArguments">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeMethodReferenceExpression.TypeArguments%2A&gt;</ph> property represents a collection of type references to be substituted for the type parameter references of the current generic method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.CodeDom.CodeMethodReferenceExpression.TypeArguments%2A&gt;</ph> propiedad representa una colección de referencias de tipo que se sustituirá para las referencias del parámetro de tipo del método genérico actual.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>