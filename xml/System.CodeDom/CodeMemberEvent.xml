<Type Name="CodeMemberEvent" FullName="System.CodeDom.CodeMemberEvent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b4c7a5e7693fe69af68cd357c416d22668649a26" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30358139" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeMemberEvent : System.CodeDom.CodeTypeMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeMemberEvent extends System.CodeDom.CodeTypeMember" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeMemberEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeMemberEvent&#xA;Inherits CodeTypeMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeMemberEvent : System::CodeDom::CodeTypeMember" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeTypeMember</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="bbaf0-101">Representa una declaración para un evento de un tipo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bbaf0-101">Represents a declaration for an event of a type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbaf0-102"><xref:System.CodeDom.CodeMemberEvent> puede usarse para representar a miembros de evento de un tipo.</span><span class="sxs-lookup"><span data-stu-id="bbaf0-102"><xref:System.CodeDom.CodeMemberEvent> can be used to represent event members of a type.</span></span> <span data-ttu-id="bbaf0-103"><xref:System.CodeDom.CodeMemberEvent> tiene propiedades que indican el tipo de datos del evento, si implementa un tipo de datos de forma privada, y qué tipos de interfaz, si existe, el evento miembro implementa.</span><span class="sxs-lookup"><span data-stu-id="bbaf0-103"><xref:System.CodeDom.CodeMemberEvent> has properties to indicate the data type of the event, whether it privately implements a data type, and what interface types, if any, the member event implements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbaf0-104">En este ejemplo se muestra el uso de un <xref:System.CodeDom.CodeMemberEvent> para declarar un evento que toma una `System.EventHandler` delegado:</span><span class="sxs-lookup"><span data-stu-id="bbaf0-104">This example demonstrates use of a <xref:System.CodeDom.CodeMemberEvent> to declare an event that takes a `System.EventHandler` delegate:</span></span>  
  
 [!code-cpp[CodeMemberEventSample#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeMemberEventSample/CPP/codemembereventexample.cpp#3)]
 [!code-csharp[CodeMemberEventSample#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeMemberEventSample/CS/codemembereventexample.cs#3)]
 [!code-vb[CodeMemberEventSample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeMemberEventSample/VB/codemembereventexample.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeMemberEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeMemberEvent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeMemberEvent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bbaf0-105">Inicializa una nueva instancia de la clase <see cref="T:System.CodeDom.CodeMemberEvent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbaf0-105">Initializes a new instance of the <see cref="T:System.CodeDom.CodeMemberEvent" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplementationTypes">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReferenceCollection ImplementationTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReferenceCollection ImplementationTypes" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberEvent.ImplementationTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImplementationTypes As CodeTypeReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReferenceCollection ^ ImplementationTypes { System::CodeDom::CodeTypeReferenceCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbaf0-106">Obtiene o establece el tipo de datos que implementa el evento de miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbaf0-106">Gets or sets the data type that the member event implements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbaf0-107">
            <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> que indica el tipo de datos que implementa el evento de miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbaf0-107">A <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> that indicates the data type or types that the member event implements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbaf0-108">Los tipos de referencia deben constar de interfaces o la clase base.</span><span class="sxs-lookup"><span data-stu-id="bbaf0-108">The types referenced should consist of interfaces or the base class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateImplementationType">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference PrivateImplementationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReference PrivateImplementationType" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberEvent.PrivateImplementationType" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateImplementationType As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReference ^ PrivateImplementationType { System::CodeDom::CodeTypeReference ^ get(); void set(System::CodeDom::CodeTypeReference ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbaf0-109">Obtiene o establece el tipo de datos implementado de forma privada, en caso de haber alguno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbaf0-109">Gets or sets the privately implemented data type, if any.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbaf0-110">
            <see cref="T:System.CodeDom.CodeTypeReference" /> que indica el tipo de datos que implementa el evento de forma privada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbaf0-110">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the data type that the event privately implements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbaf0-111">Los tipos de referencia deben constar de interfaces o la clase base.</span><span class="sxs-lookup"><span data-stu-id="bbaf0-111">The types referenced should consist of interfaces or the base class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReference Type" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberEvent.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReference ^ Type { System::CodeDom::CodeTypeReference ^ get(); void set(System::CodeDom::CodeTypeReference ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbaf0-112">Obtiene o establece el tipo de datos del tipo de delegado que controla el evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbaf0-112">Gets or sets the data type of the delegate type that handles the event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbaf0-113">Clase <see cref="T:System.CodeDom.CodeTypeReference" /> que indica el tipo de delegado que controla el evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbaf0-113">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the delegate type that handles the event.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>