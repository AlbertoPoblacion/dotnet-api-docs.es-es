<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodeExpressionStatement.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c62dacbb8802282abdf9076dfc55a667a8d1b35f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c62dacbb8802282abdf9076dfc55a667a8d1b35f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeExpressionStatement">
          <source>Represents a statement that consists of a single expression.</source>
          <target state="translated">Representa una instrucción que contiene una sola expresión.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeExpressionStatement">
          <source>A <ph id="ph1">&lt;xref:System.CodeDom.CodeExpressionStatement&gt;</ph> contains a <ph id="ph2">&lt;xref:System.CodeDom.CodeExpression&gt;</ph> object, and it can be added to a <ph id="ph3">&lt;xref:System.CodeDom.CodeStatementCollection&gt;</ph> object, allowing some expressions to stand alone.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.CodeDom.CodeExpressionStatement&gt;</ph> contiene un <ph id="ph2">&lt;xref:System.CodeDom.CodeExpression&gt;</ph> objeto y pueden agregarse a un <ph id="ph3">&lt;xref:System.CodeDom.CodeStatementCollection&gt;</ph> objeto, lo que algunas expresiones actuar por sí sola.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeExpressionStatement">
          <source>For example, a <ph id="ph1">&lt;xref:System.CodeDom.CodeMethodInvokeExpression&gt;</ph> contained by a <ph id="ph2">&lt;xref:System.CodeDom.CodeExpressionStatement&gt;</ph> can represent a method call without a return value.</source>
          <target state="translated">Por ejemplo, un <ph id="ph1">&lt;xref:System.CodeDom.CodeMethodInvokeExpression&gt;</ph> contiene un <ph id="ph2">&lt;xref:System.CodeDom.CodeExpressionStatement&gt;</ph> puede representar una llamada de método sin un valor devuelto.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeExpressionStatement">
          <source>The following example demonstrates how to create an instance of the <ph id="ph1">&lt;xref:System.CodeDom.CodeExpressionStatement&gt;</ph> class by using a <ph id="ph2">&lt;xref:System.CodeDom.CodeExpression&gt;</ph> object.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo crear una instancia de la <ph id="ph1">&lt;xref:System.CodeDom.CodeExpressionStatement&gt;</ph> clase mediante el uso de un <ph id="ph2">&lt;xref:System.CodeDom.CodeExpression&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeExpressionStatement">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpressionStatement" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpressionStatement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeExpressionStatement.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpressionStatement" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpressionStatement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeExpressionStatement.#ctor(System.CodeDom.CodeExpression)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> for the statement.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> para la instrucción.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeExpressionStatement.#ctor(System.CodeDom.CodeExpression)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpressionStatement" /&gt;</ph> class by using the specified expression.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpressionStatement" /&gt;</ph> usando la expresión especificada.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeExpressionStatement.#ctor(System.CodeDom.CodeExpression)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.CodeDom.CodeExpression&gt;</ph> object and uses it as a parameter to initialize an instance of the <ph id="ph2">&lt;xref:System.CodeDom.CodeExpressionStatement&gt;</ph> class.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.CodeDom.CodeExpression&gt;</ph> objeto y lo utiliza como parámetro para inicializar una instancia de la <ph id="ph2">&lt;xref:System.CodeDom.CodeExpressionStatement&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeExpressionStatement.Expression">
          <source>Gets or sets the expression for the statement.</source>
          <target state="translated">Obtiene o establece la expresión de la instrucción.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeExpressionStatement.Expression">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> that indicates the expression for the statement.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> que indica la expresión de la instrucción.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>