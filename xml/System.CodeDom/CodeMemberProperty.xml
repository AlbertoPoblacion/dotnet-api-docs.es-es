<Type Name="CodeMemberProperty" FullName="System.CodeDom.CodeMemberProperty">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1be2711da0eea416790a3fa1dc431c52ca11317c" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48620631" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeMemberProperty : System.CodeDom.CodeTypeMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeMemberProperty extends System.CodeDom.CodeTypeMember" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeMemberProperty" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeMemberProperty&#xA;Inherits CodeTypeMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeMemberProperty : System::CodeDom::CodeTypeMember" />
  <TypeSignature Language="F#" Value="type CodeMemberProperty = class&#xA;    inherit CodeTypeMember" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeTypeMember</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa una declaración para una propiedad de un tipo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.CodeDom.CodeMemberProperty> puede usarse para representar la declaración para una propiedad de un tipo.  
  
 El <xref:System.CodeDom.CodeMemberProperty.Type%2A> propiedad especifica el tipo de datos de la propiedad. El <xref:System.CodeDom.CodeMemberProperty.GetStatements%2A> propiedad contiene métodos de instrucción get para la propiedad. El <xref:System.CodeDom.CodeMemberProperty.SetStatements%2A> propiedad contiene métodos de instrucción set para la propiedad. El <xref:System.CodeDom.CodeMemberProperty.Parameters%2A> propiedad especifica los parámetros para la propiedad, como son necesarios para una propiedad de indizador.  
  
   
  
## Examples  
 Ejemplo de código siguiente muestra el uso de un <xref:System.CodeDom.CodeMemberProperty> para definir un `string` propiedad con `get` y `set` descriptores de acceso.  
  
 [!code-cpp[CodeMemberPropertyExample#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeMemberPropertyExample/CPP/codememberpropertyexample.cpp#3)]
 [!code-csharp[CodeMemberPropertyExample#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeMemberPropertyExample/CS/codememberpropertyexample.cs#3)]
 [!code-vb[CodeMemberPropertyExample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeMemberPropertyExample/VB/codememberpropertyexample.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeMemberProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeMemberProperty.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeMemberProperty();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.CodeDom.CodeMemberProperty" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStatements">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeStatementCollection GetStatements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeStatementCollection GetStatements" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberProperty.GetStatements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GetStatements As CodeStatementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeStatementCollection ^ GetStatements { System::CodeDom::CodeStatementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GetStatements : System.CodeDom.CodeStatementCollection" Usage="System.CodeDom.CodeMemberProperty.GetStatements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeStatementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la colección de instrucciones <see langword="get" /> de la propiedad.</summary>
        <value>
          <see cref="T:System.CodeDom.CodeStatementCollection" /> que contiene las instrucciones <see langword="get" /> de la propiedad miembro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una de las instrucciones de este <xref:System.CodeDom.CodeStatementCollection> debe devolver el valor de la propiedad de miembro. Use un <xref:System.CodeDom.CodeMethodReturnStatement> para devolver un valor del tipo de datos de la propiedad.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.CodeDom.CodeMethodReturnStatement" />
      </Docs>
    </Member>
    <Member MemberName="HasGet">
      <MemberSignature Language="C#" Value="public bool HasGet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasGet" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberProperty.HasGet" />
      <MemberSignature Language="VB.NET" Value="Public Property HasGet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasGet { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HasGet : bool with get, set" Usage="System.CodeDom.CodeMemberProperty.HasGet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si la propiedad posee un descriptor de acceso de método <see langword="get" />.</summary>
        <value>Es <see langword="true" />, si la propiedad <see langword="Count" /> de la colección <see cref="P:System.CodeDom.CodeMemberProperty.GetStatements" /> es distinta de cero, o si el valor de esta propiedad se ha establecido en <see langword="true" />; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Establecer esta propiedad en `false` borra el <xref:System.CodeDom.CodeMemberProperty.GetStatements%2A> colección.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.CodeDom.CodeMemberProperty.HasSet" />
      </Docs>
    </Member>
    <Member MemberName="HasSet">
      <MemberSignature Language="C#" Value="public bool HasSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasSet" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberProperty.HasSet" />
      <MemberSignature Language="VB.NET" Value="Public Property HasSet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasSet { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HasSet : bool with get, set" Usage="System.CodeDom.CodeMemberProperty.HasSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si la propiedad posee un descriptor de acceso de método <see langword="set" />.</summary>
        <value>Es <see langword="true" /> si la propiedad <see cref="P:System.Collections.CollectionBase.Count" /> de la colección <see cref="P:System.CodeDom.CodeMemberProperty.SetStatements" /> es distinta de cero; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.CodeDom.CodeMemberProperty.HasSet%2A> devolverá `false` si la propiedad es de solo lectura.  
  
> [!NOTE]
>  Establecer esta propiedad en `false` borrará la <xref:System.CodeDom.CodeMemberProperty.SetStatements%2A> colección.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.CodeDom.CodeMemberProperty.HasGet" />
      </Docs>
    </Member>
    <Member MemberName="ImplementationTypes">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReferenceCollection ImplementationTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReferenceCollection ImplementationTypes" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberProperty.ImplementationTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImplementationTypes As CodeTypeReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReferenceCollection ^ ImplementationTypes { System::CodeDom::CodeTypeReferenceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImplementationTypes : System.CodeDom.CodeTypeReferenceCollection" Usage="System.CodeDom.CodeMemberProperty.ImplementationTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene los tipos de datos de las interfaces que implementa esta propiedad.</summary>
        <value>
          <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> que indica los tipos de datos que implementa la propiedad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los tipos que se hace referencia a esta colección deben constar de interfaces.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeParameterDeclarationExpressionCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeParameterDeclarationExpressionCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberProperty.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As CodeParameterDeclarationExpressionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeParameterDeclarationExpressionCollection ^ Parameters { System::CodeDom::CodeParameterDeclarationExpressionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.CodeDom.CodeParameterDeclarationExpressionCollection" Usage="System.CodeDom.CodeMemberProperty.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeParameterDeclarationExpressionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la colección de instrucciones de declaración de la propiedad.</summary>
        <value>
          <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" /> que indica las expresiones de declaración de la propiedad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  En general, las propiedades no tienen parámetros. CodeDom admite una excepción a esto. Para cualquier propiedad que tiene el nombre especial "Item" y uno o varios parámetros, declarará una propiedad de indizador para la clase. Sin embargo, no todos los lenguajes admiten la declaración de indizadores.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" />
      </Docs>
    </Member>
    <Member MemberName="PrivateImplementationType">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference PrivateImplementationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReference PrivateImplementationType" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberProperty.PrivateImplementationType" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateImplementationType As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReference ^ PrivateImplementationType { System::CodeDom::CodeTypeReference ^ get(); void set(System::CodeDom::CodeTypeReference ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrivateImplementationType : System.CodeDom.CodeTypeReference with get, set" Usage="System.CodeDom.CodeMemberProperty.PrivateImplementationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tipo de datos de la interfaz, si existe, que implementa esta propiedad, si es privada.</summary>
        <value>
          <see cref="T:System.CodeDom.CodeTypeReference" /> que indica el tipo de datos de la interfaz, si existe, que implementa la propiedad, si es privada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El tipo al que hace referencia esta propiedad debe ser una interfaz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStatements">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeStatementCollection SetStatements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeStatementCollection SetStatements" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberProperty.SetStatements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetStatements As CodeStatementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeStatementCollection ^ SetStatements { System::CodeDom::CodeStatementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SetStatements : System.CodeDom.CodeStatementCollection" Usage="System.CodeDom.CodeMemberProperty.SetStatements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeStatementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la colección de instrucciones <see langword="set" /> de la propiedad.</summary>
        <value>
          <see cref="T:System.CodeDom.CodeStatementCollection" /> que contiene las instrucciones <see langword="set" /> de la propiedad miembro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una de las instrucciones de esta colección normalmente establece un valor para la propiedad. A menudo, las instrucciones dentro de un descriptor de acceso de método set realizan una comprobación para determinar si se debe establecer o traducir el valor especificado para la propiedad. Un <xref:System.CodeDom.CodePropertySetValueReferenceExpression> representa una referencia al objeto se pasa al método set.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.CodeDom.CodePropertySetValueReferenceExpression" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReference Type" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberProperty.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReference ^ Type { System::CodeDom::CodeTypeReference ^ get(); void set(System::CodeDom::CodeTypeReference ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.CodeDom.CodeTypeReference with get, set" Usage="System.CodeDom.CodeMemberProperty.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tipo de datos de la propiedad.</summary>
        <value>
          <see cref="T:System.CodeDom.CodeTypeReference" /> que indica el tipo de datos de la propiedad.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>