<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodeConstructor.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d9bcd507be7f8bfe0f782ac26fa9f4901acd53bc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d9bcd507be7f8bfe0f782ac26fa9f4901acd53bc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeConstructor">
          <source>Represents a declaration for an instance constructor of a type.</source>
          <target state="translated">Representa una declaración de un constructor de instancia para un tipo.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeConstructor">
          <source><ph id="ph1">&lt;xref:System.CodeDom.CodeConstructor&gt;</ph> can be used to represent a declaration of an instance constructor for a type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeConstructor&gt;</ph> puede usarse para representar una declaración de un constructor de instancia para un tipo.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeConstructor">
          <source>Use <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeConstructor&gt;</ph> to declare a static constructor for a type.</source>
          <target state="translated">Use <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeConstructor&gt;</ph> para declarar un constructor estático para un tipo.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeConstructor">
          <source>If the constructor calls a base class constructor, set the constructor arguments for the base class constructor in the <ph id="ph1">&lt;xref:System.CodeDom.CodeConstructor.BaseConstructorArgs%2A&gt;</ph> property.</source>
          <target state="translated">Si el constructor llama a un constructor de clase base, establezca los argumentos de constructor para el constructor de clase base en el <ph id="ph1">&lt;xref:System.CodeDom.CodeConstructor.BaseConstructorArgs%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeConstructor">
          <source>If the constructor overloads another constuctor for the type, set the constructor arguments to pass to the overloaded type constructor in the <ph id="ph1">&lt;xref:System.CodeDom.CodeConstructor.ChainedConstructorArgs%2A&gt;</ph> property.</source>
          <target state="translated">Si el constructor sobrecarga otro constructor para el tipo, establezca los argumentos de constructor para pasar al constructor de tipo sobrecargado en la <ph id="ph1">&lt;xref:System.CodeDom.CodeConstructor.ChainedConstructorArgs%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeConstructor">
          <source>This example demonstrates using a <ph id="ph1">&lt;xref:System.CodeDom.CodeConstructor&gt;</ph> to declare several types of constructors.</source>
          <target state="translated">Este ejemplo muestra cómo utilizar un <ph id="ph1">&lt;xref:System.CodeDom.CodeConstructor&gt;</ph> para declarar varios tipos de constructores.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeConstructor.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeConstructor" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeConstructor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeConstructor.BaseConstructorArgs">
          <source>Gets the collection of base constructor arguments.</source>
          <target state="translated">Obtiene la colección de argumentos constructores base.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeConstructor.BaseConstructorArgs">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpressionCollection" /&gt;</ph> that contains the base constructor arguments.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpressionCollection" /&gt;</ph> que contiene los argumentos del constructor base.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeConstructor.BaseConstructorArgs">
          <source>When the <ph id="ph1">&lt;xref:System.CodeDom.CodeConstructor&gt;</ph> overloads a base class constructor, this collection contains any arguments to pass to a base class constructor.</source>
          <target state="translated">Cuando el <ph id="ph1">&lt;xref:System.CodeDom.CodeConstructor&gt;</ph> sobrecargas un constructor de clase base, esta colección contiene los argumentos que se pasarán al constructor de clase base.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeConstructor.BaseConstructorArgs">
          <source>To call a base class constructor with no arguments, set a <ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetExpression&gt;</ph> containing an empty string ("") to this collection.</source>
          <target state="translated">Para llamar a un constructor de clase base sin argumentos, establezca una <ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetExpression&gt;</ph> que contiene una cadena vacía ("") a esta colección.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeConstructor.ChainedConstructorArgs">
          <source>Gets the collection of chained constructor arguments.</source>
          <target state="translated">Obtiene la colección de argumentos constructores encadenados.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeConstructor.ChainedConstructorArgs">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpressionCollection" /&gt;</ph> that contains the chained constructor arguments.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpressionCollection" /&gt;</ph> que contiene los argumentos de constructor encadenados.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeConstructor.ChainedConstructorArgs">
          <source>When the <ph id="ph1">&lt;xref:System.CodeDom.CodeConstructor&gt;</ph> overloads another constructor of the same type, this collection contains any arguments to pass to the overloaded type constructor.</source>
          <target state="translated">Cuando el <ph id="ph1">&lt;xref:System.CodeDom.CodeConstructor&gt;</ph> sobrecargas otro constructor del mismo tipo, esta colección contiene los argumentos que se pasarán al constructor de tipo sobrecargado.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeConstructor.ChainedConstructorArgs">
          <source>To call a constructor for the current type with no arguments, set a <ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetExpression&gt;</ph> containing an empty string ("") to this collection.</source>
          <target state="translated">Para llamar a un constructor para el tipo actual sin argumentos, establezca una <ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetExpression&gt;</ph> que contiene una cadena vacía ("") a esta colección.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>