<Type Name="CodeMemberMethod" FullName="System.CodeDom.CodeMemberMethod">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f4efedc39d00fdb944c23a1d86d7c20b6a46b8bf" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36714393" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeMemberMethod : System.CodeDom.CodeTypeMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeMemberMethod extends System.CodeDom.CodeTypeMember" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeMemberMethod" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeMemberMethod&#xA;Inherits CodeTypeMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeMemberMethod : System::CodeDom::CodeTypeMember" />
  <TypeSignature Language="F#" Value="type CodeMemberMethod = class&#xA;    inherit CodeTypeMember" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeTypeMember</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa una declaración para un método de un tipo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.CodeDom.CodeMemberMethod> puede usarse para representar la declaración para un método.  
  
 El <xref:System.CodeDom.CodeMemberMethod.ReturnType%2A> propiedad especifica el tipo de datos del valor devuelto del método. El <xref:System.CodeDom.CodeMemberMethod.Parameters%2A> propiedad contiene los parámetros del método. El <xref:System.CodeDom.CodeMemberMethod.Statements%2A> propiedad contiene las instrucciones del método.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra el uso de un <xref:System.CodeDom.CodeMemberMethod> para declarar un método que acepta un parámetro y devuelve un valor.  
  
 [!code-cpp[CodeMemberMethodExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CodeMemberMethodExample/CPP/codemembermethodexample.cpp#2)]
 [!code-csharp[CodeMemberMethodExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeMemberMethodExample/CS/codemembermethodexample.cs#2)]
 [!code-vb[CodeMemberMethodExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeMemberMethodExample/VB/codemembermethodexample.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeMemberMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeMemberMethod.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeMemberMethod();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.CodeDom.CodeMemberMethod" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor crea vacío <xref:System.CodeDom.CodeMemberMethod> objeto.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de la <xref:System.CodeDom.CodeMemberMethod.%23ctor%2A> constructor para crear un <xref:System.CodeDom.CodeMemberMethod> instancia. Este ejemplo forma parte de un ejemplo mayor proporcionado para el <xref:System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember%2A> método.  
  
 [!code-csharp[CodeDom_GenerateCodeFromMember#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/cs/program.cs#3)]
 [!code-vb[CodeDom_GenerateCodeFromMember#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplementationTypes">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReferenceCollection ImplementationTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReferenceCollection ImplementationTypes" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberMethod.ImplementationTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImplementationTypes As CodeTypeReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReferenceCollection ^ ImplementationTypes { System::CodeDom::CodeTypeReferenceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImplementationTypes : System.CodeDom.CodeTypeReferenceCollection" Usage="System.CodeDom.CodeMemberMethod.ImplementationTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene los tipos de datos de las interfaces implementadas mediante este método que se indica mediante la propiedad <see cref="P:System.CodeDom.CodeMemberMethod.PrivateImplementationType" />, a menos que sea una implementación de método privado.</summary>
        <value>
          <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> que indica las interfaces implementadas por este método.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los tipos que se hace referencia a esta colección deben componerse de interfaces.  
  
 Si este <xref:System.CodeDom.CodeMemberMethod> representa una declaración para un método público e implementa un método en una interfaz, la interfaz o las interfaces de este método implementa un método debe hacer referencia en esta colección.  
  
 El método todavía debe tener el mismo nombre que el método de la interfaz implementada por este método. En algunos lenguajes, como C#, esto no tiene ningún efecto sobre la sintaxis. En otros casos, como Visual Basic, hay una sintaxis especial para implementar interfaces. Si el método implementa una interfaz, de forma privada el <xref:System.CodeDom.CodeMemberMethod.PrivateImplementationType%2A> propiedad debe utilizarse en su lugar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeParameterDeclarationExpressionCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeParameterDeclarationExpressionCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberMethod.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As CodeParameterDeclarationExpressionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeParameterDeclarationExpressionCollection ^ Parameters { System::CodeDom::CodeParameterDeclarationExpressionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.CodeDom.CodeParameterDeclarationExpressionCollection" Usage="System.CodeDom.CodeMemberMethod.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeParameterDeclarationExpressionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene las declaraciones de parámetros del método.</summary>
        <value>
          <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" /> que indica los parámetros del método.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" />
      </Docs>
    </Member>
    <Member MemberName="PopulateImplementationTypes">
      <MemberSignature Language="C#" Value="public event EventHandler PopulateImplementationTypes;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PopulateImplementationTypes" />
      <MemberSignature Language="DocId" Value="E:System.CodeDom.CodeMemberMethod.PopulateImplementationTypes" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PopulateImplementationTypes As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PopulateImplementationTypes;" />
      <MemberSignature Language="F#" Value="member this.PopulateImplementationTypes : EventHandler " Usage="member this.PopulateImplementationTypes : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Evento que se desencadena la primera vez que se tiene acceso a la colección <see cref="P:System.CodeDom.CodeMemberMethod.ImplementationTypes" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopulateParameters">
      <MemberSignature Language="C#" Value="public event EventHandler PopulateParameters;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PopulateParameters" />
      <MemberSignature Language="DocId" Value="E:System.CodeDom.CodeMemberMethod.PopulateParameters" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PopulateParameters As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PopulateParameters;" />
      <MemberSignature Language="F#" Value="member this.PopulateParameters : EventHandler " Usage="member this.PopulateParameters : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Evento que se desencadena la primera vez que se tiene acceso a la colección <see cref="P:System.CodeDom.CodeMemberMethod.Parameters" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopulateStatements">
      <MemberSignature Language="C#" Value="public event EventHandler PopulateStatements;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PopulateStatements" />
      <MemberSignature Language="DocId" Value="E:System.CodeDom.CodeMemberMethod.PopulateStatements" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PopulateStatements As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PopulateStatements;" />
      <MemberSignature Language="F#" Value="member this.PopulateStatements : EventHandler " Usage="member this.PopulateStatements : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Evento que se desencadena la primera vez que se tiene acceso a la colección <see cref="P:System.CodeDom.CodeMemberMethod.Statements" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateImplementationType">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference PrivateImplementationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReference PrivateImplementationType" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberMethod.PrivateImplementationType" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateImplementationType As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReference ^ PrivateImplementationType { System::CodeDom::CodeTypeReference ^ get(); void set(System::CodeDom::CodeTypeReference ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrivateImplementationType : System.CodeDom.CodeTypeReference with get, set" Usage="System.CodeDom.CodeMemberMethod.PrivateImplementationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tipo de datos de la interfaz que implementa este método, si es privado, e implementa un método de la interfaz, si existe.</summary>
        <value>
          <see cref="T:System.CodeDom.CodeTypeReference" /> indica el tipo de datos de la interfaz con el método que implementa el método privado cuya declaración representa <see cref="T:System.CodeDom.CodeMemberMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si este <xref:System.CodeDom.CodeMemberMethod> representa la declaración de un método privado y el método implementa un método de una interfaz, esta propiedad debe indicar el tipo de interfaz que el método implementa un método de.  
  
 El tipo al que hace referencia esta propiedad debe ser una interfaz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnType">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference ReturnType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReference ReturnType" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberMethod.ReturnType" />
      <MemberSignature Language="VB.NET" Value="Public Property ReturnType As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReference ^ ReturnType { System::CodeDom::CodeTypeReference ^ get(); void set(System::CodeDom::CodeTypeReference ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReturnType : System.CodeDom.CodeTypeReference with get, set" Usage="System.CodeDom.CodeMemberMethod.ReturnType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tipo de datos del valor devuelto del método.</summary>
        <value>
          <see cref="T:System.CodeDom.CodeTypeReference" /> que indica los tipos de datos del valor devuelto por el método.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnTypeCustomAttributes">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeAttributeDeclarationCollection ReturnTypeCustomAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeAttributeDeclarationCollection ReturnTypeCustomAttributes" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberMethod.ReturnTypeCustomAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnTypeCustomAttributes As CodeAttributeDeclarationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeAttributeDeclarationCollection ^ ReturnTypeCustomAttributes { System::CodeDom::CodeAttributeDeclarationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReturnTypeCustomAttributes : System.CodeDom.CodeAttributeDeclarationCollection" Usage="System.CodeDom.CodeMemberMethod.ReturnTypeCustomAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeAttributeDeclarationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene los atributos personalizados del tipo de valor devuelto del método.</summary>
        <value>
          <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> que indica los atributos personalizados.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Statements">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeStatementCollection Statements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeStatementCollection Statements" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberMethod.Statements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Statements As CodeStatementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeStatementCollection ^ Statements { System::CodeDom::CodeStatementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Statements : System.CodeDom.CodeStatementCollection" Usage="System.CodeDom.CodeMemberMethod.Statements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeStatementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene las instrucciones del método.</summary>
        <value>
          <see cref="T:System.CodeDom.CodeStatementCollection" /> que indica las instrucciones del método.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
      </Docs>
    </Member>
    <Member MemberName="TypeParameters">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeParameterCollection TypeParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeParameterCollection TypeParameters" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberMethod.TypeParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeParameters As CodeTypeParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeParameterCollection ^ TypeParameters { System::CodeDom::CodeTypeParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeParameters : System.CodeDom.CodeTypeParameterCollection" Usage="System.CodeDom.CodeMemberMethod.TypeParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene los parámetros de tipo del método genérico actual.</summary>
        <value>
          <see cref="T:System.CodeDom.CodeTypeParameterCollection" /> que contiene los parámetros de tipo del método genérico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un método genérico contiene uno o más tipos no especificados conocidos como parámetros de tipo. Hace referencia al nombre de un parámetro de tipo para el tipo dentro del cuerpo de la declaración genérica.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de la <xref:System.CodeDom.CodeMemberMethod.TypeParameters%2A> propiedad que se va a agregar dos parámetros de tipo para el <xref:System.CodeDom.CodeMemberMethod> `printMethod`. Este ejemplo forma parte de un ejemplo mayor proporcionado para el <xref:System.CodeDom.CodeTypeParameter> clase.  
  
 [!code-csharp[System.CodeDOM.Generics.1#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDOM.Generics.1/CS/codedomgenerics.cs#6)]
 [!code-vb[System.CodeDOM.Generics.1#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDOM.Generics.1/VB/codedomgenerics.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeTypeParameterCollection" />
        <altmember cref="T:System.CodeDom.CodeTypeParameter" />
      </Docs>
    </Member>
  </Members>
</Type>