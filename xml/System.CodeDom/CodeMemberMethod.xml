<Type Name="CodeMemberMethod" FullName="System.CodeDom.CodeMemberMethod">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ba9cd302ee2e53368ff0b30f9d679ed76b980da0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeMemberMethod : System.CodeDom.CodeTypeMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeMemberMethod extends System.CodeDom.CodeTypeMember" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeMemberMethod" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeMemberMethod&#xA;Inherits CodeTypeMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeMemberMethod : System::CodeDom::CodeTypeMember" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeTypeMember</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="15ef9-101">Representa una declaración para un método de un tipo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="15ef9-101">Represents a declaration for a method of a type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15ef9-102"><xref:System.CodeDom.CodeMemberMethod> puede usarse para representar la declaración para un método.</span><span class="sxs-lookup"><span data-stu-id="15ef9-102"><xref:System.CodeDom.CodeMemberMethod> can be used to represent the declaration for a method.</span></span>  
  
 <span data-ttu-id="15ef9-103">El <xref:System.CodeDom.CodeMemberMethod.ReturnType%2A> propiedad especifica el tipo de datos del valor devuelto del método.</span><span class="sxs-lookup"><span data-stu-id="15ef9-103">The <xref:System.CodeDom.CodeMemberMethod.ReturnType%2A> property specifies the data type of the method's return value.</span></span> <span data-ttu-id="15ef9-104">El <xref:System.CodeDom.CodeMemberMethod.Parameters%2A> propiedad contiene los parámetros del método.</span><span class="sxs-lookup"><span data-stu-id="15ef9-104">The <xref:System.CodeDom.CodeMemberMethod.Parameters%2A> property contains the method's parameters.</span></span> <span data-ttu-id="15ef9-105">El <xref:System.CodeDom.CodeMemberMethod.Statements%2A> propiedad contiene las instrucciones del método.</span><span class="sxs-lookup"><span data-stu-id="15ef9-105">The <xref:System.CodeDom.CodeMemberMethod.Statements%2A> property contains the statements of the method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15ef9-106">En el ejemplo siguiente se muestra el uso de un <xref:System.CodeDom.CodeMemberMethod> para declarar un método que acepta un parámetro y devuelve un valor.</span><span class="sxs-lookup"><span data-stu-id="15ef9-106">The following example demonstrates use of a <xref:System.CodeDom.CodeMemberMethod> to declare a method that accepts a parameter and returns a value.</span></span>  
  
 [!code-cpp[CodeMemberMethodExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CodeMemberMethodExample/CPP/codemembermethodexample.cpp#2)]
 [!code-csharp[CodeMemberMethodExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeMemberMethodExample/CS/codemembermethodexample.cs#2)]
 [!code-vb[CodeMemberMethodExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeMemberMethodExample/VB/codemembermethodexample.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeMemberMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeMemberMethod.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeMemberMethod();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="15ef9-107">Inicializa una nueva instancia de la clase <see cref="T:System.CodeDom.CodeMemberMethod" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15ef9-107">Initializes a new instance of the <see cref="T:System.CodeDom.CodeMemberMethod" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15ef9-108">Este constructor crea vacío <xref:System.CodeDom.CodeMemberMethod> objeto.</span><span class="sxs-lookup"><span data-stu-id="15ef9-108">This constructor creates an empty <xref:System.CodeDom.CodeMemberMethod> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15ef9-109">En el ejemplo de código siguiente se muestra el uso de la <xref:System.CodeDom.CodeMemberMethod.%23ctor%2A> constructor para crear un <xref:System.CodeDom.CodeMemberMethod> instancia.</span><span class="sxs-lookup"><span data-stu-id="15ef9-109">The following code example shows the use of the <xref:System.CodeDom.CodeMemberMethod.%23ctor%2A> constructor to create a <xref:System.CodeDom.CodeMemberMethod> instance.</span></span> <span data-ttu-id="15ef9-110">Este ejemplo forma parte de un ejemplo mayor proporcionado para el <xref:System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember%2A> método.</span><span class="sxs-lookup"><span data-stu-id="15ef9-110">This example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember%2A> method.</span></span>  
  
 [!code-csharp[CodeDom_GenerateCodeFromMember#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/cs/program.cs#3)]
 [!code-vb[CodeDom_GenerateCodeFromMember#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplementationTypes">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReferenceCollection ImplementationTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReferenceCollection ImplementationTypes" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberMethod.ImplementationTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImplementationTypes As CodeTypeReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReferenceCollection ^ ImplementationTypes { System::CodeDom::CodeTypeReferenceCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15ef9-111">Obtiene los tipos de datos de las interfaces implementadas mediante este método que se indica mediante la propiedad <see cref="P:System.CodeDom.CodeMemberMethod.PrivateImplementationType" />, a menos que sea una implementación de método privado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15ef9-111">Gets the data types of the interfaces implemented by this method, unless it is a private method implementation, which is indicated by the <see cref="P:System.CodeDom.CodeMemberMethod.PrivateImplementationType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15ef9-112">
            <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> que indica las interfaces implementadas por este método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15ef9-112">A <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> that indicates the interfaces implemented by this method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15ef9-113">Los tipos que se hace referencia a esta colección deben componerse de interfaces.</span><span class="sxs-lookup"><span data-stu-id="15ef9-113">The types referenced by this collection must consist of interfaces.</span></span>  
  
 <span data-ttu-id="15ef9-114">Si este <xref:System.CodeDom.CodeMemberMethod> representa una declaración para un método público e implementa un método en una interfaz, la interfaz o las interfaces de este método implementa un método debe hacer referencia en esta colección.</span><span class="sxs-lookup"><span data-stu-id="15ef9-114">If this <xref:System.CodeDom.CodeMemberMethod> represents a declaration for a public method, and this method implements a method on an interface, the interface or interfaces this method implements a method of should be referenced in this collection.</span></span>  
  
 <span data-ttu-id="15ef9-115">El método todavía debe tener el mismo nombre que el método de la interfaz implementada por este método.</span><span class="sxs-lookup"><span data-stu-id="15ef9-115">The method should still have the same name as the method of the interface that is implemented by this method.</span></span> <span data-ttu-id="15ef9-116">En algunos lenguajes, como C#, esto no tiene ningún efecto sobre la sintaxis.</span><span class="sxs-lookup"><span data-stu-id="15ef9-116">For some languages, like C#, this has no effect on the syntax.</span></span> <span data-ttu-id="15ef9-117">En otros casos, como Visual Basic, hay una sintaxis especial para implementar interfaces.</span><span class="sxs-lookup"><span data-stu-id="15ef9-117">For others, like Visual Basic, there is a special syntax for implementing interfaces.</span></span> <span data-ttu-id="15ef9-118">Si el método implementa una interfaz, de forma privada el <xref:System.CodeDom.CodeMemberMethod.PrivateImplementationType%2A> propiedad debe utilizarse en su lugar.</span><span class="sxs-lookup"><span data-stu-id="15ef9-118">If the method is privately implementing a single interface, the <xref:System.CodeDom.CodeMemberMethod.PrivateImplementationType%2A> property should be used instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeParameterDeclarationExpressionCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeParameterDeclarationExpressionCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberMethod.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As CodeParameterDeclarationExpressionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeParameterDeclarationExpressionCollection ^ Parameters { System::CodeDom::CodeParameterDeclarationExpressionCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeParameterDeclarationExpressionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15ef9-119">Obtiene las declaraciones de parámetros del método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15ef9-119">Gets the parameter declarations for the method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15ef9-120">
            <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" /> que indica los parámetros del método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15ef9-120">A <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" /> that indicates the method parameters.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" />
      </Docs>
    </Member>
    <Member MemberName="PopulateImplementationTypes">
      <MemberSignature Language="C#" Value="public event EventHandler PopulateImplementationTypes;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PopulateImplementationTypes" />
      <MemberSignature Language="DocId" Value="E:System.CodeDom.CodeMemberMethod.PopulateImplementationTypes" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PopulateImplementationTypes As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PopulateImplementationTypes;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15ef9-121">Evento que se desencadena la primera vez que se tiene acceso a la colección <see cref="P:System.CodeDom.CodeMemberMethod.ImplementationTypes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15ef9-121">An event that will be raised the first time the <see cref="P:System.CodeDom.CodeMemberMethod.ImplementationTypes" /> collection is accessed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopulateParameters">
      <MemberSignature Language="C#" Value="public event EventHandler PopulateParameters;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PopulateParameters" />
      <MemberSignature Language="DocId" Value="E:System.CodeDom.CodeMemberMethod.PopulateParameters" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PopulateParameters As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PopulateParameters;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15ef9-122">Evento que se desencadena la primera vez que se tiene acceso a la colección <see cref="P:System.CodeDom.CodeMemberMethod.Parameters" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15ef9-122">An event that will be raised the first time the <see cref="P:System.CodeDom.CodeMemberMethod.Parameters" /> collection is accessed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopulateStatements">
      <MemberSignature Language="C#" Value="public event EventHandler PopulateStatements;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PopulateStatements" />
      <MemberSignature Language="DocId" Value="E:System.CodeDom.CodeMemberMethod.PopulateStatements" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PopulateStatements As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PopulateStatements;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15ef9-123">Evento que se desencadena la primera vez que se tiene acceso a la colección <see cref="P:System.CodeDom.CodeMemberMethod.Statements" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15ef9-123">An event that will be raised the first time the <see cref="P:System.CodeDom.CodeMemberMethod.Statements" /> collection is accessed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateImplementationType">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference PrivateImplementationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReference PrivateImplementationType" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberMethod.PrivateImplementationType" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateImplementationType As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReference ^ PrivateImplementationType { System::CodeDom::CodeTypeReference ^ get(); void set(System::CodeDom::CodeTypeReference ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15ef9-124">Obtiene o establece el tipo de datos de la interfaz que implementa este método, si es privado, e implementa un método de la interfaz, si existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15ef9-124">Gets or sets the data type of the interface this method, if private, implements a method of, if any.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15ef9-125">
            <see cref="T:System.CodeDom.CodeTypeReference" /> indica el tipo de datos de la interfaz con el método que implementa el método privado cuya declaración representa <see cref="T:System.CodeDom.CodeMemberMethod" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15ef9-125">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the data type of the interface with the method that the private method whose declaration is represented by this <see cref="T:System.CodeDom.CodeMemberMethod" /> implements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15ef9-126">Si este <xref:System.CodeDom.CodeMemberMethod> representa la declaración de un método privado y el método implementa un método de una interfaz, esta propiedad debe indicar el tipo de interfaz que el método implementa un método de.</span><span class="sxs-lookup"><span data-stu-id="15ef9-126">If this <xref:System.CodeDom.CodeMemberMethod> represents the declaration of a private method and the method implements a method of an interface, this property should indicate the interface type that the method is implementing a method of.</span></span>  
  
 <span data-ttu-id="15ef9-127">El tipo al que hace referencia esta propiedad debe ser una interfaz.</span><span class="sxs-lookup"><span data-stu-id="15ef9-127">The type referenced by this property must be an interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnType">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference ReturnType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReference ReturnType" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberMethod.ReturnType" />
      <MemberSignature Language="VB.NET" Value="Public Property ReturnType As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReference ^ ReturnType { System::CodeDom::CodeTypeReference ^ get(); void set(System::CodeDom::CodeTypeReference ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15ef9-128">Obtiene o establece el tipo de datos del valor devuelto del método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15ef9-128">Gets or sets the data type of the return value of the method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15ef9-129">
            <see cref="T:System.CodeDom.CodeTypeReference" /> que indica los tipos de datos del valor devuelto por el método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15ef9-129">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the data type of the value returned by the method.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnTypeCustomAttributes">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeAttributeDeclarationCollection ReturnTypeCustomAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeAttributeDeclarationCollection ReturnTypeCustomAttributes" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberMethod.ReturnTypeCustomAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnTypeCustomAttributes As CodeAttributeDeclarationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeAttributeDeclarationCollection ^ ReturnTypeCustomAttributes { System::CodeDom::CodeAttributeDeclarationCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeAttributeDeclarationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15ef9-130">Obtiene los atributos personalizados del tipo de valor devuelto del método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15ef9-130">Gets the custom attributes of the return type of the method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15ef9-131">
            <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> que indica los atributos personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15ef9-131">A <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> that indicates the custom attributes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Statements">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeStatementCollection Statements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeStatementCollection Statements" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberMethod.Statements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Statements As CodeStatementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeStatementCollection ^ Statements { System::CodeDom::CodeStatementCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeStatementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15ef9-132">Obtiene las instrucciones del método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15ef9-132">Gets the statements within the method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15ef9-133">
            <see cref="T:System.CodeDom.CodeStatementCollection" /> que indica las instrucciones del método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15ef9-133">A <see cref="T:System.CodeDom.CodeStatementCollection" /> that indicates the statements within the method.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
      </Docs>
    </Member>
    <Member MemberName="TypeParameters">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeParameterCollection TypeParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeParameterCollection TypeParameters" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberMethod.TypeParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeParameters As CodeTypeParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeParameterCollection ^ TypeParameters { System::CodeDom::CodeTypeParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15ef9-134">Obtiene los parámetros de tipo del método genérico actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15ef9-134">Gets the type parameters for the current generic method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15ef9-135">
            <see cref="T:System.CodeDom.CodeTypeParameterCollection" /> que contiene los parámetros de tipo del método genérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15ef9-135">A <see cref="T:System.CodeDom.CodeTypeParameterCollection" /> that contains the type parameters for the generic method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15ef9-136">Un método genérico contiene uno o más tipos no especificados conocidos como parámetros de tipo.</span><span class="sxs-lookup"><span data-stu-id="15ef9-136">A generic method contains one or more unspecified types known as type parameters.</span></span> <span data-ttu-id="15ef9-137">Hace referencia al nombre de un parámetro de tipo para el tipo dentro del cuerpo de la declaración genérica.</span><span class="sxs-lookup"><span data-stu-id="15ef9-137">A type parameter name stands for the type within the body of the generic declaration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15ef9-138">En el ejemplo de código siguiente se muestra el uso de la <xref:System.CodeDom.CodeMemberMethod.TypeParameters%2A> propiedad que se va a agregar dos parámetros de tipo para el <xref:System.CodeDom.CodeMemberMethod> `printMethod`.</span><span class="sxs-lookup"><span data-stu-id="15ef9-138">The following code example shows the use of the <xref:System.CodeDom.CodeMemberMethod.TypeParameters%2A> property to add two type parameters to the <xref:System.CodeDom.CodeMemberMethod> `printMethod`.</span></span> <span data-ttu-id="15ef9-139">Este ejemplo forma parte de un ejemplo mayor proporcionado para el <xref:System.CodeDom.CodeTypeParameter> clase.</span><span class="sxs-lookup"><span data-stu-id="15ef9-139">This example is part of a larger example provided for the <xref:System.CodeDom.CodeTypeParameter> class.</span></span>  
  
 [!code-csharp[System.CodeDOM.Generics.1#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDOM.Generics.1/CS/codedomgenerics.cs#6)]
 [!code-vb[System.CodeDOM.Generics.1#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDOM.Generics.1/VB/codedomgenerics.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeTypeParameterCollection" />
        <altmember cref="T:System.CodeDom.CodeTypeParameter" />
      </Docs>
    </Member>
  </Members>
</Type>