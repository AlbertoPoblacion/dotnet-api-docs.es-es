<Type Name="AspLog" FullName="Microsoft.VisualBasic.Logging.AspLog">
  <Metadata><Meta Name="ms.openlocfilehash" Value="70c5f7a4cc3a3cf3a74167af91cf8ef9cebb87dd" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="63941500" /></Metadata><TypeSignature Language="C#" Value="public class AspLog : Microsoft.VisualBasic.Logging.Log" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi AspLog extends Microsoft.VisualBasic.Logging.Log" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Logging.AspLog" />
  <TypeSignature Language="VB.NET" Value="Public Class AspLog&#xA;Inherits Log" />
  <TypeSignature Language="C++ CLI" Value="public ref class AspLog : Microsoft::VisualBasic::Logging::Log" />
  <TypeSignature Language="F#" Value="type AspLog = class&#xA;    inherit Log" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.VisualBasic.Logging.Log</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona una propiedad y métodos para escribir información sobre excepciones y eventos en los agentes de escucha de registro de la aplicación.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `My.Application.Log` objeto proporciona un punto de entrada sencillo desde el que se va a obtener acceso a la [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]del registro de servicios. El `WriteEntry` y `WriteException` métodos escriben mensajes en los agentes de escucha de registro de la aplicación. Los agentes de escucha pueden configurarse mediante el archivo de configuración de la aplicación. Para obtener más información, vea [Tutorial: Cambiar el lugar donde My.Application.Log escribe información](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) y [trabajar con registros de aplicaciones](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).  
  
 La `My.Application.Log` objeto solo está disponible para las aplicaciones cliente. Para aplicaciones Web, utilice `My.Log`. Para obtener más información, vea <xref:Microsoft.VisualBasic.Logging.Log?displayProperty=nameWithType>.  
  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `My.Application.Log` objeto.  
  
|En|Vea|  
|--------|---------|  
|Escribir información de eventos a los agentes de escucha de registro de la aplicación|[Escribir mensajes de registro](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)|  
|Escribir información de excepción en los agentes de escucha de registro de la aplicación|[Registrar excepciones](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)|  
|Determinar dónde `My.Application.Log` escribe información|[Tutorial: Determinar el lugar en el que My.Application.Log escribe la información](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
   
  
## Examples  
 Este ejemplo muestra cómo usar el método `My.Application.Log.WriteEntry` para registrar información de seguimiento. Para obtener más información, vea [Cómo: Escribir mensajes de registro](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md).  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
    <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.Logging.AspLog" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AspLog ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.AspLog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AspLog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.Logging.AspLog" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `My.Log` objeto proporciona un punto de entrada sencillo desde el que se va a obtener acceso a la [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]del registro de servicios. El `WriteEntry` y `WriteException` métodos escriben mensajes en los agentes de escucha de registro de la aplicación. Los agentes de escucha pueden configurarse mediante el archivo de configuración de la aplicación. Para obtener más información, vea [Tutorial: Cambiar el lugar donde My.Application.Log escribe información](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) y [trabajar con registros de aplicaciones](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AspLog (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AspLog(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Logging.AspLog : string -&gt; Microsoft.VisualBasic.Logging.AspLog" Usage="new Microsoft.VisualBasic.Logging.AspLog name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><see cref="T:System.String" />. Nombre que se va a dar al objeto de propiedad <see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.Logging.AspLog" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `My.Log` objeto proporciona un punto de entrada sencillo desde el que se va a obtener acceso a la [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]del registro de servicios. El `WriteEntry` y `WriteException` métodos escriben mensajes en los agentes de escucha de registro de la aplicación. Los agentes de escucha pueden configurarse mediante el archivo de configuración de la aplicación. Para obtener más información, vea [Tutorial: Cambiar el lugar donde My.Application.Log escribe información](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) y [trabajar con registros de aplicaciones](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="InitializeWithDefaultsSinceNoConfigExists">
      <MemberSignature Language="C#" Value="protected internal override void InitializeWithDefaultsSinceNoConfigExists ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void InitializeWithDefaultsSinceNoConfigExists() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub InitializeWithDefaultsSinceNoConfigExists ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void InitializeWithDefaultsSinceNoConfigExists();" />
      <MemberSignature Language="F#" Value="override this.InitializeWithDefaultsSinceNoConfigExists : unit -&gt; unit" Usage="aspLog.InitializeWithDefaultsSinceNoConfigExists " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un nuevo <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> y lo agrega a la colección <see cref="P:System.Diagnostics.TraceSource.Listeners" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método crea un nuevo <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>, establece su nombre en `FileLog`y lo configura para registrar los mensajes con nivel de gravedad <xref:System.Diagnostics.SourceLevels.Information> y versiones posteriores. El nuevo <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> , a continuación, se agrega el objeto a la <xref:System.Diagnostics.TraceSource.Listeners%2A> colección.  
  
 El <xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A> llama al método si el <xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A> no se ha configurado la propiedad. El origen de seguimiento puede configurarse en el archivo de configuración de la aplicación.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
      </Docs>
    </Member>
  </Members>
</Type>