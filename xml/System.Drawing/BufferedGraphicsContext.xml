<Type Name="BufferedGraphicsContext" FullName="System.Drawing.BufferedGraphicsContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3cd33420e3c9ab1872718713285569f6c1365879" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52908921" /></Metadata><TypeSignature Language="C#" Value="public sealed class BufferedGraphicsContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BufferedGraphicsContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.BufferedGraphicsContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BufferedGraphicsContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BufferedGraphicsContext sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type BufferedGraphicsContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Proporciona los métodos para crear búferes de gráficos que se pueden utilizar para el almacenamiento en doble búfer.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Drawing.BufferedGraphicsContext> clase le permite implementar un doble búfer personalizado para los gráficos. Gráficos que usan el almacenamiento en doble búfer pueden reducir o eliminar el parpadeo que se produjo al volver a dibujar una superficie de pantalla.  
  
> [!NOTE]
>  La manera más sencilla de usar el almacenamiento en doble búfer es establecer el <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> controlar la marca de estilo de un control mediante la <xref:System.Windows.Forms.Control.SetStyle%2A> método. Establecer el <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> marca los estilos de control para un control redirige todas las operaciones de dibujo del control a través de un búfer de gráficos de forma predeterminada, sin necesidad de ningún código adicional. Esta marca se establece en `true` de forma predeterminada.  
  
 La <xref:System.Drawing.BufferedGraphicsContext> clase proporciona métodos para crear y configurar un búfer de gráficos. El <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> método crea un <xref:System.Drawing.BufferedGraphics>, que es un contenedor para un búfer de gráficos que también proporciona métodos que puede usar para escribir en el búfer y representar su contenido en un dispositivo de salida.  
  
 Puede recuperar el <xref:System.Drawing.BufferedGraphicsContext> para el dominio de aplicación actual desde estático <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> propiedad. Para aplicaciones intensivas gráficamente como animación, puede crear una dedicado <xref:System.Drawing.BufferedGraphicsContext> utilizando el constructor, pero la mayoría de las aplicaciones la <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> propiedad será suficiente.  
  
 Para obtener más información sobre el dibujo de gráficos almacenados en búfer y las implementaciones personalizadas de almacenamiento en búfer, vea [Double Buffered Graphics](~/docs/framework/winforms/advanced/double-buffered-graphics.md) y [Cómo: Administrar manualmente gráficos almacenados en búfer](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo adquirir el <xref:System.Drawing.BufferedGraphicsContext> para el dominio de aplicación actual. Este código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Drawing.BufferedGraphics> clase.  
  
 [!code-cpp[BufferingExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#1)]
 [!code-csharp[BufferingExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#1)]
 [!code-vb[BufferingExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.BufferedGraphics" />
    <altmember cref="T:System.Drawing.BufferedGraphicsManager" />
    <altmember cref="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer" />
    <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">Gráficos de doble búfer</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BufferedGraphicsContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BufferedGraphicsContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.BufferedGraphicsContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para aplicaciones intensivas gráficamente como animación, en ocasiones puede mejorar el rendimiento mediante el uso de una dedicado <xref:System.Drawing.BufferedGraphicsContext> en lugar de la instancia predeterminada proporcionada por el <xref:System.Drawing.BufferedGraphicsManager>. Esto le permite crear y administrar búferes de gráficos individualmente.  
  
> [!NOTE]
>  Siempre debe llamar a <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> cuando termine de usar una dedicado <xref:System.Drawing.BufferedGraphicsContext>.  
  
 Para obtener más información acerca de los búferes de gráficos dedicados, vea [Cómo: Administrar manualmente gráficos almacenados en búfer](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">Gráficos de doble búfer</related>
        <related type="Article" href="~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md">Cómo: Administrar manualmente gráficos almacenados en búfer</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Allocate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un búfer de gráficos.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Allocate">
      <MemberSignature Language="C#" Value="public System.Drawing.BufferedGraphics Allocate (System.Drawing.Graphics targetGraphics, System.Drawing.Rectangle targetRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.BufferedGraphics Allocate(class System.Drawing.Graphics targetGraphics, valuetype System.Drawing.Rectangle targetRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Allocate (targetGraphics As Graphics, targetRectangle As Rectangle) As BufferedGraphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::BufferedGraphics ^ Allocate(System::Drawing::Graphics ^ targetGraphics, System::Drawing::Rectangle targetRectangle);" />
      <MemberSignature Language="F#" Value="member this.Allocate : System.Drawing.Graphics * System.Drawing.Rectangle -&gt; System.Drawing.BufferedGraphics" Usage="bufferedGraphicsContext.Allocate (targetGraphics, targetRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.BufferedGraphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetGraphics" Type="System.Drawing.Graphics" />
        <Parameter Name="targetRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="targetGraphics"><see cref="T:System.Drawing.Graphics" /> cuyo formato de píxel se va a utilizar para el nuevo búfer.</param>
        <param name="targetRectangle"><see cref="T:System.Drawing.Rectangle" /> que indica el tamaño del búfer que se va a crear.</param>
        <summary>Crea un búfer de gráficos del tamaño especificado con el formato de píxel del <see cref="T:System.Drawing.Graphics" /> especificado.</summary>
        <returns><see cref="T:System.Drawing.BufferedGraphics" /> que se puede utilizar para dibujar en un búfer con las dimensiones especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se llama a la <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> método con un rectángulo cuyo tamaño supera el valor de la <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> propiedad, un archivo temporal <xref:System.Drawing.BufferedGraphicsContext> se crea para asignar el búfer y proporcionar un contexto temporal del búfer. El nuevo <xref:System.Drawing.BufferedGraphicsContext> es distinta de la <xref:System.Drawing.BufferedGraphicsContext> para la aplicación de dominio y se elimina automáticamente cuando el <xref:System.Drawing.BufferedGraphics> devuelto por la <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> se elimina el método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear un búfer de gráficos mediante la <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> método. Este código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Drawing.BufferedGraphics> clase.  
  
 [!code-cpp[BufferingExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#3)]
 [!code-csharp[BufferingExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#3)]
 [!code-vb[BufferingExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.BufferedGraphics" />
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Drawing.Rectangle" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">Gráficos de doble búfer</related>
      </Docs>
    </Member>
    <Member MemberName="Allocate">
      <MemberSignature Language="C#" Value="public System.Drawing.BufferedGraphics Allocate (IntPtr targetDC, System.Drawing.Rectangle targetRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.BufferedGraphics Allocate(native int targetDC, valuetype System.Drawing.Rectangle targetRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Allocate (targetDC As IntPtr, targetRectangle As Rectangle) As BufferedGraphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::BufferedGraphics ^ Allocate(IntPtr targetDC, System::Drawing::Rectangle targetRectangle);" />
      <MemberSignature Language="F#" Value="member this.Allocate : nativeint * System.Drawing.Rectangle -&gt; System.Drawing.BufferedGraphics" Usage="bufferedGraphicsContext.Allocate (targetDC, targetRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.BufferedGraphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDC" Type="System.IntPtr" />
        <Parameter Name="targetRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="targetDC"><see cref="T:System.IntPtr" /> a un contexto de dispositivo cuyo formato de píxel se va a utilizar para el nuevo búfer.</param>
        <param name="targetRectangle"><see cref="T:System.Drawing.Rectangle" /> que indica el tamaño del búfer que se va a crear.</param>
        <summary>Crea un búfer de gráficos del tamaño especificado con el formato de píxel del <see cref="T:System.Drawing.Graphics" /> especificado.</summary>
        <returns><see cref="T:System.Drawing.BufferedGraphics" /> que se puede utilizar para dibujar en un búfer con las dimensiones especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se llama a la <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> método con un rectángulo cuyo tamaño supera el valor de la <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> propiedad, un archivo temporal <xref:System.Drawing.BufferedGraphicsContext> se crea para asignar el búfer y proporcionar un contexto temporal del búfer. El nuevo <xref:System.Drawing.BufferedGraphicsContext> es distinta de la <xref:System.Drawing.BufferedGraphicsContext> para la aplicación de dominio y se elimina automáticamente cuando el <xref:System.Drawing.BufferedGraphics> devuelto por la <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> se elimina el método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear un búfer de gráficos mediante la <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> método. Este código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Drawing.BufferedGraphics> clase.  
  
 [!code-cpp[BufferingExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#4)]
 [!code-csharp[BufferingExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#4)]
 [!code-vb[BufferingExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Para obtener acceso a código no administrado. Enumeración relacionados: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Drawing.BufferedGraphics" />
        <altmember cref="T:System.IntPtr" />
        <altmember cref="T:System.Drawing.Rectangle" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">Gráficos de doble búfer</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="bufferedGraphicsContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libera todos los recursos que usa <see cref="T:System.Drawing.BufferedGraphicsContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llame a <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> cuando haya terminado de usar <xref:System.Drawing.BufferedGraphicsContext>. El método <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> deja el <xref:System.Drawing.BufferedGraphicsContext> en un estado no utilizable. Después de llamar a <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>, debe liberar todas las referencias a la <xref:System.Drawing.BufferedGraphicsContext> por lo que el recolector de elementos no utilizados pueda reclamar la memoria que el <xref:System.Drawing.BufferedGraphicsContext> estaba ocupando. Para obtener más información, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Realice siempre una llamada a <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> antes de liberar la última referencia al objeto <xref:System.Drawing.BufferedGraphicsContext>. En caso contrario, los recursos que utiliza no se liberarán hasta que el recolector de elementos no utilizados llame al <xref:System.Object.Finalize%2A> método de la <xref:System.Drawing.BufferedGraphicsContext>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">Gráficos de doble búfer</related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~BufferedGraphicsContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!BufferedGraphicsContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="bufferedGraphicsContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Permite que un objeto intente liberar recursos y realizar otras operaciones de limpieza antes de que sea reclamado por la recolección de elementos no utilizados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberSignature Language="F#" Value="member this.Invalidate : unit -&gt; unit" Usage="bufferedGraphicsContext.Invalidate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Desecha el búfer de gráficos actual si se asignó un búfer y este aún no se ha desechado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el búfer de gráficos está en uso, se marcará para su eliminación tan pronto como es gratuito; en caso contrario, se eliminará inmediatamente.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">Gráficos de doble búfer</related>
      </Docs>
    </Member>
    <Member MemberName="MaximumBuffer">
      <MemberSignature Language="C#" Value="public System.Drawing.Size MaximumBuffer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MaximumBuffer" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumBuffer As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size MaximumBuffer { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumBuffer : System.Drawing.Size with get, set" Usage="System.Drawing.BufferedGraphicsContext.MaximumBuffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tamaño máximo del búfer que se va a usar.</summary>
        <value>Un valor de <see cref="T:System.Drawing.Size" /> que indica el tamaño máximo del búfer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad permite obtener o establecer las dimensiones máximas para un búfer que se debe conservar en memoria. Puede asignar un búfer de cualquier tamaño, sin embargo, cualquier búfer con dimensiones mayores que el <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> tamaño será usar temporalmente y, a continuación, se descartan cuando el <xref:System.Drawing.BufferedGraphics> se libera el objeto.  
  
   
  
## Examples  
 El ejemplo siguiente se muestra cómo establecer el tamaño máximo del búfer para un <xref:System.Drawing.BufferedGraphicsContext>. Este código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Drawing.BufferedGraphics> clase.  
  
 [!code-cpp[BufferingExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#2)]
 [!code-csharp[BufferingExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#2)]
 [!code-vb[BufferingExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El alto o ancho es menor o igual que cero.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">para permitir el acceso de usuario a todas las ventanas. Enumeración relacionados: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">Gráficos de doble búfer</related>
      </Docs>
    </Member>
  </Members>
</Type>