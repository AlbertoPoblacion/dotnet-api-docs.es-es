<Type Name="ToolboxBitmapAttribute" FullName="System.Drawing.ToolboxBitmapAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7ad7d81f7ca03265573cf587030eae273e442b0f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36488389" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ToolboxBitmapAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ToolboxBitmapAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.ToolboxBitmapAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ToolboxBitmapAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolboxBitmapAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type ToolboxBitmapAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Le permite especificar un icono para representar un control en un contenedor, como el Diseñador de formularios de Microsoft Visual Studio.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede aplicar un <xref:System.Drawing.ToolboxBitmapAttribute> a un control para que los contenedores, como Microsoft Visual Studio formulario Designer, pueden recuperar un icono que representa el control. El mapa de bits para el icono puede estar en un archivo por sí solo o incrustado en el ensamblado que contiene el control. El tamaño del mapa de bits que incrustan en el ensamblado del control (o almacenar en un archivo independiente) debe ser de 16 por 16. El <xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A> método de una <xref:System.Drawing.ToolboxBitmapAttribute> objeto puede devolver la imagen pequeña de 16 por 16 o una imagen de 32 por 32 grandes que crea cambiando el tamaño de la imagen pequeña.  
  
 Si desea utilizar versiones distintas de los iconos con distintas versiones del ensamblado, no es necesario modificar el <xref:System.Drawing.ToolboxBitmapAttribute> para cada versión. En su lugar, puede declarar el ensamblado con un <xref:System.Drawing.BitmapSuffixInSameAssemblyAttribute> o un <xref:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute>y especifique un <xref:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix%2A> valor de configuración para cada versión del ensamblado. En este caso, un nombre de archivo indicado por un <xref:System.Drawing.ToolboxBitmapAttribute> se interpreta con el sufijo de mapa de bits que se anexa.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Drawing.ToolboxBitmapAttribute> clase para establecer `stop.bmp` como el icono de cuadro de herramientas para el `StopSignControl`. En este ejemplo se supone la existencia de un mapa de bits de 16 por 16 píxeles denominado `stop.bmp` en c:\\.  
  
 [!code-cpp[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#1)]
 [!code-csharp[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#1)]
 [!code-vb[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa un nuevo objeto <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxBitmapAttribute (string imageFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string imageFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (imageFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolboxBitmapAttribute(System::String ^ imageFile);" />
      <MemberSignature Language="F#" Value="new System.Drawing.ToolboxBitmapAttribute : string -&gt; System.Drawing.ToolboxBitmapAttribute" Usage="new System.Drawing.ToolboxBitmapAttribute imageFile" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="imageFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFile">Nombre de un archivo que contiene un mapa de bits de 16 por 16.</param>
        <summary>Inicializa un nuevo objeto <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> con una imagen a partir de un archivo especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A> constructor para establecer `stop.bmp` como el icono de cuadro de herramientas para el `StopSignControl`. En este ejemplo se supone la existencia de un mapa de bits de 16 por 16 píxeles denominado `stop.bmp` en c:\\.  
  
 [!code-cpp[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#1)]
 [!code-csharp[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#1)]
 [!code-vb[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxBitmapAttribute (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (t As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolboxBitmapAttribute(Type ^ t);" />
      <MemberSignature Language="F#" Value="new System.Drawing.ToolboxBitmapAttribute : Type -&gt; System.Drawing.ToolboxBitmapAttribute" Usage="new System.Drawing.ToolboxBitmapAttribute t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">Una declaración de tipo <see cref="T:System.Type" /> en cuyo ensamblado que lo define se busca el recurso de mapa de bits.</param>
        <summary>Inicializa un nuevo objeto <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> basado en un mapa de bits de 16 x 16 que se encuentra incrustado como un recurso en un ensamblado especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor busca un recurso incrustado en el ensamblado que define el tipo especificado por el `t` parámetro. El constructor busca un recurso denominado namespace.classname.bmp, donde el espacio de nombres es el espacio de nombres que contiene la definición de la clase especificada por el `t` parámetro. Por ejemplo, si ControlA se encuentra en NamespaceA de AssemblyA.dll, a continuación, el constructor busca en AssemblyA.dll un recurso denominado NamespaceA.ControlA.bmp.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A> constructor para establecer el icono del control de botón en el icono de cuadro de herramientas para un <xref:System.Windows.Forms.UserControl> denominado `StopSignControl3`.  
  
 [!code-cpp[System.Drawing.ToolBoxBitmapExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#3)]
 [!code-csharp[System.Drawing.ToolBoxBitmapExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#3)]
 [!code-vb[System.Drawing.ToolBoxBitmapExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxBitmapAttribute (Type t, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type t, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (t As Type, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolboxBitmapAttribute(Type ^ t, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Drawing.ToolboxBitmapAttribute : Type * string -&gt; System.Drawing.ToolboxBitmapAttribute" Usage="new System.Drawing.ToolboxBitmapAttribute (t, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="t">Una declaración de tipo <see cref="T:System.Type" /> en cuyo ensamblado que lo define se busca el recurso de mapa de bits.</param>
        <param name="name">Nombre del recurso de mapa de bits incrustado.</param>
        <summary>Inicializa un nuevo objeto <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> basado en un mapa de bits de 16 por 16 que se encuentra incrustado como un recurso en un ensamblado especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor busca un recurso incrustado en el ensamblado que define el tipo especificado por el `t` parámetro. El constructor busca un recurso denominado namespace.name, donde es el espacio de nombres que contiene la definición de la clase especificada por el `t` parámetro. Por ejemplo, supongamos que ControlA es una clase de NamespaceA en AssemblyA.dll y que se pasó "MyBitmap.bmp" para el `name` parámetro. A continuación, el constructor busca en AssemblyA.dll un recurso denominado NamespaceA.MyBitmap.bmp.  
  
   
  
## Examples  
 ' En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A> constructor para establecer `StopSignControl2.bmp` como un icono de cuadro de herramientas para el `StopSignControl2`. En este ejemplo se supone la existencia de un mapa de bits de 16 por 16 píxeles denominado `StopSignControl2.bmp` con su **BuildAction** propiedad establecida en **EmbeddedResource**.  
  
 [!code-cpp[System.Drawing.ToolBoxBitmapExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#2)]
 [!code-csharp[System.Drawing.ToolBoxBitmapExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#2)]
 [!code-vb[System.Drawing.ToolBoxBitmapExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly System.Drawing.ToolboxBitmapAttribute Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Drawing.ToolboxBitmapAttribute Default" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.ToolboxBitmapAttribute.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Default As ToolboxBitmapAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Drawing::ToolboxBitmapAttribute ^ Default;" />
      <MemberSignature Language="F#" Value=" staticval mutable Default : System.Drawing.ToolboxBitmapAttribute" Usage="System.Drawing.ToolboxBitmapAttribute.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.ToolboxBitmapAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Objeto <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> cuya imagen pequeña e imagen grande están establecidas en <see langword="null" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="toolboxBitmapAttribute.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Object" /> que se va a comprobar.</param>
        <summary>Indica si el objeto especificado es un objeto <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> y si es idéntico a este objeto <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</summary>
        <returns>Este método devuelve <see langword="true" /> si el parámetro <paramref name="value" /> es un objeto <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> y es idéntico a este objeto <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="toolboxBitmapAttribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene un código hash para este objeto <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</summary>
        <returns>El código hash de este objeto <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetImage">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Drawing.Image" /> pequeño o grande asociado a este objeto <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetImage (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetImage(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetImage (component As Object) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Image ^ GetImage(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="member this.GetImage : obj -&gt; System.Drawing.Image" Usage="toolboxBitmapAttribute.GetImage component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">Si este objeto <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> aún no dispone de una imagen pequeña, este método busca un recurso de mapa de bits en el ensamblado que define el tipo del objeto especificado por el parámetro de componente. Por ejemplo, si se pasa un objeto de tipo ControlA al parámetro de componente, este método busca en el ensamblado que define ControlA.</param>
        <summary>Obtiene el objeto <see cref="T:System.Drawing.Image" /> pequeño asociado a este objeto <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</summary>
        <returns>
          <see cref="T:System.Drawing.Image" /> pequeño asociado a este objeto <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método busca un recurso denominado namespace.classname.bmp, donde el espacio de nombres es el espacio de nombres que contiene la definición del tipo de objeto especificado por el `component` parámetro. Por ejemplo, supongamos que se pasa un objeto de tipo ControlA a los `component` parámetro. Si ControlA se encuentra en NamespaceA de AssemblyA.dll, este método busca en AssemblyA.dll un recurso denominado NamespaceA.ControlA.bmp.  
  
   
  
## Examples  
 En el siguiente ejemplo se muestra cómo se utiliza el método <xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A>.  
  
 [!code-cpp[System.Drawing.ToolBoxBitmapExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#4)]
 [!code-csharp[System.Drawing.ToolBoxBitmapExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#4)]
 [!code-vb[System.Drawing.ToolBoxBitmapExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetImage (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetImage(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Image ^ GetImage(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetImage : Type -&gt; System.Drawing.Image" Usage="toolboxBitmapAttribute.GetImage type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Si este objeto <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> aún no dispone de una imagen pequeña, este método busca un recurso de mapa de bits en el ensamblado que define el tipo especificado por el parámetro de tipo. Por ejemplo, si se pasa typeof(ControlA) al parámetro de tipo, este método busca en el ensamblado que define ControlA.</param>
        <summary>Obtiene el objeto <see cref="T:System.Drawing.Image" /> pequeño asociado a este objeto <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</summary>
        <returns>
          <see cref="T:System.Drawing.Image" /> pequeño asociado a este objeto <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método busca un recurso denominado namespace.classname.bmp, donde el espacio de nombres es el espacio de nombres que contiene la definición del tipo especificado por el `type` parámetro. Por ejemplo, supongamos que se pasa typeof (controla) a la `type` parámetro. Si ControlA se encuentra en NamespaceA de AssemblyA.dll, este método busca en AssemblyA.dll un recurso denominado NamespaceA.ControlA.bmp.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetImage (object component, bool large);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetImage(object component, bool large) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetImage (component As Object, large As Boolean) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Image ^ GetImage(System::Object ^ component, bool large);" />
      <MemberSignature Language="F#" Value="member this.GetImage : obj * bool -&gt; System.Drawing.Image" Usage="toolboxBitmapAttribute.GetImage (component, large)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="large" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">Si este objeto <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> aún no dispone de una imagen pequeña, este método busca un recurso de mapa de bits en el ensamblado que define el tipo del objeto especificado por el parámetro de componente. Por ejemplo, si se pasa un objeto de tipo ControlA al parámetro de componente, este método busca en el ensamblado que define ControlA.</param>
        <param name="large">Especifica si este método devuelve una imagen grande (<see langword="true" />) o una imagen pequeña (<see langword="false" />). La imagen pequeña es de 16 por 16 y la imagen grande es de 32 por 32.</param>
        <summary>Obtiene el objeto <see cref="T:System.Drawing.Image" /> pequeño o grande asociado a este objeto <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</summary>
        <returns>Un objeto <see cref="T:System.Drawing.Image" /> asociado a este objeto <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método busca un recurso denominado namespace.classname.bmp, donde el espacio de nombres es el espacio de nombres que contiene la definición del tipo de objeto especificado por el `component` parámetro. Por ejemplo, supongamos que se pasa un objeto de tipo ControlA a los `component` parámetro. Si ControlA se encuentra en NamespaceA de AssemblyA.dll, este método busca en AssemblyA.dll un recurso denominado NamespaceA.ControlA.bmp.  
  
 Si este <xref:System.Drawing.ToolboxBitmapAttribute> objeto no tiene todavía una imagen grande, este método crea una imagen grande ajustando la escala de la imagen pequeña.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetImage (Type type, bool large);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetImage(class System.Type type, bool large) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Image ^ GetImage(Type ^ type, bool large);" />
      <MemberSignature Language="F#" Value="member this.GetImage : Type * bool -&gt; System.Drawing.Image" Usage="toolboxBitmapAttribute.GetImage (type, large)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="large" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">Si este objeto <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> aún no dispone de una imagen pequeña, este método busca un recurso de mapa de bits en el ensamblado que define el tipo especificado por el tipo del componente. Por ejemplo, si se pasa typeof(ControlA) al parámetro de tipo, este método busca en el ensamblado que define ControlA.</param>
        <param name="large">Especifica si este método devuelve una imagen grande (<see langword="true" />) o una imagen pequeña (<see langword="false" />). La imagen pequeña es de 16 por 16 y la imagen grande es de 32 por 32.</param>
        <summary>Obtiene el objeto <see cref="T:System.Drawing.Image" /> pequeño o grande asociado a este objeto <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</summary>
        <returns>Objeto <see cref="T:System.Drawing.Image" /> asociado a este objeto <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método busca un recurso denominado namespace.classname.bmp, donde el espacio de nombres es el espacio de nombres que contiene la definición del tipo especificado por el `type` parámetro. Por ejemplo, supongamos que se pasa un typeof (controla) a la `type` parámetro. Si ControlA se encuentra en NamespaceA de AssemblyA.dll, este método busca en AssemblyA.dll un recurso denominado NamespaceA.ControlA.bmp.  
  
 Si este <xref:System.Drawing.ToolboxBitmapAttribute> objeto no tiene todavía una imagen grande, este método crea una imagen grande ajustando la escala de la imagen pequeña.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetImage (Type type, string imgName, bool large);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetImage(class System.Type type, string imgName, bool large) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Image ^ GetImage(Type ^ type, System::String ^ imgName, bool large);" />
      <MemberSignature Language="F#" Value="member this.GetImage : Type * string * bool -&gt; System.Drawing.Image" Usage="toolboxBitmapAttribute.GetImage (type, imgName, large)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="imgName" Type="System.String" />
        <Parameter Name="large" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">Si este objeto <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> aún no dispone de una imagen pequeña, este método busca un recurso de mapa de bits incrustado en el ensamblado que define el tipo especificado por el tipo del componente. Por ejemplo, si se pasa typeof(ControlA) al parámetro de tipo, este método busca en el ensamblado que define ControlA.</param>
        <param name="imgName">Nombre del recurso de mapa de bits incrustado.</param>
        <param name="large">Especifica si este método devuelve una imagen grande (<see langword="true" />) o una imagen pequeña (<see langword="false" />). La imagen pequeña es de 16 por 16 y la imagen grande es de 32 por 32.</param>
        <summary>Obtiene el objeto <see cref="T:System.Drawing.Image" /> pequeño o grande asociado a este objeto <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</summary>
        <returns>Objeto <see cref="T:System.Drawing.Image" /> asociado a este objeto <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método busca un recurso denominado namespace.imgName, donde el espacio de nombres es el espacio de nombres que contiene la definición del tipo especificado por el `type` parámetro. Por ejemplo, supongamos que se pasa typeof (controla) a la `type` parámetro y que se pasó "MyBitmap.bmp" al parámetro imgName. Si ControlA se encuentra en NamespaceA de AssemblyA.dll, este método busca en AssemblyA.dll un recurso denominado NamespaceA.MyBitmap.bmp.  
  
 Si este <xref:System.Drawing.ToolboxBitmapAttribute> objeto no tiene todavía una imagen grande, este método crea una imagen grande ajustando la escala de la imagen pequeña.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImageFromResource">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image GetImageFromResource (Type t, string imageName, bool large);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image GetImageFromResource(class System.Type t, string imageName, bool large) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetImageFromResource (t As Type, imageName As String, large As Boolean) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ GetImageFromResource(Type ^ t, System::String ^ imageName, bool large);" />
      <MemberSignature Language="F#" Value="static member GetImageFromResource : Type * string * bool -&gt; System.Drawing.Image" Usage="System.Drawing.ToolboxBitmapAttribute.GetImageFromResource (t, imageName, large)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="imageName" Type="System.String" />
        <Parameter Name="large" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="t">Este método busca un recurso de mapa de bits incrustado en el ensamblado que define el tipo especificado por el parámetro t. Por ejemplo, si se pasa typeof(ControlA) al parámetro t, este método busca en el ensamblado que define ControlA.</param>
        <param name="imageName">Nombre del recurso de mapa de bits incrustado.</param>
        <param name="large">Especifica si este método devuelve una imagen grande (true) o una imagen pequeña (false). La imagen pequeña es de 16 por 16 y la imagen grande es de 32 por 32.</param>
        <summary>Devuelve un objeto <see cref="T:System.Drawing.Image" /> basado en un recurso de mapa de bits que se encuentra incrustado en un ensamblado.</summary>
        <returns>Un objeto <see cref="T:System.Drawing.Image" /> basado en el mapa de bits recuperado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método busca un recurso denominado namespace.imgName, donde el espacio de nombres es el espacio de nombres que contiene la definición del tipo especificado por el `t` parámetro. Por ejemplo, supongamos que se pasa typeof (controla) a la `t` parámetro y se pasa "MyBitmap.bmp" al parámetro imgName. Si ControlA se encuentra en NamespaceA de AssemblyA.dll, este método busca en AssemblyA.dll un recurso denominado NamespaceA.MyBitmap.bmp.  
  
 Este método está pensado para recuperar un recurso de mapa de bits de 16 x 16 que está incrustado en un ensamblado. Sin embargo, no hay ningún requisito de que el mapa de bits incrustado tiene un tamaño de 16 x 16. El mapa de bits que se recupera desde el ensamblado (con independencia del tamaño) se considera la imagen pequeña. La imagen grande se crea ajustando la escala de la imagen "pequeña" a un tamaño de 32 x 32. Por lo que la imagen grande siempre será 32 por 32, independientemente del tamaño del mapa de bits recuperados desde el ensamblado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>