<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ToolboxBitmapAttribute.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58e7e3baddc7823e3a9d97c1cce31418160f7e4a9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e7e3baddc7823e3a9d97c1cce31418160f7e4a9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>Allows you to specify an icon to represent a control in a container, such as the Microsoft Visual Studio Form Designer.</source>
          <target state="translated">Le permite especificar un icono para representar un control en un contenedor, como el Diseñador de formularios de Microsoft Visual Studio.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>You can apply a <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> to a control so that containers, such as Microsoft Visual Studio Form Designer, can retrieve an icon that represents the control.</source>
          <target state="translated">Puede aplicar un <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> a un control para que los contenedores, como Microsoft Visual Studio formulario Designer, pueden recuperar un icono que representa el control.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>The bitmap for the icon can be in a file by itself or embedded in the assembly that contains the control.</source>
          <target state="translated">El mapa de bits para el icono puede estar en un archivo por sí solo o incrustado en el ensamblado que contiene el control.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>The size of the bitmap that you embed in the control's assembly (or store in a separate file) should be 16 by 16.</source>
          <target state="translated">El tamaño del mapa de bits que incrustan en el ensamblado del control (o almacenar en un archivo independiente) debe ser de 16 por 16.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A&gt;</ph> method of a <ph id="ph2">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> object can return the small 16 by 16 image or a large 32 by 32 image that it creates by scaling the small image.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A&gt;</ph> método de una <ph id="ph2">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> objeto puede devolver la imagen pequeña de 16 por 16 o una imagen de 32 por 32 grandes que crea cambiando el tamaño de la imagen pequeña.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>If you want to use different versions of your icons with different versions of your assembly, you do not have to modify the <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> for each version.</source>
          <target state="translated">Si desea utilizar versiones distintas de los iconos con distintas versiones del ensamblado, no es necesario modificar el <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> para cada versión.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>Instead, you can declare the assembly with a <ph id="ph1">&lt;xref:System.Drawing.BitmapSuffixInSameAssemblyAttribute&gt;</ph> or a <ph id="ph2">&lt;xref:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute&gt;</ph>, and specify a <ph id="ph3">&lt;xref:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix%2A&gt;</ph> configuration value for each assembly version.</source>
          <target state="translated">En su lugar, puede declarar el ensamblado con un <ph id="ph1">&lt;xref:System.Drawing.BitmapSuffixInSameAssemblyAttribute&gt;</ph> o un <ph id="ph2">&lt;xref:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute&gt;</ph>y especifique un <ph id="ph3">&lt;xref:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix%2A&gt;</ph> valor de configuración para cada versión del ensamblado.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>In this case, a file name indicated by a <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> is interpreted with the bitmap suffix appended.</source>
          <target state="translated">En este caso, un nombre de archivo indicado por un <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> se interpreta con el sufijo de mapa de bits que se anexa.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> class to set <ph id="ph2">`stop.bmp`</ph> as the toolbox icon for the <ph id="ph3">`StopSignControl`</ph>.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> clase para establecer <ph id="ph2">`stop.bmp`</ph> como el icono de cuadro de herramientas para el <ph id="ph3">`StopSignControl`</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>This example assumes the existence of a 16-by-16-pixel bitmap named <ph id="ph1">`stop.bmp`</ph> at c:<ph id="ph2">\\</ph>.</source>
          <target state="translated">En este ejemplo se supone la existencia de un mapa de bits de 16 por 16 píxeles denominado <ph id="ph1">`stop.bmp`</ph> en c:<ph id="ph2">\\</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">Inicializa un nuevo objeto <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)">
          <source>The name of a file that contains a 16 by 16 bitmap.</source>
          <target state="translated">Nombre de un archivo que contiene un mapa de bits de 16 por 16.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object with an image from a specified file.</source>
          <target state="translated">Inicializa un nuevo objeto <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> con una imagen a partir de un archivo especificado.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A&gt;</ph> constructor to set <ph id="ph2">`stop.bmp`</ph> as the toolbox icon for the <ph id="ph3">`StopSignControl`</ph>.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A&gt;</ph> constructor para establecer <ph id="ph2">`stop.bmp`</ph> como el icono de cuadro de herramientas para el <ph id="ph3">`StopSignControl`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)">
          <source>This example assumes the existence of a 16-by-16-pixel bitmap named <ph id="ph1">`stop.bmp`</ph> at c:<ph id="ph2">\\</ph>.</source>
          <target state="translated">En este ejemplo se supone la existencia de un mapa de bits de 16 por 16 píxeles denominado <ph id="ph1">`stop.bmp`</ph> en c:<ph id="ph2">\\</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> whose defining assembly is searched for the bitmap resource.</source>
          <target state="translated">Una declaración de tipo <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> en cuyo ensamblado que lo define se busca el recurso de mapa de bits.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object based on a 16 x 16 bitmap that is embedded as a resource in a specified assembly.</source>
          <target state="translated">Inicializa un nuevo objeto <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> basado en un mapa de bits de 16 x 16 que se encuentra incrustado como un recurso en un ensamblado especificado.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
          <source>This constructor searches for an embedded resource in the assembly that defines the type specified by the <ph id="ph1">`t`</ph> parameter.</source>
          <target state="translated">Este constructor busca un recurso incrustado en el ensamblado que define el tipo especificado por el <ph id="ph1">`t`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
          <source>The constructor searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the class specified by the <ph id="ph1">`t`</ph> parameter.</source>
          <target state="translated">El constructor busca un recurso denominado namespace.classname.bmp, donde el espacio de nombres es el espacio de nombres que contiene la definición de la clase especificada por el <ph id="ph1">`t`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
          <source>For example, if ControlA is in NamespaceA in AssemblyA.dll, then the constructor searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.</source>
          <target state="translated">Por ejemplo, si ControlA se encuentra en NamespaceA de AssemblyA.dll, a continuación, el constructor busca en AssemblyA.dll un recurso denominado NamespaceA.ControlA.bmp.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A&gt;</ph> constructor to set the icon of the button control to the toolbox icon for a <ph id="ph2">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> named <ph id="ph3">`StopSignControl3`</ph>.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A&gt;</ph> constructor para establecer el icono del control de botón en el icono de cuadro de herramientas para un <ph id="ph2">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> denominado <ph id="ph3">`StopSignControl3`</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> whose defining assembly is searched for the bitmap resource.</source>
          <target state="translated">Una declaración de tipo <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> en cuyo ensamblado que lo define se busca el recurso de mapa de bits.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>The name of the embedded bitmap resource.</source>
          <target state="translated">Nombre del recurso de mapa de bits incrustado.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object based on a 16 by 16 bitmap that is embedded as a resource in a specified assembly.</source>
          <target state="translated">Inicializa un nuevo objeto <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> basado en un mapa de bits de 16 por 16 que se encuentra incrustado como un recurso en un ensamblado especificado.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>This constructor searches for an embedded resource in the assembly that defines the type specified by the <ph id="ph1">`t`</ph> parameter.</source>
          <target state="translated">Este constructor busca un recurso incrustado en el ensamblado que define el tipo especificado por el <ph id="ph1">`t`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>The constructor searches for a resource named namespace.name, where namespace is the namespace containing the definition of the class specified by the <ph id="ph1">`t`</ph> parameter.</source>
          <target state="translated">El constructor busca un recurso denominado namespace.name, donde es el espacio de nombres que contiene la definición de la clase especificada por el <ph id="ph1">`t`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>For example, suppose that ControlA is a class in NamespaceA in AssemblyA.dll and that you passed "MyBitmap.bmp" to the <ph id="ph1">`name`</ph> parameter.</source>
          <target state="translated">Por ejemplo, supongamos que ControlA es una clase de NamespaceA en AssemblyA.dll y que se pasó "MyBitmap.bmp" para el <ph id="ph1">`name`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>Then the constructor searches AssemblyA.dll for a resource named NamespaceA.MyBitmap.bmp.</source>
          <target state="translated">A continuación, el constructor busca en AssemblyA.dll un recurso denominado NamespaceA.MyBitmap.bmp.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>'The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A&gt;</ph> constructor to set <ph id="ph2">`StopSignControl2.bmp`</ph> as a toolbox icon for the <ph id="ph3">`StopSignControl2`</ph>.</source>
          <target state="translated">' En el ejemplo de código siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A&gt;</ph> constructor para establecer <ph id="ph2">`StopSignControl2.bmp`</ph> como un icono de cuadro de herramientas para el <ph id="ph3">`StopSignControl2`</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>This example assumes the existence of a 16-by-16-pixel bitmap named <ph id="ph1">`StopSignControl2.bmp`</ph> with its <bpt id="p1">**</bpt>BuildAction<ept id="p1">**</ept> property set to <bpt id="p2">**</bpt>EmbeddedResource<ept id="p2">**</ept>.</source>
          <target state="translated">En este ejemplo se supone la existencia de un mapa de bits de 16 por 16 píxeles denominado <ph id="ph1">`StopSignControl2.bmp`</ph> con su <bpt id="p1">**</bpt>BuildAction<ept id="p1">**</ept> propiedad establecida en <bpt id="p2">**</bpt>EmbeddedResource<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="F:System.Drawing.ToolboxBitmapAttribute.Default">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object that has its small image and its large image set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> cuya imagen pequeña e imagen grande están establecidas en <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to test.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que se va a probar.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)">
          <source>Indicates whether the specified object is a <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object and is identical to this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">Indica si el objeto especificado es un objeto <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> y si es idéntico a este objeto <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is both a <ph id="ph3">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object and is identical to this <ph id="ph4">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">Este método devuelve <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el parámetro <ph id="ph2">&lt;paramref name="value" /&gt;</ph> es un objeto <ph id="ph3">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> y es idéntico a este objeto <ph id="ph4">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetHashCode">
          <source>Gets a hash code for this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">Obtiene un código hash para este objeto <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetHashCode">
          <source>The hash code for this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">El código hash de este objeto <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>Gets the small or large <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> pequeño o grande asociado a este objeto <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>If this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type of the object specified by the component parameter.</source>
          <target state="translated">Si este objeto <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> aún no dispone de una imagen pequeña, este método busca un recurso de mapa de bits en el ensamblado que define el tipo del objeto especificado por el parámetro de componente.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>For example, if you pass an object of type ControlA to the component parameter, then this method searches the assembly that defines ControlA.</source>
          <target state="translated">Por ejemplo, si se pasa un objeto de tipo ControlA al parámetro de componente, este método busca en el ensamblado que define ControlA.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>Gets the small <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> pequeño asociado a este objeto <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>The small <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> pequeño asociado a este objeto <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type of the object specified by the <ph id="ph1">`component`</ph> parameter.</source>
          <target state="translated">Este método busca un recurso denominado namespace.classname.bmp, donde el espacio de nombres es el espacio de nombres que contiene la definición del tipo de objeto especificado por el <ph id="ph1">`component`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>For example, suppose you pass an object of type ControlA to the <ph id="ph1">`component`</ph> parameter.</source>
          <target state="translated">Por ejemplo, supongamos que se pasa un objeto de tipo ControlA a los <ph id="ph1">`component`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.</source>
          <target state="translated">Si ControlA se encuentra en NamespaceA de AssemblyA.dll, este método busca en AssemblyA.dll un recurso denominado NamespaceA.ControlA.bmp.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A&gt;</ph> method.</source>
          <target state="translated">En el siguiente ejemplo se muestra cómo se utiliza el método <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>If this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type specified by the type parameter.</source>
          <target state="translated">Si este objeto <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> aún no dispone de una imagen pequeña, este método busca un recurso de mapa de bits en el ensamblado que define el tipo especificado por el parámetro de tipo.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>For example, if you pass typeof(ControlA) to the type parameter, then this method searches the assembly that defines ControlA.</source>
          <target state="translated">Por ejemplo, si se pasa typeof(ControlA) al parámetro de tipo, este método busca en el ensamblado que define ControlA.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>Gets the small <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> pequeño asociado a este objeto <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>The small <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> pequeño asociado a este objeto <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type specified by the <ph id="ph1">`type`</ph> parameter.</source>
          <target state="translated">Este método busca un recurso denominado namespace.classname.bmp, donde el espacio de nombres es el espacio de nombres que contiene la definición del tipo especificado por el <ph id="ph1">`type`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>For example, suppose you pass typeof(ControlA) to the <ph id="ph1">`type`</ph> parameter.</source>
          <target state="translated">Por ejemplo, supongamos que se pasa typeof (controla) a la <ph id="ph1">`type`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.</source>
          <target state="translated">Si ControlA se encuentra en NamespaceA de AssemblyA.dll, este método busca en AssemblyA.dll un recurso denominado NamespaceA.ControlA.bmp.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>If this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type of the object specified by the component parameter.</source>
          <target state="translated">Si este objeto <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> aún no dispone de una imagen pequeña, este método busca un recurso de mapa de bits en el ensamblado que define el tipo del objeto especificado por el parámetro de componente.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>For example, if you pass an object of type ControlA to the component parameter, then this method searches the assembly that defines ControlA.</source>
          <target state="translated">Por ejemplo, si se pasa un objeto de tipo ControlA al parámetro de componente, este método busca en el ensamblado que define ControlA.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>Specifies whether this method returns a large image (<ph id="ph1">&lt;see langword="true" /&gt;</ph>) or a small image (<ph id="ph2">&lt;see langword="false" /&gt;</ph>).</source>
          <target state="translated">Especifica si este método devuelve una imagen grande (<ph id="ph1">&lt;see langword="true" /&gt;</ph>) o una imagen pequeña (<ph id="ph2">&lt;see langword="false" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>The small image is 16 by 16, and the large image is 32 by 32.</source>
          <target state="translated">La imagen pequeña es de 16 por 16 y la imagen grande es de 32 por 32.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>Gets the small or large <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> pequeño o grande asociado a este objeto <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> object associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">Un objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> asociado a este objeto <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type of the object specified by the <ph id="ph1">`component`</ph> parameter.</source>
          <target state="translated">Este método busca un recurso denominado namespace.classname.bmp, donde el espacio de nombres es el espacio de nombres que contiene la definición del tipo de objeto especificado por el <ph id="ph1">`component`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>For example, suppose you pass an object of type ControlA to the <ph id="ph1">`component`</ph> parameter.</source>
          <target state="translated">Por ejemplo, supongamos que se pasa un objeto de tipo ControlA a los <ph id="ph1">`component`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.</source>
          <target state="translated">Si ControlA se encuentra en NamespaceA de AssemblyA.dll, este método busca en AssemblyA.dll un recurso denominado NamespaceA.ControlA.bmp.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>If this <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> object does not already have a large image, this method creates a large image by scaling the small image.</source>
          <target state="translated">Si este <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> objeto no tiene todavía una imagen grande, este método crea una imagen grande ajustando la escala de la imagen pequeña.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>If this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type specified by the component type.</source>
          <target state="translated">Si este objeto <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> aún no dispone de una imagen pequeña, este método busca un recurso de mapa de bits en el ensamblado que define el tipo especificado por el tipo del componente.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>For example, if you pass typeof(ControlA) to the type parameter, then this method searches the assembly that defines ControlA.</source>
          <target state="translated">Por ejemplo, si se pasa typeof(ControlA) al parámetro de tipo, este método busca en el ensamblado que define ControlA.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>Specifies whether this method returns a large image (<ph id="ph1">&lt;see langword="true" /&gt;</ph>) or a small image (<ph id="ph2">&lt;see langword="false" /&gt;</ph>).</source>
          <target state="translated">Especifica si este método devuelve una imagen grande (<ph id="ph1">&lt;see langword="true" /&gt;</ph>) o una imagen pequeña (<ph id="ph2">&lt;see langword="false" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>The small image is 16 by 16, and the large image is 32 by 32.</source>
          <target state="translated">La imagen pequeña es de 16 por 16 y la imagen grande es de 32 por 32.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>Gets the small or large <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> pequeño o grande asociado a este objeto <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> asociado a este objeto <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type specified by the <ph id="ph1">`type`</ph> parameter.</source>
          <target state="translated">Este método busca un recurso denominado namespace.classname.bmp, donde el espacio de nombres es el espacio de nombres que contiene la definición del tipo especificado por el <ph id="ph1">`type`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>For example, suppose you pass an typeof(ControlA) to the <ph id="ph1">`type`</ph> parameter.</source>
          <target state="translated">Por ejemplo, supongamos que se pasa un typeof (controla) a la <ph id="ph1">`type`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.</source>
          <target state="translated">Si ControlA se encuentra en NamespaceA de AssemblyA.dll, este método busca en AssemblyA.dll un recurso denominado NamespaceA.ControlA.bmp.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>If this <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> object does not already have a large image, this method creates a large image by scaling the small image.</source>
          <target state="translated">Si este <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> objeto no tiene todavía una imagen grande, este método crea una imagen grande ajustando la escala de la imagen pequeña.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>If this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object does not already have a small image, this method searches for an embedded bitmap resource in the assembly that defines the type specified by the component type.</source>
          <target state="translated">Si este objeto <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> aún no dispone de una imagen pequeña, este método busca un recurso de mapa de bits incrustado en el ensamblado que define el tipo especificado por el tipo del componente.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>For example, if you pass typeof(ControlA) to the type parameter, then this method searches the assembly that defines ControlA.</source>
          <target state="translated">Por ejemplo, si se pasa typeof(ControlA) al parámetro de tipo, este método busca en el ensamblado que define ControlA.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>The name of the embedded bitmap resource.</source>
          <target state="translated">Nombre del recurso de mapa de bits incrustado.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>Specifies whether this method returns a large image (<ph id="ph1">&lt;see langword="true" /&gt;</ph>) or a small image (<ph id="ph2">&lt;see langword="false" /&gt;</ph>).</source>
          <target state="translated">Especifica si este método devuelve una imagen grande (<ph id="ph1">&lt;see langword="true" /&gt;</ph>) o una imagen pequeña (<ph id="ph2">&lt;see langword="false" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>The small image is 16 by 16, and the large image is 32 by 32.</source>
          <target state="translated">La imagen pequeña es de 16 por 16 y la imagen grande es de 32 por 32.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>Gets the small or large <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> pequeño o grande asociado a este objeto <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> asociado a este objeto <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>This method searches for a resource named namespace.imgName, where namespace is the namespace containing the definition of the type specified by the <ph id="ph1">`type`</ph> parameter.</source>
          <target state="translated">Este método busca un recurso denominado namespace.imgName, donde el espacio de nombres es el espacio de nombres que contiene la definición del tipo especificado por el <ph id="ph1">`type`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>For example, suppose you pass typeof(ControlA) to the <ph id="ph1">`type`</ph> parameter and that you passed "MyBitmap.bmp" to the imgName parameter.</source>
          <target state="translated">Por ejemplo, supongamos que se pasa typeof (controla) a la <ph id="ph1">`type`</ph> parámetro y que se pasó "MyBitmap.bmp" al parámetro imgName.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.MyBitmap.bmp.</source>
          <target state="translated">Si ControlA se encuentra en NamespaceA de AssemblyA.dll, este método busca en AssemblyA.dll un recurso denominado NamespaceA.MyBitmap.bmp.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>If this <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> object does not already have a large image, this method creates a large image by scaling the small image.</source>
          <target state="translated">Si este <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> objeto no tiene todavía una imagen grande, este método crea una imagen grande ajustando la escala de la imagen pequeña.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>This method searches for an embedded bitmap resource in the assembly that defines the type specified by the t parameter.</source>
          <target state="translated">Este método busca un recurso de mapa de bits incrustado en el ensamblado que define el tipo especificado por el parámetro t.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>For example, if you pass typeof(ControlA) to the t parameter, then this method searches the assembly that defines ControlA.</source>
          <target state="translated">Por ejemplo, si se pasa typeof(ControlA) al parámetro t, este método busca en el ensamblado que define ControlA.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>The name of the embedded bitmap resource.</source>
          <target state="translated">Nombre del recurso de mapa de bits incrustado.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>Specifies whether this method returns a large image (true)or a small image (false).</source>
          <target state="translated">Especifica si este método devuelve una imagen grande (true) o una imagen pequeña (false).</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>The small image is 16 by 16, and the large image is 32 x 32.</source>
          <target state="translated">La imagen pequeña es de 16 por 16 y la imagen grande es de 32 por 32.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> object based on a bitmap resource that is embedded in an assembly.</source>
          <target state="translated">Devuelve un objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> basado en un recurso de mapa de bits que se encuentra incrustado en un ensamblado.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> object based on the retrieved bitmap.</source>
          <target state="translated">Un objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> basado en el mapa de bits recuperado.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>This method searches for a resource named namespace.imgName, where namespace is the namespace containing the definition of the type specified by the <ph id="ph1">`t`</ph> parameter.</source>
          <target state="translated">Este método busca un recurso denominado namespace.imgName, donde el espacio de nombres es el espacio de nombres que contiene la definición del tipo especificado por el <ph id="ph1">`t`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>For example, suppose you pass typeof(ControlA) to the <ph id="ph1">`t`</ph> parameter and you pass "MyBitmap.bmp" to the imgName parameter.</source>
          <target state="translated">Por ejemplo, supongamos que se pasa typeof (controla) a la <ph id="ph1">`t`</ph> parámetro y se pasa "MyBitmap.bmp" al parámetro imgName.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.MyBitmap.bmp.</source>
          <target state="translated">Si ControlA se encuentra en NamespaceA de AssemblyA.dll, este método busca en AssemblyA.dll un recurso denominado NamespaceA.MyBitmap.bmp.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>This method is intended to retrieve a 16 x 16 bitmap resource that is embedded in an assembly.</source>
          <target state="translated">Este método está pensado para recuperar un recurso de mapa de bits de 16 x 16 que está incrustado en un ensamblado.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>However, there is no requirement that the embedded bitmap has a size of 16 x 16.</source>
          <target state="translated">Sin embargo, no hay ningún requisito de que el mapa de bits incrustado tiene un tamaño de 16 x 16.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>The bitmap that is retrieved from the assembly (no matter what size) is considered the small image.</source>
          <target state="translated">El mapa de bits que se recupera desde el ensamblado (con independencia del tamaño) se considera la imagen pequeña.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>The large image is created by scaling the "small" image to a size of 32 x 32.</source>
          <target state="translated">La imagen grande se crea ajustando la escala de la imagen "pequeña" a un tamaño de 32 x 32.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>So the large image will always be 32 by 32, regardless of the size of the bitmap retrieved from the assembly.</source>
          <target state="translated">Por lo que la imagen grande siempre será 32 por 32, independientemente del tamaño del mapa de bits recuperados desde el ensamblado.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>