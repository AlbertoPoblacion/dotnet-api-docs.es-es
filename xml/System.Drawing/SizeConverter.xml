<Type Name="SizeConverter" FullName="System.Drawing.SizeConverter">
  <TypeSignature Language="C#" Value="public class SizeConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SizeConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.SizeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class SizeConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SizeConverter : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="17a9e-101"><see cref="T:System.Drawing.SizeConverter" /> es una clase que se utiliza para convertir un tipo de datos en otro.</span><span class="sxs-lookup"><span data-stu-id="17a9e-101">The <see cref="T:System.Drawing.SizeConverter" /> class is used to convert from one data type to another.</span></span> <span data-ttu-id="17a9e-102">Obtenga acceso a esta clase mediante el objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="17a9e-102">Access this class through the <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SizeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.SizeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SizeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17a9e-103">Inicializa un nuevo objeto <see cref="T:System.Drawing.SizeConverter" />.</span><span class="sxs-lookup"><span data-stu-id="17a9e-103">Initializes a new <see cref="T:System.Drawing.SizeConverter" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.SizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="17a9e-104"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede usar para obtener información adicional del entorno desde el que se llama a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="17a9e-104">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to get additional information about the environment this converter is being called from.</span></span> <span data-ttu-id="17a9e-105">Puede ser <see langword="null" />, por lo que debe comprobarlo siempre.</span><span class="sxs-lookup"><span data-stu-id="17a9e-105">This may be <see langword="null" />, so you should always check.</span></span> <span data-ttu-id="17a9e-106">Además, las propiedades del objeto de contexto también pueden devolver <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17a9e-106">Also, properties on the context object may also return <see langword="null" />.</span></span></param>
        <param name="sourceType"><span data-ttu-id="17a9e-107">Tipo del que desea convertir.</span><span class="sxs-lookup"><span data-stu-id="17a9e-107">The type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="17a9e-108">Determina si este convertidor puede convertir un objeto del tipo de origen especificado al tipo nativo del convertidor.</span><span class="sxs-lookup"><span data-stu-id="17a9e-108">Determines whether this converter can convert an object in the specified source type to the native type of the converter.</span></span></summary>
        <returns><span data-ttu-id="17a9e-109">Este método devuelve <see langword="true" /> si este objeto puede llevar a cabo la conversión.</span><span class="sxs-lookup"><span data-stu-id="17a9e-109">This method returns <see langword="true" /> if this object can perform the conversion.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.SizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="17a9e-110"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede usar para obtener información adicional del entorno desde el que se llama a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="17a9e-110">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to get additional information about the environment this converter is being called from.</span></span> <span data-ttu-id="17a9e-111">Puede ser <see langword="null" />, por lo que debe comprobarse siempre.</span><span class="sxs-lookup"><span data-stu-id="17a9e-111">This can be <see langword="null" />, so always check.</span></span> <span data-ttu-id="17a9e-112">Asimismo, las propiedades del objeto de contexto pueden devolver <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17a9e-112">Also, properties on the context object can return <see langword="null" />.</span></span></param>
        <param name="destinationType"><span data-ttu-id="17a9e-113"><see cref="T:System.Type" /> que representa el tipo al que se quiere convertir.</span><span class="sxs-lookup"><span data-stu-id="17a9e-113">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span></span></param>
        <summary><span data-ttu-id="17a9e-114">Obtiene un valor que indica si este convertidor puede convertir un objeto al tipo de destino especificado usando el contexto.</span><span class="sxs-lookup"><span data-stu-id="17a9e-114">Gets a value indicating whether this converter can convert an object to the given destination type using the context.</span></span></summary>
        <returns><span data-ttu-id="17a9e-115">Este método devuelve <see langword="true" /> si este convertidor puede llevar a cabo la conversión; en caso contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="17a9e-115">This method returns <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17a9e-116">El parámetro `context` puede utilizarse para extraer información adicional acerca del entorno desde el que se está llamando a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="17a9e-116">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.SizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="17a9e-117"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede usar para obtener información adicional del entorno desde el que se llama a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="17a9e-117">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to get additional information about the environment this converter is being called from.</span></span> <span data-ttu-id="17a9e-118">Puede ser <see langword="null" />, por lo que debe comprobarlo siempre.</span><span class="sxs-lookup"><span data-stu-id="17a9e-118">This may be <see langword="null" />, so you should always check.</span></span> <span data-ttu-id="17a9e-119">Además, las propiedades del objeto de contexto también pueden devolver <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17a9e-119">Also, properties on the context object may also return <see langword="null" />.</span></span></param>
        <param name="culture"><span data-ttu-id="17a9e-120">Objeto <see cref="T:System.Globalization.CultureInfo" /> que contiene información específica de la referencia cultural, como el idioma, el calendario y las convenciones culturales asociadas a una referencia cultural específica.</span><span class="sxs-lookup"><span data-stu-id="17a9e-120">An <see cref="T:System.Globalization.CultureInfo" /> object that contains culture specific information, such as the language, calendar, and cultural conventions associated with a specific culture.</span></span> <span data-ttu-id="17a9e-121">Se basa en el estándar RFC 1766.</span><span class="sxs-lookup"><span data-stu-id="17a9e-121">It is based on the RFC 1766 standard.</span></span></param>
        <param name="value"><span data-ttu-id="17a9e-122">Objeto que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="17a9e-122">The object to convert.</span></span></param>
        <summary><span data-ttu-id="17a9e-123">Convierte el objeto especificado al tipo nativo del convertidor.</span><span class="sxs-lookup"><span data-stu-id="17a9e-123">Converts the specified object to the converter's native type.</span></span></summary>
        <returns><span data-ttu-id="17a9e-124">El objeto convertido.</span><span class="sxs-lookup"><span data-stu-id="17a9e-124">The converted object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17a9e-125">No se puede completar la conversión.</span><span class="sxs-lookup"><span data-stu-id="17a9e-125">The conversion cannot be completed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.SizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="17a9e-126"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede usar para obtener información adicional del entorno desde el que se llama a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="17a9e-126">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to get additional information about the environment this converter is being called from.</span></span> <span data-ttu-id="17a9e-127">Puede ser <see langword="null" />, por lo que debe comprobarlo siempre.</span><span class="sxs-lookup"><span data-stu-id="17a9e-127">This may be <see langword="null" />, so you should always check.</span></span> <span data-ttu-id="17a9e-128">Además, las propiedades del objeto de contexto también pueden devolver <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17a9e-128">Also, properties on the context object may also return <see langword="null" />.</span></span></param>
        <param name="culture"><span data-ttu-id="17a9e-129">Objeto <see cref="T:System.Globalization.CultureInfo" /> que contiene información específica de la referencia cultural, como el idioma, el calendario y las convenciones culturales asociadas a una referencia cultural específica.</span><span class="sxs-lookup"><span data-stu-id="17a9e-129">An <see cref="T:System.Globalization.CultureInfo" /> object that contains culture specific information, such as the language, calendar, and cultural conventions associated with a specific culture.</span></span> <span data-ttu-id="17a9e-130">Se basa en el estándar RFC 1766.</span><span class="sxs-lookup"><span data-stu-id="17a9e-130">It is based on the RFC 1766 standard.</span></span></param>
        <param name="value"><span data-ttu-id="17a9e-131">Objeto que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="17a9e-131">The object to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="17a9e-132">Tipo en el que se va a convertir el objeto.</span><span class="sxs-lookup"><span data-stu-id="17a9e-132">The type to convert the object to.</span></span></param>
        <summary><span data-ttu-id="17a9e-133">Convierte el objeto especificado en el tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="17a9e-133">Converts the specified object to the specified type.</span></span></summary>
        <returns><span data-ttu-id="17a9e-134">El objeto convertido.</span><span class="sxs-lookup"><span data-stu-id="17a9e-134">The converted object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17a9e-135">La conversión de tipos más comunes es hacia y desde un tipo de cadena.</span><span class="sxs-lookup"><span data-stu-id="17a9e-135">The most common type conversion is to and from a string type.</span></span> <span data-ttu-id="17a9e-136">La implementación predeterminada llama el <xref:System.Object.ToString%2A> método del objeto si el objeto es válido y si el tipo de destino es string.</span><span class="sxs-lookup"><span data-stu-id="17a9e-136">The default implementation calls the <xref:System.Object.ToString%2A> method of the object if the object is valid and if the destination type is string.</span></span> <span data-ttu-id="17a9e-137">Si este método no puede convertir el objeto especificado al tipo de destino, pasa un <xref:System.NotSupportedException> excepción.</span><span class="sxs-lookup"><span data-stu-id="17a9e-137">If this method cannot convert the specified object to the destination type, it passes a <xref:System.NotSupportedException> exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17a9e-138">No se puede completar la conversión.</span><span class="sxs-lookup"><span data-stu-id="17a9e-138">The conversion cannot be completed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public override object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.SizeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateInstance (context As ITypeDescriptorContext, propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ CreateInstance(System::ComponentModel::ITypeDescriptorContext ^ context, System::Collections::IDictionary ^ propertyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="17a9e-139"><see cref="T:System.ComponentModel.TypeDescriptor" /> mediante el cual se puede proporcionar contexto adicional.</span><span class="sxs-lookup"><span data-stu-id="17a9e-139">A <see cref="T:System.ComponentModel.TypeDescriptor" /> through which additional context can be provided.</span></span></param>
        <param name="propertyValues"><span data-ttu-id="17a9e-140">Diccionario de nuevos valores de propiedad.</span><span class="sxs-lookup"><span data-stu-id="17a9e-140">A dictionary of new property values.</span></span> <span data-ttu-id="17a9e-141">El diccionario tiene una serie de pares de nombre-valor, uno para cada propiedad devuelta desde el método <see cref="M:System.Drawing.SizeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />.</span><span class="sxs-lookup"><span data-stu-id="17a9e-141">The dictionary contains a series of name-value pairs, one for each property returned from the <see cref="M:System.Drawing.SizeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> method.</span></span></param>
        <summary><span data-ttu-id="17a9e-142">Crea un objeto de este tipo mediante un conjunto especificado de valores de propiedad para el objeto.</span><span class="sxs-lookup"><span data-stu-id="17a9e-142">Creates an object of this type by using a specified set of property values for the object.</span></span> <span data-ttu-id="17a9e-143">Resulta útil para crear objetos no modificables con propiedades modificables.</span><span class="sxs-lookup"><span data-stu-id="17a9e-143">This is useful for creating non-changeable objects that have changeable properties.</span></span></summary>
        <returns><span data-ttu-id="17a9e-144">El objeto recién creado o <see langword="null" /> si no se pudo crear el objeto.</span><span class="sxs-lookup"><span data-stu-id="17a9e-144">The newly created object, or <see langword="null" /> if the object could not be created.</span></span> <span data-ttu-id="17a9e-145">La implementación predeterminada devuelve <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17a9e-145">The default implementation returns <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public override bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.SizeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCreateInstanceSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetCreateInstanceSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="17a9e-146"><see cref="T:System.ComponentModel.TypeDescriptor" /> mediante el cual se puede proporcionar contexto adicional.</span><span class="sxs-lookup"><span data-stu-id="17a9e-146">A <see cref="T:System.ComponentModel.TypeDescriptor" /> through which additional context can be provided.</span></span></param>
        <summary><span data-ttu-id="17a9e-147">Determina si, al cambiar un valor en este objeto, es necesario llamar al método <see cref="M:System.Drawing.SizeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> para crear un nuevo valor.</span><span class="sxs-lookup"><span data-stu-id="17a9e-147">Determines whether changing a value on this object should require a call to the <see cref="M:System.Drawing.SizeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> method to create a new value.</span></span></summary>
        <returns>
          <span data-ttu-id="17a9e-148"><see langword="true" /> si debe llamarse al objeto <see cref="M:System.Drawing.SizeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> cuando se realiza un cambio en una o más propiedades de este objeto.</span><span class="sxs-lookup"><span data-stu-id="17a9e-148"><see langword="true" /> if the <see cref="M:System.Drawing.SizeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> object should be called when a change is made to one or more properties of this object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.SizeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="17a9e-149"><see cref="T:System.ComponentModel.TypeDescriptor" /> mediante el cual se puede proporcionar contexto adicional.</span><span class="sxs-lookup"><span data-stu-id="17a9e-149">A <see cref="T:System.ComponentModel.TypeDescriptor" /> through which additional context can be provided.</span></span></param>
        <param name="value"><span data-ttu-id="17a9e-150">Valor del objeto del que se van a obtener las propiedades.</span><span class="sxs-lookup"><span data-stu-id="17a9e-150">The value of the object to get the properties for.</span></span></param>
        <param name="attributes"><span data-ttu-id="17a9e-151">Una matriz de objetos <see cref="T:System.Attribute" /> que describen las propiedades.</span><span class="sxs-lookup"><span data-stu-id="17a9e-151">An array of <see cref="T:System.Attribute" /> objects that describe the properties.</span></span></param>
        <summary><span data-ttu-id="17a9e-152">Recupera el conjunto de propiedades de este tipo.</span><span class="sxs-lookup"><span data-stu-id="17a9e-152">Retrieves the set of properties for this type.</span></span> <span data-ttu-id="17a9e-153">De forma predeterminada, un tipo no tiene ninguna propiedad para devolver.</span><span class="sxs-lookup"><span data-stu-id="17a9e-153">By default, a type does not have any properties to return.</span></span></summary>
        <returns><span data-ttu-id="17a9e-154">Conjunto de propiedades que se deben exponer para este tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="17a9e-154">The set of properties that should be exposed for this data type.</span></span> <span data-ttu-id="17a9e-155">Si no se debe exponer ninguna propiedad, podría devolver <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17a9e-155">If no properties should be exposed, this may return <see langword="null" />.</span></span> <span data-ttu-id="17a9e-156">La implementación predeterminada siempre devuelve <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17a9e-156">The default implementation always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17a9e-157">Una implementación sencilla de este método puede llamar al método <xref:System.ComponentModel.TypeConverter.GetProperties%2A> para averiguar el tipo de datos correcto.</span><span class="sxs-lookup"><span data-stu-id="17a9e-157">An easy implementation of this method can call the <xref:System.ComponentModel.TypeConverter.GetProperties%2A> method for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.SizeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="17a9e-158"><see cref="T:System.ComponentModel.TypeDescriptor" /> mediante el cual se puede proporcionar contexto adicional.</span><span class="sxs-lookup"><span data-stu-id="17a9e-158">A <see cref="T:System.ComponentModel.TypeDescriptor" /> through which additional context can be provided.</span></span></param>
        <summary><span data-ttu-id="17a9e-159">Determina si este objeto admite propiedades.</span><span class="sxs-lookup"><span data-stu-id="17a9e-159">Determines whether this object supports properties.</span></span> <span data-ttu-id="17a9e-160">De forma predeterminada, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="17a9e-160">By default, this is <see langword="false" />.</span></span></summary>
        <returns>
          <span data-ttu-id="17a9e-161"><see langword="true" /> si se debe llamar al método <see cref="M:System.Drawing.SizeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> para buscar las propiedades de este objeto.</span><span class="sxs-lookup"><span data-stu-id="17a9e-161"><see langword="true" /> if the <see cref="M:System.Drawing.SizeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> method should be called to find the properties of this object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>