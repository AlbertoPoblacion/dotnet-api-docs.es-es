<Type Name="IntegrationExceptionEventArgs" FullName="System.Windows.Forms.Integration.IntegrationExceptionEventArgs">
  <TypeSignature Language="C#" Value="public class IntegrationExceptionEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IntegrationExceptionEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Integration.IntegrationExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class IntegrationExceptionEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class IntegrationExceptionEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>WindowsFormsIntegration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9d6df-101">Proporciona una clase base para las clases <see cref="T:System.EventArgs" /> que admiten que se inicien excepciones de manera opcional.</span><span class="sxs-lookup"><span data-stu-id="9d6df-101">Provides a base class for <see cref="T:System.EventArgs" /> classes which support optionally raising exceptions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d6df-102">La <xref:System.Windows.Forms.Integration.IntegrationExceptionEventArgs> clase permite al usuario obtener una vista previa de una excepción antes de que se genera.</span><span class="sxs-lookup"><span data-stu-id="9d6df-102">The <xref:System.Windows.Forms.Integration.IntegrationExceptionEventArgs> class enables the user to preview an exception before it is raised.</span></span>  
  
 <span data-ttu-id="9d6df-103">En el controlador de eventos, establezca el valor de la <xref:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.ThrowException%2A> propiedad `true` para indicar que se debe producir la excepción.</span><span class="sxs-lookup"><span data-stu-id="9d6df-103">In your event handler, set the value of the <xref:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.ThrowException%2A> property to `true` to indicate that the exception should be raised.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Integration.WindowsFormsHost" />
    <altmember cref="T:System.Windows.Forms.Integration.ElementHost" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegrationExceptionEventArgs (bool throwException, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool throwException, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.#ctor(System.Boolean,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntegrationExceptionEventArgs(bool throwException, Exception ^ exception);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="throwException" Type="System.Boolean" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="throwException">
          <span data-ttu-id="9d6df-104">Es <see langword="true" /> para iniciar el elemento <see cref="T:System.Exception" /> especificado por <c>exception</c>; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9d6df-104"><see langword="true" /> to raise the <see cref="T:System.Exception" /> specified by <c>exception</c>; otherwise, <see langword="false" />.</span></span></param>
        <param name="exception"><span data-ttu-id="9d6df-105"><see cref="T:System.Exception" /> que se va a iniciar.</span><span class="sxs-lookup"><span data-stu-id="9d6df-105">The <see cref="T:System.Exception" /> to raise.</span></span></param>
        <summary><span data-ttu-id="9d6df-106">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Integration.IntegrationExceptionEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="9d6df-106">Initializes a new instance of the <see cref="T:System.Windows.Forms.Integration.IntegrationExceptionEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9d6df-107"><paramref name="exception" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9d6df-107"><paramref name="exception" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.Integration.WindowsFormsHost" />
        <altmember cref="T:System.Windows.Forms.Integration.ElementHost" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d6df-108">Obtiene el objeto <see cref="T:System.Exception" /> asociado a <see cref="T:System.Windows.Forms.Integration.IntegrationExceptionEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="9d6df-108">Gets the <see cref="T:System.Exception" /> associated with this <see cref="T:System.Windows.Forms.Integration.IntegrationExceptionEventArgs" />.</span></span></summary>
        <value><span data-ttu-id="9d6df-109"><see cref="T:System.Exception" /> asociada a esta <see cref="T:System.Windows.Forms.Integration.IntegrationExceptionEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="9d6df-109">The <see cref="T:System.Exception" /> associated with this <see cref="T:System.Windows.Forms.Integration.IntegrationExceptionEventArgs" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.Integration.WindowsFormsHost" />
        <altmember cref="T:System.Windows.Forms.Integration.ElementHost" />
      </Docs>
    </Member>
    <Member MemberName="ThrowException">
      <MemberSignature Language="C#" Value="public bool ThrowException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThrowException" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.ThrowException" />
      <MemberSignature Language="VB.NET" Value="Public Property ThrowException As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ThrowException { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d6df-110">Obtiene o establece un valor que indica si debe iniciarse la <see cref="T:System.Exception" /> especificada por la propiedad <see cref="P:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.Exception" />.</span><span class="sxs-lookup"><span data-stu-id="9d6df-110">Gets or sets a value indicating whether to raise the <see cref="T:System.Exception" /> specified by the <see cref="P:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.Exception" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="9d6df-111">Es <see langword="true" /> si se va a iniciar <see cref="P:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.Exception" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9d6df-111"><see langword="true" /> if <see cref="P:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.Exception" /> will be raised; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="9d6df-112">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9d6df-112">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d6df-113">En el controlador de eventos, establezca el valor de la <xref:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.ThrowException%2A> propiedad `true` para indicar que se debe producir la excepción.</span><span class="sxs-lookup"><span data-stu-id="9d6df-113">In your event handler, set the value of the <xref:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.ThrowException%2A> property to `true` to indicate that the exception should be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Integration.WindowsFormsHost" />
        <altmember cref="T:System.Windows.Forms.Integration.ElementHost" />
      </Docs>
    </Member>
  </Members>
</Type>