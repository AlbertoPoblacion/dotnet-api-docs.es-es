<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DefaultTraceListener.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e581445bf8b73278f54dd2d25bd773d01ccd85e1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e581445bf8b73278f54dd2d25bd773d01ccd85e1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>Provides the default output methods and behavior for tracing.</source>
          <target state="translated">Proporciona los métodos de salida predeterminados y el comportamiento para el seguimiento.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>An instance of this class is automatically added to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collections.</source>
          <target state="translated">Una instancia de esta clase se agrega automáticamente a la <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType&gt;</ph> y <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> colecciones.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>Explicitly adding a second <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> causes duplicate messages in the debugger output window and duplicate message boxes for asserts.</source>
          <target state="translated">Agregar explícitamente un segundo <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> causas duplicar mensajes en la ventana de salida del depurador y los cuadros de mensajes duplicados para las aserciones.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A&gt;</ph> methods emit the message to the Win32 <ph id="ph3">`OutputDebugString`</ph> function and to the <ph id="ph4">&lt;xref:System.Diagnostics.Debugger.Log%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">De forma predeterminada, el <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A&gt;</ph> métodos envían el mensaje a Win32 <ph id="ph3">`OutputDebugString`</ph> función y a la <ph id="ph4">&lt;xref:System.Diagnostics.Debugger.Log%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>For information about the <ph id="ph1">`OutputDebugString`</ph> function, see the Platform SDK or MSDN.</source>
          <target state="translated">Para obtener información sobre la <ph id="ph1">`OutputDebugString`</ph> función, vea Platform SDK o en MSDN.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%2A&gt;</ph> method, by default, displays a message box when the application is running in a user interface mode; it also emits the message using <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%2A&gt;</ph> método, de forma predeterminada, muestra un cuadro de mensaje cuando la aplicación se ejecuta en un modo de interfaz de usuario; también envía el mensaje mediante <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The display of the message box for <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> method calls depends on the presence of the <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">La presentación del cuadro de mensaje para <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> llamadas al método depende de la presencia de la <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> no está en el <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> no se muestra la colección, el cuadro de mensaje.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>clear&gt; element<ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, by the <bpt id="p2">[</bpt><ph id="ph3">\&lt;</ph>remove&gt; element<ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph4">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph5">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph6">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> se puede quitar el <bpt id="p1">[</bpt> <ph id="ph2">\&lt;</ph>borrar &gt; elemento<ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, por el <bpt id="p2">[</bpt> <ph id="ph3">\&lt;</ph>quitar &gt; elemento<ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, o mediante una llamada a la <ph id="ph4">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> método en el <ph id="ph5">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> propiedad (<ph id="ph6">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>You must enable tracing or debugging to use a trace listener.</source>
          <target state="translated">Debe habilitar el seguimiento o la depuración para utilizar un agente de escucha de seguimiento.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The following syntax is compiler specific.</source>
          <target state="translated">La sintaxis siguiente es específica del compilador.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</source>
          <target state="translated">Si utiliza compiladores que no sean de C# o Visual Basic, consulte la documentación del compilador.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>To enable debugging in C#, add the <ph id="ph1">`/d:DEBUG`</ph> flag to the compiler command line when you compile your code, or add <ph id="ph2">`#define DEBUG`</ph> to the top of your file.</source>
          <target state="translated">Para habilitar la depuración en C#, agregue el <ph id="ph1">`/d:DEBUG`</ph> marca a la línea de comandos del compilador al compilar el código, o agregue <ph id="ph2">`#define DEBUG`</ph> a la parte superior del archivo.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>In Visual Basic, add the <ph id="ph1">`/d:DEBUG=True`</ph> flag to the compiler command line.</source>
          <target state="translated">En Visual Basic, agregue el <ph id="ph1">`/d:DEBUG=True`</ph> marca a la línea de comandos del compilador.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>To enable tracing in C#, add the <ph id="ph1">`/d:TRACE`</ph> flag to the compiler command line when you compile your code, or add <ph id="ph2">`#define TRACE`</ph> to the top of your file.</source>
          <target state="translated">Para habilitar el seguimiento en C#, agregue el <ph id="ph1">`/d:TRACE`</ph> marca a la línea de comandos del compilador al compilar el código, o agregue <ph id="ph2">`#define TRACE`</ph> a la parte superior del archivo.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>In Visual Basic, add the <ph id="ph1">`/d:TRACE=True`</ph> flag to the compiler command line.</source>
          <target state="translated">En Visual Basic, agregue el <ph id="ph1">`/d:TRACE=True`</ph> marca a la línea de comandos del compilador.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>To add a trace listener, edit the configuration file that corresponds to the name of your application.</source>
          <target state="translated">Para agregar un agente de escucha de seguimiento, edite el archivo de configuración que se corresponde con el nombre de la aplicación.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</source>
          <target state="translated">Dentro de este archivo, puede agregar un agente de escucha, establezca su tipo y establecer sus parámetros, quitar un agente de escucha o borrar todos los agentes de escucha previamente establecidos por la aplicación.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The configuration file should be formatted similar to the following example:</source>
          <target state="translated">El archivo de configuración debe tener el formato similar al ejemplo siguiente:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The following code example calculates binomial coefficients, which are values used in probability and statistics.</source>
          <target state="translated">En el ejemplo de código siguiente se calcula binomial coeficientes, que son los valores utilizados en probabilidad y estadísticas.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>This example uses a <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> to trace results and log errors.</source>
          <target state="translated">Este ejemplo se utiliza un <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> resultados de seguimiento y registro de errores.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>It creates a new <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>, adds it to the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collection, and sets the <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A&gt;</ph> property to the log file specified in the command-line arguments.</source>
          <target state="translated">Crea un nuevo <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>, lo agrega a la <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> colección y establece el <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A&gt;</ph> propiedad al archivo de registro especificado en los argumentos de línea de comandos.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>If an error is detected while processing the input parameter, or if the <ph id="ph1">`CalcBinomial`</ph> function throws an exception, the <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%2A&gt;</ph> method logs and displays an error message.</source>
          <target state="translated">Si se detecta un error al procesar el parámetro de entrada, o si la <ph id="ph1">`CalcBinomial`</ph> función produce una excepción, el <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%2A&gt;</ph> método registra y muestra un mensaje de error.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, the error message is also written to the console.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A&gt;</ph> propiedad es <ph id="ph2">`false`</ph>, el mensaje de error también se escribe en la consola.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>When the result is calculated successfully, the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29&gt;</ph> methods write the results to the log file.</source>
          <target state="translated">Cuando el resultado se calcula correctamente, el <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29&gt;</ph> y <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29&gt;</ph> métodos escriben los resultados en el archivo de registro.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A&gt;</ph> methods cause trace information to be written only to the <ph id="ph4">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%2A&gt;</ph>, y <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A&gt;</ph> métodos producen información de seguimiento que se escribirá únicamente a la <ph id="ph4">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>To write trace information to all listeners in the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collection, use the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Fail%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Write%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Diagnostics.Trace.WriteLine%2A&gt;</ph> methods of the <ph id="ph5">&lt;xref:System.Diagnostics.Trace&gt;</ph> class.</source>
          <target state="translated">Para escribir información de seguimiento en todos los agentes de escucha de la <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> colección, utilice el <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Fail%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Write%2A&gt;</ph>, y <ph id="ph4">&lt;xref:System.Diagnostics.Trace.WriteLine%2A&gt;</ph> métodos de la <ph id="ph5">&lt;xref:System.Diagnostics.Trace&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>This class is thread safe.</source>
          <target state="translated">Esta clase es segura para subprocesos.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.DefaultTraceListener" /&gt;</ph> class with "Default" as its <ph id="ph2">&lt;see cref="P:System.Diagnostics.TraceListener.Name" /&gt;</ph> property value.</source>
          <target state="translated">Inicializa una instancia nueva de la clase <ph id="ph1">&lt;see cref="T:System.Diagnostics.DefaultTraceListener" /&gt;</ph> con la propiedad <ph id="ph2">&lt;see cref="P:System.Diagnostics.TraceListener.Name" /&gt;</ph> establecida en el valor predeterminado ("Default").</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.#ctor">
          <source>The following code example removes the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> provided by the application from the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collection and then creates a new <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> and adds it to the <ph id="ph4">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collection.</source>
          <target state="translated">El siguiente código en el ejemplo se quita el <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> proporcionada por la aplicación desde el <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> colección y, a continuación, crea un nuevo <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> y lo agrega a la <ph id="ph4">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> colección.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled">
          <source>Gets or sets a value indicating whether the application is running in user-interface mode.</source>
          <target state="translated">Obtiene o establece un valor que indica si la aplicación está funcionando en modo de interfaz de usuario.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if user-interface mode is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si se ha habilitado el modo de interfaz de usuario; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled">
          <source>The following code example calls a function that calls the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29&gt;</ph> method to log an error message if the function throws an exception.</source>
          <target state="translated">En el ejemplo de código siguiente se llama a una función que llama el <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29&gt;</ph> método para registrar un mensaje de error si la función produce una excepción.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, the method also writes the error message to the console.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A&gt;</ph> propiedad es <ph id="ph2">`false`</ph>, el método también escribe el mensaje de error en la consola.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>Emits or displays a message and a stack trace for an assertion that always fails.</source>
          <target state="translated">Emite o muestra un mensaje y un seguimiento de pila para una aserción que produce siempre un error.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)">
          <source>The message to emit or display.</source>
          <target state="translated">Mensaje que se emite o que se muestra.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)">
          <source>Emits or displays a message and a stack trace for an assertion that always fails.</source>
          <target state="translated">Emite o muestra un mensaje y un seguimiento de pila para una aserción que produce siempre un error.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)">
          <source>By default, this method sends the <ph id="ph1">`message`</ph> parameter and a stack trace to a message box (when the application runs in user-interface mode) and to the <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> instance.</source>
          <target state="translated">De forma predeterminada, este método envía el <ph id="ph1">`message`</ph> parámetro y un seguimiento de pila a un cuadro de mensaje (cuando la aplicación se ejecuta en modo de interfaz de usuario) y a la <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)">
          <source>The following code example writes an error message to a <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> using the <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%29&gt;</ph> method.</source>
          <target state="translated">En el ejemplo de código siguiente se escribe un mensaje de error para un <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> mediante el <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%29&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)">
          <source>The method also writes the message to the console if a user interface is not available.</source>
          <target state="translated">El método también escribe el mensaje en la consola si una interfaz de usuario no está disponible.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
          <source>The message to emit or display.</source>
          <target state="translated">Mensaje que se emite o que se muestra.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
          <source>The detailed message to emit or display.</source>
          <target state="translated">Mensaje detallado que se emite o muestra.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
          <source>Emits or displays detailed messages and a stack trace for an assertion that always fails.</source>
          <target state="translated">Emite o muestra mensajes detallados y un rastro de pila para una aserción que produce siempre un error.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
          <source>By default, this method sends the <ph id="ph1">`message`</ph> parameter, the <ph id="ph2">`detailMessage`</ph> parameter, and a stack trace to a message box (when the application runs in user-interface mode) and to the <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> instance.</source>
          <target state="translated">De forma predeterminada, este método envía el <ph id="ph1">`message`</ph> parámetro, el <ph id="ph2">`detailMessage`</ph> parámetro y un seguimiento de pila a un cuadro de mensaje (cuando la aplicación se ejecuta en modo de interfaz de usuario) y a la <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
          <source>The following code example calls a function that calls the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29&gt;</ph> method to log a detailed error message if the function throws an exception.</source>
          <target state="translated">En el ejemplo de código siguiente se llama a una función que llama el <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29&gt;</ph> método para registrar un mensaje de error detallado si la función produce una excepción.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
          <source>The method writes the message to the console if a user interface is not available.</source>
          <target state="translated">El método escribe el mensaje en la consola si una interfaz de usuario no está disponible.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.DefaultTraceListener.LogFileName">
          <source>Gets or sets the name of a log file to write trace or debug messages to.</source>
          <target state="translated">Obtiene o establece el nombre de un archivo de registro que contiene mensajes de seguimiento o de depuración.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DefaultTraceListener.LogFileName">
          <source>The name of a log file to write trace or debug messages to.</source>
          <target state="translated">Nombre del archivo de registro que contiene mensajes de seguimiento o de depuración.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DefaultTraceListener.LogFileName">
          <source>The following code example creates a new <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>, adds it to the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collection, and sets the <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A&gt;</ph> property to the log file specified in the command-line arguments.</source>
          <target state="translated">En el ejemplo de código siguiente se crea un nuevo <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>, lo agrega a la <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> colección y establece el <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A&gt;</ph> propiedad al archivo de registro especificado en los argumentos de línea de comandos.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Write(System.String)">
          <source>The message to write to <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph>.</source>
          <target state="translated">Mensaje que se debe escribir en <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> y <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Write(System.String)">
          <source>Writes the output to the <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> function and to the <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph> method.</source>
          <target state="translated">Escribe el resultado en la función <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> y en el método <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Write(System.String)">
          <source>For information about the Win32 <ph id="ph1">`OutputDebugString`</ph> debugging function, see "OutputDebugString" in the Platform SDK or MSDN.</source>
          <target state="translated">Para obtener información acerca de Win32 <ph id="ph1">`OutputDebugString`</ph> depuración de función, vea "OutputDebugString" en Platform SDK o en MSDN.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Write(System.String)">
          <source>The following code example formats the results of a function and uses the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29&gt;</ph> method to write the first part of the message to a <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">En el ejemplo de código siguiente se da formato al resultado de una función y utiliza el <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29&gt;</ph> método para escribir la primera parte del mensaje para un <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
          <source>The message to write to <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph>.</source>
          <target state="translated">Mensaje que se debe escribir en <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> y <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
          <source>Writes the output to the <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> function and to the <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph> method, followed by a carriage return and line feed (\r\n).</source>
          <target state="translated">Escribe el resultado en la función <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> y en el método <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph>, seguido de un retorno de carro y un salto de línea (\r\n).</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
          <source>The default line terminator is a carriage return followed by a line feed (\r\n).</source>
          <target state="translated">El terminador de línea predeterminado corresponde a un retorno de carro seguido de un avance de línea (\r\n).</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
          <source>For information about the Win32 <ph id="ph1">`OutputDebugString`</ph> debugging function, see the Platform SDK or MSDN.</source>
          <target state="translated">Para obtener información acerca de Win32 <ph id="ph1">`OutputDebugString`</ph> depuración de función, vea Platform SDK o en MSDN.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
          <source>This method sets the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Este método establece la <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph> propiedad <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
          <source>The following code example formats the results of a function and uses the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29&gt;</ph> method to write the last part of the message to a <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">En el ejemplo de código siguiente se da formato al resultado de una función y utiliza el <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29&gt;</ph> método para escribir la última parte del mensaje para un <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>