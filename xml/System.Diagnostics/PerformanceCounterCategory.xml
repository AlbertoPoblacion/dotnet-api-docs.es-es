<Type Name="PerformanceCounterCategory" FullName="System.Diagnostics.PerformanceCounterCategory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c10e021f3bc6a9bc13de41a4d642c4df4484e6db" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39795339" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PerformanceCounterCategory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PerformanceCounterCategory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.PerformanceCounterCategory" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PerformanceCounterCategory" />
  <TypeSignature Language="C++ CLI" Value="public ref class PerformanceCounterCategory sealed" />
  <TypeSignature Language="F#" Value="type PerformanceCounterCategory = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa un objeto de rendimiento que define una categoría de contadores de rendimiento.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Creación o eliminación de un contador de rendimiento requiere la sincronización del código subyacente mediante el uso de una exclusión mutua con nombre. Si una aplicación con muchos privilegios bloquea la exclusión mutua con nombre, intenta crear o eliminar un contador de rendimiento hace que la aplicación deje de responder hasta que se libere el bloqueo. Para evitar este problema, no conceder nunca <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> permiso al código de confianza. Además, <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> permiso potencialmente permite omitir otros permisos y solo debe concederse al código de plena confianza.  
  
 El <xref:System.Diagnostics.PerformanceCounterCategory> la instancia <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> propiedad se muestra en el campo de objeto de rendimiento del cuadro de diálogo Agregar contadores de la aplicación Visor de rendimiento.  
  
 La <xref:System.Diagnostics.PerformanceCounterCategory> clase proporciona varios métodos para interactuar con contadores y categorías en el equipo. El <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> métodos le permiten definir categorías personalizadas. El <xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> método proporciona una manera de quitar las categorías del equipo. El <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> método le permite ver la lista de categorías, mientras que <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A> recupera todos los datos de contador e instancia de asociada con una única categoría.  
  
 Un contador de rendimiento publica los datos de rendimiento acerca de una aplicación. Las categorías incluyen los componentes físicos (como procesadores, discos y memoria) y los objetos del sistema (por ejemplo, procesos y subprocesos). Contadores del sistema que están relacionados con el mismo objeto de rendimiento se agrupan en una categoría que indica su enfoque común. Cuando se crea una instancia de la <xref:System.Diagnostics.PerformanceCounter> (clase), primero debe indicarse la categoría con el que interactuará el componente y, a continuación, elija un contador de dicha categoría.  
  
 Por ejemplo, una categoría de contador de Windows es la categoría de memoria. Contadores del sistema de esta categoría de seguimiento de los datos de memoria como el número de bytes disponibles y el número de bytes almacenados en caché. Si desea trabajar con los bytes almacenados en caché en la aplicación, debe crear una instancia de la <xref:System.Diagnostics.PerformanceCounter> componente, conectarla a la categoría de memoria y, a continuación, elegir el contador adecuado (en este caso, los Bytes almacenados en caché) de esa categoría.  
  
 Aunque el sistema realiza muchas más categorías de contador disponibles, las categorías que probablemente interactuará con más frecuencia son las categorías de la memoria caché, memoria, objetos, DiscoFísico, proceso, procesador, servidor, del sistema y subproceso.  
  
> [!IMPORTANT]
>  El <xref:System.Diagnostics.PerformanceCounter.RemoveInstance%2A> método en el <xref:System.Diagnostics.PerformanceCounter> clase lanzará el contador y, si se selecciona la opción de volver a utilizar para esa categoría, se volverá a la instancia del contador. Esto podría causar una condición de carrera si otro proceso o incluso otra parte del código está intentando escribir en la instancia del contador.  
  
> [!NOTE]
>  Se recomienda encarecidamente que se crean nuevas categorías de contador de rendimiento durante la instalación de la aplicación, no durante la ejecución de la aplicación. Esto permite que el tiempo para el sistema operativo actualizar su lista de categorías de contador de rendimiento registrados. Si no se ha actualizado la lista, se producirá un error al intentar utilizar la categoría.  
  
> [!NOTE]
>  Categorías de contador de rendimiento instaladas con el [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] usar memoria compartida independiente, con cada categoría de contador de rendimiento tiene su propia memoria. Puede especificar el tamaño de memoria compartida independiente mediante la creación de un valor DWORD denominado FileMappingSize en la clave del Registro HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\*\<nombre de categoría >* \ Rendimiento. El valor de FileMappingSize se establece en el tamaño de memoria compartida de la categoría. El tamaño predeterminado es decimal 131072. Si el valor de FileMappingSize no está presente, el `fileMappingSize` valor del atributo para el `performanceCounters` se utiliza el elemento especificado en el archivo Machine.config, provocando una sobrecarga adicional para el procesamiento del archivo de configuración. Puede apreciar una mejora del rendimiento de inicio de la aplicación estableciendo el tamaño de asignación de archivo en el registro. Para obtener más información sobre el tamaño de asignación de archivo, consulte [ &lt;performanceCounters&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/performancecounters-element.md).  
  
   
  
## Examples  
 El ejemplo de código siguiente determina si un <xref:System.Diagnostics.PerformanceCounter> y su <xref:System.Diagnostics.PerformanceCounterCategory> existe en el equipo local o en otro equipo. Si estos objetos no existen en el equipo local, en el ejemplo, opcionalmente, crearlos. Usa el <xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A> método para determinar si el <xref:System.Diagnostics.PerformanceCounterCategory> existe.  Si el <xref:System.Diagnostics.PerformanceCounterCategory> no existe y se especifica ningún nombre de contador o si el equipo es un equipo remoto, se cierra el ejemplo.  
  
 Si un <xref:System.Diagnostics.PerformanceCounter> se proporciona el nombre, el ejemplo se usa el <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> método y muestra el resultado al usuario. Si el <xref:System.Diagnostics.PerformanceCounter> no existe, el usuario puede eliminar y volver a crear la <xref:System.Diagnostics.PerformanceCounterCategory> con el nuevo <xref:System.Diagnostics.PerformanceCounter>. Si lo hace, la categoría se elimina mediante el <xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> método.  
  
 Si se solicita, en el ejemplo se crea ahora el nuevo <xref:System.Diagnostics.PerformanceCounterCategory> y <xref:System.Diagnostics.PerformanceCounter> utilizando el <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> método. Si se especifica un nombre de instancia, el ejemplo se usa el <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> método y muestra el resultado.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.Class#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.Class/CS/perfcountercatcreateexist.cs#27)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.Class#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.Class/VB/perfcountercatcreateexist.vb#27)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.PerformanceCounter" />
    <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
    <altmember cref="T:System.Diagnostics.CounterSample" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.PerformanceCounterCategory" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounterCategory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounterCategory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, deja la propiedad <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> vacía y establece la propiedad <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> en el equipo local.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> propiedad debe establecerse antes de asociar esta <xref:System.Diagnostics.PerformanceCounterCategory> instancia con un objeto de rendimiento en el servidor. De lo contrario, se inicia una excepción.  
  
   
  
## Examples  
 El ejemplo de código siguiente acepta una <xref:System.Diagnostics.PerformanceCounterCategory> nombre y un nombre de equipo desde la línea de comandos.  Crea un <xref:System.Diagnostics.PerformanceCounterCategory> mediante la sobrecarga del constructor adecuada para el número de parámetros proporcionados, a continuación, se muestran sus propiedades.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatctor.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatctor.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para leer las categorías de contador de rendimiento. Enumeración asociada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounterCategory (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounterCategory(System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounterCategory : string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="new System.Diagnostics.PerformanceCounterCategory categoryName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nombre de la categoría de contador de rendimiento u objeto de rendimiento al que se va a asociar esta instancia de <see cref="T:System.Diagnostics.PerformanceCounterCategory" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, establece la propiedad <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> en el valor especificado y establece la propiedad <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> en el equipo local.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo de código siguiente acepta una <xref:System.Diagnostics.PerformanceCounterCategory> nombre y un nombre de equipo desde la línea de comandos. Crea un <xref:System.Diagnostics.PerformanceCounterCategory> mediante la sobrecarga del constructor que sea adecuada para el número de parámetros proporcionados, a continuación, se muestran sus propiedades.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatctor.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatctor.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> es una cadena vacía ("").</exception>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="categoryName" /> es <see langword="null" />.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para leer información de categoría, como el nombre de categoría. Enumeración asociada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounterCategory (string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounterCategory(System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounterCategory : string * string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="new System.Diagnostics.PerformanceCounterCategory (categoryName, machineName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nombre de la categoría de contador de rendimiento u objeto de rendimiento al que se va a asociar esta instancia de <see cref="T:System.Diagnostics.PerformanceCounterCategory" />.</param>
        <param name="machineName">Equipo en el que residen la categoría del contador de rendimiento y los contadores asociados.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> y establece las propiedades <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> y <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> en los valores especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo de código siguiente acepta una <xref:System.Diagnostics.PerformanceCounterCategory> nombre y un nombre de equipo desde la línea de comandos. Crea un <xref:System.Diagnostics.PerformanceCounterCategory> mediante la sobrecarga del constructor que sea adecuada para el número de parámetros proporcionados, a continuación, se muestran sus propiedades.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatctor.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatctor.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> es una cadena vacía ("").  
  
O bien 
La sintaxis de <paramref name="machineName" /> no es válida.</exception>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="categoryName" /> es <see langword="null" />.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para leer la información de categoría, como el nombre de equipo y de categoría. Enumeración asociada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CategoryHelp">
      <MemberSignature Language="C#" Value="public string CategoryHelp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryHelp" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.CategoryHelp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CategoryHelp As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryHelp { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CategoryHelp : string" Usage="System.Diagnostics.PerformanceCounterCategory.CategoryHelp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el texto de ayuda de la categoría.</summary>
        <value>Descripción del objeto de rendimiento que esta categoría mide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se crea un <xref:System.Diagnostics.PerformanceCounterCategory> con el <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor>. Pide al usuario el <xref:System.Diagnostics.PerformanceCounterCategory> y nombres de equipo, a continuación, Establece el <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> y <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> propiedades de los valores introducidos. A continuación, muestra los valores de la <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>, y <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> propiedades o se muestra un mensaje de error si el <xref:System.Diagnostics.PerformanceCounterCategory> no es accesible.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatProps.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatprops.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> es <see langword="null" />. Es necesario establecer el nombre de la categoría antes de obtener la ayuda de la categoría.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.CounterHelp" />
      </Docs>
    </Member>
    <Member MemberName="CategoryName">
      <MemberSignature Language="C#" Value="public string CategoryName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryName : string with get, set" Usage="System.Diagnostics.PerformanceCounterCategory.CategoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del objeto de rendimiento que define esta categoría.</summary>
        <value>Nombre de la categoría de contador de rendimiento u objeto de rendimiento al que se va a asociar esta instancia de <see cref="T:System.Diagnostics.PerformanceCounterCategory" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se crea un <xref:System.Diagnostics.PerformanceCounterCategory> con el <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor>. Pide al usuario el <xref:System.Diagnostics.PerformanceCounterCategory> y nombres de equipo, a continuación, Establece el <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> y <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> propiedades de los valores introducidos. A continuación, muestra los valores de la <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>, y <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> propiedades o se muestra un mensaje de error si el <xref:System.Diagnostics.PerformanceCounterCategory> no es accesible.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatProps.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatprops.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> es una cadena vacía ("").</exception>
        <exception cref="T:System.ArgumentNullException">El valor de <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> es <see langword="null" />.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para leer las categorías de contador de rendimiento. Enumeración asociada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CategoryType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounterCategoryType CategoryType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.PerformanceCounterCategoryType CategoryType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.CategoryType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CategoryType As PerformanceCounterCategoryType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::PerformanceCounterCategoryType CategoryType { System::Diagnostics::PerformanceCounterCategoryType get(); };" />
      <MemberSignature Language="F#" Value="member this.CategoryType : System.Diagnostics.PerformanceCounterCategoryType" Usage="System.Diagnostics.PerformanceCounterCategory.CategoryType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategoryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tipo de categoría de contador de rendimiento.</summary>
        <value>Uno de los valores de <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Diagnostics.PerformanceCounterCategory.CategoryType%2A> propiedad indica si el <xref:System.Diagnostics.PerformanceCounterCategory> objeto puede tener varias instancias. Los valores posibles son <xref:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance>, <xref:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance>, o <xref:System.Diagnostics.PerformanceCounterCategoryType.Unknown>.  
  
 Hay dos tipos de categorías de contador de rendimiento: instancia única y varias instancias. De forma predeterminada, una categoría es de instancia única cuando se crea y se convierte en varias instancias cuando se agrega otra instancia. Las categorías se crean cuando se configura una aplicación, y se agregan instancias en tiempo de ejecución. En las versiones 1.0 y 1.1 de .NET Framework, no es necesario saber si una categoría de contador de rendimiento es de varias instancias o de instancia única. En el [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], el <xref:System.Diagnostics.PerformanceCounterCategoryType> enumeración se utiliza para indicar si un contador de rendimiento puede tener varias instancias.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CounterExists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina si un contador especificado está registrado en una categoría en particular.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CounterExists">
      <MemberSignature Language="C#" Value="public bool CounterExists (string counterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CounterExists(string counterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CounterExists (counterName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CounterExists(System::String ^ counterName);" />
      <MemberSignature Language="F#" Value="member this.CounterExists : string -&gt; bool" Usage="performanceCounterCategory.CounterExists counterName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">Nombre del contador de rendimiento que se va a buscar.</param>
        <summary>Determina si el contador especificado está registrado en esta categoría; esta información se indica mediante las propiedades <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> y <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />.</summary>
        <returns>Es <see langword="true" /> si el contador está registrado en la categoría especificada por las propiedades <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> y <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Debe establecer el <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> propiedad antes de llamar a este método. De lo contrario, se inicia una excepción.  
  
 Si no ha establecido la <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> propiedad, este método utiliza el equipo local (".").  
  
> [!NOTE]
>  Para leer los contadores de rendimiento en Windows Vista y versiones posteriores, Windows XP Professional x64 Edition o Windows Server 2003, debe ser miembro del grupo usuarios del Monitor de rendimiento o tener privilegios administrativos.  
>   
>  Para evitar tener que elevar sus privilegios para tener acceso a los contadores de rendimiento en Windows Vista y versiones posteriores, agréguese al grupo usuarios del Monitor de rendimiento.  
>   
>  En Windows Vista y versiones posteriores, el Control de cuentas de usuario (UAC) determina los privilegios de un usuario. Si es miembro del grupo Administradores integrados, se le asignarán dos símbolos (tokens) de acceso en tiempo de ejecución: un símbolo (token) de acceso de usuario estándar y un símbolo (token) de acceso de administrador. De forma predeterminada, se le asignará el rol de usuario estándar. Para ejecutar el código que tiene acceso a los contadores de rendimiento, primero debe elevar sus privilegios de usuario estándar a administrador. Para ello, inicie una aplicación haciendo clic con el botón derecho en el icono de la aplicación e indique que desea ejecutarla como administrador.  
  
   
  
## Examples  
 El ejemplo de código siguiente determina si un <xref:System.Diagnostics.PerformanceCounter> existe. Obtiene un nombre de categoría, el nombre del contador y el nombre del equipo desde la línea de comandos, si se han proporcionado. Crea un <xref:System.Diagnostics.PerformanceCounterCategory> objeto mediante el correspondiente <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor%2A>. A continuación, usa el <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%28System.String%29> método para determinar si especificado <xref:System.Diagnostics.PerformanceCounter> existe y se informa al usuario.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatobjexists.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatobjcountexists.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="counterName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">No se ha establecido el valor de la propiedad <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CounterExists">
      <MemberSignature Language="C#" Value="public static bool CounterExists (string counterName, string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CounterExists(string counterName, string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CounterExists (counterName As String, categoryName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CounterExists(System::String ^ counterName, System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member CounterExists : string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.CounterExists (counterName, categoryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">Nombre del contador de rendimiento que se va a buscar.</param>
        <param name="categoryName">Nombre de la categoría de contador de rendimiento u objeto de rendimiento al que está asociado el contador de rendimiento especificado.</param>
        <summary>Determina si el contador especificado está registrado en la categoría especificada del equipo local.</summary>
        <returns>Es <see langword="true" /> si el contador está registrado en la categoría especificada del equipo local; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Para leer los contadores de rendimiento en Windows Vista y versiones posteriores, Windows XP Professional x64 Edition o Windows Server 2003, debe ser miembro del grupo usuarios del Monitor de rendimiento o tener privilegios administrativos.  
>   
>  Para evitar tener que elevar sus privilegios para tener acceso a los contadores de rendimiento en Windows Vista y versiones posteriores, agréguese al grupo usuarios del Monitor de rendimiento.  
>   
>  En Windows Vista y versiones posteriores, el Control de cuentas de usuario (UAC) determina los privilegios de un usuario. Si es miembro del grupo Administradores integrados, se le asignarán dos símbolos (tokens) de acceso en tiempo de ejecución: un símbolo (token) de acceso de usuario estándar y un símbolo (token) de acceso de administrador. De forma predeterminada, se le asignará el rol de usuario estándar. Para ejecutar el código que tiene acceso a los contadores de rendimiento, primero debe elevar sus privilegios de usuario estándar a administrador. Para ello, inicie una aplicación haciendo clic con el botón derecho en el icono de la aplicación e indique que desea ejecutarla como administrador.  
  
   
  
## Examples  
 El ejemplo de código siguiente determina si un <xref:System.Diagnostics.PerformanceCounter> existe. Obtiene un nombre de categoría, el nombre del contador y el nombre del equipo desde la línea de comandos, si se han proporcionado. Utilizan las sobrecargas estáticas de la <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> método para determinar si especificado <xref:System.Diagnostics.PerformanceCounter> nombre existe en el <xref:System.Diagnostics.PerformanceCounterCategory>. La sobrecarga se selecciona en función de si se proporciona un nombre de equipo.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatcounterexists.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatcountexists.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="categoryName" /> es <see langword="null" />.  
  
O bien 
El valor de <paramref name="counterName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> es una cadena vacía ("").</exception>
        <exception cref="T:System.InvalidOperationException">El nombre de categoría especificado no existe.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para leer las categorías de contador de rendimiento. Enumeración asociada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CounterExists">
      <MemberSignature Language="C#" Value="public static bool CounterExists (string counterName, string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CounterExists(string counterName, string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CounterExists (counterName As String, categoryName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CounterExists(System::String ^ counterName, System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member CounterExists : string * string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.CounterExists (counterName, categoryName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">Nombre del contador de rendimiento que se va a buscar.</param>
        <param name="categoryName">Nombre de la categoría de contador de rendimiento u objeto de rendimiento al que está asociado el contador de rendimiento especificado.</param>
        <param name="machineName">Nombre del equipo en el que residen la categoría del contador de rendimiento y los contadores asociados.</param>
        <summary>Determina si el contador especificado está registrado en la categoría especificada de un equipo remoto.</summary>
        <returns>Es <see langword="true" /> si el contador está registrado en la categoría especificada del equipo especificado; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Para leer los contadores de rendimiento en Windows Vista y versiones posteriores, Windows XP Professional x64 Edition o Windows Server 2003, debe ser miembro del grupo usuarios del Monitor de rendimiento o tener privilegios administrativos.  
>   
>  Para evitar tener que elevar sus privilegios para tener acceso a los contadores de rendimiento en Windows Vista y versiones posteriores, agréguese al grupo usuarios del Monitor de rendimiento.  
>   
>  En Windows Vista y versiones posteriores, el Control de cuentas de usuario (UAC) determina los privilegios de un usuario. Si es miembro del grupo Administradores integrados, se le asignarán dos símbolos (tokens) de acceso en tiempo de ejecución: un símbolo (token) de acceso de usuario estándar y un símbolo (token) de acceso de administrador. De forma predeterminada, se le asignará el rol de usuario estándar. Para ejecutar el código que tiene acceso a los contadores de rendimiento, primero debe elevar sus privilegios de usuario estándar a administrador. Para ello, inicie una aplicación haciendo clic con el botón derecho en el icono de la aplicación e indique que desea ejecutarla como administrador.  
  
   
  
## Examples  
 El ejemplo de código siguiente determina si un <xref:System.Diagnostics.PerformanceCounter> existe. Obtiene un nombre de categoría, el nombre del contador y el nombre del equipo desde la línea de comandos, si se han proporcionado. Utilizan las sobrecargas estáticas de la <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> método para determinar si especificado <xref:System.Diagnostics.PerformanceCounter> nombre existe en el <xref:System.Diagnostics.PerformanceCounterCategory>. La sobrecarga se selecciona en función de si se proporciona un nombre de equipo.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatcounterexists.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatcountexists.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="categoryName" /> es <see langword="null" />.  
  
O bien 
El valor de <paramref name="counterName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> es una cadena vacía ("").  
  
O bien 
<paramref name="machineName" /> no es válido.</exception>
        <exception cref="T:System.InvalidOperationException">El nombre de categoría especificado no existe.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para leer las categorías de contador de rendimiento. Enumeración asociada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Registra en el sistema una categoría de contador de rendimiento personalizada y uno o más contadores.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.CounterCreationDataCollection counterData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, class System.Diagnostics.CounterCreationDataCollection counterData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, counterData As CounterCreationDataCollection) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::Diagnostics::CounterCreationDataCollection ^ counterData);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * System.Diagnostics.CounterCreationDataCollection -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, counterData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use another overload that uses PerformanceCounterCategoryType instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.PerformanceCounterCategory.Create(string categoryName, string categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData) instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="counterData" Type="System.Diagnostics.CounterCreationDataCollection" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nombre de la categoría de contador de rendimiento personalizada que se va a crear y registrar en el sistema.</param>
        <param name="categoryHelp">Descripción de la categoría personalizada.</param>
        <param name="counterData">
          <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> que especifica los contadores que se van a crear como parte de la nueva categoría.</param>
        <summary>Registra la categoría de contador de rendimiento personalizada que contiene los contadores especificados en el equipo local.</summary>
        <returns>
          <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> que está asociado a la nueva categoría personalizada, u objeto de rendimiento.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Para leer los contadores de rendimiento en Windows Vista y versiones posteriores, Windows XP Professional x64 Edition o Windows Server 2003, debe ser miembro del grupo usuarios del Monitor de rendimiento o tener privilegios administrativos.  
>   
>  Para evitar tener que elevar sus privilegios para tener acceso a los contadores de rendimiento en Windows Vista y versiones posteriores, agréguese al grupo usuarios del Monitor de rendimiento.  
>   
>  En Windows Vista y versiones posteriores, el Control de cuentas de usuario (UAC) determina los privilegios de un usuario. Si es miembro del grupo Administradores integrados, se le asignarán dos símbolos (tokens) de acceso en tiempo de ejecución: un símbolo (token) de acceso de usuario estándar y un símbolo (token) de acceso de administrador. De forma predeterminada, se le asignará el rol de usuario estándar. Para ejecutar el código que tiene acceso a los contadores de rendimiento, primero debe elevar sus privilegios de usuario estándar a administrador. Para ello, inicie una aplicación haciendo clic con el botón derecho en el icono de la aplicación e indique que desea ejecutarla como administrador.  
  
   
  
## Examples  
 El ejemplo de código siguiente determina si un <xref:System.Diagnostics.PerformanceCounterCategory> existe el objeto denominado "orders". Si no, crea el <xref:System.Diagnostics.PerformanceCounterCategory> objeto utilizando un <xref:System.Diagnostics.CounterCreationDataCollection> objeto que contiene dos contadores de rendimiento.  
  
 [!code-cpp[PerfCounter_ccd#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter_ccd/CPP/ccd.cpp#1)]
 [!code-csharp[PerfCounter_ccd#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter_ccd/CS/ccd.cs#1)]
 [!code-vb[PerfCounter_ccd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter_ccd/VB/ccd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Un nombre de contador especificado dentro de la colección <paramref name="counterData" /> es <see langword="null" /> o una cadena vacía ("").  
  
O bien 
Un contador especificado dentro de la colección <paramref name="counterData" /> ya existe.  
  
O bien 
El parámetro <paramref name="counterName" /> tiene una sintaxis no válida. Puede que contenga caracteres de barra invertida ("\\") o su longitud supere los 80 caracteres.</exception>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="categoryName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ya existe la categoría en el equipo local.  
  
O bien 
El diseño de la colección <paramref name="counterData" /> es incorrecto para los contadores base. Un contador de tipo <see langword="AverageCount64" />, <see langword="AverageTimer32" />, <see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" />, <see langword="CounterMultiTimer100NsInverse" />, <see langword="RawFraction" />, <see langword="SampleFraction" /> o <see langword="SampleCounter" /> debe ir seguido inmediatamente de uno de los tipos de contador base (<see langword="AverageBase" />, <see langword="MultiBase" />, <see langword="RawBase" /> o <see langword="SampleBase" />).</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para realizar tareas administrativas en categorías de contador de rendimiento. Enumeración asociada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.PerformanceCounterCategoryType categoryType, System.Diagnostics.CounterCreationDataCollection counterData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, valuetype System.Diagnostics.PerformanceCounterCategoryType categoryType, class System.Diagnostics.CounterCreationDataCollection counterData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, categoryType As PerformanceCounterCategoryType, counterData As CounterCreationDataCollection) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::Diagnostics::PerformanceCounterCategoryType categoryType, System::Diagnostics::CounterCreationDataCollection ^ counterData);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * System.Diagnostics.PerformanceCounterCategoryType * System.Diagnostics.CounterCreationDataCollection -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, categoryType, counterData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="categoryType" Type="System.Diagnostics.PerformanceCounterCategoryType" />
        <Parameter Name="counterData" Type="System.Diagnostics.CounterCreationDataCollection" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nombre de la categoría de contador de rendimiento personalizada que se va a crear y registrar en el sistema.</param>
        <param name="categoryHelp">Descripción de la categoría personalizada.</param>
        <param name="categoryType">Uno de los valores de <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" />.</param>
        <param name="counterData">
          <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> que especifica los contadores que se van a crear como parte de la nueva categoría.</param>
        <summary>Registra la categoría de contador de rendimiento personalizada que contiene los contadores especificados en el equipo local.</summary>
        <returns>
          <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> que está asociado a la nueva categoría personalizada, u objeto de rendimiento.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `categoryType` parámetro especifica si la categoría de contador de rendimiento es de instancia única o instancias múltiples. De forma predeterminada, una categoría es de instancia única cuando se crea y se convierte en varias instancias cuando se agrega otra instancia. Las categorías se crean cuando se configura una aplicación, y se agregan instancias en tiempo de ejecución. En las versiones 1.0 y 1.1 de .NET Framework, no es necesario saber si una categoría de contador de rendimiento es de varias instancias o de instancia única. En el [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], el <xref:System.Diagnostics.PerformanceCounterCategoryType> enumeración se utiliza para indicar si un contador de rendimiento puede tener varias instancias.  
  
 Categorías de contador de rendimiento instaladas con el [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] usar memoria compartida independiente, con cada categoría de contador de rendimiento tiene su propia memoria.  Puede especificar el tamaño de memoria compartida independiente mediante la creación de un valor DWORD denominado FileMappingSize en la clave del Registro HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\*\<nombre de categoría >* \ Rendimiento. El valor de FileMappingSize se establece en el tamaño de memoria compartida de la categoría. El tamaño predeterminado es decimal 131072. Si el valor de FileMappingSize no está presente, el `fileMappingSize` valor del atributo para el `performanceCounters` se utiliza el elemento especificado en el archivo Machine.config, provocando una sobrecarga adicional para el procesamiento del archivo de configuración. Puede apreciar una mejora del rendimiento de inicio de la aplicación estableciendo el tamaño de asignación de archivo en el registro.  
  
> [!NOTE]
>  Se recomienda encarecidamente que se crean nuevas categorías de contador de rendimiento durante la instalación de la aplicación, no durante la ejecución de la aplicación. Esto permite que el tiempo para el sistema operativo actualizar su lista de categorías de contador de rendimiento registrados. Si no se ha actualizado la lista, se producirá un error al intentar utilizar la categoría.  
  
> [!NOTE]
>  Para leer los contadores de rendimiento en Windows Vista y versiones posteriores, Windows XP Professional x64 Edition o Windows Server 2003, debe ser miembro del grupo usuarios del Monitor de rendimiento o tener privilegios administrativos.  
>   
>  Para evitar tener que elevar sus privilegios para tener acceso a los contadores de rendimiento en Windows Vista y versiones posteriores, agréguese al grupo usuarios del Monitor de rendimiento.  
>   
>  En Windows Vista y versiones posteriores, el Control de cuentas de usuario (UAC) determina los privilegios de un usuario. Si es miembro del grupo Administradores integrados, se le asignarán dos símbolos (tokens) de acceso en tiempo de ejecución: un símbolo (token) de acceso de usuario estándar y un símbolo (token) de acceso de administrador. De forma predeterminada, se le asignará el rol de usuario estándar. Para ejecutar el código que tiene acceso a los contadores de rendimiento, primero debe elevar sus privilegios de usuario estándar a administrador. Para ello, inicie una aplicación haciendo clic con el botón derecho en el icono de la aplicación e indique que desea ejecutarla como administrador.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de la <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> método. El ejemplo muestra cómo crear una personalizada, la categoría de contador de rendimiento de varias instancias para el número de pedidos por segundo.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategoryType#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/CS/program.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategoryType#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/VB/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Un nombre de contador especificado dentro de la colección <paramref name="counterData" /> es <see langword="null" /> o una cadena vacía ("").  
  
O bien 
Un contador especificado dentro de la colección <paramref name="counterData" /> ya existe.  
  
O bien 
 <paramref name="counterName" /> tiene una sintaxis no válida. Puede que contenga caracteres de barra invertida ("\\") o su longitud supere los 80 caracteres.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> es <see langword="null" />.  
  
O bien 
 <paramref name="counterData" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">El valor de <paramref name="categoryType" /> está fuera del intervalo de los valores siguientes: <see langword="MultiInstance" />, <see langword="SingleInstance" /> o <see langword="Unknown" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ya existe la categoría en el equipo local.  
  
O bien 
El diseño de la colección <paramref name="counterData" /> es incorrecto para los contadores base. Un contador de tipo <see langword="AverageCount64" />, <see langword="AverageTimer32" />, <see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" />, <see langword="CounterMultiTimer100NsInverse" />, <see langword="RawFraction" />, <see langword="SampleFraction" /> o <see langword="SampleCounter" /> debe ir seguido inmediatamente de uno de los tipos de contador base (<see langword="AverageBase" />, <see langword="MultiBase" />, <see langword="RawBase" /> o <see langword="SampleBase" />).</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para realizar tareas administrativas en categorías de contador de rendimiento. Enumeración asociada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, string counterName, string counterHelp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, string counterName, string counterHelp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, counterName As String, counterHelp As String) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::String ^ counterName, System::String ^ counterHelp);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * string * string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, counterName, counterHelp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use another overload that uses PerformanceCounterCategoryType instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.PerformanceCounterCategory.Create(string categoryName, string categoryHelp, PerformanceCounterCategoryType categoryType, string counterName, string counterHelp) instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="counterHelp" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nombre de la categoría de contador de rendimiento personalizada que se va a crear y registrar en el sistema.</param>
        <param name="categoryHelp">Descripción de la categoría personalizada.</param>
        <param name="counterName">Nombre de un nuevo contador de tipo <see langword="NumberOfItems32" /> que se va a crear como parte de la nueva categoría.</param>
        <param name="counterHelp">Descripción del contador asociado a la nueva categoría personalizada.</param>
        <summary>Registra una categoría de contador de rendimiento personalizada que contiene un solo contador de tipo <see langword="NumberOfItems32" /> en el equipo local.</summary>
        <returns>
          <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> que está asociado a la nueva categoría del sistema, u objeto de rendimiento.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Para leer los contadores de rendimiento en Windows Vista y versiones posteriores, Windows XP Professional x64 Edition o Windows Server 2003, debe ser miembro del grupo usuarios del Monitor de rendimiento o tener privilegios administrativos.  
>   
>  Para evitar tener que elevar sus privilegios para tener acceso a los contadores de rendimiento en Windows Vista y versiones posteriores, agréguese al grupo usuarios del Monitor de rendimiento.  
>   
>  En Windows Vista y versiones posteriores, el Control de cuentas de usuario (UAC) determina los privilegios de un usuario. Si es miembro del grupo Administradores integrados, se le asignarán dos símbolos (tokens) de acceso en tiempo de ejecución: un símbolo (token) de acceso de usuario estándar y un símbolo (token) de acceso de administrador. De forma predeterminada, se le asignará el rol de usuario estándar. Para ejecutar el código que tiene acceso a los contadores de rendimiento, primero debe elevar sus privilegios de usuario estándar a administrador. Para ello, inicie una aplicación haciendo clic con el botón derecho en el icono de la aplicación e indique que desea ejecutarla como administrador.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un <xref:System.Diagnostics.PerformanceCounterCategory> y single <xref:System.Diagnostics.PerformanceCounter> con texto de ayuda para cada uno, mediante el <xref:System.Diagnostics.PerformanceCounterCategory.Create%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29> método.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatcreate.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatcreate.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="counterName" /> es <see langword="null" /> o una cadena vacía ("").  
  
O bien 
Ya existe el contador especificado por el parámetro <paramref name="counterName" />.  
  
O bien 
 <paramref name="counterName" /> tiene una sintaxis no válida. Puede que contenga caracteres de barra invertida ("\\") o su longitud supere los 80 caracteres.</exception>
        <exception cref="T:System.InvalidOperationException">Ya existe la categoría en el equipo local.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> es <see langword="null" />.  
  
O bien 
 <paramref name="counterHelp" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para realizar tareas administrativas en categorías de contador de rendimiento. Enumeración asociada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.CounterHelp" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.PerformanceCounterCategoryType categoryType, string counterName, string counterHelp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, valuetype System.Diagnostics.PerformanceCounterCategoryType categoryType, string counterName, string counterHelp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, categoryType As PerformanceCounterCategoryType, counterName As String, counterHelp As String) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::Diagnostics::PerformanceCounterCategoryType categoryType, System::String ^ counterName, System::String ^ counterHelp);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * System.Diagnostics.PerformanceCounterCategoryType * string * string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, categoryType, counterName, counterHelp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="categoryType" Type="System.Diagnostics.PerformanceCounterCategoryType" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="counterHelp" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nombre de la categoría de contador de rendimiento personalizada que se va a crear y registrar en el sistema.</param>
        <param name="categoryHelp">Descripción de la categoría personalizada.</param>
        <param name="categoryType">Uno de los valores de <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" /> que especifica si la categoría es <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance" />, <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance" /> o <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.Unknown" />.</param>
        <param name="counterName">Nombre de un nuevo contador que se va a crear como parte de la nueva categoría.</param>
        <param name="counterHelp">Descripción del contador asociado a la nueva categoría personalizada.</param>
        <summary>Registra la categoría de contador de rendimiento personalizada que contiene un solo contador de tipo <see cref="F:System.Diagnostics.PerformanceCounterType.NumberOfItems32" /> en el equipo local.</summary>
        <returns>
          <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> que está asociado a la nueva categoría del sistema, u objeto de rendimiento.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `categoryType` parámetro especifica si la categoría de contador de rendimiento es de instancia única o instancias múltiples. De forma predeterminada, una categoría es de instancia única cuando se crea y se convierte en varias instancias cuando se agrega otra instancia. Las categorías se crean cuando se configura una aplicación, y se agregan instancias en tiempo de ejecución. En las versiones 1.0 y 1.1 de .NET Framework, no es necesario saber si una categoría de contador de rendimiento es de varias instancias o de instancia única. En el [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], el <xref:System.Diagnostics.PerformanceCounterCategoryType> enumeración se utiliza para indicar si un contador de rendimiento puede tener varias instancias.  
  
 Categorías de contador de rendimiento instaladas con el [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] usar memoria compartida independiente, con cada categoría de contador de rendimiento tiene su propia memoria. Puede especificar el tamaño de memoria compartida independiente mediante la creación de un valor DWORD denominado FileMappingSize en la clave del Registro HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\*\<nombre de categoría >* \ Rendimiento. El valor de FileMappingSize se establece en el tamaño de memoria compartida de la categoría. El tamaño predeterminado es decimal 131072. Si el valor de FileMappingSize no está presente, el `fileMappingSize` valor del atributo para el `performanceCounters` se utiliza el elemento especificado en el archivo Machine.config, provocando una sobrecarga adicional para el procesamiento del archivo de configuración. Puede apreciar una mejora del rendimiento de inicio de la aplicación estableciendo el tamaño de asignación de archivo en el registro.  
  
> [!NOTE]
>  Se recomienda encarecidamente que se crean nuevas categorías de contador de rendimiento durante la instalación de la aplicación, no durante la ejecución de la aplicación. Esto permite que el tiempo para el sistema operativo actualizar su lista de categorías de contador de rendimiento registrados. Si no se ha actualizado la lista, se producirá un error al intentar utilizar la categoría.  
  
> [!NOTE]
>  Para leer los contadores de rendimiento en Windows Vista y versiones posteriores, Windows XP Professional x64 Edition o Windows Server 2003, debe ser miembro del grupo usuarios del Monitor de rendimiento o tener privilegios administrativos.  
>   
>  Para evitar tener que elevar sus privilegios para tener acceso a los contadores de rendimiento en Windows Vista y versiones posteriores, agréguese al grupo usuarios del Monitor de rendimiento.  
>   
>  En Windows Vista y versiones posteriores, el Control de cuentas de usuario (UAC) determina los privilegios de un usuario. Si es miembro del grupo Administradores integrados, se le asignarán dos símbolos (tokens) de acceso en tiempo de ejecución: un símbolo (token) de acceso de usuario estándar y un símbolo (token) de acceso de administrador. De forma predeterminada, se le asignará el rol de usuario estándar. Para ejecutar el código que tiene acceso a los contadores de rendimiento, primero debe elevar sus privilegios de usuario estándar a administrador. Para ello, inicie una aplicación haciendo clic con el botón derecho en el icono de la aplicación e indique que desea ejecutarla como administrador.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de la <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> método. El ejemplo muestra cómo crear una categoría de contador de rendimiento personalizado, una sola instancia.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategoryType#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/CS/program.cs#3)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategoryType#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/VB/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="counterName" /> es <see langword="null" /> o una cadena vacía ("").  
  
O bien 
Ya existe el contador especificado por el parámetro <paramref name="counterName" />.  
  
O bien 
 <paramref name="counterName" /> tiene una sintaxis no válida. Puede que contenga caracteres de barra invertida ("\\") o su longitud supere los 80 caracteres.</exception>
        <exception cref="T:System.InvalidOperationException">Ya existe la categoría en el equipo local.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> es <see langword="null" />.  
  
O bien 
 <paramref name="counterHelp" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para realizar tareas administrativas en categorías de contador de rendimiento. Enumeración asociada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static void Delete (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Delete(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Delete (categoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Delete(System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member Delete : string -&gt; unit" Usage="System.Diagnostics.PerformanceCounterCategory.Delete categoryName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nombre de la categoría de contador de rendimiento personalizada que se va a eliminar.</param>
        <summary>Quita la categoría y los contadores asociados del equipo local.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede eliminar categorías de contador de rendimiento personalizados solo desde el sistema. No se puede eliminar un contador de una categoría. Para ello, elimine la categoría y volver a crear la categoría con los contadores que desea conservar. Para evitar una excepción, confirme que existe la categoría antes de intentar eliminarlo.  
  
> [!NOTE]
>  Para leer los contadores de rendimiento en Windows Vista y versiones posteriores, Windows XP Professional x64 Edition o Windows Server 2003, debe ser miembro del grupo usuarios del Monitor de rendimiento o tener privilegios administrativos.  
>   
>  Para evitar tener que elevar sus privilegios para tener acceso a los contadores de rendimiento en Windows Vista y versiones posteriores, agréguese al grupo usuarios del Monitor de rendimiento.  
>   
>  En Windows Vista y versiones posteriores, el Control de cuentas de usuario (UAC) determina los privilegios de un usuario. Si es miembro del grupo Administradores integrados, se le asignarán dos símbolos (tokens) de acceso en tiempo de ejecución: un símbolo (token) de acceso de usuario estándar y un símbolo (token) de acceso de administrador. De forma predeterminada, se le asignará el rol de usuario estándar. Para ejecutar el código que tiene acceso a los contadores de rendimiento, primero debe elevar sus privilegios de usuario estándar a administrador. Para ello, inicie una aplicación haciendo clic con el botón derecho en el icono de la aplicación e indique que desea ejecutarla como administrador.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> método para eliminar un <xref:System.Diagnostics.PerformanceCounterCategory> y <xref:System.Diagnostics.PerformanceCounter> objetos que contiene.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatDelete.cs#6)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatdelete.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="categoryName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">El parámetro <paramref name="categoryName" /> tiene una sintaxis no válida. Puede que contenga caracteres de barra invertida ("\\") o su longitud supere los 80 caracteres.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
        <exception cref="T:System.InvalidOperationException">No se puede eliminar la categoría porque no es una categoría personalizada.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para leer las categorías de contador de rendimiento. Enumeración asociada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Exists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina si la categoría está registrada en el sistema.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (categoryName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member Exists : string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.Exists categoryName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nombre de la categoría de contador de rendimiento que se va a buscar.</param>
        <summary>Determina si la categoría está registrada en el equipo local.</summary>
        <returns>Es <see langword="true" /> si la categoría está registrada; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El uso de la <xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A> método puede provocar una reducción notable del rendimiento mientras se comprueban todos los contadores de rendimiento en el equipo para la disponibilidad. Si sólo se escriben en un contador de rendimiento, puede evitar la búsqueda global para los contadores de rendimiento mediante la creación del contador de rendimiento cuando se instala la aplicación y suponiendo que la categoría no existe cuando se obtiene acceso al contador. No hay ninguna manera de evitar la búsqueda del contador de rendimiento al leer los contadores de rendimiento.  
  
> [!NOTE]
>  Para leer los contadores de rendimiento en Windows Vista y versiones posteriores, Windows XP Professional x64 Edition o Windows Server 2003, debe ser miembro del grupo usuarios del Monitor de rendimiento o tener privilegios administrativos.  
>   
>  Para evitar tener que elevar sus privilegios para tener acceso a los contadores de rendimiento en Windows Vista y versiones posteriores, agréguese al grupo usuarios del Monitor de rendimiento.  
>   
>  En Windows Vista y versiones posteriores, el Control de cuentas de usuario (UAC) determina los privilegios de un usuario. Si es miembro del grupo Administradores integrados, se le asignarán dos símbolos (tokens) de acceso en tiempo de ejecución: un símbolo (token) de acceso de usuario estándar y un símbolo (token) de acceso de administrador. De forma predeterminada, se le asignará el rol de usuario estándar. Para ejecutar el código que tiene acceso a los contadores de rendimiento, primero debe elevar sus privilegios de usuario estándar a administrador. Para ello, inicie una aplicación haciendo clic con el botón derecho en el icono de la aplicación e indique que desea ejecutarla como administrador.  
  
   
  
## Examples  
 El ejemplo de código siguiente determina si un <xref:System.Diagnostics.PerformanceCounterCategory> existe el objeto denominado "orders". Si no, crea el <xref:System.Diagnostics.PerformanceCounterCategory> objeto utilizando un <xref:System.Diagnostics.CounterCreationDataCollection> objeto que contiene dos contadores de rendimiento.  
  
 [!code-cpp[PerfCounter_ccd#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter_ccd/CPP/ccd.cpp#1)]
 [!code-csharp[PerfCounter_ccd#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter_ccd/CS/ccd.cs#1)]
 [!code-vb[PerfCounter_ccd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter_ccd/VB/ccd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="categoryName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">El parámetro <paramref name="categoryName" /> es una cadena vacía ("").</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para leer las categorías de contador de rendimiento. Enumeración asociada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (categoryName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member Exists : string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.Exists (categoryName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nombre de la categoría de contador de rendimiento que se va a buscar.</param>
        <param name="machineName">Nombre del equipo en el que se va a buscar la categoría.</param>
        <summary>Determina si la categoría está registrada en el equipo especificado.</summary>
        <returns>Es <see langword="true" /> si la categoría está registrada; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El uso de la <xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A> método puede provocar una reducción notable del rendimiento mientras se comprueban todos los contadores de rendimiento en el equipo para la disponibilidad. Si sólo se escriben en un contador de rendimiento, puede evitar la búsqueda global para los contadores de rendimiento mediante la creación del contador de rendimiento cuando se instala la aplicación y suponiendo que la categoría no existe cuando se obtiene acceso al contador. No hay ninguna manera de evitar la búsqueda del contador de rendimiento al leer los contadores de rendimiento.  
  
> [!NOTE]
>  Para leer los contadores de rendimiento en Windows Vista y versiones posteriores, Windows XP Professional x64 Edition o Windows Server 2003, debe ser miembro del grupo usuarios del Monitor de rendimiento o tener privilegios administrativos.  
>   
>  Para evitar tener que elevar sus privilegios para tener acceso a los contadores de rendimiento en Windows Vista y versiones posteriores, agréguese al grupo usuarios del Monitor de rendimiento.  
>   
>  En Windows Vista y versiones posteriores, el Control de cuentas de usuario (UAC) determina los privilegios de un usuario. Si es miembro del grupo Administradores integrados, se le asignarán dos símbolos (tokens) de acceso en tiempo de ejecución: un símbolo (token) de acceso de usuario estándar y un símbolo (token) de acceso de administrador. De forma predeterminada, se le asignará el rol de usuario estándar. Para ejecutar el código que tiene acceso a los contadores de rendimiento, primero debe elevar sus privilegios de usuario estándar a administrador. Para ello, inicie una aplicación haciendo clic con el botón derecho en el icono de la aplicación e indique que desea ejecutarla como administrador.  
  
   
  
## Examples  
 El ejemplo siguiente determina si un <xref:System.Diagnostics.PerformanceCounterCategory> objeto denominado `Orders` existe. Si no existe, el ejemplo se crea el <xref:System.Diagnostics.PerformanceCounterCategory> objeto utilizando un <xref:System.Diagnostics.CounterCreationDataCollection> objeto que contiene dos contadores de rendimiento.  
  
 [!code-cpp[PerfCounter_ccd#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter_ccd/CPP/ccd.cpp#1)]
 [!code-csharp[PerfCounter_ccd#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter_ccd/CS/ccd.cs#1)]
 [!code-vb[PerfCounter_ccd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter_ccd/VB/ccd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="categoryName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">El parámetro <paramref name="categoryName" /> es una cadena vacía ("").  
  
O bien 
El parámetro <paramref name="machineName" /> no es válido.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
        <exception cref="T:System.IO.IOException">No se puede encontrar la ruta de acceso a la red.</exception>
        <exception cref="T:System.UnauthorizedAccessException">El llamador no dispone del permiso requerido.  
  
O bien 
Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para leer las categorías de contador de rendimiento. Enumeración asociada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCategories">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera una lista de las categorías de contador de rendimiento registradas en un equipo.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCategories">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory[] GetCategories ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory[] GetCategories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCategories" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCategories () As PerformanceCounterCategory()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::PerformanceCounterCategory ^&gt; ^ GetCategories();" />
      <MemberSignature Language="F#" Value="static member GetCategories : unit -&gt; System.Diagnostics.PerformanceCounterCategory[]" Usage="System.Diagnostics.PerformanceCounterCategory.GetCategories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera una lista de las categorías de contador de rendimiento registradas en el equipo local.</summary>
        <returns>Matriz de objetos <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> que indica las categorías que están registradas en el equipo local.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Para leer los contadores de rendimiento en Windows Vista y versiones posteriores, Windows XP Professional x64 Edition o Windows Server 2003, debe ser miembro del grupo usuarios del Monitor de rendimiento o tener privilegios administrativos.  
>   
>  Para evitar tener que elevar sus privilegios para tener acceso a los contadores de rendimiento en Windows Vista y versiones posteriores, agréguese al grupo usuarios del Monitor de rendimiento.  
>   
>  En Windows Vista y versiones posteriores, el Control de cuentas de usuario (UAC) determina los privilegios de un usuario. Si es miembro del grupo Administradores integrados, se le asignarán dos símbolos (tokens) de acceso en tiempo de ejecución: un símbolo (token) de acceso de usuario estándar y un símbolo (token) de acceso de administrador. De forma predeterminada, se le asignará el rol de usuario estándar. Para ejecutar el código que tiene acceso a los contadores de rendimiento, primero debe elevar sus privilegios de usuario estándar a administrador. Para ello, inicie una aplicación haciendo clic con el botón derecho en el icono de la aplicación e indique que desea ejecutarla como administrador.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> método para devolver una matriz de <xref:System.Diagnostics.PerformanceCounterCategory> objetos desde el equipo local o en un equipo especificado. Convierte el <xref:System.Diagnostics.PerformanceCounterCategory> matriz en una matriz de nombres de categoría, que se ordena y se muestra para el usuario. El <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> sobrecarga se selecciona basándose en si se ha especificado un nombre de equipo.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountergetcat.cpp#2)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountergetcat.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcat.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para leer las categorías de contador de rendimiento. Enumeración asociada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetCategories">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory[] GetCategories (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory[] GetCategories(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCategories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCategories (machineName As String) As PerformanceCounterCategory()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::PerformanceCounterCategory ^&gt; ^ GetCategories(System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member GetCategories : string -&gt; System.Diagnostics.PerformanceCounterCategory[]" Usage="System.Diagnostics.PerformanceCounterCategory.GetCategories machineName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName">Equipo en el que se va a buscar.</param>
        <summary>Recupera una lista de las categorías de contador de rendimiento registradas en el equipo especificado.</summary>
        <returns>Matriz de objetos <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> que indica las categorías que están registradas en el equipo especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para recuperar las categorías en el equipo local, use otra sobrecarga o pasar "." como el `machineName` parámetro.  
  
> [!NOTE]
>  Para leer los contadores de rendimiento en Windows Vista y versiones posteriores, Windows XP Professional x64 Edition o Windows Server 2003, debe ser miembro del grupo usuarios del Monitor de rendimiento o tener privilegios administrativos.  
>   
>  Para evitar tener que elevar sus privilegios para tener acceso a los contadores de rendimiento en Windows Vista y versiones posteriores, agréguese al grupo usuarios del Monitor de rendimiento.  
>   
>  En Windows Vista y versiones posteriores, el Control de cuentas de usuario (UAC) determina los privilegios de un usuario. Si es miembro del grupo Administradores integrados, se le asignarán dos símbolos (tokens) de acceso en tiempo de ejecución: un símbolo (token) de acceso de usuario estándar y un símbolo (token) de acceso de administrador. De forma predeterminada, se le asignará el rol de usuario estándar. Para ejecutar el código que tiene acceso a los contadores de rendimiento, primero debe elevar sus privilegios de usuario estándar a administrador. Para ello, inicie una aplicación haciendo clic con el botón derecho en el icono de la aplicación e indique que desea ejecutarla como administrador.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> método para devolver una matriz de <xref:System.Diagnostics.PerformanceCounterCategory> objetos desde el equipo local o en un equipo especificado. Convierte el <xref:System.Diagnostics.PerformanceCounterCategory> matriz en una matriz de nombres de categoría, que se ordena y se muestra para el usuario. El <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> sobrecarga se selecciona basándose en si se ha especificado un nombre de equipo.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountergetcat.cpp#2)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountergetcat.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcat.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El parámetro <paramref name="machineName" /> no es válido.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para leer las categorías de contador de rendimiento. Enumeración asociada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCounters">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera una lista de los contadores de esta categoría de contador de rendimiento.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCounters">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounter[] GetCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.PerformanceCounter[] GetCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCounters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCounters () As PerformanceCounter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Diagnostics::PerformanceCounter ^&gt; ^ GetCounters();" />
      <MemberSignature Language="F#" Value="member this.GetCounters : unit -&gt; System.Diagnostics.PerformanceCounter[]" Usage="performanceCounterCategory.GetCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera una lista de los contadores de una categoría de contador de rendimiento que contiene exactamente una instancia.</summary>
        <returns>Matriz de objetos <see cref="T:System.Diagnostics.PerformanceCounter" /> que indica los contadores que están asociados a esta categoría de contador de rendimiento de una sola instancia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información sobre las instancias de objeto de rendimiento, consulte el <xref:System.Diagnostics.PerformanceCounter> información general de clases.  
  
> [!NOTE]
>  Para leer los contadores de rendimiento en Windows Vista y versiones posteriores, Windows XP Professional x64 Edition o Windows Server 2003, debe ser miembro del grupo usuarios del Monitor de rendimiento o tener privilegios administrativos.  
>   
>  Para evitar tener que elevar sus privilegios para tener acceso a los contadores de rendimiento en Windows Vista y versiones posteriores, agréguese al grupo usuarios del Monitor de rendimiento.  
>   
>  En Windows Vista y versiones posteriores, el Control de cuentas de usuario (UAC) determina los privilegios de un usuario. Si es miembro del grupo Administradores integrados, se le asignarán dos símbolos (tokens) de acceso en tiempo de ejecución: un símbolo (token) de acceso de usuario estándar y un símbolo (token) de acceso de administrador. De forma predeterminada, se le asignará el rol de usuario estándar. Para ejecutar el código que tiene acceso a los contadores de rendimiento, primero debe elevar sus privilegios de usuario estándar a administrador. Para ello, inicie una aplicación haciendo clic con el botón derecho en el icono de la aplicación e indique que desea ejecutarla como administrador.  
  
   
  
## Examples  
 El ejemplo de código siguiente obtiene una lista de los <xref:System.Diagnostics.PerformanceCounter> objetos en un <xref:System.Diagnostics.PerformanceCounterCategory>. Primero, se crea un <xref:System.Diagnostics.PerformanceCounterCategory> con el constructor correspondiente, en función de si se ha especificado un nombre de equipo. A continuación, usa el <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> método para devolver una matriz de <xref:System.Diagnostics.PerformanceCounter> objetos, seleccionar la <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> sobrecarga en función de si se ha especificado un nombre de instancia.  
  
 Esto <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters> sobrecarga se produce un error a menos que se usa con una categoría de instancia única.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountercatgetcount.cpp#4)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountercatgetcount.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcount.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La categoría no es una instancia única.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
        <exception cref="T:System.InvalidOperationException">La categoría no tiene una instancia asociada.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetCounters">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounter[] GetCounters (string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.PerformanceCounter[] GetCounters(string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCounters(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCounters (instanceName As String) As PerformanceCounter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Diagnostics::PerformanceCounter ^&gt; ^ GetCounters(System::String ^ instanceName);" />
      <MemberSignature Language="F#" Value="member this.GetCounters : string -&gt; System.Diagnostics.PerformanceCounter[]" Usage="performanceCounterCategory.GetCounters instanceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounter[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">Instancia de objeto de rendimiento para la que se va a recuperar una lista de contadores asociados.</param>
        <summary>Recupera una lista de los contadores de una categoría de contador de rendimiento que contiene una o más instancias.</summary>
        <returns>Matriz de objetos <see cref="T:System.Diagnostics.PerformanceCounter" /> que indica los contadores asociados a la instancia de objeto especificada de esta categoría de contador de rendimiento.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para representar una categoría de instancia única, pase una cadena vacía ("") para el `instanceName` parámetro.  
  
 Para obtener más información sobre las instancias de objeto de rendimiento, consulte el <xref:System.Diagnostics.PerformanceCounter> información general de clases.  
  
> [!NOTE]
>  Para leer los contadores de rendimiento en Windows Vista y versiones posteriores, Windows XP Professional x64 Edition o Windows Server 2003, debe ser miembro del grupo usuarios del Monitor de rendimiento o tener privilegios administrativos.  
>   
>  Para evitar tener que elevar sus privilegios para tener acceso a los contadores de rendimiento en Windows Vista y versiones posteriores, agréguese al grupo usuarios del Monitor de rendimiento.  
>   
>  En Windows Vista y versiones posteriores, el Control de cuentas de usuario (UAC) determina los privilegios de un usuario. Si es miembro del grupo Administradores integrados, se le asignarán dos símbolos (tokens) de acceso en tiempo de ejecución: un símbolo (token) de acceso de usuario estándar y un símbolo (token) de acceso de administrador. De forma predeterminada, se le asignará el rol de usuario estándar. Para ejecutar el código que tiene acceso a los contadores de rendimiento, primero debe elevar sus privilegios de usuario estándar a administrador. Para ello, inicie una aplicación haciendo clic con el botón derecho en el icono de la aplicación e indique que desea ejecutarla como administrador.  
  
   
  
## Examples  
 El ejemplo de código siguiente obtiene una lista de los <xref:System.Diagnostics.PerformanceCounter> objetos en un <xref:System.Diagnostics.PerformanceCounterCategory>. Primero, se crea un <xref:System.Diagnostics.PerformanceCounterCategory> con el constructor correspondiente, en función de si se ha especificado un nombre de equipo. A continuación, usa el <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> método para devolver una matriz de <xref:System.Diagnostics.PerformanceCounter> objetos, seleccionar la <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> sobrecarga en función de si se ha especificado un nombre de instancia.  
  
 Esto <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%28System.String%29> sobrecarga se produce un error a menos que se usa con una categoría que contiene las instancias.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountercatgetcount.cpp#4)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountercatgetcount.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcount.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="instanceName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">No se ha establecido la propiedad <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> para esta instancia de <see cref="T:System.Diagnostics.PerformanceCounterCategory" />.  
  
O bien 
La categoría no contiene la instancia especificada en el parámetro <paramref name="instanceName" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetInstanceNames">
      <MemberSignature Language="C#" Value="public string[] GetInstanceNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetInstanceNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstanceNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetInstanceNames();" />
      <MemberSignature Language="F#" Value="member this.GetInstanceNames : unit -&gt; string[]" Usage="performanceCounterCategory.GetInstanceNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera la lista de instancias de objetos de rendimiento asociados a esta categoría.</summary>
        <returns>Matriz de cadenas que representa los nombres de las instancias de objetos de rendimiento que están asociadas a esta categoría o, si la categoría contiene una sola instancia de objeto de rendimiento, matriz de una sola entrada que contiene una cadena vacía ("").</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Para leer los contadores de rendimiento en Windows Vista y versiones posteriores, Windows XP Professional x64 Edition o Windows Server 2003, debe ser miembro del grupo usuarios del Monitor de rendimiento o tener privilegios administrativos.  
>   
>  Para evitar tener que elevar sus privilegios para tener acceso a los contadores de rendimiento en Windows Vista y versiones posteriores, agréguese al grupo usuarios del Monitor de rendimiento.  
>   
>  En Windows Vista y versiones posteriores, el Control de cuentas de usuario (UAC) determina los privilegios de un usuario. Si es miembro del grupo Administradores integrados, se le asignarán dos símbolos (tokens) de acceso en tiempo de ejecución: un símbolo (token) de acceso de usuario estándar y un símbolo (token) de acceso de administrador. De forma predeterminada, se le asignará el rol de usuario estándar. Para ejecutar el código que tiene acceso a los contadores de rendimiento, primero debe elevar sus privilegios de usuario estándar a administrador. Para ello, inicie una aplicación haciendo clic con el botón derecho en el icono de la aplicación e indique que desea ejecutarla como administrador.  
  
   
  
## Examples  
 El ejemplo de código siguiente obtiene una lista de los <xref:System.Diagnostics.PerformanceCounter> objetos en un <xref:System.Diagnostics.PerformanceCounterCategory>. Primero, se crea un <xref:System.Diagnostics.PerformanceCounterCategory> objeto utilizando el constructor adecuado en función de si se ha especificado un nombre de equipo. A continuación, usa <xref:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames%2A> para devolver los nombres de instancia como una matriz de <xref:System.String>, que se ordena y se muestra.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountercatgetinst.cpp#6)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountercatgetinst.cs#6)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetinst.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> es <see langword="null" />. Es posible que no se haya establecido la propiedad.  
  
O bien 
La categoría no tiene una instancia asociada.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InstanceExists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina si la categoría contiene la instancia de objeto de rendimiento especificada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InstanceExists">
      <MemberSignature Language="C#" Value="public bool InstanceExists (string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InstanceExists(string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function InstanceExists (instanceName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InstanceExists(System::String ^ instanceName);" />
      <MemberSignature Language="F#" Value="member this.InstanceExists : string -&gt; bool" Usage="performanceCounterCategory.InstanceExists instanceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">Instancia de objeto de rendimiento de esta categoría de contadores de rendimiento que se va a buscar.</param>
        <summary>Determina si la instancia de objeto de rendimiento especificada existe en la categoría identificada por la propiedad <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> de este objeto <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />.</summary>
        <returns>Es <see langword="true" /> si la categoría contiene la instancia de objeto de rendimiento especificada; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta sobrecarga de <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> no `static`. Deberá crear un <xref:System.Diagnostics.PerformanceCounterCategory> objeto y establecer el <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> propiedad.  
  
> [!NOTE]
>  Para leer los contadores de rendimiento en Windows Vista y versiones posteriores, Windows XP Professional x64 Edition o Windows Server 2003, debe ser miembro del grupo usuarios del Monitor de rendimiento o tener privilegios administrativos.  
>   
>  Para evitar tener que elevar sus privilegios para tener acceso a los contadores de rendimiento en Windows Vista y versiones posteriores, agréguese al grupo usuarios del Monitor de rendimiento.  
>   
>  En Windows Vista y versiones posteriores, el Control de cuentas de usuario (UAC) determina los privilegios de un usuario. Si es miembro del grupo Administradores integrados, se le asignarán dos símbolos (tokens) de acceso en tiempo de ejecución: un símbolo (token) de acceso de usuario estándar y un símbolo (token) de acceso de administrador. De forma predeterminada, se le asignará el rol de usuario estándar. Para ejecutar el código que tiene acceso a los contadores de rendimiento, primero debe elevar sus privilegios de usuario estándar a administrador. Para ello, inicie una aplicación haciendo clic con el botón derecho en el icono de la aplicación e indique que desea ejecutarla como administrador.  
  
   
  
## Examples  
 El ejemplo de código siguiente determina si un <xref:System.Diagnostics.PerformanceCounter> instancia existe dentro de un <xref:System.Diagnostics.PerformanceCounterCategory>. Primero, se crea un <xref:System.Diagnostics.PerformanceCounterCategory> objeto utilizando el constructor adecuado en función de si se ha especificado un nombre de equipo. A continuación, usa <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%28System.String%29> para determinar si la instancia especificada existe y, después, se informa al usuario. Si no se especifica ningún nombre de instancia, el ejemplo utiliza el nombre de instancia única de forma predeterminada.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcounterobjinstexists.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatobjinstexists.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> es <see langword="null" />. Es posible que no se haya establecido la propiedad.</exception>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="instanceName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para leer las categorías de contador de rendimiento. Enumeración asociada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="InstanceExists">
      <MemberSignature Language="C#" Value="public static bool InstanceExists (string instanceName, string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InstanceExists(string instanceName, string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InstanceExists (instanceName As String, categoryName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool InstanceExists(System::String ^ instanceName, System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member InstanceExists : string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.InstanceExists (instanceName, categoryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">Instancia de objeto de rendimiento que se va a buscar.</param>
        <param name="categoryName">Categoría de contador de rendimiento en la que se va a buscar.</param>
        <summary>Determina si una categoría especificada en el equipo local contiene la instancia de objeto de rendimiento especificada.</summary>
        <returns>Es <see langword="true" /> si la categoría contiene la instancia de objeto de rendimiento especificada; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No es posible determinar si existe una instancia de objeto de rendimiento en un equipo sin especificar una categoría específica para buscar en.  
  
> [!NOTE]
>  Para leer los contadores de rendimiento en Windows Vista y versiones posteriores, Windows XP Professional x64 Edition o Windows Server 2003, debe ser miembro del grupo usuarios del Monitor de rendimiento o tener privilegios administrativos.  
>   
>  Para evitar tener que elevar sus privilegios para tener acceso a los contadores de rendimiento en Windows Vista y versiones posteriores, agréguese al grupo usuarios del Monitor de rendimiento.  
>   
>  En Windows Vista y versiones posteriores, el Control de cuentas de usuario (UAC) determina los privilegios de un usuario. Si es miembro del grupo Administradores integrados, se le asignarán dos símbolos (tokens) de acceso en tiempo de ejecución: un símbolo (token) de acceso de usuario estándar y un símbolo (token) de acceso de administrador. De forma predeterminada, se le asignará el rol de usuario estándar. Para ejecutar el código que tiene acceso a los contadores de rendimiento, primero debe elevar sus privilegios de usuario estándar a administrador. Para ello, inicie una aplicación haciendo clic con el botón derecho en el icono de la aplicación e indique que desea ejecutarla como administrador.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se utiliza las sobrecargas estáticas de <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> para determinar si el dado <xref:System.Diagnostics.PerformanceCounter> instancia existe en el <xref:System.Diagnostics.PerformanceCounterCategory>. La sobrecarga se selecciona en función de si se especifica un nombre de equipo. Si no se especifica ningún nombre de instancia, el ejemplo utiliza el nombre de instancia única de forma predeterminada.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatinstexists.cs#10)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatinstexists.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="instanceName" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="categoryName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">El parámetro <paramref name="categoryName" /> es una cadena vacía ("").</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para leer las categorías de contador de rendimiento. Enumeración asociada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="InstanceExists">
      <MemberSignature Language="C#" Value="public static bool InstanceExists (string instanceName, string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InstanceExists(string instanceName, string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InstanceExists (instanceName As String, categoryName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool InstanceExists(System::String ^ instanceName, System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member InstanceExists : string * string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.InstanceExists (instanceName, categoryName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">Instancia de objeto de rendimiento que se va a buscar.</param>
        <param name="categoryName">Categoría de contador de rendimiento en la que se va a buscar.</param>
        <param name="machineName">Nombre del equipo en el que se va a buscar la instancia de la categoría.</param>
        <summary>Determina si una categoría especificada en un equipo especificado contiene la instancia de objeto de rendimiento especificada.</summary>
        <returns>Es <see langword="true" /> si la categoría contiene la instancia de objeto de rendimiento especificada; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No es posible determinar si existe una instancia de objeto de rendimiento en un equipo sin especificar una categoría específica para buscar en.  
  
 Puede utilizar "." para especificar el equipo local.  
  
> [!NOTE]
>  Para leer los contadores de rendimiento en Windows Vista y versiones posteriores, Windows XP Professional x64 Edition o Windows Server 2003, debe ser miembro del grupo usuarios del Monitor de rendimiento o tener privilegios administrativos.  
>   
>  Para evitar tener que elevar sus privilegios para tener acceso a los contadores de rendimiento en Windows Vista y versiones posteriores, agréguese al grupo usuarios del Monitor de rendimiento.  
>   
>  En Windows Vista y versiones posteriores, el Control de cuentas de usuario (UAC) determina los privilegios de un usuario. Si es miembro del grupo Administradores integrados, se le asignarán dos símbolos (tokens) de acceso en tiempo de ejecución: un símbolo (token) de acceso de usuario estándar y un símbolo (token) de acceso de administrador. De forma predeterminada, se le asignará el rol de usuario estándar. Para ejecutar el código que tiene acceso a los contadores de rendimiento, primero debe elevar sus privilegios de usuario estándar a administrador. Para ello, inicie una aplicación haciendo clic con el botón derecho en el icono de la aplicación e indique que desea ejecutarla como administrador.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se utiliza las sobrecargas estáticas de <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> para determinar si el dado <xref:System.Diagnostics.PerformanceCounter> instancia existe en el <xref:System.Diagnostics.PerformanceCounterCategory>. La sobrecarga se selecciona en función de si se especifica un nombre de equipo. Si no se especifica ningún nombre de instancia, el ejemplo utiliza el nombre de instancia única de forma predeterminada.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatinstexists.cs#10)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatinstexists.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="instanceName" /> es <see langword="null" />.  
  
O bien 
El parámetro <paramref name="categoryName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">El parámetro <paramref name="categoryName" /> es una cadena vacía ("").  
  
O bien 
El parámetro <paramref name="machineName" /> no es válido.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para leer las categorías de contador de rendimiento. Enumeración asociada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string with get, set" Usage="System.Diagnostics.PerformanceCounterCategory.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del equipo en el que reside esta categoría.</summary>
        <value>Nombre del equipo en el que residen la categoría del contador de rendimiento y los contadores asociados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se crea un <xref:System.Diagnostics.PerformanceCounterCategory> con el <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor> constructor. Pide al usuario la <xref:System.Diagnostics.PerformanceCounterCategory> y los nombres de equipo, a continuación, Establece el <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> y <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> propiedades de los valores introducidos. A continuación, muestra los valores de la <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>, y <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> propiedades o se muestra un mensaje de error si el <xref:System.Diagnostics.PerformanceCounterCategory> no es accesible.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatProps.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatprops.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La sintaxis de <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> no es válida.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para leer las categorías de contador de rendimiento. Enumeración asociada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="ReadCategory">
      <MemberSignature Language="C#" Value="public System.Diagnostics.InstanceDataCollectionCollection ReadCategory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.InstanceDataCollectionCollection ReadCategory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.ReadCategory" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadCategory () As InstanceDataCollectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::InstanceDataCollectionCollection ^ ReadCategory();" />
      <MemberSignature Language="F#" Value="member this.ReadCategory : unit -&gt; System.Diagnostics.InstanceDataCollectionCollection" Usage="performanceCounterCategory.ReadCategory " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.InstanceDataCollectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lee todos los datos sobre el contador y la instancia de objeto de rendimiento asociados a esta categoría de contador de rendimiento.</summary>
        <returns>
          <see cref="T:System.Diagnostics.InstanceDataCollectionCollection" /> que contiene los datos sobre el contador y la instancia de objeto de rendimiento asociados a la categoría.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Debe establecer el <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> propiedad antes de llamar a <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A>.  
  
 Leer toda la categoría a la vez puede ser tan eficaz como la lectura de un solo contador debido al modo en que el sistema proporciona los datos.  
  
> [!NOTE]
>  Para leer los contadores de rendimiento en Windows Vista y versiones posteriores, Windows XP Professional x64 Edition o Windows Server 2003, debe ser miembro del grupo usuarios del Monitor de rendimiento o tener privilegios administrativos.  
>   
>  Para evitar tener que elevar sus privilegios para tener acceso a los contadores de rendimiento en Windows Vista y versiones posteriores, agréguese al grupo usuarios del Monitor de rendimiento.  
>   
>  En Windows Vista y versiones posteriores, el Control de cuentas de usuario (UAC) determina los privilegios de un usuario. Si es miembro del grupo Administradores integrados, se le asignarán dos símbolos (tokens) de acceso en tiempo de ejecución: un símbolo (token) de acceso de usuario estándar y un símbolo (token) de acceso de administrador. De forma predeterminada, se le asignará el rol de usuario estándar. Para ejecutar el código que tiene acceso a los contadores de rendimiento, primero debe elevar sus privilegios de usuario estándar a administrador. Para ello, inicie una aplicación haciendo clic con el botón derecho en el icono de la aplicación e indique que desea ejecutarla como administrador.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un <xref:System.Diagnostics.PerformanceCounterCategory> para un elemento <xref:System.Diagnostics.PerformanceCounterCategory> nombre. A continuación, usa <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A> para devolver un <xref:System.Diagnostics.InstanceDataCollectionCollection> que contiene los datos de instancia para todas las instancias de la <xref:System.Diagnostics.PerformanceCounter> objetos dentro de la <xref:System.Diagnostics.PerformanceCounterCategory>.  
  
 [!code-csharp[System.Diagnostics.InstanceData.CopyTo#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/CS/instdatacopyto.cs#6)]
 [!code-vb[System.Diagnostics.InstanceData.CopyTo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/VB/instdatacopyto.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> es <see langword="null" />. Es posible que no se haya establecido la propiedad.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un error en la llamada a una API del sistema subyacente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Código que se ejecuta sin privilegios administrativos para intentar leer un contador de rendimiento.</exception>
        <altmember cref="T:System.Diagnostics.InstanceDataCollectionCollection" />
        <altmember cref="T:System.Diagnostics.InstanceDataCollection" />
        <altmember cref="T:System.Diagnostics.InstanceData" />
      </Docs>
    </Member>
  </Members>
</Type>