<Type Name="InstanceDataCollection" FullName="System.Diagnostics.InstanceDataCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="10744eb06a1e9a2979135177fd36eaf21935d572" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30399409" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InstanceDataCollection : System.Collections.DictionaryBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InstanceDataCollection extends System.Collections.DictionaryBase" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.InstanceDataCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class InstanceDataCollection&#xA;Inherits DictionaryBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstanceDataCollection : System::Collections::DictionaryBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.DictionaryBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona una colección de objetos <see cref="T:System.Diagnostics.InstanceData" /> fuertemente tipados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Diagnostics.InstanceDataCollection> clase representa una colección que contiene todos los datos de instancia para un contador. Esta colección se encuentra en la <xref:System.Diagnostics.InstanceDataCollectionCollection> cuando se usa el <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra los datos de instancia para un determinado <xref:System.Diagnostics.PerformanceCounterCategory> en el equipo local. Primero se muestra una lista numerada de <xref:System.Diagnostics.PerformanceCounterCategory> nombres. Cuando el usuario introduce el número de una de las categorías, el ejemplo obtiene el <xref:System.Diagnostics.InstanceDataCollectionCollection> para que <xref:System.Diagnostics.PerformanceCounterCategory>. A continuación, convierte la colección devuelta por <xref:System.Diagnostics.InstanceDataCollectionCollection.Values%2A> a una matriz de <xref:System.Diagnostics.InstanceDataCollection> objetos. El ejemplo también muestra los datos de instancia asociados a cada <xref:System.Diagnostics.InstanceData> de cada <xref:System.Diagnostics.InstanceDataCollection>.  
  
 [!code-csharp[System.Diagnostics.InstanceData.KeysValues#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/CS/instdatakeysvalues.cs#1)]
 [!code-vb[System.Diagnostics.InstanceData.KeysValues#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/VB/instdatakeysvalues.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.ReadCategory" />
    <altmember cref="T:System.Diagnostics.InstanceDataCollectionCollection" />
    <altmember cref="T:System.Diagnostics.InstanceData" />
    <altmember cref="T:System.Diagnostics.CounterSample" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstanceDataCollection (string counterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string counterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.InstanceDataCollection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (counterName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstanceDataCollection(System::String ^ counterName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use InstanceDataCollectionCollection indexer instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">Nombre del contador, que a menudo describe la cantidad que se cuenta.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.InstanceDataCollection" />, utilizando el contador de rendimiento especificado (que define una instancia de rendimiento).</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">El valor del parámetro <paramref name="counterName" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.InstanceDataCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (instanceName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ instanceName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">Nombre de la instancia que se va a buscar en esta colección.</param>
        <summary>Determina si existe en la colección una instancia de rendimiento con un nombre especificado (identificado por uno de los objetos <see cref="T:System.Diagnostics.InstanceData" /> indizados).</summary>
        <returns>
          Es <see langword="true" /> si la instancia está en la colección; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `instanceName` parámetro distingue mayúsculas de minúsculas.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se acepta una <xref:System.Diagnostics.PerformanceCounter> nombre de categoría, el nombre del contador y el nombre de la instancia de la línea de comandos. Obtiene el <xref:System.Diagnostics.InstanceDataCollectionCollection> para la categoría, que es una colección de <xref:System.Diagnostics.InstanceDataCollection> objetos. Desde la que obtiene el determinado <xref:System.Diagnostics.InstanceDataCollection> para el contador especificado. A continuación, utiliza el <xref:System.Diagnostics.InstanceDataCollection.Contains%2A> método para determinar si existe la instancia especificada, utilizando el nombre de instancia única de forma predeterminada si no se especifica ninguno.  
  
 [!code-csharp[System.Diagnostics.InstanceDataCollection.ItemContains#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceDataCollection.ItemContains/CS/instdatacolitemcontains.cs#2)]
 [!code-vb[System.Diagnostics.InstanceDataCollection.ItemContains#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceDataCollection.ItemContains/VB/instdatacolitemcontains.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor del parámetro <paramref name="instanceName" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Diagnostics.InstanceData[] instances, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Diagnostics.InstanceData[] instances, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.InstanceDataCollection.CopyTo(System.Diagnostics.InstanceData[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (instances As InstanceData(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Diagnostics::InstanceData ^&gt; ^ instances, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instances" Type="System.Diagnostics.InstanceData[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="instances">
          <see cref="T:System.Array" /> unidimensional que constituye el destino de los valores copiados de la colección.</param>
        <param name="index">Valor de índice de base cero en el que se van a agregar las nuevas instancias.</param>
        <summary>Copia los elementos de la colección en la matriz unidimensional especificada en el índice indicado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Diagnostics.InstanceDataCollection.CopyTo%2A> método para convertir un <xref:System.Diagnostics.InstanceDataCollection> en una matriz de <xref:System.Diagnostics.InstanceData> objetos. Los valores de la <xref:System.Diagnostics.InstanceData.InstanceName%2A> y <xref:System.Diagnostics.InstanceData.Sample%2A> propiedades de cada elemento de la matriz se pasan a una función para su posterior procesamiento.  
  
 [!code-csharp[System.Diagnostics.InstanceData.CopyTo#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/CS/instdatacopyto.cs#4)]
 [!code-vb[System.Diagnostics.InstanceData.CopyTo#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/VB/instdatacopyto.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterName">
      <MemberSignature Language="C#" Value="public string CounterName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CounterName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.InstanceDataCollection.CounterName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CounterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CounterName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre del contador de rendimiento cuyos datos de instancia se desea obtener.</summary>
        <value>Nombre del contador de rendimiento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El siguiente código en el ejemplo se muestra la <xref:System.Diagnostics.InstanceDataCollection.CounterName%2A> propiedad de un <xref:System.Diagnostics.InstanceDataCollection>.  
  
 [!code-csharp[System.Diagnostics.InstanceData.CopyTo#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/CS/instdatacopyto.cs#4)]
 [!code-vb[System.Diagnostics.InstanceData.CopyTo#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/VB/instdatacopyto.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Diagnostics.InstanceData this[string instanceName] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.InstanceData Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.InstanceDataCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(instanceName As String) As InstanceData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::InstanceData ^ default[System::String ^] { System::Diagnostics::InstanceData ^ get(System::String ^ instanceName); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.InstanceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">Nombre de la instancia de categoría del contador de rendimiento, o cadena vacía (""), si la categoría contiene una sola instancia.</param>
        <summary>Obtiene los datos de instancia asociados a este contador. Normalmente, es un conjunto de valores de contador sin formato.</summary>
        <value>Elemento de <see cref="T:System.Diagnostics.InstanceData" /> por el que se indiza el objeto <see cref="T:System.Diagnostics.InstanceDataCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `instanceName` parámetro distingue mayúsculas de minúsculas.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se acepta una <xref:System.Diagnostics.PerformanceCounter> nombre de categoría, el nombre del contador y el nombre de la instancia de la línea de comandos. Obtiene el <xref:System.Diagnostics.InstanceDataCollectionCollection> para la categoría, que es una colección de <xref:System.Diagnostics.InstanceDataCollection> objetos. Desde la que obtiene el determinado <xref:System.Diagnostics.InstanceDataCollection> para el contador especificado. A continuación, si existe una instancia, en el ejemplo se utiliza la <xref:System.Diagnostics.InstanceDataCollection.Item%2A> propiedad (que hace referencia como indizador) para obtener el asociado <xref:System.Diagnostics.InstanceData> objeto.  
  
 [!code-csharp[System.Diagnostics.InstanceDataCollection.ItemContains#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceDataCollection.ItemContains/CS/instdatacolitemcontains.cs#2)]
 [!code-vb[System.Diagnostics.InstanceDataCollection.ItemContains#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceDataCollection.ItemContains/VB/instdatacolitemcontains.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor del parámetro <paramref name="instanceName" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.InstanceDataCollection.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene las claves del Registro de contador y de objeto para los objetos asociados a estos datos de instancia.</summary>
        <value>
          <see cref="T:System.Collections.ICollection" /> que representa un conjunto de claves del Registro específicas del objeto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada componente de software crea claves para sus objetos y contadores cuando se instala y escribe los datos del contador mientras se ejecuta. Puede tener acceso a estos datos como que obtendría acceso a cualquier otro dato de registro. Sin embargo, aunque el registro se utilice para recopilar datos de rendimiento, los datos no se almacenan en la base de datos del registro. En su lugar, el sistema recopila los datos de los administradores de objeto de sistema adecuado.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Diagnostics.InstanceDataCollection.Keys%2A> propiedad de un <xref:System.Diagnostics.InstanceDataCollection> para devolver una colección de nombres de instancia, que convierte a una matriz de <xref:System.String>. Genera una matriz de <xref:System.Diagnostics.InstanceData> objetos mediante el <xref:System.Diagnostics.InstanceDataCollection.Values%2A> propiedad. Para cada elemento de la matriz de nombres de instancia, se muestra el nombre y llama a una función para procesar asociado <xref:System.Diagnostics.InstanceData> objeto.  
  
 [!code-csharp[System.Diagnostics.InstanceData.KeysValues#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/CS/instdatakeysvalues.cs#3)]
 [!code-vb[System.Diagnostics.InstanceData.KeysValues#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/VB/instdatakeysvalues.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.InstanceDataCollection.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene los valores de contador sin formato que forman los datos de instancia del contador.</summary>
        <value>
          <see cref="T:System.Collections.ICollection" /> que representa los valores de los datos sin procesar del contador.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Diagnostics.InstanceDataCollection.Values%2A> propiedad de un <xref:System.Diagnostics.InstanceDataCollection> para devolver una colección de <xref:System.Diagnostics.InstanceData> objetos, que convierte en una matriz. Genera una matriz de nombres de instancia mediante el <xref:System.Diagnostics.InstanceDataCollection.Keys%2A> propiedad. Para cada elemento de la matriz de <xref:System.Diagnostics.InstanceData> objetos, se muestra el nombre de instancia asociado y llama a una función para procesar la <xref:System.Diagnostics.InstanceData> objeto.  
  
 [!code-csharp[System.Diagnostics.InstanceData.KeysValues#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/CS/instdatakeysvalues.cs#3)]
 [!code-vb[System.Diagnostics.InstanceData.KeysValues#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/VB/instdatakeysvalues.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>