<Type Name="DataReceivedEventArgs" FullName="System.Diagnostics.DataReceivedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c30ac2c0d32eedbaf5dc4de4234981c481061c09" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36675158" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataReceivedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataReceivedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DataReceivedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataReceivedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataReceivedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DataReceivedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona datos para los eventos <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> y <see cref="E:System.Diagnostics.Process.ErrorDataReceived" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para recopilar de forma asincrónica el redirigida <xref:System.Diagnostics.Process.StandardOutput%2A> o <xref:System.Diagnostics.Process.StandardError%2A> flujo de salida de un proceso, debe crear un método que controla los eventos de salida de la secuencia redirigida. Se llama al método de controlador de eventos cuando el proceso se escribe en la secuencia redirigida. El delegado de eventos llama al controlador de eventos con una instancia de <xref:System.Diagnostics.DataReceivedEventArgs>. El <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> propiedad contiene la línea de texto que el proceso se escribió en la secuencia redirigida.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo realizar operaciones de lectura asincrónica en la redirigida <xref:System.Diagnostics.Process.StandardOutput%2A> flujo de la `sort` comando. El `sort` comando es una aplicación de consola que lee y ordena la entrada de texto.  
  
 En el ejemplo se crea un delegado de eventos para el `SortOutputHandler` controlador de eventos y lo asocia a la <xref:System.Diagnostics.Process.OutputDataReceived> eventos. El controlador de eventos recibe líneas de texto de la redirigida <xref:System.Diagnostics.Process.StandardOutput%2A> secuencia, se da formato al texto y se escribe el texto en la pantalla.  
  
 [!code-cpp[Process_AsyncStreams#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/sort_async.cpp#1)]
 [!code-csharp[Process_AsyncStreams#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/sort_async.cs#1)]
 [!code-vb[Process_AsyncStreams#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/sort_async.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.DataReceivedEventHandler" />
    <altmember cref="E:System.Diagnostics.Process.OutputDataReceived" />
    <altmember cref="E:System.Diagnostics.Process.ErrorDataReceived" />
    <altmember cref="T:System.Diagnostics.Process" />
  </Docs>
  <Members>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public string Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Data" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DataReceivedEventArgs.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Data { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : string" Usage="System.Diagnostics.DataReceivedEventArgs.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la línea de caracteres escrita en un flujo de salida de <see cref="T:System.Diagnostics.Process" /> redirigido.</summary>
        <value>Línea escrita por una secuencia <see cref="T:System.Diagnostics.Process" /> asociada en su secuencia <see cref="P:System.Diagnostics.Process.StandardOutput" /> o <see cref="P:System.Diagnostics.Process.StandardError" /> redirigida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al redirigir el <xref:System.Diagnostics.Process.StandardOutput%2A> o <xref:System.Diagnostics.Process.StandardError%2A> secuencia de un <xref:System.Diagnostics.Process> al controlador de eventos, se genera un evento cada vez que el proceso escribe una línea en la secuencia redirigida. El <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> propiedad es la línea que la <xref:System.Diagnostics.Process> se escribió en el flujo de salida redirigida. Puede usar el controlador de eventos del <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> propiedad para filtrar la salida del proceso o escribir la salida en una ubicación alternativa. Por ejemplo, podría crear un controlador de eventos que almacena todas las líneas de salida de error en un archivo de registro de errores designado.  
  
 Una línea se define como una secuencia de caracteres seguida de una línea ("\n") de la fuente de distribución o un retorno de carro seguido inmediatamente por una línea de salto ("\r\n"). Los caracteres de línea se codifican utilizando la página de códigos ANSI predeterminada. El <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> propiedad no incluye la terminación un retorno de carro o avance de línea.  
  
 Cuando se cierra la secuencia redirigida, se envía una línea null al controlador de eventos. Asegúrese de las comprobaciones de controlador de eventos del <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> propiedad correctamente antes de tener acceso a ella. Por ejemplo, puede usar el método estático <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> para validar el <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> propiedad en el controlador de eventos.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra un controlador de evento simple asociado el <xref:System.Diagnostics.Process.OutputDataReceived> eventos. El controlador de eventos recibe líneas de texto de la redirigida <xref:System.Diagnostics.Process.StandardOutput%2A> secuencia, se da formato al texto y se escribe el texto en la pantalla.  
  
 [!code-cpp[Process_AsyncStreams#4](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/datareceivedevent.cpp#4)]
 [!code-csharp[Process_AsyncStreams#4](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/datareceivedevent.cs#4)]
 [!code-vb[Process_AsyncStreams#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/datareceivedevent.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>