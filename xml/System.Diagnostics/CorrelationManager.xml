<Type Name="CorrelationManager" FullName="System.Diagnostics.CorrelationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fc23e0e887d53ae76f77bdcfae6edac0990ad5e5" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39862516" /></Metadata><TypeSignature Language="C#" Value="public class CorrelationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CorrelationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.CorrelationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class CorrelationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class CorrelationManager" />
  <TypeSignature Language="F#" Value="type CorrelationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Establece una correlación entre los seguimientos que forman parte de una transacción lógica.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los seguimientos generados a partir de una única operación lógica se pueden etiquetar con una identidad única de la operación, para distinguirlos de los seguimientos de una operación lógica diferente. Por ejemplo, puede ser útil para agrupar los seguimientos correlacionados por solicitud ASP.NET. La <xref:System.Diagnostics.CorrelationManager> clase proporciona métodos utilizados para almacenar la identidad de una operación lógica en un contexto enlazado a subprocesos y etiquetar automáticamente cada evento de seguimiento generado por el subproceso con la identidad almacenada.  
  
 También se pueden anidar las operaciones lógicas. El <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A> propiedad expone la pila de identidades de la operación lógica anidada. Cada llamada a la <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> método inserta una nueva identidad de la operación lógica en la pila. Cada llamada a la <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> método extrae una identidad de la operación lógica la pila.  
  
> [!NOTE]
>  Las identidades de la operación lógica son objetos, lo que permite el uso de un tipo para una identidad de la operación lógica.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de la <xref:System.Diagnostics.CorrelationManager> clase mediante la identificación de la operación lógica asociada a un evento de seguimiento. Se inician dos operaciones lógicas, uno en el subproceso principal y otro en un subproceso de trabajo. Se registra un evento de error en ambas operaciones lógicas.  
  
 [!code-cpp[System.Diagnostics.CorrelationManager#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.CorrelationManager/cpp/correlationmanager.cpp#1)]
 [!code-csharp[System.Diagnostics.CorrelationManager#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.CorrelationManager/cs/program.cs#1)]
 [!code-vb[System.Diagnostics.CorrelationManager#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.CorrelationManager/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ActivityId">
      <MemberSignature Language="C#" Value="public Guid ActivityId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ActivityId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.CorrelationManager.ActivityId" />
      <MemberSignature Language="VB.NET" Value="Public Property ActivityId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ActivityId { Guid get(); void set(Guid value); };" />
      <MemberSignature Language="F#" Value="member this.ActivityId : Guid with get, set" Usage="System.Diagnostics.CorrelationManager.ActivityId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la identidad de una actividad global.</summary>
        <value>Una estructura <see cref="T:System.Guid" /> que identifica la actividad global.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Diagnostics.CorrelationManager.ActivityId%2A> propiedad obtiene y establece la identidad de la actividad global en el <xref:System.Runtime.Remoting.Messaging.CallContext> para el subproceso. El <xref:System.Diagnostics.CorrelationManager.ActivityId%2A> se utiliza para operaciones de transferencia de seguimiento en los agentes de escucha de seguimiento que invalidan la <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> método, como el <xref:System.Diagnostics.XmlWriterTraceListener> clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalOperationStack">
      <MemberSignature Language="C#" Value="public System.Collections.Stack LogicalOperationStack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Stack LogicalOperationStack" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.CorrelationManager.LogicalOperationStack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalOperationStack As Stack" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Stack ^ LogicalOperationStack { System::Collections::Stack ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalOperationStack : System.Collections.Stack" Usage="System.Diagnostics.CorrelationManager.LogicalOperationStack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Stack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la pila de operaciones lógicas del contexto de llamada.</summary>
        <value>Un objeto <see cref="T:System.Collections.Stack" /> que representa la pila de operaciones lógicas del contexto de llamada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada llamada a la <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> método inserta una nueva identidad de la operación lógica en el <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A> pila de la propiedad. Cada llamada a la <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> método extrae una identidad de la operación lógica de la pila.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartLogicalOperation">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicia una operación lógica en un subproceso.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartLogicalOperation">
      <MemberSignature Language="C#" Value="public void StartLogicalOperation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartLogicalOperation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.CorrelationManager.StartLogicalOperation" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartLogicalOperation ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartLogicalOperation();" />
      <MemberSignature Language="F#" Value="member this.StartLogicalOperation : unit -&gt; unit" Usage="correlationManager.StartLogicalOperation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicia una operación lógica en un subproceso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La operación lógica se inicia con un GUID generado automáticamente para el identificador de operación lógica.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartLogicalOperation">
      <MemberSignature Language="C#" Value="public void StartLogicalOperation (object operationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartLogicalOperation(object operationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.CorrelationManager.StartLogicalOperation(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartLogicalOperation (operationId As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartLogicalOperation(System::Object ^ operationId);" />
      <MemberSignature Language="F#" Value="member this.StartLogicalOperation : obj -&gt; unit" Usage="correlationManager.StartLogicalOperation operationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="operationId">Objeto que identifica la operación.</param>
        <summary>Inicia una operación lógica con la identidad especificada en un subproceso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `operationId` parámetro puede ser cualquier objeto, como un <xref:System.String> que permite la operación se identifica con fines de seguimiento. El objeto representado por `operationId` se agrega a la <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de la <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%28System.Object%29> método mediante la inicialización de una operación lógica que se asociará con el subproceso principal. El ejemplo de código completo, vea el <xref:System.Diagnostics.CorrelationManager> clase.  
  
 [!code-csharp[System.Diagnostics.CorrelationManager#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.CorrelationManager/cs/program.cs#2)]
 [!code-vb[System.Diagnostics.CorrelationManager#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.CorrelationManager/vb/module1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="operationId" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="StopLogicalOperation">
      <MemberSignature Language="C#" Value="public void StopLogicalOperation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopLogicalOperation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.CorrelationManager.StopLogicalOperation" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopLogicalOperation ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopLogicalOperation();" />
      <MemberSignature Language="F#" Value="member this.StopLogicalOperation : unit -&gt; unit" Usage="correlationManager.StopLogicalOperation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Detiene la actual operación lógica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se detiene la operación lógica y la identidad de la operación lógica se quita de la <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Diagnostics.CorrelationManager.LogicalOperationStack" /> es una pila vacía.</exception>
      </Docs>
    </Member>
  </Members>
</Type>