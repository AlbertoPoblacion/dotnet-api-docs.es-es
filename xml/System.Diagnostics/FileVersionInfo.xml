<Type Name="FileVersionInfo" FullName="System.Diagnostics.FileVersionInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f2cceafa4855eaf41b8c1eed2efb238a4ca83b1f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30400169" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FileVersionInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileVersionInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.FileVersionInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileVersionInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileVersionInfo sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona información de versión para un archivo físico en disco.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, un número de versión se muestra como "número principales secundario.número de versión de compilación.número de parte privada". Un número de versión de archivo es un número de 64 bits que contiene el número de versión de un archivo como se indica a continuación:  
  
-   Los primeros 16 bits son el <xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A> número.  
  
-   Los 16 bits siguientes son el <xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A> número.  
  
-   El tercer conjunto de 16 bits constituye el <xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A> número.  
  
-   Los últimos 16 bits son el <xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A> número.  
  
 Use la <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> método de esta clase para obtener un <xref:System.Diagnostics.FileVersionInfo> , a continuación, que contiene información sobre un archivo, examine las propiedades para obtener información acerca del archivo. El <xref:System.Diagnostics.FileVersionInfo.FileVersion%2A> propiedad proporciona información de versión sobre el archivo. El <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>, <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>, <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>, <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>, y <xref:System.Diagnostics.FileVersionInfo.ProductVersion%2A> propiedades proporcionan información de versión para el producto que forma parte del archivo especificado. Llame a <xref:System.Diagnostics.FileVersionInfo.ToString%2A> para obtener una lista parcial de propiedades y sus valores para este archivo.  
  
 El <xref:System.Diagnostics.FileVersionInfo> propiedades se basan en información del recurso de versión integrada en el archivo. Recursos de la versión a menudo se generan en archivos binarios, como .exe o .dll; archivos de texto no tiene información de recurso de versión.  
  
 Recursos de la versión se suelen especificar en un archivo de recursos de Win32 o en atributos de ensamblado. Por ejemplo la <xref:System.Diagnostics.FileVersionInfo.IsDebug%2A> propiedad refleja el `VS_FF_DEBUG` marca el valor en el archivo `VS_FIXEDFILEINFO` bloque, lo que se crea a partir del `VERSIONINFO` recursos en un archivo de recursos de Win32.  Para obtener más información acerca de cómo especificar recursos de la versión en un archivo de recursos de Win32, vea "About Resource Files" y "VERSIONINFO Resource" de Platform SDK. Para obtener más información acerca de cómo especificar recursos de la versión en un módulo. NET, consulte el [establecer atributos de ensamblado](~/docs/framework/app-domains/set-assembly-attributes.md) tema.  
  
> [!NOTE]
>  Esta clase realiza una petición de vínculo en el nivel de clase que se aplica a todos los miembros. Un <xref:System.Security.SecurityException> se produce cuando el llamador inmediato no tiene permiso de plena confianza. Para obtener más información acerca de las peticiones de vínculo, vea [peticiones de vínculo](~/docs/framework/misc/link-demands.md).  
  
   
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación, imprime el número de versión y descripción de archivo en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic FileVersionInfo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">De plena confianza para el llamador inmediato. Esta clase no puede ser usada por código de confianza parcial.</permission>
    <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
    <altmember cref="T:System.Version" />
  </Docs>
  <Members>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public string Comments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comments" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.Comments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comments As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comments { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene los comentarios asociados al archivo.</summary>
        <value>Comentarios asociados al archivo o <see langword="null" /> si el archivo no contiene información de versión.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad contiene información adicional que puede mostrarse con fines de diagnóstico.  
  
   
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación, se imprimen los comentarios en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic FileVersionInfo.Comments Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/Classic FileVersionInfo.Comments Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.Comments Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/Classic FileVersionInfo.Comments Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.Comments Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/Classic FileVersionInfo.Comments Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompanyName">
      <MemberSignature Language="C#" Value="public string CompanyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CompanyName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.CompanyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompanyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CompanyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de la compañía que creó el archivo.</summary>
        <value>Nombre de la compañía que creó el archivo o <see langword="null" /> si el archivo no contiene información de versión.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación, imprime el <xref:System.Diagnostics.FileVersionInfo.CompanyName%2A> en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic FileVersionInfo.CompanyName Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.CompanyName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.CompanyName Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.CompanyName Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.CompanyName Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.CompanyName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileBuildPart">
      <MemberSignature Language="C#" Value="public int FileBuildPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FileBuildPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileBuildPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FileBuildPart { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número de compilación del archivo.</summary>
        <value>Valor que representa el número de compilación del archivo o <see langword="null" /> si el archivo no contiene información de versión.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, un número de versión se muestra como "número principales secundario.número de versión de compilación.número de parte privada". Un número de versión de archivo es un número de 64 bits que contiene el número de versión de un archivo como se indica a continuación:  
  
-   Los primeros 16 bits son el <xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A> número.  
  
-   Los 16 bits siguientes son el <xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A> número.  
  
-   El tercer conjunto de 16 bits constituye el <xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A> número.  
  
-   Los últimos 16 bits son el <xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A> número.  
  
 Esta propiedad obtiene el tercer conjunto de 16 bits.  
  
   
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación, imprime el <xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A> en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic FileVersionInfo.FileBuildPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileBuildPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FileBuildPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileBuildPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FileBuildPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileBuildPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FilePrivatePart" />
      </Docs>
    </Member>
    <Member MemberName="FileDescription">
      <MemberSignature Language="C#" Value="public string FileDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileDescription" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileDescription" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileDescription { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una descripción del archivo.</summary>
        <value>Descripción del archivo o <see langword="null" /> si el archivo no contiene información de versión.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación, imprime el <xref:System.Diagnostics.FileVersionInfo.FileDescription%2A> en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic FileVersionInfo.FileDescription Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileDescription Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FileDescription Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileDescription Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FileDescription Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileDescription Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileMajorPart">
      <MemberSignature Language="C#" Value="public int FileMajorPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FileMajorPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileMajorPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FileMajorPart { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la parte principal del número de versión.</summary>
        <value>Valor que representa la parte principal del número de versión o 0 (cero) si el archivo no contiene información de versión.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, un número de versión se muestra como "número principales secundario.número de versión de compilación.número de parte privada". Un número de versión de archivo es un número de 64 bits que contiene el número de versión de un archivo como se indica a continuación:  
  
-   Los primeros 16 bits son el <xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A> número.  
  
-   Los 16 bits siguientes son el <xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A> número.  
  
-   El tercer conjunto de 16 bits constituye el <xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A> número.  
  
-   Los últimos 16 bits son el <xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A> número.  
  
 Esta propiedad obtiene el primer conjunto de 16 bits.  
  
   
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación, imprime el <xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A> en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic FileVersionInfo.FileMajorPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMajorPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FileMajorPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMajorPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FileMajorPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMajorPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="T:System.Version" />
      </Docs>
    </Member>
    <Member MemberName="FileMinorPart">
      <MemberSignature Language="C#" Value="public int FileMinorPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FileMinorPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileMinorPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FileMinorPart { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la parte secundaria del número de versión del archivo.</summary>
        <value>Valor que representa la parte secundaria del número de versión del archivo o 0 (cero) si el archivo no contiene información de versión.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, un número de versión se muestra como "número principales secundario.número de versión de compilación.número de parte privada". Un número de versión de archivo es un número de 64 bits que contiene el número de versión de un archivo como se indica a continuación:  
  
-   Los primeros 16 bits son el <xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A> número.  
  
-   Los 16 bits siguientes son el <xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A> número.  
  
-   El tercer conjunto de 16 bits constituye el <xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A> número.  
  
-   Los últimos 16 bits son el <xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A> número.  
  
 Esta propiedad obtiene el segundo conjunto de 16 bits.  
  
   
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación, imprime el <xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A> en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic FileVersionInfo.FileMinorPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMinorPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FileMinorPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMinorPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FileMinorPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMinorPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="T:System.Version" />
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre del archivo descrito por esta instancia de <see cref="T:System.Diagnostics.FileVersionInfo" />.</summary>
        <value>Nombre del archivo descrito por esta instancia de <see cref="T:System.Diagnostics.FileVersionInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación, imprime el <xref:System.Diagnostics.FileVersionInfo.FileName%2A> en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic FileVersionInfo.FileName Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FileName Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileName Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FileName Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Para obtener el nombre de archivo. Enumeración asociada: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></permission>
      </Docs>
    </Member>
    <Member MemberName="FilePrivatePart">
      <MemberSignature Language="C#" Value="public int FilePrivatePart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FilePrivatePart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FilePrivatePart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilePrivatePart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FilePrivatePart { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número de la parte privada del archivo.</summary>
        <value>Valor que representa el número de la parte privada del archivo o <see langword="null" /> si el archivo no contiene información de versión.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, un número de versión se muestra como "número principales secundario.número de versión de compilación.número de parte privada". Un número de versión de archivo es un número de 64 bits que contiene el número de versión de un archivo como se indica a continuación:  
  
-   Los primeros 16 bits son el <xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A> número.  
  
-   Los 16 bits siguientes son el <xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A> número.  
  
-   El tercer conjunto de 16 bits constituye el <xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A> número.  
  
-   Los últimos 16 bits son el <xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A> número.  
  
 Esta propiedad obtiene el último conjunto de 16 bits.  
  
   
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación, imprime el <xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A> en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic FileVersionInfo.FilePrivatePart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FilePrivatePart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FilePrivatePart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FilePrivatePart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FilePrivatePart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FilePrivatePart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
      </Docs>
    </Member>
    <Member MemberName="FileVersion">
      <MemberSignature Language="C#" Value="public string FileVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileVersion" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número de versión del archivo.</summary>
        <value>Número de versión del archivo o <see langword="null" /> si el archivo no contiene información de versión.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, un número de versión se muestra como "número principales secundario.número de versión de compilación.número de parte privada". Un número de versión de archivo es un número de 64 bits que contiene el número de versión de un archivo como se indica a continuación:  
  
-   Los primeros 16 bits son el <xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A> número.  
  
-   Los 16 bits siguientes son el <xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A> número.  
  
-   El tercer conjunto de 16 bits constituye el <xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A> número.  
  
-   Los últimos 16 bits son el <xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A> número.  
  
   
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación, imprime el número de versión y descripción de archivo en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[classic fileversioninfo example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CPP/source.cpp#1)]
 [!code-csharp[classic fileversioninfo example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CS/source.cs#1)]
 [!code-vb[classic fileversioninfo example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FilePrivatePart" />
      </Docs>
    </Member>
    <Member MemberName="GetVersionInfo">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.FileVersionInfo GetVersionInfo (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.FileVersionInfo GetVersionInfo(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetVersionInfo (fileName As String) As FileVersionInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::FileVersionInfo ^ GetVersionInfo(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.FileVersionInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Nombre y ruta de acceso completos del archivo cuya información de versión se va a recuperar.</param>
        <summary>Devuelve un objeto <see cref="T:System.Diagnostics.FileVersionInfo" /> que representa la información de versión asociada al archivo especificado.</summary>
        <returns>
          <see cref="T:System.Diagnostics.FileVersionInfo" /> que contiene información sobre el archivo. Si el archivo no contenía información de la versión, <see cref="T:System.Diagnostics.FileVersionInfo" /> solo contiene el nombre del archivo solicitado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas y se muestra la descripción del archivo y número de versión en la ventana de consola.  
  
 [!code-cpp[classic fileversioninfo example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CPP/source.cpp#1)]
 [!code-csharp[classic fileversioninfo example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CS/source.cs#1)]
 [!code-vb[classic fileversioninfo example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">No se encuentra el archivo especificado</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Para obtener la información de versión. Enumeración asociada: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">De plena confianza para el llamador inmediato. Esta clase no puede ser usada por código de confianza parcial.</permission>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.SpecialBuild" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductPrivatePart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.PrivateBuild" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.OriginalFilename" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.LegalTrademarks" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.LegalCopyright" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPreRelease" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPatched" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsDebug" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.InternalName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FilePrivatePart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileDescription" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.CompanyName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.Comments" />
      </Docs>
    </Member>
    <Member MemberName="InternalName">
      <MemberSignature Language="C#" Value="public string InternalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InternalName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.InternalName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InternalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InternalName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre interno del archivo, en caso de que exista.</summary>
        <value>Nombre interno del archivo. Si no existe ninguno, esta propiedad contendrá el nombre original del archivo sin la extensión.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación, imprime el <xref:System.Diagnostics.FileVersionInfo.InternalName%2A> en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic FileVersionInfo.InternalName Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.InternalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.InternalName Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.InternalName Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.InternalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.InternalName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDebug">
      <MemberSignature Language="C#" Value="public bool IsDebug { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDebug" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.IsDebug" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDebug As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDebug { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que especifica si el archivo contiene información de depuración o se compila con las características de depuración habilitadas.</summary>
        <value>
          <see langword="true" /> si el archivo contiene información de depuración o se compila con las características de depuración habilitadas; en cualquier otro caso, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Diagnostics.FileVersionInfo> propiedades se basan en información del recurso de versión integrada en el archivo. Recursos de la versión a menudo se generan en archivos binarios, como .exe o .dll; archivos de texto no tiene información de recurso de versión.  
  
 Recursos de la versión se suelen especificar en un archivo de recursos de Win32 o en atributos de ensamblado. El <xref:System.Diagnostics.FileVersionInfo.IsDebug%2A> propiedad refleja el `VS_FF_DEBUG` marca el valor en el archivo `VS_FIXEDFILEINFO` bloque, lo que se crea a partir del `VERSIONINFO` recursos en un archivo de recursos de Win32. Para obtener más información acerca de cómo especificar recursos de la versión en un archivo de recursos de Win32, consulte el SDK de plataforma `About Resource Files` tema y `VERSIONINFO Resource` temas de tema.  
  
   
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación, se muestra el estado del valor booleano <xref:System.Diagnostics.FileVersionInfo.IsDebug%2A> en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic FileVersionInfo.IsDebug Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsDebug Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.IsDebug Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsDebug Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.IsDebug Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsDebug Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPatched">
      <MemberSignature Language="C#" Value="public bool IsPatched { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPatched" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.IsPatched" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPatched As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPatched { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que especifica si el archivo se ha modificado y no es idéntico al archivo suministrado originalmente con el mismo número de versión.</summary>
        <value>
          <see langword="true" /> si el archivo está modificado; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación, se muestra el estado del valor booleano <xref:System.Diagnostics.FileVersionInfo.IsPatched%2A> en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic FileVersionInfo.IsPatched Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPatched Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.IsPatched Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPatched Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.IsPatched Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPatched Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPreRelease">
      <MemberSignature Language="C#" Value="public bool IsPreRelease { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPreRelease" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.IsPreRelease" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPreRelease As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPreRelease { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que especifica si el archivo pertenece a una versión de desarrollo, no a una versión comercial del producto.</summary>
        <value>
          <see langword="true" /> si el archivo es una versión preliminar; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación, se muestra si esta versión es una versión preliminar en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic FileVersionInfo.IsPreRelease Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPreRelease Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.IsPreRelease Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPreRelease Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.IsPreRelease Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPreRelease Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrivateBuild">
      <MemberSignature Language="C#" Value="public bool IsPrivateBuild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrivateBuild" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrivateBuild As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrivateBuild { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que especifica si el archivo se compiló mediante procedimientos estándar para versiones de lanzamiento.</summary>
        <value>
          <see langword="true" /> si el archivo es una versión de compilación privada; <see langword="false" /> si el archivo se generó mediante procedimientos estándar para versiones de lanzamiento o no contiene información de versión.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si este valor es `true`, <xref:System.Diagnostics.FileVersionInfo.PrivateBuild%2A> describirá cómo esta versión del archivo difiere de la versión estándar.  
  
   
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación, muestra la información de versión de compilación privada en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic FileVersionInfo.IsPrivateBuild Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPrivateBuild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.IsPrivateBuild Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPrivateBuild Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.IsPrivateBuild Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPrivateBuild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.PrivateBuild" />
      </Docs>
    </Member>
    <Member MemberName="IsSpecialBuild">
      <MemberSignature Language="C#" Value="public bool IsSpecialBuild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpecialBuild" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpecialBuild As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpecialBuild { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que especifica si el archivo pertenece a una versión de compilación especial.</summary>
        <value>
          <see langword="true" /> si la versión de compilación del archivo es especial; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un archivo que es una versión especial se compiló mediante procedimientos estándar de versiones de lanzamiento, pero el archivo difiere de un archivo estándar con el mismo número de versión. Si este valor es `true`, el <xref:System.Diagnostics.FileVersionInfo.SpecialBuild%2A> propiedad debe especificar cómo este archivo difiere de la versión estándar.  
  
   
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación muestra si esta versión es una compilación especial versión en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic FileVersionInfo.IsSpecialBuild Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsSpecialBuild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.IsSpecialBuild Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsSpecialBuild Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.IsSpecialBuild Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsSpecialBuild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.SpecialBuild" />
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.Language" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la cadena de idioma predeterminada para el bloque de información de versión.</summary>
        <value>Cadena de descripción del identificador de idioma de Microsoft en el recurso de la versión o <see langword="null" /> si el archivo no contiene información de versión.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalCopyright">
      <MemberSignature Language="C#" Value="public string LegalCopyright { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LegalCopyright" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.LegalCopyright" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LegalCopyright As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LegalCopyright { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene todos los avisos de copyright que se aplican al archivo especificado.</summary>
        <value>Obtiene todos los avisos de copyright que se aplican al archivo especificado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esto debe incluir el texto completo de todos los avisos, símbolos legales, fechas de copyright etc. o `null` si el archivo no contiene información de versión.  
  
   
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación, imprime el <xref:System.Diagnostics.FileVersionInfo.LegalCopyright%2A> en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic FileVersionInfo.LegalCopyright Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalCopyright Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.LegalCopyright Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalCopyright Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.LegalCopyright Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalCopyright Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalTrademarks">
      <MemberSignature Language="C#" Value="public string LegalTrademarks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LegalTrademarks" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.LegalTrademarks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LegalTrademarks As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LegalTrademarks { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene las marcas comerciales y marcas registradas que se aplican al archivo.</summary>
        <value>Marcas comerciales y marcas registradas que se aplican al archivo o <see langword="null" /> si el archivo no contiene información de versión.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las marcas comerciales legales incluyen el texto completo de todos los avisos, símbolos legales y números de marcas comerciales.  
  
   
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación, imprime el <xref:System.Diagnostics.FileVersionInfo.LegalTrademarks%2A> en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic FileVersionInfo.LegalTrademarks Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalTrademarks Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.LegalTrademarks Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalTrademarks Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.LegalTrademarks Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalTrademarks Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalFilename">
      <MemberSignature Language="C#" Value="public string OriginalFilename { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalFilename" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.OriginalFilename" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalFilename As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OriginalFilename { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre con el que se creó el archivo.</summary>
        <value>Nombre con el que se creó el archivo o <see langword="null" /> si el archivo no contiene información de versión.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad permite que una aplicación determinar si se ha cambiado el nombre de un archivo.  
  
   
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación, imprime el <xref:System.Diagnostics.FileVersionInfo.OriginalFilename%2A> en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic FileVersionInfo.OriginalFilename Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.OriginalFilename Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.OriginalFilename Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.OriginalFilename Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.OriginalFilename Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.OriginalFilename Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateBuild">
      <MemberSignature Language="C#" Value="public string PrivateBuild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrivateBuild" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.PrivateBuild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrivateBuild As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PrivateBuild { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene información sobre una versión privada del archivo.</summary>
        <value>Información sobre una versión privada del archivo o <see langword="null" /> si el archivo no contiene información de versión.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta información está presente cuando <xref:System.Diagnostics.FileVersionInfo.IsPrivateBuild%2A> es `true`.  
  
   
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación, se imprime la información de versión de compilación privada en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic FileVersionInfo.PrivateBuild Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.PrivateBuild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.PrivateBuild Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.PrivateBuild Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.PrivateBuild Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.PrivateBuild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />
      </Docs>
    </Member>
    <Member MemberName="ProductBuildPart">
      <MemberSignature Language="C#" Value="public int ProductBuildPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProductBuildPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductBuildPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProductBuildPart { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número de compilación del producto al que está asociado este archivo.</summary>
        <value>Valor que representa el número de compilación del producto al que está asociado este archivo o <see langword="null" /> si el archivo no contiene información de versión.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, un número de versión se muestra como "número principales secundario.número de versión de compilación.número de parte privada". Un número de versión de producto es un número de 64 bits que contiene el número de versión como se indica a continuación:  
  
-   Los primeros 16 bits son el <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A> número.  
  
-   Los 16 bits siguientes son el <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A> número.  
  
-   El tercer conjunto de 16 bits constituye el <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A> número.  
  
-   Los últimos 16 bits son el <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A> número.  
  
 Esta propiedad obtiene el tercer conjunto de 16 bits.  
  
   
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación, imprime el <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A> en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic FileVersionInfo.ProductBuildPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductBuildPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductBuildPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductBuildPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductBuildPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductBuildPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductPrivatePart" />
      </Docs>
    </Member>
    <Member MemberName="ProductMajorPart">
      <MemberSignature Language="C#" Value="public int ProductMajorPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProductMajorPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductMajorPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProductMajorPart { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la parte principal del número de versión del producto al que está asociado este archivo.</summary>
        <value>Valor que representa la parte principal del número de versión del producto o <see langword="null" /> si el archivo no contiene información de versión.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, un número de versión se muestra como "número principales secundario.número de versión de compilación.número de parte privada". Un número de versión de producto es un número de 64 bits que contiene el número de versión como se indica a continuación:  
  
-   Los primeros 16 bits son el <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A> número.  
  
-   Los 16 bits siguientes son el <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A> número.  
  
-   El tercer conjunto de 16 bits constituye el <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A> número.  
  
-   Los últimos 16 bits son el <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A> número.  
  
 Esta propiedad obtiene el primer conjunto de 16 bits.  
  
   
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación, imprime el <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A> en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic FileVersionInfo.ProductMajorPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMajorPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductMajorPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMajorPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductMajorPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMajorPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
      </Docs>
    </Member>
    <Member MemberName="ProductMinorPart">
      <MemberSignature Language="C#" Value="public int ProductMinorPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProductMinorPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductMinorPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProductMinorPart { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la parte secundaria del número de versión del producto al que está asociado el archivo.</summary>
        <value>Valor que representa la parte secundaria del número de versión del producto o <see langword="null" /> si el archivo no contiene información de versión.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, un número de versión se muestra como "número principales secundario.número de versión de compilación.número de parte privada". Un número de versión de producto es un número de 64 bits que contiene el número de versión como se indica a continuación:  
  
-   Los primeros 16 bits son el <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A> número.  
  
-   Los 16 bits siguientes son el <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A> número.  
  
-   El tercer conjunto de 16 bits constituye el <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A> número.  
  
-   Los últimos 16 bits son el <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A> número.  
  
 Esta propiedad obtiene el segundo conjunto de 16 bits.  
  
   
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación, imprime el <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A> en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic FileVersionInfo.ProductMinorPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMinorPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductMinorPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMinorPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductMinorPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMinorPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
      </Docs>
    </Member>
    <Member MemberName="ProductName">
      <MemberSignature Language="C#" Value="public string ProductName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre del producto con el que se distribuye este archivo.</summary>
        <value>Nombre del producto con el que se distribuye este archivo o <see langword="null" /> si el archivo no contiene información de versión.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación, imprime el <xref:System.Diagnostics.FileVersionInfo.ProductName%2A> en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic FileVersionInfo.ProductName Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductName Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductName Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductName Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProductPrivatePart">
      <MemberSignature Language="C#" Value="public int ProductPrivatePart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProductPrivatePart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductPrivatePart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductPrivatePart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProductPrivatePart { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número de parte privada del producto al que está asociado este archivo.</summary>
        <value>Valor que representa el número de parte privada del producto al que está asociado este archivo o <see langword="null" /> si el archivo no contiene información de versión.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, un número de versión se muestra como "número principales secundario.número de versión de compilación.número de parte privada". Un número de versión de producto es un número de 64 bits que contiene el número de versión como se indica a continuación:  
  
-   Los primeros 16 bits son el <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A> número.  
  
-   Los 16 bits siguientes son el <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A> número.  
  
-   El tercer conjunto de 16 bits constituye el <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A> número.  
  
-   Los últimos 16 bits son el <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A> número.  
  
 Esta propiedad obtiene el último conjunto de 16 bits.  
  
   
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación, imprime el <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A> en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic FileVersionInfo.ProductPrivatePart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductPrivatePart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductPrivatePart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductPrivatePart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductPrivatePart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductPrivatePart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
      </Docs>
    </Member>
    <Member MemberName="ProductVersion">
      <MemberSignature Language="C#" Value="public string ProductVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductVersion" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la versión del producto con la que se distribuye este archivo.</summary>
        <value>Versión del producto con el que se distribuye este archivo o <see langword="null" /> si el archivo no contiene información de versión.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, un número de versión se muestra como "número principales secundario.número de versión de compilación.número de parte privada". Un número de versión de producto es un número de 64 bits que contiene el número de versión como se indica a continuación:  
  
-   Los primeros 16 bits son el <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A> número.  
  
-   Los 16 bits siguientes son el <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A> número.  
  
-   El tercer conjunto de 16 bits constituye el <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A> número.  
  
-   Los últimos 16 bits son el <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A> número.  
  
   
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación, imprime el <xref:System.Diagnostics.FileVersionInfo.ProductVersion%2A> en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic FileVersionInfo.ProductVersion Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductVersion Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductVersion Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductVersion Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductPrivatePart" />
      </Docs>
    </Member>
    <Member MemberName="SpecialBuild">
      <MemberSignature Language="C#" Value="public string SpecialBuild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SpecialBuild" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.SpecialBuild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpecialBuild As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SpecialBuild { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la información de compilación especial para el archivo.</summary>
        <value>Información de compilación especial para el archivo o <see langword="null" /> si el archivo no contiene información de versión.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si <xref:System.Diagnostics.FileVersionInfo.IsSpecialBuild%2A> es `true`, <xref:System.Diagnostics.FileVersionInfo.SpecialBuild%2A> debe especificar cómo este archivo difiere de la versión estándar del archivo.  
  
   
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación, se imprime la información de versión de compilación especial en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic FileVersionInfo.SpecialBuild Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.SpecialBuild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.SpecialBuild Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.SpecialBuild Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.SpecialBuild Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.SpecialBuild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.FileVersionInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una lista parcial de propiedades de <see cref="T:System.Diagnostics.FileVersionInfo" /> y sus valores.</summary>
        <returns>Lista de las siguientes propiedades de esta clase y sus valores:  
  
 <see cref="P:System.Diagnostics.FileVersionInfo.FileName" />, <see cref="P:System.Diagnostics.FileVersionInfo.InternalName" />, <see cref="P:System.Diagnostics.FileVersionInfo.OriginalFilename" />, <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />, <see cref="P:System.Diagnostics.FileVersionInfo.FileDescription" />, <see cref="P:System.Diagnostics.FileVersionInfo.ProductName" />, <see cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />, <see cref="P:System.Diagnostics.FileVersionInfo.IsDebug" />, <see cref="P:System.Diagnostics.FileVersionInfo.IsPatched" />, <see cref="P:System.Diagnostics.FileVersionInfo.IsPreRelease" />, <see cref="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />, <see cref="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />,  
  
 <see cref="P:System.Diagnostics.FileVersionInfo.Language" />.  
  
 Si el archivo no contenía información de la versión, la lista solo contendrá el nombre del archivo solicitado. Los valores booleanos serán <see langword="false" /> y todas las demás entradas serán <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> para obtener la <xref:System.Diagnostics.FileVersionInfo> para el Bloc de notas. A continuación, llama <xref:System.Diagnostics.FileVersionInfo.ToString%2A> para imprimir una lista de la información de versión de archivo en un cuadro de texto. Este código supone `textBox1` se ha creado una instancia.  
  
 [!code-cpp[Classic FileVersionInfo.ToString Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ToString Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.InternalName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.OriginalFilename" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileDescription" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.Language" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsDebug" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPatched" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPreRelease" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />
      </Docs>
    </Member>
  </Members>
</Type>