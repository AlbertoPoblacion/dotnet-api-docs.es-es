<Type Name="TraceSwitch" FullName="System.Diagnostics.TraceSwitch">
  <Metadata><Meta Name="ms.openlocfilehash" Value="32fcf693d234719f0e19223203ec63d7fc5527dc" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53391943" /></Metadata><TypeSignature Language="C#" Value="public class TraceSwitch : System.Diagnostics.Switch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TraceSwitch extends System.Diagnostics.Switch" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceSwitch" />
  <TypeSignature Language="VB.NET" Value="Public Class TraceSwitch&#xA;Inherits Switch" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceSwitch : System::Diagnostics::Switch" />
  <TypeSignature Language="F#" Value="type TraceSwitch = class&#xA;    inherit Switch" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.Switch</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.SwitchLevel(typeof(System.Diagnostics.TraceLevel))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona un modificador multinivel para controlar la generación de traza y depuración sin recompilar su código.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar un modificador de seguimiento para filtrar mensajes según su importancia. El <xref:System.Diagnostics.TraceSwitch> clase proporciona el <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, y <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> propiedades para probar el nivel del modificador. El <xref:System.Diagnostics.TraceSwitch.Level%2A> propiedad obtiene o establece el modificador <xref:System.Diagnostics.TraceLevel>.  
  
 Puede establecer el nivel de un <xref:System.Diagnostics.TraceSwitch> a través del archivo de configuración de aplicación y, después, use el <xref:System.Diagnostics.TraceSwitch> nivel en la aplicación. Como alternativa, puede crear un <xref:System.Diagnostics.TraceSwitch> en el código y establecer el nivel directamente para instrumentar una sección de código específica.  
  
 Para configurar un <xref:System.Diagnostics.TraceSwitch>, edite el para la aplicación. En este archivo, puede agregar o quitar un modificador, establecer un valor del modificador o borrar todos los modificadores establecidos previamente por la aplicación. El archivo de configuración se debe dar formato similar al ejemplo siguiente:  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="1" />  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
 Esta sección de configuración define un <xref:System.Diagnostics.TraceSwitch> con el <xref:System.Diagnostics.Switch.DisplayName%2A> establecido en `mySwitch`y el <xref:System.Diagnostics.TraceSwitch.Level%2A> establecido en 1, que corresponde al valor de enumeración <xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType>.  
  
> [!NOTE]
>  En la versión 2.0 de .NET Framework, puede utilizar texto para especificar el valor de un modificador. Por ejemplo, `true` para un <xref:System.Diagnostics.BooleanSwitch> o el texto que representa un valor de enumeración, como `Error` para un <xref:System.Diagnostics.TraceSwitch>. La línea `<add name="mySwitch" value="Error" />` es equivalente a `<add name="mySwitch" value="1" />`.  
  
 En la aplicación, puede usar el nivel de conmutador configurado mediante la creación de un <xref:System.Diagnostics.TraceSwitch> con el mismo nombre, como se muestra en el ejemplo siguiente:  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/remarks.cpp#3)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/remarks.cs#3)]
 [!code-vb[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/remarks.vb#3)]  
  
 De forma predeterminada, el conmutador <xref:System.Diagnostics.TraceSwitch.Level%2A> propiedad se establece mediante el valor especificado en el archivo de configuración. Si el <xref:System.Diagnostics.TraceSwitch.%23ctor%2A> constructor no puede encontrar la configuración inicial del modificador en el archivo de configuración, el <xref:System.Diagnostics.TraceSwitch.Level%2A> del nuevo, cambie el valor predeterminado es <xref:System.Diagnostics.TraceLevel.Off?displayProperty=nameWithType>.  
  
 Debe habilitar la traza o la depuración para usar un conmutador. La sintaxis siguiente es específica del compilador. Si usa los compiladores que no sean de C# o Visual Basic, consulte la documentación del compilador.  
  
-   Para habilitar la depuración en C#, agregue el `/d:DEBUG` marca a la línea de comandos del compilador al compilar el código, o agregue `#define DEBUG` a la parte superior del archivo. En Visual Basic, agregue el `/d:DEBUG=True` marca a la línea de comandos del compilador.  
  
-   Para habilitar el seguimiento en C#, agregue el `/d:TRACE` marca a la línea de comandos del compilador al compilar el código, o agregue `#define TRACE` a la parte superior del archivo. En Visual Basic, agregue el `/d:TRACE=True` marca a la línea de comandos del compilador.  
  
> [!NOTE]
>  Estos depuración y modificadores de compilador trace no son necesarios cuando se usa el <xref:System.Diagnostics.TraceSwitch> clase de forma aislada. Solo son necesarias en conjunción con <xref:System.Diagnostics.Trace> o <xref:System.Diagnostics.Debug> métodos que se compilan condicionalmente.  
  
 Para obtener más información sobre cómo instrumentar la aplicación, consulte <xref:System.Diagnostics.Debug> y <xref:System.Diagnostics.Trace>. Para obtener más información sobre cómo configurar y usar los modificadores de seguimiento, vea [modificadores de seguimiento](~/docs/framework/debug-trace-profile/trace-switches.md).  
  
> [!NOTE]
>  Para mejorar el rendimiento, puede hacer <xref:System.Diagnostics.TraceSwitch> miembros `static` en su clase.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un nuevo <xref:System.Diagnostics.TraceSwitch> y utiliza el modificador para determinar si se debe imprimir mensajes de error. El modificador se crea en el nivel de clase. `MyMethod` Escribe el primer mensaje de error si el <xref:System.Diagnostics.TraceSwitch.Level%2A> propiedad está establecida en <xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType> o superior. Sin embargo, `MyMethod` no escribe el segundo mensaje de error si el <xref:System.Diagnostics.TraceSwitch.Level%2A> es menor que <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>.  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.BooleanSwitch" />
    <altmember cref="T:System.Diagnostics.TraceLevel" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.TraceSwitch" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSwitch (string displayName, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSwitch(System::String ^ displayName, System::String ^ description);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceSwitch : string * string -&gt; System.Diagnostics.TraceSwitch" Usage="new System.Diagnostics.TraceSwitch (displayName, description)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName">El nombre para mostrar en una interfaz de usuario.</param>
        <param name="description">Descripción del modificador.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.TraceSwitch" /> utilizando el nombre para mostrar y la descripción que se hayan especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para establecer el nivel de su <xref:System.Diagnostics.TraceSwitch>, edite el archivo de configuración que se corresponde con el nombre de la aplicación. En este archivo, puede agregar un conmutador y establezca su valor, quitar un modificador o borrar todos los modificadores establecidos previamente por la aplicación. El archivo de configuración se debe dar formato similar al ejemplo siguiente:  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="1" />  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
> [!NOTE]
>  En la versión 2.0 de .NET Framework, puede utilizar texto para especificar el valor de un modificador. Por ejemplo, `true` para un <xref:System.Diagnostics.BooleanSwitch> o el texto que representa un valor de enumeración, como `Error` para un <xref:System.Diagnostics.TraceSwitch>. La línea `<add name="mySwitch" value="Error" />` es equivalente a `<add name="mySwitch" value="1" />`.  
  
 En la aplicación, puede usar el nivel de conmutador configurado mediante la creación de un <xref:System.Diagnostics.TraceSwitch> con el mismo nombre, como se muestra en el ejemplo siguiente:  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/remarks.cpp#3)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/remarks.cs#3)]
 [!code-vb[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/remarks.vb#3)]  
  
 Cuando el <xref:System.Diagnostics.TraceSwitch.%23ctor%2A> constructor no puede encontrar la configuración inicial del modificador en el archivo de configuración, el <xref:System.Diagnostics.TraceSwitch.Level%2A> propiedad del nuevo modificador se establece en <xref:System.Diagnostics.TraceLevel.Off?displayProperty=nameWithType>.  
  
 El <xref:System.Diagnostics.TraceSwitch> clase proporciona el <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, y <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> propiedades para probar la <xref:System.Diagnostics.TraceSwitch.Level%2A> del conmutador. El <xref:System.Diagnostics.TraceSwitch.Level%2A> propiedad obtiene o establece el modificador <xref:System.Diagnostics.TraceLevel>.  
  
> [!NOTE]
>  Para mejorar el rendimiento, puede hacer <xref:System.Diagnostics.TraceSwitch> miembros `static` en su clase.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un nuevo <xref:System.Diagnostics.TraceSwitch> y utiliza el modificador para determinar si se debe imprimir mensajes de error. El modificador se crea en el nivel de clase. `MyMethod` Escribe el primer mensaje de error si el <xref:System.Diagnostics.TraceSwitch.Level%2A> propiedad está establecida en <xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType> o superior. Sin embargo, `MyMethod` no escribe el segundo mensaje de error si el <xref:System.Diagnostics.TraceSwitch.Level%2A> es menor que <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>.  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSwitch (string displayName, string description, string defaultSwitchValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description, string defaultSwitchValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String, defaultSwitchValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSwitch(System::String ^ displayName, System::String ^ description, System::String ^ defaultSwitchValue);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceSwitch : string * string * string -&gt; System.Diagnostics.TraceSwitch" Usage="new System.Diagnostics.TraceSwitch (displayName, description, defaultSwitchValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="defaultSwitchValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName">El nombre para mostrar en una interfaz de usuario.</param>
        <param name="description">Descripción del modificador.</param>
        <param name="defaultSwitchValue">Valor predeterminado del modificador.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.TraceSwitch" /> utilizando el nombre para mostrar, la descripción y el valor predeterminado del modificador que se hayan especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `displayName` parámetro se usa para establecer el valor de la <xref:System.Diagnostics.Switch.DisplayName%2A> propiedad, el `description` parámetro se usa para establecer el valor de la <xref:System.Diagnostics.Switch.Description%2A> propiedad y el `defaultSwitchValue` parámetro se guarda como un campo y se usan para inicializar el <xref:System.Diagnostics.Switch.Value%2A>propiedad en la primera referencia. Consulte la <xref:System.Diagnostics.TraceSwitch.%23ctor%28System.String%2CSystem.String%29> constructor para obtener más información y un ejemplo de código.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceLevel Level { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.TraceLevel Level" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSwitch.Level" />
      <MemberSignature Language="VB.NET" Value="Public Property Level As TraceLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceLevel Level { System::Diagnostics::TraceLevel get(); void set(System::Diagnostics::TraceLevel value); };" />
      <MemberSignature Language="F#" Value="member this.Level : System.Diagnostics.TraceLevel with get, set" Usage="System.Diagnostics.TraceSwitch.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nivel de seguimiento que determina los mensajes que permite el modificador.</summary>
        <value>Uno de los <see cref="T:System.Diagnostics.TraceLevel" /> valores que especifica el nivel de mensajes que se permite el modificador.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para establecer el nivel de su <xref:System.Diagnostics.TraceSwitch>, edite el archivo de configuración que se corresponde con el nombre de la aplicación. En este archivo, puede agregar un conmutador y establezca su valor, quitar un modificador o borrar todos los modificadores establecidos previamente por la aplicación. El archivo de configuración se debe dar formato similar al ejemplo siguiente:  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="0" />  
      <add name="myNewSwitch" value="3" />  
      <remove name="mySwitch" />  
      <clear/>  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
> [!NOTE]
>  En la versión 2.0 de .NET Framework, puede utilizar texto para especificar el valor de un modificador. Por ejemplo, `true` para un <xref:System.Diagnostics.BooleanSwitch> o el texto que representa un valor de enumeración, como `Error` para un <xref:System.Diagnostics.TraceSwitch>. La línea `<add name="mySwitch" value="Error" />` es equivalente a `<add name="mySwitch" value="1" />`.  
  
 Cuando el <xref:System.Diagnostics.TraceSwitch.%23ctor%2A> constructor no puede encontrar la configuración inicial del modificador en el archivo de configuración, el <xref:System.Diagnostics.TraceSwitch.Level%2A> propiedad del nuevo modificador se establece en <xref:System.Diagnostics.TraceLevel.Off?displayProperty=nameWithType>.  
  
 Configuración de esta propiedad se actualiza el <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, y <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> propiedades para reflejar el nuevo valor.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un nuevo <xref:System.Diagnostics.TraceSwitch> y utiliza el modificador para determinar si se debe imprimir mensajes de error. El modificador se crea en el nivel de clase. `MyMethod` Escribe el primer mensaje de error si el <xref:System.Diagnostics.TraceSwitch.Level%2A> propiedad está establecida en <xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType> o superior. Sin embargo, `MyMethod` no escribe el segundo mensaje de error si el <xref:System.Diagnostics.TraceSwitch.Level%2A> es menor que <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>.  
  
 [!code-cpp[Classic TraceSwitch.Level Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.Level Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.Level Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.Level Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.Level Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.Level Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Diagnostics.TraceSwitch.Level" /> está establecida en un valor que no es uno de los valores de <see cref="T:System.Diagnostics.TraceLevel" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para trabajar con código no administrado. Enumeración asociada:  <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</permission>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="OnSwitchSettingChanged">
      <MemberSignature Language="C#" Value="protected override void OnSwitchSettingChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSwitchSettingChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSwitch.OnSwitchSettingChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSwitchSettingChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSwitchSettingChanged();" />
      <MemberSignature Language="F#" Value="override this.OnSwitchSettingChanged : unit -&gt; unit" Usage="traceSwitch.OnSwitchSettingChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Actualiza y corrige el nivel de este modificador.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Diagnostics.TraceSwitch.OnSwitchSettingChanged%2A> método se usa .NET Framework para validar y corregir el valor de un modificador inicializado mediante un archivo de configuración. Se escribe un mensaje a todos los agentes de escucha de seguimiento si el valor del modificador especificado en el archivo de configuración no está definido por el <xref:System.Diagnostics.TraceLevel> enumeración y el conmutador se establece en un valor definido.  
  
 Si intentas en el código para establecer el <xref:System.Diagnostics.TraceSwitch.Level%2A> propiedad con un valor que no está definido por el <xref:System.Diagnostics.TraceLevel> enumeración, un <xref:System.ArgumentException> es una excepción.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected override void OnValueChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValueChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSwitch.OnValueChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValueChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValueChanged();" />
      <MemberSignature Language="F#" Value="override this.OnValueChanged : unit -&gt; unit" Usage="traceSwitch.OnValueChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Establece la propiedad <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> en el entero equivalente de la propiedad <see cref="P:System.Diagnostics.Switch.Value" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se llama internamente cuando el <xref:System.Diagnostics.Switch.Value%2A> propiedad de los cambios del conmutador. El método garantiza que las propiedades relacionadas con el valor del modificador reflejan el nuevo valor.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Para invalidar esta propiedad, convierta el valor de cadena de la <see cref="P:System.Diagnostics.Switch.Value" /> propiedad a binario y, a continuación, establezca el <see cref="P:System.Diagnostics.TraceSwitch.Level" /> propiedad.</para></block>
      </Docs>
    </Member>
    <Member MemberName="TraceError">
      <MemberSignature Language="C#" Value="public bool TraceError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TraceError" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSwitch.TraceError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TraceError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TraceError : bool" Usage="System.Diagnostics.TraceSwitch.TraceError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el modificador permite mensajes de control de errores.</summary>
        <value><see langword="true" /> si la propiedad <see cref="P:System.Diagnostics.TraceSwitch.Level" /> está establecida en <see cref="F:System.Diagnostics.TraceLevel.Error" />, <see cref="F:System.Diagnostics.TraceLevel.Warning" />, <see cref="F:System.Diagnostics.TraceLevel.Info" /> o <see cref="F:System.Diagnostics.TraceLevel.Verbose" />; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar el <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, y <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> propiedades junto con el <xref:System.Diagnostics.Debug> y <xref:System.Diagnostics.Trace> emitir todos los mensajes con una importancia especificado o mayor que las clases. Cuando el <xref:System.Diagnostics.TraceSwitch.Level%2A> propiedad está establecida en la mayor importancia, <xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType>, <xref:System.Diagnostics.TraceLevel.Error> , se emiten sólo los mensajes de control de errores.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un nuevo <xref:System.Diagnostics.TraceSwitch> y utiliza el modificador para determinar si se deben emitir los mensajes de error. El modificador se crea en el nivel de clase. `MyMethod` Escribe el primer mensaje de error si el <xref:System.Diagnostics.TraceSwitch.Level%2A> propiedad está establecida en <xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType> o superior. Sin embargo, `MyMethod` no escribe el segundo mensaje de error si el <xref:System.Diagnostics.TraceSwitch.Level%2A> es menor que <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>.  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceInfo">
      <MemberSignature Language="C#" Value="public bool TraceInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TraceInfo" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSwitch.TraceInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TraceInfo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TraceInfo : bool" Usage="System.Diagnostics.TraceSwitch.TraceInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el modificador permite mensajes informativos.</summary>
        <value><see langword="true" /> si la propiedad <see cref="P:System.Diagnostics.TraceSwitch.Level" /> está establecida en <see cref="F:System.Diagnostics.TraceLevel.Info" /> o <see cref="F:System.Diagnostics.TraceLevel.Verbose" />; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar el <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, y <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> propiedades junto con el <xref:System.Diagnostics.Debug> y <xref:System.Diagnostics.Trace> emitir todos los mensajes con una importancia especificado o mayor que las clases. Cuando el <xref:System.Diagnostics.TraceSwitch.Level%2A> propiedad está establecida en <xref:System.Diagnostics.TraceLevel.Warning?displayProperty=nameWithType>, se emiten mensajes de control de errores, advertencias y mensajes informativos.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un nuevo <xref:System.Diagnostics.TraceSwitch> y utiliza el modificador para determinar si se deben emitir los mensajes de error. El modificador se crea en el nivel de clase. `MyMethod` Escribe el primer mensaje de error si el <xref:System.Diagnostics.TraceSwitch.Level%2A> propiedad está establecida en <xref:System.Diagnostics.TraceLevel.Info?displayProperty=nameWithType> o superior. Sin embargo, `MyMethod` no escribe el segundo mensaje de error si el <xref:System.Diagnostics.TraceSwitch.Level%2A> es menor que <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>.  
  
 [!code-cpp[Classic TraceSwitch.TraceInfo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceInfo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceInfo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceInfo Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceInfo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceInfo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceVerbose">
      <MemberSignature Language="C#" Value="public bool TraceVerbose { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TraceVerbose" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSwitch.TraceVerbose" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceVerbose As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TraceVerbose { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TraceVerbose : bool" Usage="System.Diagnostics.TraceSwitch.TraceVerbose" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el modificador permite todos los mensajes.</summary>
        <value><see langword="true" /> si la propiedad <see cref="P:System.Diagnostics.TraceSwitch.Level" /> está establecida en <see cref="F:System.Diagnostics.TraceLevel.Verbose" />; de lo contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar el <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, y <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> propiedades junto con el <xref:System.Diagnostics.Debug> y <xref:System.Diagnostics.Trace> emitir todos los mensajes con una importancia especificado o mayor que las clases. Cuando el <xref:System.Diagnostics.TraceSwitch.Level%2A> propiedad está establecida en <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>, se transmiten todos los mensajes de traza y de depuración.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un nuevo <xref:System.Diagnostics.TraceSwitch> y utiliza el modificador para determinar si se deben emitir los mensajes de error. El modificador se crea en el nivel de clase. `MyMethod` los escribe mensajes de error cuando el <xref:System.Diagnostics.TraceSwitch.Level%2A> propiedad está establecida en <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>.  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceWarning">
      <MemberSignature Language="C#" Value="public bool TraceWarning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TraceWarning" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSwitch.TraceWarning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceWarning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TraceWarning { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TraceWarning : bool" Usage="System.Diagnostics.TraceSwitch.TraceWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el modificador permite mensajes de advertencia.</summary>
        <value><see langword="true" /> si la propiedad <see cref="P:System.Diagnostics.TraceSwitch.Level" /> está establecida en <see cref="F:System.Diagnostics.TraceLevel.Warning" />, <see cref="F:System.Diagnostics.TraceLevel.Info" /> o <see cref="F:System.Diagnostics.TraceLevel.Verbose" />; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar el <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, y <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> propiedades junto con el <xref:System.Diagnostics.Debug> y <xref:System.Diagnostics.Trace> emitir todos los mensajes con una importancia especificado o mayor que las clases. Cuando el <xref:System.Diagnostics.TraceSwitch.Level%2A> propiedad está establecida en <xref:System.Diagnostics.TraceLevel.Warning?displayProperty=nameWithType>, se emiten advertencias y mensajes de control de errores.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un nuevo <xref:System.Diagnostics.TraceSwitch> y utiliza el modificador para determinar si se deben emitir los mensajes de error. El modificador se crea en el nivel de clase. `MyMethod` Escribe el primer mensaje de error si el <xref:System.Diagnostics.TraceSwitch.Level%2A> propiedad está establecida en <xref:System.Diagnostics.TraceLevel.Warning?displayProperty=nameWithType> o superior. Sin embargo, `MyMethod` realiza no escritura el segundo mensaje de error cuando el <xref:System.Diagnostics.TraceSwitch.Level%2A> es menor que <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>.  
  
 [!code-cpp[Classic TraceSwitch.TraceWarning Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceWarning Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceWarning Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceWarning Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceWarning Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceWarning Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
  </Members>
</Type>