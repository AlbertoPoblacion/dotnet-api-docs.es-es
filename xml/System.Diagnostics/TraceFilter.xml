<Type Name="TraceFilter" FullName="System.Diagnostics.TraceFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ca1e3c5e1752dd5229800a883262885ed83e3515" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36673794" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TraceFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TraceFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceFilter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TraceFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceFilter abstract" />
  <TypeSignature Language="F#" Value="type TraceFilter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="bfad0-101">Proporciona la clase base para las implementaciones de los filtros de seguimiento.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bfad0-101">Provides the base class for trace filter implementations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfad0-102">Los filtros de seguimiento pueden usarse por los agentes de escucha de seguimiento para proporcionar una capa adicional de filtrado más allá de la proporcionada por los modificadores de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="bfad0-102">Trace filters can be used by trace listeners to provide an extra layer of filtering beyond that provided by trace switches.</span></span> <span data-ttu-id="bfad0-103">El filtro de seguimiento para un agente de escucha de seguimiento puede encontrarse en el agente de escucha <xref:System.Diagnostics.TraceListener.Filter%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="bfad0-103">The trace filter for a trace listener can be found in the listener's <xref:System.Diagnostics.TraceListener.Filter%2A> property.</span></span> <span data-ttu-id="bfad0-104">Modificadores de seguimiento determinan si es un seguimiento para enviarse a los agentes de escucha de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="bfad0-104">Trace switches determine if a trace is to be sent to the trace listeners.</span></span> <span data-ttu-id="bfad0-105">Los filtros de seguimiento permiten a los agentes de escucha de seguimiento individuales determinar si es o no el seguimiento se escriban en el medio de salida asociado.</span><span class="sxs-lookup"><span data-stu-id="bfad0-105">Trace filters allow the individual trace listeners to determine whether or not the trace is to be written to the associated output medium.</span></span> <span data-ttu-id="bfad0-106">Por ejemplo, según lo determinado por cada filtro de seguimiento, se puede escribir un seguimiento en la consola mediante un <xref:System.Diagnostics.ConsoleTraceListener>, pero no en el registro de eventos mediante un <xref:System.Diagnostics.EventLogTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="bfad0-106">For example, as determined by each trace filter, a trace may be written to the console by a <xref:System.Diagnostics.ConsoleTraceListener>, but not to the event log by a <xref:System.Diagnostics.EventLogTraceListener>.</span></span>  
  
 <span data-ttu-id="bfad0-107">Los filtros que heredan de la <xref:System.Diagnostics.TraceFilter> clase puede ser usada por los agentes de escucha de seguimiento que heredan de la <xref:System.Diagnostics.TraceListener> clase para realizar el filtrado de eventos que se está trazando.</span><span class="sxs-lookup"><span data-stu-id="bfad0-107">Filters that inherit from the <xref:System.Diagnostics.TraceFilter> class can be used by trace listeners that inherit from the <xref:System.Diagnostics.TraceListener> class to perform filtering of events being traced.</span></span> <span data-ttu-id="bfad0-108"><xref:System.Diagnostics.TraceFilter> contiene un método único, <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A>, que toma datos de evento y devuelve una marca que indica si el evento debe realizarse un seguimiento.</span><span class="sxs-lookup"><span data-stu-id="bfad0-108"><xref:System.Diagnostics.TraceFilter> contains a single method, <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A>, which takes event data and returns a flag indicating whether the event should be traced.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TraceFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TraceFilter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bfad0-109">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.TraceFilter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfad0-109">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceFilter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldTrace">
      <MemberSignature Language="C#" Value="public abstract bool ShouldTrace (System.Diagnostics.TraceEventCache cache, string source, System.Diagnostics.TraceEventType eventType, int id, string formatOrMessage, object[] args, object data1, object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldTrace(class System.Diagnostics.TraceEventCache cache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string formatOrMessage, object[] args, object data1, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ShouldTrace (cache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, formatOrMessage As String, args As Object(), data1 As Object, data As Object()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ShouldTrace(System::Diagnostics::TraceEventCache ^ cache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ formatOrMessage, cli::array &lt;System::Object ^&gt; ^ args, System::Object ^ data1, cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member ShouldTrace : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] * obj * obj[] -&gt; bool" Usage="traceFilter.ShouldTrace (cache, source, eventType, id, formatOrMessage, args, data1, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="formatOrMessage" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="data1" Type="System.Object" />
        <Parameter Name="data" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="cache">
          <span data-ttu-id="bfad0-110">
            <see cref="T:System.Diagnostics.TraceEventCache" /> que contiene información para el evento de seguimiento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfad0-110">The <see cref="T:System.Diagnostics.TraceEventCache" /> that contains information for the trace event.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="bfad0-111">Nombre del origen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfad0-111">The name of the source.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="bfad0-112">Uno de los valores de <see cref="T:System.Diagnostics.TraceEventType" /> que indican el tipo de evento que provocó el seguimiento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfad0-112">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="bfad0-113">Número del identificador de seguimiento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfad0-113">A trace identifier number.</span>
          </span>
        </param>
        <param name="formatOrMessage">
          <span data-ttu-id="bfad0-114">Formato que se va a usar para escribir una matriz de argumentos especificada por el parámetro <c>args</c> o un mensaje que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfad0-114">Either the format to use for writing an array of arguments specified by the <c>args</c> parameter, or a message to write.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="bfad0-115">Matriz de objetos de argumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfad0-115">An array of argument objects.</span>
          </span>
        </param>
        <param name="data1">
          <span data-ttu-id="bfad0-116">Objeto de datos de seguimiento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfad0-116">A trace data object.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="bfad0-117">Matriz de objetos de datos de seguimiento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfad0-117">An array of trace data objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfad0-118">Cuando se reemplaza en una clase derivada, determina si el agente de escucha de seguimiento debe realizar un seguimiento del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfad0-118">When overridden in a derived class, determines whether the trace listener should trace the event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfad0-119">Es <see langword="true" /> para realizar un seguimiento del evento especificado; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfad0-119">
              <see langword="true" /> to trace the specified event; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bfad0-120">En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> método para indicar el seguimiento debe aparecer cuando el tipo de evento de seguimiento del evento es igual a <xref:System.Diagnostics.TraceEventType.Error?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="bfad0-120">The following code example shows how to override the <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method to indicate tracing should occur when the trace event type of the event is equal to <xref:System.Diagnostics.TraceEventType.Error?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[System.Diagnostics.TraceFilter#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.diagnostics.tracefilter/cpp/source.cpp#2)]
 [!code-csharp[System.Diagnostics.TraceFilter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.tracefilter/cs/source.cs#2)]
 [!code-vb[System.Diagnostics.TraceFilter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.tracefilter/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="bfad0-121">
            <para>Las implementaciones de este método deben devolver <see langword="true" /> si el evento especificado por los parámetros pasados debe realizarse un seguimiento. En caso contrario, el método debe devolver <see langword="false" />. Por ejemplo, debe inspeccionar un filtro que permite solo eventos de error que pasen al agente de escucha el <paramref name="eventType" /> parámetro y valor devuelto <see langword="true" /> si el nivel de tipo de evento de seguimiento se establece en <see cref="F:System.Diagnostics.TraceEventType.Error" /> o superior; en caso contrario, debe devolver <see langword="false" />.  Las implementaciones del método deben estar preparadas para afrontar <see langword="null" /> en los siguientes parámetros: <paramref name="args" />, <paramref name="data1" />, <paramref name="data" />, <paramref name="formatOrMessage" />, y <paramref name="cache" />. Si el valor del parámetro es <see langword="null" />, el parámetro no forma parte del evento. Por ejemplo, si la <paramref name="args" /> parámetro es <see langword="null" />, significa que el evento no tiene ningún argumento. Si el <paramref name="data" /> parámetro es <see langword="null" />, a continuación, hay uno o ningún objeto de datos. Si hay un objeto de datos, se encontrará en el <paramref name="data1" /> parámetro. Es el motivo de la distinción entre un objeto de datos único y una matriz de objetos de datos de rendimiento. No hay ninguna razón para crear una matriz de objetos si solo se realiza un seguimiento de un objeto, lo cual suele ser el caso. Si el <paramref name="data" /> parámetro no es <see langword="null" />, <paramref name="data1" /> parámetro no debe ser también <see langword="null" />.  Se garantiza que la <paramref name="source" /> parámetro no es <see langword="null" /> y no una cadena vacía ("").  Las implementaciones del método pueden producir opcionalmente las excepciones siguientes:- <see cref="T:System.ArgumentNullException" /> si <paramref name="source" /> es <see langword="null" />.  - <see cref="T:System.ArgumentException" /> si <paramref name="eventType" /> no es uno de los <see cref="T:System.Diagnostics.TraceEventType" /> valores.  -Excepciones no relacionada con la implementación del método. Por ejemplo, un <see cref="T:System.Threading.ThreadAbortException" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bfad0-121">
              <para>Implementations of this method should return <see langword="true" /> if the event specified by the passed parameters should be traced. Otherwise the method should return <see langword="false" />. For example, a filter that allows only error events to pass through to the listener should inspect the <paramref name="eventType" /> parameter and return <see langword="true" /> if the trace event type level is set to <see cref="F:System.Diagnostics.TraceEventType.Error" /> or greater; otherwise, it should return <see langword="false" />.  Implementations of the method should be prepared to handle <see langword="null" /> in the following parameters: <paramref name="args" />, <paramref name="data1" />, <paramref name="data" />, <paramref name="formatOrMessage" />, and <paramref name="cache" />. If the parameter value is <see langword="null" />, the parameter is not part of the event. For example, if the <paramref name="args" /> parameter is <see langword="null" />, it means that the event does not have any arguments. If the <paramref name="data" /> parameter is <see langword="null" />, then there are either one or no data objects. If there is one data object, it will be found in the <paramref name="data1" /> parameter. The reason for the distinction between a single data object and an array of data objects is for performance. There is no reason to create an object array if only one object is traced, as is normally the case. If the <paramref name="data" /> parameter is not <see langword="null" />, the <paramref name="data1" /> parameter must also not be <see langword="null" />.  It is guaranteed that the <paramref name="source" /> parameter is not <see langword="null" /> and not an empty string ("").  Implementations of the method can optionally throw the following exceptions:  -   <see cref="T:System.ArgumentNullException" /> if <paramref name="source" /> is <see langword="null" />.  -   <see cref="T:System.ArgumentException" /> if <paramref name="eventType" /> is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> values.  -   Exceptions unrelated to the implementation of the method. For example, a <see cref="T:System.Threading.ThreadAbortException" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>