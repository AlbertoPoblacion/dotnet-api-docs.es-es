<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Trace.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac553986de117879ad493748899ad8e6d6c635f0b29.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">53986de117879ad493748899ad8e6d6c635f0b29</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Trace">
          <source>Provides a set of methods and properties that help you trace the execution of your code.</source>
          <target state="translated">Proporciona un conjunto de métodos y propiedades que ayudan a realizar un seguimiento del código.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Trace">
          <source>This class cannot be inherited.</source>
          <target state="translated">Esta clase no puede heredarse.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>You can use the properties and methods in the <ph id="ph1">&lt;xref:System.Diagnostics.Trace&gt;</ph> class to instrument release builds.</source>
          <target state="translated">Puede usar las propiedades y métodos en el <ph id="ph1">&lt;xref:System.Diagnostics.Trace&gt;</ph> compilaciones de clase para la versión de instrumentación.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>Instrumentation allows you to monitor the health of your application running in real-life settings.</source>
          <target state="translated">Instrumentación le permite supervisar el estado de la aplicación que se ejecuta en la configuración de la vida real.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>Tracing helps you isolate problems and fix them without disturbing a running system.</source>
          <target state="translated">La traza ayuda a aislar los problemas y corregirlos sin interrumpir un sistema en ejecución.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>This class provides methods to display an <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph> dialog box, and to emit an assertion that will always <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Fail%2A&gt;</ph>.</source>
          <target state="translated">Esta clase proporciona métodos para mostrar un <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph> cuadro de diálogo y para emitir una aserción que siempre <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Fail%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>This class provides write methods in the following variations: <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Write%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace.WriteLine%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Trace.WriteIf%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Diagnostics.Trace.WriteLineIf%2A&gt;</ph>.</source>
          <target state="translated">Esta clase proporciona métodos de escritura en las siguientes variaciones: <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Write%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace.WriteLine%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Trace.WriteIf%2A&gt;</ph>, y <ph id="ph4">&lt;xref:System.Diagnostics.Trace.WriteLineIf%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.BooleanSwitch&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> classes provide means to dynamically control the tracing output.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Diagnostics.BooleanSwitch&gt;</ph> y <ph id="ph2">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> clases proporcionan medios para controlar de forma dinámica los resultados del seguimiento.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>You can modify the values of these switches without recompiling your application.</source>
          <target state="translated">Puede modificar los valores de estos modificadores sin volver a compilar la aplicación.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>For information on using the configuration file to set a switch, see the <ph id="ph1">&lt;xref:System.Diagnostics.Switch&gt;</ph> class and the <bpt id="p1">[</bpt>How to: Create, Initialize and Configure Trace Switches<ept id="p1">](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md)</ept> topic.</source>
          <target state="translated">Para obtener información sobre cómo utilizar el archivo de configuración para establecer un modificador, vea la <ph id="ph1">&lt;xref:System.Diagnostics.Switch&gt;</ph> clase y la <bpt id="p1">[</bpt>Cómo: crear, inicializar y configurar modificadores de seguimiento<ept id="p1">](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md)</ept> tema.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>You can customize the tracing output's target by adding <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances to or removing instances from the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">Puede personalizar el destino de los resultados de la traza agregando <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instancias o quitar instancias de la <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection is shared by both the <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> and the <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph> classes; adding a trace listener to either class adds the listener to both.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección comparten ambos el <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> y <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph> clases; agregar un agente de escucha de seguimiento a cualquier clase agrega el agente de escucha en ambos.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>By default, trace output is emitted using the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> class.</source>
          <target state="translated">De forma predeterminada, los resultados de seguimiento se emiten mediante el <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>Adding a trace listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</source>
          <target state="translated">Agregar un agente de escucha de seguimiento para el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección puede provocar una excepción que se produzca durante la traza, si un recurso utilizado por el agente de escucha de seguimiento no está disponible.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</source>
          <target state="translated">Las condiciones y la excepción producida dependen el agente de escucha de seguimiento y no se pueden enumerar en este tema.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>It may be useful to place calls to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace&gt;</ph> methods in <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> blocks to detect and handle any exceptions from trace listeners.</source>
          <target state="translated">Puede ser útil realizar llamadas a la <ph id="ph1">&lt;xref:System.Diagnostics.Trace&gt;</ph> métodos en <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> bloques para detectar y controlar las excepciones de los agentes de escucha de seguimiento.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>If you add trace listeners to partially trusted code, you will get a <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> exception, because adding trace listeners requires <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode&gt;</ph> permission.</source>
          <target state="translated">Si agrega los agentes de escucha de seguimiento al código de confianza parcial, obtendrá un <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> excepción, porque agregar agentes de escucha de seguimiento requiere <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode&gt;</ph> permiso.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>To trace partially trusted code that is running in a sandbox in Visual Studio, do not add trace listeners.</source>
          <target state="translated">Para realizar el seguimiento de código de confianza parcial que se ejecuta en un espacio aislado en Visual Studio, no agregue los agentes de escucha de seguimiento.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>Instead, view the <ph id="ph1">&lt;xref:System.Diagnostics.Trace&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> messages in the <bpt id="p1">**</bpt>Output<ept id="p1">**</ept> window.</source>
          <target state="translated">En su lugar, ver el <ph id="ph1">&lt;xref:System.Diagnostics.Trace&gt;</ph> y <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> mensajes en el <bpt id="p1">**</bpt>salida<ept id="p1">**</ept> ventana.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Trace&gt;</ph> class provides properties to get or set the level of <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Indent%2A&gt;</ph>, the <ph id="ph3">&lt;xref:System.Diagnostics.Trace.IndentSize%2A&gt;</ph>, and whether to <ph id="ph4">&lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</ph> after each write.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Diagnostics.Trace&gt;</ph> clase proporciona propiedades para obtener o establecer el nivel de <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Indent%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Trace.IndentSize%2A&gt;</ph>y si se va a <ph id="ph4">&lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</ph> después de cada escritura.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>To set the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Trace.IndentSize%2A&gt;</ph> for <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph>, you can edit the configuration file that corresponds to the name of your application.</source>
          <target state="translated">Para establecer el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Diagnostics.Trace.IndentSize%2A&gt;</ph> para <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph>, puede editar el archivo de configuración que se corresponde con el nombre de la aplicación.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>The configuration file should be formatted like the following example:</source>
          <target state="translated">El archivo de configuración debe tener el formato similar al ejemplo siguiente:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> attribute is applied to the methods of <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> atributo se aplica a los métodos de <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>Compilers that support <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> ignore calls to these methods unless "TRACE" is defined as a conditional compilation symbol.</source>
          <target state="translated">Los compiladores que admiten <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> omitir las llamadas a estos métodos a menos que se defina "TRACE" como símbolo de compilación condicional.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>Refer to a compiler's documentation to determine whether <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> is supported and the syntax for defining a conditional compilation symbol.</source>
          <target state="translated">Consulte la documentación del compilador para determinar si <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> se admite y la sintaxis para definir un símbolo de compilación condicional.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>In Visual Studio projects, by default, the "DEBUG" conditional compilation symbol is defined for debug builds, and the "TRACE" symbol is defined for both debug and release builds.</source>
          <target state="translated">En los proyectos de Visual Studio, de forma predeterminada, se define el símbolo de compilación condicional "DEBUG" para las compilaciones de depuración y se define el símbolo "TRACE" para las versiones de depuración y versiones de lanzamiento.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>For information about how to disable this behavior, see the Visual Studio documentation.</source>
          <target state="translated">Para obtener información acerca de cómo deshabilitar este comportamiento, consulte la documentación de Visual Studio.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>To define the "TRACE" conditional compilation symbol in C#, add the <ph id="ph1">`/d:TRACE`</ph> option to the compiler command line when you compile your code using a command line, or add <ph id="ph2">`#define TRACE`</ph> to the top of your file.</source>
          <target state="translated">Para definir el símbolo de compilación condicional "TRACE" en C#, agregue el <ph id="ph1">`/d:TRACE`</ph> opción a la línea de comandos del compilador al compilar el código mediante una línea de comandos o agregar <ph id="ph2">`#define TRACE`</ph> a la parte superior del archivo.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>In Visual Basic, add the <ph id="ph1">`/d:TRACE=True`</ph> option to the compiler command line or add <ph id="ph2">`#Const TRACE=True`</ph> to the file.</source>
          <target state="translated">En Visual Basic, agregue el <ph id="ph1">`/d:TRACE=True`</ph> opción a la línea de comandos del compilador o agregue <ph id="ph2">`#Const TRACE=True`</ph> al archivo.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> is not supported by the C++ compiler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> no se admite el compilador de C++.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>To provide equivalent functionality, you must enclose calls to the methods of <ph id="ph1">&lt;xref:System.Diagnostics.Trace&gt;</ph> in an <ph id="ph2">`#if defined(TRACE) ... #endif`</ph> block, and add the <ph id="ph3">`/DTRACE`</ph> option to the compiler command line or add <ph id="ph4">`#define TRACE`</ph> to the file.</source>
          <target state="translated">Para proporcionar una funcionalidad equivalente, es necesario incluir llamadas a los métodos de <ph id="ph1">&lt;xref:System.Diagnostics.Trace&gt;</ph> en un <ph id="ph2">`#if defined(TRACE) ... #endif`</ph> bloquear y agregue el <ph id="ph3">`/DTRACE`</ph> opción a la línea de comandos del compilador o agregue <ph id="ph4">`#define TRACE`</ph> al archivo.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Diagnostics.Trace&gt;</ph> to indicate the beginning and the end of a program's execution.</source>
          <target state="translated">En el ejemplo siguiente se utiliza <ph id="ph1">&lt;xref:System.Diagnostics.Trace&gt;</ph> para indicar el principio y al final de la ejecución de un programa.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>The example also uses the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Indent%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Unindent%2A?displayProperty=nameWithType&gt;</ph> methods to distinguish the tracing output.</source>
          <target state="translated">El ejemplo también se utiliza la <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Indent%2A?displayProperty=nameWithType&gt;</ph> y <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Unindent%2A?displayProperty=nameWithType&gt;</ph> métodos para distinguir los resultados del seguimiento.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>For a more complete example of the use of <ph id="ph1">&lt;xref:System.Diagnostics.Trace&gt;</ph>, see <bpt id="p1">[</bpt>How to: Add Trace Statements to Application Code<ept id="p1">](~/docs/framework/debug-trace-profile/how-to-add-trace-statements-to-application-code.md)</ept>.</source>
          <target state="translated">Para obtener un ejemplo más completo del uso de <ph id="ph1">&lt;xref:System.Diagnostics.Trace&gt;</ph>, consulte <bpt id="p1">[</bpt>Cómo: agregar instrucciones de seguimiento al código de la aplicación<ept id="p1">](~/docs/framework/debug-trace-profile/how-to-add-trace-statements-to-application-code.md)</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>for operating with unmanaged code.</source>
          <target state="translated">para trabajar con código no administrado.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Acción de seguridad: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Trace">
          <source>This type is thread safe.</source>
          <target state="translated">Este tipo es seguro para la ejecución de subprocesos.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Trace">
          <source>Checks for a condition; if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, outputs messages and displays a message box that shows the call stack.</source>
          <target state="translated">Comprueba una condición; si la condición es <ph id="ph1">&lt;see langword="false" /&gt;</ph>, genera mensajes y muestra un cuadro de mensaje que muestra la pila de llamadas.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Assert(System.Boolean)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">Expresión condicional que se va a evaluar.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Assert(System.Boolean)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, a failure message is not sent and the message box is not displayed.</source>
          <target state="translated">Si la condición es <ph id="ph1">&lt;see langword="true" /&gt;</ph>, no se envía el mensaje de error y no se muestra el cuadro de mensaje.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Assert(System.Boolean)">
          <source>Checks for a condition; if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, displays a message box that shows the call stack.</source>
          <target state="translated">Comprueba una condición; si la condición es <ph id="ph1">&lt;see langword="false" /&gt;</ph>, aparece un cuadro de mensaje que muestra la pila de llamadas.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> method if you want to do assertions in release builds.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> método si desea realizar aserciones en versión compilaciones.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> method works only in debug builds.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> método funciona únicamente en las compilaciones de depuración.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Assertions in Managed Code<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>aserciones en el código administrado<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean)">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%28System.Boolean%29&gt;</ph> method is used to identify logic errors during program development.</source>
          <target state="translated">Normalmente, el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%28System.Boolean%29&gt;</ph> método se usa para identificar errores lógicos durante el desarrollo del programa.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%28System.Boolean%29&gt;</ph> evaluates the condition.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%28System.Boolean%29&gt;</ph> evalúa la condición.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean)">
          <source>If the result is <ph id="ph1">`false`</ph>, it sends a failure message to the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">Si el resultado es <ph id="ph1">`false`</ph>, envía un mensaje de error para el <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">Este comportamiento se puede personalizar mediante la adición de un <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> a, o quite uno de los <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean)">
          <source>When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</source>
          <target state="translated">Cuando la aplicación se ejecuta en modo de interfaz de usuario, muestra un cuadro de mensaje que muestra la pila de llamadas con números de archivo y la línea.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean)">
          <source>The message box contains three buttons: <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Retry<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Ignore<ept id="p3">**</ept>.</source>
          <target state="translated">El cuadro de mensaje contiene tres botones: <bpt id="p1">**</bpt>anular<ept id="p1">**</ept>, <bpt id="p2">**</bpt>vuelva a intentar<ept id="p2">**</ept>, y <bpt id="p3">**</bpt>omitir<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean)">
          <source>Clicking the <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept> button terminates the application.</source>
          <target state="translated">Al hacer clic en el <bpt id="p1">**</bpt>anular<ept id="p1">**</ept> botón finaliza la aplicación.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean)">
          <source>Clicking <bpt id="p1">**</bpt>Retry<ept id="p1">**</ept> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</source>
          <target state="translated">Haga clic en <bpt id="p1">**</bpt>vuelva a intentar<ept id="p1">**</ept> envía el código en el depurador si la aplicación se está ejecutando en un depurador u ofrece la posibilidad de abrir un depurador si no lo está.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean)">
          <source>Clicking <bpt id="p1">**</bpt>Ignore<ept id="p1">**</ept> continues with the next instruction in the code.</source>
          <target state="translated">Haga clic en <bpt id="p1">**</bpt>omitir<ept id="p1">**</ept> continúa con la siguiente instrucción en el código.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean)">
          <source>The display of the message box depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">La presentación del cuadro de mensaje depende de la presencia de la <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> no está en el <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> no se muestra la colección, el cuadro de mensaje.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> se puede quitar el <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>borrar<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, el <bpt id="p2">[</bpt> <ph id="ph4">&amp;lt;</ph>quitar<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, o mediante una llamada a la <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> método en el <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> propiedad (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean)">
          <source>You can change the behavior of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> in the configuration file that corresponds to the name of your application.</source>
          <target state="translated">Puede cambiar el comportamiento de la <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> en el archivo de configuración que se corresponde con el nombre de la aplicación.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean)">
          <source>In this file, you can enable and disable the assert message box or set the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">En este archivo, puede habilitar y deshabilitar el cuadro de mensaje de aserción o establecer el <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean)">
          <source>The configuration file should be formatted as follows:</source>
          <target state="translated">El archivo de configuración debe tener el formato siguiente:</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean)">
          <source>The following example creates an index for an array.</source>
          <target state="translated">En el ejemplo siguiente se crea un índice para una matriz.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean)">
          <source>Then some action is performed that sets the value of the index.</source>
          <target state="translated">A continuación, se realiza alguna acción que establece el valor del índice.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean)">
          <source>Next the code calls <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph> to verify the index value is valid.</source>
          <target state="translated">A continuación, el código llama <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph> para comprobar el índice, el valor es válido.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean)">
          <source>If it is not valid, the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph> outputs the call stack.</source>
          <target state="translated">Si no es válido, el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph> envía la pila de llamadas.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">Expresión condicional que se va a evaluar.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the specified message is not sent and the message box is not displayed.</source>
          <target state="translated">Si la condición es <ph id="ph1">&lt;see langword="true" /&gt;</ph>, no se envía el mensaje especificado y no se muestra el cuadro de mensaje.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
          <source>The message to send to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">El mensaje que se va a enviar a la colección <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
          <source>Checks for a condition; if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, outputs a specified message and displays a message box that shows the call stack.</source>
          <target state="translated">Comprueba una condición; si la condición es <ph id="ph1">&lt;see langword="false" /&gt;</ph>, genera un mensaje especificado y muestra un cuadro de mensaje que muestra la pila de llamadas.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> method if you want to do assertions in release builds.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> método si desea realizar aserciones en versión compilaciones.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> method works only in debug builds.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> método funciona únicamente en las compilaciones de depuración.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Assertions in Managed Code<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>aserciones en el código administrado<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29&gt;</ph> method is used to identify logic errors during program development.</source>
          <target state="translated">Normalmente, el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29&gt;</ph> método se usa para identificar errores lógicos durante el desarrollo del programa.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29&gt;</ph> evaluates the condition.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29&gt;</ph> evalúa la condición.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
          <source>If the result is <ph id="ph1">`false`</ph>, it sends the specified diagnostic message to the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">Si el resultado es <ph id="ph1">`false`</ph>, envía el mensaje de diagnóstico especificado en el <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">Este comportamiento se puede personalizar mediante la adición de un <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> a, o quite uno de los <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
          <source>When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</source>
          <target state="translated">Cuando la aplicación se ejecuta en modo de interfaz de usuario, muestra un cuadro de mensaje que muestra la pila de llamadas con números de archivo y la línea.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
          <source>The message box contains three buttons: <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Retry<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Ignore<ept id="p3">**</ept>.</source>
          <target state="translated">El cuadro de mensaje contiene tres botones: <bpt id="p1">**</bpt>anular<ept id="p1">**</ept>, <bpt id="p2">**</bpt>vuelva a intentar<ept id="p2">**</ept>, y <bpt id="p3">**</bpt>omitir<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
          <source>Clicking the <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept> button terminates the application.</source>
          <target state="translated">Al hacer clic en el <bpt id="p1">**</bpt>anular<ept id="p1">**</ept> botón finaliza la aplicación.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
          <source>Clicking <bpt id="p1">**</bpt>Retry<ept id="p1">**</ept> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</source>
          <target state="translated">Haga clic en <bpt id="p1">**</bpt>vuelva a intentar<ept id="p1">**</ept> envía el código en el depurador si la aplicación se está ejecutando en un depurador u ofrece la posibilidad de abrir un depurador si no lo está.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
          <source>Clicking <bpt id="p1">**</bpt>Ignore<ept id="p1">**</ept> continues with the next instruction in the code.</source>
          <target state="translated">Haga clic en <bpt id="p1">**</bpt>omitir<ept id="p1">**</ept> continúa con la siguiente instrucción en el código.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
          <source>The display of the message box depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">La presentación del cuadro de mensaje depende de la presencia de la <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> no está en el <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> no se muestra la colección, el cuadro de mensaje.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> se puede quitar el <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>borrar<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, el <bpt id="p2">[</bpt> <ph id="ph4">&amp;lt;</ph>quitar<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, o mediante una llamada a la <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> método en el <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> propiedad (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
          <source>You can change the behavior of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> in the configuration file that corresponds to the name of your application.</source>
          <target state="translated">Puede cambiar el comportamiento de la <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> en el archivo de configuración que se corresponde con el nombre de la aplicación.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
          <source>In this file, you can enable and disable the assert message box or set the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">En este archivo, puede habilitar y deshabilitar el cuadro de mensaje de aserción o establecer el <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
          <source>The configuration file should be formatted as follows:</source>
          <target state="translated">El archivo de configuración debe tener el formato siguiente:</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
          <source>The following example checks to see that the <ph id="ph1">`type`</ph> parameter is valid.</source>
          <target state="translated">En el ejemplo siguiente se comprueba que el <ph id="ph1">`type`</ph> parámetro es válido.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
          <source>If the <ph id="ph1">`type`</ph> passed in is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph> outputs a message.</source>
          <target state="translated">Si el <ph id="ph1">`type`</ph> pasado es <ph id="ph2">`null`</ph>, el <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph> genera un mensaje.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">Expresión condicional que se va a evaluar.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the specified messages are not sent and the message box is not displayed.</source>
          <target state="translated">Si la condición es <ph id="ph1">&lt;see langword="true" /&gt;</ph>, no se envían los mensaje especificados y no se muestra el cuadro de mensaje.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
          <source>The message to send to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">El mensaje que se va a enviar a la colección <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
          <source>The detailed message to send to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">El mensaje detallado que se va a enviar a la colección <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
          <source>Checks for a condition; if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, outputs two specified messages and displays a message box that shows the call stack.</source>
          <target state="translated">Comprueba una condición; si la condición es <ph id="ph1">&lt;see langword="false" /&gt;</ph>, genera dos mensajes especificados y muestra un cuadro de mensaje que muestra la pila de llamadas.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> method if you want to do assertions in release builds.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> método si desea realizar aserciones en versión compilaciones.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> method works only in debug builds.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> método funciona únicamente en las compilaciones de depuración.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Assertions in Managed Code<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>aserciones en el código administrado<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29&gt;</ph> method is used to identify logic errors during program development.</source>
          <target state="translated">Normalmente, el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29&gt;</ph> método se usa para identificar errores lógicos durante el desarrollo del programa.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph> evaluates the condition.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph> evalúa la condición.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
          <source>If the result is <ph id="ph1">`false`</ph>, it sends the specified diagnostic message and detailed message to the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">Si el resultado es <ph id="ph1">`false`</ph>, envía el mensaje de diagnóstico especificado y el mensaje detallado para el <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">Este comportamiento se puede personalizar mediante la adición de un <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> a, o quite uno de los <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
          <source>When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</source>
          <target state="translated">Cuando la aplicación se ejecuta en modo de interfaz de usuario, muestra un cuadro de mensaje que muestra la pila de llamadas con números de archivo y la línea.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
          <source>The message box contains three buttons: <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Retry<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Ignore<ept id="p3">**</ept>.</source>
          <target state="translated">El cuadro de mensaje contiene tres botones: <bpt id="p1">**</bpt>anular<ept id="p1">**</ept>, <bpt id="p2">**</bpt>vuelva a intentar<ept id="p2">**</ept>, y <bpt id="p3">**</bpt>omitir<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
          <source>Clicking the <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept> button terminates the application.</source>
          <target state="translated">Al hacer clic en el <bpt id="p1">**</bpt>anular<ept id="p1">**</ept> botón finaliza la aplicación.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
          <source>Clicking <bpt id="p1">**</bpt>Retry<ept id="p1">**</ept> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</source>
          <target state="translated">Haga clic en <bpt id="p1">**</bpt>vuelva a intentar<ept id="p1">**</ept> envía el código en el depurador si la aplicación se está ejecutando en un depurador u ofrece la posibilidad de abrir un depurador si no lo está.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
          <source>Clicking <bpt id="p1">**</bpt>Ignore<ept id="p1">**</ept> continues with the next instruction in the code.</source>
          <target state="translated">Haga clic en <bpt id="p1">**</bpt>omitir<ept id="p1">**</ept> continúa con la siguiente instrucción en el código.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
          <source>The display of the message box depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">La presentación del cuadro de mensaje depende de la presencia de la <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> no está en el <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> no se muestra la colección, el cuadro de mensaje.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> se puede quitar el <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>borrar<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, el <bpt id="p2">[</bpt> <ph id="ph4">&amp;lt;</ph>quitar<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, o mediante una llamada a la <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> método en el <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> propiedad (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
          <source>You can change the behavior of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> in the configuration file that corresponds to the name of your application.</source>
          <target state="translated">Puede cambiar el comportamiento de la <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> en el archivo de configuración que se corresponde con el nombre de la aplicación.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
          <source>In this file, you can enable and disable the assert message box or set the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">En este archivo, puede habilitar y deshabilitar el cuadro de mensaje de aserción o establecer el <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
          <source>The configuration file should be formatted as follows:</source>
          <target state="translated">El archivo de configuración debe tener el formato siguiente:</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
          <source>The following example checks to see that the <ph id="ph1">`type`</ph> parameter is valid.</source>
          <target state="translated">En el ejemplo siguiente se comprueba que el <ph id="ph1">`type`</ph> parámetro es válido.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
          <source>If the <ph id="ph1">`type`</ph> passed in is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph> outputs a message.</source>
          <target state="translated">Si el <ph id="ph1">`type`</ph> pasado es <ph id="ph2">`null`</ph>, el <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph> genera un mensaje.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Trace.AutoFlush">
          <source>Gets or sets whether <ph id="ph1">&lt;see cref="M:System.Diagnostics.Trace.Flush" /&gt;</ph> should be called on the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> after every write.</source>
          <target state="translated">Obtiene o establece si se debe llamar a <ph id="ph1">&lt;see cref="M:System.Diagnostics.Trace.Flush" /&gt;</ph> en  debe llamar en los <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> después de cada escritura.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.AutoFlush">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.Flush" /&gt;</ph> is called on the <ph id="ph3">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> after every write; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si se llama a <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.Flush" /&gt;</ph> se en el <ph id="ph3">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> después de cada escritura; en caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.AutoFlush">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.AutoFlush">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Flush%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Close%2A&gt;</ph>.</source>
          <target state="translated">Vaciar la secuencia no hará que vacíe su correspondiente codificador subyacente a menos que se llame explícitamente a <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Flush%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Close%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.AutoFlush">
          <source>Setting <ph id="ph1">&lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">Establecer <ph id="ph1">&lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</ph> a <ph id="ph2">`true`</ph> significa que los datos se vaciarán del búfer en la secuencia, pero el estado del codificador no se vaciará.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.AutoFlush">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">Esto permite al codificador mantener su estado (caracteres parciales) para que sea posible codificar el siguiente bloque de caracteres correctamente.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.AutoFlush">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">Este escenario afecta a UTF8 y UTF7 donde ciertos caracteres sólo pueden codificarse después de que el codificador reciba el carácter o caracteres adyacentes.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.AutoFlush">
          <source>To set the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Trace.IndentSize%2A&gt;</ph> for <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph>, you can also edit the configuration file that corresponds to the name of your application.</source>
          <target state="translated">Para establecer el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Diagnostics.Trace.IndentSize%2A&gt;</ph> para <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph>, también puede editar el archivo de configuración que se corresponde con el nombre de la aplicación.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.AutoFlush">
          <source>The configuration file should be formatted like the following example:</source>
          <target state="translated">El archivo de configuración debe tener el formato similar al ejemplo siguiente:</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.AutoFlush">
          <source>for operating with unmanaged code.</source>
          <target state="translated">para trabajar con código no administrado.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.AutoFlush">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Acción de seguridad: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.AutoFlush">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Close">
          <source>Flushes the output buffer, and then closes the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</source>
          <target state="translated">Vacía el búfer de salida y, a continuación, cierra los <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Close">
          <source>Use this method when the output is going to a file, such as to the <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>.</source>
          <target state="translated">Utilice este método cuando el resultado se vaya a un archivo, como el <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Close">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Flush%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Close%2A&gt;</ph>.</source>
          <target state="translated">Vaciar la secuencia no hará que vacíe su correspondiente codificador subyacente a menos que se llame explícitamente a <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Flush%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Close%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Close">
          <source>Setting <ph id="ph1">&lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">Establecer <ph id="ph1">&lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</ph> a <ph id="ph2">`true`</ph> significa que los datos se vaciarán del búfer en la secuencia, pero el estado del codificador no se vaciará.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Close">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">Esto permite al codificador mantener su estado (caracteres parciales) para que sea posible codificar el siguiente bloque de caracteres correctamente.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Close">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">Este escenario afecta a UTF8 y UTF7 donde ciertos caracteres sólo pueden codificarse después de que el codificador reciba el carácter o caracteres adyacentes.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Close">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> named <ph id="ph2">`myTextListener`</ph>.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> denominado <ph id="ph2">`myTextListener`</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Close">
          <source><ph id="ph1">`myTextListener`</ph> uses a <ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph> called <ph id="ph3">`myOutputWriter`</ph> to write to a file named <ph id="ph4">`TestFile.txt`</ph>.</source>
          <target state="translated"><ph id="ph1">`myTextListener`</ph> usa un <ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph> llama <ph id="ph3">`myOutputWriter`</ph> para escribir en un archivo denominado <ph id="ph4">`TestFile.txt`</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Close">
          <source>The example creates the file, stream and text writer, writes one line of text to the file, and then flushes and closes the output.</source>
          <target state="translated">En el ejemplo se crea el sistema de escritura de archivo, la secuencia y texto, escribe una línea de texto en el archivo y, a continuación, vacía y cierra la salida.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Close">
          <source>for operating with unmanaged code.</source>
          <target state="translated">para trabajar con código no administrado.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Close">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Acción de seguridad: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Close">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Trace.CorrelationManager">
          <source>Gets the correlation manager for the thread for this trace.</source>
          <target state="translated">Obtiene el administrador de correlación para el subproceso de este seguimiento.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.CorrelationManager">
          <source>The <ph id="ph1">&lt;see cref="T:System.Diagnostics.CorrelationManager" /&gt;</ph> object associated with the thread for this trace.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Diagnostics.CorrelationManager" /&gt;</ph> asociado al subproceso de este seguimiento.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.CorrelationManager">
          <source>This is an advanced property that most applications should not have occasion to use.</source>
          <target state="translated">Se trata de una propiedad avanzada que la mayoría de las aplicaciones no debería tener ocasión de utilizar.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.CorrelationManager">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.CorrelationManager&gt;</ph> class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Diagnostics.CorrelationManager&gt;</ph> clase proporciona métodos que se utilizan para almacenar una identidad de operación lógica en un contexto de subproceso enlazados y etiquetar automáticamente cada evento de seguimiento generado por el subproceso con la identidad almacenada.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.CorrelationManager">
          <source>for operating with unmanaged code.</source>
          <target state="translated">para trabajar con código no administrado.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.CorrelationManager">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Acción de seguridad: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.CorrelationManager">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Trace">
          <source>Emits an error message.</source>
          <target state="translated">Emite un mensaje de error.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Fail(System.String)">
          <source>A message to emit.</source>
          <target state="translated">Mensaje que se va a emitir.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Fail(System.String)">
          <source>Emits the specified error message.</source>
          <target state="translated">Emite el mensaje de error especificado.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Fail(System.String)">
          <source>The default behavior for the default trace listener is to output the <ph id="ph1">`message`</ph> parameter to a message box when the application runs in user-interface mode, and to the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances in the <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">El comportamiento predeterminado para el agente de escucha de seguimiento predeterminada consiste en enviar el <ph id="ph1">`message`</ph> parámetro a un cuadro de mensaje cuando la aplicación se ejecuta en modo de interfaz de usuario y, a la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instancias en el <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Fail(System.String)">
          <source>The display of the message box is dependent on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">La presentación del cuadro de mensaje depende de la presencia de la <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Fail(System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> no está en el <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> no se muestra la colección, el cuadro de mensaje.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Fail(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> se puede quitar el <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>borrar<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, el <bpt id="p2">[</bpt> <ph id="ph4">&amp;lt;</ph>quitar<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, o mediante una llamada a la <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> método en el <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> propiedad (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Fail(System.String)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or by removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">Este comportamiento se puede personalizar mediante la adición de un <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> a o quite uno de los <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Fail(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Fail%2A&gt;</ph> method to print a message during exception handling.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Fail%2A&gt;</ph> método para imprimir un mensaje durante el control de excepciones.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Fail(System.String)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Fail%2A&gt;</ph> method in a switch statement.</source>
          <target state="translated">También puede usar el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Fail%2A&gt;</ph> método en una instrucción switch.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Fail(System.String,System.String)">
          <source>A message to emit.</source>
          <target state="translated">Mensaje que se va a emitir.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Fail(System.String,System.String)">
          <source>A detailed message to emit.</source>
          <target state="translated">Mensaje detallado que se va a emitir.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Fail(System.String,System.String)">
          <source>Emits an error message, and a detailed error message.</source>
          <target state="translated">Emite un mensaje de error y un mensaje de error detallado.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Fail(System.String,System.String)">
          <source>The default behavior is for the default trace listener to output the <ph id="ph1">`message`</ph> parameter and the <ph id="ph2">`detailedMessage`</ph> parameter to a message box when the application runs in user-interface mode, and to the <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances in the <ph id="ph4">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">Es el comportamiento predeterminado para que el agente de escucha de seguimiento predeterminado generar el <ph id="ph1">`message`</ph> parámetro y el <ph id="ph2">`detailedMessage`</ph> parámetro a un cuadro de mensaje cuando la aplicación se ejecuta en modo de interfaz de usuario y, a la <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instancias en el <ph id="ph4">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Fail(System.String,System.String)">
          <source>The display of the message box is dependent on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">La presentación del cuadro de mensaje depende de la presencia de la <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Fail(System.String,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> no está en el <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> no se muestra la colección, el cuadro de mensaje.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Fail(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> se puede quitar el <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>borrar<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, el <bpt id="p2">[</bpt> <ph id="ph4">&amp;lt;</ph>quitar<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, o mediante una llamada a la <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> método en el <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> propiedad (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Fail(System.String,System.String)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or by removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">Este comportamiento se puede personalizar mediante la adición de un <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> a o quite uno de los <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Fail(System.String,System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Fail%2A&gt;</ph> method to print a message during exception handling.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Fail%2A&gt;</ph> método para imprimir un mensaje durante el control de excepciones.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Fail(System.String,System.String)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Fail%2A&gt;</ph> method in a switch statement.</source>
          <target state="translated">También puede usar el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Fail%2A&gt;</ph> método en una instrucción switch.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Flush">
          <source>Flushes the output buffer, and causes buffered data to be written to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</source>
          <target state="translated">Vacía el búfer de salida y hace que los datos almacenados en búfer se escriban en el <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Flush">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Flush%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Close%2A&gt;</ph>.</source>
          <target state="translated">Vaciar la secuencia no hará que vacíe su correspondiente codificador subyacente a menos que se llame explícitamente a <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Flush%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Close%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Flush">
          <source>Setting <ph id="ph1">&lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">Establecer <ph id="ph1">&lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</ph> a <ph id="ph2">`true`</ph> significa que los datos se vaciarán del búfer en la secuencia, pero el estado del codificador no se vaciará.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Flush">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">Esto permite al codificador mantener su estado (caracteres parciales) para que sea posible codificar el siguiente bloque de caracteres correctamente.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Flush">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">Este escenario afecta a UTF8 y UTF7 donde ciertos caracteres sólo pueden codificarse después de que el codificador reciba el carácter o caracteres adyacentes.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Flush">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> named <ph id="ph2">`myTextListener`</ph>.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> denominado <ph id="ph2">`myTextListener`</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Flush">
          <source><ph id="ph1">`myTextListener`</ph> uses a <ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph> called <ph id="ph3">`myOutputWriter`</ph> to write to a file named <ph id="ph4">`TestFile.txt`</ph>.</source>
          <target state="translated"><ph id="ph1">`myTextListener`</ph> usa un <ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph> llama <ph id="ph3">`myOutputWriter`</ph> para escribir en un archivo denominado <ph id="ph4">`TestFile.txt`</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Flush">
          <source>The example creates the file, stream and text writer, writes one line of text to the file, and then flushes and closes the output.</source>
          <target state="translated">En el ejemplo se crea el sistema de escritura de archivo, la secuencia y texto, escribe una línea de texto en el archivo y, a continuación, vacía y cierra la salida.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Indent">
          <source>Increases the current <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.IndentLevel" /&gt;</ph> by one.</source>
          <target state="translated">Aumenta el <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.IndentLevel" /&gt;</ph> actual en uno.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Indent">
          <source>The following example increments and decrements the indent level and emits tracing messages.</source>
          <target state="translated">El siguiente ejemplo se aumenta y disminuye el nivel de sangría y se emiten mensajes de seguimiento.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Indent">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Trace.IndentLevel">
          <source>Gets or sets the indent level.</source>
          <target state="translated">Obtiene o establece el nivel de sangría.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.IndentLevel">
          <source>The indent level.</source>
          <target state="translated">Nivel de sangría.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.IndentLevel">
          <source>The default is zero.</source>
          <target state="translated">El valor predeterminado es cero.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.IndentLevel">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Trace.IndentLevel%2A&gt;</ph> property represents the number of times the indent of size <ph id="ph2">&lt;xref:System.Diagnostics.Trace.IndentSize%2A&gt;</ph> is applied.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Diagnostics.Trace.IndentLevel%2A&gt;</ph> propiedad representa el número de veces que la sangría de tamaño <ph id="ph2">&lt;xref:System.Diagnostics.Trace.IndentSize%2A&gt;</ph> se aplica.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.IndentLevel">
          <source>This property is stored on per-thread/per-request basis.</source>
          <target state="translated">Esta propiedad se almacena por subproceso/solicitud.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.IndentLevel">
          <source>The following example increments and decrements the indent level and emits tracing messages.</source>
          <target state="translated">El siguiente ejemplo se aumenta y disminuye el nivel de sangría y se emiten mensajes de seguimiento.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.IndentLevel">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Trace.IndentSize">
          <source>Gets or sets the number of spaces in an indent.</source>
          <target state="translated">Obtiene o establece el número de espacios de una sangría.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.IndentSize">
          <source>The number of spaces in an indent.</source>
          <target state="translated">Número de espacios de una sangría.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.IndentSize">
          <source>The default is four.</source>
          <target state="translated">El valor predeterminado es cuatro.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.IndentSize">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> interprets this number as spaces.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> interpreta este número como espacios.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.IndentSize">
          <source>An <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> ignores this value.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> omite este valor.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.IndentSize">
          <source>This property is stored on per-thread/per-request basis.</source>
          <target state="translated">Esta propiedad se almacena por subproceso/solicitud.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.IndentSize">
          <source>To set the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Trace.IndentSize%2A&gt;</ph> for <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph>, you can also edit the configuration file that corresponds to the name of your application.</source>
          <target state="translated">Para establecer el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Diagnostics.Trace.IndentSize%2A&gt;</ph> para <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph>, también puede editar el archivo de configuración que se corresponde con el nombre de la aplicación.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.IndentSize">
          <source>The configuration file should be formatted like the following example:</source>
          <target state="translated">El archivo de configuración debe tener el formato similar al ejemplo siguiente:</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Trace.Listeners">
          <source>Gets the collection of listeners that is monitoring the trace output.</source>
          <target state="translated">Obtiene la colección de agentes de escucha que está supervisando los resultados de seguimiento.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.Listeners">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListenerCollection" /&gt;</ph> that represents a collection of type <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> monitoring the trace output.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListenerCollection" /&gt;</ph> que representa una colección de tipo <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> que supervisa la salida del seguimiento.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.Listeners">
          <source>The listeners produce formatted output from the trace output.</source>
          <target state="translated">Los agentes de escucha producen resultados con formato de la salida del seguimiento.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.Listeners">
          <source>By default, the collection contains an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> class.</source>
          <target state="translated">De forma predeterminada, la colección contiene una instancia de la <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.Listeners">
          <source>If you want to remove the default listener, call the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection.Remove%2A&gt;</ph> method, and pass it the instance of the <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">Si desea quitar el agente de escucha predeterminado, llame a la <ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection.Remove%2A&gt;</ph> (método) y pasar la instancia de la <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.Listeners">
          <source>To redirect output to the console window, add an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> class.</source>
          <target state="translated">Para redirigir los resultados a la ventana de consola, debe agregar una instancia de la <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.Listeners">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection is shared by both the <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> and the <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph> classes; adding a trace listener to either class adds the listener to both.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección comparten ambos el <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> y <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph> clases; agregar un agente de escucha de seguimiento a cualquier clase agrega el agente de escucha en ambos.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.Listeners">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> that outputs to the console screen.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> que muestra los resultados en pantalla de la consola.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.Listeners">
          <source>The code then adds the new listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</source>
          <target state="translated">El código, a continuación, agrega el nuevo agente de escucha para el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.Listeners">
          <source>for operating with unmanaged code.</source>
          <target state="translated">para trabajar con código no administrado.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.Listeners">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Acción de seguridad: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.Listeners">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Refresh">
          <source>Refreshes the trace configuration data.</source>
          <target state="translated">Actualiza los datos de configuración de seguimiento.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Refresh">
          <source>Trace configuration data is captured when the application is started.</source>
          <target state="translated">Datos de configuración de seguimiento se capturan cuando se inicia la aplicación.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Refresh">
          <source>If the configuration data is changed after the application is started, call the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Refresh%2A&gt;</ph> method to update the trace configuration data.</source>
          <target state="translated">Si se modifican los datos de configuración después de que se inicia la aplicación, llame a la <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Refresh%2A&gt;</ph> método para actualizar los datos de configuración de seguimiento.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Trace">
          <source>Writes error information to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Escribe información de error en los agentes de escucha de seguimiento de la colección <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.TraceError(System.String)">
          <source>The informative message to write.</source>
          <target state="translated">Mensaje informativo que se va a escribir.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.TraceError(System.String)">
          <source>Writes an error message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection using the specified message.</source>
          <target state="translated">Escribe un mensaje de error en los agentes de escucha de seguimiento de la colección <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> con el mensaje especificado.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.TraceError(System.String)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Trace.TraceError%2A&gt;</ph> calls the <ph id="ph2">`TraceEvent`</ph> method for each trace listener, with the trace event type <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Error&gt;</ph>, passing the informative message as the message string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Trace.TraceError%2A&gt;</ph> llamadas a la <ph id="ph2">`TraceEvent`</ph> método para cada agente de escucha de seguimiento, con el tipo de evento de seguimiento <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Error&gt;</ph>, pasando el mensaje informativo como cadena de mensaje.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.TraceError(System.String,System.Object[])">
          <source>A format string that contains zero or more format items, which correspond to objects in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Cadena de formato que contiene cero o más elementos de formato, que corresponden a objetos de la matriz <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.TraceError(System.String,System.Object[])">
          <source>An <ph id="ph1">&lt;see langword="object" /&gt;</ph> array containing zero or more objects to format.</source>
          <target state="translated">Matriz de <ph id="ph1">&lt;see langword="object" /&gt;</ph> que contiene cero o más objetos a los que se va a aplicar formato.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.TraceError(System.String,System.Object[])">
          <source>Writes an error message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection using the specified array of objects and formatting information.</source>
          <target state="translated">Escribe un mensaje de error en los agentes de escucha de seguimiento de la colección <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> con la matriz de objetos y la información de formato especificadas.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.TraceError(System.String,System.Object[])">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Trace.TraceError%2A&gt;</ph> calls the <ph id="ph2">`TraceEvent`</ph> methods in the trace listeners with the trace event type <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Error&gt;</ph>, passing the message content as an object array with formatting information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Trace.TraceError%2A&gt;</ph> llamadas a la <ph id="ph2">`TraceEvent`</ph> métodos en los agentes de escucha de seguimiento con el tipo de evento de seguimiento <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Error&gt;</ph>, pasando el contenido del mensaje como una matriz de objetos con información de formato.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.TraceError(System.String,System.Object[])">
          <source>See the <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph> method for more information about the <ph id="ph2">`format`</ph> and <ph id="ph3">`args`</ph> parameters.</source>
          <target state="translated">Consulte la <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph> método para obtener más información sobre la <ph id="ph2">`format`</ph> y <ph id="ph3">`args`</ph> parámetros.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Trace">
          <source>Writes an informational message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Escribe un mensaje informativo en los agentes de escucha de seguimiento de la colección <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.TraceInformation(System.String)">
          <source>The informative message to write.</source>
          <target state="translated">Mensaje informativo que se va a escribir.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.TraceInformation(System.String)">
          <source>Writes an informational message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection using the specified message.</source>
          <target state="translated">Escribe un mensaje informativo en los agentes de escucha de seguimiento de la colección <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> con el mensaje especificado.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.TraceInformation(System.String)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Trace.TraceInformation%2A&gt;</ph> calls the <ph id="ph2">`TraceEvent`</ph> method for each trace listener, with the trace event type <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Information&gt;</ph>, passing the informative message as the message string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Trace.TraceInformation%2A&gt;</ph> llamadas a la <ph id="ph2">`TraceEvent`</ph> método para cada agente de escucha de seguimiento, con el tipo de evento de seguimiento <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Information&gt;</ph>, pasando el mensaje informativo como cadena de mensaje.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])">
          <source>A format string that contains zero or more format items, which correspond to objects in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Cadena de formato que contiene cero o más elementos de formato, que corresponden a objetos de la matriz <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])">
          <source>An <ph id="ph1">&lt;see langword="object" /&gt;</ph> array containing zero or more objects to format.</source>
          <target state="translated">Matriz de <ph id="ph1">&lt;see langword="object" /&gt;</ph> que contiene cero o más objetos a los que se va a aplicar formato.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])">
          <source>Writes an informational message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection using the specified array of objects and formatting information.</source>
          <target state="translated">Escribe un mensaje informativo en los agentes de escucha de seguimiento de la colección <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> con la matriz de objetos y la información de formato especificadas.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Trace.TraceInformation%2A&gt;</ph> calls the <ph id="ph2">`TraceEvent`</ph> methods in the trace listeners with the trace event type <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Information&gt;</ph>, passing the message content as an object array with formatting information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Trace.TraceInformation%2A&gt;</ph> llamadas a la <ph id="ph2">`TraceEvent`</ph> métodos en los agentes de escucha de seguimiento con el tipo de evento de seguimiento <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Information&gt;</ph>, pasando el contenido del mensaje como una matriz de objetos con información de formato.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])">
          <source>See the <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph> method for more information about the <ph id="ph2">`format`</ph> and <ph id="ph3">`args`</ph> parameters.</source>
          <target state="translated">Consulte la <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph> método para obtener más información sobre la <ph id="ph2">`format`</ph> y <ph id="ph3">`args`</ph> parámetros.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Trace">
          <source>Writes warning information to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Escribe información de advertencia en los agentes de escucha de seguimiento de la colección <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.TraceWarning(System.String)">
          <source>The informative message to write.</source>
          <target state="translated">Mensaje informativo que se va a escribir.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.TraceWarning(System.String)">
          <source>Writes a warning message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection using the specified message.</source>
          <target state="translated">Escribe un mensaje de advertencia en los agentes de escucha de seguimiento de la colección <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> con el mensaje especificado.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.TraceWarning(System.String)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Trace.TraceWarning%2A&gt;</ph> calls the <ph id="ph2">`TraceEvent`</ph> method for each trace listener with the trace event type <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Warning&gt;</ph>, passing the informative message as the message string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Trace.TraceWarning%2A&gt;</ph> llamadas a la <ph id="ph2">`TraceEvent`</ph> método para cada agente de escucha de seguimiento con el tipo de evento de seguimiento <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Warning&gt;</ph>, pasando el mensaje informativo como cadena de mensaje.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])">
          <source>A format string that contains zero or more format items, which correspond to objects in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Cadena de formato que contiene cero o más elementos de formato, que corresponden a objetos de la matriz <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])">
          <source>An <ph id="ph1">&lt;see langword="object" /&gt;</ph> array containing zero or more objects to format.</source>
          <target state="translated">Matriz de <ph id="ph1">&lt;see langword="object" /&gt;</ph> que contiene cero o más objetos a los que se va a aplicar formato.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])">
          <source>Writes a warning message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection using the specified array of objects and formatting information.</source>
          <target state="translated">Escribe un mensaje de advertencia en los agentes de escucha de seguimiento de la colección <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> con la matriz de objetos y la información de formato especificadas.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Trace.TraceWarning%2A&gt;</ph> calls the <ph id="ph2">`TraceEvent`</ph> methods in the trace listeners with the trace event type <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Warning&gt;</ph>, passing the message content as an object array with formatting information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Trace.TraceWarning%2A&gt;</ph> llamadas a la <ph id="ph2">`TraceEvent`</ph> métodos en los agentes de escucha de seguimiento con el tipo de evento de seguimiento <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Warning&gt;</ph>, pasando el contenido del mensaje como una matriz de objetos con información de formato.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])">
          <source>See the <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph> method for more information about the <ph id="ph2">`format`</ph> and <ph id="ph3">`args`</ph> parameters.</source>
          <target state="translated">Consulte la <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph> método para obtener más información sobre la <ph id="ph2">`format`</ph> y <ph id="ph3">`args`</ph> parámetros.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Unindent">
          <source>Decreases the current <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.IndentLevel" /&gt;</ph> by one.</source>
          <target state="translated">Disminuye el <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.IndentLevel" /&gt;</ph> actual en uno.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Unindent">
          <source>The following example increments and decrements the indent level and emits tracing messages.</source>
          <target state="translated">El siguiente ejemplo se aumenta y disminuye el nivel de sangría y se emiten mensajes de seguimiento.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Unindent">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Trace.UseGlobalLock">
          <source>Gets or sets a value indicating whether the global lock should be used.</source>
          <target state="translated">Obtiene o establece un valor que indica si debe utilizarse el bloqueo global.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.UseGlobalLock">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the global lock is to be used; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si debe utilizarse el bloqueo global; de lo contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.UseGlobalLock">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.UseGlobalLock">
          <source>The global lock is always used if the trace listener is not thread safe, regardless of the value of <ph id="ph1">&lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;</ph>.</source>
          <target state="translated">Siempre se utiliza el bloqueo global si el agente de escucha de seguimiento no es segura, independientemente del valor de ejecución de subprocesos <ph id="ph1">&lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.UseGlobalLock">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;</ph> property is used to determine if the listener is thread safe.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;</ph> propiedad se utiliza para determinar si el agente de escucha es seguro para subprocesos.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.UseGlobalLock">
          <source>The global lock is not used only if the value of <ph id="ph1">&lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;</ph> is <ph id="ph2">`false`</ph> and the value of <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;</ph> is <ph id="ph4">`true`</ph>.</source>
          <target state="translated">El bloqueo global no se utiliza sólo si el valor de <ph id="ph1">&lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;</ph> es <ph id="ph2">`false`</ph> y el valor de <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;</ph> es <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.UseGlobalLock">
          <source>The default behavior is to use the global lock.</source>
          <target state="translated">El comportamiento predeterminado consiste en utilizar el bloqueo global.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.UseGlobalLock">
          <source>To set the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;</ph> for <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, you can also edit the configuration file that corresponds to the name of your application.</source>
          <target state="translated">Para establecer el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;</ph> para <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, también puede editar el archivo de configuración que se corresponde con el nombre de la aplicación.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.UseGlobalLock">
          <source>The configuration file should be formatted like the following example:</source>
          <target state="translated">El archivo de configuración debe tener el formato similar al ejemplo siguiente:</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.UseGlobalLock">
          <source>for operating with unmanaged code.</source>
          <target state="translated">para trabajar con código no administrado.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.UseGlobalLock">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Acción de seguridad: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Trace.UseGlobalLock">
          <source>Associated enumeration:  <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeración asociada:  <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Trace">
          <source>Writes information about the trace to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Escribe información sobre el seguimiento en los agentes de escucha de seguimiento de la colección <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Write(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> whose name is sent to the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</source>
          <target state="translated">Un elemento <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> cuyo nombre se envía a <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Write(System.Object)">
          <source>Writes the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Escribe el valor del método <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> del objeto en los agentes de escucha en la colección <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.Object)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">De forma predeterminada, se escribe el resultado en una instancia de <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.Object)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Este método llama a la <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> método del agente de escucha de seguimiento.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.Object)">
          <source>ASP.NET supplies tracing functionality tailored for Web pages.</source>
          <target state="translated">ASP.NET proporciona funcionalidad de seguimiento especialmente diseñada para las páginas Web.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.Object)">
          <source>To write trace messages in ASP.NET pages, use the <ph id="ph1">&lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Para escribir mensajes de seguimiento en las páginas ASP.NET, use la <ph id="ph1">&lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.Object)">
          <source>By default, in code associated with an ASP.NET Web page, the statement <ph id="ph1">`Trace.Write("...")`</ph> is a call to the <ph id="ph2">&lt;xref:System.Web.TraceContext.Write%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">De forma predeterminada, en el código asociado a una página Web ASP.NET, la instrucción <ph id="ph1">`Trace.Write("...")`</ph> es una llamada a la <ph id="ph2">&lt;xref:System.Web.TraceContext.Write%2A&gt;</ph> método de la <ph id="ph3">&lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.Object)">
          <source>To use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace?displayProperty=nameWithType&gt;</ph> class in Web pages, you must include the namespace, for example, <ph id="ph2">`System.Diagnostics.Trace.Write("...")`</ph>.</source>
          <target state="translated">Para usar el <ph id="ph1">&lt;xref:System.Diagnostics.Trace?displayProperty=nameWithType&gt;</ph> clase en páginas Web, debe incluir el espacio de nombres, por ejemplo, <ph id="ph2">`System.Diagnostics.Trace.Write("...")`</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.Object)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominado <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.Object)">
          <source>This switch is set outside the code sample.</source>
          <target state="translated">Este modificador se establece fuera el ejemplo de código.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.Object)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first name of the <ph id="ph3">`value`</ph> parameter to the <ph id="ph4">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Si el modificador está establecido en el <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> o versiones posteriores, el ejemplo genera el nombre de la <ph id="ph3">`value`</ph> parámetro para el <ph id="ph4">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.Object)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Para obtener información sobre cómo agregar un agente de escucha para el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección, consulte la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.Object)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs a message on the same line as the first message.</source>
          <target state="translated">A continuación, si la <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> se establece en <ph id="ph2">`Verbose`</ph>, el ejemplo genera un mensaje en la misma línea que el primer mensaje.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.Object)">
          <source>The second message is followed by a line terminator.</source>
          <target state="translated">El segundo mensaje va seguido de un terminador de línea.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Write(System.String)">
          <source>A message to write.</source>
          <target state="translated">Mensaje que se va a escribir.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Write(System.String)">
          <source>Writes a message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Escribe un mensaje en los agentes de escucha de seguimiento de la colección <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">De forma predeterminada, se escribe el resultado en una instancia de <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Este método llama a la <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> método del agente de escucha de seguimiento.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.String)">
          <source>ASP.NET supplies tracing functionality tailored for Web pages.</source>
          <target state="translated">ASP.NET proporciona funcionalidad de seguimiento especialmente diseñada para las páginas Web.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.String)">
          <source>To write trace messages in ASP.NET pages, use the <ph id="ph1">&lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Para escribir mensajes de seguimiento en las páginas ASP.NET, use la <ph id="ph1">&lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.String)">
          <source>By default, in code associated with an ASP.NET Web page, the statement <ph id="ph1">`Trace.Write("...")`</ph> is a call to the <ph id="ph2">&lt;xref:System.Web.TraceContext.Write%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">De forma predeterminada, en el código asociado a una página Web ASP.NET, la instrucción <ph id="ph1">`Trace.Write("...")`</ph> es una llamada a la <ph id="ph2">&lt;xref:System.Web.TraceContext.Write%2A&gt;</ph> método de la <ph id="ph3">&lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.String)">
          <source>To use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace?displayProperty=nameWithType&gt;</ph> class in Web pages, you must include the namespace, for example, <ph id="ph2">`System.Diagnostics.Trace.Write("...")`</ph>.</source>
          <target state="translated">Para usar el <ph id="ph1">&lt;xref:System.Diagnostics.Trace?displayProperty=nameWithType&gt;</ph> clase en páginas Web, debe incluir el espacio de nombres, por ejemplo, <ph id="ph2">`System.Diagnostics.Trace.Write("...")`</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominado <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.String)">
          <source>This switch is set outside the code sample.</source>
          <target state="translated">Este modificador se establece fuera el ejemplo de código.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Si el modificador está establecido en el <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> o versiones posteriores, el ejemplo genera el primer mensaje de error para el <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Para obtener información sobre cómo agregar un agente de escucha para el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección, consulte la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">A continuación, si la <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> se establece en <ph id="ph2">`Verbose`</ph>, el ejemplo genera el segundo mensaje de error en la misma línea que el primer mensaje.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">Un terminador de línea sigue el segundo mensaje.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Write(System.Object,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> name is sent to the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</source>
          <target state="translated">Nombre de <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que se envía a <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Write(System.Object,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">Nombre de categoría usado para organizar el resultado.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Write(System.Object,System.String)">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Escribe un nombre de categoría y el valor del método <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> del objeto en los agentes de escucha en la colección <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.Object,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">De forma predeterminada, se escribe el resultado en una instancia de <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.Object,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated">El <ph id="ph1">`category`</ph> parámetro puede utilizarse para agrupar mensajes de salida.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.Object,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Este método llama a la <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> método del agente de escucha de seguimiento.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.Object,System.String)">
          <source>ASP.NET supplies tracing functionality tailored for Web pages.</source>
          <target state="translated">ASP.NET proporciona funcionalidad de seguimiento especialmente diseñada para las páginas Web.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.Object,System.String)">
          <source>To write trace messages in ASP.NET pages, use the <ph id="ph1">&lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Para escribir mensajes de seguimiento en las páginas ASP.NET, use la <ph id="ph1">&lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.Object,System.String)">
          <source>By default, in code associated with an ASP.NET Web page, the statement <ph id="ph1">`Trace.Write("...")`</ph> is a call to the <ph id="ph2">&lt;xref:System.Web.TraceContext.Write%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">De forma predeterminada, en el código asociado a una página Web ASP.NET, la instrucción <ph id="ph1">`Trace.Write("...")`</ph> es una llamada a la <ph id="ph2">&lt;xref:System.Web.TraceContext.Write%2A&gt;</ph> método de la <ph id="ph3">&lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.Object,System.String)">
          <source>To use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace?displayProperty=nameWithType&gt;</ph> class in Web pages, you must include the namespace, for example, <ph id="ph2">`System.Diagnostics.Trace.Write("...")`</ph>.</source>
          <target state="translated">Para usar el <ph id="ph1">&lt;xref:System.Diagnostics.Trace?displayProperty=nameWithType&gt;</ph> clase en páginas Web, debe incluir el espacio de nombres, por ejemplo, <ph id="ph2">`System.Diagnostics.Trace.Write("...")`</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.Object,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominado <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.Object,System.String)">
          <source>This switch is set outside the code sample.</source>
          <target state="translated">Este modificador se establece fuera el ejemplo de código.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.Object,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Verbose`</ph>, the example outputs the name of the <ph id="ph3">`myObject`</ph> and the <ph id="ph4">`category`</ph> to the <ph id="ph5">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Si el modificador está establecido en el <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Verbose`</ph>, el ejemplo genera el nombre de la <ph id="ph3">`myObject`</ph> y <ph id="ph4">`category`</ph> a la <ph id="ph5">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.Object,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Para obtener información sobre cómo agregar un agente de escucha para el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección, consulte la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.Object,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Error`</ph> or higher, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">A continuación, si la <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> está establecido en <ph id="ph2">`Error`</ph> o versiones posteriores, el ejemplo genera el segundo mensaje de error en la misma línea que el primer mensaje.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.Object,System.String)">
          <source>The second message is followed by a line terminator.</source>
          <target state="translated">El segundo mensaje va seguido de un terminador de línea.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Write(System.String,System.String)">
          <source>A message to write.</source>
          <target state="translated">Mensaje que se va a escribir.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Write(System.String,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">Nombre de categoría usado para organizar el resultado.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.Write(System.String,System.String)">
          <source>Writes a category name and a message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Escribe un nombre de categoría y un mensaje a los agentes de escucha de la colección <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.String,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">De forma predeterminada, se escribe el resultado en una instancia de <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.String,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated">El <ph id="ph1">`category`</ph> parámetro puede utilizarse para agrupar mensajes de salida.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.String,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Este método llama a la <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> método del agente de escucha de seguimiento.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.String,System.String)">
          <source>ASP.NET supplies tracing functionality tailored for Web pages.</source>
          <target state="translated">ASP.NET proporciona funcionalidad de seguimiento especialmente diseñada para las páginas Web.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.String,System.String)">
          <source>To write trace messages in ASP.NET pages, use the <ph id="ph1">&lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Para escribir mensajes de seguimiento en las páginas ASP.NET, use la <ph id="ph1">&lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.String,System.String)">
          <source>By default, in code associated with an ASP.NET Web page, the statement <ph id="ph1">`Trace.Write("...")`</ph> is a call to the <ph id="ph2">&lt;xref:System.Web.TraceContext.Write%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">De forma predeterminada, en el código asociado a una página Web ASP.NET, la instrucción <ph id="ph1">`Trace.Write("...")`</ph> es una llamada a la <ph id="ph2">&lt;xref:System.Web.TraceContext.Write%2A&gt;</ph> método de la <ph id="ph3">&lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.String,System.String)">
          <source>To use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace?displayProperty=nameWithType&gt;</ph> class in Web pages, you must include the namespace, for example, <ph id="ph2">`System.Diagnostics.Trace.Write("...")`</ph>.</source>
          <target state="translated">Para usar el <ph id="ph1">&lt;xref:System.Diagnostics.Trace?displayProperty=nameWithType&gt;</ph> clase en páginas Web, debe incluir el espacio de nombres, por ejemplo, <ph id="ph2">`System.Diagnostics.Trace.Write("...")`</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.String,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominado <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.String,System.String)">
          <source>This switch is set outside the code sample.</source>
          <target state="translated">Este modificador se establece fuera el ejemplo de código.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.String,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Verbose`</ph>, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Si el modificador está establecido en el <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Verbose`</ph>, el ejemplo genera el primer mensaje de error para el <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.String,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Para obtener información sobre cómo agregar un agente de escucha para el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección, consulte la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.String,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Error`</ph> or higher, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">A continuación, si la <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> está establecido en <ph id="ph2">`Error`</ph> o versiones posteriores, el ejemplo genera el segundo mensaje de error en la misma línea que el primer mensaje.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.Write(System.String,System.String)">
          <source>The second message is followed by a line terminator.</source>
          <target state="translated">El segundo mensaje va seguido de un terminador de línea.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Trace">
          <source>Writes information about the trace to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Escribe información acerca del seguimiento en los agentes de escucha de seguimiento de la colección <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> si una condición es <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to cause a message to be written; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para que se escriba un mensaje; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> whose name is sent to the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</source>
          <target state="translated">Un elemento <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> cuyo nombre se envía a <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)">
          <source>Writes the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection if a condition is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Escribe el valor del método <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> del objeto en los agentes de escucha de seguimiento de la colección <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> si una condición es <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">De forma predeterminada, se escribe el resultado en una instancia de <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Este método llama a la <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> método del agente de escucha de seguimiento.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominado <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)">
          <source>This switch is set outside the code sample.</source>
          <target state="translated">Este modificador se establece fuera el ejemplo de código.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first name of the value parameter to the <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Si el modificador está establecido en el <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> o versiones posteriores, el ejemplo genera el nombre del parámetro de valor para el <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Para obtener información sobre cómo agregar un agente de escucha para el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección, consulte la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs a message on the same line as the first message.</source>
          <target state="translated">A continuación, si la <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> se establece en <ph id="ph2">`Verbose`</ph>, el ejemplo genera un mensaje en la misma línea que el primer mensaje.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)">
          <source>The second message is followed by a line terminator.</source>
          <target state="translated">El segundo mensaje va seguido de un terminador de línea.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">Puede minimizar la reducción del rendimiento de instrumentación de la aplicación mediante el uso de <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> instrucciones en lugar de usar <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /&gt;</ph> instrucciones.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">Los siguientes ejemplos de código de dos envían el mismo mensaje de depuración.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph> you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.Write(System.String)" /&gt;</ph>.</source>
          <target state="translated">Sin embargo, el primer ejemplo es mucho más rápido cuando el seguimiento está desactivado, porque si <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> se evalúa como <ph id="ph1">&lt;see langword="false" /&gt;</ph> no llame a <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.Write(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">El segundo ejemplo siempre se llama <ph id="ph1">&lt;see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /&gt;</ph>, incluso cuando <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> es <ph id="ph2">&lt;see langword="false" /&gt;</ph> y no se genera ningún resultado de seguimiento.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">Esto puede dar lugar a ejecución innecesaria de código arbitrariamente complejo.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)">
          <source><bpt id="p1">**</bpt>First example<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Primer ejemplo<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)">
          <source><bpt id="p1">**</bpt>Second example<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Segundo ejemplo<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to cause a message to be written; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para que se escriba un mensaje; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)">
          <source>A message to write.</source>
          <target state="translated">Mensaje que se va a escribir.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)">
          <source>Writes a message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Escribe un mensaje a los agentes de escucha de la colección <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> si una condición es <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">De forma predeterminada, se escribe el resultado en una instancia de <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Este método llama a la <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> método del agente de escucha de seguimiento.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominado <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)">
          <source>This switch is set outside the code sample.</source>
          <target state="translated">Este modificador se establece fuera el ejemplo de código.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Si el modificador está establecido en el <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> o versiones posteriores, el ejemplo genera el primer mensaje de error para el <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Para obtener información sobre cómo agregar un agente de escucha para el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección, consulte la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">A continuación, si la <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> se establece en <ph id="ph2">`Verbose`</ph>, el ejemplo genera el segundo mensaje de error en la misma línea que el primer mensaje.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)">
          <source>The second message is followed by a line terminator.</source>
          <target state="translated">El segundo mensaje va seguido de un terminador de línea.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">Puede minimizar la reducción del rendimiento de instrumentación de la aplicación mediante el uso de <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> instrucciones en lugar de usar <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /&gt;</ph> instrucciones.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">Los siguientes ejemplos de código de dos envían el mismo mensaje de depuración.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph> you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.Write(System.String)" /&gt;</ph>.</source>
          <target state="translated">Sin embargo, el primer ejemplo es mucho más rápido cuando el seguimiento está desactivado, porque si <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> se evalúa como <ph id="ph1">&lt;see langword="false" /&gt;</ph> no llame a <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.Write(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">El segundo ejemplo siempre se llama <ph id="ph1">&lt;see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /&gt;</ph>, incluso cuando <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> es <ph id="ph2">&lt;see langword="false" /&gt;</ph> y no se genera ningún resultado de seguimiento.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">Esto puede dar lugar a ejecución innecesaria de código arbitrariamente complejo.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)">
          <source><bpt id="p1">**</bpt>First example<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Primer ejemplo<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)">
          <source><bpt id="p1">**</bpt>Second example<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Segundo ejemplo<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to cause a message to be written; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para que se escriba un mensaje; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> whose name is sent to the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</source>
          <target state="translated">Un elemento <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> cuyo nombre se envía a <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">Nombre de categoría usado para organizar el resultado.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection if a condition is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Escribe un nombre de categoría y el valor del método <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> del objeto en los agentes de escucha en la colección <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> si una condición es <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">De forma predeterminada, se escribe el resultado en una instancia de <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated">El <ph id="ph1">`category`</ph> parámetro puede utilizarse para agrupar mensajes de salida.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Este método llama a la <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> método del agente de escucha de seguimiento.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominado <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)">
          <source>This switch is set outside the code sample.</source>
          <target state="translated">Este modificador se establece fuera el ejemplo de código.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Verbose`</ph>, the example outputs the name of the <ph id="ph3">`myObject`</ph> and the <ph id="ph4">`category`</ph> to the <ph id="ph5">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Si el modificador está establecido en el <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Verbose`</ph>, el ejemplo genera el nombre de la <ph id="ph3">`myObject`</ph> y <ph id="ph4">`category`</ph> a la <ph id="ph5">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Para obtener información sobre cómo agregar un agente de escucha para el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección, consulte la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Error`</ph> or higher, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">A continuación, si la <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> está establecido en <ph id="ph2">`Error`</ph> o versiones posteriores, el ejemplo genera el segundo mensaje de error en la misma línea que el primer mensaje.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)">
          <source>The second message is followed by a line terminator.</source>
          <target state="translated">El segundo mensaje va seguido de un terminador de línea.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">Puede minimizar la reducción del rendimiento de instrumentación de la aplicación mediante el uso de <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> instrucciones en lugar de usar <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /&gt;</ph> instrucciones.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">Los siguientes ejemplos de código de dos envían el mismo mensaje de depuración.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph> you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.Write(System.String)" /&gt;</ph>.</source>
          <target state="translated">Sin embargo, el primer ejemplo es mucho más rápido cuando el seguimiento está desactivado, porque si <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> se evalúa como <ph id="ph1">&lt;see langword="false" /&gt;</ph> no llame a <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.Write(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">El segundo ejemplo siempre se llama <ph id="ph1">&lt;see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /&gt;</ph>, incluso cuando <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> es <ph id="ph2">&lt;see langword="false" /&gt;</ph> y no se genera ningún resultado de seguimiento.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">Esto puede dar lugar a ejecución innecesaria de código arbitrariamente complejo.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)">
          <source><bpt id="p1">**</bpt>First example<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Primer ejemplo<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)">
          <source><bpt id="p1">**</bpt>Second example<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Segundo ejemplo<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to cause a message to be written; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para que se escriba un mensaje; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)">
          <source>A message to write.</source>
          <target state="translated">Mensaje que se va a escribir.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">Nombre de categoría usado para organizar el resultado.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)">
          <source>Writes a category name and message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Escribe un nombre de categoría y un mensaje a los agentes de escucha de la colección <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> si una condición es <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">De forma predeterminada, se escribe el resultado en una instancia de <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated">El <ph id="ph1">`category`</ph> parámetro puede utilizarse para agrupar mensajes de salida.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Este método llama a la <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> método del agente de escucha de seguimiento.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominado <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)">
          <source>This switch is set outside the code sample.</source>
          <target state="translated">Este modificador se establece fuera el ejemplo de código.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Verbose`</ph>, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Si el modificador está establecido en el <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Verbose`</ph>, el ejemplo genera el primer mensaje de error para el <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Para obtener información sobre cómo agregar un agente de escucha para el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección, consulte la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Error`</ph> or higher, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">A continuación, si la <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> está establecido en <ph id="ph2">`Error`</ph> o versiones posteriores, el ejemplo genera el segundo mensaje de error en la misma línea que el primer mensaje.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)">
          <source>The second message is followed by a line terminator.</source>
          <target state="translated">El segundo mensaje va seguido de un terminador de línea.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">Puede minimizar la reducción del rendimiento de instrumentación de la aplicación mediante el uso de <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> instrucciones en lugar de usar <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /&gt;</ph> instrucciones.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">Los siguientes ejemplos de código de dos envían el mismo mensaje de depuración.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph> you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.Write(System.String)" /&gt;</ph>.</source>
          <target state="translated">Sin embargo, el primer ejemplo es mucho más rápido cuando el seguimiento está desactivado, porque si <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> se evalúa como <ph id="ph1">&lt;see langword="false" /&gt;</ph> no llame a <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.Write(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">El segundo ejemplo siempre se llama <ph id="ph1">&lt;see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /&gt;</ph>, incluso cuando <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> es <ph id="ph2">&lt;see langword="false" /&gt;</ph> y no se genera ningún resultado de seguimiento.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">Esto puede dar lugar a ejecución innecesaria de código arbitrariamente complejo.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)">
          <source><bpt id="p1">**</bpt>First example<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Primer ejemplo<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)">
          <source><bpt id="p1">**</bpt>Second example<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Segundo ejemplo<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Trace">
          <source>Writes information about the trace to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Escribe información sobre el seguimiento en los agentes de escucha de seguimiento de la colección <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteLine(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> whose name is sent to the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</source>
          <target state="translated">Un elemento <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> cuyo nombre se envía a <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteLine(System.Object)">
          <source>Writes the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Escribe el valor del método <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> del objeto en los agentes de escucha en la colección <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.Object)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">De forma predeterminada, se escribe el resultado en una instancia de <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.Object)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Este método llama a la <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> método del agente de escucha de seguimiento.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.Object)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominado <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.Object)">
          <source>This switch is set outside the code sample.</source>
          <target state="translated">Este modificador se establece fuera el ejemplo de código.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.Object)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Si el modificador está establecido en el <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> o versiones posteriores, el ejemplo genera el primer mensaje de error para el <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.Object)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Para obtener información sobre cómo agregar un agente de escucha para el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección, consulte la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.Object)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the name of the object on the same line as the first message.</source>
          <target state="translated">A continuación, si la <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> se establece en <ph id="ph2">`Verbose`</ph>, el ejemplo genera el nombre del objeto en la misma línea que el primer mensaje.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.Object)">
          <source>The second message is followed by a line terminator.</source>
          <target state="translated">El segundo mensaje va seguido de un terminador de línea.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteLine(System.String)">
          <source>A message to write.</source>
          <target state="translated">Mensaje que se va a escribir.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteLine(System.String)">
          <source>Writes a message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Escribe un mensaje en los agentes de escucha de seguimiento de la colección <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">De forma predeterminada, se escribe el resultado en una instancia de <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Este método llama a la <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> método del agente de escucha de seguimiento.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominado <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.String)">
          <source>This switch is set outside the code sample.</source>
          <target state="translated">Este modificador se establece fuera el ejemplo de código.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Si el modificador está establecido en el <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> o versiones posteriores, el ejemplo genera el primer mensaje de error para el <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Para obtener información sobre cómo agregar un agente de escucha para el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección, consulte la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">A continuación, si la <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> se establece en <ph id="ph2">`Verbose`</ph>, el ejemplo genera el segundo mensaje de error en la misma línea que el primer mensaje.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.String)">
          <source>The second message is followed by a line terminator.</source>
          <target state="translated">El segundo mensaje va seguido de un terminador de línea.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> whose name is sent to the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</source>
          <target state="translated">Un elemento <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> cuyo nombre se envía a <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">Nombre de categoría usado para organizar el resultado.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Escribe un nombre de categoría y el valor del método <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> del objeto en los agentes de escucha en la colección <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">De forma predeterminada, se escribe el resultado en una instancia de <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated">El <ph id="ph1">`category`</ph> parámetro puede utilizarse para agrupar mensajes de salida.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Este método llama a la <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> método del agente de escucha de seguimiento.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominado <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)">
          <source>This switch is set outside the code sample.</source>
          <target state="translated">Este modificador se establece fuera el ejemplo de código.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Si el modificador está establecido en el <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> o versiones posteriores, el ejemplo genera el primer mensaje de error para el <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Para obtener información sobre cómo agregar un agente de escucha para el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección, consulte la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">A continuación, si la <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> se establece en <ph id="ph2">`Verbose`</ph>, el ejemplo genera el segundo mensaje de error en la misma línea que el primer mensaje.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)">
          <source>The second message is followed by a line terminator.</source>
          <target state="translated">El segundo mensaje va seguido de un terminador de línea.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)">
          <source>A message to write.</source>
          <target state="translated">Mensaje que se va a escribir.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">Nombre de categoría usado para organizar el resultado.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)">
          <source>Writes a category name and message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Escribe un nombre de categoría y un mensaje a los agentes de escucha de la colección <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">De forma predeterminada, se escribe el resultado en una instancia de <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated">El <ph id="ph1">`category`</ph> parámetro puede utilizarse para agrupar mensajes de salida.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Este método llama a la <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> método del agente de escucha de seguimiento.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominado <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)">
          <source>This switch is set outside the code sample.</source>
          <target state="translated">Este modificador se establece fuera el ejemplo de código.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Si el modificador está establecido en el <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> o versiones posteriores, el ejemplo genera el primer mensaje de error para el <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Para obtener información sobre cómo agregar un agente de escucha para el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección, consulte la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message and the <ph id="ph3">`category`</ph> on the same line as the first message.</source>
          <target state="translated">A continuación, si la <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> está establecido en <ph id="ph2">`Verbose`</ph>, el ejemplo genera el segundo mensaje de error y la <ph id="ph3">`category`</ph> en la misma línea que el primer mensaje.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)">
          <source>The second message is followed by a line terminator.</source>
          <target state="translated">El segundo mensaje va seguido de un terminador de línea.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Trace">
          <source>Writes information about the trace to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Escribe información acerca del seguimiento en los agentes de escucha de seguimiento de la colección <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> si una condición es <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to cause a message to be written; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para que se escriba un mensaje; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> whose name is sent to the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</source>
          <target state="translated">Un elemento <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> cuyo nombre se envía a <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)">
          <source>Writes the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection if a condition is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Escribe el valor del método <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> del objeto en los agentes de escucha de seguimiento de la colección <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> si una condición es <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">De forma predeterminada, se escribe el resultado en una instancia de <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Este método llama a la <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> método del agente de escucha de seguimiento.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominado <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)">
          <source>This switch is set outside the code sample.</source>
          <target state="translated">Este modificador se establece fuera el ejemplo de código.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Si el modificador está establecido en el <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> o versiones posteriores, el ejemplo genera el primer mensaje de error para el <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Para obtener información sobre cómo agregar un agente de escucha para el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección, consulte la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the name of the object on the same line as the first message.</source>
          <target state="translated">A continuación, si la <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> se establece en <ph id="ph2">`Verbose`</ph>, el ejemplo genera el nombre del objeto en la misma línea que el primer mensaje.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)">
          <source>The second message is followed by a line terminator.</source>
          <target state="translated">El segundo mensaje va seguido de un terminador de línea.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">Puede minimizar la reducción del rendimiento de instrumentación de la aplicación mediante el uso de <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> instrucciones en lugar de usar <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> instrucciones.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">Los siguientes ejemplos de código de dos envían el mismo mensaje de depuración.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph> you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" /&gt;</ph>.</source>
          <target state="translated">Sin embargo, el primer ejemplo es mucho más rápido cuando el seguimiento está desactivado, porque si <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> se evalúa como <ph id="ph1">&lt;see langword="false" /&gt;</ph> no llame a <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">El segundo ejemplo siempre se llama <ph id="ph1">&lt;see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, incluso cuando <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> es <ph id="ph2">&lt;see langword="false" /&gt;</ph> y no se genera ningún resultado de seguimiento.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">Esto puede dar lugar a ejecución innecesaria de código arbitrariamente complejo.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)">
          <source><bpt id="p1">**</bpt>First example<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Primer ejemplo<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)">
          <source><bpt id="p1">**</bpt>Second example<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Segundo ejemplo<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to cause a message to be written; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para que se escriba un mensaje; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)">
          <source>A message to write.</source>
          <target state="translated">Mensaje que se va a escribir.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)">
          <source>Writes a message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Escribe un mensaje a los agentes de escucha de la colección <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> si una condición es <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">De forma predeterminada, se escribe el resultado en una instancia de <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Este método llama a la <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> método del agente de escucha de seguimiento.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominado <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)">
          <source>This switch is set outside the code sample.</source>
          <target state="translated">Este modificador se establece fuera el ejemplo de código.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Si el modificador está establecido en el <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> o versiones posteriores, el ejemplo genera el primer mensaje de error para el <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Para obtener información sobre cómo agregar un agente de escucha para el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección, consulte la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">A continuación, si la <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> se establece en <ph id="ph2">`Verbose`</ph>, el ejemplo genera el segundo mensaje de error en la misma línea que el primer mensaje.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)">
          <source>The second message is followed by a line terminator.</source>
          <target state="translated">El segundo mensaje va seguido de un terminador de línea.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">Puede minimizar la reducción del rendimiento de instrumentación de la aplicación mediante el uso de <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> instrucciones en lugar de usar <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> instrucciones.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">Los siguientes ejemplos de código de dos envían el mismo mensaje de depuración.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph> you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" /&gt;</ph>.</source>
          <target state="translated">Sin embargo, el primer ejemplo es mucho más rápido cuando el seguimiento está desactivado, porque si <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> se evalúa como <ph id="ph1">&lt;see langword="false" /&gt;</ph> no llame a <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">El segundo ejemplo siempre se llama <ph id="ph1">&lt;see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, incluso cuando <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> es <ph id="ph2">&lt;see langword="false" /&gt;</ph> y no se genera ningún resultado de seguimiento.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">Esto puede dar lugar a ejecución innecesaria de código arbitrariamente complejo.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)">
          <source><bpt id="p1">**</bpt>First example<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Primer ejemplo<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)">
          <source><bpt id="p1">**</bpt>Second example<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Segundo ejemplo<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to cause a message to be written; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para que se escriba un mensaje; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> whose name is sent to the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</source>
          <target state="translated">Un elemento <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> cuyo nombre se envía a <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">Nombre de categoría usado para organizar el resultado.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection if a condition is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Escribe un nombre de categoría y el valor del método <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> del objeto en los agentes de escucha en la colección <ph id="ph2">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> si una condición es <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">De forma predeterminada, se escribe el resultado en una instancia de <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated">El <ph id="ph1">`category`</ph> parámetro puede utilizarse para agrupar mensajes de salida.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Este método llama a la <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> método del agente de escucha de seguimiento.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominado <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>This switch is set outside the code sample.</source>
          <target state="translated">Este modificador se establece fuera el ejemplo de código.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Si el modificador está establecido en el <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> o versiones posteriores, el ejemplo genera el primer mensaje de error para el <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Para obtener información sobre cómo agregar un agente de escucha para el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección, consulte la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">A continuación, si la <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> se establece en <ph id="ph2">`Verbose`</ph>, el ejemplo genera el segundo mensaje de error en la misma línea que el primer mensaje.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>The second message is followed by a line terminator.</source>
          <target state="translated">El segundo mensaje va seguido de un terminador de línea.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">Puede minimizar la reducción del rendimiento de instrumentación de la aplicación mediante el uso de <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> instrucciones en lugar de usar <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> instrucciones.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">Los siguientes ejemplos de código de dos envían el mismo mensaje de depuración.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph> you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" /&gt;</ph>.</source>
          <target state="translated">Sin embargo, el primer ejemplo es mucho más rápido cuando el seguimiento está desactivado, porque si <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> se evalúa como <ph id="ph1">&lt;see langword="false" /&gt;</ph> no llame a <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">El segundo ejemplo siempre se llama <ph id="ph1">&lt;see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, incluso cuando <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> es <ph id="ph2">&lt;see langword="false" /&gt;</ph> y no se genera ningún resultado de seguimiento.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">Esto puede dar lugar a ejecución innecesaria de código arbitrariamente complejo.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source><bpt id="p1">**</bpt>First example<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Primer ejemplo<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source><bpt id="p1">**</bpt>Second example<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Segundo ejemplo<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to cause a message to be written; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para que se escriba un mensaje; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>A message to write.</source>
          <target state="translated">Mensaje que se va a escribir.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">Nombre de categoría usado para organizar el resultado.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>Writes a category name and message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Escribe un nombre de categoría y un mensaje a los agentes de escucha de la colección <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> si una condición es <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">De forma predeterminada, se escribe el resultado en una instancia de <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated">El <ph id="ph1">`category`</ph> parámetro puede utilizarse para agrupar mensajes de salida.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Este método llama a la <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> método del agente de escucha de seguimiento.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">En el ejemplo siguiente se crea un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominado <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>This switch is set outside the code sample.</source>
          <target state="translated">Este modificador se establece fuera el ejemplo de código.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Si el modificador está establecido en el <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> o versiones posteriores, el ejemplo genera el primer mensaje de error para el <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Para obtener información sobre cómo agregar un agente de escucha para el <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> colección, consulte la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message and the <ph id="ph3">`category`</ph> on the same line as the first message.</source>
          <target state="translated">A continuación, si la <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> está establecido en <ph id="ph2">`Verbose`</ph>, el ejemplo genera el segundo mensaje de error y la <ph id="ph3">`category`</ph> en la misma línea que el primer mensaje.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>The second message is followed by a line terminator.</source>
          <target state="translated">El segundo mensaje va seguido de un terminador de línea.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">Puede minimizar la reducción del rendimiento de instrumentación de la aplicación mediante el uso de <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> instrucciones en lugar de usar <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> instrucciones.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">Los siguientes ejemplos de código de dos envían el mismo mensaje de depuración.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph> you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" /&gt;</ph>.</source>
          <target state="translated">Sin embargo, el primer ejemplo es mucho más rápido cuando el seguimiento está desactivado, porque si <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> se evalúa como <ph id="ph1">&lt;see langword="false" /&gt;</ph> no llame a <ph id="ph2">&lt;see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">El segundo ejemplo siempre se llama <ph id="ph1">&lt;see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, incluso cuando <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> es <ph id="ph2">&lt;see langword="false" /&gt;</ph> y no se genera ningún resultado de seguimiento.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">Esto puede dar lugar a ejecución innecesaria de código arbitrariamente complejo.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)">
          <source><bpt id="p1">**</bpt>First example<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Primer ejemplo<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)">
          <source><bpt id="p1">**</bpt>Second example<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Segundo ejemplo<ept id="p1">**</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>