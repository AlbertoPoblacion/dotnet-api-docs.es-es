<Type Name="IsExplicitlyDereferenced" FullName="System.Runtime.CompilerServices.IsExplicitlyDereferenced">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="120e8d772a4a124b91650cdd2020e5222e67ed69" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37639282" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class IsExplicitlyDereferenced" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsExplicitlyDereferenced extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsExplicitlyDereferenced" />
  <TypeSignature Language="VB.NET" Value="Public Class IsExplicitlyDereferenced" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsExplicitlyDereferenced abstract sealed" />
  <TypeSignature Language="F#" Value="type IsExplicitlyDereferenced = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Indica que un puntero administrado representa un parámetro de puntero dentro de una firma de método. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En C++, los punteros administrados y las referencias administradas se emiten en metadatos como punteros.  Para distinguir entre los dos tipos de metadatos, el compilador de Microsoft C++ aplica este modificador a punteros administrados.  No emite ningún modificador en tipos de referencia administrados.  Los compiladores necesitan conocer la sintaxis llamada correcta al importar un método de ámbito de metadatos.  El <xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced> clase y su asociado, el <xref:System.Runtime.CompilerServices.IsImplicitlyDereferenced> class, eliminar la ambigüedad de los parámetros de referencia de los parámetros de puntero.  
  
 Los compiladores emiten modificadores personalizados dentro de los metadatos para cambiar la forma en que el compilador de just-in-time (JIT) controla los valores cuando el comportamiento predeterminado no es adecuado.  Cuando el compilador JIT encuentra un modificador personalizado, controla el valor de la manera que especifica el modificador.  Los compiladores pueden modificadores personalizados se aplican a métodos, parámetros y valores devueltos.  El compilador JIT debe responder a los modificadores obligatorios, pero puede pasar por alto los modificadores opcionales.  
  
 Puede emitir modificadores personalizados en los metadatos mediante una de las técnicas siguientes:  
  
-   Uso de métodos en el <xref:System.Reflection.Emit.TypeBuilder> como clase <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, y <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.  
  
-   Generar un archivo de instrucciones de lenguaje intermedio (MSIL) de Microsoft que contenga llamadas a `modopt` y `modreq`y el ensamblado en el archivo con el [Ilasm.exe (ensamblador de IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).  
  
-   Uso de la API de reflexión no administrada.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo emitir una <xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced> objeto en un ensamblado mediante reflexión.  
  
 [!code-cpp[Runtime.CompilerServices.IsExplicitlyDereferenced#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.CompilerServices.IsExplicitlyDereferenced/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>