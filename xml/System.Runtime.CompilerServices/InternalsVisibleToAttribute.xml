<Type Name="InternalsVisibleToAttribute" FullName="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0dbad90729492314a23866ed7c79bfea50e363de" /><Meta Name="ms.sourcegitcommit" Value="f53ba3f284fd3661546ab51c379ed7872ed4ee74" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/08/2019" /><Meta Name="ms.locfileid" Value="54098219" /></Metadata><TypeSignature Language="C#" Value="public sealed class InternalsVisibleToAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InternalsVisibleToAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InternalsVisibleToAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InternalsVisibleToAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type InternalsVisibleToAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Especifica que los tipos que normalmente solo son visibles en el ensamblado actual también se pueden ver en un ensamblado especificado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, los tipos y miembros con `internal` ámbito (en C#) y `Friend` ámbito (en Visual Basic) solo son visibles en el ensamblado en el que se definen. El <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atributo hace que sean también visibles a los tipos en un ensamblado especificado, que se conoce como un ensamblado de confianza. Esto se aplica solo a `internal` (`Friend` en VB) no únicamente, los métodos `private` aquellos.
  
 El atributo se aplica en el nivel de ensamblado. Esto significa que se puede incluir al principio de un archivo de código fuente, o se puede incluir en el archivo AssemblyInfo en un proyecto de Visual Studio. Puede usar el atributo para especificar un ensamblado de confianza único que puede tener acceso a los tipos y miembros internos del ensamblado actual. Puede definir varios ensamblados de confianza de dos maneras. Pueden aparecer como atributos individuales de nivel de ensamblado, como se muestra en el ejemplo siguiente.  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/multiple1.cs#3)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/multiple1.vb#3)]  
  
 También pueden aparecer con independiente <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> etiquetas, pero una sola `assembly` palabra clave, como en el ejemplo siguiente se muestra.  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/multiple2.cs#4)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/multiple2.vb#4)]  
  
 El ensamblado de confianza se identifica mediante el <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor. El ensamblado actual y el ensamblado de confianza deben ser sin signo o ambos ensamblados deben firmarse con un nombre seguro.  
  
 Si ambos ensamblados son sin signo, el `assemblyName` argumento consta del nombre del ensamblado de confianza, especificado sin una extensión de nombre de archivo o ruta de acceso del directorio.  
  
 Si ambos ensamblados se firman con una fuerte nombre, el argumento para el <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor debe consistir en el nombre del ensamblado sin su directorio ruta de acceso o archivo de extensión de nombre, junto con la clave pública completa (y no su token de clave pública). Para obtener la clave pública completa de un ensamblado con nombre seguro, consulte el [obtener la clave pública completa](#Key) sección más adelante en este artículo. Para obtener más información sobre el uso de <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> con ensamblados de nombre seguro, vea el <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor.  
  
 No incluya valores para el <xref:System.Reflection.AssemblyName.CultureInfo%2A>, <xref:System.Reflection.AssemblyName.Version%2A>, o <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A> campo en el argumento; los compiladores de Visual Basic, C# y C++ tratan como un error del compilador. Si usa un compilador que no lo trata como un error (como el [ensamblador de IL (ILAsm.exe)](~/docs/framework/tools/ilasm-exe-il-assembler.md)) y los ensamblados tienen nombres seguros, un <xref:System.MethodAccessException> excepción se produce la primera vez que el ensamblado de confianza especificado tiene acceso a la ensamblado que contiene el <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atributo.  
  
 Para obtener más información sobre cómo usar este atributo, vea los temas siguientes:  
  
-   [Ensamblados de confianza (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [Ensamblados de confianza](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
<a name="Key"></a>   
## <a name="getting-the-full-public-key"></a>Obtener la clave pública completa  
 Puede usar el [herramienta nombre seguro (Sn.exe)](~/docs/framework/tools/sn-exe-strong-name-tool.md) para recuperar la clave pública completa de un archivo de clave con nombre seguro (.snk). Para ello, realice los pasos siguientes:  
  
1.  Extraiga la clave pública desde el archivo de clave con nombre seguro a un archivo independiente:  
  
     **Sn -p***snk_file* *outfile*   
  
2.  Mostrar la clave pública completa en la consola:  
  
     **Sn - tp***outfile*  
  
3.  Copie y pegue el valor de clave público completa en el código fuente.  
  
## <a name="compiling-the-friend-assembly-with-c"></a>Compilar el ensamblado de confianza con C#  
 Si usa el compilador de C# para compilar el ensamblado de confianza, debe especificar explícitamente el nombre del archivo de salida (.exe o .dll) mediante la **/out** opción del compilador. Esto es necesario porque el compilador no ha generado aún el nombre del ensamblado que está creando en el momento en que se enlaza a referencias externas. El **/out** es opcional para el compilador de Visual Basic y la correspondiente opción del compilador **-out** o **-o** opción del compilador no debe usarse cuando se compila friend los ensamblados con el F# compilador.  
  
## <a name="compiling-the-friend-assembly-with-c"></a>Compilar el ensamblado de confianza con C++  
 En C++, con el fin de realizar los miembros internos habilitados por la <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atributo puede tener acceso a un ensamblado de confianza, debe usar el `as_friend` atributo en la directiva de C++. Para obtener más información, consulte [ensamblados Friend (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd).  
  
   
  
## Examples  
 **Ensamblados firmados**  
  
 En el ejemplo siguiente se usa el <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atributo para realizar una `internal` método denominado `AppendDirectorySeparator` en un ensamblado firmado visible a otro ensamblado con signo. Define un `FileUtilities` clase que incluye una instancia interna `AppendDirectorySeparator` método. El <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atributo se aplica al ensamblado que contiene el `FileUtilities` clase. El atributo permite que un ensamblado denominado `Friend1` para tener acceso a este miembro interno.  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/assembly1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/assembly1.vb#1)]  
  
 Si en el ejemplo siguiente se compila en un ensamblado con nombre seguro denominado `Friend1`, el `Example.Main` método `Friend1` correctamente puede llamar a la `FileUtilities.AppendDirectorySeparator` método, aunque el método es interno a la `Assembly1` ensamblado. Tenga en cuenta que si está compilando en C# desde la línea de comandos, se debe usar el **/out** modificador del compilador para asegurarse de que el nombre del ensamblado de confianza está disponible cuando el compilador enlaza a referencias externas.  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend1.cpp#2)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend1.cs#2)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend1.vb#2)]  
  
 **Ensamblados no firmados**  
  
 En el ejemplo siguiente se usa el <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atributo para realizar una `internal` unsigned de miembro de un ensamblado no firmado visible a otro ensamblado. El atributo que garantiza la `internal` `StringLib.IsFirstLetterUpperCase` método en un ensamblado denominado `UtilityLib` es visible para el código en un ensamblado denominado `Friend2`.  Este es el código fuente de UtilityLib.dll:  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/utilitylib.cs#5)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/utilitylib.vb#5)]  
  
 En el ejemplo siguiente se proporciona el código fuente para el `Friend2` ensamblado. Tenga en cuenta que si está compilando en C# desde la línea de comandos, se debe usar el **/out** modificador del compilador para asegurarse de que el nombre del ensamblado de confianza está disponible cuando el compilador enlaza a referencias externas.  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend2.cpp#6)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend2.cs#6)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend2.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalsVisibleToAttribute (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InternalsVisibleToAttribute(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.CompilerServices.InternalsVisibleToAttribute : string -&gt; System.Runtime.CompilerServices.InternalsVisibleToAttribute" Usage="new System.Runtime.CompilerServices.InternalsVisibleToAttribute assemblyName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">El nombre de un ensamblado de confianza.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" /> con el nombre del ensamblado de confianza especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor define un ensamblado de confianza, que es un ensamblado que tiene acceso a los tipos y miembros internos del ensamblado actual.  
  
 El ensamblado actual y el ensamblado de confianza deben ser sin signo o ambos deben firmarse con un nombre seguro. (Para obtener más información acerca de los ensamblados con nombre seguro, vea [crear y utilizar ensamblados](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md).) Si ambos están firmados, el `assemblyName` argumento consta del nombre del ensamblado de confianza, especificado sin una extensión de archivo o ruta de acceso del directorio. Si ambos están firmados, `assemblyName` consta del nombre del ensamblado de confianza sin su directorio ruta de acceso o archivo de extensión de nombre, junto con su clave pública completa (pero no su token de clave pública). Los demás componentes de un nombre seguro, como las que proporcionan la referencia cultural, versión o información de la arquitectura de procesador, no se puede especificar en el `assemblyName` argumento.  
  
> [!IMPORTANT]
>  Si usa el compilador de C# para compilar el ensamblado de confianza, debe especificar explícitamente el nombre del archivo de salida (.exe o .dll) mediante la **/out** opción del compilador. Esto es necesario porque el compilador no ha generado aún el nombre del ensamblado que está creando en el momento en que se enlaza a referencias externas. El **/out** es opcional para el compilador de Visual Basic y la correspondiente opción del compilador **-out** o **-o** opción del compilador no debe usarse cuando se compila friend los ensamblados con el F# compilador.  
  
 Puede usar [Sn.exe (Strong Name Tool)](~/docs/framework/tools/sn-exe-strong-name-tool.md) para recuperar la clave pública completa de un archivo de clave con nombre seguro (.snk). Para ello, realice los pasos siguientes:  
  
1.  Extraiga la clave pública desde el archivo de clave con nombre seguro a un archivo independiente:  
  
     **Sn -p***snk_file* *outfile*   
  
2.  Mostrar la clave pública completa en la consola:  
  
     **Sn - tp***outfile*  
  
3.  Copie y pegue el valor de clave público completa en el código fuente.  
  
 Para obtener más información sobre cómo usar el <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> de atributo, vea los temas siguientes:  
  
-   [Ensamblados de confianza (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [Ensamblados de confianza](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
   
  
## Examples  
 **Ensamblados firmados**  
  
 En el ejemplo siguiente se usa el <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atributo para realizar una `internal` método denominado `AppendDirectorySeparator` en un ensamblado firmado visible a otro ensamblado con signo. Define un `FileUtilities` clase que incluye una instancia interna `AppendDirectorySeparator` método. El <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atributo se aplica al ensamblado que contiene el `FileUtilities` clase. El atributo permite que un ensamblado denominado `Friend1` para tener acceso a este miembro interno.  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/assembly1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/assembly1.vb#1)]  
  
 Si en el ejemplo siguiente se compila en un ensamblado con nombre seguro denominado `Friend1`, puede llamar correctamente a la `FileUtilities.AppendDirectorySeparator` método, incluso después de que el método es interno a la `Assembly1` ensamblado. Tenga en cuenta que si está compilando en C# desde la línea de comandos, se debe usar el **/out** modificador del compilador para asegurarse de que el nombre del ensamblado de confianza está disponible cuando el compilador enlaza a referencias externas.  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend1.cpp#2)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend1.cs#2)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend1.vb#2)]  
  
 En el ejemplo siguiente se usa el <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> atributo para realizar una `internal` unsigned de miembro de un ensamblado no firmado visible a otro ensamblado. El atributo que garantiza la `internal` `StringLib.IsFirstLetterUpperCase` método en un ensamblado denominado `UtilityLib` es visible para el código en un ensamblado denominado `Friend2`.  Este es el código fuente de UtilityLib.dll:  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/utilitylib.cs#5)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/utilitylib.vb#5)]  
  
 **Ensamblados no firmados**  
  
 En el ejemplo siguiente se proporciona el código fuente para el `Friend2` ensamblado. Tenga en cuenta que si está compilando en C# desde la línea de comandos, se debe usar el **/out** modificador del compilador para asegurarse de que el nombre del ensamblado de confianza está disponible cuando el compilador enlaza a referencias externas.  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend2.cpp#6)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend2.cs#6)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend2.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllInternalsVisible">
      <MemberSignature Language="C#" Value="public bool AllInternalsVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllInternalsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property AllInternalsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllInternalsVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllInternalsVisible : bool with get, set" Usage="System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Esta propiedad no está implementada.</summary>
        <value>Esta propiedad no devuelve ningún valor.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public string AssemblyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssemblyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyName : string" Usage="System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre del ensamblado de confianza para el que todos los tipos y miembros de tipo marcados con la palabra clave <see langword="internal" /> se van ha hacer visibles.</summary>
        <value>Cadena que representa el nombre de un ensamblado de confianza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información sobre cómo usar el <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> de atributo, vea los temas siguientes:  
  
-   [Ensamblados de confianza (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [Ensamblados de confianza](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
