<Type Name="IsBoxed" FullName="System.Runtime.CompilerServices.IsBoxed">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="98fdca9d104de305cc9a6aac9acaaa49fa0e0d89" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36636731" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class IsBoxed" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsBoxed extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsBoxed" />
  <TypeSignature Language="VB.NET" Value="Public Class IsBoxed" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsBoxed abstract sealed" />
  <TypeSignature Language="F#" Value="type IsBoxed = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="dba4c-101">Indica que el tipo de referencia modificado es un tipo de valor al que se le ha aplicado la conversión boxing.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dba4c-101">Indicates that the modified reference type is a boxed value type.</span>
      </span>
      <span data-ttu-id="dba4c-102">Esta clase no puede heredarse.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dba4c-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dba4c-103">El compilador de Microsoft C++ admite los tipos de valor con conversión boxing directamente en el idioma.</span><span class="sxs-lookup"><span data-stu-id="dba4c-103">The Microsoft C++ compiler supports boxed value types directly in the language.</span></span>  <span data-ttu-id="dba4c-104">Obtener información acerca de los tipos de valor con conversión boxing se emite en metadatos como un modificador personalizado, donde el modificador decora una referencia al tipo de valor que se va a una conversión boxing.</span><span class="sxs-lookup"><span data-stu-id="dba4c-104">Information about boxed value types is emitted into metadata as a custom modifier, where the modifier decorates a reference to the value type being boxed.</span></span>  
  
 <span data-ttu-id="dba4c-105">Los compiladores emiten modificadores personalizados dentro de los metadatos para cambiar la manera en que el compilador de just-in-time (JIT) administra los valores cuando el comportamiento predeterminado no es adecuado.</span><span class="sxs-lookup"><span data-stu-id="dba4c-105">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="dba4c-106">Cuando el compilador JIT encuentra un modificador personalizado, controla el valor de la manera que especifica el modificador.</span><span class="sxs-lookup"><span data-stu-id="dba4c-106">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="dba4c-107">Compiladores pueden aplicar modificadores personalizados a métodos, parámetros y valores devueltos.</span><span class="sxs-lookup"><span data-stu-id="dba4c-107">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="dba4c-108">El compilador JIT debe responder a los modificadores requeridos pero puede pasar por alto los modificadores opcionales.</span><span class="sxs-lookup"><span data-stu-id="dba4c-108">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  
  
 <span data-ttu-id="dba4c-109">Puede emitir modificadores personalizados en los metadatos utilizando una de las técnicas siguientes:</span><span class="sxs-lookup"><span data-stu-id="dba4c-109">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="dba4c-110">Uso de métodos en el <xref:System.Reflection.Emit.TypeBuilder> clase como <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, y <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="dba4c-110">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="dba4c-111">Generar un archivo de instrucciones de lenguaje intermedio (MSIL) de Microsoft que contenga llamadas a `modopt` y `modreq`y ensamblando el archivo con el [Ilasm.exe (ensamblador de IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="dba4c-111">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="dba4c-112">Uso de la API de reflexión no administrada.</span><span class="sxs-lookup"><span data-stu-id="dba4c-112">Using the unmanaged reflection API.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dba4c-113">En el ejemplo siguiente se muestra cómo emitir una <xref:System.Runtime.CompilerServices.IsBoxed> objeto en un ensamblado utilizando la reflexión.</span><span class="sxs-lookup"><span data-stu-id="dba4c-113">The following example demonstrates how to emit an <xref:System.Runtime.CompilerServices.IsBoxed> object into an assembly using reflection.</span></span>  
  
 [!code-cpp[Runtime.CompilerServices.IsBoxed#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.CompilerServices.IsBoxed/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>