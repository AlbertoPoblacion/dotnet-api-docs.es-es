<Type Name="CallConvThiscall" FullName="System.Runtime.CompilerServices.CallConvThiscall">
  <Metadata><Meta Name="ms.openlocfilehash" Value="82f61173b96f115bb9f6e3528deb8a18cb782fa1" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58730018" /></Metadata><TypeSignature Language="C#" Value="public class CallConvThiscall" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallConvThiscall extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.CallConvThiscall" />
  <TypeSignature Language="VB.NET" Value="Public Class CallConvThiscall" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallConvThiscall" />
  <TypeSignature Language="F#" Value="type CallConvThiscall = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Indica que un método debe utilizar la convención de llamada <see langword="ThisCall" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se usa el `ThisCall` convención de llamada, el primer parámetro de una llamada al método es el `this` puntero, que se almacena en ECX. Otros parámetros de una llamada al método se insertan en la pila. Esta convención de llamada se utiliza para llamar a métodos en clases exportadas desde un archivo DLL no administrado.  
  
 Las clases de <xref:System.Runtime.CompilerServices> son para uso exclusivo de los autores de compiladores.  
  
 Los compiladores emiten modificadores personalizados dentro de los metadatos para cambiar la forma en que el compilador de just-in-time (JIT) controla los valores cuando el comportamiento predeterminado no es adecuado.  Cuando el compilador JIT encuentra un modificador personalizado, controla el valor de la manera que especifica el modificador.  Los compiladores pueden modificadores personalizados se aplican a métodos, parámetros y valores devueltos.  El compilador JIT debe responder a los modificadores obligatorios, pero puede pasar por alto los modificadores opcionales.  Un compilador de C++ podría emitir un modificador personalizado para describir cómo se debería tratar un byte en casos donde el compilador JIT trata los bytes de una manera que no es compatible con C++ de forma predeterminada.  
  
 Puede emitir modificadores personalizados en los metadatos mediante una de las técnicas siguientes:  
  
-   Uso de métodos en el <xref:System.Reflection.Emit.TypeBuilder> como clase <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, y <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.  
  
-   Generar un archivo de instrucciones de lenguaje intermedio (MSIL) de Microsoft que contenga llamadas a `modopt` y `modreq`y el ensamblado en el archivo con el [Ilasm.exe (ensamblador de IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).  
  
-   Uso de la API de reflexión no administrada.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallConvThiscall ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.CallConvThiscall.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallConvThiscall();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.CompilerServices.CallConvThiscall" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las clases de <xref:System.Runtime.CompilerServices> son para uso exclusivo de los autores de compiladores.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>