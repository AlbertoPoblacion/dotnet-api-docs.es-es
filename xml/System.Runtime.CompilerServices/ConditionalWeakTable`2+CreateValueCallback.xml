<Type Name="ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback" FullName="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="46abe19aea8376a990307ff0ed9a404e52a57119" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36637488" /></Metadata><TypeSignature Language="C#" Value="public delegate TValue ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback(TKey key) where TKey : class where TValue : class;" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed ConditionalWeakTable`2/CreateValueCallback&lt;class TKey, class TValue&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ConditionalWeakTable(Of TKey, TValue).CreateValueCallback(key As TKey) As TValue " />
  <TypeSignature Language="C++ CLI" Value="public:  where TKey : class where TValue : classdelegate TValue ConditionalWeakTable&lt;TKey, TValue&gt;::CreateValueCallback(TKey key);" />
  <TypeSignature Language="F#" Value="type ConditionalWeakTable&lt;'Key, 'Value (requires 'Key : null and 'Value : null)&gt;.CreateValueCallback = delegate of 'Key -&gt; 'Value" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TValue">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="key" Type="TKey" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TValue</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="key">Clave que pertenece al valor que se va a crear.</param>
    <summary>Representa un método que crea un valor no predeterminado para agregar como parte de un par clave-valor a un objeto <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />.</summary>
    <returns>Instancia de un tipo de referencia que representa el valor que se debe adjuntar a la clave especificada.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegado encapsula un método de devolución de llamada invocada por el <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A?displayProperty=nameWithType> método cuando la clave pasada al método no se encuentra en la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> objeto. El <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> método pasa al método de devolución de llamada la clave que representa un objeto administrado al que un valor de propiedad consiste en vincular dinámicamente. El método es responsable de devolver el valor de propiedad a su llamador, que, a su vez, agrega el par clave/valor a la tabla.  
  
 El <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> método se utiliza para devolver una instancia de un tipo de referencia que se puede conectar a la clave especificada. Permite que la instancia se puede inicializar con valores no predeterminados. Si no se encuentra la clave en la tabla, el <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A?displayProperty=nameWithType> método agrega un par clave/valor en el que el valor se inicializa con los valores predeterminados.  
  
   
  
## Examples  
 En el ejemplo siguiente se define un `MainClass` clase y un `MainInfo` clase. `MainInfo` Proporciona información sobre la `MainClass` instancia. También define una variable static (`Shared` en Visual Basic) `CreateAttachedValue` método que se puede asignar a la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegar y pasa a la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> método. El ejemplo llama a la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> método para agregar un `MainClass` objeto y su correspondiente `MainInfo` objeto a un <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> tabla. El ejemplo también muestra las llamadas a la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> y <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> métodos para agregar pares clave/valor a la tabla y una llamada a la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> método para recuperar el valor que pertenece a una clave existente.  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
  </Docs>
</Type>