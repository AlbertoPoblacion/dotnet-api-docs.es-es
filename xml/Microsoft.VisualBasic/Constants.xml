<Type Name="Constants" FullName="Microsoft.VisualBasic.Constants">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="69daedb21492b269ca9a41ea30c6e93736ed0c4f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Constants" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Constants extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Constants" />
  <TypeSignature Language="VB.NET" Value="Public Module Constants" />
  <TypeSignature Language="C++ CLI" Value="public ref class Constants sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c36dc-101">El módulo <see langword="Constants" /> contiene diversas constantes.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c36dc-101">The <see langword="Constants" /> module contains miscellaneous constants.</span>
      </span>
      <span data-ttu-id="c36dc-102">Estas constantes pueden utilizarse en cualquier parte del código.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c36dc-102">These constants can be used anywhere in your code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-103">Este módulo admite las constantes del lenguaje Visual Basic que corresponden a los miembros de muchas enumeraciones de Visual Basic:</span><span class="sxs-lookup"><span data-stu-id="c36dc-103">This module supports the Visual Basic language constants that correspond to the members of many Visual Basic enumerations:</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="vbAbort">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbAbort = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbAbort = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbAbort" />
      <MemberSignature Language="VB.NET" Value="Public Const vbAbort As MsgBoxResult  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbAbort = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-104">Indica que se hizo clic en el botón <see langword="Abort" /> de un cuadro de mensaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-104">Indicates that the <see langword="Abort" /> button was clicked in a message box.</span>
          </span>
          <span data-ttu-id="c36dc-105">Valor devuelto por la función <see langword="MsgBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-105">Returned by the <see langword="MsgBox" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-106">Cuando se llama a la `MsgBox` función, puede usar el `MsgBoxResult` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-106">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-107">El `MsgBox` función devuelve un `MsgBoxResult` valor de enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-107">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbAbortRetryIgnore">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbAbortRetryIgnore = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbAbortRetryIgnore = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbAbortRetryIgnore" />
      <MemberSignature Language="VB.NET" Value="Public Const vbAbortRetryIgnore As MsgBoxStyle  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbAbortRetryIgnore = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-108">Indica que se van a mostrar los botones <see langword="Abort" />, <see langword="Retry" /> e <see langword="Ignore" /> cuando se llame a la función <see langword="MsgBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-108">Indicates that the <see langword="Abort" />, <see langword="Retry" />, and <see langword="Ignore" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-109">Cuando se llama a la `MsgBox` función, puede usar el `MsgBoxStyle` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-109">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-110">El `Buttons` argumento toma el `MsgBoxStyle` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-110">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbApplicationModal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbApplicationModal = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbApplicationModal = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbApplicationModal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbApplicationModal As MsgBoxStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbApplicationModal = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-111">Indica que se va a mostrar el cuadro de mensaje como un cuadro de diálogo modal cuando se llame a la función <see langword="MsgBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-111">Indicates that the message box will be displayed as a modal dialog box when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-112">Cuando se llama a la `MsgBox` función, puede usar el `MsgBoxStyle` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-112">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-113">El `Buttons` argumento toma el `MsgBoxStyle` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-113">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbArchive">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbArchive = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbArchive = (32)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbArchive" />
      <MemberSignature Language="VB.NET" Value="Public Const vbArchive As FileAttribute  = 32" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbArchive = 32;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-114">Indica que el archivo ha cambiado desde la última operación de copia de seguridad para las funciones de acceso a archivos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-114">Indicates that the file has changed since the last backup operation for file-access functions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-115">Cuando se llama a la `Dir`, `GetAttr`, o `SetAttr` funciones, puede usar el `FileAttribute` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-115">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-116">El `Attributes` argumento toma el `FileAttribute` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-116">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="c36dc-117">Cuando se realizan operaciones de E/S de archivos, la `My.Computer.FileSystem` objeto proporciona mayor rendimiento y facilidad de uso de archivo heredado métodos de E/S.</span><span class="sxs-lookup"><span data-stu-id="c36dc-117">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="c36dc-118">Para obtener más información, vea <xref:Microsoft.VisualBasic.FileSystem> objeto.</span><span class="sxs-lookup"><span data-stu-id="c36dc-118">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbArray">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbArray = 8192;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbArray = (8192)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbArray" />
      <MemberSignature Language="VB.NET" Value="Public Const vbArray As VariantType  = 8192" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbArray = 8192;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-119">Indica que el tipo de un objeto Variant es una matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-119">Indicates that the type of a variant object is an array.</span>
          </span>
          <span data-ttu-id="c36dc-120">Valor devuelto por la función <see langword="VarType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-120">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-121">Cuando se llama a la `VarType` función, puede utilizar los miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-121">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-122">El `VariantType` enumeración define constantes que se utilizan para identificar posibles `Variant` tipos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-122">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c36dc-123">La siguiente tabla se recogen los `VariantType` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-123">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbBack">
      <MemberSignature Language="C#" Value="public const string vbBack;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbBack" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbBack" />
      <MemberSignature Language="VB.NET" Value="Public Const vbBack As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbBack;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-124">Representa un carácter de retroceso para las funciones de impresión y visualización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-124">Represents a backspace character for print and display functions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbBinaryCompare">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CompareMethod vbBinaryCompare = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CompareMethod vbBinaryCompare = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbBinaryCompare" />
      <MemberSignature Language="VB.NET" Value="Public Const vbBinaryCompare As CompareMethod  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CompareMethod vbBinaryCompare = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CompareMethod</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-125">Especifica que debe realizarse una comparación binaria cuando se llama a las funciones de comparación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-125">Specifies that a binary comparison should be performed when comparison functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-126">Cuando se llama a las funciones de comparación, puede usar el <xref:Microsoft.VisualBasic.CompareMethod> enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-126">When you call comparison functions, you can use the <xref:Microsoft.VisualBasic.CompareMethod> enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-127">El `Compare` argumento toma el `CompareMethod` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-127">The `Compare` argument takes the `CompareMethod` enumeration members.</span></span>  
  
 <span data-ttu-id="c36dc-128">Para las comparaciones de texto y binarias, vea [instrucción Option Compare](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span><span class="sxs-lookup"><span data-stu-id="c36dc-128">For binary and text comparisons, see [Option Compare Statement](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CompareMethod" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      </Docs>
    </Member>
    <Member MemberName="vbBoolean">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbBoolean = 11;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbBoolean = (11)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbBoolean" />
      <MemberSignature Language="VB.NET" Value="Public Const vbBoolean As VariantType  = 11" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbBoolean = 11;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-129">Indica que el tipo de un objeto Variant es <see langword="Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-129">Indicates that the type of a variant object is <see langword="Boolean" />.</span>
          </span>
          <span data-ttu-id="c36dc-130">Valor devuelto por la función <see langword="VarType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-130">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-131">Cuando se llama a la `VarType` función, puede utilizar los miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-131">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-132">El `VariantType` enumeración define constantes que se utilizan para identificar posibles `Variant` tipos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-132">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c36dc-133">La siguiente tabla se recogen los `VariantType` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-133">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbByte">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbByte = 17;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbByte = (17)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbByte" />
      <MemberSignature Language="VB.NET" Value="Public Const vbByte As VariantType  = 17" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbByte = 17;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>17</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-134">Indica que el tipo de un objeto Variant es <see langword="Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-134">Indicates that the type of a variant object is <see langword="Byte" />.</span>
          </span>
          <span data-ttu-id="c36dc-135">Valor devuelto por la función <see langword="VarType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-135">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-136">Cuando se llama a la `VarType` función, puede utilizar los miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-136">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-137">El `VariantType` enumeración define constantes que se utilizan para identificar posibles `Variant` tipos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-137">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c36dc-138">La siguiente tabla se recogen los `VariantType` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-138">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbCancel = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbCancel = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCancel As MsgBoxResult  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbCancel = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-139">Indica que se hizo clic en el botón <see langword="Cancel" /> de un cuadro de mensaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-139">Indicates that the <see langword="Cancel" /> button was clicked in a message box.</span>
          </span>
          <span data-ttu-id="c36dc-140">Valor devuelto por la función <see langword="MsgBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-140">Returned by the <see langword="MsgBox" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-141">Cuando se llama a la `MsgBox` función, puede usar el `MsgBoxResult` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-141">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-142">El `MsgBox` función devuelve un `MsgBoxResult` valor de enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-142">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbCr">
      <MemberSignature Language="C#" Value="public const string vbCr;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbCr" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCr" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCr As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbCr;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-143">Representa un carácter de retorno de carro para las funciones de impresión y visualización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-143">Represents a carriage-return character for print and display functions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbCritical">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbCritical = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbCritical = (16)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCritical" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCritical As MsgBoxStyle  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbCritical = 16;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-144">Indica que se va a mostrar el icono de mensaje crítico cuando se llama a la función <see langword="MsgBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-144">Indicates that the critical message icon will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-145">Cuando se llama a la `MsgBox` función, puede usar el `MsgBoxStyle` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-145">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-146">El `Buttons` argumento toma el `MsgBoxStyle` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-146">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbCrLf">
      <MemberSignature Language="C#" Value="public const string vbCrLf;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbCrLf" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCrLf" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCrLf As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbCrLf;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-147">Representa un carácter de retorno de carro combinado con un carácter de avance de línea para las funciones de impresión y visualización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-147">Represents a carriage-return character combined with a linefeed character for print and display functions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbCurrency">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbCurrency = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbCurrency = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCurrency" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCurrency As VariantType  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbCurrency = 6;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-148">Indica que el tipo de un objeto Variant es <see langword="Currency" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-148">Indicates that the type of a variant object is <see langword="Currency" />.</span>
          </span>
          <span data-ttu-id="c36dc-149">Valor devuelto por la función <see langword="VarType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-149">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-150">Cuando se llama a la `VarType` función, puede utilizar los miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-150">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-151">El `VariantType` enumeración define constantes que se utilizan para identificar posibles `Variant` tipos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-151">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c36dc-152">La siguiente tabla se recogen los `VariantType` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-152">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbDate = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbDate = (7)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDate As VariantType  = 7" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbDate = 7;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-153">Indica que el tipo de un objeto Variant es <see langword="Date" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-153">Indicates that the type of a variant object is <see langword="Date" />.</span>
          </span>
          <span data-ttu-id="c36dc-154">Valor devuelto por la función <see langword="VarType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-154">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-155">Cuando se llama a la `VarType` función, puede utilizar los miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-155">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-156">El `VariantType` enumeración define constantes que se utilizan para identificar posibles `Variant` tipos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-156">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c36dc-157">La siguiente tabla se recogen los `VariantType` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-157">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDecimal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbDecimal = 14;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbDecimal = (14)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDecimal As VariantType  = 14" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbDecimal = 14;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>14</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-158">Indica que el tipo de un objeto Variant es <see langword="Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-158">Indicates that the type of a variant object is <see langword="Decimal" />.</span>
          </span>
          <span data-ttu-id="c36dc-159">Valor devuelto por la función <see langword="VarType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-159">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-160">Cuando se llama a la `VarType` función, puede utilizar los miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-160">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-161">El `VariantType` enumeración define constantes que se utilizan para identificar posibles `Variant` tipos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-161">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c36dc-162">La siguiente tabla se recogen los `VariantType` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-162">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDefaultButton1">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton1 = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton1 = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDefaultButton1" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDefaultButton1 As MsgBoxStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbDefaultButton1 = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-163">Indica que el botón situado más a la izquierda se selecciona como botón predeterminado cuando aparece el cuadro de mensaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-163">Indicates that the leftmost button is selected as the default button when the message box appears.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-164">Cuando se llama a la `MsgBox` función, puede usar el `MsgBoxStyle` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-164">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-165">El `Buttons` argumento toma el `MsgBoxStyle` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-165">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrConstants#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrConstants/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDefaultButton2">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton2 = 256;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton2 = (256)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDefaultButton2" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDefaultButton2 As MsgBoxStyle  = 256" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbDefaultButton2 = 256;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-166">Indica que el segundo botón de la izquierda se selecciona como botón predeterminado cuando aparece el cuadro de mensaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-166">Indicates that the second button from the left is selected as the default button when the message box appears.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-167">Cuando se llama a la `MsgBox` función, puede usar el `MsgBoxStyle` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-167">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-168">El `Buttons` argumento toma el `MsgBoxStyle` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-168">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrConstants#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrConstants/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDefaultButton3">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton3 = 512;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton3 = (512)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDefaultButton3" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDefaultButton3 As MsgBoxStyle  = 512" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbDefaultButton3 = 512;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-169">Indica que el tercer botón de la izquierda se selecciona como botón predeterminado cuando aparece el cuadro de mensaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-169">Indicates that the third button from the left is selected as the default button when the message box appears.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-170">Cuando se llama a la `MsgBox` función, puede usar el `MsgBoxStyle` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-170">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-171">El `Buttons` argumento toma el `MsgBoxStyle` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-171">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrConstants#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrConstants/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDirectory">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbDirectory = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbDirectory = (16)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDirectory As FileAttribute  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbDirectory = 16;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-172">Indica que el archivo es un directorio o carpeta para las funciones de acceso a archivos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-172">Indicates that the file is a directory or folder for file-access functions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-173">Cuando se llama a la `Dir`, `GetAttr`, o `SetAttr` funciones, puede usar el `FileAttribute` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-173">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-174">El `Attributes` argumento toma el `FileAttribute` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-174">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="c36dc-175">Cuando se realizan operaciones de E/S de archivos, la `My.Computer.FileSystem` objeto proporciona mayor rendimiento y facilidad de uso de archivo heredado métodos de E/S.</span><span class="sxs-lookup"><span data-stu-id="c36dc-175">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="c36dc-176">Para obtener más información, vea <xref:Microsoft.VisualBasic.FileSystem> objeto.</span><span class="sxs-lookup"><span data-stu-id="c36dc-176">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbDouble">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbDouble = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbDouble = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDouble" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDouble As VariantType  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbDouble = 5;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-177">Indica que el tipo de un objeto Variant es <see langword="Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-177">Indicates that the type of a variant object is <see langword="Double" />.</span>
          </span>
          <span data-ttu-id="c36dc-178">Valor devuelto por la función <see langword="VarType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-178">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-179">Cuando se llama a la `VarType` función, puede utilizar los miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-179">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-180">El `VariantType` enumeración define constantes que se utilizan para identificar posibles `Variant` tipos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-180">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c36dc-181">La siguiente tabla se recogen los `VariantType` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-181">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbEmpty">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbEmpty = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbEmpty = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Const vbEmpty As VariantType  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbEmpty = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-182">Indica que el tipo de un objeto Variant es <see langword="Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-182">Indicates that the type of a variant object is <see langword="Empty" />.</span>
          </span>
          <span data-ttu-id="c36dc-183">Valor devuelto por la función <see langword="VarType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-183">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-184">Cuando se llama a la `VarType` función, puede utilizar los miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-184">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-185">El `VariantType` enumeración define constantes que se utilizan para identificar posibles `Variant` tipos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-185">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c36dc-186">La siguiente tabla se recogen los `VariantType` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-186">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbExclamation">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbExclamation = 48;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbExclamation = (48)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbExclamation" />
      <MemberSignature Language="VB.NET" Value="Public Const vbExclamation As MsgBoxStyle  = 48" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbExclamation = 48;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>48</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-187">Indica que se va a mostrar el icono de exclamación cuando se llama a la función <see langword="MsgBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-187">Indicates that the exclamation icon will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-188">Cuando se llama a la `MsgBox` función, puede usar el `MsgBoxStyle` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-188">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-189">El `Buttons` argumento toma el `MsgBoxStyle` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-189">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbFalse">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.TriState vbFalse = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.TriState vbFalse = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFalse" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFalse As TriState  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::TriState vbFalse = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TriState</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-190">Indica que debe utilizarse un valor <see langword="Boolean" /> de <see langword="False" /> cuando se llama a funciones de formato numérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-190">Indicates that a <see langword="Boolean" /> value of <see langword="False" /> should be used when number-formatting functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-191">Cuando las funciones de formato de número de llamadas, puede usar los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-191">When you call number-formatting functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      </Docs>
    </Member>
    <Member MemberName="vbFirstFourDays">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbFirstFourDays = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbFirstFourDays = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFirstFourDays" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFirstFourDays As FirstWeekOfYear  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbFirstFourDays = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-192">Indica que debe usarse la primera semana del año que tenga al menos cuatro días cuando se llama a funciones relacionadas con fechas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-192">Indicates that the first week of the year that has at least four days should be used when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-193">Cuando se llama a funciones relacionadas con fechas, puede utilizar a los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-193">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-194">Algunas funciones relacionadas con fechas toman un `DayOfWeek` argumento, un `WeekOfYear` argumento o ambos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-194">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="c36dc-195">El `FirstWeekOfYear` enumeración especifica los valores válidos para el `WeekOfYear` argumentos, así como los posibles valores devueltos de las funciones.</span><span class="sxs-lookup"><span data-stu-id="c36dc-195">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="c36dc-196">El `WeekOfYear` argumento toma el `FirstWeekOfYear` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-196">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbFirstFullWeek">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbFirstFullWeek = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbFirstFullWeek = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFirstFullWeek" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFirstFullWeek As FirstWeekOfYear  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbFirstFullWeek = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-197">Indica que debe usarse la primera semana completa del año cuando se llama a funciones relacionadas con fechas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-197">Indicates that the first full week of the year should be used when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-198">Cuando se llama a funciones relacionadas con fechas, puede utilizar a los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-198">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-199">Algunas funciones relacionadas con fechas toman un `DayOfWeek` argumento, un `WeekOfYear` argumento o ambos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-199">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="c36dc-200">El `FirstWeekOfYear` enumeración especifica los valores válidos para el `WeekOfYear` argumentos, así como los posibles valores devueltos de las funciones.</span><span class="sxs-lookup"><span data-stu-id="c36dc-200">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="c36dc-201">El `WeekOfYear` argumento toma el `FirstWeekOfYear` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-201">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbFirstJan1">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbFirstJan1 = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbFirstJan1 = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFirstJan1" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFirstJan1 As FirstWeekOfYear  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbFirstJan1 = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-202">Indica que debe usarse la semana del año en la que tiene lugar el 1 de enero cuando se llama a funciones relacionadas con fechas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-202">Indicates that the week of the year in which January 1 occurs should be used when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-203">Cuando se llama a funciones relacionadas con fechas, puede utilizar a los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-203">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-204">Algunas funciones relacionadas con fechas toman un `DayOfWeek` argumento, un `WeekOfYear` argumento o ambos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-204">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="c36dc-205">El `FirstWeekOfYear` enumeración especifica los valores válidos para el `WeekOfYear` argumentos, así como los posibles valores devueltos de las funciones.</span><span class="sxs-lookup"><span data-stu-id="c36dc-205">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="c36dc-206">El `WeekOfYear` argumento toma el `FirstWeekOfYear` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-206">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbFormFeed">
      <MemberSignature Language="C#" Value="public const string vbFormFeed;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbFormFeed" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFormFeed" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFormFeed As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbFormFeed;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-207">Representa un carácter de avance de página para las funciones de impresión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-207">Represents a form-feed character for print functions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbFriday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbFriday = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbFriday = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFriday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFriday As FirstDayOfWeek  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbFriday = 6;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-208">Especifica que debe usarse el viernes como primer día de la semana cuando se llama a funciones relacionadas con fechas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-208">Specifies that Friday should be used as the first day of the week when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-209">Cuando se llama a funciones relacionadas con fechas, puede utilizar a los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-209">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-210">Algunas funciones relacionadas con fechas toman un `DayOfWeek` argumento, un `WeekOfYear` argumento o ambos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-210">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="c36dc-211">El `FirstDayOfWeek` enumeración especifica los valores válidos para el `DayOfWeek` argumentos, así como los posibles valores devueltos de las funciones.</span><span class="sxs-lookup"><span data-stu-id="c36dc-211">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="c36dc-212">El `DayOfWeek` argumento toma el `FirstDayOfWeek` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-212">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="c36dc-213">Funciones relacionadas con fechas también devuelven `FirstDayOfWeek` valores (excepto `System`).</span><span class="sxs-lookup"><span data-stu-id="c36dc-213">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbGeneralDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbGeneralDate = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbGeneralDate = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbGeneralDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbGeneralDate As DateFormat  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbGeneralDate = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-214">Indica que debe usarse el formato de fecha general de la referencia cultural actual cuando se llama a la función <see langword="FormatDateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-214">Indicates that the general date format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-215">Cuando se llama a la `FormatDateTime` función, puede utilizar los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-215">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c36dc-216">Puede tener acceso a la configuración regional del equipo haciendo doble clic en el **opciones regionales** icono, se encuentra en **el Panel de Control**.</span><span class="sxs-lookup"><span data-stu-id="c36dc-216">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      </Docs>
    </Member>
    <Member MemberName="vbGet">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbGet = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbGet = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbGet" />
      <MemberSignature Language="VB.NET" Value="Public Const vbGet As CallType  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbGet = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-217">Especifica que debe usarse un valor de propiedad cuando se llama a la función <see langword="CallByName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-217">Specifies that a property value should be retrieved when the <see langword="CallByName" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-218">Cuando se llama a la `CallByName` función, puede utilizar la siguiente `CallType` miembros de la enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-218">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-219">El `UseCallType` argumento toma el `CallType` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-219">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbHidden">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbHidden = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbHidden = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbHidden" />
      <MemberSignature Language="VB.NET" Value="Public Const vbHidden As FileAttribute  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbHidden = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-220">Indica que el archivo es un archivo oculto para las funciones de acceso a archivos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-220">Indicates that the file is a hidden file for file-access functions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-221">Cuando se llama a la `Dir`, `GetAttr`, o `SetAttr` funciones, puede usar el `FileAttribute` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-221">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-222">El `Attributes` argumento toma el `FileAttribute` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-222">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="c36dc-223">Cuando se realizan operaciones de E/S de archivos, la `My.Computer.FileSystem` objeto proporciona mayor rendimiento y facilidad de uso de archivo heredado métodos de E/S.</span><span class="sxs-lookup"><span data-stu-id="c36dc-223">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="c36dc-224">Para obtener más información, vea <xref:Microsoft.VisualBasic.FileSystem> objeto.</span><span class="sxs-lookup"><span data-stu-id="c36dc-224">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbHide">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbHide = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbHide = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbHide" />
      <MemberSignature Language="VB.NET" Value="Public Const vbHide As AppWinStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbHide = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-225">Indica que el estilo de ventana está oculto en el programa invocado cuando se llama a la función <see langword="Shell" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-225">Indicates that the window style is hidden for the invoked program when the <see langword="Shell" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-226">Cuando emita `Shell` comandos, puede usar los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-226">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-227">El `Style` argumento toma el `AppWinStyle` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-227">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbHiragana">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbHiragana = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbHiragana = (32)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbHiragana" />
      <MemberSignature Language="VB.NET" Value="Public Const vbHiragana As VbStrConv  = 32" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbHiragana = 32;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-228">Indica que los caracteres hiragana deben convertirse en caracteres katakana cuando se llama a la función <see langword="StrConv" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-228">Indicates Hiragana characters should be converted to Katakana characters when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-229">Cuando se llama a la `StrConv` función, puede utilizar los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-229">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-230">El `Conversion` argumento toma el `VbStrConv` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-230">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbIgnore">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbIgnore = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbIgnore = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbIgnore" />
      <MemberSignature Language="VB.NET" Value="Public Const vbIgnore As MsgBoxResult  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbIgnore = 5;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-231">Indica que se hizo clic en el botón <see langword="Ignore" /> de un cuadro de mensaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-231">Indicates that the <see langword="Ignore" /> button was clicked in a message box.</span>
          </span>
          <span data-ttu-id="c36dc-232">Valor devuelto por la función <see langword="MsgBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-232">Returned by the <see langword="MsgBox" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-233">Cuando se llama a la `MsgBox` función, puede usar el `MsgBoxResult` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-233">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-234">El `MsgBox` función devuelve un `MsgBoxResult` valor de enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-234">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbInformation">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbInformation = 64;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbInformation = (64)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbInformation" />
      <MemberSignature Language="VB.NET" Value="Public Const vbInformation As MsgBoxStyle  = 64" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbInformation = 64;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-235">Indica que se va a mostrar el icono de información cuando se llame a la función <see langword="MsgBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-235">Indicates that the information icon will display when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-236">Cuando se llama a la `MsgBox` función, puede usar el `MsgBoxStyle` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-236">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-237">El `Buttons` argumento toma el `MsgBoxStyle` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-237">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbInteger">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbInteger = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbInteger = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbInteger" />
      <MemberSignature Language="VB.NET" Value="Public Const vbInteger As VariantType  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbInteger = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-238">Indica que el tipo de un objeto Variant es <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-238">Indicates that the type of a variant object is <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="c36dc-239">Valor devuelto por la función <see langword="VarType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-239">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-240">Cuando se llama a la `VarType` función, puede utilizar los miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-240">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-241">El `VariantType` enumeración define constantes que se utilizan para identificar posibles `Variant` tipos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-241">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c36dc-242">La siguiente tabla se recogen los `VariantType` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-242">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbKatakana">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbKatakana = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbKatakana = (16)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbKatakana" />
      <MemberSignature Language="VB.NET" Value="Public Const vbKatakana As VbStrConv  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbKatakana = 16;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-243">Indica que los caracteres katakana deben convertirse en caracteres hiragana cuando se llama a la función <see langword="StrConv" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-243">Indicates that Katakana characters should be converted to Hiragana characters when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-244">Cuando se llama a la `StrConv` función, puede utilizar los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-244">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-245">El `Conversion` argumento toma el `VbStrConv` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-245">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbLet">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbLet = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbLet = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLet" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLet As CallType  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbLet = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-246">Indica que un valor de propiedad debe establecerse en una instancia de objeto cuando se llama a la función <see langword="CallByName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-246">Indicates that a property value should be set to an object instance when the <see langword="CallByName" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-247">Cuando se llama a la `CallByName` función, puede utilizar la siguiente `CallType` miembros de la enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-247">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-248">El `UseCallType` argumento toma el `CallType` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-248">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbLf">
      <MemberSignature Language="C#" Value="public const string vbLf;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbLf" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLf" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLf As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbLf;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-249">Representa un carácter de salto de línea para las funciones de impresión y visualización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-249">Represents a linefeed character for print and display functions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbLinguisticCasing">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbLinguisticCasing = 1024;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbLinguisticCasing = (1024)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLinguisticCasing" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLinguisticCasing As VbStrConv  = 1024" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbLinguisticCasing = 1024;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-250">Indica que cuando se llama a la función <see langword="StrConv" />, los caracteres deben convertirse de forma que usen reglas lingüísticas sobre el uso de mayúsculas o minúsculas en lugar de reglas del sistema de archivos sobre el uso de mayúsculas y minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-250">Indicates that characters should be converted to use linguistic rules for casing instead of file system rules for casing to when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-251">Cuando se llama a la `StrConv` función, puede utilizar los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-251">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-252">El `Conversion` argumento toma el `VbStrConv` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-252">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbLong">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbLong = 20;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbLong = (20)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLong" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLong As VariantType  = 20" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbLong = 20;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-253">Indica que el tipo de un objeto Variant es <see langword="Long" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-253">Indicates the type of a variant object is <see langword="Long" />.</span>
          </span>
          <span data-ttu-id="c36dc-254">Valor devuelto por la función <see langword="VarType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-254">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-255">Cuando se llama a la `VarType` función, puede utilizar los miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-255">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-256">El `VariantType` enumeración define constantes que se utilizan para identificar posibles `Variant` tipos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-256">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c36dc-257">La siguiente tabla se recogen los `VariantType` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-257">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbLongDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbLongDate = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbLongDate = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLongDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLongDate As DateFormat  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbLongDate = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-258">Indica que debe usarse el formato de fecha larga de la referencia cultural actual cuando se llama a la función <see langword="FormatDateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-258">Indicates that the long date format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-259">Cuando se llama a la `FormatDateTime` función, puede utilizar los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-259">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c36dc-260">Puede tener acceso a la configuración regional del equipo haciendo doble clic en el **opciones regionales** icono, se encuentra en **el Panel de Control**.</span><span class="sxs-lookup"><span data-stu-id="c36dc-260">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      </Docs>
    </Member>
    <Member MemberName="vbLongTime">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbLongTime = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbLongTime = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLongTime" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLongTime As DateFormat  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbLongTime = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-261">Indica que debe usarse el formato de hora larga de la referencia cultural actual cuando se llama a la función <see langword="FormatDateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-261">Indicates that the long time format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-262">Cuando se llama a la `FormatDateTime` función, puede utilizar los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-262">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c36dc-263">Puede tener acceso a la configuración regional del equipo haciendo doble clic en el **opciones regionales** icono, se encuentra en **el Panel de Control**.</span><span class="sxs-lookup"><span data-stu-id="c36dc-263">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      </Docs>
    </Member>
    <Member MemberName="vbLowerCase">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbLowerCase = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbLowerCase = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLowerCase" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLowerCase As VbStrConv  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbLowerCase = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-264">Indica que los caracteres katakana deben convertirse en caracteres en minúsculas cuando se llama a la función <see langword="StrConv" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-264">Indicates that characters should be converted to lowercase when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-265">Cuando se llama a la `StrConv` función, puede utilizar los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-265">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-266">El `Conversion` argumento toma el `VbStrConv` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-266">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbMaximizedFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbMaximizedFocus = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbMaximizedFocus = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMaximizedFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMaximizedFocus As AppWinStyle  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbMaximizedFocus = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-267">Indica que el estilo de ventana se maximiza con el foco en el programa invocado cuando se llama a la función <see langword="Shell" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-267">Indicates that the window style is maximized with focus for the invoked program when the <see langword="Shell" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-268">Cuando emita `Shell` comandos, puede usar los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-268">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-269">El `Style` argumento toma el `AppWinStyle` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-269">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbMethod">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbMethod = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbMethod = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMethod" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMethod As CallType  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbMethod = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-270">Especifica que debe llamarse a un método cuando se llama a la función <see langword="CallByName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-270">Specifies that a method should be called when the <see langword="CallByName" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-271">Cuando se llama a la `CallByName` función, puede utilizar la siguiente `CallType` miembros de la enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-271">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-272">El `UseCallType` argumento toma el `CallType` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-272">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbMinimizedFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbMinimizedFocus = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbMinimizedFocus = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMinimizedFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMinimizedFocus As AppWinStyle  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbMinimizedFocus = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-273">Indica que el estilo de ventana se minimiza con el foco en el programa invocado cuando se llama a la función <see langword="Shell" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-273">Indicates that the window style is minimized with focus for the invoked program when the <see langword="Shell" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-274">Cuando emita `Shell` comandos, puede usar los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-274">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-275">El `Style` argumento toma el `AppWinStyle` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-275">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbMinimizedNoFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbMinimizedNoFocus = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbMinimizedNoFocus = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMinimizedNoFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMinimizedNoFocus As AppWinStyle  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbMinimizedNoFocus = 6;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-276">Indica que el estilo de ventana se minimiza sin el foco en el programa invocado cuando se llama a la función <see langword="Shell" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-276">Indicates that the window style is minimized without focus for the invoked program when the <see langword="Shell" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-277">Cuando emita `Shell` comandos, puede usar los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-277">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-278">El `Style` argumento toma el `AppWinStyle` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-278">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbMonday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbMonday = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbMonday = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMonday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMonday As FirstDayOfWeek  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbMonday = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-279">Especifica que debe usarse el lunes como primer día de la semana cuando se llama a funciones relacionadas con fechas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-279">Specifies that Monday should be used as the first day of the week when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-280">Cuando se llama a funciones relacionadas con fechas, puede utilizar a los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-280">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-281">Algunas funciones relacionadas con fechas toman un `DayOfWeek` argumento, un `WeekOfYear` argumento o ambos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-281">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="c36dc-282">El `FirstDayOfWeek` enumeración especifica los valores válidos para el `DayOfWeek` argumentos, así como los posibles valores devueltos de las funciones.</span><span class="sxs-lookup"><span data-stu-id="c36dc-282">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="c36dc-283">El `DayOfWeek` argumento toma el `FirstDayOfWeek` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-283">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="c36dc-284">Funciones relacionadas con fechas también devuelven `FirstDayOfWeek` valores (excepto `System`).</span><span class="sxs-lookup"><span data-stu-id="c36dc-284">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxHelp">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxHelp = 16384;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxHelp = (16384)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxHelp" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxHelp As MsgBoxStyle  = 16384" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxHelp = 16384;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>16384</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-285">Indica que se va a mostrar el botón <see langword="Help" /> cuando se llame a la función <see langword="MsgBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-285">Indicates that the <see langword="Help" /> button will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-286">Cuando se llama a la `MsgBox` función, puede usar el `MsgBoxStyle` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-286">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-287">El `Buttons` argumento toma el `MsgBoxStyle` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-287">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxRight">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRight = 524288;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRight = (524288)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxRight" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxRight As MsgBoxStyle  = 524288" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxRight = 524288;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>524288</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-288">Indica que el texto se va a alinear a la derecha cuando se llame a la función <see langword="MsgBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-288">Indicates that text will be right-aligned when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-289">Cuando se llama a la `MsgBox` función, puede usar el `MsgBoxStyle` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-289">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-290">El `Buttons` argumento toma el `MsgBoxStyle` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-290">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxRtlReading">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRtlReading = 1048576;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRtlReading = (1048576)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxRtlReading As MsgBoxStyle  = 1048576" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxRtlReading = 1048576;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>1048576</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-291">Indica que se va a mostrar texto con un orden de lectura de derecha a izquierda (sistemas hebreo y árabe) cuando se llame a la función <see langword="MsgBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-291">Indicates that right-to-left reading text (Hebrew and Arabic systems) will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-292">Cuando se llama a la `MsgBox` función, puede usar el `MsgBoxStyle` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-292">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-293">El `Buttons` argumento toma el `MsgBoxStyle` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-293">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxSetForeground">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxSetForeground = 65536;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxSetForeground = (65536)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxSetForeground As MsgBoxStyle  = 65536" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxSetForeground = 65536;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-294">Indica que el cuadro de mensaje va a aparecer en primer plano cuando se llame a la función <see langword="MsgBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-294">Indicates that the message box will display in the foreground when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-295">Cuando se llama a la `MsgBox` función, puede usar el `MsgBoxStyle` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-295">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-296">El `Buttons` argumento toma el `MsgBoxStyle` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-296">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbNarrow">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbNarrow = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbNarrow = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNarrow" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNarrow As VbStrConv  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbNarrow = 8;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-297">Indica que los caracteres anchos (de doble byte) deben convertirse en caracteres estrechos (de un solo byte) cuando se llama a la función <see langword="StrConv" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-297">Indicates that wide (double-byte) characters should be converted to narrow (single-byte) characters when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-298">Cuando se llama a la `StrConv` función, puede utilizar los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-298">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-299">El `Conversion` argumento toma el `VbStrConv` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-299">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbNewLine">
      <MemberSignature Language="C#" Value="public const string vbNewLine;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbNewLine" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNewLine" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNewLine As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbNewLine;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-300">Representa un carácter de nueva línea para las funciones de impresión y visualización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-300">Represents a newline character for print and display functions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbNo">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbNo = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbNo = (7)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNo" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNo As MsgBoxResult  = 7" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbNo = 7;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-301">Indica que se hizo clic en el botón <see langword="No" /> de un cuadro de mensaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-301">Indicates that the <see langword="No" /> button was clicked in a message box.</span>
          </span>
          <span data-ttu-id="c36dc-302">Valor devuelto por la función <see langword="MsgBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-302">Returned by the <see langword="MsgBox" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-303">Cuando se llama a la `MsgBox` función, puede usar el `MsgBoxResult` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-303">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-304">El `MsgBox` función devuelve un `MsgBoxResult` valor de enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-304">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbNormal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbNormal = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbNormal = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNormal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNormal As FileAttribute  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbNormal = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-305">Indica que el archivo es un archivo normal para las funciones de acceso a archivos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-305">Indicates that the file is a normal file for file-access functions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-306">Cuando se llama a la `Dir`, `GetAttr`, o `SetAttr` funciones, puede usar el `FileAttribute` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-306">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-307">El `Attributes` argumento toma el `FileAttribute` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-307">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="c36dc-308">Cuando se realizan operaciones de E/S de archivos, la `My.Computer.FileSystem` objeto proporciona mayor rendimiento y facilidad de uso de archivo heredado métodos de E/S.</span><span class="sxs-lookup"><span data-stu-id="c36dc-308">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="c36dc-309">Para obtener más información, vea <xref:Microsoft.VisualBasic.FileSystem> objeto.</span><span class="sxs-lookup"><span data-stu-id="c36dc-309">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbNormalFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbNormalFocus = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbNormalFocus = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNormalFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNormalFocus As AppWinStyle  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbNormalFocus = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-310">Indica que el estilo de ventana es normal con el foco en el programa invocado cuando se llama a la función <see langword="Shell" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-310">Indicates that the window style is normal with focus for the invoked program when the <see langword="Shell" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-311">Cuando emita `Shell` comandos, puede usar los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-311">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-312">El `Style` argumento toma el `AppWinStyle` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-312">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbNormalNoFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbNormalNoFocus = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbNormalNoFocus = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNormalNoFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNormalNoFocus As AppWinStyle  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbNormalNoFocus = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-313">Indica que el estilo de ventana es normal sin el foco en el programa invocado cuando se llama a la función <see langword="Shell" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-313">Indicates that the window style is normal without focus for the invoked program when the <see langword="Shell" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-314">Cuando emita `Shell` comandos, puede usar los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-314">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-315">El `Style` argumento toma el `AppWinStyle` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-315">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbNull">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbNull = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbNull = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNull" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNull As VariantType  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbNull = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-316">Indica que el tipo de un objeto Variant es <see langword="Nothing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-316">Indicates that the type of a variant object is <see langword="Nothing" />.</span>
          </span>
          <span data-ttu-id="c36dc-317">Valor devuelto por la función <see langword="VarType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-317">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-318">Cuando se llama a la `VarType` función, puede utilizar los miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-318">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-319">El `VariantType` enumeración define constantes que se utilizan para identificar posibles `Variant` tipos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-319">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c36dc-320">La siguiente tabla se recogen los `VariantType` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-320">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbNullChar">
      <MemberSignature Language="C#" Value="public const string vbNullChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbNullChar" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNullChar" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNullChar As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbNullChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-321">Representa un carácter null para las funciones de impresión y visualización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-321">Represents a null character for print and display functions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbNullString">
      <MemberSignature Language="C#" Value="public const string vbNullString = null;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbNullString = null" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNullString" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNullString As String  = null" />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbNullString = nullptr;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <MemberValue>null</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-322">Representa una cadena de longitud cero para las funciones de impresión y visualización y para llamar a procedimientos externos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-322">Represents a zero-length string for print and display functions, and for calling external procedures.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbObject">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbObject = 9;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbObject = (9)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbObject" />
      <MemberSignature Language="VB.NET" Value="Public Const vbObject As VariantType  = 9" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbObject = 9;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-323">Indica que el tipo de un objeto Variant es <see langword="Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-323">Indicates that the type of a variant object is <see langword="Object" />.</span>
          </span>
          <span data-ttu-id="c36dc-324">Valor devuelto por la función <see langword="VarType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-324">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-325">Cuando se llama a la `VarType` función, puede utilizar los miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-325">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-326">El `VariantType` enumeración define constantes que se utilizan para identificar posibles `Variant` tipos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-326">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c36dc-327">La siguiente tabla se recogen los `VariantType` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-327">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbObjectError">
      <MemberSignature Language="C#" Value="public const int vbObjectError = -2147221504;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 vbObjectError = (-2147221504)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbObjectError" />
      <MemberSignature Language="VB.NET" Value="Public Const vbObjectError As Integer  = -2147221504" />
      <MemberSignature Language="C++ CLI" Value="public: int vbObjectError = -2147221504;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-2147221504</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-328">Representa el número de error del objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-328">Represents the object error number.</span>
          </span>
          <span data-ttu-id="c36dc-329">Los números de error definidos por el usuario deberían ser mayores que este valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-329">User-defined error numbers should be greater than this value.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbOK">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbOK = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbOK = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbOK" />
      <MemberSignature Language="VB.NET" Value="Public Const vbOK As MsgBoxResult  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbOK = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-330">Indica que se hizo clic en el botón <see langword="OK" /> de un cuadro de mensaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-330">Indicates that the <see langword="OK" /> button was clicked in a message box.</span>
          </span>
          <span data-ttu-id="c36dc-331">Valor devuelto por la función <see langword="MsgBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-331">Returned by the <see langword="MsgBox" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-332">Cuando se llama a la `MsgBox` función, puede usar el `MsgBoxResult` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-332">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-333">El `MsgBox` función devuelve un `MsgBoxResult` valor de enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-333">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbOKCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbOKCancel = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbOKCancel = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbOKCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbOKCancel As MsgBoxStyle  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbOKCancel = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-334">Indica que se van a mostrar los botones <see langword="OK" /> y <see langword="Cancel" /> cuando se llame a la función <see langword="MsgBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-334">Indicates that the <see langword="OK" /> and <see langword="Cancel" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-335">Cuando se llama a la `MsgBox` función, puede usar el `MsgBoxStyle` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-335">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-336">El `Buttons` argumento toma el `MsgBoxStyle` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-336">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbOKOnly">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbOKOnly = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbOKOnly = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbOKOnly" />
      <MemberSignature Language="VB.NET" Value="Public Const vbOKOnly As MsgBoxStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbOKOnly = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-337">Indica que solo se va a mostrar el botón <see langword="OK" /> cuando se llame a la función <see langword="MsgBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-337">Indicates that only the <see langword="OK" /> button will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-338">Cuando se llama a la `MsgBox` función, puede usar el `MsgBoxStyle` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-338">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-339">El `Buttons` argumento toma el `MsgBoxStyle` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-339">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbProperCase">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbProperCase = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbProperCase = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbProperCase" />
      <MemberSignature Language="VB.NET" Value="Public Const vbProperCase As VbStrConv  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbProperCase = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-340">Indica que cuando se llama a la función <see langword="StrConv" />, la primera letra de cada palabra de una cadena debe escribirse en mayúscula y las demás letras en minúscula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-340">Indicates that the first letter of every word in a string should be converted to uppercase and the remaining characters to lowercase when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-341">Cuando se llama a la `StrConv` función, puede utilizar los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-341">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-342">El `Conversion` argumento toma el `VbStrConv` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-342">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbQuestion">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbQuestion = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbQuestion = (32)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbQuestion" />
      <MemberSignature Language="VB.NET" Value="Public Const vbQuestion As MsgBoxStyle  = 32" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbQuestion = 32;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-343">Indica que se va a mostrar el icono de interrogación cuando se llama a la función <see langword="MsgBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-343">Indicates that the question icon will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-344">Cuando se llama a la `MsgBox` función, puede usar el `MsgBoxStyle` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-344">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-345">El `Buttons` argumento toma el `MsgBoxStyle` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-345">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbReadOnly">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbReadOnly = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbReadOnly = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Const vbReadOnly As FileAttribute  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbReadOnly = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-346">Indica que el archivo es de solo lectura para las funciones de acceso a archivos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-346">Indicates that the file is a read-only file for file-access functions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-347">Cuando se llama a la `Dir`, `GetAttr`, o `SetAttr` funciones, puede usar el `FileAttribute` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-347">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-348">El `Attributes` argumento toma el `FileAttribute` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-348">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="c36dc-349">Cuando se realizan operaciones de E/S de archivos, la `My.Computer.FileSystem` objeto proporciona mayor rendimiento y facilidad de uso de archivo heredado métodos de E/S.</span><span class="sxs-lookup"><span data-stu-id="c36dc-349">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="c36dc-350">Para obtener más información, vea <xref:Microsoft.VisualBasic.FileSystem> objeto.</span><span class="sxs-lookup"><span data-stu-id="c36dc-350">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbRetry">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbRetry = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbRetry = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbRetry" />
      <MemberSignature Language="VB.NET" Value="Public Const vbRetry As MsgBoxResult  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbRetry = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-351">Indica que se hizo clic en el botón <see langword="Retry" /> de un cuadro de mensaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-351">Indicates that the <see langword="Retry" /> button was clicked in a message box.</span>
          </span>
          <span data-ttu-id="c36dc-352">Valor devuelto por la función <see langword="MsgBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-352">Returned by the <see langword="MsgBox" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-353">Cuando se llama a la `MsgBox` función, puede usar el `MsgBoxResult` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-353">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-354">El `MsgBox` función devuelve un `MsgBoxResult` valor de enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-354">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbRetryCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbRetryCancel = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbRetryCancel = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbRetryCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbRetryCancel As MsgBoxStyle  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbRetryCancel = 5;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-355">Indica que se van a mostrar los botones <see langword="Retry" /> y <see langword="Cancel" /> cuando se llame a la función <see langword="MsgBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-355">Indicates that the <see langword="Retry" /> and <see langword="Cancel" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-356">Cuando se llama a la `MsgBox` función, puede usar el `MsgBoxStyle` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-356">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-357">El `Buttons` argumento toma el `MsgBoxStyle` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-357">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbSaturday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbSaturday = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbSaturday = (7)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSaturday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSaturday As FirstDayOfWeek  = 7" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbSaturday = 7;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-358">Especifica que debe usarse el sábado como primer día de la semana cuando se llama a funciones relacionadas con fechas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-358">Specifies that Saturday should be used as the first day of the week when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-359">Cuando se llama a funciones relacionadas con fechas, puede utilizar a los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-359">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-360">Algunas funciones relacionadas con fechas toman un `DayOfWeek` argumento, un `WeekOfYear` argumento o ambos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-360">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="c36dc-361">El `FirstDayOfWeek` enumeración especifica los valores válidos para el `DayOfWeek` argumentos, así como los posibles valores devueltos de las funciones.</span><span class="sxs-lookup"><span data-stu-id="c36dc-361">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="c36dc-362">El `DayOfWeek` argumento toma el `FirstDayOfWeek` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-362">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="c36dc-363">Funciones relacionadas con fechas también devuelven `FirstDayOfWeek` valores (excepto `System`).</span><span class="sxs-lookup"><span data-stu-id="c36dc-363">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbSet">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbSet = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbSet = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSet" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSet As CallType  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbSet = 8;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-364">Indica que debe establecerse un valor de propiedad cuando se llama a la función <see langword="CallByName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-364">Indicates that a property value should be set when the <see langword="CallByName" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-365">Cuando se llama a la `CallByName` función, puede utilizar la siguiente `CallType` miembros de la enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-365">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-366">El `UseCallType` argumento toma el `CallType` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-366">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbShortDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbShortDate = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbShortDate = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbShortDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbShortDate As DateFormat  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbShortDate = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-367">Indica que debe usarse el formato de fecha corta de la referencia cultural actual cuando se llama a la función <see langword="FormatDateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-367">Indicates that the short-date format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-368">Cuando se llama a la `FormatDateTime` función, puede utilizar los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-368">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c36dc-369">Puede tener acceso a la configuración regional del equipo haciendo doble clic en el **opciones regionales** icono, se encuentra en **el Panel de Control**.</span><span class="sxs-lookup"><span data-stu-id="c36dc-369">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      </Docs>
    </Member>
    <Member MemberName="vbShortTime">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbShortTime = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbShortTime = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbShortTime" />
      <MemberSignature Language="VB.NET" Value="Public Const vbShortTime As DateFormat  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbShortTime = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-370">Indica que debe usarse el formato de hora corta de la referencia cultural actual cuando se llama a la función <see langword="FormatDateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-370">Indicates that the short-time format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-371">Cuando se llama a la `FormatDateTime` función, puede utilizar los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-371">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c36dc-372">Puede tener acceso a la configuración regional del equipo haciendo doble clic en el **opciones regionales** icono, se encuentra en **el Panel de Control**.</span><span class="sxs-lookup"><span data-stu-id="c36dc-372">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      </Docs>
    </Member>
    <Member MemberName="vbSimplifiedChinese">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbSimplifiedChinese = 256;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbSimplifiedChinese = (256)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSimplifiedChinese" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSimplifiedChinese As VbStrConv  = 256" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbSimplifiedChinese = 256;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-373">Indica que los caracteres deben convertirse a chino simplificado cuando se llama a la función <see langword="StrConv" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-373">Indicates that characters should be converted to Simplified Chinese when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-374">Cuando se llama a la `StrConv` función, puede utilizar los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-374">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-375">El `Conversion` argumento toma el `VbStrConv` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-375">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbSingle">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbSingle = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbSingle = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSingle" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSingle As VariantType  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbSingle = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-376">Indica que el tipo de un objeto Variant es <see langword="Single" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-376">Indicates that the type of a variant object is <see langword="Single" />.</span>
          </span>
          <span data-ttu-id="c36dc-377">Valor devuelto por la función <see langword="VarType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-377">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-378">Cuando se llama a la `VarType` función, puede utilizar los miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-378">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-379">El `VariantType` enumeración define constantes que se utilizan para identificar posibles `Variant` tipos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-379">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c36dc-380">La siguiente tabla se recogen los `VariantType` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-380">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbString">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbString = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbString = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbString" />
      <MemberSignature Language="VB.NET" Value="Public Const vbString As VariantType  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbString = 8;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-381">Indica que el tipo de un objeto Variant es <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-381">Indicates that the type of a variant object is <see langword="String" />.</span>
          </span>
          <span data-ttu-id="c36dc-382">Valor devuelto por la función <see langword="VarType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-382">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-383">Cuando se llama a la `VarType` función, puede utilizar los miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-383">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-384">El `VariantType` enumeración define constantes que se utilizan para identificar posibles `Variant` tipos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-384">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c36dc-385">La siguiente tabla se recogen los `VariantType` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-385">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbSunday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbSunday = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbSunday = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSunday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSunday As FirstDayOfWeek  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbSunday = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-386">Especifica que debe usarse el domingo como primer día de la semana cuando se llama a funciones relacionadas con fechas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-386">Specifies that Sunday should be used as the first day of the week when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-387">Cuando se llama a funciones relacionadas con fechas, puede utilizar a los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-387">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-388">Algunas funciones relacionadas con fechas toman un `DayOfWeek` argumento, un `WeekOfYear` argumento o ambos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-388">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="c36dc-389">El `FirstDayOfWeek` enumeración especifica los valores válidos para el `DayOfWeek` argumentos, así como los posibles valores devueltos de las funciones.</span><span class="sxs-lookup"><span data-stu-id="c36dc-389">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="c36dc-390">El `DayOfWeek` argumento toma el `FirstDayOfWeek` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-390">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="c36dc-391">Funciones relacionadas con fechas también devuelven `FirstDayOfWeek` valores (excepto `System`).</span><span class="sxs-lookup"><span data-stu-id="c36dc-391">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbSystem">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbSystem = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbSystem = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSystem" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSystem As FileAttribute  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbSystem = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-392">Indica que el archivo es un archivo de sistema para las funciones de acceso a archivos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-392">Indicates that the file is a system file for file-access functions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-393">Cuando se llama a la `Dir`, `GetAttr`, o `SetAttr` funciones, puede usar el `FileAttribute` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-393">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-394">El `Attributes` argumento toma el `FileAttribute` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-394">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="c36dc-395">Cuando se realizan operaciones de E/S de archivos, la `My.Computer.FileSystem` objeto proporciona mayor rendimiento y facilidad de uso de archivo heredado métodos de E/S.</span><span class="sxs-lookup"><span data-stu-id="c36dc-395">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="c36dc-396">Para obtener más información, vea <xref:Microsoft.VisualBasic.FileSystem> objeto.</span><span class="sxs-lookup"><span data-stu-id="c36dc-396">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbSystemModal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbSystemModal = 4096;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbSystemModal = (4096)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSystemModal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSystemModal As MsgBoxStyle  = 4096" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbSystemModal = 4096;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-397">Indica que se va a mostrar el cuadro de mensaje como un cuadro de diálogo modal cuando se llame a la función <see langword="MsgBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-397">Indicates that the message box will be displayed as a modal dialog box when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-398">Cuando se llama a la `MsgBox` función, puede usar el `MsgBoxStyle` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-398">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-399">El `Buttons` argumento toma el `MsgBoxStyle` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-399">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbTab">
      <MemberSignature Language="C#" Value="public const string vbTab;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbTab" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTab" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTab As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbTab;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-400">Representa un carácter de tabulación para las funciones de impresión y visualización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-400">Represents a tab character for print and display functions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbTextCompare">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CompareMethod vbTextCompare = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CompareMethod vbTextCompare = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTextCompare" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTextCompare As CompareMethod  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CompareMethod vbTextCompare = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CompareMethod</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-401">Indica que debe realizarse una comparación de texto cuando se llama a las funciones de comparación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-401">Indicates that a text comparison should be performed when comparison functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-402">Cuando se llama a las funciones de comparación, puede usar el <xref:Microsoft.VisualBasic.CompareMethod> enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-402">When you call comparison functions, you can use the <xref:Microsoft.VisualBasic.CompareMethod> enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-403">El `Compare` argumento toma el `CompareMethod` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-403">The `Compare` argument takes the `CompareMethod` enumeration members.</span></span>  
  
 <span data-ttu-id="c36dc-404">Para obtener más información acerca de cómo obtener más información acerca de las comparaciones de texto y binarias, vea [instrucción Option Compare](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span><span class="sxs-lookup"><span data-stu-id="c36dc-404">For more information about more information about binary and text comparisons, see [Option Compare Statement](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CompareMethod" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      </Docs>
    </Member>
    <Member MemberName="vbThursday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbThursday = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbThursday = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbThursday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbThursday As FirstDayOfWeek  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbThursday = 5;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-405">Especifica que debe usarse el jueves como primer día de la semana cuando se llama a funciones relacionadas con fechas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-405">Specifies that Thursday should be used as the first day of the week when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-406">Cuando se llama a funciones relacionadas con fechas, puede utilizar a los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-406">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-407">Algunas funciones relacionadas con fechas toman un `DayOfWeek` argumento, un `WeekOfYear` argumento o ambos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-407">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="c36dc-408">El `FirstDayOfWeek` enumeración especifica los valores válidos para el `DayOfWeek` argumentos, así como los posibles valores devueltos de las funciones.</span><span class="sxs-lookup"><span data-stu-id="c36dc-408">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="c36dc-409">El `DayOfWeek` argumento toma el `FirstDayOfWeek` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-409">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="c36dc-410">Funciones relacionadas con fechas también devuelven `FirstDayOfWeek` valores (excepto `System`).</span><span class="sxs-lookup"><span data-stu-id="c36dc-410">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbTraditionalChinese">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbTraditionalChinese = 512;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbTraditionalChinese = (512)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTraditionalChinese" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTraditionalChinese As VbStrConv  = 512" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbTraditionalChinese = 512;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-411">Indica que los caracteres deben convertirse a chino tradicional cuando se llama a la función <see langword="StrConv" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-411">Indicates that characters should be converted to Traditional Chinese when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-412">Cuando se llama a la `StrConv` función, puede utilizar los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-412">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-413">El `Conversion` argumento toma el `VbStrConv` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-413">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbTrue">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.TriState vbTrue = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.TriState vbTrue = (-1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTrue" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTrue As TriState  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::TriState vbTrue = -1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TriState</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-414">Indica que debe utilizarse un valor <see langword="Boolean" /> de <see langword="True" /> cuando se llama a funciones de formato numérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-414">Indicates that a <see langword="Boolean" /> value of <see langword="True" /> should be used when number-formatting functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-415">Cuando las funciones de formato de número de llamadas, puede usar los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-415">When you call number-formatting functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      </Docs>
    </Member>
    <Member MemberName="vbTuesday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbTuesday = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbTuesday = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTuesday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTuesday As FirstDayOfWeek  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbTuesday = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-416">Especifica que debe usarse el martes como primer día de la semana cuando se llama a funciones relacionadas con fechas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-416">Specifies that Tuesday should be used as the first day of the week when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-417">Cuando se llama a funciones relacionadas con fechas, puede utilizar a los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-417">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-418">Algunas funciones relacionadas con fechas toman un `DayOfWeek` argumento, un `WeekOfYear` argumento o ambos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-418">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="c36dc-419">El `FirstDayOfWeek` enumeración especifica los valores válidos para el `DayOfWeek` argumentos, así como los posibles valores devueltos de las funciones.</span><span class="sxs-lookup"><span data-stu-id="c36dc-419">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="c36dc-420">El `DayOfWeek` argumento toma el `FirstDayOfWeek` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-420">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="c36dc-421">Funciones relacionadas con fechas también devuelven `FirstDayOfWeek` valores (excepto `System`).</span><span class="sxs-lookup"><span data-stu-id="c36dc-421">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbUpperCase">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbUpperCase = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbUpperCase = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUpperCase" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUpperCase As VbStrConv  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbUpperCase = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-422">Indica que los caracteres katakana deben convertirse en caracteres en mayúsculas cuando se llama a la función <see langword="StrConv" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-422">Indicates that characters should be converted to uppercase when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-423">Cuando se llama a la `StrConv` función, puede utilizar los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-423">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-424">El `Conversion` argumento toma el `VbStrConv` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-424">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbUseDefault">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.TriState vbUseDefault = -2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.TriState vbUseDefault = (-2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUseDefault" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUseDefault As TriState  = -2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::TriState vbUseDefault = -2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TriState</ReturnType>
      </ReturnValue>
      <MemberValue>-2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-425">Indica que debe usarse el valor <see langword="Boolean" /> predeterminado cuando se llama a funciones de formato numérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-425">Indicates that the default <see langword="Boolean" /> value should be used when number-formatting functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-426">Cuando las funciones de formato de número de llamadas, puede usar los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-426">When you call number-formatting functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      </Docs>
    </Member>
    <Member MemberName="vbUserDefinedType">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbUserDefinedType = 36;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbUserDefinedType = (36)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUserDefinedType" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUserDefinedType As VariantType  = 36" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbUserDefinedType = 36;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>36</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-427">Indica que el tipo de un objeto Variant es un tipo definido por el usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-427">Indicates that the type of a variant object is a user-defined type.</span>
          </span>
          <span data-ttu-id="c36dc-428">Valor devuelto por la función <see langword="VarType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-428">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-429">Cuando se llama a la `VarType` función, puede utilizar los miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-429">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-430">El `VariantType` enumeración define constantes que se utilizan para identificar posibles `Variant` tipos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-430">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c36dc-431">La siguiente tabla se recogen los `VariantType` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-431">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbUseSystem">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbUseSystem = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbUseSystem = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUseSystem" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUseSystem As FirstWeekOfYear  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbUseSystem = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-432">Indica que debe usarse la semana especificada por el sistema como primera semana del año cuando se llama a funciones relacionadas con fechas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-432">Indicates that the week specified by your system as the first week of the year should be used when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-433">Cuando se llama a funciones relacionadas con fechas, puede utilizar a los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-433">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-434">Algunas funciones relacionadas con fechas toman un `DayOfWeek` argumento, un `WeekOfYear` argumento o ambos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-434">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="c36dc-435">El `FirstWeekOfYear` enumeración especifica los valores válidos para el `WeekOfYear` argumentos, así como los posibles valores devueltos de las funciones.</span><span class="sxs-lookup"><span data-stu-id="c36dc-435">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="c36dc-436">El `WeekOfYear` argumento toma el `FirstWeekOfYear` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-436">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbUseSystemDayOfWeek">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbUseSystemDayOfWeek = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbUseSystemDayOfWeek = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUseSystemDayOfWeek As FirstDayOfWeek  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbUseSystemDayOfWeek = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-437">Indica que debe usarse el día especificado por el sistema como primer día de la semana cuando se llama a funciones relacionadas con fechas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-437">Indicates that the day specified by your system as the first day of the week should be used when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-438">Cuando se llama a funciones relacionadas con fechas, puede utilizar a los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-438">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-439">Algunas funciones relacionadas con fechas toman un `DayOfWeek` argumento, un `WeekOfYear` argumento o ambos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-439">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="c36dc-440">El `FirstDayOfWeek` enumeración especifica los valores válidos para el `DayOfWeek` argumentos, así como los posibles valores devueltos de las funciones.</span><span class="sxs-lookup"><span data-stu-id="c36dc-440">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="c36dc-441">El `DayOfWeek` argumento toma el `FirstDayOfWeek` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-441">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="c36dc-442">Funciones relacionadas con fechas también devuelven `FirstDayOfWeek` valores (excepto `System`).</span><span class="sxs-lookup"><span data-stu-id="c36dc-442">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbVariant">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbVariant = 12;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbVariant = (12)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbVariant" />
      <MemberSignature Language="VB.NET" Value="Public Const vbVariant As VariantType  = 12" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbVariant = 12;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>12</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-443">Indica que el tipo de un objeto Variant es <see langword="Variant" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-443">Indicates that the type of a variant object is <see langword="Variant" />.</span>
          </span>
          <span data-ttu-id="c36dc-444">Valor devuelto por la función <see langword="VarType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-444">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-445">Cuando se llama a la `VarType` función, puede utilizar los miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-445">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-446">El `VariantType` enumeración define constantes que se utilizan para identificar posibles `Variant` tipos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-446">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="c36dc-447">La siguiente tabla se recogen los `VariantType` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-447">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbVerticalTab">
      <MemberSignature Language="C#" Value="public const string vbVerticalTab;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbVerticalTab" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbVerticalTab" />
      <MemberSignature Language="VB.NET" Value="Public Const vbVerticalTab As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbVerticalTab;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-448">Representa un carácter de retorno de carro para las funciones de impresión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-448">Represents a carriage-return character for print functions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbVolume">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbVolume = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbVolume = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbVolume" />
      <MemberSignature Language="VB.NET" Value="Public Const vbVolume As FileAttribute  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbVolume = 8;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-449">Indica el atributo de archivo de la etiqueta de volumen para las funciones de acceso a archivos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-449">Indicates the volume label file attribute for file-access functions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-450">Este atributo no es válido para el `SetAttr` función.</span><span class="sxs-lookup"><span data-stu-id="c36dc-450">This attribute is not valid for the `SetAttr` function.</span></span>  
  
 <span data-ttu-id="c36dc-451">Cuando se llama a la `Dir`, `GetAttr`, o `SetAttr` funciones, puede usar el `FileAttribute` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-451">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-452">El `Attributes` argumento toma el `FileAttribute` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-452">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="c36dc-453">Cuando se realizan operaciones de E/S de archivos, la `My.Computer.FileSystem` objeto proporciona mayor rendimiento y facilidad de uso de archivo heredado métodos de E/S.</span><span class="sxs-lookup"><span data-stu-id="c36dc-453">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="c36dc-454">Para obtener más información, vea <xref:Microsoft.VisualBasic.FileSystem> objeto.</span><span class="sxs-lookup"><span data-stu-id="c36dc-454">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbWednesday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbWednesday = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbWednesday = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbWednesday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbWednesday As FirstDayOfWeek  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbWednesday = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-455">Especifica que debe usarse el miércoles como primer día de la semana cuando se llama a funciones relacionadas con fechas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-455">Specifies that Wednesday should be used as the first day of the week when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-456">Cuando se llama a funciones relacionadas con fechas, puede utilizar a los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-456">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-457">Algunas funciones relacionadas con fechas toman un `DayOfWeek` argumento, un `WeekOfYear` argumento o ambos.</span><span class="sxs-lookup"><span data-stu-id="c36dc-457">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="c36dc-458">El `FirstDayOfWeek` enumeración especifica los valores válidos para el `DayOfWeek` argumentos, así como los posibles valores devueltos de las funciones.</span><span class="sxs-lookup"><span data-stu-id="c36dc-458">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="c36dc-459">El `DayOfWeek` argumento toma el `FirstDayOfWeek` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-459">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="c36dc-460">Funciones relacionadas con fechas también devuelven `FirstDayOfWeek` valores (excepto `System`).</span><span class="sxs-lookup"><span data-stu-id="c36dc-460">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbWide">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbWide = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbWide = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbWide" />
      <MemberSignature Language="VB.NET" Value="Public Const vbWide As VbStrConv  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbWide = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-461">Indica que los caracteres estrechos (de un solo byte) deben convertirse en caracteres anchos (de doble byte) cuando se llama a la función <see langword="StrConv" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-461">Indicates that narrow (single-byte) characters should be converted to wide (double-byte) characters when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-462">Cuando se llama a la `StrConv` función, puede utilizar los siguientes miembros de enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-462">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-463">El `Conversion` argumento toma el `VbStrConv` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-463">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbYes">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbYes = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbYes = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbYes" />
      <MemberSignature Language="VB.NET" Value="Public Const vbYes As MsgBoxResult  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbYes = 6;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-464">Indica que se hizo clic en el botón <see langword="Yes" /> de un cuadro de mensaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-464">Indicates that the <see langword="Yes" /> button was clicked in a message box.</span>
          </span>
          <span data-ttu-id="c36dc-465">Valor devuelto por la función <see langword="MsgBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-465">Returned by the <see langword="MsgBox" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-466">Cuando se llama a la `MsgBox` función, puede usar el `MsgBoxResult` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-466">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="c36dc-467">El `MsgBox` función devuelve un `MsgBoxResult` valor de enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-467">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbYesNo">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbYesNo = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbYesNo = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbYesNo" />
      <MemberSignature Language="VB.NET" Value="Public Const vbYesNo As MsgBoxStyle  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbYesNo = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-468">Indica que se van a mostrar los botones <see langword="Yes" /> y <see langword="No" /> cuando se llame a la función <see langword="MsgBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-468">Indicates that the <see langword="Yes" /> and <see langword="No" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-469">Cuando se llama a la `MsgBox` función, puede usar el `MsgBoxStyle` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-469">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-470">El `Buttons` argumento toma el `MsgBoxStyle` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-470">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbYesNoCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbYesNoCancel = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbYesNoCancel = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbYesNoCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbYesNoCancel As MsgBoxStyle  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbYesNoCancel = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c36dc-471">Indica que se van a mostrar los botones <see langword="Yes" />, <see langword="No" /> e <see langword="Cancel" /> cuando se llame a la función <see langword="MsgBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c36dc-471">Indicates that the <see langword="Yes" />, <see langword="No" />, and <see langword="Cancel" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36dc-472">Cuando se llama a la `MsgBox` función, puede usar el `MsgBoxStyle` enumeración en el código en lugar de los valores reales.</span><span class="sxs-lookup"><span data-stu-id="c36dc-472">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="c36dc-473">El `Buttons` argumento toma el `MsgBoxStyle` miembros de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c36dc-473">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>