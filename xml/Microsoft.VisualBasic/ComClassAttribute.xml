<Type Name="ComClassAttribute" FullName="Microsoft.VisualBasic.ComClassAttribute">
  <TypeSignature Language="C#" Value="public sealed class ComClassAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ComClassAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ComClassAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ComClassAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComClassAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9d9f4-101">El atributo <see langword="ComClassAttribute" /> indica al compilador que agregue los metadatos que permiten exponer una clase como un objeto COM.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-101">The <see langword="ComClassAttribute" /> attribute instructs the compiler to add metadata that allows a class to be exposed as a COM object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d9f4-102">Use `ComClassAttribute` para simplificar el proceso de exponer componentes COM desde Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-102">Use `ComClassAttribute` to simplify the process of exposing COM components from Visual Basic.</span></span> <span data-ttu-id="9d9f4-103">Los objetos COM son muy distintos de los ensamblados de .NET Framework; sin el `ComClassAttribute`, debe seguir una serie de pasos para generar un objeto COM de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-103">COM objects are very different from .NET Framework assemblies; without the `ComClassAttribute`, you need to follow a number of steps to generate a COM object from Visual Basic.</span></span> <span data-ttu-id="9d9f4-104">Para las clases marcadas con `ComClassAttribute`, el compilador realiza muchos de estos pasos automáticamente.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-104">For classes marked with `ComClassAttribute`, the compiler performs many of these steps automatically.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d9f4-105">Este atributo simplifica la creación de objetos COM.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-105">This attribute simplifies the creation of COM objects.</span></span> <span data-ttu-id="9d9f4-106">Para exponer una clase como un objeto COM, debe compilar el proyecto con el **registrar para interoperabilidad COM** opción seleccionada en el **generar** sección de la **propiedades de configuración** cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-106">To expose a class as a COM object, you must compile the project with the **Register for COM Interop** option selected in the **Build** section of the **Configuration Properties** dialog box.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d9f4-107">Aunque también puede exponer una clase creada con Visual Basic como un objeto COM para código no administrado, no es un objeto COM es true.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-107">Although you can also expose a class created with Visual Basic as a COM object for unmanaged code to use, it is not a true COM object.</span></span> <span data-ttu-id="9d9f4-108">Para obtener más información, consulte [interoperabilidad COM en aplicaciones de .NET Framework](~/docs/visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications.md).</span><span class="sxs-lookup"><span data-stu-id="9d9f4-108">For details, see [COM Interoperability in .NET Framework Applications](~/docs/visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d9f4-109">Para ejecutar este ejemplo, cree un nuevo **biblioteca de clases** aplicación y agregue el código siguiente a un módulo de clase.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-109">To run this example, create a new **Class Library** application and add the following code to a class module.</span></span>  
  
 [!code-vb[VbCnAttributes#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbCnAttributes/VB/Class2.vb#21)]  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Runtime.InteropServices" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d9f4-110">Inicializa una nueva instancia de la clase <see langword="ComClassAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-110">Initializes a new instance of the <see langword="ComClassAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComClassAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ComClassAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComClassAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d9f4-111">Inicializa una nueva instancia de la clase <see langword="ComClassAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-111">Initializes a new instance of the <see langword="ComClassAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d9f4-112">Utilice el constructor para la `ComClassAttribute` clase para establecer el `ClassID`, `InterfaceID`, o `EventID` propiedades al aplicar el `ComClassAttribute` a una clase.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-112">Use the constructor for the `ComClassAttribute` class to set the `ClassID`, `InterfaceID`, or `EventID` properties when applying the `ComClassAttribute` to a class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Runtime.InteropServices" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComClassAttribute (string _ClassID);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string _ClassID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (_ClassID As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComClassAttribute(System::String ^ _ClassID);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="_ClassID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="_ClassID"><span data-ttu-id="9d9f4-113">Inicializa el valor de la propiedad <see langword="ClassID" /> que se utiliza para identificar de manera única una clase.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-113">Initializes the value of the <see langword="ClassID" /> property that is used to uniquely identify a class.</span></span></param>
        <summary><span data-ttu-id="9d9f4-114">Inicializa una nueva instancia de la clase <see langword="ComClassAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-114">Initializes a new instance of the <see langword="ComClassAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d9f4-115">Utilice el constructor para la `ComClassAttribute` clase para establecer el `ClassID`, `InterfaceID`, o `EventID` propiedades al aplicar el `ComClassAttribute` a una clase.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-115">Use the constructor for the `ComClassAttribute` class to set the `ClassID`, `InterfaceID`, or `EventID` properties when applying the `ComClassAttribute` to a class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Runtime.InteropServices" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComClassAttribute (string _ClassID, string _InterfaceID);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string _ClassID, string _InterfaceID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (_ClassID As String, _InterfaceID As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComClassAttribute(System::String ^ _ClassID, System::String ^ _InterfaceID);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="_ClassID" Type="System.String" />
        <Parameter Name="_InterfaceID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="_ClassID"><span data-ttu-id="9d9f4-116">Inicializa el valor de la propiedad <see langword="ClassID" /> que se utiliza para identificar de manera única una clase.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-116">Initializes the value of the <see langword="ClassID" /> property that is used to uniquely identify a class.</span></span></param>
        <param name="_InterfaceID"><span data-ttu-id="9d9f4-117">Inicializa el valor de la propiedad <see langword="InterfaceID" /> que se utiliza para identificar de manera única una interfaz.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-117">Initializes the value of the <see langword="InterfaceID" /> property that is used to uniquely identify an interface.</span></span></param>
        <summary><span data-ttu-id="9d9f4-118">Inicializa una nueva instancia de la clase <see langword="ComClassAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-118">Initializes a new instance of the <see langword="ComClassAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d9f4-119">Utilice el constructor para la `ComClassAttribute` clase para establecer el `ClassID`, `InterfaceID`, o `EventID` propiedades al aplicar el `ComClassAttribute` a una clase.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-119">Use the constructor for the `ComClassAttribute` class to set the `ClassID`, `InterfaceID`, or `EventID` properties when applying the `ComClassAttribute` to a class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Runtime.InteropServices" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComClassAttribute (string _ClassID, string _InterfaceID, string _EventId);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string _ClassID, string _InterfaceID, string _EventId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (_ClassID As String, _InterfaceID As String, _EventId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComClassAttribute(System::String ^ _ClassID, System::String ^ _InterfaceID, System::String ^ _EventId);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="_ClassID" Type="System.String" />
        <Parameter Name="_InterfaceID" Type="System.String" />
        <Parameter Name="_EventId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="_ClassID"><span data-ttu-id="9d9f4-120">Inicializa el valor de la propiedad <see langword="ClassID" /> que se utiliza para identificar de manera única una clase.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-120">Initializes the value of the <see langword="ClassID" /> property that is used to uniquely identify a class.</span></span></param>
        <param name="_InterfaceID"><span data-ttu-id="9d9f4-121">Inicializa el valor de la propiedad <see langword="InterfaceID" /> que se utiliza para identificar de manera única una interfaz.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-121">Initializes the value of the <see langword="InterfaceID" /> property that is used to uniquely identify an interface.</span></span></param>
        <param name="_EventId"><span data-ttu-id="9d9f4-122">Inicializa el valor de la propiedad <see langword="EventID" /> que se utiliza para identificar de manera única un evento.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-122">Initializes the value of the <see langword="EventID" /> property that is used to uniquely identify an event.</span></span></param>
        <summary><span data-ttu-id="9d9f4-123">Inicializa una nueva instancia de la clase <see langword="ComClassAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-123">Initializes a new instance of the <see langword="ComClassAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d9f4-124">Utilice el constructor para la `ComClassAttribute` clase para establecer el `ClassID`, `InterfaceID`, o `EventID` propiedades al aplicar el `ComClassAttribute` a una clase.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-124">Use the constructor for the `ComClassAttribute` class to set the `ClassID`, `InterfaceID`, or `EventID` properties when applying the `ComClassAttribute` to a class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Runtime.InteropServices" />
      </Docs>
    </Member>
    <Member MemberName="ClassID">
      <MemberSignature Language="C#" Value="public string ClassID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClassID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ComClassAttribute.ClassID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClassID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClassID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d9f4-125">Obtiene un identificador de clase que se utiliza para identificar de manera única una clase.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-125">Gets a class ID used to uniquely identify a class.</span></span></summary>
        <value><span data-ttu-id="9d9f4-126">Sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-126">Read-only.</span></span> <span data-ttu-id="9d9f4-127">Una cadena que puede utilizar el compilador para identificar de manera única la clase cuando se crea un objeto COM.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-127">A string that can be used by the compiler to uniquely identify the class when a COM object is created.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d9f4-128">El constructor establece esta propiedad cuando la `ComClassAttribute` se aplica a una clase.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-128">The constructor sets this property when the `ComClassAttribute` is applied to a class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Runtime.InteropServices" />
      </Docs>
    </Member>
    <Member MemberName="EventID">
      <MemberSignature Language="C#" Value="public string EventID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ComClassAttribute.EventID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EventID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d9f4-129">Obtiene un identificador de evento que se utiliza para identificar de manera única un evento.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-129">Gets an event ID used to uniquely identify an event.</span></span></summary>
        <value><span data-ttu-id="9d9f4-130">Sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-130">Read only.</span></span> <span data-ttu-id="9d9f4-131">Una cadena que puede utilizar el compilador para identificar de manera única un evento de la clase cuando se crea un objeto COM.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-131">A string that can be used by the compiler to uniquely identify an event for the class when a COM object is created.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d9f4-132">El constructor establece esta propiedad cuando la `ComClassAttribute` se aplica a una clase.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-132">The constructor sets this property when the `ComClassAttribute` is applied to a class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Runtime.InteropServices" />
      </Docs>
    </Member>
    <Member MemberName="InterfaceID">
      <MemberSignature Language="C#" Value="public string InterfaceID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InterfaceID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InterfaceID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InterfaceID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d9f4-133">Obtiene un identificador de interfaz que se utiliza para identificar de manera única una interfaz.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-133">Gets an interface ID used to uniquely identify an interface.</span></span></summary>
        <value><span data-ttu-id="9d9f4-134">Sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-134">Read-only.</span></span> <span data-ttu-id="9d9f4-135">Una cadena que puede utilizar el compilador para identificar de manera única una interfaz de la clase cuando se crea un objeto COM.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-135">A string that can be used by the compiler to uniquely identify an interface for the class when a COM object is created.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d9f4-136">El constructor establece esta propiedad cuando la `ComClassAttribute` se aplica a una clase.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-136">The constructor sets this property when the `ComClassAttribute` is applied to a class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Runtime.InteropServices" />
      </Docs>
    </Member>
    <Member MemberName="InterfaceShadows">
      <MemberSignature Language="C#" Value="public bool InterfaceShadows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InterfaceShadows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceShadows" />
      <MemberSignature Language="VB.NET" Value="Public Property InterfaceShadows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InterfaceShadows { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d9f4-137">Indica que el nombre de la interfaz COM oculta o prevalece sobre otro miembro de la clase o clase base.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-137">Indicates that the COM interface name shadows another member of the class or base class.</span></span></summary>
        <value><span data-ttu-id="9d9f4-138">Un valor <see langword="Boolean" /> que indica que el nombre de la interfaz COM oculta o prevalece sobre otro miembro de la clase o clase base.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-138">A <see langword="Boolean" /> value that indicates that the COM interface name shadows another member of the class or base class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d9f4-139">Sombrear es cuando un miembro utiliza el mismo nombre que otro miembro.</span><span class="sxs-lookup"><span data-stu-id="9d9f4-139">Shadowing is when a member uses the same name as another member.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Runtime.InteropServices" />
      </Docs>
    </Member>
  </Members>
</Type>