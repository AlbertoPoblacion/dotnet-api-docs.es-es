<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ErrObject.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac519573ad50fc15f1c13f60caa02a1d51f05408059.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19573ad50fc15f1c13f60caa02a1d51f05408059</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.ErrObject">
          <source>The <ph id="ph1">&lt;see langword="ErrObject" /&gt;</ph> module contains properties and procedures used to identify and handle run-time errors using the <ph id="ph2">&lt;see langword="Err" /&gt;</ph> object.</source>
          <target state="translated">El módulo <ph id="ph1">&lt;see langword="ErrObject" /&gt;</ph> contiene las propiedades y los procedimientos que se utilizan para identificar y controlar los errores en tiempo de ejecución mediante el objeto <ph id="ph2">&lt;see langword="Err" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.ErrObject">
          <source>The <ph id="ph1">`ErrObject`</ph> module supports the <ph id="ph2">`Err`</ph> object.</source>
          <target state="translated">El <ph id="ph1">`ErrObject`</ph> módulo es compatible con la <ph id="ph2">`Err`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.ErrObject">
          <source>For more information, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Information.Err%2A&gt;</ph>.</source>
          <target state="translated">Para obtener más información, vea <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Information.Err%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.ErrObject">
          <source>This example uses the properties of the <ph id="ph1">`Err`</ph> object in constructing an error-message dialog box.</source>
          <target state="translated">Este ejemplo utiliza las propiedades de la <ph id="ph1">`Err`</ph> objeto en la creación de un cuadro de diálogo de mensaje de error.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.ErrObject">
          <source>Notice what happens when you use the <ph id="ph1">`Clear`</ph> method first: When you then generate a Visual Basic error with the <ph id="ph2">`Raise`</ph> method, Visual Basic's default values become the properties of the <ph id="ph3">`Err`</ph> object.</source>
          <target state="translated">Tenga en cuenta lo que sucede cuando se usa el <ph id="ph1">`Clear`</ph> método primera: cuando, a continuación, generar un error de Visual Basic con el <ph id="ph2">`Raise`</ph> método, valores predeterminados de Visual Basic se convierten en las propiedades de la <ph id="ph3">`Err`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Clears all property settings of the <ph id="ph1">&lt;see langword="Err" /&gt;</ph> object.</source>
          <target state="translated">Borra todos los valores de propiedad del objeto <ph id="ph1">&lt;see langword="Err" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Use <ph id="ph1">`Clear`</ph> to explicitly clear the <ph id="ph2">`Err`</ph> object after an error has been handled, such as when you use deferred error handling with <ph id="ph3">`On Error Resume Next`</ph>.</source>
          <target state="translated">Usar <ph id="ph1">`Clear`</ph> para borrar explícitamente el <ph id="ph2">`Err`</ph> objeto después de que se ha controlado un error, como cuando usa aplazado control de errores con <ph id="ph3">`On Error Resume Next`</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>The <ph id="ph1">`Clear`</ph> method is called automatically whenever any of the following statements executes:</source>
          <target state="translated">El <ph id="ph1">`Clear`</ph> método se llama automáticamente cada vez que se ejecuta alguna de las siguientes instrucciones:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Any type of <ph id="ph1">`Resume`</ph> statement</source>
          <target state="translated">Cualquier tipo de <ph id="ph1">`Resume`</ph> instrucción</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source><ph id="ph1">`Exit Sub`</ph>, <ph id="ph2">`Exit Function`</ph>, or <ph id="ph3">`Exit Property`</ph></source>
          <target state="translated"><ph id="ph1">`Exit Sub`</ph>, <ph id="ph2">`Exit Function`</ph>o <ph id="ph3">`Exit Property`</ph></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Any <ph id="ph1">`On Error`</ph> statement</source>
          <target state="translated">Cualquier <ph id="ph1">`On Error`</ph> instrucción</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Any <ph id="ph1">`Try...Catch...Finally`</ph> statement</source>
          <target state="translated">Cualquier <ph id="ph1">`Try...Catch...Finally`</ph> instrucción</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>The <ph id="ph1">`On Error Resume Next`</ph> construct may be preferable to <ph id="ph2">`On Error GoTo`</ph> when handling errors generated during access to other objects.</source>
          <target state="translated">El <ph id="ph1">`On Error Resume Next`</ph> construcción puede ser preferible <ph id="ph2">`On Error GoTo`</ph> al tratar los errores generados durante el acceso a otros objetos.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Checking <ph id="ph1">`Err`</ph> after each interaction with an object removes ambiguity about which object was accessed by the code: You can be sure which object placed the error code in <ph id="ph2">`Err.Number`</ph>, as well as which object originally generated the error (the object specified in <ph id="ph3">`Err.Source`</ph>).</source>
          <target state="translated">Comprobación de <ph id="ph1">`Err`</ph> después de cada interacción con un objeto elimina la ambigüedad sobre qué objeto se obtuvo acceso el código: puede estar seguro de qué objeto coloca el código de error <ph id="ph2">`Err.Number`</ph>, así como qué objeto generó originalmente el error (el objeto especificado en <ph id="ph3">`Err.Source`</ph>).</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>This example uses the <ph id="ph1">`Err`</ph> object's <ph id="ph2">`Clear`</ph> method to reset the numeric properties of the <ph id="ph3">`Err`</ph> object to zero and its string properties to zero-length strings.</source>
          <target state="translated">Este ejemplo se utiliza la <ph id="ph1">`Err`</ph> del objeto <ph id="ph2">`Clear`</ph> método para restablecer las propiedades numéricas de la <ph id="ph3">`Err`</ph> objeto a cero y sus propiedades de cadena a cadenas de longitud cero.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Without the call to <ph id="ph1">`Clear`</ph>, the second call to <ph id="ph2">`MsgBox`</ph> would display the same error message.</source>
          <target state="translated">Sin la llamada a <ph id="ph1">`Clear`</ph>, la segunda llamada a <ph id="ph2">`MsgBox`</ph> mostraría el mismo mensaje de error.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>Returns or sets a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing a descriptive string associated with an error.</source>
          <target state="translated">Devuelve o establece una expresión de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> que contiene una cadena descriptiva asociada a un error.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>Read/write.</source>
          <target state="translated">Lectura y escritura.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>Returns or sets a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing a descriptive string associated with an error.</source>
          <target state="translated">Devuelve o establece una expresión de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> que contiene una cadena descriptiva asociada a un error.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>Read/write.</source>
          <target state="translated">Lectura y escritura.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>The <ph id="ph1">`Description`</ph> property setting consists of a short description of the error.</source>
          <target state="translated">El <ph id="ph1">`Description`</ph> configuración de la propiedad está formada por una breve descripción del error.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>Use this property to alert the user to an error that you cannot or do not want to handle.</source>
          <target state="translated">Utilice esta propiedad para alertar al usuario a un error que no puede o no desea controlar.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>When generating a user-defined error, assign a short description of your error to the <ph id="ph1">`Description`</ph> property.</source>
          <target state="translated">Cuando se genera un error definido por el usuario, asigne una breve descripción de error para el <ph id="ph1">`Description`</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>If the <ph id="ph1">`Description`</ph> property is not filled in, and the value of the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.ErrObject.Number%2A&gt;</ph> property corresponds to a Visual Basic run-time error, then the string returned by the <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A&gt;</ph> function is set in the <ph id="ph4">`Description`</ph> property when the error is generated.</source>
          <target state="translated">Si el <ph id="ph1">`Description`</ph> propiedad no se ha rellenado y el valor de la <ph id="ph2">&lt;xref:Microsoft.VisualBasic.ErrObject.Number%2A&gt;</ph> propiedad se corresponde con un error de tiempo de ejecución de Visual Basic, a continuación, la cadena devuelta por la <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A&gt;</ph> función está establecida el <ph id="ph4">`Description`</ph> propiedad cuando se genera el error.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>This example assigns a user-defined message to the <ph id="ph1">`Description`</ph> property of the <ph id="ph2">`Err`</ph> object.</source>
          <target state="translated">Este ejemplo asigna un mensaje definido por el usuario para la <ph id="ph1">`Description`</ph> propiedad de la <ph id="ph2">`Err`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Erl">
          <source>Returns an integer indicating the line number of the last executed statement.</source>
          <target state="translated">Devuelve un entero que indica el número de línea de la última instrucción ejecutada</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Erl">
          <source>Read-only.</source>
          <target state="translated">Sólo lectura.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Erl">
          <source>Returns an integer indicating the line number of the last executed statement.</source>
          <target state="translated">Devuelve un entero que indica el número de línea de la última instrucción ejecutada</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Erl">
          <source>Read-only.</source>
          <target state="translated">Sólo lectura.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Erl">
          <source>If Visual Basic encounters no line numbers, it returns 0.</source>
          <target state="translated">Si Visual Basic no encuentra números de línea, devuelve 0.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Erl">
          <source>This example uses the <ph id="ph1">`Erl`</ph> property to indicate the line number.</source>
          <target state="translated">Este ejemplo se utiliza la <ph id="ph1">`Erl`</ph> propiedad para indicar el número de línea.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.GetException">
          <source>Returns the exception representing the error that occurred.</source>
          <target state="translated">Devuelve la excepción que representa el error que se ha producido.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.GetException">
          <source>Returns the exception representing the error that occurred.</source>
          <target state="translated">Devuelve la excepción que representa el error que se ha producido.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.GetException">
          <source>The <ph id="ph1">`GetException`</ph> function is available only from the <ph id="ph2">`Err`</ph> object class.</source>
          <target state="translated">El <ph id="ph1">`GetException`</ph> función sólo está disponible desde la <ph id="ph2">`Err`</ph> clase de objeto.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.GetException">
          <source>It works with the <ph id="ph1">`Exception`</ph> property of the <ph id="ph2">`Err`</ph> object to display the error that has occurred.</source>
          <target state="translated">Funciona con la <ph id="ph1">`Exception`</ph> propiedad de la <ph id="ph2">`Err`</ph> objeto que se va a mostrar el error que se ha producido.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.GetException">
          <source>The following code displays the message assigned to the exception in the <ph id="ph1">`Err`</ph> object:</source>
          <target state="translated">El código siguiente muestra el mensaje asignado a la excepción en el <ph id="ph1">`Err`</ph> objeto:</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>Returns or sets an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> containing the context ID for a topic in a Help file.</source>
          <target state="translated">Devuelve o establece un valor <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> que contiene el identificador de contexto de un tema en un archivo de Ayuda.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>Read/write.</source>
          <target state="translated">Lectura y escritura.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>Returns or sets an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> containing the context ID for a topic in a Help file.</source>
          <target state="translated">Devuelve o establece un valor <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> que contiene el identificador de contexto de un tema en un archivo de Ayuda.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>Read/write.</source>
          <target state="translated">Lectura y escritura.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>The <ph id="ph1">`HelpContext`</ph> property is used to display context-sensitive Help for an application.</source>
          <target state="translated">El <ph id="ph1">`HelpContext`</ph> propiedad se utiliza para mostrar Ayuda contextual para una aplicación.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>If a Help file is specified in <ph id="ph1">`HelpFile`</ph>, the <ph id="ph2">`HelpContext`</ph> property is used to automatically display the Help file identified.</source>
          <target state="translated">Si se especifica un archivo de ayuda en <ph id="ph1">`HelpFile`</ph>, el <ph id="ph2">`HelpContext`</ph> propiedad se utiliza para mostrar automáticamente el archivo de Ayuda identificado.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>If both the <ph id="ph1">`HelpFile`</ph> and <ph id="ph2">`HelpContext`</ph> properties are empty, the value of the <ph id="ph3">&lt;xref:Microsoft.VisualBasic.ErrObject.Number%2A&gt;</ph> property  is checked.</source>
          <target state="translated">Si tanto la <ph id="ph1">`HelpFile`</ph> y <ph id="ph2">`HelpContext`</ph> propiedades están vacías, el valor de la <ph id="ph3">&lt;xref:Microsoft.VisualBasic.ErrObject.Number%2A&gt;</ph> se comprueba la propiedad.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>If the value of the <ph id="ph1">`Number`</ph> property corresponds to a Visual Basic run-time error value, then the Visual Basic Help context ID for the error is used.</source>
          <target state="translated">Si el valor de la <ph id="ph1">`Number`</ph> propiedad se corresponde con un valor de error de tiempo de ejecución de Visual Basic, a continuación, se utiliza el identificador de contexto de Ayuda de Visual Basic para el error.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>If the value of the <ph id="ph1">`Number`</ph> property does not correspond to a Visual Basic error, the contents screen for the Visual Basic Help file is displayed.</source>
          <target state="translated">Si el valor de la <ph id="ph1">`Number`</ph> propiedad no se corresponde con un error de Visual Basic, se muestra la pantalla de contenido para el archivo de Ayuda de Visual Basic.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>You should write routines in your application to handle typical errors.</source>
          <target state="translated">Se recomienda escribir rutinas en su aplicación para controlar los errores más frecuentes.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</source>
          <target state="translated">Al programar con un objeto, puede usar el archivo de Ayuda del objeto para mejorar la calidad de su control de errores, o para mostrar un mensaje descriptivo para el usuario si el error no es recuperable.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>This example uses the <ph id="ph1">`HelpContext`</ph> property of the <ph id="ph2">`Err`</ph> object to show the Visual Basic Help topic for the <ph id="ph3">`Overflow`</ph> error.</source>
          <target state="translated">Este ejemplo se utiliza la <ph id="ph1">`HelpContext`</ph> propiedad de la <ph id="ph2">`Err`</ph> objeto que se va a mostrar el tema de Ayuda de Visual Basic para el <ph id="ph3">`Overflow`</ph> error.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>Returns or sets a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the fully qualified path to a Help file.</source>
          <target state="translated">Devuelve o establece una expresión de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> que contiene la ruta de acceso completa a un archivo de Ayuda.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>Read/write.</source>
          <target state="translated">Lectura y escritura.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>Returns or sets a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the fully qualified path to a Help file.</source>
          <target state="translated">Devuelve o establece una expresión de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> que contiene la ruta de acceso completa a un archivo de Ayuda.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>Read/write.</source>
          <target state="translated">Lectura y escritura.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>If a Help file is specified by the <ph id="ph1">`HelpFile`</ph> property, it is automatically called when the user presses the Help key (or the F1 key) in the error message dialog box.</source>
          <target state="translated">Si se especifica un archivo de Ayuda del <ph id="ph1">`HelpFile`</ph> propiedad, se llama automáticamente cuando el usuario presiona la tecla de ayuda (o la tecla F1) en el cuadro de diálogo de mensaje de error.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>If the <ph id="ph1">`HelpContext`</ph> property contains a valid context ID for the specified file, that topic is automatically displayed.</source>
          <target state="translated">Si el <ph id="ph1">`HelpContext`</ph> propiedad contiene un identificador para el archivo especificado, ese tema se muestra automáticamente de contexto válido.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>If no <ph id="ph1">`HelpFile`</ph> is specified, the Visual Basic Help file is displayed.</source>
          <target state="translated">Si no hay ningún <ph id="ph1">`HelpFile`</ph> se especifica, se muestra el archivo de Ayuda de Visual Basic.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>You should write routines in your application to handle typical errors.</source>
          <target state="translated">Se recomienda escribir rutinas en su aplicación para controlar los errores más frecuentes.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</source>
          <target state="translated">Al programar con un objeto, puede usar el archivo de Ayuda del objeto para mejorar la calidad de su control de errores, o para mostrar un mensaje descriptivo para el usuario si el error no es recuperable.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>This example uses the <ph id="ph1">`HelpFile`</ph> property of the <ph id="ph2">`Err`</ph> object to start the Help system.</source>
          <target state="translated">Este ejemplo se utiliza la <ph id="ph1">`HelpFile`</ph> propiedad de la <ph id="ph2">`Err`</ph> objeto que se va a iniciar el sistema de ayuda.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>By default, the <ph id="ph1">`HelpFile`</ph> property contains the name of the Visual Basic Help file.</source>
          <target state="translated">De forma predeterminada, la <ph id="ph1">`HelpFile`</ph> propiedad contiene el nombre del archivo de Ayuda de Visual Basic.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Returns a system error code produced by a call to a dynamic-link library (DLL).</source>
          <target state="translated">Devuelve un código de error del sistema generado por una llamada a una biblioteca de vínculos dinámicos (archivo DLL).</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Read-only.</source>
          <target state="translated">Sólo lectura.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Returns a system error code produced by a call to a dynamic-link library (DLL).</source>
          <target state="translated">Devuelve un código de error del sistema generado por una llamada a una biblioteca de vínculos dinámicos (archivo DLL).</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Read-only.</source>
          <target state="translated">Sólo lectura.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> property applies only to DLL calls made from Visual Basic code.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> propiedad se aplica sólo a llamadas a DLL provenientes de código de Visual Basic.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>When such a call is made, the called function usually returns a code indicating success or failure, and the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> property is filled.</source>
          <target state="translated">Cuando se realiza una llamada de este tipo, la función invocada normalmente devolverá un código que indica éxito o error y el <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> se rellena la propiedad.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Check the documentation for the DLL's functions to determine the return values that indicate success or failure.</source>
          <target state="translated">Consulte la documentación para las funciones de los archivos DLL determinar los valores devueltos que indican éxito o error.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Whenever the failure code is returned, the Visual Basic application should immediately check the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> property.</source>
          <target state="translated">Cada vez que se devuelve el código de error, la aplicación Visual Basic debería comprobar inmediatamente la <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>No exception is raised when the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> property is set.</source>
          <target state="translated">Se genera ninguna excepción cuando la <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> se establece la propiedad.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> property is protected by <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph>, which helps prevent it from being accessed from untrusted code.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> propiedad está protegida mediante <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph>, lo que ayuda a evita que está accesible desde el código de confianza.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>However, <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph> requires only the immediate caller to have <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A&gt;</ph> permission.</source>
          <target state="translated">Sin embargo, <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph> requiere únicamente el llamador inmediato tenga <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A&gt;</ph> permiso.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>If your code can be called from partially trusted code, exposing the value of <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> without validation is a security risk.</source>
          <target state="translated">Si el código se puede llamar desde código de confianza parcial, exponiendo el valor de <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> sin validación es un riesgo de seguridad.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>For important limitations about how to use the <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph> member, see <bpt id="p1">[</bpt>Demand vs. LinkDemand<ept id="p1">](http://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5)</ept>.</source>
          <target state="translated">Para conocer las limitaciones importantes acerca de cómo utilizar el <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph> miembro, vea <bpt id="p1">[</bpt>Demand versus. LinkDemand<ept id="p1">](http://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5)</ept>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>For more information about permissions, see <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> and <bpt id="p1">[</bpt>Code Access Permissions<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</source>
          <target state="translated">Para obtener más información acerca de los permisos, consulte <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> y <bpt id="p1">[</bpt>permisos de acceso del código<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Note   For smart devices this property always returns zero.</source>
          <target state="translated">Tenga en cuenta que para los dispositivos inteligentes esta propiedad devuelve siempre cero.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>The following example shows how you can use the <ph id="ph1">`LastDllError`</ph> property after calling a function in the Windows API.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo se puede utilizar el <ph id="ph1">`LastDllError`</ph> propiedad después de llamar a una función en la API de Windows.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>The <ph id="ph1">`PrintWindowCoordinates`</ph> procedure takes a handle to a window and calls the <ph id="ph2">`GetWindowRect`</ph> function.</source>
          <target state="translated">El <ph id="ph1">`PrintWindowCoordinates`</ph> procedimiento toma un identificador a una ventana y las llamadas del <ph id="ph2">`GetWindowRect`</ph> función.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source><ph id="ph1">`GetWindowRect`</ph> fills the RECT data structure with the lengths of the sides of the rectangle that make up the window.</source>
          <target state="translated"><ph id="ph1">`GetWindowRect`</ph> rellena la estructura de datos RECT con las longitudes de los lados del rectángulo que forman la ventana.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>If you pass an invalid handle, an error occurs, and the error number is available through the <ph id="ph1">`LastDllError`</ph> property.</source>
          <target state="translated">Si se pasa un identificador no válido, se produce un error y el número de error está disponible a través de la <ph id="ph1">`LastDllError`</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>Returns or sets a numeric value specifying an error.</source>
          <target state="translated">Devuelve o establece un valor numérico que especifica un error.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>Read/write.</source>
          <target state="translated">Lectura y escritura.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>Returns or sets a numeric value specifying an error.</source>
          <target state="translated">Devuelve o establece un valor numérico que especifica un error.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>Read/write.</source>
          <target state="translated">Lectura y escritura.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>All of the <ph id="ph1">`Raise`</ph> arguments except <ph id="ph2">`Number`</ph> are optional.</source>
          <target state="translated">Todos los <ph id="ph1">`Raise`</ph> argumentos excepto <ph id="ph2">`Number`</ph> son opcionales.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>If you omit optional arguments, and the property settings of the <ph id="ph1">`Err`</ph> object contain values that have not been cleared, those values serve as the values for your error.</source>
          <target state="translated">Si omite los argumentos opcionales y los valores de propiedad de la <ph id="ph1">`Err`</ph> objeto contienen valores que no se han borrado, dichos valores sirven como valores para el error.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>Because the <ph id="ph1">`Err`</ph> object gives richer information than when you generate errors with the <ph id="ph2">`Error`</ph> statement, <ph id="ph3">`Raise`</ph> is useful for generating errors when writing class modules.</source>
          <target state="translated">Dado que la <ph id="ph1">`Err`</ph> objeto ofrece información más completa que cuando se generan errores con el <ph id="ph2">`Error`</ph> instrucción, <ph id="ph3">`Raise`</ph> resulta útil para generar errores al escribir módulos de clase.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>For example, with the <ph id="ph1">`Raise`</ph> method, the source that generated the error can be specified in the <ph id="ph2">`Source`</ph> property, online Help for the error can be referenced, and so on.</source>
          <target state="translated">Por ejemplo, con el <ph id="ph1">`Raise`</ph> método, se puede especificar el origen que generó el error en la <ph id="ph2">`Source`</ph> propiedad, puede hacer referencia a la Ayuda en línea para el error y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>When returning a user-defined error from an object, set <ph id="ph1">`Err.Number`</ph> by adding the number you selected as an error code to the <ph id="ph2">`VbObjectError`</ph> constant.</source>
          <target state="translated">Cuando se devuelve un error definido por el usuario de un objeto, establezca <ph id="ph1">`Err.Number`</ph> agregando el número ha seleccionado como un código de error para el <ph id="ph2">`VbObjectError`</ph> constante.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>For example, you use the following code to return the number 1051 as an error code:</source>
          <target state="translated">Por ejemplo, utilice el siguiente código para devolver el número 1051 como código de error:</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>This example illustrates a typical use of the <ph id="ph1">`Number`</ph> property in an error-handling routine.</source>
          <target state="translated">Este ejemplo muestra un uso típico de la <ph id="ph1">`Number`</ph> propiedad en una rutina de control de errores.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>This example uses the <ph id="ph1">`Err`</ph> object's <ph id="ph2">`Raise`</ph> method to generate an original error within a function written in Visual Basic.</source>
          <target state="translated">Este ejemplo se utiliza la <ph id="ph1">`Err`</ph> del objeto <ph id="ph2">`Raise`</ph> método para generar un error original en una función escrita en Visual Basic.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>The calling function can catch the error and report it to the user.</source>
          <target state="translated">La función de llamada puede detectar el error y notificar al usuario.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>Notice that procedure <ph id="ph1">`CallingProcedure`</ph> contrasts the type of information that you can derive from an <ph id="ph2">`Err`</ph> object with the information that you can derive from an <ph id="ph3">`Exception`</ph> object.</source>
          <target state="translated">Observe que el procedimiento <ph id="ph1">`CallingProcedure`</ph> contrasta el tipo de información que se puede derivar de un <ph id="ph2">`Err`</ph> objeto con la información que se puede derivar de un <ph id="ph3">`Exception`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source><ph id="ph1">&lt;paramref name="Number" /&gt;</ph> is greater than 65535.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Number" /&gt;</ph> es mayor que 65535.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see langword="Long" /&gt;</ph> integer that identifies the nature of the error.</source>
          <target state="translated">Entero de tipo <ph id="ph1">&lt;see langword="Long" /&gt;</ph> que identifica la naturaleza del error.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Visual Basic errors are in the range 0–65535; the range 0–512 is reserved for system errors; the range 513–65535 is available for user-defined errors.</source>
          <target state="translated">Los errores de Visual Basic vienen indicados por el intervalo 0-65535, el intervalo 0-512 queda reservado para los errores del sistema y el intervalo 513-65535 es para los errores definidos por el usuario.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>When setting the <ph id="ph1">&lt;see langword="Number" /&gt;</ph> property to your own error code in a class module, you add your error code number to the <ph id="ph2">&lt;see langword="vbObjectError" /&gt;</ph> constant.</source>
          <target state="translated">Cuando se establece el valor de la propiedad <ph id="ph1">&lt;see langword="Number" /&gt;</ph> en un código de error propio en un módulo de clase, se suma el número del código de error a la constante <ph id="ph2">&lt;see langword="vbObjectError" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>For example, to generate the error number 513, assign <bpt id="p1">&lt;c&gt;</bpt>vbObjectError + 513<ept id="p1">&lt;/c&gt;</ept> to the <ph id="ph1">&lt;see langword="Number" /&gt;</ph> property.</source>
          <target state="translated">Por ejemplo, para generar el número de error 513, asigne <bpt id="p1">&lt;c&gt;</bpt>vbObjectError + 513<ept id="p1">&lt;/c&gt;</ept> a la propiedad <ph id="ph1">&lt;see langword="Number" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression naming the object or application that generated the error.</source>
          <target state="translated">Expresión de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> que denomina el objeto o la aplicación que generó el error.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>When setting this property for an object, use the form <bpt id="p1">&lt;c&gt;</bpt>project<ept id="p1">&lt;/c&gt;</ept>.<bpt id="p2">&lt;c&gt;</bpt>class<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">Al establecer esta propiedad para un objeto, use el formato <bpt id="p1">&lt;c&gt;</bpt>project<ept id="p1">&lt;/c&gt;</ept>.<bpt id="p2">&lt;c&gt;</bpt>class<ept id="p2">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Source<ept id="p1">&lt;/c&gt;</ept> is not specified, the process ID of the current Visual Basic project is used.</source>
          <target state="translated">Si no se especifica <bpt id="p1">&lt;c&gt;</bpt>Source<ept id="p1">&lt;/c&gt;</ept>, se usa el identificador de proceso del proyecto actual de Visual Basic.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression describing the error.</source>
          <target state="translated">Expresión de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> que describe el error.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If unspecified, the value in the <ph id="ph1">&lt;see langword="Number" /&gt;</ph> property is examined.</source>
          <target state="translated">Si no se especifica, se examina el valor de la propiedad <ph id="ph1">&lt;see langword="Number" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the <ph id="ph1">&lt;see langword="Error" /&gt;</ph> function is used as the <ph id="ph2">&lt;see langword="Description" /&gt;</ph> property.</source>
          <target state="translated">Si se puede asignar a un código de error en tiempo de ejecución de Visual Basic, la cadena que devuelva la función <ph id="ph1">&lt;see langword="Error" /&gt;</ph> se utilizará como la propiedad <ph id="ph2">&lt;see langword="Description" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If there is no Visual Basic error corresponding to the <ph id="ph1">&lt;see langword="Number" /&gt;</ph> property, the "Application-defined or object-defined error" message is used.</source>
          <target state="translated">Si hay ningún error de Visual Basic que corresponda a la propiedad <ph id="ph1">&lt;see langword="Number" /&gt;</ph>, se utiliza el mensaje "Error definido por la aplicación o por el objeto".</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>The fully qualified path to the Help file in which help on this error can be found.</source>
          <target state="translated">Ruta de acceso completa al archivo de Ayuda referente a este error.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.</source>
          <target state="translated">Si no se especifica, Visual Basic utiliza la unidad, la ruta de acceso y el nombre completos del archivo de Ayuda de Visual Basic.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>The context ID identifying a topic within <bpt id="p1">&lt;c&gt;</bpt>HelpFile<ept id="p1">&lt;/c&gt;</ept> that provides help for the error.</source>
          <target state="translated">Identificador de contexto que identifica un tema dentro del <bpt id="p1">&lt;c&gt;</bpt>HelpFile<ept id="p1">&lt;/c&gt;</ept> que proporciona ayuda para el error.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If omitted, the Visual Basic Help-file context ID for the error corresponding to the <ph id="ph1">&lt;see langword="Number" /&gt;</ph> property is used, if it exists.</source>
          <target state="translated">Si no se especifica, se utiliza el identificador de contexto del archivo de Ayuda de Visual Basic correspondiente a la propiedad <ph id="ph1">&lt;see langword="Number" /&gt;</ph> si existe.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Generates a run-time error; can be used instead of the <ph id="ph1">&lt;see langword="Error" /&gt;</ph> statement.</source>
          <target state="translated">Genera un error en tiempo de ejecución; se puede utilizar en lugar de la instrucción <ph id="ph1">&lt;see langword="Error" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>All of the <ph id="ph1">`Raise`</ph> arguments except <ph id="ph2">`Number`</ph> are optional.</source>
          <target state="translated">Todos los <ph id="ph1">`Raise`</ph> argumentos excepto <ph id="ph2">`Number`</ph> son opcionales.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If you omit optional arguments, and the property settings of the <ph id="ph1">`Err`</ph> object contain values that have not been cleared, those values serve as the values for your error.</source>
          <target state="translated">Si omite los argumentos opcionales y los valores de propiedad de la <ph id="ph1">`Err`</ph> objeto contienen valores que no se han borrado, dichos valores sirven como valores para el error.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Because the <ph id="ph1">`Err`</ph> object gives richer information than when you generate errors with the <ph id="ph2">`Error`</ph> statement, <ph id="ph3">`Raise`</ph> is useful for generating errors when writing class modules.</source>
          <target state="translated">Dado que la <ph id="ph1">`Err`</ph> objeto ofrece información más completa que cuando se generan errores con el <ph id="ph2">`Error`</ph> instrucción, <ph id="ph3">`Raise`</ph> resulta útil para generar errores al escribir módulos de clase.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>For example, with the <ph id="ph1">`Raise`</ph> method, the source that generated the error can be specified in the <ph id="ph2">`Source`</ph> property, online Help for the error can be referenced, and so on.</source>
          <target state="translated">Por ejemplo, con el <ph id="ph1">`Raise`</ph> método, se puede especificar el origen que generó el error en la <ph id="ph2">`Source`</ph> propiedad, puede hacer referencia a la Ayuda en línea para el error y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>This example uses the <ph id="ph1">`Err`</ph> object's <ph id="ph2">`Raise`</ph> method to generate an error within a function written in Visual Basic.</source>
          <target state="translated">Este ejemplo se utiliza la <ph id="ph1">`Err`</ph> del objeto <ph id="ph2">`Raise`</ph> método para generar un error en una función escrita en Visual Basic.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>The calling function can catch the error and report it to the user with a message box.</source>
          <target state="translated">La función de llamada puede detectar el error y notificar al usuario con un cuadro de mensaje.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>Returns or sets a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression specifying the name of the object or application that originally generated the error.</source>
          <target state="translated">Devuelve o establece una expresión de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> que especifica el nombre del objeto o de la aplicación que generó originalmente el error.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>Read/write.</source>
          <target state="translated">Lectura y escritura.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>Returns or sets a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression specifying the name of the object or application that originally generated the error.</source>
          <target state="translated">Devuelve o establece una expresión de tipo <ph id="ph1">&lt;see langword="String" /&gt;</ph> que especifica el nombre del objeto o de la aplicación que generó originalmente el error.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>Read/write.</source>
          <target state="translated">Lectura y escritura.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>The <ph id="ph1">`Source`</ph> property specifies a <ph id="ph2">`String`</ph> expression representing the object that generated the error; the expression is usually the object's class name or process ID.</source>
          <target state="translated">El <ph id="ph1">`Source`</ph> propiedad especifica un <ph id="ph2">`String`</ph> expresión que representa el objeto que generó el error; la expresión suele ser nombre de clase del objeto o identificador de proceso.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>Use the <ph id="ph1">`Source`</ph> property to provide information when your code is unable to handle an error generated in an accessed object.</source>
          <target state="translated">Use la <ph id="ph1">`Source`</ph> propiedad para proporcionar información cuando el código no puede controlar un error generado en un objeto que se accede.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>For example, if you access Microsoft Excel and it generates a <ph id="ph1">`Division by zero`</ph> error, Microsoft Excel sets <ph id="ph2">`Err.Number`</ph> to its error code for that error and sets <ph id="ph3">`Source`</ph> to "Excel.Application".</source>
          <target state="translated">Por ejemplo, si se obtiene acceso a Microsoft Excel y se genera un <ph id="ph1">`Division by zero`</ph> error, Microsoft Excel establece <ph id="ph2">`Err.Number`</ph> a su código de error de ese error y establece <ph id="ph3">`Source`</ph> en "Excel.Application".</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>When the application is generating an error from code, <ph id="ph1">`Source`</ph> is your application's programmatic ID.</source>
          <target state="translated">Cuando la aplicación genera un error desde el código, <ph id="ph1">`Source`</ph> es el identificador de programación de. la aplicación</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>Within a class, <ph id="ph1">`Source`</ph> should contain a name having the form <bpt id="p1">*</bpt>project<ept id="p1">*</ept>.<bpt id="p2">*</bpt>class<ept id="p2">*</ept>.</source>
          <target state="translated">Dentro de una clase, <ph id="ph1">`Source`</ph> debería contener un nombre que tiene el formato <bpt id="p1">*</bpt>proyecto<ept id="p1">*</ept>.<bpt id="p2">*</bpt> clase<ept id="p2">*</ept>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>When an unexpected error occurs in your code, the <ph id="ph1">`Source`</ph> property is automatically filled in.</source>
          <target state="translated">Cuando se produce un error inesperado en el código, el <ph id="ph1">`Source`</ph> propiedad se rellena automáticamente.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>For errors in a module, <ph id="ph1">`Source`</ph> contains the project name.</source>
          <target state="translated">Si hay errores en un módulo, <ph id="ph1">`Source`</ph> contiene el nombre del proyecto.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>This example demonstrates the use of the <ph id="ph1">`Source`</ph> property in a typical error-handling routine.</source>
          <target state="translated">En este ejemplo se muestra el uso de la <ph id="ph1">`Source`</ph> propiedad en una rutina de control de errores típica.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>When an error is raised from <ph id="ph1">`Class1`</ph>, the string <ph id="ph2">`"Class1"`</ph> is assigned to the <ph id="ph3">`Source`</ph> property of the <ph id="ph4">`Err`</ph> object.</source>
          <target state="translated">Cuando se produce un error de <ph id="ph1">`Class1`</ph>, la cadena <ph id="ph2">`"Class1"`</ph> se asigna a la <ph id="ph3">`Source`</ph> propiedad de la <ph id="ph4">`Err`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>This string is then displayed in an informative message indicating the source and number of the error.</source>
          <target state="translated">Esta cadena se muestra a continuación, en un mensaje informativo que indica el origen y el número de error.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>