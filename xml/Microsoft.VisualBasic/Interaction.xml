<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Interaction.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d929f3d03329fe8e498b0a0ff897fca7ef311ce9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d929f3d03329fe8e498b0a0ff897fca7ef311ce9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Interaction">
          <source>The <ph id="ph1">&lt;see langword="Interaction" /&gt;</ph> module contains procedures used to interact with objects, applications, and systems.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Interaction">
          <source>This module supports the Visual Basic language keywords and run-time library members that run other programs, call a method or property, sound a beep from the computer, provide a command-line string, manipulate COM objects, and control dialog boxes.</source>
          <target state="translated">Este módulo admite las palabras clave del lenguaje Visual Basic y miembros de la biblioteca de tiempo de ejecución que ejecutan otros programas, llamar a un método o propiedad, un sonido desde el equipo, proporcionan una cadena de línea de comandos, manipulan objetos COM y controlan los cuadros de diálogo.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Interaction">
          <source>The following example uses the <ph id="ph1">`Shell`</ph> function to run an application specified by the user.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">`Shell`</ph> función que se ejecuta una aplicación especificada por el usuario.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Interaction">
          <source>Specifying <ph id="ph1">&lt;xref:Microsoft.VisualBasic.AppWinStyle.NormalFocus?displayProperty=nameWithType&gt;</ph> as the second argument opens the application in normal size and gives it the focus.</source>
          <target state="translated">Especificar <ph id="ph1">&lt;xref:Microsoft.VisualBasic.AppWinStyle.NormalFocus?displayProperty=nameWithType&gt;</ph> como el segundo argumento, se abre la aplicación en su tamaño normal y le transfiere el foco.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Interaction">
          <source>Activates an application that is already running.</source>
          
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> specifying the Win32 process ID number assigned to this process.</source>
          
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>You can use the ID returned by the <ph id="ph1">&lt;see cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" /&gt;</ph>, provided it is not zero.</source>
          
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>Activates an application that is already running.</source>
          
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>You use <ph id="ph1">`AppActivate`</ph> to bring an application's active window into focus.</source>
          <target state="translated">Utiliza <ph id="ph1">`AppActivate`</ph> para poner la ventana activa de una aplicación en el foco.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>You might not have a handle or a reference to the active window, or even know which window is active at a given moment.</source>
          <target state="translated">No puede tener un identificador o una referencia a la ventana activa, o incluso lo saben qué ventana está activa en un momento dado.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>In such a case, you cannot use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method.</source>
          <target state="translated">En tal caso, no puede usar el <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>The <ph id="ph1">`AppActivate`</ph> function changes the focus to the named application or window but does not affect whether it is maximized or minimized.</source>
          <target state="translated">El <ph id="ph1">`AppActivate`</ph> cambia el foco a la aplicación con nombre o la ventana de función, pero no afecta al hecho de que está maximizada o minimizada.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>Focus moves away from the activated application window when the user takes some action to change the focus or close the window.</source>
          <target state="translated">Foco se desplaza fuera de la ventana de aplicación activada cuando el usuario realice alguna acción para cambiar el foco o cerrar la ventana.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>You can use the <ph id="ph1">`Shell`</ph> function to start an application and set the window style.</source>
          <target state="translated">Puede usar el <ph id="ph1">`Shell`</ph> función para iniciar una aplicación y establecer el estilo de ventana.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>If you use the <ph id="ph1">`Title`</ph> parameter, <ph id="ph2">`AppActivate`</ph> uses a case-insensitive comparison but otherwise requires an exact match with the contents of the title bar.</source>
          <target state="translated">Si usas el <ph id="ph1">`Title`</ph> parámetro, <ph id="ph2">`AppActivate`</ph> utiliza una comparación entre mayúsculas y minúsculas, pero en caso contrario, se requiere una coincidencia exacta con el contenido de la barra de título.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>It first looks through the top-level windows and then through the child windows.</source>
          <target state="translated">En primer lugar, busca a través de las ventanas de nivel superior y, a continuación, las ventanas secundarias.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>If it cannot find a match, it throws an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Si no se encuentra una coincidencia, produce un <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>You can use <ph id="ph1">`AppActivate`</ph> only with processes that own windows.</source>
          <target state="translated">Puede usar <ph id="ph1">`AppActivate`</ph> sólo con procesos que pertenecen a windows.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>Most console applications do not own windows, which means that they do not appear in the list of processes that <ph id="ph1">`AppActivate`</ph> searches.</source>
          <target state="translated">Mayoría de las aplicaciones de consola no tiene ventanas, lo que significa que no aparecen en la lista de los procesos que se <ph id="ph1">`AppActivate`</ph> búsquedas.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>When running from a console application, the system creates a separate process to run the application and returns the output to the console process.</source>
          <target state="translated">Cuando se ejecuta desde una aplicación de consola, el sistema crea un proceso independiente para ejecutar la aplicación y devuelve el resultado al proceso de la consola.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>Consequently, when you request the current process ID, you get the process ID of this separate process, rather than the console application's process ID.</source>
          <target state="translated">Por consiguiente, cuando se solicita el identificador del proceso actual, se obtiene el identificador de proceso de ese proceso independiente, en lugar de Id. de proceso de. la aplicación de consola</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>At run time, the <ph id="ph1">`AppActivate`</ph> function activates any running application with a title that matches <ph id="ph2">`Title`</ph> or with a process ID that matches <ph id="ph3">`ProcessId`</ph>.</source>
          <target state="translated">En tiempo de ejecución, el <ph id="ph1">`AppActivate`</ph> función activa cualquier aplicación en ejecución con un título que coincida con <ph id="ph2">`Title`</ph> o con un identificador de proceso que coincida con <ph id="ph3">`ProcessId`</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>If there is no exact match, it activates any application whose title string ends with <ph id="ph1">`Title`</ph>.</source>
          <target state="translated">Si no hay ninguna coincidencia exacta, se activará cualquier aplicación cuya cadena de título termina con <ph id="ph1">`Title`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>If there is more than one application named <ph id="ph1">`Title`</ph>, the <ph id="ph2">`AppActivate`</ph> function arbitrarily chooses one to activate.</source>
          <target state="translated">Si hay más de una aplicación denominada <ph id="ph1">`Title`</ph>, el <ph id="ph2">`AppActivate`</ph> función arbitrariamente elige uno para activar.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>The <ph id="ph1">`AppActivate`</ph> function requires <ph id="ph2">`UIPermission`</ph> at the <ph id="ph3">&lt;xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows&gt;</ph> level, which may affect its execution in partial-trust situations.</source>
          <target state="translated">El <ph id="ph1">`AppActivate`</ph> función requiere <ph id="ph2">`UIPermission`</ph> en el <ph id="ph3">&lt;xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows&gt;</ph> nivel, lo que puede afectar a su ejecución en situaciones de confianza parcial.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Security.Permissions.UIPermission&gt;</ph> .</source>
          <target state="translated">Para obtener más información, vea <ph id="ph1">&lt;xref:System.Security.Permissions.UIPermission&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>This example illustrates various uses of the <ph id="ph1">`AppActivate`</ph> function to activate an application window.</source>
          <target state="translated">En este ejemplo se muestra varios usos de la <ph id="ph1">`AppActivate`</ph> función para activar una ventana de aplicación.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>If a Notepad process is not running, the example throws an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Si no se está ejecutando un proceso de Bloc de notas, en el ejemplo se inicia una <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>The <ph id="ph1">`Shell`</ph> procedure assumes the applications are in the paths specified.</source>
          <target state="translated">El <ph id="ph1">`Shell`</ph> procedimiento se da por supuesto que las aplicaciones están en las rutas de acceso especificadas.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression specifying the title in the title bar of the application you want to activate.</source>
          
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>You can use the title assigned to the application when it was launched.</source>
          
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>Activates an application that is already running.</source>
          
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>You use <ph id="ph1">`AppActivate`</ph> to bring an application's active window into focus.</source>
          <target state="translated">Utiliza <ph id="ph1">`AppActivate`</ph> para poner la ventana activa de una aplicación en el foco.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>You might not have a handle or a reference to the active window, or even know which window is active at a given moment.</source>
          <target state="translated">No puede tener un identificador o una referencia a la ventana activa, o incluso lo saben qué ventana está activa en un momento dado.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>In such a case, you cannot use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method.</source>
          <target state="translated">En tal caso, no puede usar el <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>The <ph id="ph1">`AppActivate`</ph> function changes the focus to the named application or window but does not affect whether it is maximized or minimized.</source>
          <target state="translated">El <ph id="ph1">`AppActivate`</ph> cambia el foco a la aplicación con nombre o la ventana de función, pero no afecta al hecho de que está maximizada o minimizada.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>Focus moves away from the activated application window when the user takes some action to change the focus or close the window.</source>
          <target state="translated">Foco se desplaza fuera de la ventana de aplicación activada cuando el usuario realice alguna acción para cambiar el foco o cerrar la ventana.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>You can use the <ph id="ph1">`Shell`</ph> function to start an application and set the window style.</source>
          <target state="translated">Puede usar el <ph id="ph1">`Shell`</ph> función para iniciar una aplicación y establecer el estilo de ventana.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>If you use the <ph id="ph1">`Title`</ph> parameter, <ph id="ph2">`AppActivate`</ph> uses a case-insensitive comparison but otherwise requires an exact match with the contents of the title bar.</source>
          <target state="translated">Si usas el <ph id="ph1">`Title`</ph> parámetro, <ph id="ph2">`AppActivate`</ph> utiliza una comparación entre mayúsculas y minúsculas, pero en caso contrario, se requiere una coincidencia exacta con el contenido de la barra de título.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>It first looks through the top-level windows and then through the child windows.</source>
          <target state="translated">En primer lugar, busca a través de las ventanas de nivel superior y, a continuación, las ventanas secundarias.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>If it cannot find a match, it throws an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Si no se encuentra una coincidencia, produce un <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>You can use <ph id="ph1">`AppActivate`</ph> only with processes that own windows.</source>
          <target state="translated">Puede usar <ph id="ph1">`AppActivate`</ph> sólo con procesos que pertenecen a windows.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>Most console applications do not own windows, which means that they do not appear in the list of processes that <ph id="ph1">`AppActivate`</ph> searches.</source>
          <target state="translated">Mayoría de las aplicaciones de consola no tiene ventanas, lo que significa que no aparecen en la lista de los procesos que se <ph id="ph1">`AppActivate`</ph> búsquedas.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>When running from a console application, the system creates a separate process to run the application and returns the output to the console process.</source>
          <target state="translated">Cuando se ejecuta desde una aplicación de consola, el sistema crea un proceso independiente para ejecutar la aplicación y devuelve el resultado al proceso de la consola.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>Consequently, when you request the current process ID, you get the process ID of this separate process, rather than the console application's process ID.</source>
          <target state="translated">Por consiguiente, cuando se solicita el identificador del proceso actual, se obtiene el identificador de proceso de ese proceso independiente, en lugar de Id. de proceso de. la aplicación de consola</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>At run time, the <ph id="ph1">`AppActivate`</ph> function activates any running application with a title that matches <ph id="ph2">`Title`</ph> or with a process ID that matches <ph id="ph3">`ProcessId`</ph>.</source>
          <target state="translated">En tiempo de ejecución, el <ph id="ph1">`AppActivate`</ph> función activa cualquier aplicación en ejecución con un título que coincida con <ph id="ph2">`Title`</ph> o con un identificador de proceso que coincida con <ph id="ph3">`ProcessId`</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>If there is no exact match, it activates any application whose title string ends with <ph id="ph1">`Title`</ph>.</source>
          <target state="translated">Si no hay ninguna coincidencia exacta, se activará cualquier aplicación cuya cadena de título termina con <ph id="ph1">`Title`</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>If there is more than one application named <ph id="ph1">`Title`</ph>, the <ph id="ph2">`AppActivate`</ph> function arbitrarily chooses one to activate.</source>
          <target state="translated">Si hay más de una aplicación denominada <ph id="ph1">`Title`</ph>, el <ph id="ph2">`AppActivate`</ph> función arbitrariamente elige uno para activar.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>The <ph id="ph1">`AppActivate`</ph> function requires <ph id="ph2">`UIPermission`</ph> at the <ph id="ph3">&lt;xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows&gt;</ph> level, which may affect its execution in partial-trust situations.</source>
          <target state="translated">El <ph id="ph1">`AppActivate`</ph> función requiere <ph id="ph2">`UIPermission`</ph> en el <ph id="ph3">&lt;xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows&gt;</ph> nivel, lo que puede afectar a su ejecución en situaciones de confianza parcial.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Security.Permissions.UIPermission&gt;</ph> .</source>
          <target state="translated">Para obtener más información, vea <ph id="ph1">&lt;xref:System.Security.Permissions.UIPermission&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>This example illustrates various uses of the <ph id="ph1">`AppActivate`</ph> function to activate an application window.</source>
          <target state="translated">En este ejemplo se muestra varios usos de la <ph id="ph1">`AppActivate`</ph> función para activar una ventana de aplicación.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>If a Notepad process is not running, the example throws an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Si no se está ejecutando un proceso de Bloc de notas, en el ejemplo se inicia una <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>The <ph id="ph1">`Shell`</ph> procedure assumes the applications are in the paths specified.</source>
          <target state="translated">El <ph id="ph1">`Shell`</ph> procedimiento se da por supuesto que las aplicaciones están en las rutas de acceso especificadas.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Beep">
          <source>Sounds a tone through the computer's speaker.</source>
          
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Beep">
          <source>The pitch and duration of the beep depend on your hardware and system software and therefore vary among computers.</source>
          <target state="translated">El tono y la duración del Bip dependen de su software de hardware y del sistema y, por tanto, varían entre equipos.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Beep">
          <source>The <ph id="ph1">`Beep`</ph> function requires <ph id="ph2">`UIPermission`</ph> at the <ph id="ph3">&lt;xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows&gt;</ph> level, which may affect its execution in partial-trust situations.</source>
          <target state="translated">El <ph id="ph1">`Beep`</ph> función requiere <ph id="ph2">`UIPermission`</ph> en el <ph id="ph3">&lt;xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows&gt;</ph> nivel, lo que puede afectar a su ejecución en situaciones de confianza parcial.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Beep">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Security.Permissions.UIPermission&gt;</ph>.</source>
          <target state="translated">Para obtener más información, consulta <ph id="ph1">&lt;xref:System.Security.Permissions.UIPermission&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Beep">
          <source>This example uses the <ph id="ph1">`Beep`</ph> function to sound a tone through the computer's speaker.</source>
          <target state="translated">Este ejemplo se utiliza la <ph id="ph1">`Beep`</ph> función sonar un tono a través del altavoz del equipo.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>A pointer to the object exposing the property or method.</source>
          
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>A string expression containing the name of the property or method on the object.</source>
          
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>An enumeration member of type <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.CallType" /&gt;</ph> representing the type of procedure being called.</source>
          
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>The value of <ph id="ph1">&lt;see langword="CallType" /&gt;</ph> can be <ph id="ph2">&lt;see langword="Method" /&gt;</ph>, <ph id="ph3">&lt;see langword="Get" /&gt;</ph>, or <ph id="ph4">&lt;see langword="Set" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>Optional.</source>
          
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source><ph id="ph1">&lt;see langword="ParamArray" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>A parameter array containing the arguments to be passed to the property or method being called.</source>
          
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>Executes a method on an object, or sets or returns a property on an object.</source>
          
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>Executes a method on an object, or sets or returns a property on an object.</source>
          
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>The <ph id="ph1">`CallByName`</ph> function is used at runtime to get a property, set a property, or invoke a method.</source>
          <target state="translated">El <ph id="ph1">`CallByName`</ph> función se utiliza en tiempo de ejecución para obtener una propiedad, establecer una propiedad o invocar un método.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>In the following example, the first line uses <ph id="ph1">`CallByName`</ph> to set the <ph id="ph2">`Text`</ph> property of a text box, the second line retrieves the value of the <ph id="ph3">`Text`</ph> property, and the third line invokes the <ph id="ph4">`Move`</ph> method to move the text box.</source>
          <target state="translated">En el ejemplo siguiente, se utiliza la primera línea <ph id="ph1">`CallByName`</ph> para establecer el <ph id="ph2">`Text`</ph> propiedad de un cuadro de texto, la segunda línea recupera el valor de la <ph id="ph3">`Text`</ph> propiedad y la tercera línea, se invoca el <ph id="ph4">`Move`</ph> método para mover el cuadro de texto.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>The next example uses the <ph id="ph1">`CallByName`</ph> function to invoke the <ph id="ph2">`Add`</ph> and <ph id="ph3">`Item`</ph> methods of a collection object.</source>
          <target state="translated">En el ejemplo siguiente se utiliza la <ph id="ph1">`CallByName`</ph> función para invocar la <ph id="ph2">`Add`</ph> y <ph id="ph3">`Item`</ph> métodos de un objeto de colección.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>Invalid <ph id="ph1">&lt;paramref name="UseCallType" /&gt;</ph> value; must be <ph id="ph2">&lt;see langword="Method" /&gt;</ph>, <ph id="ph3">&lt;see langword="Get" /&gt;</ph>, or <ph id="ph4">&lt;see langword="Set" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source><ph id="ph1">&lt;see langword="Double" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>Numeric expression that results in a value between 1 and the number of elements passed in the <bpt id="p1">&lt;c&gt;</bpt>Choice<ept id="p1">&lt;/c&gt;</ept> argument.</source>
          
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph> parameter array.</source>
          
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>You can supply either a single variable or an expression that evaluates to the <ph id="ph1">&lt;see langword="Object" /&gt;</ph> data type, to a list of <ph id="ph2">&lt;see langword="Object" /&gt;</ph> variables or expressions separated by commas, or to a single-dimensional array of <ph id="ph3">&lt;see langword="Object" /&gt;</ph> elements.</source>
          
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>Selects and returns a value from a list of arguments.</source>
          
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>Selects and returns a value from a list of arguments.</source>
          
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>The <ph id="ph1">`Choose`</ph> function returns a member of the list passed in <ph id="ph2">`Choice()`</ph>, based on the value of <ph id="ph3">`Index`</ph>.</source>
          <target state="translated">El <ph id="ph1">`Choose`</ph> función devuelve un miembro de la lista que se pasa en <ph id="ph2">`Choice()`</ph>, según el valor de <ph id="ph3">`Index`</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>The first member of the list is selected when <ph id="ph1">`Index`</ph> is 1.</source>
          <target state="translated">El primer miembro de la lista se selecciona cuando <ph id="ph1">`Index`</ph> es 1.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>The last member of the list is selected when <ph id="ph1">`Index`</ph> is <ph id="ph2">`UBound`</ph>(<ph id="ph3">`Choice()`</ph>).</source>
          <target state="translated">El último miembro de la lista se selecciona cuando <ph id="ph1">`Index`</ph> es <ph id="ph2">`UBound`</ph>(<ph id="ph3">`Choice()`</ph>).</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>If <ph id="ph1">`Index`</ph> is outside these limits, <ph id="ph2">`Choose`</ph> returns <ph id="ph3">`Nothing`</ph>.</source>
          <target state="translated">Si <ph id="ph1">`Index`</ph> está fuera de estos límites, <ph id="ph2">`Choose`</ph> devuelve <ph id="ph3">`Nothing`</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>If <ph id="ph1">`Index`</ph> is not a whole number, it is rounded to the nearest whole number before being evaluated.</source>
          <target state="translated">Si <ph id="ph1">`Index`</ph> no es un número entero, se redondea al número entero más cercano antes de ser evaluado.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>You can use <ph id="ph1">`Choose`</ph> to look up a value in a list of possibilities.</source>
          <target state="translated">Puede usar <ph id="ph1">`Choose`</ph> para buscar un valor en una lista de posibilidades.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>The expressions in the argument list can include function calls.</source>
          <target state="translated">Las expresiones en la lista de argumentos pueden incluir llamadas a funciones.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>As part of preparing the argument list for the call to <ph id="ph1">`Choose`</ph>, the Visual Basic compiler calls every function in every expression.</source>
          <target state="translated">Como parte de la preparación de la lista de argumentos de la llamada a <ph id="ph1">`Choose`</ph>, el compilador de Visual Basic llama a cada función en cada expresión.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>This means that you cannot rely on a particular function not being called if a different expression is selected by <ph id="ph1">`Index`</ph>.</source>
          <target state="translated">Esto significa que no se puede confiar en una función determinada no se llama si se selecciona una expresión diferente mediante <ph id="ph1">`Index`</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>This example uses the <ph id="ph1">`Choose`</ph> function to display a name in response to an index passed into the procedure in the <ph id="ph2">`Ind`</ph> parameter.</source>
          <target state="translated">Este ejemplo se utiliza la <ph id="ph1">`Choose`</ph> función para mostrar un nombre en respuesta a un índice que se pasa al procedimiento en el <ph id="ph2">`Ind`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Command">
          <source>Returns the argument portion of the command line used to start Visual Basic or an executable program developed with Visual Basic.</source>
          
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Command">
          <source>The <ph id="ph1">&lt;see langword="My" /&gt;</ph> feature provides greater productivity and performance than the <ph id="ph2">&lt;see langword="Command" /&gt;</ph> function.</source>
          
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Command">
          <source>For more information, see <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Command">
          <source>Returns the argument portion of the command line used to start Visual Basic or an executable program developed with Visual Basic.</source>
          
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Command">
          <source>The <ph id="ph1">&lt;see langword="My" /&gt;</ph> feature provides greater productivity and performance than the <ph id="ph2">&lt;see langword="Command" /&gt;</ph> function.</source>
          
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Command">
          <source>For more information, see <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Command">
          <source>After the arguments are returned, you can search for common delimiters, such as spaces, backward or forward slashes, hyphens, or quotation marks, to split or search the string for individual parameters.</source>
          <target state="translated">Después de que se devuelven los argumentos, puede buscar delimitadores comunes, como espacios, barras diagonales hacia atrás o hacia delante, guiones o comillas, para dividir o buscar la cadena de parámetros individuales.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Command">
          <source>For applications developed with Visual Basic and compiled to an .exe file, the <ph id="ph1">`Command`</ph> function returns any arguments that appear after the name of the application on the command line, in this form: <ph id="ph2">`MyApp(cmdlineargs)`</ph>.</source>
          <target state="translated">Para las aplicaciones desarrolladas con Visual Basic y compiladas en un archivo .exe, el <ph id="ph1">`Command`</ph> función devolverá todos los argumentos que aparecen después del nombre de la aplicación en la línea de comandos con este formato: <ph id="ph2">`MyApp(cmdlineargs)`</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Command">
          <source>This example uses the <ph id="ph1">`Command`</ph> function to return the command-line arguments in an object that contains an array.</source>
          <target state="translated">Este ejemplo se utiliza la <ph id="ph1">`Command`</ph> función para devolver los argumentos de línea de comandos en un objeto que contiene una matriz.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>The program ID of the object to create.</source>
          
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Optional.</source>
          
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>The name of the network server where the object will be created.</source>
          
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>ServerName<ept id="p1">&lt;/c&gt;</ept> is an empty string (""), the local computer is used.</source>
          
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Creates and returns a reference to a COM object.</source>
          
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="CreateObject" /&gt;</ph> cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.</source>
          
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Creates and returns a reference to a COM object.</source>
          
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="CreateObject" /&gt;</ph> cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.</source>
          
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>To create an instance of a COM component, assign the object returned by <ph id="ph1">`CreateObject`</ph> to an object variable:</source>
          <target state="translated">Para crear una instancia de un componente COM, asigne el objeto devuelto por <ph id="ph1">`CreateObject`</ph> a una variable de objeto:</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>The type of object variable you use to store the returned object can affect your application's performance.</source>
          <target state="translated">El tipo de variable de objeto que se utiliza para almacenar el objeto devuelto puede afectar al rendimiento de la aplicación.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Declaring an object variable with the <ph id="ph1">`As Object`</ph> clause creates a variable that can contain a reference to any type of object.</source>
          <target state="translated">Declarar una variable de objeto con el <ph id="ph1">`As Object`</ph> cláusula crea una variable que puede contener una referencia a cualquier tipo de objeto.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>However, access to the object through that variable is <bpt id="p1">*</bpt>late-bound<ept id="p1">*</ept>, that is, the binding occurs when your program runs.</source>
          <target state="translated">Sin embargo, el acceso al objeto a través de esa variable es <bpt id="p1">*</bpt>enlazado tardíamente<ept id="p1">*</ept>, es decir, el enlace se produce cuando se ejecuta el programa.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>There are many reasons you should avoid late binding, including slower application performance.</source>
          <target state="translated">Hay muchas razones que se debe evitar el enlace, incluidos el rendimiento más lento de la aplicación.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>You can create an object variable that results in early binding—that is, binding when the program is compiled.</source>
          <target state="translated">Puede crear una variable de objeto que da como resultado el enlace anticipado, es decir, enlazar cuando se compila el programa.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>To do so, add a reference to the type library for your object from the <bpt id="p1">**</bpt>COM<ept id="p1">**</ept> tab of the <bpt id="p2">**</bpt>Add Reference<ept id="p2">**</ept> dialog box on the <bpt id="p3">**</bpt>Project<ept id="p3">**</ept> menu.</source>
          <target state="translated">Para ello, agregue una referencia a la biblioteca de tipos para el objeto desde el <bpt id="p1">**</bpt>COM<ept id="p1">**</ept> pestaña de la <bpt id="p2">**</bpt>Agregar referencia<ept id="p2">**</ept> cuadro de diálogo en el <bpt id="p3">**</bpt>proyecto<ept id="p3">**</ept> menú.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Then declare the object variable of the specific type of your object.</source>
          <target state="translated">A continuación, declare la variable de objeto del tipo específico del objeto.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>In most cases, it is more efficient to use the <ph id="ph1">`Dim`</ph> statement and a primary interop assembly to create objects than it is to use the <ph id="ph2">`CreateObject`</ph> function.</source>
          <target state="translated">En la mayoría de los casos, resulta más eficaz utilizar la <ph id="ph1">`Dim`</ph> instrucción y un ensamblado de interoperabilidad primario para crear objetos que es utilizar el <ph id="ph2">`CreateObject`</ph> función.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Interacting with Unmanaged Code</source>
          <target state="translated">Interactuar con código no administrado</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Another issue is that COM objects use unmanaged code — code without the benefit of the common language runtime.</source>
          <target state="translated">Otro problema es que los objetos COM utilizan código no administrado, código sin la ventaja de common language runtime.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>There is a fair degree of complexity involved in mixing the managed code of Visual Basic with unmanaged code from COM.</source>
          <target state="translated">Hay una cierta complejidad implicada en mezclar el código administrado de Visual Basic con código no administrado desde COM.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>When you add a reference to a COM object, Visual Basic searches for a primary interop assembly (PIA) for that library; if it finds one, then it uses it.</source>
          <target state="translated">Cuando se agrega una referencia a un objeto COM, Visual Basic busca un ensamblado de interoperabilidad primario (PIA) para esa biblioteca. Si encuentra uno, utiliza.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>If it does not find a PIA, then it creates an interoperability assembly that contains local interoperability classes for each class in the COM library.</source>
          <target state="translated">Si no se encuentra un PIA, a continuación, crea un ensamblado de interoperabilidad que contiene clases de interoperabilidad locales para cada clase de la biblioteca COM.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>COM Interoperability in .NET Framework Applications<ept id="p1">](~/docs/visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>interoperabilidad COM en aplicaciones de .NET Framework<ept id="p1">](~/docs/visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>You should generally use strongly bound objects and primary interop assemblies whenever possible.</source>
          <target state="translated">Normalmente debe usar objetos con enlace seguro y ensamblados de interoperabilidad primarios siempre que sea posible.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>The examples below use the <ph id="ph1">`CreateObject`</ph> function with Microsoft Office objects for demonstration purposes only.</source>
          <target state="translated">Los ejemplos siguientes use el <ph id="ph1">`CreateObject`</ph> solo con fines de función con objetos de Microsoft Office para la demostración.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>However, these objects are easier to use and more reliable when used with the appropriate primary interop assembly.</source>
          <target state="translated">Sin embargo, estos objetos son fáciles de usar y más confiable cuando se usa con el ensamblado de interoperabilidad primario adecuado.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Creating an Object on a Remote Computer</source>
          <target state="translated">Creación de un objeto en un equipo remoto</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>You can create an object on a remote networked computer by passing the name of the computer to the <ph id="ph1">`ServerName`</ph> argument of the <ph id="ph2">`CreateObject`</ph> function.</source>
          <target state="translated">Puede crear un objeto en un equipo remoto de red pasando el nombre del equipo para el <ph id="ph1">`ServerName`</ph> argumento de la <ph id="ph2">`CreateObject`</ph> (función).</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>That name is the same as the Machine Name portion of a share name: for a share named "<ph id="ph1">\\</ph>\MyServer\Public," <ph id="ph2">`ServerName`</ph> is "MyServer."</source>
          <target state="translated">Ese nombre es el mismo que la parte del nombre de equipo de un nombre de recurso compartido: para un recurso compartido denominado "<ph id="ph1">\\</ph>\MyServer\Public," <ph id="ph2">`ServerName`</ph> es "MyServer".</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Refer to COM documentation (see Microsoft Developer Network) for additional information on making an application accessible on a remote networked computer.</source>
          <target state="translated">Consulte la documentación de COM (vea Microsoft Developer Network) para obtener más información sobre cómo crear una aplicación accesibles en un equipo remoto en red.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>You may need to add a registry key for your application.</source>
          <target state="translated">Debe agregar una clave del registro para la aplicación.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>The following code returns the version number of an instance of Excel running on a remote computer named <ph id="ph1">`MyServer`</ph>:</source>
          <target state="translated">El código siguiente devuelve el número de versión de una instancia de Excel que se ejecuta en un equipo remoto denominado <ph id="ph1">`MyServer`</ph>:</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>If the remote server name is incorrect, or if it is unavailable, a run-time error occurs.</source>
          <target state="translated">Si el nombre de servidor remoto es incorrecto, o si no está disponible, se produce un error en tiempo de ejecución.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Use <ph id="ph1">`CreateObject`</ph> when there is no current instance of the object.</source>
          <target state="translated">Utilice <ph id="ph1">`CreateObject`</ph> cuando no hay ninguna instancia del objeto actual.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>If an instance of the object is already running, a new instance is started, and an object of the specified type is created.</source>
          <target state="translated">Si ya se está ejecutando una instancia del objeto, se inicia una nueva instancia y se crea un objeto del tipo especificado.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>To use the current instance, or to start the application and have it load a file, use the <ph id="ph1">`GetObject`</ph> function.</source>
          <target state="translated">Para usar la instancia actual, o para iniciar la aplicación y hacer que cargue un archivo, use la <ph id="ph1">`GetObject`</ph> función.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>If an object has registered itself as a single-instance object, only one instance of the object is created, no matter how many times <ph id="ph1">`CreateObject`</ph> is executed.</source>
          <target state="translated">Si un objeto ha registrado como un objeto de instancia única, solo una instancia del objeto se crea, con independencia de cómo muchas veces <ph id="ph1">`CreateObject`</ph> se ejecuta.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Creating Framework Objects</source>
          <target state="translated">Crear objetos de Framework</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>You can use the <ph id="ph1">`CreateObject`</ph> function only to create a COM object.</source>
          <target state="translated">Puede usar el <ph id="ph1">`CreateObject`</ph> función solamente para crear un objeto COM.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>While there is no exact equivalent mechanism for creating a .NET Framework object, the <ph id="ph1">&lt;xref:System.Activator&gt;</ph> in the <ph id="ph2">&lt;xref:System&gt;</ph> namespace contains methods to create local or remote objects.</source>
          <target state="translated">Aunque no hay ningún mecanismo equivalente exacto para crear un objeto de .NET Framework, el <ph id="ph1">&lt;xref:System.Activator&gt;</ph> en el <ph id="ph2">&lt;xref:System&gt;</ph> espacio de nombres contiene métodos para crear objetos locales o remotos.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>In particular, the <ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Activator.CreateInstanceFrom%2A&gt;</ph> method might be useful.</source>
          <target state="translated">En concreto, el <ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> método o la <ph id="ph2">&lt;xref:System.Activator.CreateInstanceFrom%2A&gt;</ph> método podría ser útil.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>The <ph id="ph1">`CreateObject`</ph> function requires unmanaged code permission, which might affect its execution in partial-trust situations.</source>
          <target state="translated">El <ph id="ph1">`CreateObject`</ph> función requiere un permiso de código no administrado, lo que podría afectar a su ejecución en situaciones de confianza parcial.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> and <bpt id="p1">[</bpt>Code Access Permissions<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> y <bpt id="p1">[</bpt>permisos de acceso del código<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>The following example uses the <ph id="ph1">`CreateObject`</ph> function to create a Microsoft Excel worksheet and saves the worksheet to a file.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">`CreateObject`</ph> función para crear una hoja de cálculo de Microsoft Excel y guarda la hoja de cálculo en un archivo.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>To use this example, Excel must be installed on the computer where this program runs.</source>
          <target state="translated">Para usar este ejemplo, Excel debe instalarse en el equipo donde se ejecuta este programa.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Also, you must add a reference to the type library from the <bpt id="p1">**</bpt>COM<ept id="p1">**</ept> tab of the <bpt id="p2">**</bpt>Add Reference<ept id="p2">**</ept> dialog box on the <bpt id="p3">**</bpt>Project<ept id="p3">**</ept> menu.</source>
          <target state="translated">Además, debe agregar una referencia a la biblioteca de tipos de la <bpt id="p1">**</bpt>COM<ept id="p1">**</ept> pestaña de la <bpt id="p2">**</bpt>Agregar referencia<ept id="p2">**</ept> cuadro de diálogo en el <bpt id="p3">**</bpt>proyecto<ept id="p3">**</ept> menú.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>The name of the type library varies depending on the version of Excel installed on your computer.</source>
          <target state="translated">El nombre de la biblioteca de tipos varía según la versión de Excel instalada en el equipo.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>For example, the type library for Microsoft Excel 2002 is named <bpt id="p1">**</bpt>Microsoft Excel 10.0 Object Library<ept id="p1">**</ept>.</source>
          <target state="translated">Por ejemplo, se denomina la biblioteca de tipos para Microsoft Excel 2002 <bpt id="p1">**</bpt>biblioteca de objetos de Microsoft Excel 10.0<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Server is unavailable</source>
          
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>No object of the specified type exists</source>
          
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the name of the application or project to which the section or key setting applies.</source>
          
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the name of the section from which the key setting is being deleted.</source>
          
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source>If only <bpt id="p1">&lt;c&gt;</bpt>AppName<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>Section<ept id="p2">&lt;/c&gt;</ept> are provided, the specified section is deleted along with all related key settings.</source>
          
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source>Optional.</source>
          
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the name of the key setting being deleted.</source>
          
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source>Deletes a section or key setting from an application's entry in the Windows registry.</source>
          
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;see langword="My" /&gt;</ph> feature gives you greater productivity and performance in registry operations than the <ph id="ph2">&lt;see langword="DeleteSetting" /&gt;</ph> function.</source>
          
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source>For more information, see <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" /&gt;</ph> .</source>
          
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source>If all arguments are provided, the specified setting is deleted.</source>
          <target state="translated">Si se proporcionan todos los argumentos, se elimina la configuración especificada.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source>A run-time error occurs if you attempt to use <ph id="ph1">`DeleteSetting`</ph> on a nonexistent section or key setting.</source>
          <target state="translated">Se produce un error de tiempo de ejecución si se intenta usar <ph id="ph1">`DeleteSetting`</ph> en una sección no existe o el valor de una clave.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source><ph id="ph1">`DeleteSetting`</ph> requires that a user be logged on since it operates under the <ph id="ph2">`HKEY_LOCAL_USER`</ph> registry key, which is not active until a user logs on interactively.</source>
          <target state="translated"><ph id="ph1">`DeleteSetting`</ph> requiere que un usuario se conecte ya que funciona bajo la <ph id="ph2">`HKEY_LOCAL_USER`</ph> clave del registro, que no estará activo hasta que un usuario inicia una sesión interactiva.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source>Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the <ph id="ph1">`HKEY_LOCAL_MACHINE\Software\`</ph> or the <ph id="ph2">`HKEY_USER\DEFAULT\Software`</ph> registry keys.</source>
          <target state="translated">Configuración del registro que se van a tener acceso desde un proceso no interactivo (como Mtx.exe) debe almacenarse bajo la <ph id="ph1">`HKEY_LOCAL_MACHINE\Software\`</ph> o <ph id="ph2">`HKEY_USER\DEFAULT\Software`</ph> las claves del registro.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source>The following example first uses the <ph id="ph1">`SaveSetting`</ph> procedure to make entries in the Windows registry for the <ph id="ph2">`MyApp`</ph> application, and then uses the <ph id="ph3">`DeleteSetting`</ph> function to remove them.</source>
          <target state="translated">En el ejemplo siguiente se usa primero el <ph id="ph1">`SaveSetting`</ph> procedimiento para crear entradas en el registro de Windows para la <ph id="ph2">`MyApp`</ph> aplicación y, a continuación, utiliza el <ph id="ph3">`DeleteSetting`</ph> función para quitarlos.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source>Because no <ph id="ph1">`Key`</ph> argument is specified, the whole <ph id="ph2">`Startup`</ph> section is deleted, including the section name and all of its keys.</source>
          <target state="translated">Dado que no <ph id="ph1">`Key`</ph> se especifica el argumento, todo el <ph id="ph2">`Startup`</ph> sección se elimina, incluido el nombre de sección y todas sus claves.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source>User is not logged in.</source>
          
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Interaction">
          <source>Returns the string associated with an operating-system environment variable.</source>
          
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
          <source>Expression that evaluates either a string containing the name of an environment variable, or an integer corresponding to the numeric order of an environment string in the environment-string table.</source>
          
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
          <source>Returns the string associated with an operating-system environment variable.</source>
          
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
          <source>Returns the string associated with an operating-system environment variable.</source>
          
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
          <source>If <ph id="ph1">`Expression`</ph> contains a string, the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> function returns the text assigned to the specified environment string—that is, the text following the equal sign (=) in the environment-string table for that environment variable.</source>
          <target state="translated">Si <ph id="ph1">`Expression`</ph> contiene una cadena, la <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> función devuelve el texto asignado a la cadena de entorno especificada, es decir, el texto que sigue al signo igual (=) en la tabla de cadenas de entorno para esa variable de entorno.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
          <source>If the string in <ph id="ph1">`Expression`</ph> cannot be found in the environment-string table, a zero-length string ("") is returned.</source>
          <target state="translated">Si la cadena en <ph id="ph1">`Expression`</ph> no se encuentra en la tabla de cadenas de entorno, una cadena de longitud cero ("") se devuelve.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
          <source>If <ph id="ph1">`Expression`</ph> contains an integer, the string occupying that numeric position in the environment-string table is returned.</source>
          <target state="translated">Si <ph id="ph1">`Expression`</ph> contiene un entero, la cadena que se devuelve la posición numérica en la tabla de cadenas de entorno en uso.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
          <source>In this case, <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> returns all of the text, including the name of the environment variable.</source>
          <target state="translated">En este caso, <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> devuelve todo el texto, incluido el nombre de la variable de entorno.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
          <source>If there is no environment string in the specified position, <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> returns a zero-length string.</source>
          <target state="translated">Si no hay ninguna cadena de entorno en la posición especificada, <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> devuelve una cadena de longitud cero.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> function requires environment permission, which might affect its execution in partial-trust situations.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> función requiere un permiso de entorno, lo que podría afectar a su ejecución en situaciones de confianza parcial.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> and <bpt id="p1">[</bpt>Code Access Permissions<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> y <bpt id="p1">[</bpt>permisos de acceso del código<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
          <source>This example uses the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> function to supply the entry number and length of the <ph id="ph2">`PATH`</ph> statement from the environment-string table.</source>
          <target state="translated">Este ejemplo se utiliza la <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> función para proporcionar el número de entrada y la longitud de la <ph id="ph2">`PATH`</ph> instrucción desde la tabla de cadenas de entorno.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="Expression" /&gt;</ph> is missing.</source>
          
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
          <source>Expression that evaluates either a string containing the name of an environment variable, or an integer corresponding to the numeric order of an environment string in the environment-string table.</source>
          
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
          <source>Returns the string associated with an operating-system environment variable.</source>
          
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
          <source>Returns the string associated with an operating-system environment variable.</source>
          
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
          <source>If <ph id="ph1">`Expression`</ph> contains a string, the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> function returns the text assigned to the specified environment string—that is, the text following the equal sign (=) in the environment-string table for that environment variable.</source>
          <target state="translated">Si <ph id="ph1">`Expression`</ph> contiene una cadena, la <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> función devuelve el texto asignado a la cadena de entorno especificada, es decir, el texto que sigue al signo igual (=) en la tabla de cadenas de entorno para esa variable de entorno.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
          <source>If the string in <ph id="ph1">`Expression`</ph> cannot be found in the environment-string table, a zero-length string ("") is returned.</source>
          <target state="translated">Si la cadena en <ph id="ph1">`Expression`</ph> no se encuentra en la tabla de cadenas de entorno, una cadena de longitud cero ("") se devuelve.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
          <source>If <ph id="ph1">`Expression`</ph> contains an integer, the string occupying that numeric position in the environment-string table is returned.</source>
          <target state="translated">Si <ph id="ph1">`Expression`</ph> contiene un entero, la cadena que se devuelve la posición numérica en la tabla de cadenas de entorno en uso.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
          <source>In this case, <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> returns all of the text, including the name of the environment variable.</source>
          <target state="translated">En este caso, <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> devuelve todo el texto, incluido el nombre de la variable de entorno.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
          <source>If there is no environment string in the specified position, <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> returns a zero-length string.</source>
          <target state="translated">Si no hay ninguna cadena de entorno en la posición especificada, <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> devuelve una cadena de longitud cero.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> function requires environment permission, which might affect its execution in partial-trust situations.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> función requiere un permiso de entorno, lo que podría afectar a su ejecución en situaciones de confianza parcial.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> and <bpt id="p1">[</bpt>Code Access Permissions<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> y <bpt id="p1">[</bpt>permisos de acceso del código<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
          <source>This example uses the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> function to supply the entry number and length of the <ph id="ph2">`PATH`</ph> statement from the environment-string table.</source>
          <target state="translated">Este ejemplo se utiliza la <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> función para proporcionar el número de entrada y la longitud de la <ph id="ph2">`PATH`</ph> instrucción desde la tabla de cadenas de entorno.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
          <source><ph id="ph1">&lt;paramref name="Expression" /&gt;</ph> is missing.</source>
          
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the name of the application or project whose key settings are requested.</source>
          
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the name of the section whose key settings are requested.</source>
          
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="GetAllSettings" /&gt;</ph> returns an object that contains a two-dimensional array of strings.</source>
          
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>The strings contain all the key settings in the specified section, plus their corresponding values.</source>
          
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>Returns a list of key settings and their respective values (originally created with <ph id="ph1">&lt;see langword="SaveSetting" /&gt;</ph>) from an application's entry in the Windows registry.</source>
          
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>Using the <ph id="ph1">&lt;see langword="My" /&gt;</ph> feature gives you greater productivity and performance in registry operations than <ph id="ph2">&lt;see langword="GetAllSettings" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>For more information, see <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>Returns a list of key settings and their respective values (originally created with <ph id="ph1">&lt;see langword="SaveSetting" /&gt;</ph>) from an application's entry in the Windows registry.</source>
          
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>Using the <ph id="ph1">&lt;see langword="My" /&gt;</ph> feature gives you greater productivity and performance in registry operations than <ph id="ph2">&lt;see langword="GetAllSettings" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>For more information, see <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source><ph id="ph1">`GetAllSettings`</ph> returns an uninitialized <ph id="ph2">`Object`</ph> if either <ph id="ph3">`AppName`</ph> or <ph id="ph4">`Section`</ph> does not exist.</source>
          <target state="translated"><ph id="ph1">`GetAllSettings`</ph> Devuelve una sin inicializar <ph id="ph2">`Object`</ph> si <ph id="ph3">`AppName`</ph> o <ph id="ph4">`Section`</ph> no existe.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>Because it operates under the <ph id="ph1">`HKEY_LOCAL_USER`</ph> registry key, which is not active until a user logs on interactively, <ph id="ph2">`GetAllSettings`</ph> requires that a user be logged on.</source>
          <target state="translated">Dado que opera en los <ph id="ph1">`HKEY_LOCAL_USER`</ph> clave del registro, que no estará activo hasta que un usuario inicia una sesión interactiva, <ph id="ph2">`GetAllSettings`</ph> requiere que un usuario se conecte.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the <ph id="ph1">`HKEY_LOCAL_MACHINE\Software\`</ph> or the <ph id="ph2">`HKEY_USER\DEFAULT\Software`</ph> registry keys.</source>
          <target state="translated">Configuración del registro que se van a tener acceso desde un proceso no interactivo (como Mtx.exe) debe almacenarse bajo la <ph id="ph1">`HKEY_LOCAL_MACHINE\Software\`</ph> o <ph id="ph2">`HKEY_USER\DEFAULT\Software`</ph> las claves del registro.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>This example first uses the <ph id="ph1">`SaveSetting`</ph> function to make entries in the Windows registry for the application specified as <ph id="ph2">`AppName`</ph>, then uses the <ph id="ph3">`GetAllSettings`</ph> function to display the settings.</source>
          <target state="translated">Este ejemplo usa primero el <ph id="ph1">`SaveSetting`</ph> función para crear entradas en el registro de Windows para la aplicación especificada como <ph id="ph2">`AppName`</ph>, a continuación, utiliza el <ph id="ph3">`GetAllSettings`</ph> función para mostrar la configuración.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>Note that application names and <ph id="ph1">`Section`</ph> names cannot be retrieved with <ph id="ph2">`GetAllSettings`</ph>.</source>
          <target state="translated">Tenga en cuenta esa aplicación nombres y <ph id="ph1">`Section`</ph> nombres no se puede recuperar con <ph id="ph2">`GetAllSettings`</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>Finally, the <ph id="ph1">`DeleteSetting`</ph> function removes the application's entries.</source>
          <target state="translated">Por último, el <ph id="ph1">`DeleteSetting`</ph> función quita las entradas de la aplicación.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>User is not logged in.</source>
          
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Optional.</source>
          
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>The full path and name of the file containing the object to retrieve.</source>
          
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>PathName<ept id="p1">&lt;/c&gt;</ept> is omitted, <bpt id="p2">&lt;c&gt;</bpt>Class<ept id="p2">&lt;/c&gt;</ept> is required.</source>
          
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Required if <bpt id="p1">&lt;c&gt;</bpt>PathName<ept id="p1">&lt;/c&gt;</ept> is not supplied.</source>
          
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>A string representing the class of the object.</source>
          
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>Class<ept id="p1">&lt;/c&gt;</ept> argument has the following syntax and parts:</source>
          
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source><bpt id="p1">&lt;c&gt;</bpt>appname<ept id="p1">&lt;/c&gt;</ept><bpt id="p2">&lt;c&gt;</bpt>.<ept id="p2">&lt;/c&gt;</ept><bpt id="p3">&lt;c&gt;</bpt>objecttype<ept id="p3">&lt;/c&gt;</ept></source>
          
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>[1|1] Parameter</source>
          
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>[1|2] Description</source>
          
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>[2|1] <bpt id="p1">&lt;c&gt;</bpt>appname<ept id="p1">&lt;/c&gt;</ept></source>
          
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>[2|2] Required.</source>
          
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>The name of the application providing the object.</source>
          
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>[3|1] <bpt id="p1">&lt;c&gt;</bpt>objecttype<ept id="p1">&lt;/c&gt;</ept></source>
          
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>[3|2] Required.</source>
          
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>The type or class of object to create.</source>
          
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Returns a reference to an object provided by a COM component.</source>
          
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Returns a reference to an object provided by a COM component.</source>
          
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Use the <ph id="ph1">`GetObject`</ph> function to load an instance of a COM component from a file.</source>
          <target state="translated">Use la <ph id="ph1">`GetObject`</ph> función para cargar una instancia de un componente COM desde un archivo.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>The following example illustrates this.</source>
          <target state="translated">Esto se ilustra en el siguiente ejemplo:</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>When this code runs, the application associated with the specified <ph id="ph1">`PathName`</ph> is started and the object in the specified file is activated.</source>
          <target state="translated">Cuando se ejecuta este código, la aplicación asociada con los valores especificados <ph id="ph1">`PathName`</ph> se inicia y se activa el objeto en el archivo especificado.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Default Cases</source>
          <target state="translated">Casos predeterminados</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>If <ph id="ph1">`PathName`</ph> is a zero-length string (<ph id="ph2">`""`</ph>), <ph id="ph3">`GetObject`</ph> returns a new object instance of the specified class type.</source>
          <target state="translated">Si <ph id="ph1">`PathName`</ph> es una cadena de longitud cero (<ph id="ph2">`""`</ph>), <ph id="ph3">`GetObject`</ph> devuelve una nueva instancia de objeto del tipo de clase especificado.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>If the <ph id="ph1">`PathName`</ph> argument is omitted, <ph id="ph2">`GetObject`</ph> returns a currently active object of the class type specified in <ph id="ph3">`Class`</ph>.</source>
          <target state="translated">Si el <ph id="ph1">`PathName`</ph> argumento se omite, <ph id="ph2">`GetObject`</ph> devuelve un objeto activo del tipo de clase especificado en <ph id="ph3">`Class`</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>If no object of the specified type exists, an error occurs.</source>
          <target state="translated">Si no existe ningún objeto del tipo especificado, se produce un error.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Accessing a Subobject</source>
          <target state="translated">Obtener acceso a un subobjeto</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Some applications allow you to activate a subobject associated with a file.</source>
          <target state="translated">Algunas aplicaciones permiten activar un subobjeto asociado a un archivo.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>To do this, add an exclamation point (<ph id="ph1">`!`</ph>) to the end of the file name and follow it with a string that identifies the part of the file you want to activate.</source>
          <target state="translated">Para ello, agregue un signo de exclamación (<ph id="ph1">`!`</ph>) al final del nombre de archivo y siga con una cadena que identifica la parte del archivo que desee activar.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>For information on how to create this string, see the documentation for the application that created the object.</source>
          <target state="translated">Para obtener información sobre cómo crear esta cadena, consulte la documentación de la aplicación que creó el objeto.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>For example, in a drawing application you might have multiple layers to a drawing stored in a file.</source>
          <target state="translated">Por ejemplo, en una aplicación de dibujo podría tener varias capas para un dibujo almacenado en un archivo.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>You could use the following code to activate a layer within a drawing called <ph id="ph1">`schema.cad`</ph>.</source>
          <target state="translated">Puede utilizar el código siguiente para activar una capa en un dibujo denominado <ph id="ph1">`schema.cad`</ph>.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Specifying a Class</source>
          <target state="translated">Especifica una clase</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>If you do not specify the object's <ph id="ph1">`Class`</ph>, Automation determines the application to start and the object to activate, based on the file name you provide.</source>
          <target state="translated">Si no especifica el objeto <ph id="ph1">`Class`</ph>, automatización determina la aplicación para iniciar y el objeto para activar, tomando como base el nombre de archivo que proporcione.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Some files, however, can support more than one class of object.</source>
          <target state="translated">Sin embargo, algunos archivos, pueden admitir más de una clase de objeto.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>For example, a drawing might support three different types of objects: an <ph id="ph1">`Application`</ph> object, a <ph id="ph2">`Drawing`</ph> object, and a <ph id="ph3">`Toolbar`</ph> object, all of which are part of the same file.</source>
          <target state="translated">Por ejemplo, un dibujo podría admitir tres tipos diferentes de objetos: un <ph id="ph1">`Application`</ph> objeto, un <ph id="ph2">`Drawing`</ph> objeto y un <ph id="ph3">`Toolbar`</ph> objeto, todos los cuales forman parte del mismo archivo.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>To specify which object in a file you want to activate, use the optional <ph id="ph1">`Class`</ph> argument.</source>
          <target state="translated">Para especificar qué objeto en un archivo que desea activar, use opcional <ph id="ph1">`Class`</ph> argumento.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>The following example illustrates this.</source>
          <target state="translated">Esto se ilustra en el siguiente ejemplo:</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>In the preceding example, <ph id="ph1">`Figment`</ph> is the name of a drawing application and <ph id="ph2">`Drawing`</ph> is one of the object types it supports.</source>
          <target state="translated">En el ejemplo anterior, <ph id="ph1">`Figment`</ph> es el nombre de una aplicación de dibujo y <ph id="ph2">`Drawing`</ph> es uno de los tipos de objeto que admite.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Using the Object</source>
          <target state="translated">Uso del objeto</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Once an object is activated, you refer to it in code using the object variable you declared.</source>
          <target state="translated">Una vez que se activa un objeto, hace referencia a él en código mediante la variable de objeto que se declaró.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>In the preceding example, you access properties and methods of the new object using the object variable <ph id="ph1">`drawObj`</ph>.</source>
          <target state="translated">En el ejemplo anterior, accederás a propiedades y métodos del nuevo objeto mediante la variable de objeto <ph id="ph1">`drawObj`</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>The following example illustrates this.</source>
          <target state="translated">Esto se ilustra en el siguiente ejemplo:</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Use the <ph id="ph1">`GetObject`</ph> function when there is a current instance of the object or if you want to create the object with a file loaded.</source>
          <target state="translated">Use la <ph id="ph1">`GetObject`</ph> funciona cuando hay una instancia del objeto actual o si desea crear el objeto con un archivo cargado.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>If there is no current instance, and you do not want the object started with a file loaded, use the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.CreateObject%2A&gt;</ph> function.</source>
          <target state="translated">Si no hay ninguna instancia actual y no desea iniciar el objeto con un archivo cargado, utilice la <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.CreateObject%2A&gt;</ph> función.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>If an object has registered itself as an ActiveX single-instance object, only one instance of the object is created, no matter how many times <ph id="ph1">`CreateObject`</ph> is called.</source>
          <target state="translated">Si un objeto ha registrado como un objeto de instancia única de ActiveX, solo una instancia del objeto se crea, con independencia de cómo muchas veces <ph id="ph1">`CreateObject`</ph> se llama.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>With a single-instance object, <ph id="ph1">`GetObject`</ph> always returns the same instance when called with the zero-length string (<ph id="ph2">`""`</ph>) syntax, and it causes an error if the <ph id="ph3">`PathName`</ph> argument is omitted.</source>
          <target state="translated">Con un objeto de instancia única, <ph id="ph1">`GetObject`</ph> siempre devuelve la misma instancia cuando se llama con la cadena de longitud cero (<ph id="ph2">`""`</ph>) sintaxis y se produce un error si el <ph id="ph3">`PathName`</ph> argumento se omite.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>You cannot use <ph id="ph1">`GetObject`</ph> to obtain a reference to a class created with Visual Basic.</source>
          <target state="translated">No se puede utilizar <ph id="ph1">`GetObject`</ph> para obtener una referencia a una clase creada con Visual Basic.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>The <ph id="ph1">`GetObject`</ph> function requires unmanaged code permission, which might affect its execution in partial-trust situations.</source>
          <target state="translated">El <ph id="ph1">`GetObject`</ph> función requiere un permiso de código no administrado, lo que podría afectar a su ejecución en situaciones de confianza parcial.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> and <bpt id="p1">[</bpt>Code Access Permissions<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> y <bpt id="p1">[</bpt>permisos de acceso del código<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>The following example uses the <ph id="ph1">`GetObject`</ph> function to obtain a reference to a specific Microsoft Excel worksheet (<ph id="ph2">`excelObj`</ph>).</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">`GetObject`</ph> función para obtener una referencia a una hoja de cálculo de Microsoft Excel específica (<ph id="ph2">`excelObj`</ph>).</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>It uses the worksheet's <ph id="ph1">`Application`</ph> property to make Excel visible, to close it, and to perform other actions.</source>
          <target state="translated">Usa la hoja de cálculo <ph id="ph1">`Application`</ph> propiedad para que Excel sea visible, para cerrarlo y realizar otras acciones.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Using two API calls, the <ph id="ph1">`detectExcel`</ph> procedure looks for Excel, and if it is running, enters it in the Running Object table.</source>
          <target state="translated">Mediante dos llamadas a API, el <ph id="ph1">`detectExcel`</ph> procedimiento busca Excel y, si se está ejecutando, se escribe en la tabla de objetos de ejecución.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>The first call to <ph id="ph1">`GetObject`</ph> causes an error if Excel is not already running, which in this example causes the <ph id="ph2">`excelWasNotRunning`</ph> flag to be set to <ph id="ph3">`True`</ph>.</source>
          <target state="translated">La primera llamada a <ph id="ph1">`GetObject`</ph> produce un error si Excel aún no se está ejecutando, que en este ejemplo hace que la <ph id="ph2">`excelWasNotRunning`</ph> marca se establecerá en <ph id="ph3">`True`</ph>.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>The second call to <ph id="ph1">`GetObject`</ph> specifies a file to open.</source>
          <target state="translated">La segunda llamada a <ph id="ph1">`GetObject`</ph> especifica un archivo para abrirlo.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>If Excel is not already running, the second call starts it and returns a reference to the worksheet represented by the specified file, <ph id="ph1">`test.xls`</ph>.</source>
          <target state="translated">Si Excel no se está ejecutando, la segunda llamada lo inicia y devuelve una referencia a la hoja de cálculo representada por el archivo especificado, <ph id="ph1">`test.xls`</ph>.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>The file must exist in the specified location; otherwise, Visual Basic throws a <ph id="ph1">&lt;xref:System.IO.FileNotFoundException&gt;</ph>.</source>
          <target state="translated">El archivo debe existir en la ubicación especificada; de lo contrario, Visual Basic produce una <ph id="ph1">&lt;xref:System.IO.FileNotFoundException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Next, the example code makes both Excel and the window containing the specified worksheet visible.</source>
          <target state="translated">A continuación, el código de ejemplo hace que Excel y la ventana que contiene la hoja de cálculo especificada.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>This example requires <ph id="ph1">`Option Strict Off`</ph> because it uses late binding, where objects are assigned to variables of type <ph id="ph2">`Object`</ph>.</source>
          <target state="translated">Este ejemplo se necesita <ph id="ph1">`Option Strict Off`</ph> porque utiliza enlace más tarde, donde los objetos se asignan a variables de tipo <ph id="ph2">`Object`</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>You can specify <ph id="ph1">`Option Strict On`</ph> and declare objects of specific object types if you add a reference to the Excel type library from the <bpt id="p1">**</bpt>COM<ept id="p1">**</ept> tab of the <bpt id="p2">**</bpt>Add Reference<ept id="p2">**</ept> dialog box of the <bpt id="p3">**</bpt>Project<ept id="p3">**</ept> menu in Visual Studio.</source>
          <target state="translated">Puede especificar <ph id="ph1">`Option Strict On`</ph> y declarar objetos de tipos de objeto específicos si agrega una referencia a la biblioteca de tipos de Excel desde el <bpt id="p1">**</bpt>COM<ept id="p1">**</ept> pestaña de la <bpt id="p2">**</bpt>Agregar referencia<ept id="p2">**</ept> cuadro de diálogo de la <bpt id="p3">**</bpt> Proyecto<ept id="p3">**</ept> menú en Visual Studio.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>When you call the <ph id="ph1">`getExcel`</ph> function, a check is made to see if Excel is already running.</source>
          <target state="translated">Cuando se llama a la <ph id="ph1">`getExcel`</ph> función, se realiza una comprobación para ver si Excel ya se está ejecutando.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>If it is not, then an instance is created.</source>
          <target state="translated">Si no es así, se crea una instancia.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>For simplicity, the preceding example assumes that any window called <ph id="ph1">`XLMAIN`</ph> belongs to an instance of Microsoft Excel.</source>
          <target state="translated">Para simplificar, en el ejemplo anterior se supone que cualquier ventana denominada <ph id="ph1">`XLMAIN`</ph> pertenece a una instancia de Microsoft Excel.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>If another object, possibly launched by illicit tampering, created a window with that name, it would receive all the messages you intended for Excel.</source>
          <target state="translated">Si otro objeto, posiblemente iniciado por manipulación ilícita, crea una ventana con ese nombre, recibiría todos los mensajes destinados a Excel.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>In an application to be used for production, you should include some more rigorous testing to verify that <ph id="ph1">`XLMAIN`</ph> really belongs to Excel.</source>
          <target state="translated">En una aplicación que se usará para producción, debería incluir algunas pruebas más rigurosas para comprobar que <ph id="ph1">`XLMAIN`</ph> realmente pertenece a Excel.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>No object of the specified class type exists.</source>
          
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>No object with the specified path and file name exists.</source>
          
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the name of the application or project whose key setting is requested.</source>
          
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the name of the section in which the key setting is found.</source>
          
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the name of the key setting to return.</source>
          
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>Optional.</source>
          
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>Expression containing the value to return if no value is set in the <bpt id="p1">&lt;c&gt;</bpt>Key<ept id="p1">&lt;/c&gt;</ept> setting.</source>
          
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>If omitted, <bpt id="p1">&lt;c&gt;</bpt>Default<ept id="p1">&lt;/c&gt;</ept> is assumed to be a zero-length string ("").</source>
          
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>Returns a key setting value from an application's entry in the Windows registry.</source>
          
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;see langword="My" /&gt;</ph> feature gives you greater productivity and performance in registry operations than <ph id="ph2">&lt;see langword="GetAllSettings" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>For more information, see <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>Returns a key setting value from an application's entry in the Windows registry.</source>
          
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;see langword="My" /&gt;</ph> feature gives you greater productivity and performance in registry operations than <ph id="ph2">&lt;see langword="GetAllSettings" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>If any of the items named in the <ph id="ph1">`GetSetting`</ph> arguments do not exist, <ph id="ph2">`GetSetting`</ph> returns a value of <ph id="ph3">`Default`</ph>.</source>
          <target state="translated">Si cualquiera de los elementos con nombre en el <ph id="ph1">`GetSetting`</ph> argumentos no existen, <ph id="ph2">`GetSetting`</ph> devuelve un valor de <ph id="ph3">`Default`</ph>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>Because it operates under the <ph id="ph1">`HKEY_LOCAL_USER`</ph> registry key, which is not active until a user logs on interactively, <ph id="ph2">`GetSetting`</ph> requires that a user be logged on.</source>
          <target state="translated">Dado que opera en los <ph id="ph1">`HKEY_LOCAL_USER`</ph> clave del registro, que no estará activo hasta que un usuario inicia una sesión interactiva, <ph id="ph2">`GetSetting`</ph> requiere que un usuario se conecte.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the <ph id="ph1">`HKEY_LOCAL_MACHINE\Software\`</ph> or the <ph id="ph2">`HKEY_USER\DEFAULT\Software`</ph> registry keys.</source>
          <target state="translated">Configuración del registro que se van a tener acceso desde un proceso no interactivo (como Mtx.exe) debe almacenarse bajo la <ph id="ph1">`HKEY_LOCAL_MACHINE\Software\`</ph> o <ph id="ph2">`HKEY_USER\DEFAULT\Software`</ph> las claves del registro.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source><ph id="ph1">`GetSetting`</ph> requires <ph id="ph2">`Read`</ph><ph id="ph3">&lt;xref:System.Security.Permissions.RegistryPermission&gt;</ph> .</source>
          <target state="translated"><ph id="ph1">`GetSetting`</ph> requiere <ph id="ph2">`Read`</ph> <ph id="ph3">&lt;xref:System.Security.Permissions.RegistryPermission&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>This example first uses the <ph id="ph1">`SaveSetting`</ph> function to make entries in the Windows registry for the application specified as <ph id="ph2">`AppName`</ph>, and then uses the <ph id="ph3">`GetSetting`</ph> function to display one of the settings.</source>
          <target state="translated">Este ejemplo usa primero el <ph id="ph1">`SaveSetting`</ph> función para crear entradas en el registro de Windows para la aplicación especificada como <ph id="ph2">`AppName`</ph>y, a continuación, usa el <ph id="ph3">`GetSetting`</ph> función para mostrar una de las opciones.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>Because the <ph id="ph1">`Default`</ph> argument is specified, some value is guaranteed to be returned.</source>
          <target state="translated">Dado que el <ph id="ph1">`Default`</ph> se especifica el argumento, se garantiza que se devuelve algún valor.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>Notice that <ph id="ph1">`Section`</ph> names cannot be retrieved with <ph id="ph2">`GetSetting`</ph>.</source>
          <target state="translated">Tenga en cuenta que <ph id="ph1">`Section`</ph> nombres no se puede recuperar con <ph id="ph2">`GetSetting`</ph>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>Finally, the <ph id="ph1">`DeleteSetting`</ph> function removes all the application's entries.</source>
          <target state="translated">Por último, el <ph id="ph1">`DeleteSetting`</ph> función quita todas las entradas de la aplicación.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>One or more arguments are not <ph id="ph1">&lt;see langword="String" /&gt;</ph> expressions, or user is not logged in.</source>
          
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source>The expression you want to evaluate.</source>
          
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source>Returned if <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source>Returned if <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source>Returns one of two objects, depending on the evaluation of an expression.</source>
          
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source>Returns one of two objects, depending on the evaluation of an expression.</source>
          
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source>The <ph id="ph1">`IIf`</ph> function provides a counterpart for the ternary <bpt id="p1">[</bpt>Conditional Operator: ? :<ept id="p1">](http://msdn.microsoft.com/library/88643ee8-7100-4f86-880a-705ec22b6271)</ept> in Visual C++.</source>
          <target state="translated">El <ph id="ph1">`IIf`</ph> función proporciona un equivalente para la ternario <bpt id="p1">[</bpt>operador condicional:?:<ept id="p1">](http://msdn.microsoft.com/library/88643ee8-7100-4f86-880a-705ec22b6271)</ept> en Visual C++.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source>This example uses the <ph id="ph1">`IIf`</ph> function to evaluate the <ph id="ph2">`testMe`</ph> parameter of the <ph id="ph3">`checkIt`</ph> procedure and returns the word "Large" if the amount is greater than 1000; otherwise, it returns the word "Small".</source>
          <target state="translated">Este ejemplo se utiliza la <ph id="ph1">`IIf`</ph> función que se evalúa la <ph id="ph2">`testMe`</ph> parámetro de la <ph id="ph3">`checkIt`</ph> y devuelve el if "Grande" word la cantidad es mayor que 1000; en caso contrario, devuelve la palabra "Pequeño".</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source>Note that if <ph id="ph1">`Option Strict`</ph> is <ph id="ph2">`On`</ph>, you must use the <ph id="ph3">`CStr`</ph> keyword to explicitly convert the return from <ph id="ph4">`Object`</ph> to <ph id="ph5">`String`</ph>.</source>
          <target state="translated">Tenga en cuenta que si <ph id="ph1">`Option Strict`</ph> es <ph id="ph2">`On`</ph>, debe utilizar el <ph id="ph3">`CStr`</ph> palabra clave se debe convertir explícitamente el valor devuelto de <ph id="ph4">`Object`</ph> a <ph id="ph5">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>Required <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression displayed as the message in the dialog box.</source>
          
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>The maximum length of <bpt id="p1">&lt;c&gt;</bpt>Prompt<ept id="p1">&lt;/c&gt;</ept> is approximately 1024 characters, depending on the width of the characters used.</source>
          
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Prompt<ept id="p1">&lt;/c&gt;</ept> consists of more than one line, you can separate the lines using a carriage return character (<ph id="ph1">&lt;see langword="Chr(" /&gt;</ph>13<ph id="ph2">&lt;see langword=")" /&gt;</ph>), a line feed character (<ph id="ph3">&lt;see langword="Chr(" /&gt;</ph>10<ph id="ph4">&lt;see langword=")" /&gt;</ph>), or a carriage return/line feed combination (<ph id="ph5">&lt;see langword="Chr(" /&gt;</ph>13<ph id="ph6">&lt;see langword=")" /&gt;</ph> <ph id="ph7">&amp;amp;</ph> <ph id="ph8">&lt;see langword="Chr(" /&gt;</ph>10<ph id="ph9">&lt;see langword=")" /&gt;</ph>) between each line.</source>
          
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>Optional.</source>
          
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression displayed in the title bar of the dialog box.</source>
          
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>If you omit <bpt id="p1">&lt;c&gt;</bpt>Title<ept id="p1">&lt;/c&gt;</ept>, the application name is placed in the title bar.</source>
          
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>Optional.</source>
          
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression displayed in the text box as the default response if no other input is provided.</source>
          
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>If you omit <bpt id="p1">&lt;c&gt;</bpt>DefaultResponse<ept id="p1">&lt;/c&gt;</ept>, the displayed text box is empty.</source>
          
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>Optional.</source>
          
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>Numeric expression that specifies, in twips, the distance of the left edge of the dialog box from the left edge of the screen.</source>
          
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>If you omit <bpt id="p1">&lt;c&gt;</bpt>XPos<ept id="p1">&lt;/c&gt;</ept>, the dialog box is centered horizontally.</source>
          
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>Optional.</source>
          
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>Numeric expression that specifies, in twips, the distance of the upper edge of the dialog box from the top of the screen.</source>
          
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>If you omit <bpt id="p1">&lt;c&gt;</bpt>YPos<ept id="p1">&lt;/c&gt;</ept>, the dialog box is positioned vertically approximately one-third of the way down the screen.</source>
          
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>Displays a prompt in a dialog box, waits for the user to input text or click a button, and then returns a string containing the contents of the text box.</source>
          
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>Displays a prompt in a dialog box, waits for the user to input text or click a button, and then returns a string containing the contents of the text box.</source>
          
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>If the user clicks <bpt id="p1">**</bpt>Cancel<ept id="p1">**</ept>, a zero-length string is returned.</source>
          <target state="translated">Si el usuario hace clic en <bpt id="p1">**</bpt>cancelar<ept id="p1">**</ept>, se devuelve una cadena de longitud cero.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>To specify more than the first argument, you must use the <ph id="ph1">`InputBox`</ph> function in an expression.</source>
          <target state="translated">Para especificar más argumentos que el primer argumento, debe utilizar el <ph id="ph1">`InputBox`</ph> función en una expresión.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>If you omit any positional arguments, you must retain the corresponding comma delimiter.</source>
          <target state="translated">Si omite los argumentos posicionales, debe conservar el delimitador de coma correspondiente.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>The <ph id="ph1">`InputBox`</ph> function requires <ph id="ph2">`UIPermission`</ph> at the <ph id="ph3">&lt;xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows&gt;</ph> level, which may affect its execution in partial-trust situations.</source>
          <target state="translated">El <ph id="ph1">`InputBox`</ph> función requiere <ph id="ph2">`UIPermission`</ph> en el <ph id="ph3">&lt;xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows&gt;</ph> nivel, lo que puede afectar a su ejecución en situaciones de confianza parcial.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>For more information, see  and <ph id="ph1">&lt;xref:System.Security.Permissions.UIPermission&gt;</ph> .</source>
          <target state="translated">Para obtener más información, vea y <ph id="ph1">&lt;xref:System.Security.Permissions.UIPermission&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>This example shows various ways to use the <ph id="ph1">`InputBox`</ph> function to prompt the user to enter a value.</source>
          <target state="translated">En este ejemplo se muestra varias maneras de utilizar el <ph id="ph1">`InputBox`</ph> función para pedir al usuario que escriba un valor.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>If the x and y positions are omitted, the dialog box is automatically centered for the respective axes.</source>
          <target state="translated">Si x e y se omiten las posiciones, se centra automáticamente el cuadro de diálogo para los respectivos ejes.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>The variable <ph id="ph1">`MyValue`</ph> contains the value entered by the user if the user clicks OK or presses the ENTER key.</source>
          <target state="translated">La variable <ph id="ph1">`MyValue`</ph> contiene el valor especificado por el usuario si el usuario hace clic en Aceptar o presiona la tecla ENTRAR.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression displayed as the message in the dialog box.</source>
          
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>The maximum length of <bpt id="p1">&lt;c&gt;</bpt>Prompt<ept id="p1">&lt;/c&gt;</ept> is approximately 1024 characters, depending on the width of the characters used.</source>
          
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Prompt<ept id="p1">&lt;/c&gt;</ept> consists of more than one line, you can separate the lines using a carriage return character (<ph id="ph1">&lt;see langword="Chr(" /&gt;</ph>13<ph id="ph2">&lt;see langword=")" /&gt;</ph>), a line feed character (<ph id="ph3">&lt;see langword="Chr(" /&gt;</ph>10<ph id="ph4">&lt;see langword=")" /&gt;</ph>), or a carriage return/linefeed character combination (<ph id="ph5">&lt;see langword="Chr(" /&gt;</ph>13<ph id="ph6">&lt;see langword=")" /&gt;</ph> <ph id="ph7">&amp;amp;</ph> <ph id="ph8">&lt;see langword="Chr(" /&gt;</ph>10<ph id="ph9">&lt;see langword=")" /&gt;</ph>) between each line.</source>
          
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Optional.</source>
          
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Numeric expression that is the sum of values specifying the number and type of buttons to display, the icon style to use, the identity of the default button, and the modality of the message box.</source>
          
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>If you omit <bpt id="p1">&lt;c&gt;</bpt>Buttons<ept id="p1">&lt;/c&gt;</ept>, the default value is zero.</source>
          
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Optional.</source>
          
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression displayed in the title bar of the dialog box.</source>
          
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>If you omit <bpt id="p1">&lt;c&gt;</bpt>Title<ept id="p1">&lt;/c&gt;</ept>, the application name is placed in the title bar.</source>
          
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Displays a message in a dialog box, waits for the user to click a button, and then returns an integer indicating which button the user clicked.</source>
          
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Constant</source>
          <target state="translated">Constante</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>5</source>
          <target state="translated">5</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>6</source>
          <target state="translated">6</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>7</source>
          <target state="translated">7</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>If you omit any positional arguments, you must retain the corresponding comma delimiter.</source>
          <target state="translated">Si omite los argumentos posicionales, debe conservar el delimitador de coma correspondiente.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>If the dialog box displays a <bpt id="p1">**</bpt>Cancel<ept id="p1">**</ept> button, pressing the ESC key has the same effect as clicking <bpt id="p2">**</bpt>Cancel<ept id="p2">**</ept></source>
          <target state="translated">Si el cuadro de diálogo muestra una <bpt id="p1">**</bpt>cancelar<ept id="p1">**</ept> botón, al presionar la tecla ESC tiene el mismo efecto que hacer clic en <bpt id="p2">**</bpt>Cancelar<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>If the dialog box contains a <bpt id="p1">**</bpt>Help<ept id="p1">**</ept> button, context-sensitive Help is provided for the dialog box.</source>
          <target state="translated">Si el cuadro de diálogo contiene un <bpt id="p1">**</bpt>ayuda<ept id="p1">**</ept> botón, se proporciona ayuda contextual para el cuadro de diálogo.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>However, no value is returned until one of the other buttons is chosen.</source>
          <target state="translated">Sin embargo, se devuelve ningún valor hasta que se elige uno de los otros botones.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>In Windows Form applications, choosing the <bpt id="p1">**</bpt>Help<ept id="p1">**</ept> button executes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph> event for the form.</source>
          <target state="translated">En las aplicaciones de Windows Forms, elegir el <bpt id="p1">**</bpt>ayuda<ept id="p1">**</ept> botón ejecuta el <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph> eventos para el formulario.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>The <ph id="ph1">`MsgBox`</ph> function requires <ph id="ph2">`UIPermission`</ph> at the <ph id="ph3">&lt;xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows&gt;</ph> level, which may affect its execution in partial-trust situations.</source>
          <target state="translated">El <ph id="ph1">`MsgBox`</ph> función requiere <ph id="ph2">`UIPermission`</ph> en el <ph id="ph3">&lt;xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows&gt;</ph> nivel, lo que puede afectar a su ejecución en situaciones de confianza parcial.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Security.Permissions.UIPermission&gt;</ph>.</source>
          <target state="translated">Para obtener más información, consulta <ph id="ph1">&lt;xref:System.Security.Permissions.UIPermission&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>The <ph id="ph1">`MsgBoxStyle`</ph> enumeration values are listed in the following table.</source>
          <target state="translated">El <ph id="ph1">`MsgBoxStyle`</ph> valores de enumeración se enumeran en la tabla siguiente.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Member</source>
          <target state="translated">Miembro</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Description</source>
          <target state="translated">Descripción</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Member</source>
          <target state="translated">Miembro</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Description</source>
          <target state="translated">Descripción</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Displays OK button only.</source>
          <target state="translated">Muestra el botón Aceptar sólo.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Displays OK and Cancel buttons.</source>
          <target state="translated">Muestra Aceptar y cancelar botones.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Displays Abort, Retry, and Ignore buttons.</source>
          <target state="translated">Muestra los botones Anular, Reintentar y omitir.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Displays Yes, No, and Cancel buttons.</source>
          <target state="translated">Muestra Yes, No y cancelar botones.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Displays Yes and No buttons.</source>
          <target state="translated">No muestra los botones Sí y.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>5</source>
          <target state="translated">5</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Displays Retry and Cancel buttons.</source>
          <target state="translated">Muestra los botones Reintentar y Cancelar.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>16</source>
          <target state="translated">16</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Displays Critical Message icon.</source>
          <target state="translated">Muestra el icono de mensaje crítico.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>32</source>
          <target state="translated">32</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Displays Warning Query icon.</source>
          <target state="translated">Muestra el icono consulta de advertencia.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>48</source>
          <target state="translated">48</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Displays Warning Message icon.</source>
          <target state="translated">Muestra el icono de mensaje de advertencia.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>64</source>
          <target state="translated">64</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Displays Information Message icon.</source>
          <target state="translated">Muestra el icono de mensaje de información.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>First button is default.</source>
          <target state="translated">El primer botón es el predeterminado.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>256</source>
          <target state="translated">256</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Second button is default.</source>
          <target state="translated">El segundo botón es el predeterminado.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>512</source>
          <target state="translated">512</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Third button is default.</source>
          <target state="translated">El tercer botón es el predeterminado.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Application is modal.</source>
          <target state="translated">La aplicación es modal.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>The user must respond to the message box before continuing work in the current application.</source>
          <target state="translated">El usuario debe responder al cuadro de mensajes antes de continuar trabajando en la aplicación actual.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>4096</source>
          <target state="translated">4096</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>System is modal.</source>
          <target state="translated">El sistema es modal.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>All applications are suspended until the user responds to the message box.</source>
          <target state="translated">Todas las aplicaciones se suspenden hasta que el usuario responde al cuadro de mensajes.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>65536</source>
          <target state="translated">65536</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Specifies the message box window as the foreground window.</source>
          <target state="translated">Especifica la ventana de cuadro de mensaje como la ventana a primer plano.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>524288</source>
          <target state="translated">524288</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Text is right-aligned.</source>
          <target state="translated">Texto está alineado a la derecha.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>1048576</source>
          <target state="translated">1048576</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Specifies text should appear as right-to-left reading on Hebrew and Arabic systems.</source>
          <target state="translated">Especifica el texto debe aparecer como derecha a izquierda leer en los sistemas hebreo y árabe.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>The first group of values (0–5) describes the number and type of buttons displayed in the dialog box.</source>
          <target state="translated">El primer grupo de valores (de 0 a 5) describe el número y tipo de botones que se muestran en el cuadro de diálogo.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>The second group (16, 32, 48, 64) describes the icon style.</source>
          <target state="translated">El segundo grupo (16, 32, 48, 64) describe el estilo de icono.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>The third group (0, 256, 512) determines which button is the default.</source>
          <target state="translated">El tercer grupo (0, 256, 512) determina qué botón es el valor predeterminado.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>The fourth group (0, 4096) determines the modality of the message box, and the fifth group specifies whether or not the message box window is the foreground window, along with the alignment and direction of the text.</source>
          <target state="translated">El cuarto grupo (0, 4096) determina la modalidad del cuadro de mensaje y el quinto grupo especifica si la ventana de cuadro de mensaje es la ventana a primer plano, junto con la alineación y la dirección del texto.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>When adding numbers to create a final value for the <ph id="ph1">`Buttons`</ph> argument, use only one number from each group.</source>
          <target state="translated">Al agregar números para crear un valor final para el <ph id="ph1">`Buttons`</ph> argumento, use solo un número de cada grupo.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>This example uses the <ph id="ph1">`MsgBox`</ph> function to display a critical-error message in a dialog box with Yes and No buttons.</source>
          <target state="translated">Este ejemplo se utiliza la <ph id="ph1">`MsgBox`</ph> función para mostrar un mensaje de error crítico en un cuadro de diálogo con botones Sí y No.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>The No button is specified as the default response.</source>
          <target state="translated">El botón No se especifica como la respuesta predeterminada.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>This is done by combining the <ph id="ph1">`MsgBox`</ph> constant values into one numeric expression.</source>
          <target state="translated">Esto se realiza mediante la combinación del <ph id="ph1">`MsgBox`</ph> valores constantes en una expresión numérica.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>In this case, adding 4 (the Yes/No button combination) and 16 (the <bpt id="p1">**</bpt>Critical Message<ept id="p1">**</ept> window) and 256 (the second button as default button) gives a total of 276.</source>
          <target state="translated">En este caso, si se agrega 4 (la combinación de botones Sí/No) y 16 (la <bpt id="p1">**</bpt>mensaje crítico<ept id="p1">**</ept> ventana) y 256 (el segundo botón como botón predeterminado) da un total de 276.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>The value returned by the <ph id="ph1">`MsgBox`</ph> function depends on the button chosen by the user: Yes returns a value of 6; No returns a value of 7.</source>
          <target state="translated">El valor devuelto por la <ph id="ph1">`MsgBox`</ph> función depende del botón elegido por el usuario: Sí devuelve un valor de 6; No devuelve un valor de 7.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source><ph id="ph1">&lt;paramref name="Prompt" /&gt;</ph> is not a <ph id="ph2">&lt;see langword="String" /&gt;</ph> expression, or <ph id="ph3">&lt;paramref name="Title" /&gt;</ph> is invalid.</source>
          
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Process is not running in User Interactive mode.</source>
          
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>One or more parameters not a member of <ph id="ph1">&lt;see langword="MsgBoxResult" /&gt;</ph> or <ph id="ph2">&lt;see langword="MsgBoxStyle" /&gt;</ph> enumeration.</source>
          
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;see langword="Long" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>Whole number that you want to locate within one of the calculated ranges.</source>
          
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;see langword="Long" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>Whole number that indicates the start of the set of calculated ranges.</source>
          
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source><bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept> cannot be less than 0.</source>
          
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;see langword="Long" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>Whole number that indicates the end of the set of calculated ranges.</source>
          
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source><bpt id="p1">&lt;c&gt;</bpt>Stop<ept id="p1">&lt;/c&gt;</ept> cannot be less than or equal to <bpt id="p2">&lt;c&gt;</bpt>Start<ept id="p2">&lt;/c&gt;</ept>.</source>
          
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;see langword="Long" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>Whole number that indicates the size of each range calculated between <bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>Stop<ept id="p2">&lt;/c&gt;</ept>.</source>
          
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source><bpt id="p1">&lt;c&gt;</bpt>Interval<ept id="p1">&lt;/c&gt;</ept> cannot be less than 1.</source>
          
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>Returns a string representing the calculated range that contains a number.</source>
          
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>Returns a string representing the calculated range that contains a number.</source>
          
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>The <ph id="ph1">`Partition`</ph> function calculates a set of numeric ranges, each containing the number of values specified by <ph id="ph2">`Interval`</ph>.</source>
          <target state="translated">El <ph id="ph1">`Partition`</ph> función calcula un conjunto de intervalos numéricos, cada uno con el número de valores especificados por <ph id="ph2">`Interval`</ph>.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>The first range begins at <ph id="ph1">`Start`</ph>, and the last range ends at <ph id="ph2">`Stop`</ph>.</source>
          <target state="translated">El primer intervalo comienza en <ph id="ph1">`Start`</ph>, y el último intervalo finaliza en <ph id="ph2">`Stop`</ph>.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>The <ph id="ph1">`Partition`</ph> function then identifies which range contains <ph id="ph2">`Number`</ph> and returns a string describing that range.</source>
          <target state="translated">El <ph id="ph1">`Partition`</ph> , a continuación, la función identifica qué intervalo contiene <ph id="ph2">`Number`</ph> y devuelve una cadena que describe ese intervalo.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>The range is represented in the string as "<bpt id="p1">*</bpt>lowervalue<ept id="p1">*</ept>:<bpt id="p2">*</bpt>uppervalue<ept id="p2">*</ept>", where the low end of the range (<bpt id="p3">*</bpt>lowervalue<ept id="p3">*</ept>) is separated from the high end (<bpt id="p4">*</bpt>uppervalue<ept id="p4">*</ept>) by a colon (:).</source>
          <target state="translated">El rango se representa en la cadena como "<bpt id="p1">*</bpt>lowervalue<ept id="p1">*</ept>:<bpt id="p2">*</bpt>uppervalue<ept id="p2">*</ept>", donde el extremo inferior del intervalo (<bpt id="p3">*</bpt>lowervalue<ept id="p3">*</ept>) está separado del final superior (<bpt id="p4">*</bpt>uppervalue<ept id="p4">*</ept>) por dos puntos (:).</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>If necessary, the <ph id="ph1">`Partition`</ph> function inserts leading spaces before <bpt id="p1">*</bpt>lowervalue<ept id="p1">*</ept> and <bpt id="p2">*</bpt>uppervalue<ept id="p2">*</ept> so that they both have the same number of characters as the string representation of the value (<ph id="ph2">`Stop`</ph> + 1).</source>
          <target state="translated">Si es necesario, el <ph id="ph1">`Partition`</ph> función inserta espacios iniciales antes de <bpt id="p1">*</bpt>lowervalue<ept id="p1">*</ept> y <bpt id="p2">*</bpt>uppervalue<ept id="p2">*</ept> para que tengan el mismo número de caracteres que la representación de cadena del valor (<ph id="ph2">`Stop`</ph> + 1).</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>This ensures that if you use the output of the <ph id="ph1">`Partition`</ph> function with several values of <ph id="ph2">`Number`</ph>, the resulting text will be handled properly during any subsequent sort operation.</source>
          <target state="translated">Esto garantiza que si se utiliza el resultado de la <ph id="ph1">`Partition`</ph> función con varios valores de <ph id="ph2">`Number`</ph>, el texto resultante se manipulará correctamente durante cualquier operación de ordenación posterior.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>The following table shows some sample strings for ranges calculated using three sets of <ph id="ph1">`Start`</ph>, <ph id="ph2">`Stop`</ph>, and <ph id="ph3">`Interval`</ph>.</source>
          <target state="translated">En la tabla siguiente se muestra algunas cadenas de ejemplo para intervalos calculados mediante tres conjuntos de <ph id="ph1">`Start`</ph>, <ph id="ph2">`Stop`</ph>, y <ph id="ph3">`Interval`</ph>.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>The "First range" and "Last range" columns show the lowest and highest ranges possible given the values of <ph id="ph1">`Start`</ph> and <ph id="ph2">`Stop`</ph>.</source>
          <target state="translated">El "columnas primer intervalo" y "Último intervalo" muestran los intervalos altos y más bajos posibles dados los valores de <ph id="ph1">`Start`</ph> y <ph id="ph2">`Stop`</ph>.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>The "Before first range" and "After last range" columns show the strings returned for values of <ph id="ph1">`Number`</ph> less than <ph id="ph2">`Start`</ph> and greater than <ph id="ph3">`Stop`</ph>, respectively.</source>
          <target state="translated">Las columnas "antes del primer intervalo" y "después del último intervalo" muestran las cadenas devueltas para los valores de <ph id="ph1">`Number`</ph> inferior a <ph id="ph2">`Start`</ph> y mayor que <ph id="ph3">`Stop`</ph>, respectivamente.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>Before first range</source>
          <target state="translated">Antes del primer intervalo</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>First range</source>
          <target state="translated">Primer intervalo</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>Last range</source>
          <target state="translated">Último intervalo</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>After last range</source>
          <target state="translated">Después del último intervalo</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>99</source>
          <target state="translated">99</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>5</source>
          <target state="translated">5</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>"   : -1"</source>
          <target state="translated">"   : -1"</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>"  0:  4"</source>
          <target state="translated">"  0:  4"</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>" 95: 99"</source>
          <target state="translated">" 95: 99"</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>"100:   "</source>
          <target state="translated">"100:   "</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>20</source>
          <target state="translated">20</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>199</source>
          <target state="translated">199</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>10</source>
          <target state="translated">10</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>"   : 19"</source>
          <target state="translated">"   : 19"</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>" 20: 29"</source>
          <target state="translated">" 20: 29"</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>"190:199"</source>
          <target state="translated">"190:199"</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>"200:   "</source>
          <target state="translated">"200:   "</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>100</source>
          <target state="translated">100</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>1010</source>
          <target state="translated">1010</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>20</source>
          <target state="translated">20</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>"    : 99"</source>
          <target state="translated">"    : 99"</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>" 100: 119"</source>
          <target state="translated">" 100: 119"</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>"1000:1010"</source>
          <target state="translated">"1000:1010"</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>"1011:    "</source>
          <target state="translated">"1011:    "</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>In the preceding table, the third line shows the result when <ph id="ph1">`Start`</ph> and <ph id="ph2">`Stop`</ph> define a set of numbers that cannot be evenly divided by <ph id="ph3">`Interval`</ph>.</source>
          <target state="translated">En la tabla anterior, la tercera línea muestra el resultado cuando <ph id="ph1">`Start`</ph> y <ph id="ph2">`Stop`</ph> definir un conjunto de números que no se dividen de forma uniforme mediante <ph id="ph3">`Interval`</ph>.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>The last range ends at <ph id="ph1">`Stop`</ph>, making it only 11 numbers long, even though <ph id="ph2">`Interval`</ph> is 20.</source>
          <target state="translated">El último intervalo finaliza en <ph id="ph1">`Stop`</ph>, lo que sólo 11 números, aunque <ph id="ph2">`Interval`</ph> es 20.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>If <ph id="ph1">`Interval`</ph> is 1, the range is "<ph id="ph2">`Number`</ph>:<ph id="ph3">`Number`</ph>", regardless of the <ph id="ph4">`Start`</ph> and <ph id="ph5">`Stop`</ph> arguments.</source>
          <target state="translated">Si <ph id="ph1">`Interval`</ph> es 1, el intervalo es "<ph id="ph2">`Number`</ph>:<ph id="ph3">`Number`</ph>", independientemente de la <ph id="ph4">`Start`</ph> y <ph id="ph5">`Stop`</ph> argumentos.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>For example, if <ph id="ph1">`Number`</ph> is 267, <ph id="ph2">`Stop`</ph> is 1000, and <ph id="ph3">`Interval`</ph> is 1, <ph id="ph4">`Partition`</ph> returns " 267: 267".</source>
          <target state="translated">Por ejemplo, si <ph id="ph1">`Number`</ph> es 267, <ph id="ph2">`Stop`</ph> es 1000, y <ph id="ph3">`Interval`</ph> es 1, <ph id="ph4">`Partition`</ph> devuelve "267: 267".</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source><ph id="ph1">`Partition`</ph> can be useful when constructing database queries.</source>
          <target state="translated"><ph id="ph1">`Partition`</ph> puede ser útil al construir consultas de base de datos.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>You can create a SELECT query that shows how many orders occur within various value ranges, for example with invoice values from 1 to 1000, 1001 to 2000, and so on.</source>
          <target state="translated">Puede crear una consulta SELECT que muestra cuántos pedidos producen en distintos intervalos de valores, por ejemplo con valores de facturas de 1 a 1000, 1001 a 2000 y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>The following example sets up a series of ranges for decades from 1950 through 2049.</source>
          <target state="translated">En el ejemplo siguiente se configura una serie de intervalos para décadas de 1950 a 2049.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>It locates the value of <ph id="ph1">`year`</ph> within the appropriate range and returns a <ph id="ph2">`String`</ph> value showing the range.</source>
          <target state="translated">Busca el valor de <ph id="ph1">`year`</ph> dentro del intervalo apropiado y devuelve un <ph id="ph2">`String`</ph> que muestra el intervalo de valor.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>If <ph id="ph1">`year`</ph> has a value of 1984, for example, <ph id="ph2">`Partition`</ph> returns "1980:1989".</source>
          <target state="translated">Si <ph id="ph1">`year`</ph> tiene un valor de 1984, por ejemplo, <ph id="ph2">`Partition`</ph> devuelve "1980: 1989".</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="Start" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0, <ph id="ph3">&lt;paramref name="Stop" /&gt;</ph> <ph id="ph4">&amp;lt;</ph><ph id="ph5">= </ph><ph id="ph6">&lt;paramref name="Start" /&gt;</ph>, or <ph id="ph7">&lt;paramref name="Interval" /&gt;</ph> <ph id="ph8">&amp;lt;</ph> 1.</source>
          
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the name of the application or project to which the setting applies.</source>
          
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the name of the section in which the key setting is being saved.</source>
          
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the name of the key setting being saved.</source>
          
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source>Expression containing the value to which <bpt id="p1">&lt;c&gt;</bpt>Key<ept id="p1">&lt;/c&gt;</ept> is being set.</source>
          
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source>Saves or creates an application entry in the Windows registry.</source>
          
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;see langword="My" /&gt;</ph> feature gives you greater productivity and performance in registry operations than <ph id="ph2">&lt;see langword="SaveSetting" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source>For more information, see <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source>The <ph id="ph1">`SaveSetting`</ph> function adds the key to <ph id="ph2">`HKEY_CURRENT_USER\Software\VB and VBA Program Settings`</ph>.</source>
          <target state="translated">El <ph id="ph1">`SaveSetting`</ph> función agrega la clave a <ph id="ph2">`HKEY_CURRENT_USER\Software\VB and VBA Program Settings`</ph>.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source>If the key setting cannot be saved for any reason, an error occurs.</source>
          <target state="translated">Si no se puede guardar la configuración de la clave por cualquier motivo, se produce un error.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source><ph id="ph1">`SaveSetting`</ph> requires that a user be logged on since it operates under the <ph id="ph2">`HKEY_LOCAL_USER`</ph> registry key, which is not active until a user logs on interactively.</source>
          <target state="translated"><ph id="ph1">`SaveSetting`</ph> requiere que un usuario se conecte ya que funciona bajo la <ph id="ph2">`HKEY_LOCAL_USER`</ph> clave del registro, que no estará activo hasta que un usuario inicia una sesión interactiva.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source>Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the <ph id="ph1">`HKEY_LOCAL_MACHINE\Software\`</ph> or the <ph id="ph2">`HKEY_USER\DEFAULT\Software`</ph> registry keys.</source>
          <target state="translated">Configuración del registro que se van a tener acceso desde un proceso no interactivo (como Mtx.exe) debe almacenarse bajo la <ph id="ph1">`HKEY_LOCAL_MACHINE\Software\`</ph> o <ph id="ph2">`HKEY_USER\DEFAULT\Software`</ph> las claves del registro.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source><ph id="ph1">`SaveSetting`</ph> requires <ph id="ph2">`Write`</ph> and <ph id="ph3">`Create`</ph><ph id="ph4">&lt;xref:System.Security.Permissions.RegistryPermission&gt;</ph> .</source>
          <target state="translated"><ph id="ph1">`SaveSetting`</ph> requiere <ph id="ph2">`Write`</ph> y <ph id="ph3">`Create`</ph> <ph id="ph4">&lt;xref:System.Security.Permissions.RegistryPermission&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source>The following example first uses the <ph id="ph1">`SaveSetting`</ph> function to make entries in the Windows registry for the <ph id="ph2">`MyApp`</ph> application, and then uses the <ph id="ph3">`DeleteSetting`</ph> function to remove them.</source>
          <target state="translated">En el ejemplo siguiente se usa primero el <ph id="ph1">`SaveSetting`</ph> función para crear entradas en el registro de Windows para la <ph id="ph2">`MyApp`</ph> aplicación y, a continuación, utiliza el <ph id="ph3">`DeleteSetting`</ph> función para quitarlos.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source>Key registry could not be created, or user is not logged in.</source>
          
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Name of the program to execute, together with any required arguments and command-line switches.</source>
          
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source><bpt id="p1">&lt;c&gt;</bpt>PathName<ept id="p1">&lt;/c&gt;</ept> can also include the drive and the directory path or folder.</source>
          
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>If you do not know the path to the program, you can use the <ph id="ph1">&lt;see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles" /&gt;</ph> to locate it.</source>
          
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>For example, you can call <bpt id="p1">&lt;c&gt;</bpt>My.Computer.FileSystem.GetFiles("C:<ph id="ph1">\"</ph>, True, "testFile.txt")<ept id="p1">&lt;/c&gt;</ept>, which returns the full path of every file named <bpt id="p2">&lt;c&gt;</bpt>testFile.txt<ept id="p2">&lt;/c&gt;</ept> anywhere on drive C:<ph id="ph2">\\</ph>.</source>
          
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Optional.</source>
          
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source><ph id="ph1">&lt;see langword="AppWinStyle" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>A value chosen from the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.AppWinStyle" /&gt;</ph> specifying the style of the window in which the program is to run.</source>
          
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Style<ept id="p1">&lt;/c&gt;</ept> is omitted, <ph id="ph1">&lt;see langword="Shell" /&gt;</ph> uses <ph id="ph2">&lt;see langword="AppWinStyle.MinimizedFocus" /&gt;</ph>, which starts the program minimized and with focus.</source>
          
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Optional.</source>
          
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>A value indicating whether the <ph id="ph1">&lt;see langword="Shell" /&gt;</ph> function should wait for completion of the program.</source>
          
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Wait<ept id="p1">&lt;/c&gt;</ept> is omitted, <ph id="ph1">&lt;see langword="Shell" /&gt;</ph> uses <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Optional.</source>
          
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>The number of milliseconds to wait for completion if <bpt id="p1">&lt;c&gt;</bpt>Wait<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Timeout<ept id="p1">&lt;/c&gt;</ept> is omitted, <ph id="ph1">&lt;see langword="Shell" /&gt;</ph> uses -1, which means there is no timeout and <ph id="ph2">&lt;see langword="Shell" /&gt;</ph> does not return until the program finishes.</source>
          
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Therefore, if you omit <bpt id="p1">&lt;c&gt;</bpt>Timeout<ept id="p1">&lt;/c&gt;</ept> or set it to -1, it is possible that <ph id="ph1">&lt;see langword="Shell" /&gt;</ph> might never return control to your program.</source>
          
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Runs an executable program and returns an integer containing the program's process ID if it is still running.</source>
          
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Runs an executable program and returns an integer containing the program's process ID if it is still running.</source>
          
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>The return value of the <ph id="ph1">`Shell`</ph> function depends on whether the program named in <ph id="ph2">`PathName`</ph> is still executing when <ph id="ph3">`Shell`</ph> returns.</source>
          <target state="translated">El valor devuelto de la <ph id="ph1">`Shell`</ph> función depende de si el programa con el nombre en <ph id="ph2">`PathName`</ph> todavía se está ejecutando cuando <ph id="ph3">`Shell`</ph> devuelve.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>If you set <ph id="ph1">`Wait`</ph> to <ph id="ph2">`True`</ph> and the program finishes before the timeout expires, <ph id="ph3">`Shell`</ph> returns zero.</source>
          <target state="translated">Si establece <ph id="ph1">`Wait`</ph> a <ph id="ph2">`True`</ph> y el programa finaliza antes de que expire el tiempo de espera, <ph id="ph3">`Shell`</ph> devuelve cero.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>If the timeout expires, or if you omit <ph id="ph1">`Wait`</ph> or set it to <ph id="ph2">`False`</ph>, <ph id="ph3">`Shell`</ph> returns the process ID of the program.</source>
          <target state="translated">Si se agota el tiempo de espera, o si se omite <ph id="ph1">`Wait`</ph> o establézcalo en <ph id="ph2">`False`</ph>, <ph id="ph3">`Shell`</ph> devuelve el identificador de proceso del programa.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>The process ID is a unique number that identifies the running program.</source>
          <target state="translated">El identificador de proceso es un número único que identifica el programa en ejecución.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Failure to Start</source>
          <target state="translated">Error al iniciar</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>If the <ph id="ph1">`Shell`</ph> function cannot start the named program, a <ph id="ph2">&lt;xref:System.IO.FileNotFoundException&gt;</ph> error occurs.</source>
          <target state="translated">Si el <ph id="ph1">`Shell`</ph> función no puede iniciar el programa especificado, un <ph id="ph2">&lt;xref:System.IO.FileNotFoundException&gt;</ph> se produce el error.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>This can happen, for example, when you attempt to run a 16-bit program, such as <ph id="ph1">`command.com`</ph>, from an application using <ph id="ph2">&lt;xref:System.Windows.Forms?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Esto puede ocurrir, por ejemplo, al intentar ejecutar un programa de 16 bits, como <ph id="ph1">`command.com`</ph>, desde una aplicación con <ph id="ph2">&lt;xref:System.Windows.Forms?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>For a workaround, you can run a 32-bit program that calls the desired 16-bit program.</source>
          <target state="translated">Para obtener una solución, puede ejecutar un programa de 32 bits que llame al programa de 16 bits deseado.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>In the case of <ph id="ph1">`command.com`</ph>, you can run <ph id="ph2">`cmd.exe`</ph> as an alternative.</source>
          <target state="translated">En el caso de <ph id="ph1">`command.com`</ph>, puede ejecutar <ph id="ph2">`cmd.exe`</ph> como alternativa.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Waiting for Completion</source>
          <target state="translated">Esperar la finalización</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>By default, the <ph id="ph1">`Shell`</ph> function runs the program asynchronously.</source>
          <target state="translated">De forma predeterminada, la <ph id="ph1">`Shell`</ph> la función ejecuta el programa de forma asincrónica.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>This means that a program started with the <ph id="ph1">`Shell`</ph> function might not finish executing before the statements following the <ph id="ph2">`Shell`</ph> function are executed.</source>
          <target state="translated">Esto significa que un programa iniciado con la <ph id="ph1">`Shell`</ph> función podría no termine de ejecutarse antes de las instrucciones que siguen el <ph id="ph2">`Shell`</ph> se ejecuta la función.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>If you want to wait for the program to finish before you continue, set <ph id="ph1">`Wait`</ph> to <ph id="ph2">`True`</ph>.</source>
          <target state="translated">Si no desea esperar para que finalice antes de el programa continúe, establezca <ph id="ph1">`Wait`</ph> a <ph id="ph2">`True`</ph>.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Determining the Exit Code</source>
          <target state="translated">Determinar el código de salida</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>A process can return an <bpt id="p1">*</bpt>exit code<ept id="p1">*</ept> when it terminates.</source>
          <target state="translated">Un proceso puede devolver un <bpt id="p1">*</bpt>código de salida<ept id="p1">*</ept> cuando finaliza.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>However, you cannot use <ph id="ph1">`Shell`</ph> to retrieve this exit code, because <ph id="ph2">`Shell`</ph> returns zero if it waits for termination, and also because the process runs in a different object from <ph id="ph3">`Shell`</ph>.</source>
          <target state="translated">Sin embargo, no puede usar <ph id="ph1">`Shell`</ph> para recuperar este código de salida porque <ph id="ph2">`Shell`</ph> devuelve cero si se espera para la finalización y también porque el proceso se ejecuta en un objeto distinto de <ph id="ph3">`Shell`</ph>.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>To retrieve the exit code from a process, you must write your own code to initiate the process and wait for termination.</source>
          <target state="translated">Para recuperar el código de salida de un proceso, debe escribir su propio código para iniciar el proceso y esperar a que finalice.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>The following example shows how to initiate a process, wait for it to terminate, and retrieve its exit code.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo iniciar un proceso, espere a que finalice y recuperar su código de salida.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Protecting the File Specification</source>
          <target state="translated">Protección de la especificación de archivo</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>You should always enclose the entire path and file specification in quotation marks, as the following example shows.</source>
          <target state="translated">Siempre debe incluir toda la especificación de ruta de acceso y entre comillas, como se muestra en el ejemplo siguiente.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Each pair of adjacent double quotation marks (<ph id="ph1">`" "`</ph>) within the string literal is interpreted as one double quotation character in the string.</source>
          <target state="translated">Cada par de comillas dobles adyacentes (<ph id="ph1">`" "`</ph>) dentro de la cadena literal se interpreta como carácter de una comilla doble en la cadena.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Therefore, the preceding example presents the following string to the <ph id="ph1">`Shell`</ph> function:</source>
          <target state="translated">Por consiguiente, el ejemplo anterior muestra la siguiente cadena para el <ph id="ph1">`Shell`</ph> función:</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>If you did not have the path enclosed in quotation marks, Windows would look for a file called <ph id="ph1">`Program.exe`</ph> in the C:\ directory, instead of <ph id="ph2">`display.exe`</ph> in the C:\Program Files directory.</source>
          <target state="translated">Si no tenía la ruta de acceso entre comillas, Windows buscaría un archivo denominado <ph id="ph1">`Program.exe`</ph> en el directorio C:\, en lugar de <ph id="ph2">`display.exe`</ph> en el directorio C:\Program Files.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>If you do not enclose the path and file specification in quotation marks, there is a security risk if the file name or a path node contains spaces.</source>
          <target state="translated">Si no incluye la especificación de ruta de acceso y entre comillas, hay un riesgo de seguridad si el nombre de archivo o un nodo de ruta de acceso contiene espacios en blanco.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>In the preceding example, the path node <ph id="ph1">`\Program Files`</ph> includes a space.</source>
          <target state="translated">En el ejemplo anterior, el nodo de ruta de acceso <ph id="ph1">`\Program Files`</ph> incluye un espacio.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>If the specification were not inside quotation marks and a program named <ph id="ph1">`Program.exe`</ph> had been installed in C:<ph id="ph2">\\</ph>, for example by illicit tampering, Windows would execute it instead of <ph id="ph3">`display.exe`</ph>.</source>
          <target state="translated">Si la especificación no estaban dentro de las comillas y un programa llamado <ph id="ph1">`Program.exe`</ph> había instalado en C:<ph id="ph2">\\</ph>, por ejemplo mediante manipulación ilícita, Windows lo ejecutaría en lugar de <ph id="ph3">`display.exe`</ph>.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>The <ph id="ph1">`Shell`</ph> function requires unmanaged code permission, which might affect its execution in partial-trust situations.</source>
          <target state="translated">El <ph id="ph1">`Shell`</ph> función requiere un permiso de código no administrado, lo que podría afectar a su ejecución en situaciones de confianza parcial.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> and <bpt id="p1">[</bpt>Code Access Permissions<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> y <bpt id="p1">[</bpt>permisos de acceso del código<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>The following example uses the <ph id="ph1">`Shell`</ph> function to run an application specified by the user.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">`Shell`</ph> función que se ejecuta una aplicación especificada por el usuario.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Specifying <ph id="ph1">&lt;xref:Microsoft.VisualBasic.AppWinStyle.NormalFocus?displayProperty=nameWithType&gt;</ph> as the second argument opens the application in normal size and gives it the focus.</source>
          <target state="translated">Especificar <ph id="ph1">&lt;xref:Microsoft.VisualBasic.AppWinStyle.NormalFocus?displayProperty=nameWithType&gt;</ph> como el segundo argumento, se abre la aplicación en su tamaño normal y le transfiere el foco.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="Style" /&gt;</ph> is not within range 0 through 9, inclusive.</source>
          
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Shell" /&gt;</ph> cannot find the <ph id="ph2">&lt;paramref name="PathName" /&gt;</ph> file.</source>
          
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="PathName" /&gt;</ph> is <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>Required.</source>
          
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph> parameter array.</source>
          
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>Must have an even number of elements.</source>
          
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>You can supply a list of <ph id="ph1">&lt;see langword="Object" /&gt;</ph> variables or expressions separated by commas, or a single-dimensional array of <ph id="ph2">&lt;see langword="Object" /&gt;</ph> elements.</source>
          
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>Evaluates a list of expressions and returns an <ph id="ph1">&lt;see langword="Object" /&gt;</ph> value corresponding to the first expression in the list that is <ph id="ph2">&lt;see langword="True" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>Evaluates a list of expressions and returns an <ph id="ph1">&lt;see langword="Object" /&gt;</ph> value corresponding to the first expression in the list that is <ph id="ph2">&lt;see langword="True" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>The argument supplied to <ph id="ph1">`VarExpr`</ph> consists of paired expressions and values.</source>
          <target state="translated">El argumento proporcionado a <ph id="ph1">`VarExpr`</ph> está formada por pares de expresiones y valores.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>The <ph id="ph1">`Switch`</ph> function evaluates the odd-numbered expressions from lowest to highest index in <ph id="ph2">`VarExpr`</ph>, and returns the even-numbered value associated with the first expression that evaluates to <ph id="ph3">`True`</ph>.</source>
          <target state="translated">El <ph id="ph1">`Switch`</ph> función evalúa las expresiones con numeración impar de menor a mayor índice en <ph id="ph2">`VarExpr`</ph>y devuelve el valor impares asociado con la primera expresión que se evalúa como <ph id="ph3">`True`</ph>.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>For example, if <ph id="ph1">`VarExpr(0)`</ph> is <ph id="ph2">`True`</ph>, <ph id="ph3">`Switch`</ph> returns <ph id="ph4">`VarExpr(1)`</ph>, and if <ph id="ph5">`VarExpr(0)`</ph> is <ph id="ph6">`False`</ph> but <ph id="ph7">`VarExpr(2)`</ph> is <ph id="ph8">`True`</ph>, <ph id="ph9">`Switch`</ph> returns <ph id="ph10">`VarExpr(3)`</ph>, and so on.</source>
          <target state="translated">Por ejemplo, si <ph id="ph1">`VarExpr(0)`</ph> es <ph id="ph2">`True`</ph>, <ph id="ph3">`Switch`</ph> devuelve <ph id="ph4">`VarExpr(1)`</ph>y si <ph id="ph5">`VarExpr(0)`</ph> es <ph id="ph6">`False`</ph> pero <ph id="ph7">`VarExpr(2)`</ph> es <ph id="ph8">`True`</ph>, <ph id="ph9">`Switch`</ph> devuelve <ph id="ph10">`VarExpr(3)`</ph>, y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>If you do not supply the <ph id="ph1">`VarExpr`</ph> argument, <ph id="ph2">`Switch`</ph> returns <ph id="ph3">`Nothing`</ph>.</source>
          <target state="translated">Si no facilita la <ph id="ph1">`VarExpr`</ph> argumento, <ph id="ph2">`Switch`</ph> devuelve <ph id="ph3">`Nothing`</ph>.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>The expressions in the argument list can include function calls.</source>
          <target state="translated">Las expresiones en la lista de argumentos pueden incluir llamadas a funciones.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>As part of preparing the argument list for the call to <ph id="ph1">`Switch`</ph>, the Visual Basic compiler calls every function in every expression.</source>
          <target state="translated">Como parte de la preparación de la lista de argumentos de la llamada a <ph id="ph1">`Switch`</ph>, el compilador de Visual Basic llama a cada función en cada expresión.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>This means that you cannot rely on a particular function not being called if an expression earlier in the argument list is <ph id="ph1">`True`</ph>.</source>
          <target state="translated">Esto significa que no se puede confiar en una función determinada no se llama si una expresión anterior en la lista de argumentos es <ph id="ph1">`True`</ph>.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>The following example uses the <ph id="ph1">`Switch`</ph> function to return the name of a language that matches the name of a city.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">`Switch`</ph> función para devolver el nombre de un idioma que coincida con el nombre de una ciudad.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>It requires that <ph id="ph1">`Option Strict`</ph> be <ph id="ph2">`Off`</ph>.</source>
          <target state="translated">Tiene los siguientes requisitos <ph id="ph1">`Option Strict`</ph> ser <ph id="ph2">`Off`</ph>.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>Because the <ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph> namespace also contains a class called <ph id="ph2">&lt;xref:System.Diagnostics.Switch&gt;</ph>, a call to the <ph id="ph3">`Switch`</ph> function must be qualified with the <ph id="ph4">&lt;xref:Microsoft.VisualBasic&gt;</ph> namespace.</source>
          <target state="translated">Dado que la <ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph> espacio de nombres también contiene una clase denominada <ph id="ph2">&lt;xref:System.Diagnostics.Switch&gt;</ph>, una llamada a la <ph id="ph3">`Switch`</ph> función debe calificarse con el <ph id="ph4">&lt;xref:Microsoft.VisualBasic&gt;</ph> espacio de nombres.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>Number of arguments is odd.</source>
          
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>