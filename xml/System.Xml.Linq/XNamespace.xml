<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XNamespace.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae25fbb5-14a8-44f2-90c2-3c6d6fcaae7f4e6daba021fcb83aea5f304b739a62766ac61e5a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4e6daba021fcb83aea5f304b739a62766ac61e5a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b899505ed6d42225f2b3c9150bfdc080d0d1f9b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/28/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XNamespace">
          <source>Represents an XML namespace.</source>
          <target state="translated">Representa un espacio de nombres XML.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XNamespace">
          <source>This class cannot be inherited.</source>
          <target state="translated">Esta clase no puede heredarse.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>This class represents the XML construct of namespaces.</source>
          <target state="translated">Esta clase representa la construcción XML de espacios de nombres.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>Every <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph> contains an <ph id="ph2">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph>.</source>
          <target state="translated">Cada <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph> contiene un <ph id="ph2">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>Even if an element is not in a namespace, the element's <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph> still contains a namespace, <ph id="ph2">&lt;xref:System.Xml.Linq.XNamespace.None%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Aun cuando un elemento no esté en un espacio de nombres, el <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph> del elemento todavía contendrá un espacio de nombres, <ph id="ph2">&lt;xref:System.Xml.Linq.XNamespace.None%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Linq.XName.Namespace%2A?displayProperty=nameWithType&gt;</ph> property is guaranteed to not be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Se garantiza que la propiedad <ph id="ph1">&lt;xref:System.Xml.Linq.XName.Namespace%2A?displayProperty=nameWithType&gt;</ph> no sea <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>Creating an XNamespace Object</source>
          <target state="translated">Creación de un objeto XNamespace</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>The most common way to create an <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> object is to simply assign a string to it.</source>
          <target state="translated">La manera más común para crear un <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> objeto es simplemente asignarle una cadena.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>You can then combine the namespace with a local name by using the override of the addition operator.</source>
          <target state="translated">A continuación, puede combinar el espacio de nombres con un nombre local mediante la invalidación del operador de suma.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>The following example shows this idiom:</source>
          <target state="translated">En el ejemplo siguiente se muestra esta expresión:</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>However, in Visual Basic, you would typically declare a global default namespace, as follows:</source>
          <target state="translated">Sin embargo, en Visual Basic, normalmente se declara un espacio de nombres predeterminado global, como se indica a continuación:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>Assigning a string to an <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> uses the implicit conversion from <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">Asigne una cadena a un <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> usa la conversión implícita de <ph id="ph2">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>See <bpt id="p1">[</bpt>How to: Create a Document with Namespaces (C#) (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/af4a595e-ffb2-4187-a61b-d5ed71642c4c)</ept> for more information and examples.</source>
          <target state="translated">Vea <bpt id="p1">[</bpt>Cómo: crear un documento con espacios de nombres (C#) (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/af4a595e-ffb2-4187-a61b-d5ed71642c4c)</ept> para obtener más información y ejemplos.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>See <bpt id="p1">[</bpt>Namespaces in Visual Basic (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/10b7ba7b-518c-4f14-899f-892575d14dcc)</ept> for more information on using namespaces in Visual Basic.</source>
          <target state="translated">Vea <bpt id="p1">[</bpt>espacios de nombres en Visual Basic (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/10b7ba7b-518c-4f14-899f-892575d14dcc)</ept> para obtener más información sobre el uso de espacios de nombres en Visual Basic.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>Controlling Namespace Prefixes</source>
          <target state="translated">Los prefijos de controlar Namespace</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>If you create an attribute that declares a namespace, the prefix specified in the attribute will be persisted in the serialized XML.</source>
          <target state="translated">Si crea un atributo que declara un espacio de nombres, se conservará el prefijo especificado en el atributo en el XML serializado.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>To create an attribute that declares a namespace with a prefix, you create an attribute where the namespace of the name of the attribute is <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace.Xmlns%2A&gt;</ph>, and the name of the attribute is the namespace prefix.</source>
          <target state="translated">Para crear un atributo que declara un espacio de nombres con un prefijo, puede crear un atributo donde el espacio de nombres del nombre del atributo es <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace.Xmlns%2A&gt;</ph> y el nombre del atributo es el prefijo del espacio de nombres.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>The value of the attribute is the URI of the namespace.</source>
          <target state="translated">El valor del atributo es el URI del espacio de nombres.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>The following example shows this idiom:</source>
          <target state="translated">En el ejemplo siguiente se muestra esta expresión:</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>In Visual Basic, instead of creating a namespace node to control namespace prefixes, you would typically use a global namespace declaration:</source>
          <target state="translated">En Visual Basic, en lugar de crear un nodo de espacio de nombres para controlar los prefijos de espacio de nombres, normalmente se utiliza una declaración de espacio de nombres global:</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Control Namespace Prefixes (C#) (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/a40d4479-f1b9-4d8b-8623-445648caed28)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>Cómo: Control Namespace prefijos (C#) (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/a40d4479-f1b9-4d8b-8623-445648caed28)</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>Creating a Default Namespace</source>
          <target state="translated">Crear un Namespace predeterminado</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>When constructing an attribute that will be a namespace, if the attribute name has the special value of "xmlns", then when the XML tree is serialized, the namespace will be declared as the default namespace.</source>
          <target state="translated">Al construir un atributo que será un espacio de nombres, si el nombre del atributo tiene el valor especial de "xmlns", a continuación, cuando se serializa el árbol XML, el espacio de nombres se declara como el espacio de nombres predeterminado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>The special attribute with the name of "xmlns" itself is not in any namespace.</source>
          <target state="translated">El atributo especial con el nombre de "xmlns" en sí no está en cualquier espacio de nombres.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>The value of the attribute is the namespace URI.</source>
          <target state="translated">El valor del atributo es el URI de espacio de nombres.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>The following example creates an XML tree that contains an attribute that is declared in such a way that the namespace will become the default namespace:</source>
          <target state="translated">En el ejemplo siguiente se crea un árbol XML que contiene un atributo que se declara de forma que el espacio de nombres se convertirá en el espacio de nombres predeterminado:</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>In Visual Basic, instead of creating a namespace node to create a default namespace, you would typically use a global default namespace declaration:</source>
          <target state="translated">En Visual Basic, en lugar de crear un nodo de espacio de nombres para crear un espacio de nombres predeterminado, normalmente se utiliza una declaración de espacio de nombres global predeterminado:</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>XNamespace Atomization</source>
          <target state="translated">Atomización XNamespace</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source><ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> objects are guaranteed to be atomized; that is, if two <ph id="ph2">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> objects have exactly the same URI, they will share the same instance.</source>
          <target state="translated">Se garantiza que los objetos <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> se atomicen; es decir, si dos objetos <ph id="ph2">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> tienen exactamente el mismo URI, compartirán la misma instancia.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>The equality and comparison operators are provided explicitly for this purpose.</source>
          <target state="translated">Los operadores de comparación e igualdad se proporcionan explícitamente para este propósito.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>Using Expanded Names</source>
          <target state="translated">Usar nombres expandidos</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>Another way to specify a namespace and a local name is to use an expanded name in the form <ph id="ph1">`{namespace}name`</ph>:</source>
          <target state="translated">Otra manera de especificar un espacio de nombres y un nombre local es utilizar un nombre expandido en la forma <ph id="ph1">`{namespace}name`</ph>:</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>This approach has performance implications.</source>
          <target state="translated">Este método tiene implicaciones en el rendimiento.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>Each time that you pass a string that contains an expanded name to <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>, it must parse the name, find the atomized namespace, and find the atomized name.</source>
          <target state="translated">Cada vez que pasa una cadena que contiene un nombre expandido a <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>, debe analizar el nombre, buscar el espacio de nombres atomizado y buscar el nombre atomizado.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>This process takes CPU time.</source>
          <target state="translated">Este proceso consume tiempo de la CPU.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>If performance is important, you may want to use a different approach.</source>
          <target state="translated">Si el rendimiento es importante, puede que desee utilizar un enfoque diferente.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>With Visual Basic, the recommended approach is to use XML literals, which does not involve the use of expanded names.</source>
          <target state="translated">Con Visual Basic, el enfoque recomendado es usar literales XML, que implican el uso de nombres expandidos.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> to compare to the current <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> que se va a comparar con el <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.Equals(System.Object)">
          <source>Determines whether the specified <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> is equal to the current <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</source>
          <target state="translated">Determina si el objeto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> especificado es igual al objeto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.Equals(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> that indicates whether the specified <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> is equal to the current <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> que indica si el <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> especificado es igual al <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.Equals(System.Object)">
          <source>For two <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> objects to be equal, they must have the same URI.</source>
          <target state="translated">Para dos <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> objetos sean iguales, ambos deberán tener el mismo URI.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.Equals(System.Object)">
          <source>The following example compares two namespaces that refer to the same URI.</source>
          <target state="translated">En el ejemplo siguiente se comparan dos espacios de nombres que hacen referencia al mismo URI.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.Equals(System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.Get(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains a namespace URI.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contiene un espacio de nombres URI.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.Get(System.String)">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> for the specified Uniform Resource Identifier (URI).</source>
          <target state="translated">Obtiene un <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> para el identificador uniforme de recursos (URI) especificado.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.Get(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> created from the specified URI.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> creado a partir del URI especificado.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.Get(System.String)">
          <source>The returned <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> object is guaranteed to be atomic (that is, it is the only one in the system for that particular URI).</source>
          <target state="translated">El valor devuelto <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> se garantiza que el objeto es atómico (es decir, es el único en el sistema para ese URI en particular).</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.Get(System.String)">
          <source>The following example gets a <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> from a specified URI.</source>
          <target state="translated">En el ejemplo siguiente se obtiene un <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> desde un URI especificado.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.Get(System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.GetHashCode">
          <source>Gets a hash code for this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</source>
          <target state="translated">Obtiene un código hash de este objeto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.GetHashCode">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that contains the hash code for the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</source>
          <target state="translated">Valor de tipo <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> que contiene el código hash para el <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.GetHashCode">
          <source>This method serves as a hash function for <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph>.</source>
          <target state="translated">Este método actúa como función hash para <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.GetHashCode">
          <source>You can use <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace.GetHashCode%2A&gt;</ph> in hashing algorithms and data structures like a hash table.</source>
          <target state="translated">Puede usar <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace.GetHashCode%2A&gt;</ph> en hash algoritmos y estructuras de datos como una tabla hash.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.GetName(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains a local name.</source>
          <target state="translated">Valor de tipo <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contiene un nombre local.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.GetName(System.String)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> object created from this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> and the specified local name.</source>
          <target state="translated">Devuelve un objeto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> creado a partir de este <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> y el nombre local especificado.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.GetName(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> created from this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> and the specified local name.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> creado a partir de este <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> y el nombre local especificado.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.GetName(System.String)">
          <source>The returned <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph> object is guaranteed to be atomic (that is, it is the only one in the system for a specific expanded name).</source>
          <target state="translated">El valor devuelto <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph> se garantiza que el objeto es atómico (es decir, es el único en el sistema para un nombre expandido concreto).</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.GetName(System.String)">
          <source>The following example uses this property to retrieve an <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se utiliza esta propiedad para recuperar un <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.GetName(System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XNamespace.NamespaceName">
          <source>Gets the Uniform Resource Identifier (URI) of this namespace.</source>
          <target state="translated">Obtiene el identificador de recursos uniforme (URI) de este espacio de nombres.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.NamespaceName">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the URI of the namespace.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contiene el URI del espacio de nombres.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.NamespaceName">
          <source>The following example shows how to use this property:</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo utilizar esta propiedad:</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.NamespaceName">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XNamespace.None">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> object that corresponds to no namespace.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> que no se corresponde con ningún espacio de nombres.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.None">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> that corresponds to no namespace.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> que no se corresponde con ningún espacio de nombres.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.None">
          <source>If an element or attribute is in no namespace, its namespace will be set to the namespace returned by this property.</source>
          <target state="translated">Si un elemento o atributo está en ningún espacio de nombres, se establecerá su espacio de nombres al espacio de nombres devuelto por esta propiedad.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.None">
          <source>The following example shows uses this property to determine which elements are in no namespace.</source>
          <target state="translated">En el ejemplo siguiente se muestra usa esta propiedad para determinar qué elementos están en ningún espacio de nombres.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.None">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> that contains the namespace.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> que contiene el espacio de nombres.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the local name.</source>
          <target state="translated">Valor de tipo <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contiene el nombre local.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
          <source>Combines an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> object with a local name to create an <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>.</source>
          <target state="translated">Combina un objeto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> con un nombre local para crear un <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> constructed from the namespace and local name.</source>
          <target state="translated">El nuevo <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> construido a partir del espacio de nombres y el nombre local.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
          <source>This operator enables the common idiom of combining a namespace and a local name in the construction of an element or attribute.</source>
          <target state="translated">Este operador habilita la expresión común de combinar un espacio de nombres y un nombre local en la construcción de un elemento o atributo.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
          <source>This idiom provides some of the benefits of having namespace prefixes, in that you can refer to a namespace using a variable that is short.</source>
          <target state="translated">Esta expresión proporciona algunas de las ventajas de tener prefijos de espacio de nombres, en que puede hacer referencia a un espacio de nombres utilizando una variable que es breve.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
          <source>This eliminates syntactic noise in the code that creates XML trees.</source>
          <target state="translated">Esto elimina las interferencias sintácticas en el código que crea los árboles XML.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
          <source>The following example shows the use of the <ph id="ph1">`+`</ph> operator to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph> from an <ph id="ph3">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> and a local name.</source>
          <target state="translated">En el ejemplo siguiente se muestra el uso de la <ph id="ph1">`+`</ph> operador que se va a crear un <ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph> desde un <ph id="ph3">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> y un nombre local.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
          <source>In Visual Basic, this is the preferred idiom:</source>
          <target state="translated">En Visual Basic, se trata de la expresión preferida:</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> to compare.</source>
          <target state="translated">Primer objeto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> que se va a comparar.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> to compare.</source>
          <target state="translated">Segundo objeto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> que se va a comparar.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>Returns a value indicating whether two instances of <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> are equal.</source>
          <target state="translated">Devuelve un valor que indica si dos instancias de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> son iguales.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> that indicates whether <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are equal.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> que indica si <ph id="ph2">&lt;paramref name="left" /&gt;</ph> y <ph id="ph3">&lt;paramref name="right" /&gt;</ph> son iguales.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>The operator overloads <ph id="ph1">`==`</ph> and <ph id="ph2">`!=`</ph> are provided to enable comparisons between <ph id="ph3">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> and string (for example, <ph id="ph4">`element.Name.Namespace == "http://www.adventure-works.com"`</ph>).</source>
          <target state="translated">Las sobrecargas de operador <ph id="ph1">`==`</ph> y <ph id="ph2">`!=`</ph> se proporcionan para habilitar las comparaciones entre <ph id="ph3">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> y cadena (por ejemplo, <ph id="ph4">`element.Name.Namespace == "http://www.adventure-works.com"`</ph>).</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>The predefined reference equality operators in C# require one operand to be convertible to the type of the other through reference conversions only, and do not consider the implicit conversion from string to <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph>.</source>
          <target state="translated">Los operadores de igualdad de referencia predefinidos en C# requieren que un operando se pueda convertir al tipo del otro a través de las conversiones de referencia y no se tienen en cuenta la conversión implícita de cadena a <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>The following example shows the comparison of an <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> and a string.</source>
          <target state="translated">En el ejemplo siguiente se muestra la comparación de una <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> y una cadena.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the namespace URI.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contiene el URI de espacio de nombres.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace">
          <source>Converts a string containing a Uniform Resource Identifier (URI) to an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</source>
          <target state="translated">Convierte una cadena que contiene un identificador uniforme de recursos (URI) en un <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> constructed from the URI string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> construido a partir de la cadena URI.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace">
          <source>The following example shows the initialization of an <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> variable by assigning a string to it.</source>
          <target state="translated">En el ejemplo siguiente se muestra la inicialización de un <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> variable mediante la asignación de una cadena a él.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> to compare.</source>
          <target state="translated">Primer objeto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> que se va a comparar.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> to compare.</source>
          <target state="translated">Segundo objeto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> que se va a comparar.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>Returns a value indicating whether two instances of <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> are not equal.</source>
          <target state="translated">Devuelve un valor que indica si dos instancias de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> no son iguales.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> that indicates whether <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are not equal.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> que indica si <ph id="ph2">&lt;paramref name="left" /&gt;</ph> y <ph id="ph3">&lt;paramref name="right" /&gt;</ph> no son iguales.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>The operator overloads <ph id="ph1">`==`</ph> and <ph id="ph2">`!=`</ph> are provided to enable comparisons between <ph id="ph3">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> and string (for example, <ph id="ph4">`element.Name.Namespace == "http://www.adventure-works.com"`</ph>).</source>
          <target state="translated">Las sobrecargas de operador <ph id="ph1">`==`</ph> y <ph id="ph2">`!=`</ph> se proporcionan para habilitar las comparaciones entre <ph id="ph3">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> y cadena (por ejemplo, <ph id="ph4">`element.Name.Namespace == "http://www.adventure-works.com"`</ph>).</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>The predefined reference equality operators in C# require one operand to be convertible to the type of the other through reference conversions only, and do not consider the implicit conversion from string to <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph>.</source>
          <target state="translated">Los operadores de igualdad de referencia predefinidos en C# requieren que un operando se pueda convertir al tipo del otro a través de las conversiones de referencia y no se tienen en cuenta la conversión implícita de cadena a <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>The following example shows a comparison of a <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> to a string.</source>
          <target state="translated">En el ejemplo siguiente se muestra una comparación de un <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> en una cadena.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.ToString">
          <source>Returns the URI of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</source>
          <target state="translated">Devuelve el URI de este <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.ToString">
          <source>The URI of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</source>
          <target state="translated">URI de este <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.ToString">
          <source>The following example uses this method to print a namespace on the console.</source>
          <target state="translated">En el ejemplo siguiente se usa este método para imprimir un espacio de nombres en la consola.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.ToString">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XNamespace.Xml">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> object that corresponds to the XML URI (<bpt id="p1">&lt;c&gt;</bpt><ph id="ph2">http://www.w3.org/XML/1998/namespace</ph><ept id="p1">&lt;/c&gt;</ept>).</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> que corresponde al URI XML (<bpt id="p1">&lt;c&gt;</bpt><ph id="ph2">http://www.w3.org/XML/1998/namespace</ph><ept id="p1">&lt;/c&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xml">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> that corresponds to the XML URI (<bpt id="p1">&lt;c&gt;</bpt><ph id="ph2">http://www.w3.org/XML/1998/namespace</ph><ept id="p1">&lt;/c&gt;</ept>).</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> que corresponde al URI XML (<bpt id="p1">&lt;c&gt;</bpt><ph id="ph2">http://www.w3.org/XML/1998/namespace</ph><ept id="p1">&lt;/c&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xml">
          <source>Certain standardized attributes, such as <ph id="ph1">`space`</ph>, are in the <ph id="ph2">`http://www.w3.org/XML/1998/namespace`</ph> namespace.</source>
          <target state="translated">Ciertos estandarizados, como atributos, <ph id="ph1">`space`</ph>, están en el <ph id="ph2">`http://www.w3.org/XML/1998/namespace`</ph> espacio de nombres.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xml">
          <source>The W3C standard specifies that this namespace does not have to be declared as an attribute in the XML tree.</source>
          <target state="translated">El estándar de W3C especifica que este espacio de nombres no debe declararse como un atributo en el árbol XML.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xml">
          <source>It is a reserved namespace that is always automatically available in the XML parser.</source>
          <target state="translated">Es un espacio de nombres reservado que está siempre disponible automáticamente en el analizador XML.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xml">
          <source>The following example shows how to create an <ph id="ph1">`xml:space="preserve"`</ph> attribute in an XML tree:</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo crear un <ph id="ph1">`xml:space="preserve"`</ph> atributo en un árbol XML:</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xml">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XNamespace.Xmlns">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> object that corresponds to the xmlns URI (<bpt id="p1">&lt;c&gt;</bpt><ph id="ph2">http://www.w3.org/2000/xmlns/</ph><ept id="p1">&lt;/c&gt;</ept>).</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> que corresponde al URI xmlns (<bpt id="p1">&lt;c&gt;</bpt><ph id="ph2">http://www.w3.org/2000/xmlns/</ph><ept id="p1">&lt;/c&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xmlns">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> that corresponds to the <bpt id="p1">**</bpt>xmlns<ept id="p1">**</ept> URI (<bpt id="p2">&lt;c&gt;</bpt><ph id="ph2">http://www.w3.org/2000/xmlns/</ph><ept id="p2">&lt;/c&gt;</ept>).</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> que corresponde a la <bpt id="p1">**</bpt>xmlns<ept id="p1">**</ept> URI (<bpt id="p2">&lt;c&gt;</bpt><ph id="ph2">http://www.w3.org/2000/xmlns/</ph><ept id="p2">&lt;/c&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xmlns">
          <source>When you declare namespaces, the namespace attributes themselves are in the <bpt id="p1">**</bpt>xmlns<ept id="p1">**</ept> namespace.</source>
          <target state="translated">Al declarar espacios de nombres, los atributos de espacio de nombres propios están en el <bpt id="p1">**</bpt>xmlns<ept id="p1">**</ept> espacio de nombres.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xmlns">
          <source>The W3C standard specifies that this namespace does not have to be declared as an attribute in the XML tree.</source>
          <target state="translated">El estándar de W3C especifica que este espacio de nombres no debe declararse como un atributo en el árbol XML.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xmlns">
          <source>It is a reserved namespace that is always automatically available in the XML parser.</source>
          <target state="translated">Es un espacio de nombres reservado que está siempre disponible automáticamente en el analizador XML.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xmlns">
          <source>The following example shows how to add a namespace to an XML tree.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo agregar un espacio de nombres a un árbol XML.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xmlns">
          <source>The namespace for the attribute that declares the namespace is the namespace returned by this property.</source>
          <target state="translated">El espacio de nombres del atributo que declara el espacio de nombres es el espacio de nombres devuelto por esta propiedad.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xmlns">
          <source>In Visual Basic, the preferred idiom is:</source>
          <target state="translated">En Visual Basic, la expresión preferida es:</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xmlns">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>