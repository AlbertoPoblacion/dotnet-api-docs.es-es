<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XObject.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac521d2fddfb97fd2308d0e542f7e64ec71a761941f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">21d2fddfb97fd2308d0e542f7e64ec71a761941f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XObject">
          <source>Represents a node or an attribute in an XML tree.</source>
          <target state="translated">Representa un nodo o un atributo de un árbol XML.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XObject">
          <source>This class is the abstract common base class for <ph id="ph1">&lt;xref:System.Xml.Linq.XNode&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>.</source>
          <target state="translated">Esta clase es la clase base común abstracta para <ph id="ph1">&lt;xref:System.Xml.Linq.XNode&gt;</ph> y <ph id="ph2">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XObject">
          <source>It provides some basic functionality that is common to both classes, such as annotations, and raising events when nodes have changed.</source>
          <target state="translated">Proporciona alguna funcionalidad básica común a ambas clases, tales como anotaciones y generación de eventos cuando han cambiado los nodos.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XObject">
          <source>Note that annotations are not part of the XML infoset; they are not serialized or deserialized.</source>
          <target state="translated">Tenga en cuenta que las anotaciones no forman parte del conjunto de información de XML, por lo que no se serializan o deserializan.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains the annotation to add.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que contiene la anotación que se va a agregar.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)">
          <source>Adds an object to the annotation list of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Agrega un objeto a la lista de anotaciones de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)">
          <source>Note that annotations are not part of the infoset; they are not persisted, or displayed by <ph id="ph1">&lt;xref:System.Xml.Linq.XNode.ToString%2A&gt;</ph>.</source>
          <target state="translated">Tenga en cuenta que las anotaciones no forman parte del conjunto de información; no se conservan, o muestra <ph id="ph1">&lt;xref:System.Xml.Linq.XNode.ToString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)">
          <source>Also, if you import an XML Namespace into your VB project and call AddAnnotation with the SaveOptions.OmitDuplicateNamespaces enumeration value, then only one element will contain the XML Namespace attribute instead of every element.</source>
          <target state="translated">Además, si importa un Namespace XML en el proyecto VB y llamar a AddAnnotation con el valor de enumeración SaveOptions.OmitDuplicateNamespaces, un único elemento contendrá el atributo Namespace de XML en lugar de todos los elementos.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Removing duplicate namespaces in XML Literals<ept id="p1">](http://blogs.msdn.com/b/vbteam/archive/2010/06/09/removing-duplicate-namespaces-in-xml-literals-shyam-namboodiripad.aspx)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>quitar espacios de nombres duplicados en los literales XML<ept id="p1">](http://blogs.msdn.com/b/vbteam/archive/2010/06/09/removing-duplicate-namespaces-in-xml-literals-shyam-namboodiripad.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)">
          <source>The following example adds an annotation to an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se agrega una anotación a un <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.Annotation(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the annotation to retrieve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> de la anotación que se va a recuperar.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.Annotation(System.Type)">
          <source>Gets the first annotation object of the specified type from this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Obtiene el primer objeto de anotación del tipo especificado de este <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.Annotation(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains the first annotation object that matches the specified type, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no annotation is of the specified type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que contiene el primer objeto de anotación que coincide con el tipo especificado o <ph id="ph2">&lt;see langword="null" /&gt;</ph> si ninguna anotación es del tipo especificado.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.Annotation(System.Type)">
          <source>The following example adds an annotation to an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se agrega una anotación a un <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.Annotation(System.Type)">
          <source>It then retrieves the annotation, specifying the type to retrieve.</source>
          <target state="translated">A continuación, recupera la anotación, especificar el tipo para recuperar.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.Annotation(System.Type)">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.Annotation``1">
          <source>The type of the annotation to retrieve.</source>
          <target state="translated">El tipo de anotación que se va a recuperar.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.Annotation``1">
          <source>Get the first annotation object of the specified type from this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Obtiene el primer objeto de anotación del tipo especificado de este <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.Annotation``1">
          <source>The first annotation object that matches the specified type, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no annotation is of the specified type.</source>
          <target state="translated">El primer objeto de anotación que coincide con el tipo especificado o <ph id="ph1">&lt;see langword="null" /&gt;</ph> si ninguna anotación es del tipo especificado.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.Annotation``1">
          <source>The following example adds an annotation to an element, and then retrieves it through this method.</source>
          <target state="translated">En el ejemplo siguiente se agrega una anotación a un elemento y, a continuación, se recupera a través de este método.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.Annotation``1">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.Annotations(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the annotations to retrieve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> de las anotaciones que se van a recuperar.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.Annotations(System.Type)">
          <source>Gets a collection of annotations of the specified type for this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Obtiene una colección de anotaciones del tipo especificado para este <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.Annotations(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> that contains the annotations that match the specified type for this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Una interfaz <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> que contiene las anotaciones que coinciden con el tipo especificado para <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.Annotations(System.Type)">
          <source>The following example adds some annotations to an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, then retrieves a collection of annotations by using this method.</source>
          <target state="translated">En el ejemplo siguiente se agrega algunas anotaciones a un <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, a continuación, recupera una colección de anotaciones utilizando este método.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.Annotations(System.Type)">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.Annotations``1">
          <source>The type of the annotations to retrieve.</source>
          <target state="translated">El tipo de las anotaciones que se van a recuperar.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.Annotations``1">
          <source>Gets a collection of annotations of the specified type for this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Obtiene una colección de anotaciones del tipo especificado para este <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.Annotations``1">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> that contains the annotations for this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Una interfaz <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> que contiene las anotaciones de este <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.Annotations``1">
          <source>The following example uses this method to retrieve annotations on an element.</source>
          <target state="translated">En el ejemplo siguiente se usa este método para recuperar las anotaciones en un elemento.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.Annotations``1">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>Gets the base URI for this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Obtiene el URI base de este <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the base URI for this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contiene el URI base de este <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>Using LINQ to XML, you can deserialize XML in a number of fashions.</source>
          <target state="translated">Utilizando LINQ to XML, puede deserializar el XML de maneras distintas.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>You can parse it from a string, load it from a file, or read it from a <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> or an <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Puede analizar desde una cadena, cargarlo desde un archivo o leerlo de un <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> o <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>In all of these cases, LINQ to XML uses one or another of the concrete subclasses of <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">En todos estos casos, LINQ to XML utiliza una u otra de las subclases concretas de <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>Sometimes the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> has the base URI, and sometimes it does not.</source>
          <target state="translated">A veces la <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> tiene el URI base y, a veces no es así.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>For instance, when loading from a file, the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> knows the base URI, but when reading from an <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> that was created because of calling the <ph id="ph3">&lt;xref:System.Xml.Linq.XElement.Parse%2A&gt;</ph> method, there is no possibility of the <ph id="ph4">&lt;xref:System.Xml.XmlReader&gt;</ph> reporting a base URI; the XML was in a string.</source>
          <target state="translated">Para la instancia, al cargar desde un archivo, el <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> conozca el URI base, pero al leer de un <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> que se creó debido a que realiza la llamada la <ph id="ph3">&lt;xref:System.Xml.Linq.XElement.Parse%2A&gt;</ph> método, no hay ninguna posibilidad de que el <ph id="ph4">&lt;xref:System.Xml.XmlReader&gt;</ph> reporting un URI base, el XML se encontraba en una cadena.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>If, when parsing or loading the XML, you specify <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph>, LINQ to XML will request the base URI for each node as the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> returns the node.</source>
          <target state="translated">Si, al analizar o cargar el XML, se especifica <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph>, LINQ to XML, solicitará el URI base para cada nodo como el <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> devuelve el nodo.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>If the reader has the base URI, LINQ to XML will save the information with the LINQ to XML node.</source>
          <target state="translated">Si el lector tiene el URI base, LINQ to XML guardará la información con el nodo LINQ to XML.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>This property returns that information.</source>
          <target state="translated">Esta propiedad devuelve esa información.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>If the underlying <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> does not have the base URI, then this property will return an empty string.</source>
          <target state="translated">Si subyacente <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> no tiene el URI base, esta propiedad devolverá una cadena vacía.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>Setting <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> when loading an XML tree will result in slower parsing.</source>
          <target state="translated">Establecer <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> cuando carga un árbol XML dará como resultado un análisis más lento.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>When setting the base URI for an XML tree, LINQ to XML puts an annotation on the root of the tree.</source>
          <target state="translated">Al establecer el URI base para un árbol XML, LINQ to XML coloca una anotación en la raíz del árbol.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>This property is a computed property, and navigates up the tree to find the base URI.</source>
          <target state="translated">Esta propiedad es una propiedad calculada y navega hacia arriba por el árbol para encontrar el URI base.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>The following example loads the base URI and line information as it loads the file.</source>
          <target state="translated">En el ejemplo siguiente se carga la información de URI y línea base cuando se cargue el archivo.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>It then prints the base URI and the line information.</source>
          <target state="translated">A continuación, imprime el URI base y la información de línea.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>This example uses the following XML document: <bpt id="p1">[</bpt>Sample XML File: Typical Purchase Order (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/0606c09f-6e43-4f8d-95c8-e8e2e08d2348)</ept>.</source>
          <target state="translated">En este ejemplo se usa el siguiente documento XML: <bpt id="p1">[</bpt>Archivo XML de ejemplo: Pedido de compra común (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/0606c09f-6e43-4f8d-95c8-e8e2e08d2348)</ept>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.BaseUri">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="E:System.Xml.Linq.XObject.Changed">
          <source>Raised when this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph> or any of its descendants have changed.</source>
          <target state="translated">Se produce cuando este <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph> o cualquiera de sus descendientes ha cambiado.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>Events are raised only when an XML tree is modified, not when it is constructed.</source>
          <target state="translated">Se generan eventos solo cuando se modifica un árbol XML, no cuando se construye.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>This is because you have to add an event handler to an event before you can receive events, and you cannot add an event handler before you have a reference to an <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</source>
          <target state="translated">Esto es porque tiene que agregar un controlador de eventos a un evento antes de poder recibir los eventos y no se puede agregar un controlador de eventos antes de que tenga una referencia a un <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>You cannot get a reference to an <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> before the XML tree is constructed.</source>
          <target state="translated">No se puede obtener una referencia a un <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> antes el XML se construye el árbol.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>This means that during functional construction of an XML tree, you will not receive events.</source>
          <target state="translated">Esto significa que durante la construcción funcional de un árbol XML, no recibirá eventos.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>You should be careful when modifying an XML tree within one of these events, because doing this might lead to unexpected results.</source>
          <target state="translated">Debe tener cuidado al modificar un árbol XML en uno de estos eventos, porque al hacerlo podría conducir a resultados inesperados.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>For example, if you receive a <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> event, and while the event is being processed you remove the node from the tree, you might not receive the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> event.</source>
          <target state="translated">Por ejemplo, si recibe un <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> eventos y mientras se procesa el evento quite el nodo de árbol, es posible que no reciba el <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>When an event is being processed, it is valid to modify an XML tree other than the one that contains the node that is receiving the event; it is even valid to modify the same tree provided the modifications do not affect the specific nodes on which the event was raised.</source>
          <target state="translated">Cuando se procesa un evento, es válido para modificar un árbol XML que no sea el que contiene el nodo que recibe el evento; es válido incluso para modificar el mismo árbol siempre que las modificaciones no afectan a los nodos específicos en los que se generó el evento.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>However, if you modify the area of the tree that contains the node receiving the event, the events that you receive and the impact to the tree are undefined.</source>
          <target state="translated">Sin embargo, si modifica el área del árbol que contiene el nodo que recibe el evento, los eventos que recibe y el impacto en el árbol no están definidos.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>The following example adds an event handler to the root element of an XML tree.</source>
          <target state="translated">En el ejemplo siguiente se agrega un controlador de eventos para el elemento raíz de un árbol XML.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>It then modifies the tree, causing LINQ to XML to raise some events.</source>
          <target state="translated">A continuación, modifica el árbol, haciendo que LINQ to XML provoque algunos eventos.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>Events are useful when you want to maintain some aggregate information in an XML tree.</source>
          <target state="translated">Los eventos resultan útiles cuando desea mantener cierta información de agregado en un árbol XML.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>For example, you may want maintain an invoice total that is the sum of the line items of the invoice.</source>
          <target state="translated">Por ejemplo, quizá desee mantener el total de una factura que es la suma de los conceptos de la factura.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>This example uses events to maintain the total of all of the child elements under the complex element <ph id="ph1">`Items`</ph>.</source>
          <target state="translated">Este ejemplo utiliza eventos para mantener el total de todos los elementos secundarios que se encuentran bajo el elemento complejo <ph id="ph1">`Items`</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changed">
          <source>This code produces the following output:</source>
          <target state="translated">Este código genera el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="E:System.Xml.Linq.XObject.Changing">
          <source>Raised when this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph> or any of its descendants are about to change.</source>
          <target state="translated">Se genera cuando este <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph> o cualquiera de sus descendientes está a punto de cambiar.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changing">
          <source>Events are raised only from modification of an XML tree, not from construction of an XML tree.</source>
          <target state="translated">Se generan eventos solo frente a modificaciones de un árbol XML, no de la construcción de un árbol XML.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changing">
          <source>You have to add an event handler to an event before you can receive events, and you can't add an event handler before you have a reference to an <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</source>
          <target state="translated">Tiene que agregar un controlador de eventos a un evento antes de poder recibir los eventos y no se puede agregar un controlador de eventos antes de que tenga una referencia a un <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changing">
          <source>You can't get a reference to an <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> before the XML tree is constructed.</source>
          <target state="translated">No se puede obtener una referencia a un <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> antes el XML se construye el árbol.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changing">
          <source>This means that during functional construction of an XML tree, you will not receive events.</source>
          <target state="translated">Esto significa que durante la construcción funcional de un árbol XML, no recibirá eventos.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changing">
          <source>You should be careful when modifying an XML tree within one of these events, because doing this might lead to unexpected results.</source>
          <target state="translated">Debe tener cuidado al modificar un árbol XML en uno de estos eventos, porque al hacerlo podría conducir a resultados inesperados.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changing">
          <source>For example, if you receive a <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> event, and while the event is being processed you remove the node from the tree, you might not receive the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> event.</source>
          <target state="translated">Por ejemplo, si recibe un <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> eventos y mientras se procesa el evento quite el nodo de árbol, es posible que no reciba el <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changing">
          <source>When an event is being processed, it is valid to modify an XML tree other than the one that contains the node that is receiving the event; it is even valid to modify the same tree provided the modifications do not affect the specific nodes on which the event was raised.</source>
          <target state="translated">Cuando se procesa un evento, es válido para modificar un árbol XML que no sea el que contiene el nodo que recibe el evento; es válido incluso para modificar el mismo árbol siempre que las modificaciones no afectan a los nodos específicos en los que se generó el evento.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changing">
          <source>However, if you modify the area of the tree that contains the node receiving the event, the events that you receive and the impact to the tree are undefined.</source>
          <target state="translated">Sin embargo, si modifica el área del árbol que contiene el nodo que recibe el evento, los eventos que recibe y el impacto en el árbol no están definidos.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changing">
          <source>The following example adds an event handler to the root element of an XML tree.</source>
          <target state="translated">En el ejemplo siguiente se agrega un controlador de eventos para el elemento raíz de un árbol XML.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changing">
          <source>It then modifies the tree, causing LINQ to XML to raise some events.</source>
          <target state="translated">A continuación, modifica el árbol, haciendo que LINQ to XML provoque algunos eventos.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Linq.XObject.Changing">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XObject.Document">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> for this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> para este objeto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.Document">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> for this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> para <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.Document">
          <source>The following example creates a document with some complex content.</source>
          <target state="translated">En el ejemplo siguiente se crea un documento con algún contenido complejo.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.Document">
          <source>It then uses this property to retrieve the document for the <ph id="ph1">`Child`</ph> element.</source>
          <target state="translated">A continuación, utiliza esta propiedad para recuperar el documento para el <ph id="ph1">`Child`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.Document">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XObject.NodeType">
          <source>Gets the node type for this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Obtiene el tipo de nodo de este <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.NodeType">
          <source>The node type for this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">El tipo de nodo de este <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.NodeType">
          <source>Because all classes that derive from <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contain a <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> property, you can write code that operates on collections of concrete subclass of <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</source>
          <target state="translated">Dado que todas las clases que derivan de <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contienen un <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> propiedad, puede escribir código que funciona en colecciones de subclases concretas de <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.NodeType">
          <source>Your code can then test for the node type of each node in the collection.</source>
          <target state="translated">A continuación, puede probar el código para el tipo de nodo de cada nodo de la colección.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.NodeType">
          <source>The following example uses this method to retrieve the node type for a variety of nodes.</source>
          <target state="translated">En el ejemplo siguiente se usa este método para recuperar el tipo de nodo para una serie de nodos.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.NodeType">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XObject.Parent">
          <source>Gets the parent <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Obtiene el <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> primario de <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.Parent">
          <source>The parent <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> primario de este <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.Parent">
          <source>If this <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> has no parent element, this property returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Si este <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> no tiene ningún elemento primario, esta propiedad devuelve <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.Parent">
          <source>This property returns the parent element, and as children nodes of an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> have no parent element, this property returns <ph id="ph2">`null`</ph> for them.</source>
          <target state="translated">Esta propiedad devuelve el elemento primario y como nodos secundarios de un <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> no tener ningún elemento primario, esta propiedad devuelve <ph id="ph2">`null`</ph> para ellos.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.Parent">
          <source>The following example uses this method.</source>
          <target state="translated">En el ejemplo siguiente se usa este método.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.Parent">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of annotations to remove.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> de las anotaciones que se van a quitar.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)">
          <source>Removes the annotations of the specified type from this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Quita las anotaciones del tipo especificado de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)">
          <source>The following example creates an element with four annotations on it.</source>
          <target state="translated">En el ejemplo siguiente se crea un elemento con cuatro anotaciones en él.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)">
          <source>It then uses this method to remove two of them.</source>
          <target state="translated">A continuación, se usa este método para quitar dos de ellos.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.RemoveAnnotations``1">
          <source>The type of annotations to remove.</source>
          <target state="translated">El tipo de las anotaciones que se van a quitar.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.RemoveAnnotations``1">
          <source>Removes the annotations of the specified type from this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Quita las anotaciones del tipo especificado de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.RemoveAnnotations``1">
          <source>The following example creates an element with four annotations on it.</source>
          <target state="translated">En el ejemplo siguiente se crea un elemento con cuatro anotaciones en él.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.RemoveAnnotations``1">
          <source>It then uses this method to remove two of them.</source>
          <target state="translated">A continuación, se usa este método para quitar dos de ellos.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.RemoveAnnotations``1">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo">
          <source>Gets a value indicating whether or not this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph> has line information.</source>
          <target state="translated">Obtiene un valor que indica si <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph> tiene información de línea o no.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph> has line information, otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph> tiene información de línea, de lo contrario <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo">
          <source>You can call this method to determine whether the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contains valid line information.</source>
          <target state="translated">Puede llamar a este método para determinar si el <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contiene información de línea válido.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo">
          <source>This method is an explicit interface member implementation of a method in the <ph id="ph1">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph> interface, so in order to call this method, it is necessary to cast to <ph id="ph2">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph>.</source>
          <target state="translated">Este método es una implementación de miembro de interfaz explícita de un método en el <ph id="ph1">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph> interfaz, por lo que para poder llamar a este método, es necesario convertir explícitamente a <ph id="ph2">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo">
          <source>This example loads a small XML tree from a file, setting the options to set base URI and retain line information.</source>
          <target state="translated">En este ejemplo se carga un árbol XML pequeño desde un archivo, y establece las opciones para establecer el URI base y conservar la información de línea.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo">
          <source>It then adds another element that does not have line information.</source>
          <target state="translated">A continuación, agrega otro elemento que no tiene información de línea.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo">
          <source>It then prints the line information for each element in the tree.</source>
          <target state="translated">A continuación, imprime la información de línea para cada elemento en el árbol.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber">
          <source>Gets the line number that the underlying <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> reported for this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Obtiene el número de línea del que el <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> subyacente informó para este <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that contains the line number reported by the <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> for this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> que contiene el número de línea del que el <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> informó para este <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber">
          <source>This method is an explicit interface member implementation of a method in the <ph id="ph1">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph> interface, so in order to call this method, it is necessary to cast to <ph id="ph2">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph>.</source>
          <target state="translated">Este método es una implementación de miembro de interfaz explícita de un método en el <ph id="ph1">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph> interfaz, por lo que para poder llamar a este método, es necesario convertir explícitamente a <ph id="ph2">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber">
          <source>This example loads a small XML tree from a file, setting the options to set base URI and retain line information.</source>
          <target state="translated">En este ejemplo se carga un árbol XML pequeño desde un archivo, y establece las opciones para establecer el URI base y conservar la información de línea.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber">
          <source>It then adds another element that does not have line information.</source>
          <target state="translated">A continuación, agrega otro elemento que no tiene información de línea.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber">
          <source>It then prints the line information for each element in the tree.</source>
          <target state="translated">A continuación, imprime la información de línea para cada elemento en el árbol.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition">
          <source>Gets the line position that the underlying <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> reported for this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Obtiene la posición de línea de la que el <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> subyacente informó para este <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that contains the line position reported by the <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> for this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> que contiene la posición de línea de la que <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> informó para este <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition">
          <source>This method is an explicit interface member implementation of a method in the <ph id="ph1">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph> interface, so in order to call this method, it is necessary to cast to <ph id="ph2">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph>.</source>
          <target state="translated">Este método es una implementación de miembro de interfaz explícita de un método en el <ph id="ph1">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph> interfaz, por lo que para poder llamar a este método, es necesario convertir explícitamente a <ph id="ph2">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition">
          <source>This example loads a small XML tree from a file, setting the options to set base URI and retain line information.</source>
          <target state="translated">En este ejemplo se carga un árbol XML pequeño desde un archivo, y establece las opciones para establecer el URI base y conservar la información de línea.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition">
          <source>It then adds another element that does not have line information.</source>
          <target state="translated">A continuación, agrega otro elemento que no tiene información de línea.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition">
          <source>It then prints the line information for each element in the tree.</source>
          <target state="translated">A continuación, imprime la información de línea para cada elemento en el árbol.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>