<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XAttribute.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57c3ca0b79ae2d94d785e52a83f69cedfb7271085.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c3ca0b79ae2d94d785e52a83f69cedfb7271085</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XAttribute">
          <source>Represents an XML attribute.</source>
          <target state="translated">Representa un atributo XML.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>An XML attribute is a name/value pair associated with an XML element.</source>
          <target state="translated">Un atributo XML es un par de nombre/valor asociado a un elemento XML.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>Each <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> contains a list of the attributes for that element.</source>
          <target state="translated">Cada <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> contiene una lista de los atributos de dicho elemento.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>Attributes must have a qualified name that is unique to the element.</source>
          <target state="translated">Atributos deben tener un nombre completo que sea único en el elemento.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>Attributes are not derived from <ph id="ph1">&lt;xref:System.Xml.Linq.XNode&gt;</ph>; they are not nodes in the XML tree.</source>
          <target state="translated">Atributos no se derivan de <ph id="ph1">&lt;xref:System.Xml.Linq.XNode&gt;</ph>; no son nodos en el árbol XML.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>Instead, they are simply name/value pairs associated with an element.</source>
          <target state="translated">En su lugar, son simplemente los pares de nombre/valor asociados a un elemento.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>Attributes are maintained in the XML tree in the order that they were added to the element.</source>
          <target state="translated">Los atributos se mantienen en el árbol XML en el orden en que se agregaron al elemento.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>When a collection of attributes is returned by <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Attributes%2A&gt;</ph>, they are returned in the order that they were added to the element, and are not sorted.</source>
          <target state="translated">Cuando se devuelve una colección de atributos por <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Attributes%2A&gt;</ph>, se devuelven en el orden en que se agregaron al elemento y no están ordenados.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>Technically, in XML, namespace declarations are not attributes proper.</source>
          <target state="translated">Técnicamente, en XML, las declaraciones de espacio de nombres no son atributos propiamente dichos.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>However, this distinction is not normally made by many XML programmers.</source>
          <target state="translated">Sin embargo, muchos programadores XML no realizan normalmente esta distinción.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>Instead, because namespace declarations have exactly the same XML syntax as attributes, most XML programmers think of namespaces as attributes.</source>
          <target state="translated">En su lugar, dado que las declaraciones de espacio de nombres tienen exactamente la misma sintaxis XML como atributos, la mayoría de los programadores XML de reflexión de espacios de nombres como atributos.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>To simplify the <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> programming interface, namespaces are represented in the XML tree as attributes.</source>
          <target state="translated">Para simplificar la <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> interfaz de programación, los espacios de nombres se representan en el árbol XML como atributos.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>Such namespace attributes impact serialization of an XML tree.</source>
          <target state="translated">Estos atributos de espacio de nombres influyen en la serialización de un árbol XML.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>When serializing, <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> attempts to serialize with the namespace prefix specified in namespace attributes.</source>
          <target state="translated">Al serializar, <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> intenta serializar con el prefijo de espacio de nombres especificado en los atributos de espacio de nombres.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>You can use the <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute.IsNamespaceDeclaration%2A&gt;</ph> to determine if an attribute is really a namespace declaration.</source>
          <target state="translated">Puede usar el <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute.IsNamespaceDeclaration%2A&gt;</ph> para determinar si un atributo no es realmente una declaración de espacio de nombres.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> class derives from <ph id="ph2">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</source>
          <target state="translated">La clase <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> se deriva de <ph id="ph2">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>You can add annotations to attributes, and observe events for them.</source>
          <target state="translated">Puede agregar anotaciones a los atributos y observar los eventos para ellos.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>Some <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> methods can be used from XAML.</source>
          <target state="translated">Algunos <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> métodos pueden usarse desde XAML.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>LINQ to XML Dynamic Properties<ept id="p1">](http://msdn.microsoft.com/library/0455f47c-4a68-4f2e-a3f8-dd1d85b99012)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>Propiedades dinámicas de LINQ to XML<ept id="p1">](http://msdn.microsoft.com/library/0455f47c-4a68-4f2e-a3f8-dd1d85b99012)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> object to copy from.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> desde el que se va a copiar.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> class from another <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> object.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> desde otro objeto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)">
          <source>This constructor is primarily used internally when making a deep copy of an XML tree.</source>
          <target state="translated">Este constructor se usa principalmente al realizar una copia en profundidad de un árbol XML.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)">
          <source>This example demonstrates that creating a deep copy of an XML tree creates a copy, not a clone, of an attribute in the tree.</source>
          <target state="translated">En este ejemplo se muestra que al crear una copia en profundidad de un árbol XML crea una copia, no un clon de un atributo en el árbol.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)">
          <source>The <ph id="ph1">&lt;paramref name="other" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="other" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> of the attribute.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> del atributo.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> containing the value of the attribute.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que contiene el valor del atributo.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> class from the specified name and value.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> a partir del nombre y el valor especificados.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>There is an implicit conversion from string to <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">Hay una conversión implícita de cadena a <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>Typical use of this constructor is to specify a string as the first parameter instead of creating a new <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>, as follows:</source>
          <target state="translated">Uso típico de este constructor es especificar una cadena como primer parámetro en lugar de crear un nuevo <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>, como se indica a continuación:</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>You can also use the addition operator overload with an <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> and a string to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph>, as follows:</source>
          <target state="translated">También puede utilizar la sobrecarga del operador de suma con un <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> y una cadena para crear un <ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph>, como se indica a continuación:</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>trabajar con espacios de nombres XML<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>These same approaches will work for Visual Basic, however XML literals provide a better approach for creating XML trees.</source>
          <target state="translated">Estos mismos enfoques funcionarán para Visual Basic, sin embargo, los literales XML proporcionan un mejor enfoque para crear árboles XML.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>The <ph id="ph1">`value`</ph> parameter can be a <ph id="ph2">&lt;xref:System.String&gt;</ph>, <ph id="ph3">`double`</ph>, <ph id="ph4">`float`</ph>, <ph id="ph5">`decimal`</ph>, <ph id="ph6">`bool`</ph>, <ph id="ph7">&lt;xref:System.DateTime&gt;</ph>, or <ph id="ph8">&lt;xref:System.TimeSpan&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">`value`</ph> parámetro puede ser un <ph id="ph2">&lt;xref:System.String&gt;</ph>, <ph id="ph3">`double`</ph>, <ph id="ph4">`float`</ph>, <ph id="ph5">`decimal`</ph>, <ph id="ph6">`bool`</ph>, <ph id="ph7">&lt;xref:System.DateTime&gt;</ph>, o <ph id="ph8">&lt;xref:System.TimeSpan&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>If the value is a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> or <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph>, the value of the attribute is formatted correctly per the W3C specifications.</source>
          <target state="translated">Si el valor es un <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> o <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph>, el valor del atributo tiene el formato correcto según las especificaciones de W3C.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>The following example uses this constructor to create attributes.</source>
          <target state="translated">En el ejemplo siguiente se utiliza este constructor para crear atributos.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>It passes strings as the first argument to the <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> constructor, which are then implicitly converted to <ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph> objects.</source>
          <target state="translated">Pasa las cadenas como primer argumento de la <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> constructor, que, a continuación, se convierten implícitamente a <ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>The attributes are added to an element.</source>
          <target state="translated">Los atributos se agregan a un elemento.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="name" /&gt;</ph> o <ph id="ph2">&lt;paramref name="value" /&gt;</ph> es <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XAttribute.EmptySequence">
          <source>Gets an empty collection of attributes.</source>
          <target state="translated">Obtiene una colección de atributos vacía.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.EmptySequence">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> containing an empty collection.</source>
          <target state="translated">Interfaz <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que contiene una colección vacía.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.EmptySequence">
          <source>This property is typically used by class implementers when writing a method that returns a collection of attributes.</source>
          <target state="translated">Esta propiedad se usa normalmente en los implementadores de clases al escribir un método que devuelve una colección de atributos.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.EmptySequence">
          <source>If the method needs to return an empty collection of attributes, it could use this property to get an empty collection of <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> objects.</source>
          <target state="translated">Si el método debe devolver una colección de atributos vacía, que podría usar esta propiedad para obtener una colección vacía de <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
          <source>Determines if this attribute is a namespace declaration.</source>
          <target state="translated">Determina si este atributo es una declaración de espacio de nombres.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this attribute is a namespace declaration; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si este atributo es una declaración de espacio de nombres; de lo contrario <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
          <source>Technically, in XML, namespace declarations are not attributes proper.</source>
          <target state="translated">Técnicamente, en XML, las declaraciones de espacio de nombres no son atributos propiamente dichos.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
          <source>However, this distinction is not normally made by most XML programmers.</source>
          <target state="translated">Sin embargo, la mayoría de los programadores XML no realizan normalmente esta distinción.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
          <source>Instead, because namespace declarations have exactly the same syntax as attributes, most XML programmers think of namespaces as attributes.</source>
          <target state="translated">En su lugar, dado que las declaraciones de espacio de nombres tienen exactamente la misma sintaxis que los atributos, la mayoría de los programadores XML de reflexión de espacios de nombres como atributos.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
          <source>To simplify the <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> programming interface, namespaces are represented in the XML tree as attributes.</source>
          <target state="translated">Para simplificar la <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> interfaz de programación, los espacios de nombres se representan en el árbol XML como atributos.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
          <source>You can use this property to determine if a particular <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> attribute is really a namespace declaration.</source>
          <target state="translated">Puede utilizar esta propiedad para determinar si una determinada <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> atributo realmente es una declaración de espacio de nombres.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
          <source>The following example creates an attribute that is a namespace declaration and an attribute that is not.</source>
          <target state="translated">En el ejemplo siguiente se crea un atributo que es una declaración de espacio de nombres y un atributo que no está.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
          <source>It then uses this property to display whether each attribute is a namespace declaration or not.</source>
          <target state="translated">A continuación, se usa esta propiedad para mostrar si cada atributo es una declaración de espacio de nombres o no.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XAttribute.Name">
          <source>Gets the expanded name of this attribute.</source>
          <target state="translated">Obtiene el nombre expandido de este atributo.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Name">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> containing the name of this attribute.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> que contiene el nombre de este atributo.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Name">
          <source>The expanded name returned by this property is in the form of <ph id="ph1">`{namespace}localname`</ph>.</source>
          <target state="translated">El nombre expandido devuelto por esta propiedad es en forma de <ph id="ph1">`{namespace}localname`</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Name">
          <source>The following example creates an element with three attributes.</source>
          <target state="translated">En el ejemplo siguiente se crea un elemento con tres atributos.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Name">
          <source>It then uses this property to print out the name of each attribute.</source>
          <target state="translated">A continuación, se usa esta propiedad para imprimir el nombre de cada atributo.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Name">
          <source>The example also shows creation of a new attribute using the name of an existing attribute.</source>
          <target state="translated">El ejemplo también muestra la creación de un nuevo atributo con el nombre de un atributo existente.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Name">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XAttribute.NextAttribute">
          <source>Gets the next attribute of the parent element.</source>
          <target state="translated">Obtiene el atributo siguiente del elemento primario.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.NextAttribute">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> containing the next attribute of the parent element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que contiene el atributo siguiente del elemento primario.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.NextAttribute">
          <source>Attributes are maintained in the XML tree in the order that they were added to the element.</source>
          <target state="translated">Los atributos se mantienen en el árbol XML en el orden en que se agregaron al elemento.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.NextAttribute">
          <source>When a collection of attributes is returned by <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Attributes%2A&gt;</ph>, they are returned in the order that they were added, and are not sorted.</source>
          <target state="translated">Cuando se devuelve una colección de atributos por <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Attributes%2A&gt;</ph>, se devuelven en el orden en que se han agregado y no están ordenados.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.NextAttribute">
          <source>When you request the next attribute through this property, this property returns the attribute that was added after this attribute.</source>
          <target state="translated">Cuando se solicita el atributo siguiente a través de esta propiedad, esta propiedad devuelve el atributo que se agregó después de este atributo.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.NextAttribute">
          <source>If this attribute does not have a parent, or if there is no next attribute, then this property returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Si este atributo no tiene un elemento primario, o si no hay ningún atributo siguiente, esta propiedad devuelve <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.NextAttribute">
          <source>The following example shows how to iterate through the attributes of an element using this property.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo recorrer en iteración los atributos de un elemento mediante esta propiedad.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.NextAttribute">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XAttribute.NodeType">
          <source>Gets the node type for this node.</source>
          <target state="translated">Obtiene el tipo de nodo de este nodo.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.NodeType">
          <source>The node type.</source>
          <target state="translated">Tipo de nodo.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.NodeType">
          <source>For <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> objects, this value is <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.Attribute" /&gt;</ph>.</source>
          <target state="translated">Para los objetos <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>, este valor es <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.NodeType">
          <source>Because all classes that derive from <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contain a <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> property, you can write code that operates on collections of concrete subclass of <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</source>
          <target state="translated">Dado que todas las clases que derivan de <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contienen un <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> propiedad, puede escribir código que funciona en colecciones de subclases concretas de <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.NodeType">
          <source>Your code can then test for the node type of each node in the collection.</source>
          <target state="translated">A continuación, puede probar el código para el tipo de nodo de cada nodo de la colección.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.NodeType">
          <source>The following example creates an attribute, and then displays the node type using this property.</source>
          <target state="translated">En el ejemplo siguiente se crea un atributo y, a continuación, muestra el tipo de nodo con esta propiedad.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.NodeType">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que se va a convertir en <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">Convierte el valor de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> en <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> con el contenido de este objeto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean">
          <source>When converting to <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> from an attribute or element, allowed values are "0", "1", and any string that produces "true" or "false" after trimming and conversion to lower case.</source>
          <target state="translated">Al convertir a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> de un atributo o elemento, valores permitidos son "0", "1" y cualquier cadena que genera "true" o "false" después del recorte y la conversión a minúsculas.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean">
          <source>The following example creates an attribute with a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value, then casts it to <ph id="ph2">&lt;xref:System.Boolean&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se crea un atributo con un <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> valor, a continuación, lo convierte a <ph id="ph2">&lt;xref:System.Boolean&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value.</source>
          <target state="translated">El atributo no contiene un valor <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean">
          <source>The <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que se va a convertir en <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph>.</source>
          <target state="translated">Convierte el valor de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> en <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>A <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> con el contenido de este objeto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>The value space of an attribute or element that contains date and time content is closely related to the dates and times described in ISO 8601.</source>
          <target state="translated">El espacio del valor de un atributo o elemento que contiene el contenido de fecha y hora está estrechamente relacionado con las fechas y horas descritas en ISO 8601.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>When creating an attribute or element that contains date and time content, the attribute or element values are formatted per the W3C specification.</source>
          <target state="translated">Al crear un atributo o elemento que contiene el contenido de fecha y hora, se da formato a los valores de atributo o elemento en la especificación W3C.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>See the W3C specification for more details.</source>
          <target state="translated">Vea la especificación W3C para obtener más detalles.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>Behavior is lax when casting to a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> from an attribute or element.</source>
          <target state="translated">Comportamiento es poco estricto al convertir a un <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> de un atributo o elemento.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph>.</source>
          <target state="translated">Incluso si el valor de atributo o elemento no tiene el formato exactamente como se describe la especificación W3C, el valor se convierte correctamente en un <ph id="ph1">&lt;xref:System.DateTime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>This conversion operator uses <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph> to convert from a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</source>
          <target state="translated">Este operador de conversión usa <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph> para convertir de un <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>The following example creates an attribute with date and time content.</source>
          <target state="translated">En el ejemplo siguiente se crea un atributo con contenido de fecha y hora.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>It then casts it to <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> to retrieve the value.</source>
          <target state="translated">A continuación, convierte a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> para recuperar el valor.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> value.</source>
          <target state="translated">El atributo no contiene un valor <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>The <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que se va a convertir en <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</source>
          <target state="translated">Convierte el valor de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> en <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
          <source>A <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> con el contenido de este objeto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
          <source>This conversion operator uses the <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> class to do the conversion.</source>
          <target state="translated">Este operador de conversión usa la <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> clase para realizar la conversión.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
          <source>The following example creates an attribute with date and time content.</source>
          <target state="translated">En el ejemplo siguiente se crea un atributo con contenido de fecha y hora.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
          <source>It then casts it to <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> to retrieve the value.</source>
          <target state="translated">A continuación, convierte a <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> para recuperar el valor.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> value.</source>
          <target state="translated">El atributo no contiene un valor <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
          <source>The <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que se va a convertir en <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Convierte el valor de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> en <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal">
          <source>A <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> con el contenido de este objeto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal">
          <source>The following example creates an attribute with a decimal value.</source>
          <target state="translated">En el ejemplo siguiente se crea un atributo con un valor decimal.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal">
          <source>It then retrieves the value of the attribute by casting to <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>.</source>
          <target state="translated">A continuación, recupera el valor del atributo mediante la conversión a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">El atributo no contiene un valor <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal">
          <source>The <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que se va a convertir en <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">Convierte el valor de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> en <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> con el contenido de este objeto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double">
          <source>The following example creates an attribute with <ph id="ph1">&lt;xref:System.Double&gt;</ph> content.</source>
          <target state="translated">En el ejemplo siguiente se crea un atributo con <ph id="ph1">&lt;xref:System.Double&gt;</ph> contenido.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">A continuación, recupera el valor mediante la conversión a <ph id="ph1">&lt;xref:System.Double&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">El atributo no contiene un valor <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double">
          <source>The <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que se va a convertir en <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">Convierte el valor de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> en <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid">
          <source>A <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> con el contenido de este objeto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid">
          <source>The following example creates an attribute with a GUID as content.</source>
          <target state="translated">En el ejemplo siguiente se crea un atributo con un GUID como contenido.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Guid&gt;</ph>.</source>
          <target state="translated">A continuación, recupera el valor mediante la conversión a <ph id="ph1">&lt;xref:System.Guid&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> value.</source>
          <target state="translated">El atributo no contiene un valor <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid">
          <source>The <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que se va a convertir en <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">Convierte el valor de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> en <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> con el contenido de este objeto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32">
          <source>The following example creates an attribute with an integer as content.</source>
          <target state="translated">En el ejemplo siguiente se crea un atributo con un entero como contenido.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Int32&gt;</ph>.</source>
          <target state="translated">A continuación, recupera el valor mediante la conversión a <ph id="ph1">&lt;xref:System.Int32&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value.</source>
          <target state="translated">El atributo no contiene un valor <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32">
          <source>The <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que se va a convertir en <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated">Convierte el valor de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> en <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> con el contenido de este objeto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64">
          <source>The following example creates an attribute with a long integer as content.</source>
          <target state="translated">En el ejemplo siguiente se crea un atributo con un entero largo como contenido.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64">
          <source>It then retrieves the value of the attribute by casting to <ph id="ph1">&lt;xref:System.Int64&gt;</ph>.</source>
          <target state="translated">A continuación, recupera el valor del atributo mediante la conversión a <ph id="ph1">&lt;xref:System.Int64&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> value.</source>
          <target state="translated">El atributo no contiene un valor <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64">
          <source>The <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que se va a convertir en <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> se convierte en un objeto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph> que incluye el contenido de este <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}">
          <source>When converting to <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> from an attribute or element, allowed values are "0", "1", and any string that produces "true" or "false" after trimming and conversion to lower case.</source>
          <target state="translated">Al convertir a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> de un atributo o elemento, valores permitidos son "0", "1" y cualquier cadena que genera "true" o "false" después del recorte y la conversión a minúsculas.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}">
          <source>The following example creates an attribute with Boolean content.</source>
          <target state="translated">En el ejemplo siguiente se crea un atributo con contenido booleano.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Boolean&gt;</ph>.</source>
          <target state="translated">A continuación, recupera el valor mediante la conversión a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> de <ph id="ph2">&lt;xref:System.Boolean&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value.</source>
          <target state="translated">El atributo no contiene un valor <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.DateTime" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que se va a convertir en <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.DateTime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.DateTime" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> se convierte en un objeto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.DateTime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> que incluye el contenido de este <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
          <source>The value space of an attribute or element that contains date and time content is closely related to the dates and times described in ISO 8601.</source>
          <target state="translated">El espacio del valor de un atributo o elemento que contiene el contenido de fecha y hora está estrechamente relacionado con las fechas y horas descritas en ISO 8601.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
          <source>When creating an attribute or element that contains date and time content, the attribute or element values are formatted per the W3C specification.</source>
          <target state="translated">Al crear un atributo o elemento que contiene el contenido de fecha y hora, se da formato a los valores de atributo o elemento en la especificación W3C.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
          <source>See the W3C specification for more details.</source>
          <target state="translated">Vea la especificación W3C para obtener más detalles.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
          <source>Behavior is lax when casting to a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> from an attribute or element.</source>
          <target state="translated">Comportamiento es poco estricto al convertir a un <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> de <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> de un atributo o elemento.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
          <source>Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</source>
          <target state="translated">Incluso si el valor de atributo o elemento no tiene el formato exactamente como se describe la especificación W3C, el valor se convierte correctamente en un <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> de <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
          <source>This conversion operator uses <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph> to convert from a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</source>
          <target state="translated">Este operador de conversión usa <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph> para convertir de un <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
          <source>The following example creates an attribute with a date and time as content.</source>
          <target state="translated">En el ejemplo siguiente se crea un atributo con una fecha y hora como contenido.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</source>
          <target state="translated">A continuación, recupera el valor mediante la conversión a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> de <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> value.</source>
          <target state="translated">El atributo no contiene un valor <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que se va a convertir en <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> se convierte en un objeto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> que incluye el contenido de este <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}">
          <source>This conversion operator uses the <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> class to do the conversion.</source>
          <target state="translated">Este operador de conversión usa la <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> clase para realizar la conversión.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}">
          <source>The following example creates an attribute with a date and time as content.</source>
          <target state="translated">En el ejemplo siguiente se crea un atributo con una fecha y hora como contenido.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph>.</source>
          <target state="translated">A continuación, recupera el valor mediante la conversión a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> de <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> value.</source>
          <target state="translated">El atributo no contiene un valor <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que se va a convertir en <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> se convierte en un objeto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> que incluye el contenido de este <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}">
          <source>The following example creates an attribute with decimal content.</source>
          <target state="translated">En el ejemplo siguiente se crea un atributo con contenido decimal.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Decimal&gt;</ph>.</source>
          <target state="translated">A continuación, recupera el valor mediante la conversión a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> de <ph id="ph2">&lt;xref:System.Decimal&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">El atributo no contiene un valor <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que se va a convertir en <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.Double" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> se convierte en un objeto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.Double" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> que incluye el contenido de este <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}">
          <source>The following example creates an attribute with double precision floating point content.</source>
          <target state="translated">En el ejemplo siguiente se crea un atributo con contenido en punto flotante de precisión doble.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">A continuación, recupera el valor mediante la conversión a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> de <ph id="ph2">&lt;xref:System.Double&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">El atributo no contiene un valor <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que se va a convertir en <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.Guid" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> se convierte en un objeto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.Guid" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph> que incluye el contenido de este <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}">
          <source>The following example creates an attribute with guid content.</source>
          <target state="translated">En el ejemplo siguiente se crea un atributo con contenido de guid.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Guid&gt;</ph>.</source>
          <target state="translated">A continuación, recupera el valor mediante la conversión a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> de <ph id="ph2">&lt;xref:System.Guid&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> value.</source>
          <target state="translated">El atributo no contiene un valor <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que se va a convertir en <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> se convierte en un objeto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph> que incluye el contenido de este <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}">
          <source>The following example creates an attribute with integer content.</source>
          <target state="translated">En el ejemplo siguiente se crea un atributo con contenido de entero.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Int32&gt;</ph>.</source>
          <target state="translated">A continuación, recupera el valor mediante la conversión a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> de <ph id="ph2">&lt;xref:System.Int32&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que se va a convertir en <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.Int64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> se convierte en un objeto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.Int64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph> que incluye el contenido de este <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}">
          <source>The following example creates an attribute with long integer content.</source>
          <target state="translated">En el ejemplo siguiente se crea un atributo con contenido de entero largo.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Int64&gt;</ph>.</source>
          <target state="translated">A continuación, recupera el valor mediante la conversión a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> de <ph id="ph2">&lt;xref:System.Int64&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> value.</source>
          <target state="translated">El atributo no contiene un valor <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que se va a convertir en <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.Single" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> se convierte en un objeto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.Single" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> que incluye el contenido de este <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}">
          <source>The following example creates an attribute with single precision floating point content.</source>
          <target state="translated">En el ejemplo siguiente se crea un atributo con contenido en punto flotante de precisión simple.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Single&gt;</ph>.</source>
          <target state="translated">A continuación, recupera el valor mediante la conversión a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> de <ph id="ph2">&lt;xref:System.Single&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value.</source>
          <target state="translated">El atributo no contiene un valor <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.TimeSpan" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que se va a convertir en <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.TimeSpan" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.TimeSpan" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> se convierte en un objeto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.TimeSpan" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> que incluye el contenido de este <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
          <source>The value space of an attribute or element that contains time span content is closely related to duration content as described in ISO 8601.</source>
          <target state="translated">El espacio del valor de un atributo o elemento que contiene el contenido del intervalo de tiempo está estrechamente relacionado con el contenido de duración como se describe en ISO 8601.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
          <source>When creating an attribute or element that contains time span content, the attribute or element values are formatted per the W3C specification.</source>
          <target state="translated">Al crear un atributo o elemento que contiene el contenido del intervalo de tiempo, se da formato a los valores de atributo o elemento en la especificación W3C.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
          <source>Please see the W3C specification for more details.</source>
          <target state="translated">Vea la especificación W3C para obtener más detalles.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
          <source>Behavior is lax when casting to a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> from an attribute or element.</source>
          <target state="translated">Comportamiento es poco estricto al convertir a un <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> de <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> de un atributo o elemento.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
          <source>Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph>.</source>
          <target state="translated">Incluso si el valor de atributo o elemento no tiene el formato exactamente como se describe la especificación W3C, el valor se convierte correctamente en un <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> de <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
          <source>The following example creates an attribute with time span content.</source>
          <target state="translated">En el ejemplo siguiente se crea un atributo con el intervalo de tiempo de contenido.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph>.</source>
          <target state="translated">A continuación, recupera el valor mediante la conversión a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> de <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> value.</source>
          <target state="translated">El atributo no contiene un valor <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.UInt32" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que se va a convertir en <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.UInt32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.UInt32" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> se convierte en un objeto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.UInt32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph> que incluye el contenido de este <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}">
          <source>The following example creates an attribute with unsigned integer content.</source>
          <target state="translated">En el ejemplo siguiente se crea un atributo con contenido de entero sin signo.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.UInt32&gt;</ph>.</source>
          <target state="translated">A continuación, recupera el valor mediante la conversión a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> de <ph id="ph2">&lt;xref:System.UInt32&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> value.</source>
          <target state="translated">El atributo no contiene un valor <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que se va a convertir en <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.UInt64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> se convierte en un objeto <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.UInt64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph> que incluye el contenido de este <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}">
          <source>The following example creates an attribute with unsigned long integer content.</source>
          <target state="translated">En el ejemplo siguiente se crea un atributo con contenido de entero largo sin signo.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.UInt64&gt;</ph>.</source>
          <target state="translated">A continuación, recupera el valor mediante la conversión a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> de <ph id="ph2">&lt;xref:System.UInt64&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> value.</source>
          <target state="translated">El atributo no contiene un valor <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que se va a convertir en <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated">Convierte el valor de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> en <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single">
          <source>A <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> con el contenido de este objeto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single">
          <source>The following example creates an attribute with single precision floating point content.</source>
          <target state="translated">En el ejemplo siguiente se crea un atributo con contenido en punto flotante de precisión simple.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Single&gt;</ph>.</source>
          <target state="translated">A continuación, recupera el valor mediante la conversión a <ph id="ph1">&lt;xref:System.Single&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value.</source>
          <target state="translated">El atributo no contiene un valor <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single">
          <source>The <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que se va a convertir en <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Convierte el valor de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> en <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> con el contenido de este objeto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String">
          <source>The following example creates an attribute with string content.</source>
          <target state="translated">En el ejemplo siguiente se crea un atributo con contenido de la cadena.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">A continuación, recupera el valor mediante la conversión a <ph id="ph1">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que se va a convertir en <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph>.</source>
          <target state="translated">Convierte el valor de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> en <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> con el contenido de este objeto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
          <source>The value space of an attribute or element that contains time span content is closely related to duration content as described in ISO 8601.</source>
          <target state="translated">El espacio del valor de un atributo o elemento que contiene el contenido del intervalo de tiempo está estrechamente relacionado con el contenido de duración como se describe en ISO 8601.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
          <source>When creating an attribute or element that contains time span content, the attribute or element values are formatted per the W3C specification.</source>
          <target state="translated">Al crear un atributo o elemento que contiene el contenido del intervalo de tiempo, se da formato a los valores de atributo o elemento en la especificación W3C.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
          <source>Please see the W3C specification for more details.</source>
          <target state="translated">Vea la especificación W3C para obtener más detalles.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
          <source>Behavior is lax when casting to a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> from an attribute or element.</source>
          <target state="translated">Comportamiento es poco estricto al convertir a un <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> de un atributo o elemento.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
          <source>Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph>.</source>
          <target state="translated">Incluso si el valor de atributo o elemento no tiene el formato exactamente como se describe la especificación W3C, el valor se convierte correctamente en un <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
          <source>The following example creates an attribute with time span content.</source>
          <target state="translated">En el ejemplo siguiente se crea un atributo con el intervalo de tiempo de contenido.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph>.</source>
          <target state="translated">A continuación, recupera el valor mediante la conversión a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> value.</source>
          <target state="translated">El atributo no contiene un valor <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
          <source>The <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que se va a convertir en <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph>.</source>
          <target state="translated">Convierte el valor de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> en <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32">
          <source>A <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> con el contenido de este objeto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32">
          <source>The following example creates an attribute with unsigned integer content.</source>
          <target state="translated">En el ejemplo siguiente se crea un atributo con contenido de entero sin signo.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.UInt32&gt;</ph>.</source>
          <target state="translated">A continuación, recupera el valor mediante la conversión a <ph id="ph1">&lt;xref:System.UInt32&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> value.</source>
          <target state="translated">El atributo no contiene un valor <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32">
          <source>The <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que se va a convertir en <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated">Convierte el valor de <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> en <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64">
          <source>A <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> con el contenido de este objeto <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64">
          <source>The following example creates an attribute with unsigned long integer content.</source>
          <target state="translated">En el ejemplo siguiente se crea un atributo con contenido de entero largo sin signo.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.UInt64&gt;</ph>.</source>
          <target state="translated">A continuación, recupera el valor mediante la conversión a <ph id="ph1">&lt;xref:System.UInt64&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> value.</source>
          <target state="translated">El atributo no contiene un valor <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64">
          <source>The <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XAttribute.PreviousAttribute">
          <source>Gets the previous attribute of the parent element.</source>
          <target state="translated">Obtiene el atributo anterior del elemento primario.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.PreviousAttribute">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> containing the previous attribute of the parent element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> que contiene el atributo anterior del elemento primario.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.PreviousAttribute">
          <source>Attributes are maintained in the XML tree in the order that they were added to the element.</source>
          <target state="translated">Los atributos se mantienen en el árbol XML en el orden en que se agregaron al elemento.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.PreviousAttribute">
          <source>When a collection of attributes is returned by <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Attributes%2A&gt;</ph>, they are returned in the order that they were added, and are not sorted.</source>
          <target state="translated">Cuando se devuelve una colección de atributos por <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Attributes%2A&gt;</ph>, se devuelven en el orden en que se han agregado y no están ordenados.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.PreviousAttribute">
          <source>When you request the previous attribute through this property, this property returns the attribute that was added before this attribute.</source>
          <target state="translated">Cuando se solicita el atributo anterior mediante esta propiedad, esta propiedad devuelve el atributo que se ha agregado antes de este atributo.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.PreviousAttribute">
          <source>If this attribute does not have a parent, or if this attribute is the first attribute, then this property returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Si este atributo no tiene un elemento primario, o si este atributo es el primer atributo, esta propiedad devuelve <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.PreviousAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> class stores its attributes as a singly-linked list of <ph id="ph2">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> objects.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> clase almacena sus atributos como una lista vinculada individualmente de <ph id="ph2">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.PreviousAttribute">
          <source>This means that the <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute.PreviousAttribute%2A&gt;</ph> property must traverse the list of attributes that belong to the element.</source>
          <target state="translated">Esto significa que el <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute.PreviousAttribute%2A&gt;</ph> propiedad debe recorrer la lista de atributos que pertenecen al elemento.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.PreviousAttribute">
          <source>Therefore, using this property might affect your performance.</source>
          <target state="translated">Por lo tanto, uso de esta propiedad podría afectar a su rendimiento.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.PreviousAttribute">
          <source>The following example shows how to iterate through the attributes of an element using this property.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo recorrer en iteración los atributos de un elemento mediante esta propiedad.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.PreviousAttribute">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>Removes this attribute from its parent element.</source>
          <target state="translated">Quita este atributo de su elemento primario.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>You can use this method to modify an XML tree.</source>
          <target state="translated">Puede usar este método para modificar un árbol XML.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>This method will cause events to occur.</source>
          <target state="translated">Este método hará que se producen eventos.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>There are many scenarios in which you might want to remove a set of attributes.</source>
          <target state="translated">Hay muchos escenarios en los que podría querer quitar un conjunto de atributos.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>In <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> programming, you should not manipulate or modify a set of nodes while you are querying for nodes in that set.</source>
          <target state="translated">En <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> de programación, no debe manipular o modificar un conjunto de nodos mientras esté consultando los nodos de ese conjunto.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>In practical terms, this means that you should not iterate over a set of attributes and remove them.</source>
          <target state="translated">En la práctica, esto significa que no debe recorrer en iteración un conjunto de atributos y quitarlos.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>Instead, you should materialize them into a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> using the <ph id="ph2">&lt;xref:System.Linq.Enumerable.ToList%2A&gt;</ph> extension method.</source>
          <target state="translated">En su lugar, debe materializarlos en un <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> mediante el <ph id="ph2">&lt;xref:System.Linq.Enumerable.ToList%2A&gt;</ph> método de extensión.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>Then you can iterate over the list, removing the attributes.</source>
          <target state="translated">A continuación, puede iterar por la lista para quitar los atributos.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>For more information, see <bpt id="p1">[</bpt>Mixed Declarative Code/Imperative Code Bugs (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/d9a5c404-2b0e-46cd-a358-0e78773b3094)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>mixto declarativa/errores de código imperativo (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/d9a5c404-2b0e-46cd-a358-0e78773b3094)</ept>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>Alternatively, if you want to remove a set of attributes, it is recommended that you use the <ph id="ph1">&lt;xref:System.Xml.Linq.Extensions.Remove%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">O bien, si desea quitar un conjunto de atributos, se recomienda que utilice la <ph id="ph1">&lt;xref:System.Xml.Linq.Extensions.Remove%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>This method copies the attributes to a list, then iterates over the list, removing the attributes.</source>
          <target state="translated">Este método copia los atributos en una lista, a continuación, recorre en iteración la lista y quitar los atributos.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>The following example creates an element with three attributes.</source>
          <target state="translated">En el ejemplo siguiente se crea un elemento con tres atributos.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>It then removes one of the attributes.</source>
          <target state="translated">A continuación, quita uno de los atributos.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>The parent element is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El elemento primario es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
          <source>The value to assign to this attribute.</source>
          <target state="translated">El valor que se va a asignar a este atributo.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
          <source>Sets the value of this attribute.</source>
          <target state="translated">Establece el valor de este atributo.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
          <source>The value is converted to its string representation and assigned to the <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute.Value%2A&gt;</ph> property.</source>
          <target state="translated">Se convierte el valor en su representación de cadena y se asigna a la propiedad <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute.Value%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
          <source>It is invalid to pass an instance of a class that derives from <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph>, such as <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>.</source>
          <target state="translated">No es válido para pasar una instancia de una clase que deriva de <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph>, como <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> o <ph id="ph3">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Este método producirá la <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> y <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
          <source>The following example creates an element with several attributes.</source>
          <target state="translated">En el ejemplo siguiente se crea un elemento con varios atributos.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
          <source>It then changes the contents of one of the attributes.</source>
          <target state="translated">A continuación, cambia el contenido de uno de los atributos.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="value" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is an <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="value" /&gt;</ph> es un <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.ToString">
          <source>Converts the current <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> object to a string representation.</source>
          <target state="translated">Convierte el objeto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> actual en una representación de cadena.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.ToString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the XML text representation of an attribute and its value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contiene la representación de texto XML de un atributo y su valor.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.ToString">
          <source>This method returns a string in the form of <ph id="ph1">`AttributeName="content"`</ph>.</source>
          <target state="translated">Este método devuelve una cadena en forma de <ph id="ph1">`AttributeName="content"`</ph>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.ToString">
          <source>When this method is called and <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> contains control character, an exception is thrown with a message like: hexadecimal value 0x0B, is an invalid character.</source>
          <target state="translated">Cuando se llama a este método y <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> contiene control de caracteres, se produce una excepción con un mensaje similar: valor hexadecimal 0x0B, es un carácter no válido.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.ToString">
          <source>The following example creates an element with several attributes.</source>
          <target state="translated">En el ejemplo siguiente se crea un elemento con varios atributos.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.ToString">
          <source>It then gets an attribute and displays it and its content by calling this method.</source>
          <target state="translated">A continuación, se obtiene un atributo y se muestra junto con su contenido mediante una llamada a este método.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.ToString">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>Gets or sets the value of this attribute.</source>
          <target state="translated">Obtiene o establece el valor de este atributo.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the value of this attribute.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contiene el valor de este atributo.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>You can use this property to get or set the value of an attribute.</source>
          <target state="translated">Puede utilizar esta propiedad para obtener o establecer el valor de un atributo.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>Setting this property will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Configuración de esta propiedad, se producirá la <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> y <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>If you are getting the value and the attribute might not exist, it is more convenient to use the explicit conversion operators, and assign the attribute to a nullable type such as <ph id="ph1">`string`</ph> or <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph3">&lt;xref:System.Int32&gt;</ph>.</source>
          <target state="translated">Si va a obtener el valor y el atributo no podría existir, resulta más conveniente usar los operadores de conversión explícitos y asignar el atributo a un tipo que acepta valores NULL como <ph id="ph1">`string`</ph> o <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> de <ph id="ph3">&lt;xref:System.Int32&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>If the attribute does not exist, then the nullable type is set to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Si el atributo no existe, entonces el tipo que acepta valores NULL se establece en <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>Before using this property, you must make sure that the <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Attribute%2A&gt;</ph> method does not return <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Antes de usar esta propiedad, debe asegurarse de que el <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Attribute%2A&gt;</ph> método no devuelve <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>The following example creates an element with an attribute.</source>
          <target state="translated">En el ejemplo siguiente se crea un elemento con un atributo.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>It then retrieves the value of the attribute, and then sets it.</source>
          <target state="translated">A continuación, recupera el valor del atributo y, a continuación, lo establece.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>Note that the Visual Basic example uses the XML attribute property.</source>
          <target state="translated">Tenga en cuenta que el ejemplo de Visual Basic utiliza la propiedad de atributo XML.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>The following example shows the benefit of using the explicit conversion operators to get the value of an attribute that might not exist:</source>
          <target state="translated">En el ejemplo siguiente se muestra la ventaja de usar los operadores de conversión explícita para obtener el valor de un atributo que no podría existir:</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>This example produces the following output:</source>
          <target state="translated">Este ejemplo produce el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>When setting, the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Cuando se establece, el parámetro <ph id="ph1">&lt;paramref name="value" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>