<Type Name="INormalizeForIsolatedStorage" FullName="System.IO.IsolatedStorage.INormalizeForIsolatedStorage">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="318f83d32bcaea61fe7f94f0d9bc4ac10d11bc4f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30414949" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface INormalizeForIsolatedStorage" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INormalizeForIsolatedStorage" />
  <TypeSignature Language="DocId" Value="T:System.IO.IsolatedStorage.INormalizeForIsolatedStorage" />
  <TypeSignature Language="VB.NET" Value="Public Interface INormalizeForIsolatedStorage" />
  <TypeSignature Language="C++ CLI" Value="public interface class INormalizeForIsolatedStorage" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Permite hacer comparaciones entre un almacén aislado y un dominio de aplicación y la prueba de ensamblado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Almacenamiento aislado usa las evidencias sobre un ensamblado para identificarlo y dotarle de una ubicación de almacenamiento de archivo único. Cuando un ensamblado solicita un almacén, su evidencia (tal y como se presenta el host que la ha cargado) se procesa y se compara con la evidencia utilizada para crear los almacenes existentes. Esto determina si tiene que crear un nuevo almacén o si ya existe una para el ensamblado en cuestión. Debido a la técnica de comparación empleada, los elementos de evidencia que son funcionalmente equivalentes no podrían producirse en una comparación es true si las formas serializadas no son idénticas. Cuando se implementa una evidencia personalizada, tenga en cuenta si éste es el caso de la clase de prueba y, si es así, implemente <xref:System.IO.IsolatedStorage.INormalizeForIsolatedStorage>. Para pruebas que implementa esta interfaz, el <xref:System.IO.IsolatedStorage.INormalizeForIsolatedStorage.Normalize%2A> se llama al método y las comparaciones se basan en la copia normalizada del objeto devuelto por el método.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Implemente esta interfaz cuando se implementa una evidencia personalizada y es necesario determinar si ya existe un almacén. Los objetos serializados no deben usarse para realizar comparaciones en algunos casos, como el de cadenas distinguen mayúsculas de minúsculas. Por ejemplo, www.MSN.com es igual a WWW.msn.com y devolverá un <see langword="true" /> cuando se comparan. Para crear un <see cref="T:System.IO.IsolatedStorage.INormalizeForIsolatedStorage" /> objeto, debe implementar la <see cref="M:System.IO.IsolatedStorage.INormalizeForIsolatedStorage.Normalize" /> método.</para>
    </block>
    <block subset="none" type="usage">
      <para>Llamar a los métodos de esta interfaz para normalizar la instancia antes de realizar comparaciones entre evidencia de un ensamblado y que actualmente existe almacenes aislados.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public object Normalize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Normalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.INormalizeForIsolatedStorage.Normalize" />
      <MemberSignature Language="VB.NET" Value="Public Function Normalize () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Normalize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cuando se reemplaza en una clase derivada, devuelve una copia normalizada del objeto en el que se efectuó la llamada.</summary>
        <returns>Objeto normalizado que representa la instancia en la que se llamó a este método. Esta instancia puede ser una cadena, una secuencia o cualquier objeto serializable.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza este método y el objeto devuelto es una secuencia, se supone que para va a serializar y se compara directamente con la forma serializada de la evidencia utilizada para crear los almacenes existentes. Si el objeto devuelto es una cadena, se considerará el nombre de un almacén aislado y se compara con los nombres de los almacenes existentes.</para>
        </block>
        <block subset="none" type="usage">
          <para>Se suele llamar a este método si está escribiendo una clase derivada de almacenamiento aislado y se necesita comprobar si existe el almacenamiento aislado para el ensamblado actual.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>