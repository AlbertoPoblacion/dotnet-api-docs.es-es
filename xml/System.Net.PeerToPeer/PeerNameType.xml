<Type Name="PeerNameType" FullName="System.Net.PeerToPeer.PeerNameType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3837789334314024be8b25d6946e0de8d8d07109" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51895850" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum PeerNameType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PeerNameType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameType" />
  <TypeSignature Language="VB.NET" Value="Public Enum PeerNameType" />
  <TypeSignature Language="C++ CLI" Value="public enum class PeerNameType" />
  <TypeSignature Language="F#" Value="type PeerNameType = " />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Define el tipo de <see cref="T:System.Net.PeerToPeer.PeerName" /> que se va a crear. Un nombre del mismo nivel puede estar o no protegido. Un nombre del mismo nivel protegido proporciona una prueba de propiedad del nombre. Un nombre del mismo nivel no protegido no tiene ninguna identidad asociada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un nodo debe tener acceso a la clave privada asociada con la clave pública, usada al crear el seguro <xref:System.Net.PeerToPeer.PeerName>, para comprobar la propiedad. El nodo no tiene una relación con una clave pública.  
  
 El formato de un nombre de mismo nivel es: *Authority.Classifier*. El valor de <xref:System.Net.PeerToPeer.PeerName.Authority%2A> depende de si el nombre es un nombre seguro de mismo nivel o un nombre de mismo nivel no protegidos. El <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> parte del nombre se puede establecer en cualquier cadena que contenga 15 o menos caracteres Unicode, incluido el `null` terminador. Una vez el <xref:System.Net.PeerToPeer.PeerName.Authority%2A>, <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> y nivel de seguridad del mismo nivel se han establecido, un elemento del mismo nivel también se puede hacer referencia a con un nombre relativo o un nombre de host.  
  
 Solo el propietario o el host del mismo nivel, puede registrar un nombre seguro del mismo nivel con el [API del proveedor de PNRP Namespace](https://go.microsoft.com/fwlink?LinkID=92731). Cualquier nodo puede reclamar la propiedad a cualquiera sin protección <xref:System.Net.PeerToPeer.PeerName>.  
  
 **Tenga en cuenta** mediante un seguro <xref:System.Net.PeerToPeer.PeerName> no garantiza la seguridad general de una aplicación de red. La seguridad de la aplicación depende de la implementación.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
    <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
    <altmember cref="P:System.Net.PeerToPeer.PeerName.IsSecured" />
  </Docs>
  <Members>
    <Member MemberName="Secured">
      <MemberSignature Language="C#" Value="Secured" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.PeerToPeer.PeerNameType Secured = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Net.PeerToPeer.PeerNameType.Secured" />
      <MemberSignature Language="VB.NET" Value="Secured" />
      <MemberSignature Language="C++ CLI" Value="Secured" />
      <MemberSignature Language="F#" Value="Secured = 0" Usage="System.Net.PeerToPeer.PeerNameType.Secured" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Cree un objeto <see cref="T:System.Net.PeerToPeer.PeerName" /> protegido mediante la identidad del usuario actual.</summary>
      </Docs>
    </Member>
    <Member MemberName="Unsecured">
      <MemberSignature Language="C#" Value="Unsecured" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.PeerToPeer.PeerNameType Unsecured = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.PeerToPeer.PeerNameType.Unsecured" />
      <MemberSignature Language="VB.NET" Value="Unsecured" />
      <MemberSignature Language="C++ CLI" Value="Unsecured" />
      <MemberSignature Language="F#" Value="Unsecured = 1" Usage="System.Net.PeerToPeer.PeerNameType.Unsecured" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Cree un objeto <see cref="T:System.Net.PeerToPeer.PeerName" /> no protegido mediante la identidad del usuario actual.</summary>
      </Docs>
    </Member>
  </Members>
</Type>