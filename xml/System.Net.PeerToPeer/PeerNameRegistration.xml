<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PeerNameRegistration.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57cd8457b2e09ced1cfe602c70df106251aec2f71.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7cd8457b2e09ced1cfe602c70df106251aec2f71</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>Registers a <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> in a <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> or set of clouds.</source>
          <target state="translated">Registra una propiedad <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> en un objeto <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> o conjunto de nubes.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>Registration creates (or updates) all the information that is associated with a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> in a peer cloud or clouds.</source>
          <target state="translated">Registro crea (o actualiza) toda la información que está asociada a un <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> en una nube del mismo nivel o nubes.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>It is possible to have multiple <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> objects for the same peer name.</source>
          <target state="translated">Es posible tener varios <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> objetos para el mismo nombre del mismo nivel.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>In such a case, if the peer name is secured, each instance represents <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> in a different cloud.</source>
          <target state="translated">En tal caso, si se protege el nombre del mismo nivel, cada instancia representa <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> en una nube diferente.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>However, if the peer name is not secured, it can be registered in the same cloud multiple times, providing that each registration is from a different process.</source>
          <target state="translated">Sin embargo, si el nombre del mismo nivel no está protegido, se puede registrar en la misma nube varias veces, siempre y cuando cada registro de un proceso diferente.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor">
          <source>Initializes a new default instance of the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia predeterminada de la clase <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor">
          <source>Returns a new default instance of type <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>.</source>
          <target state="translated">Devuelve una nueva instancia predeterminada de tipo <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor">
          <source>It does not perform peer name registration during construction.</source>
          <target state="translated">No lleva a cabo el registro de nombres del mismo nivel durante la construcción.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor">
          <source>After instantiating an object with this constructor, the caller should populate the appropriate fields in the instance prior to calling <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph>.</source>
          <target state="translated">Después de crear instancias de un objeto con este constructor, el llamador debe rellenar los campos correspondientes de la instancia antes de llamar a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object to register.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> que se va a registrar.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>Integer value that specifies the port number to register.</source>
          <target state="translated">Valor entero que especifica el número de puerto que se va a registrar.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> class with the specified name and port number.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> con el nombre y número de puerto especificados.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>Calling this constructor creates an instance that will be used to register all source addresses (both IPv6and IPv4) and the provided port for all clouds in which the peer is currently participating.</source>
          <target state="translated">Llamar a este constructor crea una instancia que se usará para registrar todas las direcciones de origen (tanto IPv4 IPv6and) y el puerto proporcionado para todas las nubes en el que esté participando el mismo nivel.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>If the object is constructed successfully, the specified <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph> are populated.</source>
          <target state="translated">Si se crea correctamente, el objeto especificado <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph> se rellenan.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>If the peer name is secured and was previously registered in a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph> the peer is currently participating in, an <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> is thrown.</source>
          <target state="translated">Si el nombre del mismo nivel está protegido y se ha registrado previamente en un <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph> igual que esté participando en, un <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>This constructor only creates a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> instance; it does not perform the registration.</source>
          <target state="translated">Este constructor sólo crea un <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> instancia; no realiza el registro.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>After instantiating the registration object with this constructor and populating its fields, the application must call <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> to perform the actual registration.</source>
          <target state="translated">Después de crear instancias del objeto de registro con este constructor y rellenar sus campos, la aplicación debe llamar a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> para realizar el registro real.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="name" /&gt;</ph> no puede ser <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The specified port number is less than zero.</source>
          <target state="translated">El número de puerto especificado es menor que cero.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</source>
          <target state="translated">Los números de puerto deben ser mayor o igual que cero y menor que 65 535 (0xFFFF).</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> specified has already been registered from this host.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> especificado ya se ha registrado desde este host.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The remote peer does not own the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Authority" /&gt;</ph> for the supplied <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object.</source>
          <target state="translated">El elemento remoto del mismo nivel no posee la propiedad <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Authority" /&gt;</ph> para el objeto <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> proporcionado.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Reference to the object that holds the data needed to deserialize this instance.</source>
          <target state="translated">Referencia al objeto que contiene todos los datos necesarios para deserializar la instancia.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Context that provides the means for deserializing the data.</source>
          <target state="translated">Contexto que proporciona los medios para deserializar los datos.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Also referred to as the source of the serialized data.</source>
          <target state="translated">También se conoce como el origen de los datos serializados.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new serializable <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">Inicializa un nuevo objeto <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> serializable.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object to register.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> que se va a registrar.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>Integer value that specifies the port number to register.</source>
          <target state="translated">Valor entero que especifica el número de puerto que se va a registrar.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> in which to register the peer name.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> en el que se va a registrar el nombre del mismo nivel.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> class with the specified peer name, port number, and <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> con el nombre del mismo nivel, número de puerto y <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>Calling this constructor creates an instance that will be used to register all source addresses (both IPv6 and IPv4), the provided port, and the specified <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>.</source>
          <target state="translated">Llamar a este constructor crea una instancia que se usará para registrar todas las direcciones de origen (IPv6 e IPv4), el puerto proporcionado y especificado <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>If the object is constructed successfully, the properties are populated with the specified <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>.</source>
          <target state="translated">Si el objeto se creó correctamente, las propiedades se rellenan con los valores especificados <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph> y <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>If the cloud parameter is <ph id="ph1">`null`</ph>, the name is registered using the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> shortcut, which initializes default values for the <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>.</source>
          <target state="translated">Si el parámetro de nube es <ph id="ph1">`null`</ph>, el nombre se registra con el <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> acceso directo, que inicializa los valores predeterminados para la <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, y <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>After instantiation, the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> method must be called to register the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>.</source>
          <target state="translated">Después de la creación de instancias, el <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> método debe llamarse para registrar el <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="name" /&gt;</ph> no puede ser <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>The specified port number is less than zero.</source>
          <target state="translated">El número de puerto especificado es menor que cero.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</source>
          <target state="translated">Los números de puerto deben ser mayor o igual que cero y menor que 65 535 (0xFFFF).</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> specified has already been registered from this host.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> especificado ya se ha registrado desde este host.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>The remote peer does not own the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Authority" /&gt;</ph> for the supplied <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object.</source>
          <target state="translated">El elemento remoto del mismo nivel no posee la propiedad <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Authority" /&gt;</ph> para el objeto <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> proporcionado.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud">
          <source>Gets or sets information in a <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph> into which this <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /&gt;</ph> object will be registered.</source>
          <target state="translated">Obtiene o establece información en una propiedad <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph> en la que se registrará el objeto <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud">
          <source>An object of type <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> that specifies the peer cloud for which this registration is defined.</source>
          <target state="translated">Objeto de tipo <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> que especifica la nube del mismo nivel para la que se define este registro.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud">
          <source>This property is set to <ph id="ph1">&lt;see langword="null" /&gt;</ph> by default.</source>
          <target state="translated">Esta propiedad se establece en <ph id="ph1">&lt;see langword="null" /&gt;</ph> de forma predeterminada.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Comment">
          <source>Gets or sets additional information about the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object that will be registered with the <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</source>
          <target state="translated">Obtiene o establece información adicional sobre el objeto <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> que se registrará con <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Comment">
          <source>The comment that contains additional information about the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> to associate with the <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</source>
          <target state="translated">Comentario que contiene información adicional sobre el objeto <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> que se va a asociar a <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Comment">
          <source>This property is set to <ph id="ph1">&lt;see langword="null" /&gt;</ph> by default.</source>
          <target state="translated">Esta propiedad se establece en <ph id="ph1">&lt;see langword="null" /&gt;</ph> de forma predeterminada.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Comment">
          <source>The specified string value is greater than 39 Unicode characters.</source>
          <target state="translated">El valor de cadena especificado tiene más de 39 caracteres Unicode.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Data">
          <source>Gets or sets application-defined binary data for the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">Obtiene o establece los datos binarios definidos por la aplicación para el objeto <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Data">
          <source>An array of bytes that holds the binary data associated with the entry.</source>
          <target state="translated">Matriz de bytes que incluye los datos binarios asociados a la entrada.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Data">
          <source>This property is set to <ph id="ph1">&lt;see langword="null" /&gt;</ph> by default.</source>
          <target state="translated">Esta propiedad se establece en <ph id="ph1">&lt;see langword="null" /&gt;</ph> de forma predeterminada.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Data">
          <source>The maximum amount of <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A&gt;</ph> that can be supplied is 4,096 bytes.</source>
          <target state="translated">La cantidad máxima de <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A&gt;</ph> que se puede proporcionar es de 4.096 bytes.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Data">
          <source>The specified <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /&gt;</ph> is greater than 4096 bytes.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /&gt;</ph> especificada es superior a 4096 bytes.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">Libera los recursos utilizados por el objeto <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>When a peer leaves a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph>, the cloud no longer requires the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> object associated with the peer.</source>
          <target state="translated">Cuando se deja un par un <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph>, la nube ya no requiere la <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> objeto asociado con el nodo.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>Whether the registration object is stopped or disposed is dependent upon whether the cloud will reuse the object to register this peer or another peer.</source>
          <target state="translated">Si se detiene o elimina el objeto de registro depende de si la nube reutilizará el objeto para registrar este punto u otro nodo.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>If there are any other endpoint(s) within the registration object with which the peer host expected to communicate, registering those endpoints within the cloud must occur before stopping or disposing of this object.</source>
          <target state="translated">Si hay cualquier otro extremo dentro del objeto de registro con el que espera que el host del mismo nivel para comunicarse, registrar esos extremos dentro de la nube debe producirse antes de detener o eliminar este objeto.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>If the cloud expects to register more peers, the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph> method is recommended; when the cloud no longer needs the memory, it should be returned to the operating system via the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A&gt;</ph> method.</source>
          <target state="translated">Si la nube espera registrar más elementos del mismo nivel, el <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph> se recomienda el método; cuando la nube ya no necesita la memoria, se debe devolver al sistema operativo a través de la <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">Libera todos los recursos utilizados por el objeto <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose">
          <source>lways call the Dispose method before destroying the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">siempre llamar al método Dispose antes de destruir la <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="True" /&gt;</ph> para liberar tanto recursos administrados como no administrados; es <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar únicamente recursos no administrados.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources and optionally releases the managed resources used by the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">Libera los recursos no administrados y, de forma opcional, libera los recursos administrados que usa el objeto <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)">
          <source>Always call the Dispose method before releasing the last reference to the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">Llame siempre al método Dispose antes de liberar la última referencia a la <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>Gets the collection of network endpoints for which the associated peer name is registered.</source>
          <target state="translated">Obtiene la colección de extremos de la red para los que se registra el nombre del mismo nivel asociado.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>An <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /&gt;</ph> object that contains the network endpoints for which the associated peer name is registered.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /&gt;</ph> que contiene los extremos de la red para los que se registra el nombre del mismo nivel asociado.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>Unless explicitly specified, the default value for all properties is <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">A menos que se especifique explícitamente, el valor predeterminado de todas las propiedades es <ph id="ph1">&lt;see langword="null" /&gt;</ph> para los tipos de referencia.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>In the <ph id="ph1">&lt;xref:System.Net&gt;</ph> namespace, an <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> represents a network endpoint as an IP address and a port number.</source>
          <target state="translated">En el <ph id="ph1">&lt;xref:System.Net&gt;</ph> espacio de nombres, un <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> representa un extremo de red como una dirección IP y un número de puerto.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>For PNRP, an IP address and port value must be provided for each endpoint.</source>
          <target state="translated">Para PNRP, debe proporcionarse un valor de puerto y la dirección IP para cada punto de conexión.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>The maximum number of endpoints that can be provided is ten.</source>
          <target state="translated">El número máximo de puntos de conexión que se puede proporcionar es diez.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>Automatic address selection is used when this parameter is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Selección automática de direcciones se utiliza cuando este parámetro es <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>If a registration method is used that automatically selects the addresses to register, there is no method to determine theaddresses for which the peer name was registered.</source>
          <target state="translated">Si se usa un método de registro que selecciona automáticamente las direcciones que se va a registrar, no hay ningún método para determinar las direcciones para el que se registró el nombre del mismo nivel.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>That is, the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> property will not be updated to reflect the addresses selected.</source>
          <target state="translated">Es decir, el <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> propiedad no se actualizará para reflejar las direcciones seleccionadas.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>When a peer name is registered for more than one node, each <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> is distinct and the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> property defined on each registration instance will be different.</source>
          <target state="translated">Cuando se registra un nombre del mismo nivel en más de un nodo, cada <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> es distinta y <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> propiedad definida en cada instancia del registro será diferente.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>Also, when a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph> is registered into more than one <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>, each registration is distinct and the collection of endpoints will usually be different for each instance.</source>
          <target state="translated">Además, cuando un <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph> está registrado en más de una <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>, cada registro es distinto y la colección de extremos normalmente será diferente para cada instancia.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>The list of endpoints with which this peer will communicate is not the same as the list of endpoints by which this peer name is known, which is stored differently.</source>
          <target state="translated">La lista de extremos con los que se comunicará este punto no es igual a la lista de puntos de conexión mediante el cual se conoce este nombre del mismo nivel, que se almacena de forma diferente.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Holds the serialized data associated with the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">Contiene los datos serializados asociados al objeto <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Contains destination for the serialized stream associated with the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">Contiene el destino de la secuencia serializada asociada al objeto <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a serialization information object with the data needed to serialize the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> instance.</source>
          <target state="translated">Rellena un objeto de información de serialización con los datos necesarios para serializar la instancia de <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered">
          <source>Gets or sets whether the peer name specified in the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property is registered with a specific <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> on a host.</source>
          <target state="translated">Obtiene o establece si el nombre del mismo nivel especificado en la propiedad <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> se registra con un objeto <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> concreto en un host.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the peer name is registered with a <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph> for the peer host.</source>
          <target state="translated">Si es <ph id="ph1">&lt;see langword="true" /&gt;</ph>, el nombre del mismo nivel se registra con <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph> para el host del mismo nivel.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, then the registration process can be started with <ph id="ph2">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /&gt;</ph>.</source>
          <target state="translated">Si es <ph id="ph1">&lt;see langword="false" /&gt;</ph>, el proceso de registro se puede iniciar con <ph id="ph2">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered">
          <source>An object that has been disposed already cannot be registered.</source>
          <target state="translated">No se puede registrar un objeto que ya se ha eliminado.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>Gets or sets the peer name to register with a peer cloud.</source>
          <target state="translated">Obtiene o establece el nombre del mismo nivel que se va a registrar con una nube del mismo nivel.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>An object of type <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> that contains values associated with this <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">Objeto de tipo <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> que contiene los valores asociados a este objeto <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>Unless explicitly specified, the default value for all properties is <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">A menos que se especifique explícitamente, el valor predeterminado de todas las propiedades es <ph id="ph1">&lt;see langword="null" /&gt;</ph> para los tipos de referencia.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>A peer name can be registered for more than one node; each <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> instance is distinct.</source>
          <target state="translated">Se puede registrar un nombre del mismo nivel para más de un nodo; cada <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> instancia es distinto.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> property associated with each corresponding <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> instance is different.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> propiedad asociada con cada correspondiente <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> instancia es diferente.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>Also, it is possible to register a peer name for more than one cloud that the node is connected to; each of these registrations is distinct.</source>
          <target state="translated">Además, es posible registrar un nombre del mismo nivel para más de una nube que está conectado el nodo a; cada uno de estos registros es distinto.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>The peer name's <ph id="ph1">&lt;xref:System.Net.IPEndPointCollection&gt;</ph> will be different in each of these instances.</source>
          <target state="translated">El nombre del mismo nivel <ph id="ph1">&lt;xref:System.Net.IPEndPointCollection&gt;</ph> será diferente en cada una de estas instancias.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
          <source>Gets or sets the <bpt id="p1">[</bpt>TCP/IP<ept id="p1">](http://go.microsoft.com/fwlink?LinkID=98458)</ept> port number used by the peer being registered into the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">Obtiene o establece el número de puerto <bpt id="p1">[</bpt>TCP/IP<ept id="p1">](http://go.microsoft.com/fwlink?LinkID=98458)</ept> utilizado por el elemento del mismo nivel que se registra en el objeto <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
          <source>An integer value indicating the TCP port number of the <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph>.</source>
          <target state="translated">Valor entero que indica el número de puerto TCP de <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
          <source>Unless explicitly specified, the default value for this property is zero (0).</source>
          <target state="translated">A menos que se especifique explícitamente, el valor predeterminado de esta propiedad es cero (0).</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
          <source>The default port is used by the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> method only when no endpoints are specified.</source>
          <target state="translated">Se utiliza el puerto predeterminado por el <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> método solo cuando se especifica ningún extremo.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
          <source>The specified port value is less than zero.</source>
          <target state="translated">El valor de puerto especificado es menor que cero.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
          <source>Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</source>
          <target state="translated">Los números de puerto deben ser mayores o iguales que cero y menores que 65.535 (0xFFFF).</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>Registers the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> into the <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph>.</source>
          <target state="translated">Registra <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> en <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>If no <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /&gt;</ph> is specified, automatic address selection is used with the port value specified by the <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /&gt;</ph> property.</source>
          <target state="translated">Si no se especifica <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /&gt;</ph>, la selección de la dirección automática se usa con el valor de puerto especificado por la propiedad <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The method registers the peer name specified in the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph> property with all source addresses and the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph> specified in the constructor.</source>
          <target state="translated">El método registra el nombre del mismo nivel especificado en el <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph> propiedad con todas las direcciones de origen y el <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph> especificado en el constructor.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The default port is used by this method only when no endpoints are specified.</source>
          <target state="translated">El puerto predeterminado se utiliza este método solo cuando se especifica ningún extremo.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>If the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph> property is <ph id="ph2">`null`</ph>, this method registers the peer name specified in the <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A&gt;</ph> property using the <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> field, which initializes default values for the <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph> propiedad es <ph id="ph2">`null`</ph>, este método registra el nombre del mismo nivel especificado en el <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A&gt;</ph> propiedad mediante la <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> campo, que inicializa los valores predeterminados para la <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, y <ph id="ph7">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>After a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> object has been started, the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph> method is used to stop it.</source>
          <target state="translated">Después de un <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> objeto se ha iniciado, el <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph> método se usa para detenerlo.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>To update a registration, the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A&gt;</ph> method must be used.</source>
          <target state="translated">Para actualizar un registro, el <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A&gt;</ph> se debe usar el método.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> and registers it along with the metadata specified.</source>
          <target state="translated">En el ejemplo de código siguiente se crea un <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> y lo registra junto con los metadatos especificados.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> se establece en <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>This object had Dispose() called on it previously.</source>
          <target state="translated">Este objeto había llamado a Dispose() en él previamente.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> specified has already been registered.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> especificado ya se ha registrado.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /&gt;</ph> method must be used to update a registration.</source>
          <target state="translated">El método <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /&gt;</ph> debe utilizarse para actualizar un registro.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The remote peer does not own the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Authority" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> specified.</source>
          <target state="translated">El elemento del mismo nivel remoto no posee el <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Authority" /&gt;</ph> para el <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>Either the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> or the <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /&gt;</ph> is not specified; at least one needs to be provided.</source>
          <target state="translated">Ni <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> ni <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /&gt;</ph> se han especificado; al menos uno debe proporcionarse.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The message or data elements are invalid.</source>
          <target state="translated">Los elementos de datos o el mensaje no son válidos.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>Or, <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /&gt;</ph> is not set and no data blob or <ph id="ph2">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> is specified.</source>
          <target state="translated">O bien, no se ha establecido <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /&gt;</ph> ni se ha especificado un objeto binario de datos o <ph id="ph2">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>Unregisters the peer name specified in the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property from all the clouds in which it was registered.</source>
          <target state="translated">Elimina del Registro el nombre del mismo nivel especificado en la propiedad <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> de todas las nubes en las que se registró.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>After the registration process has been stopped, the registration object's state is equal to the state directly after being constructed by the default constructor.</source>
          <target state="translated">Después de que se ha detenido el proceso de registro, estado del objeto de registro es igual al estado directamente después de que se está construyendo por el constructor predeterminado.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>In this state, all of its properties are assumed to have no value.</source>
          <target state="translated">En este estado, todas sus propiedades se supone que no tienen ningún valor.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> method may be used to restart it.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> método puede utilizarse para reiniciarlo.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>It is possible to have multiple registration objects for the same peer name.</source>
          <target state="translated">Es posible tener varios objetos de registro para el mismo nombre del mismo nivel.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>In such a case, if the peer name is secured, each instance will represent a registration in a different PNRP cloud.</source>
          <target state="translated">En tal caso, si se protege el nombre del mismo nivel, cada instancia representará un registro en una nube PNRP diferente.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>However, if the peer name is not secured, it can be registered in the same cloud multiple times.</source>
          <target state="translated">Sin embargo, si el nombre del mismo nivel no está protegido, se puede registrar en la misma nube varias veces.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>If this instance is already stopped, calling this method has no effect.</source>
          <target state="translated">Si esta instancia se ha detenido, llamar a este método no tiene efecto.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property has not yet been registered.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> no se ha registrado aún.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>This occurs when a <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object is constructed using the empty constructor.</source>
          <target state="translated">Esto se produce cuando un objeto <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> se construye con el constructor vacío.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property must be populated in this instance prior to calling <ph id="ph2">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /&gt;</ph>.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> se debe rellenar en esta instancia antes de llamar a <ph id="ph2">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>This object had Dispose() called on it previously.</source>
          <target state="translated">Se llamó a Dispose() en este objeto anteriormente.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Holds the serialized data associated with the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> instance.</source>
          <target state="translated">Contiene los datos serializados asociados a la instancia de <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Contains the destination for the serialized stream associated with the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> instance.</source>
          <target state="translated">Contiene el destino de la secuencia serializada asociada a la instancia de <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface and returns the data needed to serialize the <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> instance.</source>
          <target state="translated">Implementa la interfaz de <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> y devuelve los datos necesarios para serializar la instancia de <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>Updates the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> for a node registered with a specific <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</source>
          <target state="translated">Actualiza <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> para un nodo registrado con un objeto <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> concreto.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>Update is performed using the information specified in the properties.</source>
          <target state="translated">La actualización se realiza utilizando la información especificada en las propiedades.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>All information registered in cloud(s) for this <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> prior to the call is completely discarded.</source>
          <target state="translated">Toda la información registrada en nubes para esta <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> antes de la llamada se descarta por completo.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>The new data is not combined with the existing registration.</source>
          <target state="translated">Los nuevos datos no se combinan con el registro existente.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>To update a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>, first update the properties on this instance and then call this method.</source>
          <target state="translated">Para actualizar un <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>, primero actualice las propiedades en esta instancia y, a continuación, llamar a este método.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>After a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRecord&gt;</ph> is registered, the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A&gt;</ph> property cannot be updated.</source>
          <target state="translated">Después de un <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRecord&gt;</ph> está registrado, el <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A&gt;</ph> no se puede actualizar la propiedad.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>All other fields in the record may be updated.</source>
          <target state="translated">Se pueden actualizar todos los demás campos en el registro.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> se establece en <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property has not yet been registered.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> no se ha registrado aún.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /&gt;</ph> method cannot be called until the peer name specified in the <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property is registered in one or more clouds.</source>
          <target state="translated">El método <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /&gt;</ph> no se puede llamar hasta que el nombre del mismo nivel especificado en la propiedad <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> se registra en una o más nubes.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>The peer name specified in the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property has changed since the corresponding <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> was registered.</source>
          <target state="translated">El nombre del mismo nivel especificado en la propiedad <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> ha cambiado desde que se registró el <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> correspondiente.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>An object that has been disposed cannot be registered.</source>
          <target state="translated">No se puede registrar un objeto que se ha eliminado.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> property is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Una propiedad <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> se establece en <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>Gets or sets a value that specifies whether to use automatic endpoint selection when traversing a peer mesh or <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph>.</source>
          <target state="translated">Obtiene o establece un valor que especifica si se debe usar la selección de extremos automática al recorrer una red o <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph> del mismo nivel.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if automatic endpoint selection is to be used; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if some other method will be used to determine an endpoint.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph> si se debe usar la selección de extremos automática; <ph id="ph2">&lt;see langword="false" /&gt;</ph> si se debe usar algún otro método para determinar un extremo.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>The default value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>When auto endpoint selection is used (this property is set to <ph id="ph1">`true`</ph>) with no endpoint information specified prior to the start of a <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>, the system chooses individual endpoints and publishes them with the associated peer name into all available clouds.</source>
          <target state="translated">Cuando se usa la selección de extremos automática (esta propiedad está establecida en <ph id="ph1">`true`</ph>) sin información de extremo especificado antes del inicio de un <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>, el sistema elige los extremos individuales y los publica con el nombre del mismo nivel asociado en todas las nubes disponibles.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>If the port is not specified, auto selection chooses zero as the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph>.</source>
          <target state="translated">Si no se especifica el puerto, la selección automática elige cero como el <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>When set to <ph id="ph1">`false`</ph>, auto selection as described above is not performed.</source>
          <target state="translated">Cuando se establece en <ph id="ph1">`false`</ph>, no se realiza la selección automática tal como se ha descrito anteriormente.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>This enables the registration process to publish a peer name along with a data blob (as specified by the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A&gt;</ph> property).</source>
          <target state="translated">Esto permite que el proceso de registro publicar un nombre del mismo nivel junto con un blob de datos (según lo especificado por el <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A&gt;</ph> propiedad).</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>No endpoints are associated with the name.</source>
          <target state="translated">Ningún punto de conexión está asociado con el nombre.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>If a registration method is used that automatically selects the addresses to register, there is no method to determine what addresses for which the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> object was registered.</source>
          <target state="translated">Si se usa un método de registro que selecciona automáticamente las direcciones que se va a registrar, no hay ningún método para determinar qué direcciones para que el <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> el objeto se ha registrado.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>That is, the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> property will not be updated to reflect the addresses selected.</source>
          <target state="translated">Es decir, el <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> propiedad no se actualizará para reflejar las direcciones seleccionadas.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>Updating this property after peer name registration has started has no effect.</source>
          <target state="translated">Actualización de esta propiedad después de que ha iniciado el registro de nombres del mismo nivel no tiene ningún efecto.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>