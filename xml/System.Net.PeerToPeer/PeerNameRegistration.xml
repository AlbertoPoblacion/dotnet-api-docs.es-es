<Type Name="PeerNameRegistration" FullName="System.Net.PeerToPeer.PeerNameRegistration">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7cd8457b2e09ced1cfe602c70df106251aec2f71" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460909" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PeerNameRegistration : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerNameRegistration extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameRegistration" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameRegistration&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameRegistration : IDisposable, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Registra una propiedad <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> en un objeto <see cref="T:System.Net.PeerToPeer.Cloud" /> o conjunto de nubes.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Registro crea (o actualiza) toda la información que está asociada a un <xref:System.Net.PeerToPeer.PeerName> en una nube del mismo nivel o nubes.  
  
 Es posible tener varios <xref:System.Net.PeerToPeer.PeerNameRegistration> objetos para el mismo nombre del mismo nivel. En tal caso, si se protege el nombre del mismo nivel, cada instancia representa <xref:System.Net.PeerToPeer.PeerNameRegistration> en una nube diferente. Sin embargo, si el nombre del mismo nivel no está protegido, se puede registrar en la misma nube varias veces, siempre y cuando cada registro de un proceso diferente.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia predeterminada de la clase <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Devuelve una nueva instancia predeterminada de tipo <xref:System.Net.PeerToPeer.PeerNameRegistration>. No lleva a cabo el registro de nombres del mismo nivel durante la construcción.  
  
 Después de crear instancias de un objeto con este constructor, el llamador debe rellenar los campos correspondientes de la instancia antes de llamar a <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> o <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As PeerName, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">Objeto <see cref="T:System.Net.PeerToPeer.PeerName" /> que se va a registrar.</param>
        <param name="port">Valor entero que especifica el número de puerto que se va a registrar.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> con el nombre y número de puerto especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llamar a este constructor crea una instancia que se usará para registrar todas las direcciones de origen (tanto IPv4 IPv6and) y el puerto proporcionado para todas las nubes en el que esté participando el mismo nivel.  Si se crea correctamente, el objeto especificado <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> y <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> se rellenan.  
  
 Si el nombre del mismo nivel está protegido y se ha registrado previamente en un <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> igual que esté participando en, un <xref:System.Net.PeerToPeer.PeerToPeerException> se produce.  
  
 Este constructor sólo crea un <xref:System.Net.PeerToPeer.PeerNameRegistration> instancia; no realiza el registro. Después de crear instancias del objeto de registro con este constructor y rellenar sus campos, la aplicación debe llamar a <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> para realizar el registro real.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="name" /> no puede ser <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">El número de puerto especificado es menor que cero.  Los números de puerto deben ser mayor o igual que cero y menor que 65 535 (0xFFFF).</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   El <see cref="T:System.Net.PeerToPeer.PeerName" /> especificado ya se ha registrado desde este host.  
  
-   El elemento remoto del mismo nivel no posee la propiedad <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> para el objeto <see cref="T:System.Net.PeerToPeer.PeerName" /> proporcionado.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerNameRegistration (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerNameRegistration(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Referencia al objeto que contiene todos los datos necesarios para deserializar la instancia.</param>
        <param name="context">Contexto que proporciona los medios para deserializar los datos. También se conoce como el origen de los datos serializados.</param>
        <summary>Inicializa un nuevo objeto <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> serializable.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.Runtime.Serialization" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="name">Objeto <see cref="T:System.Net.PeerToPeer.PeerName" /> que se va a registrar.</param>
        <param name="port">Valor entero que especifica el número de puerto que se va a registrar.</param>
        <param name="cloud">
          <see cref="T:System.Net.PeerToPeer.Cloud" /> en el que se va a registrar el nombre del mismo nivel.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> con el nombre del mismo nivel, número de puerto y <see cref="T:System.Net.PeerToPeer.Cloud" /> especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llamar a este constructor crea una instancia que se usará para registrar todas las direcciones de origen (IPv6 e IPv4), el puerto proporcionado y especificado <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.  Si el objeto se creó correctamente, las propiedades se rellenan con los valores especificados <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>, <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> y <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.  
  
 Si el parámetro de nube es `null`, el nombre se registra con el <xref:System.Net.PeerToPeer.Cloud.Available> acceso directo, que inicializa los valores predeterminados para la <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, y <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  
  
 Después de la creación de instancias, el <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> método debe llamarse para registrar el <xref:System.Net.PeerToPeer.PeerName>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="name" /> no puede ser <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">El número de puerto especificado es menor que cero.  Los números de puerto deben ser mayor o igual que cero y menor que 65 535 (0xFFFF).</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   El <see cref="T:System.Net.PeerToPeer.PeerName" /> especificado ya se ha registrado desde este host.  
  
-   El elemento remoto del mismo nivel no posee la propiedad <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> para el objeto <see cref="T:System.Net.PeerToPeer.PeerName" /> proporcionado.</exception>
      </Docs>
    </Member>
    <Member MemberName="Cloud">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Cloud Cloud { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Cloud Cloud" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberSignature Language="VB.NET" Value="Public Property Cloud As Cloud" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::Cloud ^ Cloud { System::Net::PeerToPeer::Cloud ^ get(); void set(System::Net::PeerToPeer::Cloud ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Cloud</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece información en una propiedad <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> en la que se registrará el objeto <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />.</summary>
        <value>Objeto de tipo <see cref="T:System.Net.PeerToPeer.Cloud" /> que especifica la nube del mismo nivel para la que se define este registro. Esta propiedad se establece en <see langword="null" /> de forma predeterminada.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberSignature Language="VB.NET" Value="Public Property Comment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comment { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece información adicional sobre el objeto <see cref="T:System.Net.PeerToPeer.PeerName" /> que se registrará con <see cref="T:System.Net.PeerToPeer.Cloud" />.</summary>
        <value>Comentario que contiene información adicional sobre el objeto <see cref="T:System.Net.PeerToPeer.PeerName" /> que se va a asociar a <see cref="T:System.Net.PeerToPeer.Cloud" />. Esta propiedad se establece en <see langword="null" /> de forma predeterminada.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">El valor de cadena especificado tiene más de 39 caracteres Unicode.</exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public byte[] Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Data" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberSignature Language="VB.NET" Value="Public Property Data As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Data { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece los datos binarios definidos por la aplicación para el objeto <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</summary>
        <value>Matriz de bytes que incluye los datos binarios asociados a la entrada. Esta propiedad se establece en <see langword="null" /> de forma predeterminada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La cantidad máxima de <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> que se puede proporcionar es de 4.096 bytes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La propiedad <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> especificada es superior a 4096 bytes.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Libera los recursos utilizados por el objeto <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se deja un par un <xref:System.Net.PeerToPeer.Cloud>, la nube ya no requiere la <xref:System.Net.PeerToPeer.PeerNameRegistration> objeto asociado con el nodo.  Si se detiene o elimina el objeto de registro depende de si la nube reutilizará el objeto para registrar este punto u otro nodo. Si hay cualquier otro extremo dentro del objeto de registro con el que espera que el host del mismo nivel para comunicarse, registrar esos extremos dentro de la nube debe producirse antes de detener o eliminar este objeto.  
  
 Si la nube espera registrar más elementos del mismo nivel, el <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> se recomienda el método; cuando la nube ya no necesita la memoria, se debe devolver al sistema operativo a través de la <xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libera todos los recursos utilizados por el objeto <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage">
          <para>siempre llamar al método Dispose antes de destruir la <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> objeto.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          Es <see langword="True" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
        <summary>Libera los recursos no administrados y, de forma opcional, libera los recursos administrados que usa el objeto <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage">
          <para>Llame siempre al método Dispose antes de liberar la última referencia a la <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> objeto.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndPointCollection">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPointCollection EndPointCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPointCollection EndPointCollection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndPointCollection As IPEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPointCollection ^ EndPointCollection { System::Net::IPEndPointCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la colección de extremos de la red para los que se registra el nombre del mismo nivel asociado.</summary>
        <value>Objeto <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /> que contiene los extremos de la red para los que se registra el nombre del mismo nivel asociado. A menos que se especifique explícitamente, el valor predeterminado de todas las propiedades es <see langword="null" /> para los tipos de referencia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En el <xref:System.Net> espacio de nombres, un <xref:System.Net.IPEndPoint> representa un extremo de red como una dirección IP y un número de puerto.  Para PNRP, debe proporcionarse un valor de puerto y la dirección IP para cada punto de conexión.  El número máximo de puntos de conexión que se puede proporcionar es diez. Selección automática de direcciones se utiliza cuando este parámetro es `null`.  
  
 Si se usa un método de registro que selecciona automáticamente las direcciones que se va a registrar, no hay ningún método para determinar las direcciones para el que se registró el nombre del mismo nivel.  Es decir, el <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> propiedad no se actualizará para reflejar las direcciones seleccionadas.  
  
 Cuando se registra un nombre del mismo nivel en más de un nodo, cada <xref:System.Net.PeerToPeer.PeerNameRegistration> es distinta y <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> propiedad definida en cada instancia del registro será diferente. Además, cuando un <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> está registrado en más de una <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, cada registro es distinto y la colección de extremos normalmente será diferente para cada instancia.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>La lista de extremos con los que se comunicará este punto no es igual a la lista de puntos de conexión mediante el cual se conoce este nombre del mismo nivel, que se almacena de forma diferente.</para>
        </block>
        <altmember cref="T:System.Net.IPEndPointCollection" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Contiene los datos serializados asociados al objeto <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</param>
        <param name="context">Contiene el destino de la secuencia serializada asociada al objeto <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</param>
        <summary>Rellena un objeto de información de serialización con los datos necesarios para serializar la instancia de <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRegistered">
      <MemberSignature Language="C#" Value="public bool IsRegistered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRegistered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered" />
      <MemberSignature Language="VB.NET" Value="Public Function IsRegistered () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsRegistered();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene o establece si el nombre del mismo nivel especificado en la propiedad <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> se registra con un objeto <see cref="T:System.Net.PeerToPeer.Cloud" /> concreto en un host.</summary>
        <returns>Si es <see langword="true" />, el nombre del mismo nivel se registra con <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> para el host del mismo nivel. Si es <see langword="false" />, el proceso de registro se puede iniciar con <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">No se puede registrar un objeto que ya se ha eliminado.</exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameResolver" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberSignature Language="VB.NET" Value="Public Property PeerName As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerName ^ PeerName { System::Net::PeerToPeer::PeerName ^ get(); void set(System::Net::PeerToPeer::PeerName ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del mismo nivel que se va a registrar con una nube del mismo nivel.</summary>
        <value>Objeto de tipo <see cref="T:System.Net.PeerToPeer.PeerName" /> que contiene los valores asociados a este objeto <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />. A menos que se especifique explícitamente, el valor predeterminado de todas las propiedades es <see langword="null" /> para los tipos de referencia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se puede registrar un nombre del mismo nivel para más de un nodo; cada <xref:System.Net.PeerToPeer.PeerNameRegistration> instancia es distinto. El <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> propiedad asociada con cada correspondiente <xref:System.Net.PeerToPeer.PeerName> instancia es diferente. Además, es posible registrar un nombre del mismo nivel para más de una nube que está conectado el nodo a; cada uno de estos registros es distinto. El nombre del mismo nivel <xref:System.Net.IPEndPointCollection> será diferente en cada una de estas instancias.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el número de puerto [TCP/IP](http://go.microsoft.com/fwlink?LinkID=98458) utilizado por el elemento del mismo nivel que se registra en el objeto <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</summary>
        <value>Valor entero que indica el número de puerto TCP de <see cref="T:System.Net.IPEndPoint" />. A menos que se especifique explícitamente, el valor predeterminado de esta propiedad es cero (0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se utiliza el puerto predeterminado por el <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> método solo cuando se especifica ningún extremo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El valor de puerto especificado es menor que cero.  Los números de puerto deben ser mayores o iguales que cero y menores que 65.535 (0xFFFF).</exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Registra <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> en <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />. Si no se especifica <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />, la selección de la dirección automática se usa con el valor de puerto especificado por la propiedad <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El método registra el nombre del mismo nivel especificado en el <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> propiedad con todas las direcciones de origen y el <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> especificado en el constructor. El puerto predeterminado se utiliza este método solo cuando se especifica ningún extremo.  
  
 Si el <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> propiedad es `null`, este método registra el nombre del mismo nivel especificado en el <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> propiedad mediante la <xref:System.Net.PeerToPeer.Cloud.Available> campo, que inicializa los valores predeterminados para la <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, y <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  
  
 Después de un <xref:System.Net.PeerToPeer.PeerNameRegistration> objeto se ha iniciado, el <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> método se usa para detenerlo.  
  
 Para actualizar un registro, el <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> se debe usar el método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un <xref:System.Net.PeerToPeer.PeerName> y lo registra junto con los metadatos especificados.  
  
 [!code-csharp[NCLPNRPRegisterPeerName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPRegisterPeerName/CS/RegisterPeerName.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propiedad <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> se establece en <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Este objeto había llamado a Dispose() en él previamente.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   El <see cref="T:System.Net.PeerToPeer.PeerName" /> especificado ya se ha registrado. El método <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> debe utilizarse para actualizar un registro.  
  
-   El elemento del mismo nivel remoto no posee el <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> para el <see cref="T:System.Net.PeerToPeer.PeerName" /> especificado.  
  
-   Ni <see cref="T:System.Net.PeerToPeer.PeerName" /> ni <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /> se han especificado; al menos uno debe proporcionarse.  
  
-   Los elementos de datos o el mensaje no son válidos. O bien, no se ha establecido <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /> ni se ha especificado un objeto binario de datos o <see cref="T:System.Net.IPEndPoint" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Elimina del Registro el nombre del mismo nivel especificado en la propiedad <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> de todas las nubes en las que se registró.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Después de que se ha detenido el proceso de registro, estado del objeto de registro es igual al estado directamente después de que se está construyendo por el constructor predeterminado. En este estado, todas sus propiedades se supone que no tienen ningún valor. El <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> método puede utilizarse para reiniciarlo.  
  
 Es posible tener varios objetos de registro para el mismo nombre del mismo nivel.  En tal caso, si se protege el nombre del mismo nivel, cada instancia representará un registro en una nube PNRP diferente.  Sin embargo, si el nombre del mismo nivel no está protegido, se puede registrar en la misma nube varias veces.  
  
 Si esta instancia se ha detenido, llamar a este método no tiene efecto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> no se ha registrado aún. Esto se produce cuando un objeto <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> se construye con el constructor vacío. La propiedad <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> se debe rellenar en esta instancia antes de llamar a <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Se llamó a Dispose() en este objeto anteriormente.</exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Contiene los datos serializados asociados a la instancia de <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</param>
        <param name="context">Contiene el destino de la secuencia serializada asociada a la instancia de <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</param>
        <summary>Implementa la interfaz de <see cref="T:System.Runtime.Serialization.ISerializable" /> y devuelve los datos necesarios para serializar la instancia de <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Actualiza <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> para un nodo registrado con un objeto <see cref="T:System.Net.PeerToPeer.Cloud" /> concreto. La actualización se realiza utilizando la información especificada en las propiedades.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Toda la información registrada en nubes para esta <xref:System.Net.PeerToPeer.PeerName> antes de la llamada se descarta por completo.  Los nuevos datos no se combinan con el registro existente.  Para actualizar un <xref:System.Net.PeerToPeer.PeerNameRegistration>, primero actualice las propiedades en esta instancia y, a continuación, llamar a este método.  
  
 Después de un <xref:System.Net.PeerToPeer.PeerNameRecord> está registrado, el <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> no se puede actualizar la propiedad.  Se pueden actualizar todos los demás campos en el registro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> se establece en <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">-   La propiedad <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> no se ha registrado aún. El método <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> no se puede llamar hasta que el nombre del mismo nivel especificado en la propiedad <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> se registra en una o más nubes.  
  
-   El nombre del mismo nivel especificado en la propiedad <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> ha cambiado desde que se registró el <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> correspondiente.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">No se puede registrar un objeto que se ha eliminado.</exception>
        <exception cref="T:System.ArgumentNullException">Una propiedad <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> se establece en <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseAutoEndPointSelection">
      <MemberSignature Language="C#" Value="public bool UseAutoEndPointSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAutoEndPointSelection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAutoEndPointSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAutoEndPointSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que especifica si se debe usar la selección de extremos automática al recorrer una red o <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> del mismo nivel.</summary>
        <value>
          <see langword="True" /> si se debe usar la selección de extremos automática; <see langword="false" /> si se debe usar algún otro método para determinar un extremo. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se usa la selección de extremos automática (esta propiedad está establecida en `true`) sin información de extremo especificado antes del inicio de un <xref:System.Net.PeerToPeer.PeerNameRegistration>, el sistema elige los extremos individuales y los publica con el nombre del mismo nivel asociado en todas las nubes disponibles.  Si no se especifica el puerto, la selección automática elige cero como el <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>.  
  
 Cuando se establece en `false`, no se realiza la selección automática tal como se ha descrito anteriormente.  Esto permite que el proceso de registro publicar un nombre del mismo nivel junto con un blob de datos (según lo especificado por el <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> propiedad). Ningún punto de conexión está asociado con el nombre.  
  
 Si se usa un método de registro que selecciona automáticamente las direcciones que se va a registrar, no hay ningún método para determinar qué direcciones para que el <xref:System.Net.PeerToPeer.PeerName> el objeto se ha registrado.  Es decir, el <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> propiedad no se actualizará para reflejar las direcciones seleccionadas.  
  
 Actualización de esta propiedad después de que ha iniciado el registro de nombres del mismo nivel no tiene ningún efecto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>