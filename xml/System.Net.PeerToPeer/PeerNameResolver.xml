<Type Name="PeerNameResolver" FullName="System.Net.PeerToPeer.PeerNameResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="97ae5e632ef32ac564a931d5e857b1eac247da22" />
    <Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="12/01/2018" />
    <Meta Name="ms.locfileid" Value="52733660" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PeerNameResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PeerNameResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameResolver" />
  <TypeSignature Language="F#" Value="type PeerNameResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Especifica los valores que resuelven <see cref="T:System.Net.PeerToPeer.PeerName" /> como <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> mediante el protocolo de API del proveedor de espacio de nombres PNRP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Net.PeerToPeer.PeerNameRecord> que contiene toda la información de la <xref:System.Net.PeerToPeer.PeerName> que se publicó en el <xref:System.Net.PeerToPeer.Cloud> o nubes que se consultaron durante el proceso de resolución.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia predeterminada de la clase <see cref="T:System.Net.PeerToPeer.PeerNameResolver" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Después de resolver correctamente un <xref:System.Net.PeerToPeer.PeerName>, <xref:System.Net.PeerToPeer.PeerNameRecord> contiene toda la información para el elemento especificado <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> que se publicó en las nubes que se consultaron durante la <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operación.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveCompleted">
      <MemberSignature Language="C#" Value="protected void OnResolveCompleted (System.Net.PeerToPeer.ResolveCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveCompleted(class System.Net.PeerToPeer.ResolveCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveCompleted (e As ResolveCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveCompleted(System::Net::PeerToPeer::ResolveCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnResolveCompleted : System.Net.PeerToPeer.ResolveCompletedEventArgs -&gt; unit" Usage="peerNameResolver.OnResolveCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> que contiene los datos devueltos por el evento <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />.</param>
        <summary>Devuelve los datos de resolución del mismo nivel después de generarse el evento <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es una devolución de llamada asincrónica que se utiliza para procesar datos de resolución de nombres del mismo nivel, una vez finalizada la resolución del mismo nivel.  
  
 Los tipos derivados pueden invalidar este método para realizar más tareas cuando el <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento es desencadenado por el objeto de resolución del mismo nivel.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnResolveProgressChanged">
      <MemberSignature Language="C#" Value="protected void OnResolveProgressChanged (System.Net.PeerToPeer.ResolveProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveProgressChanged(class System.Net.PeerToPeer.ResolveProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveProgressChanged (e As ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveProgressChanged(System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnResolveProgressChanged : System.Net.PeerToPeer.ResolveProgressChangedEventArgs -&gt; unit" Usage="peerNameResolver.OnResolveProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> que contiene información de progreso de la resolución del nombre de mismo nivel devuelto por el evento <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />.</param>
        <summary>Devuelve los datos de progreso de resolución del mismo nivel cuando se genera el evento <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es una devolución de llamada asincrónica que se utiliza para procesar los datos de la resolución del mismo nivel después de que se ha solicitado el progreso de la resolución del mismo nivel.  
  
 Los tipos derivados pueden invalidar este método para realizar más tareas cuando el <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> se produce el evento.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar este método en un tipo derivado, asegúrese de llamar al tipo base <see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Resuelve un objeto <see cref="T:System.Net.PeerToPeer.PeerName" /> como <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> mediante el protocolo PNRP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método asocia nombres de mismo nivel a las nubes. Una llamada a la <xref:System.Net.PeerToPeer.PeerNameResolver> es similar a llamar al método el <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método para cada registro de nombres del mismo nivel en el <xref:System.Net.PeerToPeer.PeerNameRecordCollection>. Tenga en cuenta que utiliza el método de resolución en un registro de nombre individual del mismo nivel no invalida la resolución de varios nombres de mismo nivel.  
  
 Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método, hay un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método.  Son idénticos en los parámetros se pasan, salvo que el método ResolveAsync incluye un token del sistema en su lista de parámetros para el control de eventos asincrónicos.  
  
 Si el <xref:System.Net.PeerToPeer.Cloud> no se proporciona el parámetro, el método usa el <xref:System.Net.PeerToPeer.Cloud.Available> acceso directo a rellenar parámetros en la nube.  Si el `maxRecords` falta el parámetro, el valor predeterminado de cero, se produce un <xref:System.ArgumentOutOfRangeException> excepción.  
  
 Este evento también se genera si la operación de resolución completa con errores o se cancela.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve peerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <see cref="T:System.Net.PeerToPeer.PeerName" /> que se va a resolver.</param>
        <summary>Resuelve el objeto <see cref="T:System.Net.PeerToPeer.PeerName" /> especificado en todas las nubes conocidas para el elemento del mismo nivel de la llamada.</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> que contiene todos los registros de nombre del mismo nivel (representados como objetos <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />) asociados al nombre del mismo nivel especificado. Para los nombres del mismo nivel no protegidos, diferentes usuarios pueden registrar el mismo objeto <see cref="T:System.Net.PeerToPeer.PeerName" /> en el mismo objeto <see cref="T:System.Net.PeerToPeer.Cloud" /> y asociarlo con extremos diferentes.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método asocia un nombre de mismo nivel a las nubes. Todas las nubes se consultan para ver el <xref:System.Net.PeerToPeer.PeerName>. Si el nombre del mismo nivel no se puede resolver o es `null`, un <xref:System.Net.PeerToPeer.PeerToPeerException> se produce.  
  
 Para los nombres de mismo nivel no protegidos, el mismo nombre puede ser registrado (y asociarlo con extremos diferentes) diferentes elementos del mismo nivel dentro de la misma nube.  
  
 Una llamada a la <xref:System.Net.PeerToPeer.PeerNameResolver> es similar a llamar al método el <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método para cada registro de nombres del mismo nivel en el <xref:System.Net.PeerToPeer.PeerNameRecordCollection>. Tenga en cuenta que utiliza el método de resolución en un registro de nombre individual del mismo nivel no invalida la resolución de varios nombres de mismo nivel.  
  
 Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método, hay un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método.  Las listas de parámetros son idénticas, salvo que el método ResolveAsync incluye un token del sistema de control de eventos asincrónico.  
  
 Si el <xref:System.Net.PeerToPeer.Cloud> no se proporciona el parámetro, el método usa el <xref:System.Net.PeerToPeer.Cloud.Available> acceso directo a rellenar parámetros en la nube.  
  
 El <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento se genera si la operación de resolución completa con errores o se cancela.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra cómo resolver un <xref:System.Net.PeerToPeer.PeerName> publicados en cualquier <xref:System.Net.PeerToPeer.Cloud>.  
  
 [!code-csharp[NCLPNRPPeerNameResolver#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPPeerNameResolver/CS/PeerNameResolver.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="peerName" /> debe establecerse en <see langword="null" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">No se puede resolver el nombre del mismo nivel especificado.</exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <see cref="T:System.Net.PeerToPeer.PeerName" /> que se va a resolver.</param>
        <param name="maxRecords">Número máximo de objetos <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> que se deben obtener de todos los objetos <see cref="T:System.Net.PeerToPeer.Cloud" /> para el <paramref name="peerName" />proporcionado.</param>
        <summary>Resuelve el nombre del mismo nivel especificado en todas las nubes conocidas para el elemento del mismo nivel de la llamada y no devuelve más que el número especificado de objetos <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />.</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> cuyo tamaño es menor o igual que las entradas de <paramref name="maxRecords" />. Esta colección contiene registros de nombre del mismo nivel asociados al objeto <see cref="T:System.Net.PeerToPeer.PeerName" /> que se resolvió.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método asocia un nombre de mismo nivel a las nubes. Todas las nubes se consultan el nombre del mismo nivel. Para los nombres de mismo nivel no protegidos, el mismo nombre del mismo nivel se puede registrar por usuarios diferentes en el mismo <xref:System.Net.PeerToPeer.Cloud>y asociarlo con extremos diferentes. Si el <xref:System.Net.PeerToPeer.PeerName> no se puede resolver (por ejemplo, no se publica el nombre del mismo nivel) un <xref:System.Net.PeerToPeer.PeerToPeerException> se produce.  
  
 Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método, hay un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método.  Las listas de parámetros son idénticas, salvo que el método ResolveAsync incluye un token del sistema de control de eventos asincrónico.  
  
 El <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento se genera si la operación de resolución completa con errores o se cancela.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="peerName" /> debe establecerse en <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="maxRecords" /> es menor o igual que cero.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">El nombre del mismo nivel proporcionado no se puede resolver.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, cloud)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <see cref="T:System.Net.PeerToPeer.PeerName" /> que se va a resolver.</param>
        <param name="cloud">
          <see cref="T:System.Net.PeerToPeer.Cloud" /> en que se va a resolver el nombre del mismo nivel.</param>
        <summary>Resuelve la propiedad <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> especificada en el objeto <see cref="T:System.Net.PeerToPeer.Cloud" /> especificado.</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> que contiene todos los registros de nombre del mismo nivel (representados como objetos <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />) asociados al nombre del mismo nivel especificado. Para los nombres del mismo nivel no protegidos, diferentes usuarios pueden registrar el mismo objeto <see cref="T:System.Net.PeerToPeer.PeerName" /> en el mismo objeto <see cref="T:System.Net.PeerToPeer.Cloud" /> y asociarlo con extremos diferentes.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Net.PeerToPeer.PeerName> no se puede resolver (es decir, no se publica el nombre del mismo nivel) un <xref:System.Net.PeerToPeer.PeerToPeerException> se produce.  
  
 Para los nombres de mismo nivel no protegidos, el mismo nombre puede ser registrado (y asociarlo con extremos diferentes) diferentes elementos del mismo nivel dentro de la misma nube.  
  
 Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método, hay un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método.  Las listas de parámetros son idénticas, salvo que el método ResolveAsync incluye un token del sistema de control de eventos asincrónico.  
  
 Si el <xref:System.Net.PeerToPeer.Cloud> parámetro es `null`, el <xref:System.Net.PeerToPeer.PeerNameResolver> usa el <xref:System.Net.PeerToPeer.Cloud.Available> acceso directo para rellenar el <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, y <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  
  
 El <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento se genera si la operación de resolución completa con errores o se cancela.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="peerName" /> debe establecerse en <see langword="null" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">El nombre del mismo nivel proporcionado no se puede resolver.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * int -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, cloud, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <see cref="T:System.Net.PeerToPeer.PeerName" /> que se va a resolver.</param>
        <param name="cloud">
          <see cref="T:System.Net.PeerToPeer.Cloud" /> en el que se va a resolver <paramref name="peerName" />.</param>
        <param name="maxRecords">Número máximo de objetos de registro de nombre del mismo nivel que se debe obtener de la nube especificada para el <paramref name="peerName" /> especificado.</param>
        <summary>Resuelve la propiedad <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> especificada en el objeto <see cref="T:System.Net.PeerToPeer.Cloud" /> especificado y no devuelve más que el número especificado de objetos <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />.</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> cuyo tamaño es menor o igual que las entradas de <paramref name="maxRecords" />. Esta colección contiene registros de nombre del mismo nivel asociados al objeto <see cref="T:System.Net.PeerToPeer.PeerName" /> que se resolvió.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para los nombres de mismo nivel no protegidos, el mismo nombre puede ser registrado (y asociarlo con extremos diferentes) diferentes elementos del mismo nivel dentro de la misma nube. Si el nombre del mismo nivel no se puede resolver una <xref:System.Net.PeerToPeer.PeerToPeerException> se produce.  
  
 Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método, hay un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método.  Las listas de parámetros son idénticas, salvo que el método ResolveAsync incluye un token del sistema de control de eventos asincrónico.  
  
 Si el <xref:System.Net.PeerToPeer.Cloud> parámetro es `null`, el <xref:System.Net.PeerToPeer.PeerNameResolver> usa el <xref:System.Net.PeerToPeer.Cloud.Available> acceso directo para rellenar el <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, y <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  
  
 El <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento se genera si la operación de resolución completa con errores o se cancela.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="peerName" /> debe establecerse en <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="maxRecords" /> es menor o igual que cero.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">El nombre del mismo nivel proporcionado no se puede resolver.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolveAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Estos métodos comienzan una operación de resolución asincrónica para el objeto <see cref="T:System.Net.PeerToPeer.PeerName" /> especificado en todas las nubes conocidas para el elemento del mismo nivel de la llamada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método, hay un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método, que se usa cuando se requiera un procesamiento asincrónico.  Son idénticos en los parámetros se pasan, pero ResolveAsync incluye un token del sistema en su lista de parámetros para el control de eventos.  
  
 Si se produce un error de coincidencia parámetro entre el método de resolución y el método ResolveAsync y el <xref:System.Net.PeerToPeer.Cloud> no se proporciona el parámetro, el método usa el <xref:System.Net.PeerToPeer.Cloud.Available> acceso directo a rellenar parámetros en la nube.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <see cref="T:System.Net.PeerToPeer.PeerName" /> que se va a resolver.</param>
        <param name="userState">Objeto definido por el usuario que contiene información de estado sobre la operación de resolución de nombres del mismo nivel.</param>
        <summary>Comienza una operación asincrónica de resolución de nombres del mismo nivel para el <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> especificado en todas las nubes conocidas para el elemento del mismo nivel que realizó la llamada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método asocia de forma asincrónica un nombre de mismo nivel a las nubes. Todas las nubes se consultan para ver el <xref:System.Net.PeerToPeer.PeerName>. Genera el <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento, que vuelve a llamar a la <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> método. O bien, provoca la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> evento, que vuelve a llamar a la <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> método.  
  
 Si el nombre del mismo nivel no se puede resolver una <xref:System.Net.PeerToPeer.PeerToPeerException> se produce.  
  
 Para los nombres de mismo nivel no protegidos, el mismo nombre puede ser registrado (y asociarlo con extremos diferentes) diferentes elementos del mismo nivel dentro de la misma nube.  
  
 Una llamada a la <xref:System.Net.PeerToPeer.PeerNameResolver> es similar a llamar al método el <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método para cada registro de nombres del mismo nivel en el <xref:System.Net.PeerToPeer.PeerNameRecordCollection>. Tenga en cuenta que utiliza el método de resolución en un registro de nombre individual del mismo nivel no invalida la resolución de varios nombres de mismo nivel.  
  
 Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método, hay un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método.  Las listas de parámetros son idénticas, salvo que el método ResolveAsync incluye un token del sistema de control de eventos asincrónico, y el método Resolve está pensado para el procesamiento sincrónico.  
  
 Todas las referencias asincrónicas al objeto de resolución se coordinan con un token de identificador único. Esto `userState` identificador de mensaje o símbolo (token) permite que un sistema operativo para entregar un mensaje a un único proceso de recepción después de que el mensaje se ha colocado en la cola de mensajes.  
  
 El <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento se genera si la operación de resolución completa con errores o se cancela.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Uno o ambos de los parámetros <paramref name="peerName" /> y <paramref name="userState" /> se establecen en <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * int * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, maxRecords, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <see cref="T:System.Net.PeerToPeer.PeerName" /> que se va a resolver.</param>
        <param name="maxRecords">Número máximo de registros que se van a obtener para el nombre del mismo nivel.</param>
        <param name="userState">Objeto definido por el usuario que contiene información sobre la operación de resolución.</param>
        <summary>Comienza una operación asincrónica de resolución de nombres del mismo nivel para el <see cref="T:System.Net.PeerToPeer.PeerName" /> especificado en todas las nubes conocidas para el elemento del mismo nivel que realiza la llamada, devolviendo <paramref name="maxRecords" /> entradas como máximo para el nombre del mismo nivel.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método asocia de forma asincrónica un nombre de mismo nivel a las nubes. Todas las nubes se consultan para ver el <xref:System.Net.PeerToPeer.PeerName>. Para los nombres de mismo nivel no protegidos, el mismo nombre puede ser registrado (y asociarlo con extremos diferentes) diferentes elementos del mismo nivel dentro de la misma nube. Si el nombre del mismo nivel no se puede resolver o es `null`, un <xref:System.Net.PeerToPeer.PeerToPeerException> se produce.  
  
 Este método provoca la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento, que vuelve a llamar a la <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> método. O bien, provoca la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> evento, que vuelve a llamar a la <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> método.  
  
 Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método, hay un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método.  Las listas de parámetros son idénticas, salvo que el método ResolveAsync incluye un token del sistema de control de eventos asincrónico, y el método Resolve está pensado para el procesamiento sincrónico.  
  
 Todas las referencias asincrónicas al objeto de resolución se coordinan con un token de identificador único <xref:System.Object>. Esto `userState` identificador de mensaje o símbolo (token) permite que un sistema operativo para entregar un mensaje a un único proceso de recepción después de que el mensaje se ha colocado en la cola de mensajes.  
  
 El <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento se genera si la operación de resolución completa con errores o se cancela.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Uno o ambos de los parámetros <paramref name="peerName" /> y <paramref name="userState" /> se establecen en <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="maxRecords" /> es menor o igual que cero.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, cloud, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <see cref="T:System.Net.PeerToPeer.PeerName" /> que se va a resolver.</param>
        <param name="cloud">
          <see cref="T:System.Net.PeerToPeer.Cloud" /> en el que se va a resolver <paramref name="peerName" />.</param>
        <param name="userState">
          <see cref="T:System.Object" /> definido por el usuario que contiene información sobre la operación de resolución de nombres del mismo nivel.</param>
        <summary>Comienza una operación asincrónica de resolución de nombres del mismo nivel para el <see cref="T:System.Net.PeerToPeer.PeerName" /> especificado en el <see cref="T:System.Net.PeerToPeer.Cloud" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método provoca la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento, que vuelve a llamar a la <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> método. O bien, provoca la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> evento, que vuelve a llamar a la <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> método.  
  
 Para los nombres de mismo nivel no protegidos, el mismo nombre puede ser registrado (y asociarlo con extremos diferentes) diferentes elementos del mismo nivel dentro de la misma nube.  
  
 Si el <xref:System.Net.PeerToPeer.Cloud> parámetro es `null`, el nombre se resuelve mediante la <xref:System.Net.PeerToPeer.Cloud.Available> acceso directo, que inicializa los valores predeterminados para el <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, y <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> propiedades.  
  
 Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método, hay un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método.  Las listas de parámetros son idénticas, salvo que el método ResolveAsync incluye un token del sistema de control de eventos asincrónico, y el método Resolve está pensado para el procesamiento sincrónico.  
  
 Todas las referencias asincrónicas al objeto de resolución se coordinan con un token de identificador único. Esto `userState` identificador de mensaje o símbolo (token) permite que un sistema operativo para entregar un mensaje a un único proceso de recepción después de que el mensaje se ha colocado en la cola de mensajes.  
  
 El <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento se genera si la operación de resolución completa con errores o se cancela.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Uno o ambos de los parámetros <paramref name="peerName" /> y <paramref name="userState" /> se establecen en <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * int * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, cloud, maxRecords, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <paramref name="peerName" /> que se va a resolver.</param>
        <param name="cloud">
          <paramref name="cloud" /> en el que se va a resolver <paramref name="peerName" />.</param>
        <param name="maxRecords">Número máximo de registros que se van a obtener de <paramref name="cloud" /> para <paramref name="peerName" />.</param>
        <param name="userState">Objeto definido por el usuario que contiene información sobre la operación de resolución de nombres del mismo nivel.</param>
        <summary>Comienza una operación asincrónica de resolución de nombres del mismo nivel para el <see cref="T:System.Net.PeerToPeer.PeerName" /> especificado en el <see cref="T:System.Net.PeerToPeer.Cloud" /> especificado.  La operación de resolución resolverá <paramref name="maxRecords" /> entradas como máximo para el nombre del mismo nivel especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para los nombres de mismo nivel no protegidos, el mismo nombre puede ser registrado (y asociarlo con extremos diferentes) diferentes elementos del mismo nivel dentro de la misma nube.  
  
 Este método provoca la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento, que vuelve a llamar a la <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> método. O bien, provoca la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> evento, que vuelve a llamar a la <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> método.  
  
 Si el <xref:System.Net.PeerToPeer.Cloud> parámetro es `null`, el nombre se resuelve mediante la <xref:System.Net.PeerToPeer.Cloud.Available> acceso directo, que inicializa los valores predeterminados para el <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, y <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> propiedades.  
  
 Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método, hay un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método.  Las listas de parámetros son idénticas, salvo que el método ResolveAsync incluye un token del sistema de control de eventos asincrónico, y el método Resolve está pensado para el procesamiento sincrónico.  
  
 Todas las referencias asincrónicas al objeto de resolución del mismo nivel se coordinan con un token de identificador único <xref:System.Object>. Esto `userState` identificador de mensaje o símbolo (token) permite que un sistema operativo para entregar un mensaje a un único proceso de recepción después de que el mensaje se ha colocado en la cola de mensajes.  
  
 El <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento se genera si la operación de resolución completa con errores o se cancela.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Uno o ambos de los parámetros <paramref name="peerName" /> y <paramref name="userState" /> se establecen en <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Uno o varios parámetros suministrados no son válidos.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">La finalización correcta de esta operación requiere al menos un controlador de eventos.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="maxRecords" /> es menor o igual que cero.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsyncCancel">
      <MemberSignature Language="C#" Value="public void ResolveAsyncCancel (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsyncCancel(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAsyncCancel (userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsyncCancel(System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsyncCancel : obj -&gt; unit" Usage="peerNameResolver.ResolveAsyncCancel userState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState">Objeto proporcionado a la instancia de método <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> que inicia la operación de resolución.</param>
        <summary>Cancela la solicitud de resolución de nombres del mismo nivel asincrónica especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llamada a este método garantiza que el sistema no intentará obtener registros adicionales para el elemento especificado <xref:System.Net.PeerToPeer.PeerName>.  Si este método se llama cuando una operación de resolución de nombres del mismo nivel asincrónica no está pendiente, actúa como una "operación no" (NO OP).  
  
 El `userState` debe proporcionarse el objeto ya que se utiliza para realizar un seguimiento de una llamada asincrónica concreta cuando hay varias llamadas en curso. Este objeto proporcionado por el llamador es único para cada solicitud de resolución de nombres del mismo nivel.  
  
 Este método devolverá inmediatamente, pero la operación puede o no puede cancelar inmediatamente. Los argumentos de evento devueltos por la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento contiene un campo que se puede sondear los clientes para determinar si se produce la cancelación.  
  
 Llamar a este método garantiza que el evento ResolveCompleted se señalará tan pronto como sea posible con el argumento de evento <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> establecido en `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Los parámetros <paramref name="userState" /> no pueden ser <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ResolveCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveCompleted As EventHandler(Of ResolveCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveCompletedEventArgs ^&gt; ^ ResolveCompleted;" />
      <MemberSignature Language="F#" Value="member this.ResolveCompleted : EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; " Usage="member this.ResolveCompleted : System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>El evento <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> se señaliza cuando una solicitud de resolución de nombres de mismo nivel para un <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> determinado se ha completado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> evento se genera una vez para cada punto de conexión se encuentra y se producirá este evento sólo una vez cuando se han encontrado todos los extremos.  
  
 Este evento también se generará si la <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operación se completa con error o se cancela.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="ResolveProgressChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveProgressChanged As EventHandler(Of ResolveProgressChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^&gt; ^ ResolveProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.ResolveProgressChanged : EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; " Usage="member this.ResolveProgressChanged : System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Este evento se señala cada vez que se encuentra un objeto <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> en respuesta a una operación <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> para un <see cref="T:System.Net.PeerToPeer.PeerName" /> determinado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si hay varios <xref:System.Net.PeerToPeer.PeerName> objetos existen en las nubes que se está consultadas, este evento se señala una vez para cada <xref:System.Net.PeerToPeer.PeerNameRecord> encontrado.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      </Docs>
    </Member>
  </Members>
</Type>