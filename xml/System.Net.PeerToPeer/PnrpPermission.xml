<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PnrpPermission.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fa800ff1deb4f0174a3bd9adba3f0d6d9db0f90d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fa800ff1deb4f0174a3bd9adba3f0d6d9db0f90d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.PeerToPeer.PnrpPermission">
          <source>Specifies the values that are used in <ph id="ph1">&lt;see cref="N:System.Net.PeerToPeer" /&gt;</ph> object permissions.</source>
          <target state="translated">Especifica los valores que se usan en los permisos del objeto <ph id="ph1">&lt;see cref="N:System.Net.PeerToPeer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PnrpPermission">
          <source>The default permissions allow all local and Intranet zone applications to access PNRP services.</source>
          <target state="translated">Los permisos predeterminados permiten todas las locales y aplicaciones de la zona de Intranet para tener acceso a servicios PNRP.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PnrpPermission">
          <source>If the default permissions are not changed, all link-local and site-local applications have access to Peer-to-Peer services, but global (internet) applications have no access.</source>
          <target state="translated">Si no se cambian los permisos predeterminados, todas las aplicaciones locales del vínculo y local del sitio tienen acceso a los servicios de punto a punto, pero las aplicaciones globales (internet) no tienen acceso.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PnrpPermission">
          <source>Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</source>
          <target state="translated">Instancias de este tipo tienen dos Estados de permiso: no tienen ningún acceso a los recursos protegidos por el permiso o tienen acceso completo sin restricciones a esos recursos.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>One of the values in the <ph id="ph1">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph> enumeration.</source>
          <target state="translated">Uno de los valores de la enumeración <ph id="ph1">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PnrpPermission" /&gt;</ph> class with the supplied initial permission state.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PnrpPermission" /&gt;</ph> con el estado del permiso inicial proporcionado.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</source>
          <target state="translated">Instancias de este tipo tienen dos Estados de permiso: no tienen ningún acceso a los recursos protegidos por el permiso o tienen acceso completo sin restricciones a esos recursos.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>If <ph id="ph1">`state`</ph> is Unrestricted, the PnrpPermission instance passes all demands.</source>
          <target state="translated">Si <ph id="ph1">`state`</ph> es sin restricciones, la instancia de PnrpPermission pasa todas las peticiones.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>If <ph id="ph1">`state`</ph> contains any other value, the PnrpPermission instance fails all demands.</source>
          <target state="translated">Si <ph id="ph1">`state`</ph> contiene cualquier otro valor, la instancia de PnrpPermission desaprueba todas las solicitudes.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.Copy">
          <source>Creates and returns an identical copy of the current <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PnrpPermission" /&gt;</ph>.</source>
          <target state="translated">Crea y devuelve una copia idéntica del objeto <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PnrpPermission" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.Copy">
          <source>An object with an IPermission interface, whose instance contains a copy of the current instance of <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PnrpPermission" /&gt;</ph>.</source>
          <target state="translated">Objeto con una interfaz IPermission cuya instancia contiene una copia de la instancia actual de <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PnrpPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.Copy">
          <source>A copy of a permission represents the same access to resources as the original permission.</source>
          <target state="translated">Una copia de un permiso representa el mismo acceso a los recursos que el permiso original.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.Copy">
          <source>Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</source>
          <target state="translated">Instancias de este tipo tienen dos Estados de permiso: no tienen ningún acceso a los recursos protegidos por el permiso o tienen acceso completo sin restricciones a esos recursos.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.Copy">
          <source>The parameter is not a valid <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PnrpPermission" /&gt;</ph> element.</source>
          <target state="translated">El parámetro no es un elemento <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PnrpPermission" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.Copy">
          <source>The parameter's version number is not supported.</source>
          <target state="translated">No se admite el número de la versión del parámetro.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.Copy">
          <source>The parameter is a <ph id="ph1">&lt;see langword="null" /&gt;</ph> reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated">El parámetro es una referencia <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)">
          <source>The XML encoding to use to reconstruct the permission.</source>
          <target state="translated">Codificación XML que se va a usar para reconstruir el permiso.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)">
          <source>Reconstructs a security object with a specified state from an XML encoding.</source>
          <target state="translated">Reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)">
          <source>Represents the XML object model for encoding security objects.</source>
          <target state="translated">Representa el modelo de objetos XML para codificar objetos de seguridad.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)">
          <source>This class cannot be inherited.</source>
          <target state="translated">Esta clase no puede heredarse.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)">
          <source>This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</source>
          <target state="translated">Esta clase está diseñada para ser una implementación ligera de un modelo de objetos XML simple para su uso en el sistema de seguridad y no para su uso como un modelo de objetos XML general.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)">
          <source>The parameter is not a valid <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PnrpPermission" /&gt;</ph> element.</source>
          <target state="translated">El parámetro no es un elemento <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PnrpPermission" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)">
          <source>The parameter's version number is not supported.</source>
          <target state="translated">No se admite el número de la versión del parámetro.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)">
          <source>The parameter is a <ph id="ph1">&lt;see langword="null" /&gt;</ph> reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated">El parámetro es una referencia <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)">
          <source>A permission to <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /&gt;</ph> with the current permission.</source>
          <target state="translated">Permiso para el método <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /&gt;</ph> con el permiso actual.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)">
          <source>It must be of the same type as the current permission.</source>
          <target state="translated">Debe ser del mismo tipo que el permiso actual.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)">
          <source>Creates and returns a permission that is the intersection of the current <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PnrpPermission" /&gt;</ph> and the specified permission.</source>
          <target state="translated">Crea y devuelve un permiso que es la intersección entre el objeto <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PnrpPermission" /&gt;</ph> actual y el permiso especificado.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)">
          <source>A new permission that represents the intersection of the current <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PnrpPermission" /&gt;</ph> and the specified permission.</source>
          <target state="translated">Nuevo permiso que representa la intersección entre el objeto <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PnrpPermission" /&gt;</ph> actual y el permiso especificado.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)">
          <source>This new permission is a <ph id="ph1">&lt;see langword="null" /&gt;</ph> reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) if the intersection is empty.</source>
          <target state="translated">Este nuevo permiso es una referencia <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic) si la intersección está vacía.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)">
          <source>The intersection of two permissions is a permission that describes the set of operations they both describe in common.</source>
          <target state="translated">La intersección de dos permisos es un permiso que describe el conjunto de operaciones descritas en ambos.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)">
          <source>Only a demand that passes both original permissions will pass the intersection.</source>
          <target state="translated">Solo una petición que pase ambos permisos originales aprobará la intersección.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)">
          <source>The following statements are required to be <ph id="ph1">`true`</ph> for all implementations of the Intersect method.</source>
          <target state="translated">Las instrucciones siguientes tienen que ser <ph id="ph1">`true`</ph> para todas las implementaciones del método Intersect.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)">
          <source>X and Y represent <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> object references that are not a <ph id="ph2">`null`</ph> reference (Nothing in Visual Basic).</source>
          <target state="translated">X e Y representan <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> referencias de objeto que no sean un <ph id="ph2">`null`</ph> referencia (Nothing en Visual Basic).</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)">
          <source>X.Intersect(X) returns a value equal to X.</source>
          <target state="translated">X.Intersect (x) devuelve un valor igual a X.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)">
          <source>X.Intersect(Y) returns the same value as Y.Intersect(X).</source>
          <target state="translated">X.Intersect (y) devuelve el mismo valor que y.Intersect (x).</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)">
          <source>X.Intersect(a <ph id="ph1">`null`</ph> reference (<ph id="ph2">`Nothing`</ph> in Visual Basic)) returns a <ph id="ph3">`null`</ph> reference (<ph id="ph4">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">X.Intersect (una <ph id="ph1">`null`</ph> referencia (<ph id="ph2">`Nothing`</ph> en Visual Basic)) devuelve un <ph id="ph3">`null`</ph> referencia (<ph id="ph4">`Nothing`</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)">
          <source>The target parameter is not a <ph id="ph1">&lt;see langword="null" /&gt;</ph> reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) and is not an instance of the same class as the current permission.</source>
          <target state="translated">El parámetro de destino no es una referencia <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic) y no es una instancia de la misma clase que el permiso actual.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
          <source>A permission that is to be tested for the subset relationship.</source>
          <target state="translated">Permiso que se va a probar para la relación del subconjunto.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
          <source>This permission must be of the same type as the current permission.</source>
          <target state="translated">Este permiso debe ser del mismo tipo que el permiso actual.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
          <source>Determines whether the current <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PnrpPermission" /&gt;</ph> is a subset of the specified permission.</source>
          <target state="translated">Determina si el objeto <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PnrpPermission" /&gt;</ph> actual es un subconjunto del permiso especificado.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PnrpPermission" /&gt;</ph> is a subset of the specified permission; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph> si el objeto <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PnrpPermission" /&gt;</ph> actual es un subconjunto del permiso especificado; en caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
          <source>The current <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PnrpPermission&gt;</ph> is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</source>
          <target state="translated">Actual <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PnrpPermission&gt;</ph> es un subconjunto del permiso especificado si el permiso actual especifica un conjunto de operaciones que se encuentra totalmente por el permiso especificado.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
          <source>For example, a permission that represents access to "<bpt id="p1">*</bpt>C:\example.txt<ept id="p1">*</ept>" is a subset of a permission that represents access to "<bpt id="p2">*</bpt>C:<ph id="ph1">\\</ph><ept id="p2">*</ept>".</source>
          <target state="translated">Por ejemplo, un permiso que representa el acceso a "<bpt id="p1">*</bpt>C:\example.txt<ept id="p1">*</ept>"es un subconjunto de un permiso que representa el acceso a"<bpt id="p2">*</bpt>C:<ph id="ph1">\\</ph><ept id="p2">*</ept>".</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If this method returns <ph id="ph1">`true`</ph>, the current permission represents no more access to the protected resource than does the specified permission.</source>
          <target state="translated">Si este método devuelve <ph id="ph1">`true`</ph>, el permiso actual no representa ningún grado de acceso al recurso protegido que el permiso especificado.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
          <source>The following statements are required to be <ph id="ph1">`true`</ph> for all implementations of the IsSubsetOf method.</source>
          <target state="translated">Las instrucciones siguientes tienen que ser <ph id="ph1">`true`</ph> para todas las implementaciones del método IsSubsetOf.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
          <source>X, Y, and Z represent <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> objects that are not a <ph id="ph2">`null`</ph> reference (<ph id="ph3">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">X, Y y Z representan <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> objetos que no forman un <ph id="ph2">`null`</ph> referencia (<ph id="ph3">`Nothing`</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
          <source>X.IsSubsetOf(X) returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">X.IsSubsetOf (x) devuelve <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
          <source>X.IsSubsetOf(Y) returns the same value as Y.IsSubsetOf(X) if and only if X and Y represent the same set of permissions.</source>
          <target state="translated">X.IsSubsetOf devuelve el mismo valor que y.IsSubsetOf (x) si y solo si X e Y representan el mismo conjunto de permisos.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If X.IsSubsetOf(Y) and Y.IsSubsetOf(Z) both return <ph id="ph1">`true`</ph>, X.IsSubsetOf(Z) returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Si X.IsSubsetOf y Y.IsSubsetOf ambos devuelven <ph id="ph1">`true`</ph>, x.IsSubsetOf (z) devuelve <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If X represents an empty IPermission object with a permission state of <bpt id="p1">*</bpt>None<ept id="p1">*</ept> and Y represents an IPermission object that is a <ph id="ph1">`null`</ph> reference (<ph id="ph2">`Nothing`</ph> in Visual Basic), X.IsSubsetOf(Y) returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Si X representa un objeto IPermission vacío con un estado de permiso <bpt id="p1">*</bpt>ninguno<ept id="p1">*</ept> y Y representa un objeto IPermission que es un <ph id="ph1">`null`</ph> referencia (<ph id="ph2">`Nothing`</ph> en Visual Basic), X.IsSubsetOf devuelve <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If Z is also an empty permission, the compound set operation X.Union(Z).IsSubsetOf(Y) also returns <ph id="ph1">`true`</ph> because the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PnrpPermission.Union%2A&gt;</ph> of two empty permissions is an empty permission.</source>
          <target state="translated">Si Z es también un permiso vacío, la conjunto compuesta x.Union (z) de la operación. También devuelve IsSubsetOf <ph id="ph1">`true`</ph> porque el <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PnrpPermission.Union%2A&gt;</ph> de dos permisos vacíos es un permiso vacío.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
          <source>The target parameter is not a <ph id="ph1">&lt;see langword="null" /&gt;</ph> reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) and is not an instance of the same class as the current permission.</source>
          <target state="translated">El parámetro de destino no es una referencia <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic) y no es una instancia de la misma clase que el permiso actual.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted">
          <source>Returns a value specifying whether the current <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PnrpPermission" /&gt;</ph> is unrestricted.</source>
          <target state="translated">Devuelve un valor que especifica si el objeto <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PnrpPermission" /&gt;</ph> actual no tiene restricciones.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if the current permission is unrestricted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph> si el permiso actual es no restringido; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted">
          <source>An unrestricted permission represents access to any and all resources protected by the permission.</source>
          <target state="translated">Un permiso no restringido representa el acceso a todos los recursos protegidos por el permiso.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.ToXml">
          <source>Creates an XML encoding of the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PnrpPermission" /&gt;</ph> and its current state.</source>
          <target state="translated">Crea una codificación XML de <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PnrpPermission" /&gt;</ph> y de su estado actual.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.ToXml">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> object that contains an XML encoding of the permission, including any state information.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> que contiene una codificación XML del permiso, incluida la información de estado.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)">
          <source>A permission to combine with the current permission.</source>
          <target state="translated">Permiso para combinar con el permiso actual.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)">
          <source>It must be of the same type as the current permission.</source>
          <target state="translated">Debe ser del mismo tipo que el permiso actual.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)">
          <source>Creates a permission that is the union of the current <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PnrpPermission" /&gt;</ph> and the specified permission.</source>
          <target state="translated">Crea un permiso que consiste en la unión del objeto <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PnrpPermission" /&gt;</ph> actual y del permiso especificado.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)">
          <source>A new permission that represents the <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /&gt;</ph> of the current <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PnrpPermission" /&gt;</ph> and the specified permission.</source>
          <target state="translated">Nuevo permiso que representa el método <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /&gt;</ph> del objeto <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PnrpPermission" /&gt;</ph> actual y del permiso especificado.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)">
          <source>The result of a call to <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PnrpPermission.Union%2A&gt;</ph> is a permission that represents all the operations represented by both the current <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PnrpPermission&gt;</ph> and the specified permission.</source>
          <target state="translated">El resultado de una llamada a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PnrpPermission.Union%2A&gt;</ph> es un permiso que representa todas las operaciones representadas por actual <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PnrpPermission&gt;</ph> y el permiso especificado.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)">
          <source>Any demand that passes either permission passes their union.</source>
          <target state="translated">Cualquier solicitud que pase alguno de estos permisos pasa también su unión.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)">
          <source>The following statements are required to be <ph id="ph1">`true`</ph> for all implementations of the Union method.</source>
          <target state="translated">Las instrucciones siguientes tienen que ser <ph id="ph1">`true`</ph> para todas las implementaciones del método Union.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)">
          <source>X and Y represent <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> objects that are not a <ph id="ph2">`null`</ph> reference (<ph id="ph3">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">X e Y representan <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> objetos que no forman un <ph id="ph2">`null`</ph> referencia (<ph id="ph3">`Nothing`</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)">
          <source>X.Union(X) returns an object that has the same value as X.</source>
          <target state="translated">X.Union (x) devuelve un objeto que tiene el mismo valor que X.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)">
          <source>X.Union(Y) returns an object that has the same value as the object returned by Y.Union(X).</source>
          <target state="translated">X.Union (y) devuelve un objeto que tiene el mismo valor que el objeto devuelto por y.Union (x).</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)">
          <source>X.Union(a <ph id="ph1">`null`</ph> reference (<ph id="ph2">`Nothing`</ph> in Visual Basic)) returns an object that has the same value as X.</source>
          <target state="translated">X.Union (una <ph id="ph1">`null`</ph> referencia (<ph id="ph2">`Nothing`</ph> en Visual Basic)) devuelve un objeto que tiene el mismo valor que X.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> parameter is invalid.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="target" /&gt;</ph> no es válido.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>