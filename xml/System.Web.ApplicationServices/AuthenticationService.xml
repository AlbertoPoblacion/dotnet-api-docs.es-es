<Type Name="AuthenticationService" FullName="System.Web.ApplicationServices.AuthenticationService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d897ae83eb4104674fa1bea5f802fc828cf168a5" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32692146" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AuthenticationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthenticationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.ApplicationServices.AuthenticationService" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthenticationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthenticationService" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Permite el acceso a la autenticación de formularios de ASP.NET como servicio Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.ApplicationServices.AuthenticationService> objeto le permite autenticar a los usuarios a través de un servicio de Windows Communication Foundation (WCF). Usar el servicio de autenticación de WCF cuando deben autenticar a los usuarios a través de la pertenencia a ASP.NET desde una aplicación que está fuera de la aplicación Web que almacena las credenciales de usuario. La aplicación debe poder enviar y consumir mensajes en el formato SOAP. A través de la <xref:System.Web.ApplicationServices.AuthenticationService> (clase), puede iniciar una sesión a los usuarios, usuarios del registro out, validen las credenciales, comprobación el estado de autenticación, personalizar la autenticación y establecer la cookie de autenticación.  
  
 El <xref:System.Web.ApplicationServices.AuthenticationService> clase contiene cuatro métodos que debe tener acceso solamente a través de un servicio WCF: la <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A>, y <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> métodos. Para llamar a estos métodos, habilite el servicio de autenticación en un servidor Web y, a continuación, conectar una aplicación de cliente compatible con WCF al servicio Web. Para obtener información sobre cómo configurar el servicio de autenticación, vea [Cómo: habilitar el servicio de autenticación WCF](http://msdn.microsoft.com/library/f7913259-762e-4a73-a771-ac9e42903f44).  
  
 Para iniciar sesión a los usuarios, pasar las credenciales de usuario para el <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> método. Si las credenciales son válidas, la <xref:System.Web.ApplicationServices.AuthenticationService> clase crea una cookie de autenticación. Si la cookie de autenticación no ha expirado, sabrá que se han autenticado las credenciales del usuario y no es necesario que validar las credenciales de nuevo. (Menor de la cookie de autenticación no está disponible a través de la <xref:System.Web.ApplicationServices.AuthenticationService> clase.)  
  
 El <xref:System.Web.ApplicationServices.AuthenticationService> puede provocar dos eventos: <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> y <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>. El <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> evento tiene lugar cuando se validan las credenciales de usuario. Crear un controlador de eventos para el <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> eventos para personalizar cómo se validan las credenciales de usuario. El <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> evento tiene lugar cuando se establece la cookie de autenticación una vez que se han validado las credenciales de usuario. Crear un controlador de eventos para el <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> eventos para personalizar la cookie de autenticación.  
  
 El <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> método comprueba las credenciales de usuario para la autenticación, pero no devuelve un vale de autenticación. Utilice <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> cuando un usuario ha registrado previamente en y debe comprobar que las credenciales continúen siendo válidas en el inicio de una nueva sesión de la aplicación.  
  
 Para obtener un ejemplo de uso del servicio de autenticación de WCF desde una aplicación de consola, consulte [Tutorial: usar servicios de aplicaciones de ASP.NET](http://msdn.microsoft.com/library/f3f394f0-20d6-4361-aa8f-4b21bf4933eb).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthenticationService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthenticationService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.ApplicationServices.AuthenticationService" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticating">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; Authenticating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.ApplicationServices.AuthenticatingEventArgs&gt; Authenticating" />
      <MemberSignature Language="DocId" Value="E:System.Web.ApplicationServices.AuthenticationService.Authenticating" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event Authenticating As EventHandler(Of AuthenticatingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Web::ApplicationServices::AuthenticatingEventArgs ^&gt; ^ Authenticating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se validan las credenciales del usuario.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> evento se desencadena cuando se validan las credenciales de usuario. Crear un controlador de eventos para el <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> eventos para personalizar cómo se validan las credenciales de usuario.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo enlazar un controlador de eventos para el <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> evento en el `Application_Start` método del archivo Global.asax.  
  
 [!code-csharp[System.Web.Security.LoginService_MultipleCredentials#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/cs/Global.asax#1)]
 [!code-vb[System.Web.Security.LoginService_MultipleCredentials#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/vb/Global.asax#1)]  
  
 En el ejemplo siguiente se muestra un controlador de eventos para el <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> eventos en el archivo Global.asax. El controlador de eventos lee dos valores de autenticación de la <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A> propiedad y pasa junto con el nombre de usuario y la contraseña a una clase de autenticación personalizado denominados `StudentAuthentication`.  
  
 [!code-csharp[System.Web.Security.LoginService_MultipleCredentials#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/cs/Global.asax#2)]
 [!code-vb[System.Web.Security.LoginService_MultipleCredentials#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/vb/Global.asax#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ApplicationServices.AuthenticatingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="CreatingCookie">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; CreatingCookie;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.ApplicationServices.CreatingCookieEventArgs&gt; CreatingCookie" />
      <MemberSignature Language="DocId" Value="E:System.Web.ApplicationServices.AuthenticationService.CreatingCookie" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event CreatingCookie As EventHandler(Of CreatingCookieEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Web::ApplicationServices::CreatingCookieEventArgs ^&gt; ^ CreatingCookie;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se establece la cookie de autenticación.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> evento se desencadena cuando se establece la cookie de autenticación una vez que se han validado las credenciales de usuario. Crear un controlador de eventos para el <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> eventos para personalizar la cookie de autenticación.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo enlazar un controlador de eventos para el <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> evento en el `Application_Start` método del archivo Global.asax.  
  
 [!code-csharp[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/cs/Global.asax#1)]
 [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/vb/Global.asax#1)]  
  
 En el ejemplo siguiente se muestra un controlador de eventos para el <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> eventos en el archivo Global.asax. El controlador de eventos personaliza la cookie de autenticación agregando el valor de la <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> propiedad a la <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> propiedad. Almacén de la <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> propiedad en una cookie sólo si sabe que los datos de la propiedad no son confidenciales. Los usuarios malintencionados pueden tener acceso a los valores de la cookie.  
  
 [!code-csharp[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/cs/Global.asax#2)]
 [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/vb/Global.asax#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ApplicationServices.CreatingCookieEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="IsLoggedIn">
      <MemberSignature Language="C#" Value="public bool IsLoggedIn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsLoggedIn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn" />
      <MemberSignature Language="VB.NET" Value="Public Function IsLoggedIn () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsLoggedIn();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina si el usuario actual está autenticado.</summary>
        <returns>
          Es <see langword="true" /> si el usuario está autenticado; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> método comprueba si el usuario actual está autenticado comprobando la <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A>.property.  
  
> [!NOTE]
>  No llame a la <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> método desde el código que se está ejecutando en el servidor Web. Se llama a la <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> método únicamente como parte de un servicio WCF.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Login">
      <MemberSignature Language="C#" Value="public bool Login (string username, string password, string customCredential, bool isPersistent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Login(string username, string password, string customCredential, bool isPersistent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Login (username As String, password As String, customCredential As String, isPersistent As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Login(System::String ^ username, System::String ^ password, System::String ^ customCredential, bool isPersistent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="customCredential" Type="System.String" />
        <Parameter Name="isPersistent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Nombre de usuario que se va a validar.</param>
        <param name="password">Contraseña para el usuario especificado.</param>
        <param name="customCredential">Valor o valores que se van a validar además de <c>userName</c> y <c>password</c>, si los hubiera.</param>
        <param name="isPersistent">Valor que indica si el vale de autenticación mantiene su validez entre sesiones.</param>
        <summary>Comprueba las credenciales del usuario y crea un vale de autenticación (cookie) si las credenciales son válidas.</summary>
        <returns>
          Es <see langword="true" /> si las credenciales de usuario son válidas; en cualquier otro caso, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> método valida las credenciales del usuario a través de un proveedor de pertenencia. Puede utilizar el proveedor de pertenencia predeterminado o especificar un proveedor de pertenencia personalizado en tiempo de ejecución. El <xref:System.Web.ApplicationServices.AuthenticationService> clase pasadas `userName` y `password` para el proveedor de pertenencia <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> método, pero no pasa `customCredential`. Si <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> devuelve `true`, <xref:System.Web.ApplicationServices.AuthenticationService> crea un vale de autenticación como una cookie. Establecer el `isPersistent` parámetro `true` para crear un vale de autenticación que se extiende más allá de la sesión actual.  
  
> [!NOTE]
>  Utilice siempre el servicio de autenticación junto con la capa de sockets seguros (SSL, mediante HTTPS) para proteger datos confidenciales.  
  
 El <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> método genera el <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> eventos y <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> eventos. Crear un controlador de eventos para <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> para personalizar la autenticación, como la comprobación de los valores `customCredential` o validar credenciales a través de un proveedor de pertenencia no predeterminado. Los valores de `customCredential` no se validan con el proveedor de pertenencia predeterminado. Para personalizar la cookie de autenticación, cree un controlador de eventos para <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>.  
  
> [!NOTE]
>  No llame a la <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> método desde el código que se está ejecutando en el servidor Web. Se llama a la <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> método únicamente como parte de un servicio WCF. Para obtener más información, consulte [la autenticación de ASP.NET](http://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          El valor de <paramref name="userName" /> o <paramref name="password" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Logout">
      <MemberSignature Language="C#" Value="public void Logout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Logout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.Logout" />
      <MemberSignature Language="VB.NET" Value="Public Sub Logout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Logout();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Borra el vale de autenticación (cookie) en el explorador.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> método borra la cookie de autenticación de la colección de cookies del explorador. El usuario debe iniciar sesión nuevo que va a autenticar.  
  
 La <xref:System.Web.ApplicationServices.AuthenticationService> clase no almacena información en el servidor acerca de la autenticación se han borrado vales.  
  
> [!NOTE]
>  No llame a la <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> método desde el código que se está ejecutando en el servidor Web. Se llama a la <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> método únicamente como parte de un servicio WCF. Para obtener más información, consulte [la autenticación de ASP.NET](http://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Security.FormsAuthentication.SignOut" />
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public bool ValidateUser (string username, string password, string customCredential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateUser(string username, string password, string customCredential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateUser (username As String, password As String, customCredential As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateUser(System::String ^ username, System::String ^ password, System::String ^ customCredential);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="customCredential" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nombre de usuario que se va a validar.</param>
        <param name="password">Contraseña para el usuario especificado.</param>
        <param name="customCredential">Valor o valores que se van a validar además de <c>userName</c> y <c>password</c>, si los hubiera.</param>
        <summary>Autentica las credenciales del usuario sin emitir un vale de autenticación.</summary>
        <returns>
          Es <see langword="true" /> si las credenciales del usuario son válidas; en cualquier otro caso, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> método autentica las credenciales de usuario pero no establece una cookie de autenticación. Sin una cookie de autenticación, el usuario no se grabará en incluso si las credenciales son válidas.  
  
 Use la <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> método cuando se debe comprobar si las credenciales del usuario son válidas sin recibir una cookie de autenticación. Por ejemplo, podría hacerlo si la cookie de autenticación ya está almacenada en una aplicación cliente pero desea comprobar que las credenciales del usuario continúen siendo válidas cuando se inicia una sesión nueva.  
  
 El <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> método genera el <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> eventos, pero no se genera el <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> eventos.  
  
> [!NOTE]
>  No llame a la <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> método desde el código que se está ejecutando en el servidor Web. Se llama a la <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> método únicamente como parte de un servicio WCF. Para obtener más información, consulte [la autenticación de ASP.NET](http://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          El valor de <paramref name="userName" /> o <paramref name="password" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>