<Type Name="ExportAttribute" FullName="System.ComponentModel.Composition.ExportAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="360f34ea16c30195fdf771b4bb7ca51250e3039a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36711494" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ExportAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExportAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ExportAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ExportAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExportAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type ExportAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Field | System.AttributeTargets.Method | System.AttributeTargets.Property, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Especifica que un tipo, una propiedad, un campo o un método proporciona una exportación determinada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En el modelo de programación con atributos, los <xref:System.ComponentModel.Composition.ExportAttribute> declara que una parte exporta, o proporciona al contenedor de composición, un objeto que cumple un contrato determinado. Durante la composición, partes con importaciones que tienen contratos coincidentes tendrán esas dependencias rellenadas mediante el objeto exportado.  
  
 La <xref:System.ComponentModel.Composition.ExportAttribute> puede decorar una clase completa o una propiedad, campo o método de una clase. Si se representa toda la clase, una instancia de la clase es el objeto exportado. Si se decora un miembro de una clase, el objeto exportado será el valor del miembro representativo.  
  
 Si no coincide con un contrato se determina principalmente por el nombre de contrato y el tipo de contrato. Para obtener más información, vea <xref:System.ComponentModel.Composition.ImportAttribute>.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra tres clases decoradas con el <xref:System.ComponentModel.Composition.ExportAttribute>y tres importaciones que coinciden con ellos.  
  
 [!code-csharp[ImportAndExport#1](~/samples/snippets/csharp/VS_Snippets_Misc/importandexport/cs/program.cs#1)]
 [!code-vb[ImportAndExport#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/importandexport/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Composition.ImportAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Composition.ExportAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Composition.ExportAttribute" />, exportando el tipo o el miembro marcado con este atributo bajo el nombre de contrato predeterminado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El nombre de contrato predeterminado es el resultado de llamar al método el <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> método en el tipo de propiedad o un campo o en el tipo que está marcado con este atributo.  
  
 Los métodos marcados con este atributo deben especificar un nombre de contrato o un tipo mediante el uso <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> o <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.  
  
 El nombre del contrato se compara utilizando el <xref:System.StringComparer.Ordinal%2A> propiedad que se va a realizar una comparación entre mayúsculas y minúsculas, no lingüística.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ExportAttribute : string -&gt; System.ComponentModel.Composition.ExportAttribute" Usage="new System.ComponentModel.Composition.ExportAttribute contractName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName">Nombre del contrato que se usa para exportar el tipo o el miembro marcado con este atributo, o <see langword="null" /> o una cadena vacía ("") para usar el nombre de contrato predeterminado.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> y exporta el tipo o el miembro marcado con este atributo bajo el nombre de contrato especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El nombre de contrato predeterminado es el resultado de llamar al método el <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> método en el tipo de propiedad o un campo, o en el tipo que está marcado con este atributo.  
  
 Los métodos marcados con este atributo deben especificar un nombre de contrato o un tipo mediante el uso <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> o <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.  
  
 El nombre del contrato se compara utilizando el <xref:System.StringComparer.Ordinal%2A> propiedad que se va a realizar una comparación entre mayúsculas y minúsculas, no lingüística.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(Type ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ExportAttribute : Type -&gt; System.ComponentModel.Composition.ExportAttribute" Usage="new System.ComponentModel.Composition.ExportAttribute contractType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType">Tipo del que se deriva el nombre de contrato que se usa para exportar el tipo o el miembro marcado con este atributo o <see langword="null" /> para usar el nombre de contrato predeterminado.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Composition.ExportAttribute" />, exportando el tipo o el miembro marcado con este atributo bajo un nombre de contrato derivado del tipo especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El nombre del contrato es el resultado de llamar al método el <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> método en `contractType`.  
  
 El nombre de contrato predeterminado es el resultado de llamar al método el <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> método en el tipo de propiedad o un campo o en el tipo que está marcado con este atributo.  
  
 Los métodos marcados con este atributo deben especificar un nombre de contrato o un tipo mediante el uso <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> o <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.  
  
 El nombre del contrato se compara utilizando el <xref:System.StringComparer.Ordinal%2A> propiedad que se va a realizar una comparación entre mayúsculas y minúsculas, no lingüística.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (string contractName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(System::String ^ contractName, Type ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ExportAttribute : string * Type -&gt; System.ComponentModel.Composition.ExportAttribute" Usage="new System.ComponentModel.Composition.ExportAttribute (contractName, contractType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractName">Nombre del contrato que se usa para exportar el tipo o el miembro marcado con este atributo, o <see langword="null" /> o una cadena vacía ("") para usar el nombre de contrato predeterminado.</param>
        <param name="contractType">Tipo que se va a exportar.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Composition.ExportAttribute" />, exportando el tipo indicado con el nombre de contrato especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ExportAttribute.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractName : string" Usage="System.ComponentModel.Composition.ExportAttribute.ContractName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de contrato que se usa para exportar el tipo o el miembro marcado con este atributo.</summary>
        <value>Nombre de contrato que se usa para exportar el tipo o el miembro marcado con este atributo. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractType">
      <MemberSignature Language="C#" Value="public Type ContractType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ExportAttribute.ContractType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContractType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractType : Type" Usage="System.ComponentModel.Composition.ExportAttribute.ContractType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tipo de contrato exportado por el miembro al que está adjunto este atributo.</summary>
        <value>Tipo de exportación que se va a proporcionar. El valor predeterminado es <see langword="null" />, que significa que el tipo se obtendrá examinando el tipo en el miembro al que está adjunta esta exportación.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>