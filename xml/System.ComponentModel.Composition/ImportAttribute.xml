<Type Name="ImportAttribute" FullName="System.ComponentModel.Composition.ImportAttribute">
  <TypeSignature Language="C#" Value="public class ImportAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ImportAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ImportAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e9565-101">Especifica que el objeto <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> debe proporcionar un valor de propiedad, campo o parámetro.</span><span class="sxs-lookup"><span data-stu-id="e9565-101">Specifies that a property, field, or parameter value should be provided by the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.object</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9565-102">En el modelo de programación con atributos, los <xref:System.ComponentModel.Composition.ImportAttribute> se utiliza para declarar las importaciones o dependencias, de un elemento determinado.</span><span class="sxs-lookup"><span data-stu-id="e9565-102">In the Attributed Programming Model, the <xref:System.ComponentModel.Composition.ImportAttribute> is used to declare the imports, or dependencies, of a given part.</span></span> <span data-ttu-id="e9565-103">Puede decorar una propiedad, un campo o un método.</span><span class="sxs-lookup"><span data-stu-id="e9565-103">It can decorate a property, a field, or a method.</span></span> <span data-ttu-id="e9565-104">Durante la composición, las importaciones de un elemento rellenará el <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> objeto al que pertenece dicha parte, mediante el uso de las exportaciones proporcionadas para que <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> objeto.</span><span class="sxs-lookup"><span data-stu-id="e9565-104">During composition, a part's imports will be filled by the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object to which that part belongs, by using the exports provided to that <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object.</span></span>  
  
 <span data-ttu-id="e9565-105">Si una importación coincide con una exportación determinada se determina principalmente comparando el nombre del contrato y el tipo de contrato.</span><span class="sxs-lookup"><span data-stu-id="e9565-105">Whether an import matches a given export is determined primarily by comparing the contract name and the contract type.</span></span> <span data-ttu-id="e9565-106">Por lo general, no es necesario especificar uno de ellos cuando se usa el atributo de importación en el código, y se pueden inferir automáticamente el tipo del miembro representativo.</span><span class="sxs-lookup"><span data-stu-id="e9565-106">Ordinarily, you do not have to specify either of these when using the import attribute in code, and they will be automatically inferred from the type of the decorated member.</span></span> <span data-ttu-id="e9565-107">Si la importación debe coincidir con una exportación de un tipo diferente (por ejemplo, una subclase del tipo del miembro representativo o una interfaz implementada por ese miembro), a continuación, el tipo de contrato debe especificarse explícitamente.</span><span class="sxs-lookup"><span data-stu-id="e9565-107">If the import must match an export of a different type (for example, a subclass of the type of the decorated member, or an interface implemented by that member), then the contract type must be explicitly specified.</span></span> <span data-ttu-id="e9565-108">El nombre del contrato también se puede especificar explícitamente, por ejemplo, para distinguir entre varios contratos con el mismo tipo, pero es mejor hacerlo a través de metadatos.</span><span class="sxs-lookup"><span data-stu-id="e9565-108">The contract name can also be explicitly specified, for example to distinguish between multiple contracts with the same type, but it is usually better to do this through metadata.</span></span> <span data-ttu-id="e9565-109">Para obtener más información acerca de los metadatos, vea <xref:System.ComponentModel.Composition.PartMetadataAttribute>.</span><span class="sxs-lookup"><span data-stu-id="e9565-109">For more information about metadata, see <xref:System.ComponentModel.Composition.PartMetadataAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9565-110">En el ejemplo siguiente se muestra tres clases con miembros decorados con el <xref:System.ComponentModel.Composition.ImportAttribute>y tres exportaciones que coinciden con ellos.</span><span class="sxs-lookup"><span data-stu-id="e9565-110">The following example shows three classes with members decorated with the <xref:System.ComponentModel.Composition.ImportAttribute>, and three exports that match them.</span></span>  
  
 [!code-csharp[ImportAndExport#1](~/samples/snippets/csharp/VS_Snippets_Misc/importandexport/cs/program.cs#1)]
 [!code-vb[ImportAndExport#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/importandexport/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Composition.ExportAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e9565-111">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Composition.ImportAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="e9565-111">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e9565-112">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Composition.ImportAttribute" />, importando la exportación con el nombre de contrato predeterminado.</span><span class="sxs-lookup"><span data-stu-id="e9565-112">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the default contract name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9565-113">El nombre de contrato predeterminado es el resultado de llamar al método el <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> método en el tipo de propiedad, campo o parámetro que está marcado con este atributo.</span><span class="sxs-lookup"><span data-stu-id="e9565-113">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that this is marked with this attribute.</span></span>  
  
 <span data-ttu-id="e9565-114">El nombre del contrato se compara utilizando el <xref:System.StringComparer.Ordinal%2A> propiedad que se va a realizar una comparación entre mayúsculas y minúsculas, no lingüística.</span><span class="sxs-lookup"><span data-stu-id="e9565-114">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute(System::String ^ contractName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName"><span data-ttu-id="e9565-115">Nombre del contrato de la exportación que se va a importar, o <see langword="null" /> o una cadena vacía ("") para usar el nombre de contrato predeterminado.</span><span class="sxs-lookup"><span data-stu-id="e9565-115">The contract name of the export to import, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="e9565-116">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Composition.ImportAttribute" />, importando la exportación con el nombre de contrato especificado.</span><span class="sxs-lookup"><span data-stu-id="e9565-116">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the specified contract name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9565-117">El nombre de contrato predeterminado es el resultado de llamar al método el <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> método en el tipo de propiedad, campo o parámetro que está marcado con este atributo.</span><span class="sxs-lookup"><span data-stu-id="e9565-117">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="e9565-118">El nombre del contrato se compara utilizando el <xref:System.StringComparer.Ordinal%2A> propiedad que se va a realizar una comparación entre mayúsculas y minúsculas, no lingüística.</span><span class="sxs-lookup"><span data-stu-id="e9565-118">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute(Type ^ contractType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType"><span data-ttu-id="e9565-119">Tipo del que se va a derivar el nombre de contrato de la exportación o <see langword="null" /> para usar el nombre de contrato predeterminado.</span><span class="sxs-lookup"><span data-stu-id="e9565-119">The type to derive the contract name of the export from, or <see langword="null" /> to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="e9565-120">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Composition.ImportAttribute" />, importando la exportación con el nombre de contrato derivado del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="e9565-120">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the contract name derived from the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9565-121">El nombre del contrato es el resultado de llamar al método el <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> método en `contractType`.</span><span class="sxs-lookup"><span data-stu-id="e9565-121">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `contractType`.</span></span>  
  
 <span data-ttu-id="e9565-122">El nombre de contrato predeterminado es el resultado de llamar al método el <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> método en el tipo de propiedad, campo o parámetro que está marcado con este atributo.</span><span class="sxs-lookup"><span data-stu-id="e9565-122">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="e9565-123">El nombre del contrato se compara utilizando el <xref:System.StringComparer.Ordinal%2A> propiedad que se va a realizar una comparación entre mayúsculas y minúsculas, no lingüística.</span><span class="sxs-lookup"><span data-stu-id="e9565-123">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute (string contractName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute(System::String ^ contractName, Type ^ contractType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractName"><span data-ttu-id="e9565-124">Nombre del contrato de la exportación que se va a importar, o <see langword="null" /> o una cadena vacía ("") para usar el nombre de contrato predeterminado.</span><span class="sxs-lookup"><span data-stu-id="e9565-124">The contract name of the export to import, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <param name="contractType"><span data-ttu-id="e9565-125">Tipo de la exportación que se va a importar.</span><span class="sxs-lookup"><span data-stu-id="e9565-125">The type of the export to import.</span></span></param>
        <summary><span data-ttu-id="e9565-126">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Composition.ImportAttribute" />, importando la exportación con el nombre de contrato y el tipo especificados.</span><span class="sxs-lookup"><span data-stu-id="e9565-126">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the specified contract name and type.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDefault">
      <MemberSignature Language="C#" Value="public bool AllowDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDefault" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.AllowDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDefault { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9565-127">Obtiene o establece un valor que indica si la propiedad, el campo o el parámetro se establecerá en el valor predeterminado de su tipo cuando no haya una exportación con el nombre de contrato en el contenedor.</span><span class="sxs-lookup"><span data-stu-id="e9565-127">Gets or sets a value that indicates whether the property, field, or parameter will be set to its type's default value when an export with the contract name is not present in the container.</span></span></summary>
        <value>
          <span data-ttu-id="e9565-128">Es <see langword="true" /> si la propiedad, el campo o el parámetro se establecerá en el valor predeterminado de su tipo cuando no haya ninguna exportación con <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> en <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e9565-128"><see langword="true" /> if the property, field, or parameter will be set to its type's default value when there is no export with the <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e9565-129">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e9565-129">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9565-130">El valor predeterminado del tipo de una propiedad, campo o parámetro es `null` para los tipos de referencia y cero para los tipos de valor numérico.</span><span class="sxs-lookup"><span data-stu-id="e9565-130">The default value of the type of a property, field, or parameter is `null` for reference types and zero for numeric value types.</span></span> <span data-ttu-id="e9565-131">Para otros tipos de valor, el valor predeterminado será cada campo del tipo de valor que se inicializa a cero si el campo es un tipo de valor o `null` si el campo es un tipo de referencia.</span><span class="sxs-lookup"><span data-stu-id="e9565-131">For other value types, the default value will be each field of the value type initialized to zero if the field is a value type, or `null` if the field is a reference type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowRecomposition">
      <MemberSignature Language="C#" Value="public bool AllowRecomposition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowRecomposition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.AllowRecomposition" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowRecomposition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowRecomposition { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9565-132">Obtiene o establece un valor que indica si la propiedad o el campo se recompondrá cuando las exportaciones con un contrato coincidente hayan cambiado en el contenedor.</span><span class="sxs-lookup"><span data-stu-id="e9565-132">Gets or sets a value that indicates whether the property or field will be recomposed when exports with a matching contract have changed in the container.</span></span></summary>
        <value>
          <span data-ttu-id="e9565-133">Es <see langword="true" /> si la propiedad o el campo permite la recomposición cuando las exportaciones con un <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> coincidente se agregan o quitan de <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e9565-133"><see langword="true" /> if the property or field allows recomposition when exports with a matching <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> are added or removed from the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e9565-134">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e9565-134">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9565-135">Obtiene el nombre de contrato de la exportación que se va a importar.</span><span class="sxs-lookup"><span data-stu-id="e9565-135">Gets the contract name of the export to import.</span></span></summary>
        <value><span data-ttu-id="e9565-136">Nombre de contrato de la exportación que se va a importar.</span><span class="sxs-lookup"><span data-stu-id="e9565-136">The contract name of the export to import.</span></span> <span data-ttu-id="e9565-137">El valor predeterminado es una cadena vacía ("").</span><span class="sxs-lookup"><span data-stu-id="e9565-137">The default is an empty string ("").</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractType">
      <MemberSignature Language="C#" Value="public Type ContractType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.ContractType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContractType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9565-138">Obtiene el tipo de la exportación que se va a importar.</span><span class="sxs-lookup"><span data-stu-id="e9565-138">Gets the type of the export to import.</span></span></summary>
        <value><span data-ttu-id="e9565-139">Tipo de la exportación que se va a importar.</span><span class="sxs-lookup"><span data-stu-id="e9565-139">The type of the export to import.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredCreationPolicy">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property RequiredCreationPolicy As CreationPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::CreationPolicy RequiredCreationPolicy { System::ComponentModel::Composition::CreationPolicy get(); void set(System::ComponentModel::Composition::CreationPolicy value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.CreationPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9565-140">Obtiene o establece un valor que indica que el importador necesita un objeto <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> específico para las exportaciones que se usan para satisfacer esta importación.</span><span class="sxs-lookup"><span data-stu-id="e9565-140">Gets or sets a value that indicates that the importer requires a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> for the exports used to satisfy this import.</span></span></summary>
        <value><span data-ttu-id="e9565-141">Uno de los siguientes valores:</span><span class="sxs-lookup"><span data-stu-id="e9565-141">One of the following values:</span></span>  
  
 <span data-ttu-id="e9565-142">Es <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" /> si el importador no necesita un objeto <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> concreto.</span><span class="sxs-lookup"><span data-stu-id="e9565-142"><see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />, if the importer does not require a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy" />.</span></span> <span data-ttu-id="e9565-143">Este es el valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="e9565-143">This is the default.</span></span>  
  
 <span data-ttu-id="e9565-144">Es <see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" /> para requerir que todos los elementos del contenedor compartan todas las exportaciones usadas.</span><span class="sxs-lookup"><span data-stu-id="e9565-144"><see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" /> to require that all used exports be shared by all parts in the container.</span></span>  
  
 <span data-ttu-id="e9565-145">Es <see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" /> para requerir que todas las exportaciones usadas no se compartan en un contenedor.</span><span class="sxs-lookup"><span data-stu-id="e9565-145"><see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" /> to require that all used exports be non-shared in a container.</span></span> <span data-ttu-id="e9565-146">En este caso, cada elemento recibe su propia instancia.</span><span class="sxs-lookup"><span data-stu-id="e9565-146">In this case, each part receives their own instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.ImportSource Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.ImportSource Source" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As ImportSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::ImportSource Source { System::ComponentModel::Composition::ImportSource get(); void set(System::ComponentModel::Composition::ImportSource value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.ImportSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9565-147">Obtiene o establece un valor que especifica los ámbitos de los que esta importación puede satisfacer.</span><span class="sxs-lookup"><span data-stu-id="e9565-147">Gets or sets a value that specifies the scopes from which this import may be satisfied.</span></span></summary>
        <value><span data-ttu-id="e9565-148">Un valor que especifica los ámbitos de los que esta importación puede satisfacer.</span><span class="sxs-lookup"><span data-stu-id="e9565-148">A value that specifies the scopes from which this import may be satisfied.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>