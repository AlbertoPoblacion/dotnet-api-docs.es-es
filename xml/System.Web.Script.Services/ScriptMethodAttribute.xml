<Type Name="ScriptMethodAttribute" FullName="System.Web.Script.Services.ScriptMethodAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a961376231c1e59475ca86e55bc7b30f56c0576d" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39989364" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ScriptMethodAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ScriptMethodAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Services.ScriptMethodAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ScriptMethodAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptMethodAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ScriptMethodAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Especifica qué verbo HTTP se utiliza para invocar un método y el formato de la respuesta. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este atributo se utiliza para especificar información para los métodos que se puede llamar desde script de cliente. El atributo permite especificar qué verbo HTTP (GET o POST) puede usarse para invocar un método. También permite especificar si se da formato a la respuesta mediante el uso de JavaScript Object Notation (JSON) o XML.  
  
 El atributo <xref:System.Web.Script.Services.ScriptMethodAttribute> es opcional. (Sin embargo, los métodos que se pueden llamar desde script de cliente deben tener el <xref:System.Web.Services.WebMethodAttribute?displayProperty=nameWithType> atributo aplicado.). Si un método no está marcado con <xref:System.Web.Script.Services.ScriptMethodAttribute>, se llamará al método mediante el comando HTTP POST y la respuesta será serializada como JSON. No se puede invalidar esta configuración de la secuencia de comandos.  
  
 <xref:System.Web.Script.Services.ScriptMethodAttribute> toma sólo con el nombre de los parámetros. Los siguientes son las propiedades de la <xref:System.Web.Script.Services.ScriptMethodAttribute> clase que se puede usar como parámetros con nombre:  
  
-   <xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A>  
  
     Especifica si se invocará el método mediante el comando HTTP GET. El valor predeterminado es `false`.  
  
    > [!IMPORTANT]
    >  Establecer el <xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A> propiedad `true` podría suponer un riesgo de seguridad para la aplicación si está trabajando con datos confidenciales o transacciones. En las solicitudes GET, el mensaje se codifica mediante el explorador en la dirección URL y, por tanto, es un objetivo más fácil su manipulación. Para las solicitudes GET y POST, debe seguir las directrices de seguridad para proteger los datos confidenciales.  
  
-   <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>  
  
     Especifica si la respuesta será serializada como JSON o como XML. El valor predeterminado es `Json`. El <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A> propiedad es útil para especificar el XML como tipo de valor devuelto cuando el método devuelve un <xref:System.Xml.XmlDocument> o un <xref:System.Xml.XmlElement> objeto.  
  
-   <xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>  
  
     Especifica si todos los tipos de valor devuelto, incluidos los tipos de cadena, se serializan como XML. El valor de la <xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A> propiedad se omite cuando la respuesta se serializa como JSON.  
  
 Para obtener más información acerca de cómo utilizar los atributos, vea [atributos](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo aplicar <xref:System.Web.Script.Services.ScriptMethodAttribute> a la `GetXmlDocument` y `EchoStringAndDate` métodos para especificar qué verbo HTTP para usar y para especificar el formato de respuesta.  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.WebMethodAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptMethodAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Services.ScriptMethodAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptMethodAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Script.Services.ScriptMethodAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseFormat">
      <MemberSignature Language="C#" Value="public System.Web.Script.Services.ResponseFormat ResponseFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Script.Services.ResponseFormat ResponseFormat" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseFormat As ResponseFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Script::Services::ResponseFormat ResponseFormat { System::Web::Script::Services::ResponseFormat get(); void set(System::Web::Script::Services::ResponseFormat value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseFormat : System.Web.Script.Services.ResponseFormat with get, set" Usage="System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Script.Services.ResponseFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el formato de la respuesta del método.</summary>
        <value>Uno de los valores de <see cref="T:System.Web.Script.Services.ResponseFormat" />. El valor predeterminado es <see langword="Json" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A> propiedad cuando desee especificar el XML como formato para el tipo de valor devuelto. Esto es útil cuando el método devuelve un <xref:System.Xml.XmlDocument> o un <xref:System.Xml.XmlElement> objeto.  
  
 Cuando el <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A> propiedad está establecida en `Xml`, los campos públicos y propiedades de tipo de valor devuelto que tienen el <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute> no se omitirá el atributo aplicado. Esto es porque se serializarán utilizando el <xref:System.Xml.Serialization.XmlSerializer> en lugar del objeto la <xref:System.Web.Script.Serialization.JavaScriptSerializer> objeto. Se debe aplicar el <xref:System.Xml.Serialization.XmlIgnoreAttribute> atributo realizar <xref:System.Xml.Serialization.XmlSerializer> omitir u omitir esos campos públicos y propiedades del tipo de valor devuelto.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo aplicar el <xref:System.Web.Script.Services.ScriptMethodAttribute> atributo a un método Web con el <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A> propiedad establecida en `Xml`. El valor devuelto del método se se serializan como XML y enviado a la función de devolución de llamada correcta como un objeto de tipo <xref:System.Xml.XmlDocument>. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.Script.Services.ScriptMethodAttribute> clase.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Script.Serialization.ScriptIgnoreAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlIgnoreAttribute" />
      </Docs>
    </Member>
    <Member MemberName="UseHttpGet">
      <MemberSignature Language="C#" Value="public bool UseHttpGet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseHttpGet" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet" />
      <MemberSignature Language="VB.NET" Value="Public Property UseHttpGet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseHttpGet { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseHttpGet : bool with get, set" Usage="System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se va a invocar al método utilizando HTTP GET.</summary>
        <value>
          <see langword="true" /> si el método se invoca utilizando el comando HTTP GET; <see langword="false" /> si el método se invoca utilizando el comando HTTP POST.  El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No se puede invalidar esta propiedad de ECMAScript (JavaScript) en el cliente. Si esta propiedad se establece en `true`, invocar el método de secuencia de comandos siempre usará HTTP GET.  
  
 Cuando esta propiedad se establece en `true`, el código de proxy de cliente utiliza HTTP GET para llamar al servicio Web. Cada parámetro de entrada para el método aparece como un parámetro de consulta en la dirección URL que se utiliza para invocar el método Web. El valor del parámetro se obtiene a través de la serialización de JavaScript Object Notation (JSON) y la codificación de direcciones URL del valor del parámetro.  
  
 El uso de HTTP GET para invocar el método de servicio Web sigue las mismas directrices para cualquier otra interacción del Web. HTTP GET debe usarse únicamente para las operaciones que no se expone ninguna información confidencial y cuando la acción del servidor no tiene efectos secundarios.  
  
> [!IMPORTANT]
>  Establecer el <xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A> propiedad `true` podría suponer un riesgo de seguridad para la aplicación si está trabajando con datos confidenciales o transacciones. En las solicitudes GET, el mensaje se codifica mediante el explorador en la dirección URL y, por tanto, es un objetivo más fácil su manipulación.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo aplicar <xref:System.Web.Script.Services.ScriptMethodAttribute> a un método Web con el <xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A> propiedad establecida en `true`. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.Script.Services.ScriptMethodAttribute> clase.  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSerializeString">
      <MemberSignature Language="C#" Value="public bool XmlSerializeString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool XmlSerializeString" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlSerializeString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool XmlSerializeString { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.XmlSerializeString : bool with get, set" Usage="System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si todos los tipos de valor devueltos se serializan como XML, lo que incluye los tipos de cadena.</summary>
        <value>
          <see langword="true" /> si todos los tipos de valor devueltos se serializan como XML; de lo contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando esta propiedad se establece en `false`, todos devuelven tipos se serializan como XML, excepto las cadenas, que se interpretan como marcado XML. Si el valor es `false`, y si el tipo de valor devuelto es una cadena, y si la cadena no contiene el marcado XML que corresponde a un documento XML bien formado, se invocará la función de devolución de llamada correcta, pero el resultado será una cadena serializada `null` .  
  
 El valor de <xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A> se omite cuando el <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A> propiedad está establecida en `Json`.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo aplicar <xref:System.Web.Script.Services.ScriptMethodAttribute> a un método Web con el <xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A> propiedad establecida en `true`. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.Script.Services.ScriptMethodAttribute> clase.  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>