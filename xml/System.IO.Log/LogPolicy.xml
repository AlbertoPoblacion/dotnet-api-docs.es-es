<Type Name="LogPolicy" FullName="System.IO.Log.LogPolicy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7b9d3c8c1afc2decef19b4893282643554ba0484" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30418289" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class LogPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LogPolicy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.LogPolicy" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LogPolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogPolicy sealed" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa la directiva asociada a <see cref="T:System.IO.Log.LogStore" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una directiva es un conjunto de reglas que seguirá una instancia de <xref:System.IO.Log.LogStore> y sus clientes. Una instancia <xref:System.IO.Log.LogPolicy> se utiliza para examinar y modificar la directiva asociada a un <xref:System.IO.Log.LogStore>específico. Una directiva puede describir los tamaños máximo y mínimo permitidos del registro, o cómo se permite que crezca la instancia de <xref:System.IO.Log.LogStore> puede crecer. Además, también puede controlar si una instancia <xref:System.IO.Log.LogStore> puede estar almacenada.  
  
 Después de cambiar cualquiera de las propiedades, debería utilizar el método <xref:System.IO.Log.LogPolicy.Commit%2A> para asegurarse de que los cambios se aplican a <xref:System.IO.Log.LogStore>. Puede llamar al método <xref:System.IO.Log.LogPolicy.Refresh%2A> para descartar los cambios u obtener la directiva más actual.  
  
   
  
## Examples  
 Este ejemplo muestra cómo utilizar la clase <xref:System.IO.Log.LogPolicy> para establecer una directiva para una secuencia de registro de entrada.  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AutoGrow">
      <MemberSignature Language="C#" Value="public bool AutoGrow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGrow" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.AutoGrow" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGrow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGrow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si <see cref="T:System.IO.Log.LogStore" /> puede crecer automáticamente.</summary>
        <value>
          <see langword="true" /> si <see cref="T:System.IO.Log.LogStore" /> puede crecer automáticamente su tamaño; de lo contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Este ejemplo muestra cómo utilizar la clase <xref:System.IO.Log.LogPolicy> para establecer una directiva para una secuencia de registro de entrada.  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoShrinkPercentage">
      <MemberSignature Language="C#" Value="public int AutoShrinkPercentage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AutoShrinkPercentage" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.AutoShrinkPercentage" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoShrinkPercentage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AutoShrinkPercentage { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el porcentaje de espacio disponible que <see cref="T:System.IO.Log.LogStore" /> puede reducir.</summary>
        <value>El porcentaje de espacio disponible que <see cref="T:System.IO.Log.LogStore" /> puede reducir.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando la cantidad de espacio disponible en <xref:System.IO.Log.LogStore> es mayor que la cantidad especificada por esta propiedad, <xref:System.IO.Log.LogStore> reduce automáticamente su tamaño hasta que llegue al tamaño especificado por la propiedad <xref:System.IO.Log.LogPolicy.MinimumExtentCount%2A>.  
  
   
  
## Examples  
 Este ejemplo muestra cómo utilizar la clase <xref:System.IO.Log.LogPolicy> para establecer una directiva para una secuencia de registro de entrada.  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogPolicy.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Establece esta directiva como la directiva actual para <see cref="T:System.IO.Log.LogStore" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Debe llamar <xref:System.IO.Log.LogPolicy.Commit%2A> después de realizar cualquier modificación para asegurarse de que se graban los cambios.  
  
   
  
## Examples  
 Este ejemplo muestra cómo utilizar la clase <xref:System.IO.Log.LogPolicy> para establecer una directiva para una secuencia de registro de entrada.  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El conjunto de directivas instalado en el registro no es válido.  
  
 O bien  
  
 Una directiva del registro evitó que esta operación se completara.</exception>
        <exception cref="T:System.IO.IOException">La solicitud no se pudo realizar debido a una excepción de E/S inesperada.</exception>
        <exception cref="T:System.NotSupportedException">En la plataforma actual no se permite establecer esta directiva.</exception>
        <exception cref="T:System.ObjectDisposedException">Se llamó al método una vez eliminada la secuencia.</exception>
        <exception cref="T:System.OutOfMemoryException">No hay bastante memoria para continuar la ejecución del programa.</exception>
        <exception cref="T:System.IO.PathTooLongException">El nuevo prefijo de la extensión no es válido o es demasiado largo. Se debe proporcionar un prefijo válido.</exception>
        <exception cref="T:System.IO.Log.SequenceFullException">La secuencia del registro está completa.</exception>
        <exception cref="T:System.UnauthorizedAccessException">El acceso al almacén del registro especificado ha sido denegado por el sistema operativo.</exception>
      </Docs>
    </Member>
    <Member MemberName="GrowthRate">
      <MemberSignature Language="C#" Value="public System.IO.Log.PolicyUnit GrowthRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.PolicyUnit GrowthRate" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.GrowthRate" />
      <MemberSignature Language="VB.NET" Value="Public Property GrowthRate As PolicyUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::PolicyUnit GrowthRate { System::IO::Log::PolicyUnit get(); void set(System::IO::Log::PolicyUnit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.PolicyUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la tasa de crecimiento automático de <see cref="T:System.IO.Log.LogStore" />.</summary>
        <value>La tasa de crecimiento automático de <see cref="T:System.IO.Log.LogStore" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se llena <xref:System.IO.Log.LogStore>, este valor de la directiva determina cuánto espacio más se puede agregar. No se agregará el espacio si hace que el número de extensiones en <xref:System.IO.Log.LogStore> supere <xref:System.IO.Log.LogPolicy.MaximumExtentCount%2A>.  
  
   
  
## Examples  
 Este ejemplo muestra cómo utilizar la clase <xref:System.IO.Log.LogPolicy> para establecer una directiva para una secuencia de registro de entrada.  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumExtentCount">
      <MemberSignature Language="C#" Value="public int MaximumExtentCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumExtentCount" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.MaximumExtentCount" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumExtentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumExtentCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el número de instancias <see cref="T:System.IO.Log.LogExtent" /> que <see cref="T:System.IO.Log.LogStore" /> puede contener</summary>
        <value>Número ´máximo de instancias <see cref="T:System.IO.Log.LogExtent" /> que <see cref="T:System.IO.Log.LogStore" /> puede contener.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Este ejemplo muestra cómo utilizar la clase <xref:System.IO.Log.LogPolicy> para establecer una directiva para una secuencia de registro de entrada.  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumExtentCount">
      <MemberSignature Language="C#" Value="public int MinimumExtentCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumExtentCount" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.MinimumExtentCount" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumExtentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumExtentCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el número mínimo de instancias <see cref="T:System.IO.Log.LogExtent" /> que <see cref="T:System.IO.Log.LogStore" /> puede contener</summary>
        <value>Un entero que especifica el número mínimo de instancias <see cref="T:System.IO.Log.LogExtent" /> que <see cref="T:System.IO.Log.LogStore" /> puede contener. Desde que CLFS requiere que el recuento de la extensión mínimo sea 2 extensiones, este valor debería ser por lo menos 2.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Este ejemplo muestra cómo utilizar la clase <xref:System.IO.Log.LogPolicy> para establecer una directiva para una secuencia de registro de entrada.  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewExtentPrefix">
      <MemberSignature Language="C#" Value="public string NewExtentPrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewExtentPrefix" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.NewExtentPrefix" />
      <MemberSignature Language="VB.NET" Value="Public Property NewExtentPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewExtentPrefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la cadena del prefijo para las extensiones automáticamente creadas.</summary>
        <value>La cadena del prefijo para las extensiones automáticamente creadas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta cadena puede contener una ruta de acceso completa al directorio donde se crea la nueva extensión. La ruta de acceso predeterminada a la extensión es el directorio que contiene el archivo <xref:System.IO.Log.LogStore> base.  
  
   
  
## Examples  
 Este ejemplo muestra cómo utilizar la clase <xref:System.IO.Log.LogPolicy> para establecer una directiva para una secuencia de registro de entrada.  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextExtentSuffix">
      <MemberSignature Language="C#" Value="public long NextExtentSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 NextExtentSuffix" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.NextExtentSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Property NextExtentSuffix As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long NextExtentSuffix { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el número del sufijo para las nuevas extensiones.</summary>
        <value>El número del sufijo para las nuevas extensiones.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Este ejemplo muestra cómo utilizar la clase <xref:System.IO.Log.LogPolicy> para establecer una directiva para una secuencia de registro de entrada.  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PinnedTailThreshold">
      <MemberSignature Language="C#" Value="public System.IO.Log.PolicyUnit PinnedTailThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.PolicyUnit PinnedTailThreshold" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.PinnedTailThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property PinnedTailThreshold As PolicyUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::PolicyUnit PinnedTailThreshold { System::IO::Log::PolicyUnit get(); void set(System::IO::Log::PolicyUnit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.PolicyUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la cantidad de espacio que el evento <see cref="E:System.IO.Log.LogRecordSequence.TailPinned" /> requiere para avanzar la base del registro.</summary>
        <value>La cantidad de espacio que el evento <see cref="E:System.IO.Log.LogRecordSequence.TailPinned" /> requiere para avanzar la base del registro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La cantidad de espacio se puede expresar en porcentaje, o en bytes que se redondean a los contenedores más cercanos en el CLFS. El valor predeterminado es 35 por ciento.  
  
   
  
## Examples  
 Este ejemplo muestra cómo utilizar la clase <xref:System.IO.Log.LogPolicy> para establecer una directiva para una secuencia de registro de entrada.  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogPolicy.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lee la directiva actual para <see cref="T:System.IO.Log.LogStore" />, descartando cualquier modificación que se puede haber realizado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Este ejemplo muestra cómo utilizar la clase <xref:System.IO.Log.LogPolicy> para establecer una directiva para una secuencia de registro de entrada.  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El conjunto de directivas instalado en el registro no es válido.  
  
 O bien  
  
 Una directiva del registro evitó que esta operación se completara.</exception>
        <exception cref="T:System.IO.IOException">La solicitud no se pudo realizar debido a una excepción de E/S inesperada.</exception>
        <exception cref="T:System.NotSupportedException">En la plataforma actual no se permite establecer esta directiva.</exception>
        <exception cref="T:System.ObjectDisposedException">Se llamó al método una vez eliminada la secuencia.</exception>
        <exception cref="T:System.OutOfMemoryException">No hay bastante memoria para continuar la ejecución del programa.</exception>
        <exception cref="T:System.IO.Log.SequenceFullException">La secuencia del registro está completa.</exception>
        <exception cref="T:System.UnauthorizedAccessException">El acceso al almacén del registro especificado ha sido denegado por el sistema operativo.</exception>
      </Docs>
    </Member>
  </Members>
</Type>