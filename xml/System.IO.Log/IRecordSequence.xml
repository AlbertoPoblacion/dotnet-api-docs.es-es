<Type Name="IRecordSequence" FullName="System.IO.Log.IRecordSequence">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6260e0146911a1dbb9e8df4620ffe2a357e6709f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37654497" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRecordSequence : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRecordSequence implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.IRecordSequence" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRecordSequence&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRecordSequence : IDisposable" />
  <TypeSignature Language="F#" Value="type IRecordSequence = interface&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="129de-101">Proporciona una interfaz genérica a una secuencia de registros.</span>
      <span class="sxs-lookup">
        <span data-stu-id="129de-101">Provides a generic interface to a sequence of records.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-102">La interfaz <xref:System.IO.Log.IRecordSequence> proporciona una interfaz abstracta a una secuencia orientada a registro.</span><span class="sxs-lookup"><span data-stu-id="129de-102">The <xref:System.IO.Log.IRecordSequence> interface provides an abstract interface to a record-oriented stream.</span></span> <span data-ttu-id="129de-103">Una instancia <xref:System.IO.Log.IRecordSequence> se puede utilizar para leer y escribir las entradas de registro.</span><span class="sxs-lookup"><span data-stu-id="129de-103">A <xref:System.IO.Log.IRecordSequence> instance can be used to read and write log records.</span></span>  
  
 <span data-ttu-id="129de-104">La interfaz <xref:System.IO.Log.IRecordSequence> proporciona las siguientes capacidades:</span><span class="sxs-lookup"><span data-stu-id="129de-104">The <xref:System.IO.Log.IRecordSequence> interface provides the following capabilities,</span></span>  
  
-   <span data-ttu-id="129de-105">Anexe entradas de registro mediante los métodos <xref:System.IO.Log.IRecordSequence.Append%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-105">Append log records using the <xref:System.IO.Log.IRecordSequence.Append%2A> methods.</span></span>  
  
-   <span data-ttu-id="129de-106">Lea los registros anexados mediante el método <xref:System.IO.Log.IRecordSequence.ReadLogRecords%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-106">Read the appended records using the <xref:System.IO.Log.IRecordSequence.ReadLogRecords%2A> method.</span></span>  
  
-   <span data-ttu-id="129de-107">Escriba un registro del reinicio especial mediante el método <xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-107">Write a special restart record using the <xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A> method.</span></span>  
  
-   <span data-ttu-id="129de-108">Lea los registros del reinicio del registro del reinicio recientemente escrito utilizando el método <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-108">Read restart records from the most recently written restart record using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
-   <span data-ttu-id="129de-109">Vacíe los registros al almacén duradero utilizando el método <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-109">Flush the records to durable store using the  <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
-   <span data-ttu-id="129de-110">Reserve el espacio para anexar los registros.</span><span class="sxs-lookup"><span data-stu-id="129de-110">Reserve space for appending records.</span></span>  
  
-   <span data-ttu-id="129de-111">Espacio del registro libre al avanzar la base del registro.</span><span class="sxs-lookup"><span data-stu-id="129de-111">Free log space by advancing the base of the log.</span></span>  
  
-   <span data-ttu-id="129de-112">Reciba las notificaciones de eventos <xref:System.IO.Log.IRecordSequence.TailPinned> para mover la base del registro al espacio disponible.</span><span class="sxs-lookup"><span data-stu-id="129de-112">Receive <xref:System.IO.Log.IRecordSequence.TailPinned> event notifications to move the base of the log to free space.</span></span>  
  
 <span data-ttu-id="129de-113">Las entradas de registro se anexan a una instancia <xref:System.IO.Log.IRecordSequence> y a cada entrada de registro se le proporciona un número de secuencia único.</span><span class="sxs-lookup"><span data-stu-id="129de-113">Log records are appended to a <xref:System.IO.Log.IRecordSequence> instance, and each log record is given a unique sequence number.</span></span> <span data-ttu-id="129de-114">Los números de la secuencia son estricta y monótonamente crecientes dentro de una secuencia de registros determinada.</span><span class="sxs-lookup"><span data-stu-id="129de-114">Sequence numbers are strictly monotonically increasing within a given record sequence.</span></span> <span data-ttu-id="129de-115">Una entrada de registro está compuesta de datos opacos, que se proporcionan a la instancia de <xref:System.IO.Log.IRecordSequence> en una <xref:System.Collections.IList> de ArraySegments de bytes.</span><span class="sxs-lookup"><span data-stu-id="129de-115">A log record consists of opaque data, supplied to the <xref:System.IO.Log.IRecordSequence> instance in an <xref:System.Collections.IList> of ArraySegments of bytes.</span></span>  
  
 <span data-ttu-id="129de-116">La interfaz <xref:System.IO.Log.IRecordSequence> también expone algunas propiedades básicas que proporcionan información sobre los límites del registro.</span><span class="sxs-lookup"><span data-stu-id="129de-116">The <xref:System.IO.Log.IRecordSequence> interface also exposes a few basic properties which provides information about log boundaries.</span></span>  
  
-   <span data-ttu-id="129de-117">La propiedad <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> contiene el número de secuencia del primer registro válido en la secuencia del registro.</span><span class="sxs-lookup"><span data-stu-id="129de-117">The <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> property contains the sequence number of the first valid record in the record sequence.</span></span>  
  
-   <span data-ttu-id="129de-118">La propiedad <xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A> contiene un número de secuencia que se garantiza para ser mayor que el número de secuencia del último registro anexado.</span><span class="sxs-lookup"><span data-stu-id="129de-118">The <xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A> property contains a sequence number that is guaranteed to be larger than the sequence number of the last appended record.</span></span>  
  
-   <span data-ttu-id="129de-119">La propiedad <xref:System.IO.Log.IRecordSequence.RestartSequenceNumber%2A> contiene el número de secuencia del último área de reinicio escrita.</span><span class="sxs-lookup"><span data-stu-id="129de-119">The <xref:System.IO.Log.IRecordSequence.RestartSequenceNumber%2A> property contains the sequence number of the last written restart area.</span></span>  
  
-   <span data-ttu-id="129de-120">La propiedad <xref:System.IO.Log.IRecordSequence.MaximumRecordLength%2A> contiene el tamaño del mayor registro al que se puede anexar o lee de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="129de-120">The <xref:System.IO.Log.IRecordSequence.MaximumRecordLength%2A> property contains the size of the largest record that can be appended to, or read from the sequence.</span></span>  
  
-   <span data-ttu-id="129de-121">La propiedad <xref:System.IO.Log.IRecordSequence.ReservedBytes%2A> contiene el tamaño total de todas las reservas realizadas en esta secuencia del registro.</span><span class="sxs-lookup"><span data-stu-id="129de-121">The <xref:System.IO.Log.IRecordSequence.ReservedBytes%2A> property contains the total size of all reservations made in this record sequence.</span></span>  
  
-   <span data-ttu-id="129de-122">Si la propiedad <xref:System.IO.Log.IRecordSequence.RetryAppend%2A> está establecida en `true`, y una operación <xref:System.IO.Log.IRecordSequence.Append%2A> no puede realizarse porque no hay ningún espacio en la secuencia, la secuencia del registro intentará liberar espacio y reintentará la operación de anexado.</span><span class="sxs-lookup"><span data-stu-id="129de-122">If the <xref:System.IO.Log.IRecordSequence.RetryAppend%2A> property is set to `true`, and an <xref:System.IO.Log.IRecordSequence.Append%2A> operation fails because there is no space in the sequence, the record sequence will attempt to free space, and retry the Append operation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AdvanceBaseSequenceNumber">
      <MemberSignature Language="C#" Value="public void AdvanceBaseSequenceNumber (System.IO.Log.SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdvanceBaseSequenceNumber(valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AdvanceBaseSequenceNumber (newBaseSequenceNumber As SequenceNumber)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AdvanceBaseSequenceNumber(System::IO::Log::SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="F#" Value="abstract member AdvanceBaseSequenceNumber : System.IO.Log.SequenceNumber -&gt; unit" Usage="iRecordSequence.AdvanceBaseSequenceNumber newBaseSequenceNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="newBaseSequenceNumber">
          <span data-ttu-id="129de-123">El nuevo número de secuencia base de la secuencia del registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-123">The new base sequence number of the record sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-124">Avanza el número de secuencia base del registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-124">Moves the base sequence number of the log forward.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-125">Al utilizar una instancia <xref:System.IO.Log.LogRecordSequence> e intentar avanzar el número de secuencia para liberar espacio en el registro, el nuevo número de secuencia base debe residir en una extensión del registro diferente para que la extensión anterior se marque como vacía.</span><span class="sxs-lookup"><span data-stu-id="129de-125">When you use a <xref:System.IO.Log.LogRecordSequence> instance and try to advance the sequence number to free up space in the log, the new base sequence number must reside in a different log extent for the previous extent to be marked as empty.</span></span> <span data-ttu-id="129de-126">No permite liberar parcialmente las extensiones.</span><span class="sxs-lookup"><span data-stu-id="129de-126">Freeing extents partially is not supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-127">
            <paramref name="newBaseSequenceNumber" /> no es válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-127">
              <paramref name="newBaseSequenceNumber" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="129de-128">
            <paramref name="newBaseSequenceNumber" /> no está activo en el registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-128">
              <paramref name="newBaseSequenceNumber" /> is not active in the log.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="129de-129">Se ha producido un error de E/S al modificar la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-129">An I/O error occurred while modifying the sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-130">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-130">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="129de-131">La secuencia del registro está completa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-131">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Append">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="129de-132">Cuando se invalida en una clase derivada, escribe una entrada de registro en <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-132">When overridden in a derived class, writes a log record to the <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber Append(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="F#" Value="abstract member Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="129de-133">Una lista de segmentos de la matriz de bytes que se concatenarán y anexarán como el registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-133">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="129de-134">El número de secuencia del registro siguiente en el orden especificado por el usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-134">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="129de-135">El número de secuencia del registro siguiente en orden anterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-135">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="129de-136">Un valor válido de <see cref="T:System.IO.Log.RecordAppendOptions" /> que especifica cómo se deberían escribir los datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-136">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-137">Cuando se invalida en una clase derivada, escribe una entrada de registro en <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-137">When overridden in a derived class, writes a log record to the <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-138">Número de secuencia del registro de entrada anexado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-138">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-139">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-139">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="129de-140">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-140">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="129de-141">Normalmente, este método se completa antes de que se haya escrito el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-141">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="129de-142">Para asegurarse de que se ha escrito un registro, especifique la marca <xref:System.IO.Log.RecordAppendOptions.ForceFlush> utilizando el parámetro `recordAppendOptions` o llame al método <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-142">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-143">Uno o varios argumentos no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-143">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="129de-144">Ha ocurrido un error de E/S al anexar un registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-144">An I/O error occurred while appending the record.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="129de-145">La secuencia del registro no pudo liberar espacio suficiente para contener el nuevo registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-145">The record sequence could not make enough free space to contain the new record.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-146">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-146">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber Append(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="F#" Value="abstract member Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="129de-147">Una lista de segmentos de la matriz de bytes que se concatenarán y anexarán como el registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-147">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="129de-148">El número de secuencia del registro siguiente en el orden especificado por el usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-148">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="129de-149">El número de secuencia del registro siguiente en orden anterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-149">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="129de-150">Un valor válido de <see cref="T:System.IO.Log.RecordAppendOptions" /> que especifica cómo se deberían escribir los datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-150">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-151">Cuando se invalida en una clase derivada, anexa una entrada de registro en <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-151">When overridden in a derived class, appends a log record to the <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-152">Número de secuencia del registro de entrada anexado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-152">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-153">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-153">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="129de-154">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-154">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="129de-155">Normalmente, este método se completa antes de que se haya escrito el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-155">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="129de-156">Para asegurarse de que se ha escrito un registro, especifique la marca <xref:System.IO.Log.RecordAppendOptions.ForceFlush> utilizando el parámetro `recordAppendOptions` o llame al método <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-156">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-157">Uno o varios argumentos no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-157">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="129de-158">Ha ocurrido un error de E/S al anexar un registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-158">An I/O error occurred while appending the record.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="129de-159">La secuencia del registro no pudo liberar espacio suficiente para contener el nuevo registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-159">The record sequence could not make enough free space to contain the new record.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-160">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-160">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber Append(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="129de-161">Una lista de segmentos de la matriz de bytes que se concatenarán y anexarán como el registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-161">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="129de-162">El número de secuencia del registro siguiente en el orden especificado por el usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-162">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="129de-163">El número de secuencia del registro siguiente en orden anterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-163">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="129de-164">Un valor válido de <see cref="T:System.IO.Log.RecordAppendOptions" /> que especifica cómo se deberían escribir los datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-164">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="129de-165">Una <see cref="T:System.IO.Log.ReservationCollection" /> que contiene la reserva que se debería utilizar para este registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-165">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-166">Cuando se invalida en una clase derivada, anexa una entrada de registro a <see cref="T:System.IO.Log.IRecordSequence" />, utilizando el espacio previamente reservado en la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-166">When overridden in a derived class, appends a log record to the <see cref="T:System.IO.Log.IRecordSequence" />, using space previously reserved in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-167">Número de secuencia del registro de entrada anexado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-167">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-168">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-168">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="129de-169">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-169">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="129de-170">El registro anexado utilizará el espacio que se ha reservado previamente, utilizando una reserva especificada por el parámetro `reservations`.</span><span class="sxs-lookup"><span data-stu-id="129de-170">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="129de-171">Si el anexado tiene éxito, utilizará el área de reserva menor posible que pueda contener los datos y esa área de reserva se quitará de la colección.</span><span class="sxs-lookup"><span data-stu-id="129de-171">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="129de-172">Normalmente, este método se completa antes de que se haya escrito el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-172">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="129de-173">Para asegurarse de que se ha escrito un registro, especifique la marca <xref:System.IO.Log.RecordAppendOptions.ForceFlush> utilizando el parámetro `recordAppendOptions` o llame al método <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-173">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-174">Uno o varios argumentos no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-174">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="129de-175">Ha ocurrido un error de E/S al anexar un registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-175">An I/O error occurred while appending the record.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="129de-176">La secuencia del registro no pudo liberar espacio suficiente para contener el nuevo registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-176">The record sequence could not make enough free space to contain the new record.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-177">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-177">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber Append(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="129de-178">Una lista de segmentos de la matriz de bytes que se concatenarán y anexarán como el registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-178">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="129de-179">El número de secuencia del registro siguiente en el orden especificado por el usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-179">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="129de-180">El número de secuencia del registro siguiente en orden anterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-180">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="129de-181">Un valor válido de <see cref="T:System.IO.Log.RecordAppendOptions" /> que especifica cómo se deberían escribir los datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-181">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="129de-182">Una <see cref="T:System.IO.Log.ReservationCollection" /> que contiene la reserva que se debería utilizar para este registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-182">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-183">Cuando se invalida en una clase derivada, anexa una entrada de registro a <see cref="T:System.IO.Log.IRecordSequence" />, utilizando el espacio previamente reservado en la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-183">When overridden in a derived class, appends a log record to the <see cref="T:System.IO.Log.IRecordSequence" />, using space previously reserved in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-184">Número de secuencia del registro de entrada anexado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-184">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-185">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-185">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="129de-186">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-186">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="129de-187">El registro anexado utilizará el espacio que se ha reservado previamente, utilizando una reserva especificada por el parámetro `reservations`.</span><span class="sxs-lookup"><span data-stu-id="129de-187">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="129de-188">Si el anexado tiene éxito, utilizará el área de reserva menor posible que pueda contener los datos y esa área de reserva se quitará de la colección.</span><span class="sxs-lookup"><span data-stu-id="129de-188">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="129de-189">Normalmente, este método se completa antes de que se haya escrito el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-189">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="129de-190">Para asegurarse de que se ha escrito un registro, especifique la marca <xref:System.IO.Log.RecordAppendOptions.ForceFlush> utilizando el parámetro `recordAppendOptions` o llame al método <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-190">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-191">Uno o varios argumentos no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-191">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="129de-192">Ha ocurrido un error de E/S al anexar un registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-192">An I/O error occurred while appending the record.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="129de-193">La secuencia del registro no pudo liberar espacio suficiente para contener el nuevo registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-193">The record sequence could not make enough free space to contain the new record.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-194">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-194">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber BaseSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber BaseSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.IRecordSequence.BaseSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber BaseSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.IRecordSequence.BaseSequenceNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="129de-195">Cuando se invalida en una clase derivada, obtiene el número de secuencia del primer registro válido en el <see cref="T:System.IO.Log.IRecordSequence" />actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-195">When overridden in a derived class, gets the sequence number of the first valid record in the current <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="129de-196">El número de secuencia más bajo que corresponde a un registro válido en <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-196">The lowest sequence number that corresponds to a valid record in the <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-197">Los números de secuencia válidos son mayores que o iguales a <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> y menores que <xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-197">Valid sequence numbers are greater than or equal to <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A>.</span></span>  
  
 <span data-ttu-id="129de-198">El valor de esta propiedad se puede modificar llamando a <xref:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber%2A> o al método <xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A> .</span><span class="sxs-lookup"><span data-stu-id="129de-198">The value of this property can be changed by calling the <xref:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber%2A> or <xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-199">Se tuvo acceso a la propiedad después de haber eliminado la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-199">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="129de-200">Cuando se invalida en una clase derivada, comienza una operación de anexo asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-200">When overridden in a derived class, begins an asynchronous append operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="129de-201">Una lista de segmentos de la matriz de bytes que se concatenarán y anexarán como el registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-201">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="129de-202">El número de secuencia del registro siguiente en el orden especificado por el usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-202">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="129de-203">El número de secuencia del registro siguiente en orden anterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-203">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="129de-204">Un valor válido de <see cref="T:System.IO.Log.RecordAppendOptions" /> que especifica cómo se deberían escribir los datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-204">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="129de-205">Devolución de llamada asincrónica opcional, a la que se llamará cuando haya finalizado el anexado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-205">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="129de-206">Objeto proporcionado por el usuario que distingue esta solicitud de anexado asincrónica de otras.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-206">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-207">Cuando se invalida en una clase derivada, comienza una operación de anexo asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-207">When overridden in a derived class, begins an asynchronous append operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-208">Objeto <see cref="T:System.IAsyncResult" /> que representa el anexado asincrónico, que puede hallarse aún pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-208">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-209">Debería pasar <xref:System.IAsyncResult> devuelto por este método al método <xref:System.IO.Log.IRecordSequence.EndAppend%2A> para asegurarse que la operación de anexado ha finalizado y que se pueden liberar los recursos apropiadamente.</span><span class="sxs-lookup"><span data-stu-id="129de-209">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="129de-210">Si se ha producido un error durante el anexado asincrónico, no se produce una excepción hasta que se llame al método <xref:System.IO.Log.IRecordSequence.EndAppend%2A> con el <xref:System.IAsyncResult> que devuelve este método.</span><span class="sxs-lookup"><span data-stu-id="129de-210">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="129de-211">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-211">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="129de-212">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-212">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="129de-213">Normalmente, este método se completa antes de que se haya escrito el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-213">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="129de-214">Para asegurarse de que se ha escrito un registro, especifique la marca <xref:System.IO.Log.RecordAppendOptions.ForceFlush> utilizando el parámetro `recordAppendOptions` o llame al método <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-214">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-215">Uno o varios argumentos no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-215">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="129de-216">Ha ocurrido un error de E/S al anexar un registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-216">An I/O error occurred while appending the record.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="129de-217">La secuencia del registro no pudo liberar espacio suficiente para contener el nuevo registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-217">The record sequence could not make enough free space to contain the new record.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-218">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-218">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="129de-219">Una lista de segmentos de la matriz de bytes que se concatenarán y anexarán como el registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-219">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="129de-220">El número de secuencia del registro siguiente en el orden especificado por el usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-220">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="129de-221">El número de secuencia del registro siguiente en orden anterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-221">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="129de-222">Un valor válido de <see cref="T:System.IO.Log.RecordAppendOptions" /> que especifica cómo se deberían escribir los datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-222">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="129de-223">Devolución de llamada asincrónica opcional, a la que se llamará cuando haya finalizado el anexado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-223">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="129de-224">Objeto proporcionado por el usuario que distingue esta solicitud de anexado asincrónica de otras.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-224">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-225">Cuando se invalida en una clase derivada, comienza una operación de anexado asincrónica, utilizando el espacio previamente reservado en la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-225">When overridden in a derived class, begins an asynchronous append operation, using space previously reserved in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-226">Objeto <see cref="T:System.IAsyncResult" /> que representa el anexado asincrónico, que puede hallarse aún pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-226">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-227">Debería pasar <xref:System.IAsyncResult> devuelto por este método al método <xref:System.IO.Log.IRecordSequence.EndAppend%2A> para asegurarse que la operación de anexado ha finalizado y que se pueden liberar los recursos apropiadamente.</span><span class="sxs-lookup"><span data-stu-id="129de-227">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="129de-228">Si se ha producido un error durante el anexado asincrónico, no se produce una excepción hasta que se llame al método <xref:System.IO.Log.IRecordSequence.EndAppend%2A> con el <xref:System.IAsyncResult> que devuelve este método.</span><span class="sxs-lookup"><span data-stu-id="129de-228">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="129de-229">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-229">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="129de-230">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-230">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="129de-231">Normalmente, este método se completa antes de que se haya escrito el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-231">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="129de-232">Para asegurarse de que se ha escrito un registro, especifique la marca <xref:System.IO.Log.RecordAppendOptions.ForceFlush> utilizando el parámetro `recordAppendOptions` o llame al método <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-232">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-233">Uno o varios argumentos no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-233">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="129de-234">Ha ocurrido un error de E/S al anexar un registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-234">An I/O error occurred while appending the record.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="129de-235">La secuencia del registro no pudo liberar espacio suficiente para contener el nuevo registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-235">The record sequence could not make enough free space to contain the new record.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-236">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-236">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="129de-237">Una lista de segmentos de la matriz de bytes que se concatenarán y anexarán como el registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-237">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="129de-238">El número de secuencia del registro siguiente en el orden especificado por el usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-238">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="129de-239">El número de secuencia del registro siguiente en orden anterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-239">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="129de-240">Un valor válido de <see cref="T:System.IO.Log.RecordAppendOptions" /> que especifica cómo se deberían escribir los datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-240">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="129de-241">Una <see cref="T:System.IO.Log.ReservationCollection" /> que contiene la reserva que se debería utilizar para este registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-241">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="129de-242">Devolución de llamada asincrónica opcional, a la que se llamará cuando haya finalizado el anexado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-242">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="129de-243">Objeto proporcionado por el usuario que distingue esta solicitud de anexado asincrónica de otras.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-243">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-244">Cuando se invalida en una clase derivada, comienza una operación de anexado asincrónica, utilizando el espacio previamente reservado en la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-244">When overridden in a derived class, begins an asynchronous append operation using space previously reserved in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-245">Objeto <see cref="T:System.IAsyncResult" /> que representa el anexado asincrónico, que puede hallarse aún pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-245">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-246">Debería pasar <xref:System.IAsyncResult> devuelto por este método al método <xref:System.IO.Log.IRecordSequence.EndAppend%2A> para asegurarse que la operación de anexado ha finalizado y que se pueden liberar los recursos apropiadamente.</span><span class="sxs-lookup"><span data-stu-id="129de-246">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="129de-247">Si se ha producido un error durante el anexado asincrónico, no se produce una excepción hasta que se llame al método <xref:System.IO.Log.IRecordSequence.EndAppend%2A> con el <xref:System.IAsyncResult> que devuelve este método.</span><span class="sxs-lookup"><span data-stu-id="129de-247">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="129de-248">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-248">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="129de-249">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-249">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="129de-250">El registro anexado utilizará el espacio que se ha reservado previamente, utilizando una reserva especificada por el parámetro `reservations`.</span><span class="sxs-lookup"><span data-stu-id="129de-250">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="129de-251">Si el anexado tiene éxito, utilizará el área de reserva menor posible que pueda contener los datos y esa área de reserva se quitará de la colección.</span><span class="sxs-lookup"><span data-stu-id="129de-251">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="129de-252">Normalmente, este método se completa antes de que se haya escrito el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-252">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="129de-253">Para asegurarse de que se ha escrito un registro, especifique la marca <xref:System.IO.Log.RecordAppendOptions.ForceFlush> utilizando el parámetro `recordAppendOptions` o llame al método <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-253">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-254">Uno o varios argumentos no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-254">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="129de-255">Ha ocurrido un error de E/S al anexar un registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-255">An I/O error occurred while appending the record.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="129de-256">La secuencia del registro no pudo liberar espacio suficiente para contener el nuevo registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-256">The record sequence could not make enough free space to contain the new record.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-257">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-257">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousUndoRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousUndoRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousUndoRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRecordSequence.BeginAppend (data, nextUndoRecord, previousUndoRecord, recordAppendOptions, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="129de-258">Una lista de segmentos de la matriz de bytes que se concatenarán y anexarán como el registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-258">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="129de-259">El número de secuencia del registro siguiente en el orden especificado por el usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-259">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousUndoRecord">
          <span data-ttu-id="129de-260">El número de secuencia del registro siguiente en orden anterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-260">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="129de-261">Un valor válido de <see cref="T:System.IO.Log.RecordAppendOptions" /> que especifica cómo se deberían escribir los datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-261">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="129de-262">Una <see cref="T:System.IO.Log.ReservationCollection" /> que contiene la reserva que se debería utilizar para este registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-262">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="129de-263">Devolución de llamada asincrónica opcional, a la que se llamará cuando haya finalizado el anexado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-263">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="129de-264">Objeto proporcionado por el usuario que distingue esta solicitud de anexado asincrónica de otras.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-264">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-265">Cuando se invalida en una clase derivada, comienza una operación de anexado asincrónica, utilizando el espacio previamente reservado en la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-265">When overridden in a derived class, begins an asynchronous append operation, using space previously reserved in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-266">Objeto <see cref="T:System.IAsyncResult" /> que representa el anexado asincrónico, que puede hallarse aún pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-266">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-267">Debería pasar <xref:System.IAsyncResult> devuelto por este método al método <xref:System.IO.Log.IRecordSequence.EndAppend%2A> para asegurarse que la operación de anexado ha finalizado y que se pueden liberar los recursos apropiadamente.</span><span class="sxs-lookup"><span data-stu-id="129de-267">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="129de-268">Si se ha producido un error durante el anexado asincrónico, no se produce una excepción hasta que se llame al método <xref:System.IO.Log.IRecordSequence.EndAppend%2A> con el <xref:System.IAsyncResult> que devuelve este método.</span><span class="sxs-lookup"><span data-stu-id="129de-268">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="129de-269">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-269">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="129de-270">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-270">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="129de-271">El registro anexado utilizará el espacio que se ha reservado previamente, utilizando una reserva especificada por el parámetro `reservations`.</span><span class="sxs-lookup"><span data-stu-id="129de-271">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="129de-272">Si el anexado tiene éxito, utilizará el área de reserva menor posible que pueda contener los datos y esa área de reserva se quitará de la colección.</span><span class="sxs-lookup"><span data-stu-id="129de-272">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="129de-273">Normalmente, este método se completa antes de que se haya escrito el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-273">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="129de-274">Para asegurarse de que se ha escrito un registro, especifique la marca <xref:System.IO.Log.RecordAppendOptions.ForceFlush> utilizando el parámetro `recordAppendOptions` o llame al método <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-274">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-275">Uno o varios argumentos no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-275">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="129de-276">Ha ocurrido un error de E/S al anexar un registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-276">An I/O error occurred while appending the record.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="129de-277">La secuencia del registro no pudo liberar espacio suficiente para contener el nuevo registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-277">The record sequence could not make enough free space to contain the new record.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-278">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-278">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginFlush">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginFlush (System.IO.Log.SequenceNumber sequenceNumber, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginFlush(valuetype System.IO.Log.SequenceNumber sequenceNumber, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginFlush(System::IO::Log::SequenceNumber sequenceNumber, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginFlush : System.IO.Log.SequenceNumber * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRecordSequence.BeginFlush (sequenceNumber, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber">
          <span data-ttu-id="129de-279">El número de secuencia del último registro que se debe escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-279">The sequence number of the latest record that must be written.</span>
          </span>
          <span data-ttu-id="129de-280">Si <see cref="T:System.IO.Log.SequenceNumber" /> no es válido, a continuación, se deben escribir todos los registros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-280">If this <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="129de-281">Devolución de llamada asincrónica opcional, a la que se llamará cuando haya finalizado el vaciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-281">An optional asynchronous callback, to be called when the flush is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="129de-282">Objeto proporcionado por el usuario que distingue esta solicitud particular de vaciado asincrónico de otras.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-282">A user-provided object that distinguishes this particular asynchronous flush request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-283">Cuando se invalida en una clase derivada, comienza una operación de vaciado asincrónica, utilizando el espacio previamente reservado en la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-283">When overridden in a derived class, begins an asynchronous flush operation, using space previously reserved in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-284">Un <see cref="T:System.IAsyncResult" /> que representa la operación de vaciado asincrónica que puede seguir pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-284">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous flush operation, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-285">Debería pasar <xref:System.IAsyncResult>devuelto por este método al método <xref:System.IO.Log.IRecordSequence.EndFlush%2A> para asegurarse que la operación de vaciado ha finalizado y que se pueden liberar los recursos apropiadamente.</span><span class="sxs-lookup"><span data-stu-id="129de-285">You should pass the <xref:System.IAsyncResult> returned by the current method to the <xref:System.IO.Log.IRecordSequence.EndFlush%2A> method to ensure that the flush completes and resources are freed appropriately.</span></span> <span data-ttu-id="129de-286">Si se produce un error durante el vaciado asincrónico, no se producirá una excepción hasta que se llame al método <xref:System.IO.Log.IRecordSequence.EndFlush%2A> con el <xref:System.IAsyncResult> devuelto por este método.</span><span class="sxs-lookup"><span data-stu-id="129de-286">If an error occurs during an asynchronous flush, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndFlush%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="129de-287">Llamar a este método asegura que todos los registros anexados a <xref:System.IO.Log.IRecordSequence> se escriben de manera duradera.</span><span class="sxs-lookup"><span data-stu-id="129de-287">Calling this method ensures that all records that have been appended to the <xref:System.IO.Log.IRecordSequence> are durably written.</span></span>  
  
 <span data-ttu-id="129de-288">Si una secuencia del registro se ha eliminado, o si se pasa un argumento no válido, las excepciones se producen inmediatamente en esta operación.</span><span class="sxs-lookup"><span data-stu-id="129de-288">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="129de-289">Los errores que se produjeron durante una solicitud de vaciado asincrónica, por ejemplo, un error de disco durante la petición de E/S, producirá excepciones que se inician cuando se llama al método <xref:System.IO.Log.IRecordSequence.EndFlush%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-289">Errors that occurred during an asynchronous flush request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndFlush%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-290">Uno o varios argumentos no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-290">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="129de-291">Un error E/S ha ocurrido durante el vaciado de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-291">An I/O error occurred while flushing the data.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-292">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-292">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginReserveAndAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="129de-293">Cuando se invalida en una clase derivada, comienza una operación de reserva asincrónica y de anexado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-293">When overridden in a derived class, begins an asynchronous reserve and append operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginReserveAndAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReserveAndAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReserveAndAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReserveAndAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, cli::array &lt;long&gt; ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRecordSequence.BeginReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="129de-294">Una lista de segmentos de la matriz de bytes que se concatenarán y anexarán como el registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-294">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="129de-295">El número de secuencia del registro siguiente en el orden especificado por el usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-295">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="129de-296">El número de secuencia del registro siguiente en orden anterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-296">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="129de-297">Un valor válido de <see cref="T:System.IO.Log.RecordAppendOptions" /> que especifica cómo se deberían escribir los datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-297">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservationCollection">
          <span data-ttu-id="129de-298">La colección de reservas en la que realizar las reservas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-298">The reservation collection to make reservations in.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="129de-299">Las reservas que se han de realizar, en bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-299">The reservations to make, in bytes.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="129de-300">Devolución de llamada asincrónica opcional, a la que se llamará cuando haya finalizado el anexado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-300">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="129de-301">Objeto proporcionado por el usuario que distingue esta solicitud de anexado asincrónica de otras.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-301">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-302">Cuando se invalida en una clase derivada, comienza una operación de reserva asincrónica y de anexado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-302">When overridden in a derived class, begins an asynchronous reserve and append operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-303">Un <see cref="T:System.IAsyncResult" /> que representa esta operación asincrónica, que podría estar aún pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-303">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-304">Debería pasar <xref:System.IAsyncResult> devuelto por este método al método <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> para asegurarse que la operación de anexado ha finalizado y que se pueden liberar los recursos apropiadamente.</span><span class="sxs-lookup"><span data-stu-id="129de-304">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="129de-305">Si se ha producido un error durante el anexado asincrónico, no se produce una excepción hasta que se llame al método <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> con el <xref:System.IAsyncResult> que devuelve este método.</span><span class="sxs-lookup"><span data-stu-id="129de-305">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="129de-306">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-306">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="129de-307">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-307">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="129de-308">Las reservas especificadas se agregan a la colección de reservas proporcionada en una operación atómica con una operación de anexado de registro.</span><span class="sxs-lookup"><span data-stu-id="129de-308">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="129de-309">Si no se produce el anexado, no se reserva ningún espacio.</span><span class="sxs-lookup"><span data-stu-id="129de-309">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="129de-310">Normalmente, este método puede completarse antes de que se haya escrito el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-310">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="129de-311">Para asegurarse de que se ha escrito un registro, especifique la marca <xref:System.IO.Log.RecordAppendOptions.ForceFlush> utilizando el parámetro `recordAppendOptions` o llame al método <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-311">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 <span data-ttu-id="129de-312">Si una secuencia del registro se ha eliminado, o si se pasa un argumento no válido, las excepciones se producen inmediatamente en esta operación.</span><span class="sxs-lookup"><span data-stu-id="129de-312">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="129de-313">Los errores que se produjeron durante una solicitud de anexado asincrónica, como, por ejemplo, un error de disco durante la petición de E/S, producirá excepciones que se producen cuando se llama al método <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-313">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-314">Uno o varios argumentos no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-314">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="129de-315">Ha ocurrido un error de E/S al anexar un registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-315">An I/O error occurred while appending the record.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="129de-316">La secuencia del registro no pudo liberar espacio suficiente para contener el nuevo registro o para hacer la reserva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-316">The record sequence could not make enough free space to contain the new record, or to make the reservation.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-317">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-317">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReserveAndAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReserveAndAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReserveAndAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReserveAndAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, cli::array &lt;long&gt; ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRecordSequence.BeginReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="129de-318">Una lista de segmentos de la matriz de bytes que se concatenarán y anexarán como el registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-318">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="129de-319">El número de secuencia del registro siguiente en el orden especificado por el usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-319">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="129de-320">El número de secuencia del registro siguiente en orden anterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-320">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="129de-321">Un valor válido de <see cref="T:System.IO.Log.RecordAppendOptions" /> que especifica cómo se deberían escribir los datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-321">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservationCollection">
          <span data-ttu-id="129de-322">La colección de reservas en la que realizar las reservas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-322">The reservation collection to make reservations in.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="129de-323">Las reservas que se han de realizar, en bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-323">The reservations to make, in bytes.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="129de-324">Devolución de llamada asincrónica opcional, a la que se llamará cuando haya finalizado el anexado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-324">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="129de-325">Objeto proporcionado por el usuario que distingue esta solicitud de anexado asincrónica de otras.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-325">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-326">Cuando se invalida en una clase derivada, comienza una operación de reserva asincrónica y de anexado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-326">When overridden in a derived class, begins an asynchronous reserve and append operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-327">Un <see cref="T:System.IAsyncResult" /> que representa esta operación asincrónica, que podría estar aún pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-327">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-328">Debería pasar <xref:System.IAsyncResult> devuelto por este método al método <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> para asegurarse que la operación de anexado ha finalizado y que se pueden liberar los recursos apropiadamente.</span><span class="sxs-lookup"><span data-stu-id="129de-328">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="129de-329">Si se ha producido un error durante el anexado asincrónico, no se produce una excepción hasta que se llame al método <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> con el <xref:System.IAsyncResult> que devuelve este método.</span><span class="sxs-lookup"><span data-stu-id="129de-329">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="129de-330">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-330">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="129de-331">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-331">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="129de-332">Las reservas especificadas se agregan a la colección de reservas proporcionada en una operación atómica con una operación de anexado de registro.</span><span class="sxs-lookup"><span data-stu-id="129de-332">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="129de-333">Si no se produce el anexado, no se reserva ningún espacio.</span><span class="sxs-lookup"><span data-stu-id="129de-333">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="129de-334">Normalmente, este método puede completarse antes de que se haya escrito el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-334">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="129de-335">Para asegurarse de que se ha escrito un registro, especifique la marca <xref:System.IO.Log.RecordAppendOptions.ForceFlush> utilizando el parámetro `recordAppendOptions` o llame al método <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-335">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 <span data-ttu-id="129de-336">Si una secuencia del registro se ha eliminado, o si se pasa un argumento no válido, las excepciones se producen inmediatamente en esta operación.</span><span class="sxs-lookup"><span data-stu-id="129de-336">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="129de-337">Los errores que se produjeron durante una solicitud de anexado asincrónica, como, por ejemplo, un error de disco durante la petición de E/S, producirá excepciones que se producen cuando se llama al método <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-337">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-338">Uno o varios argumentos no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-338">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="129de-339">Ha ocurrido un error de E/S al anexar un registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-339">An I/O error occurred while appending the record.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="129de-340">La secuencia del registro no pudo liberar espacio suficiente para contener el nuevo registro o para hacer la reserva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-340">The record sequence could not make enough free space to contain the new record, or to make the reservation.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-341">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-341">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginWriteRestartArea">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="129de-342">Cuando se invalida en una clase derivada, comienza una operación de escritura de área de reinicio asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-342">When overridden in a derived class, begins an asynchronous restart area write operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginWriteRestartArea">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSequenceNumber, System.IO.Log.ReservationCollection reservation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber, class System.IO.Log.ReservationCollection reservation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWriteRestartArea (data As ArraySegment(Of Byte), newBaseSequenceNumber As SequenceNumber, reservation As ReservationCollection, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSequenceNumber, System::IO::Log::ReservationCollection ^ reservation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRecordSequence.BeginWriteRestartArea (data, newBaseSequenceNumber, reservation, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="129de-343">Una lista de segmentos de la matriz de bytes que se concatenarán y anexarán como el registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-343">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSequenceNumber">
          <span data-ttu-id="129de-344">El nuevo número de secuencia base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-344">The new base sequence number.</span>
          </span>
          <span data-ttu-id="129de-345">El número de secuencia especificado debe ser mayor que o igual al número de secuencia base actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-345">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <param name="reservation">
          <span data-ttu-id="129de-346">
            <see cref="T:System.IO.Log.ReservationCollection" /> que contiene la reserva que se debería utilizar para este área de reinicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-346">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="129de-347">Devolución de llamada asincrónica opcional, a la que se llamará cuando haya finalizado la escritura del área de reinicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-347">An optional asynchronous callback, to be called when the restart area write is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="129de-348">Objeto proporcionado por el usuario que distingue esta solicitud de área de reinicio asincrónica de otras.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-348">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-349">Cuando se invalida en una clase derivada, comienza una operación de escritura de área de reinicio asincrónica, utilizando el espacio previamente reservado en la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-349">When overridden in a derived class, begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-350">
            <see cref="T:System.IAsyncResult" /> que representa la operación de escritura de área de reinicio asincrónica, que todavía podría estar pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-350">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-351">Debería pasar <xref:System.IAsyncResult> devuelto por este método al método <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> para asegurarse de que la operación de escritura de área de reinicio ha finalizado y de que se pueden liberar los recursos apropiadamente.</span><span class="sxs-lookup"><span data-stu-id="129de-351">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> method, to assure that the restart area write operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="129de-352">Si se produce un error durante la escritura asincrónica, no se producirá una excepción hasta que se llame a <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> con el <xref:System.IAsyncResult> que devuelve este método.</span><span class="sxs-lookup"><span data-stu-id="129de-352">If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="129de-353">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-353">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="129de-354">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-354">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="129de-355">Cuando la operación se completa correctamente, el número de secuencia base se actualiza.</span><span class="sxs-lookup"><span data-stu-id="129de-355">When the operation successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="129de-356">Todas las entradas de registro con números de secuencia menores que el nuevo número de secuencia base son inaccesibles.</span><span class="sxs-lookup"><span data-stu-id="129de-356">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="129de-357">Si se especifica una <xref:System.IO.Log.ReservationCollection>, el área de reinicio escrita utilizará el espacio que se ha reservado previamente, utilizando una reserva contenida en la colección.</span><span class="sxs-lookup"><span data-stu-id="129de-357">If a <xref:System.IO.Log.ReservationCollection> is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="129de-358">Si el método tiene éxito, utilizará la reserva de menor tamaño que pueda contener los datos y esa reserva se quitará de la colección.</span><span class="sxs-lookup"><span data-stu-id="129de-358">If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="129de-359">Si una secuencia del registro se ha eliminado, o si se pasa un argumento no válido, las excepciones se producen inmediatamente en esta operación.</span><span class="sxs-lookup"><span data-stu-id="129de-359">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="129de-360">Los errores que se produjeron durante una solicitud de anexado asincrónica, como, por ejemplo, un error de disco durante la petición de E/S, producirá excepciones que se producen cuando se llama al método <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-360">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWriteRestartArea">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSequenceNumber, System.IO.Log.ReservationCollection reservation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber, class System.IO.Log.ReservationCollection reservation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSequenceNumber As SequenceNumber, reservation As ReservationCollection, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSequenceNumber, System::IO::Log::ReservationCollection ^ reservation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRecordSequence.BeginWriteRestartArea (data, newBaseSequenceNumber, reservation, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="129de-361">Una lista de segmentos de la matriz de bytes que se concatenarán y anexarán como el registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-361">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSequenceNumber">
          <span data-ttu-id="129de-362">El nuevo número de secuencia base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-362">The new base sequence number.</span>
          </span>
          <span data-ttu-id="129de-363">El número de secuencia especificado debe ser mayor que o igual al número de secuencia base actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-363">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <param name="reservation">
          <span data-ttu-id="129de-364">
            <see cref="T:System.IO.Log.ReservationCollection" /> que contiene la reserva que se debería utilizar para este área de reinicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-364">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="129de-365">Devolución de llamada asincrónica opcional, a la que se llamará cuando haya finalizado la escritura del área de reinicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-365">An optional asynchronous callback, to be called when the restart area write is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="129de-366">Objeto proporcionado por el usuario que distingue esta solicitud de área de reinicio asincrónica de otras.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-366">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-367">Cuando se invalida en una clase derivada, comienza una operación de escritura de área de reinicio asincrónica, utilizando el espacio previamente reservado en la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-367">When overridden in a derived class, begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-368">
            <see cref="T:System.IAsyncResult" /> que representa la operación de escritura de área de reinicio asincrónica, que todavía podría estar pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-368">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-369">Debería pasar <xref:System.IAsyncResult> devuelto por este método al método <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> para asegurarse que la operación de escritura de área de reinicio ha finalizado y que se pueden liberar los recursos apropiadamente.</span><span class="sxs-lookup"><span data-stu-id="129de-369">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> method to ensure that the restart area write operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="129de-370">Si se produce un error durante la escritura asincrónica, no se producirá una excepción hasta que se llame a <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> con el <xref:System.IAsyncResult> que devuelve este método.</span><span class="sxs-lookup"><span data-stu-id="129de-370">If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="129de-371">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-371">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="129de-372">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-372">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="129de-373">Cuando la operación se completa correctamente, el número de secuencia base se actualiza.</span><span class="sxs-lookup"><span data-stu-id="129de-373">When the operation successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="129de-374">Todas las entradas de registro con números de secuencia menores que el nuevo número de secuencia base son inaccesibles.</span><span class="sxs-lookup"><span data-stu-id="129de-374">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="129de-375">Si se especifica una <xref:System.IO.Log.ReservationCollection>, el área de reinicio escrita utilizará el espacio que se ha reservado previamente, utilizando una reserva contenida en la colección.</span><span class="sxs-lookup"><span data-stu-id="129de-375">If a <xref:System.IO.Log.ReservationCollection> is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="129de-376">Si el método tiene éxito, utilizará la reserva de menor tamaño que pueda contener los datos y esa reserva se quitará de la colección.</span><span class="sxs-lookup"><span data-stu-id="129de-376">If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="129de-377">Si una secuencia del registro se ha eliminado, o si se pasa un argumento no válido, las excepciones se producen inmediatamente en esta operación.</span><span class="sxs-lookup"><span data-stu-id="129de-377">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="129de-378">Los errores que se produjeron durante una solicitud de anexado asincrónica, como, por ejemplo, un error de disco durante la petición de E/S, producirá excepciones que se producen cuando se llama al método <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-378">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-379">Uno o varios argumentos no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-379">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="129de-380">Se produjo un error de E/S al escribir el área de reinicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-380">An I/O error occurred while writing the restart area.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="129de-381">La secuencia del registro no pudo liberar espacio suficiente para contener el nuevo registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-381">The record sequence could not make enough free space to contain the new record.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-382">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-382">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateReservationCollection">
      <MemberSignature Language="C#" Value="public System.IO.Log.ReservationCollection CreateReservationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Log.ReservationCollection CreateReservationCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.CreateReservationCollection" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateReservationCollection () As ReservationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::ReservationCollection ^ CreateReservationCollection();" />
      <MemberSignature Language="F#" Value="abstract member CreateReservationCollection : unit -&gt; System.IO.Log.ReservationCollection" Usage="iRecordSequence.CreateReservationCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.ReservationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="129de-383">Cuando se reemplaza en una clase derivada, se crea un nuevo objeto <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-383">When overridden in a derived class, creates a new <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-384">Colección <see cref="T:System.IO.Log.ReservationCollection" /> creada recientemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-384">The newly created <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-385">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-385">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndAppend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndAppend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.EndAppend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAppend (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber EndAppend(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.EndAppend result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="129de-386">Referencia a la solicitud de E/S asincrónica pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-386">A reference to the outstanding asynchronous I/O request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-387">Cuando se invalida en una clase derivada, finaliza una operación de anexo asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-387">When overridden in a derived class, ends an asynchronous append operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-388">Número de secuencia del registro de entrada anexado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-388">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-389">Este método se bloquea hasta que se haya completado la operación de E/S.</span><span class="sxs-lookup"><span data-stu-id="129de-389">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="129de-390">Errores que producen durante una solicitud de lectura asincrónica, como un error de disco durante la petición de E/S, se vuelve visible cuando se llama <xref:System.IO.Log.IRecordSequence.EndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-390">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.IRecordSequence.EndAppend%2A> is called.</span></span>  
  
 <span data-ttu-id="129de-391">Se debe llamar a este método exactamente una vez en <xref:System.IAsyncResult> devuelto por el método <xref:System.IO.Log.IRecordSequence.BeginAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-391">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.IRecordSequence.BeginAppend%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-392">Uno o varios argumentos no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-392">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-393">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-393">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndFlush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndFlush (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndFlush(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.EndFlush(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndFlush (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber EndFlush(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndFlush : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.EndFlush result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="129de-394">Referencia a la solicitud de E/S asincrónica pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-394">A reference to the outstanding asynchronous I/O request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-395">Cuando se invalida en una clase derivada, finaliza una operación de vaciado asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-395">When overridden in a derived class, ends an asynchronous flush operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-396">Número de secuencia del último registro escrito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-396">The sequence number of the last record written.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-397">Este método se bloquea hasta que se haya completado la operación de E/S.</span><span class="sxs-lookup"><span data-stu-id="129de-397">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="129de-398">Errores que se producen durante una solicitud de vaciado asincrónica, como un error de disco durante la petición de E/S, se vuelve visible cuando se llama <xref:System.IO.Log.IRecordSequence.EndFlush%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-398">Errors that occur during an asynchronous flush request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.IRecordSequence.EndFlush%2A> is called.</span></span>  
  
 <span data-ttu-id="129de-399">Se debe llamar a este método exactamente una vez en <xref:System.IAsyncResult> devuelto por el método <xref:System.IO.Log.IRecordSequence.BeginFlush%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-399">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.IRecordSequence.BeginFlush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-400">Uno o varios argumentos no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-400">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-401">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-401">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndReserveAndAppend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndReserveAndAppend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.EndReserveAndAppend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReserveAndAppend (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber EndReserveAndAppend(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndReserveAndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.EndReserveAndAppend result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="129de-402">Referencia a la solicitud de E/S asincrónica pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-402">A reference to the outstanding asynchronous I/O request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-403">Cuando se invalida en una clase derivada, finaliza una operación de reserva asincrónica y de anexado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-403">When overridden in a derived class, ends an asynchronous reserve and append operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-404">Número de secuencia del registro de entrada anexado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-404">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-405">Este método se bloquea hasta que se haya completado la operación de E/S.</span><span class="sxs-lookup"><span data-stu-id="129de-405">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="129de-406">Errores que producen durante una solicitud de lectura asincrónica, como un error de disco durante la petición de E/S, se vuelve visible cuando se llama <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-406">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> is called.</span></span>  
  
 <span data-ttu-id="129de-407">Se debe llamar a este método exactamente una vez en <xref:System.IAsyncResult> devuelto por el método <xref:System.IO.Log.IRecordSequence.BeginReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-407">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.IRecordSequence.BeginReserveAndAppend%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-408">Uno o varios argumentos no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-408">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-409">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-409">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndWriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndWriteRestartArea (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndWriteRestartArea(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.EndWriteRestartArea(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWriteRestartArea (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber EndWriteRestartArea(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndWriteRestartArea : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.EndWriteRestartArea result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="129de-410">Referencia a la solicitud de E/S asincrónica pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-410">A reference to the outstanding asynchronous I/O request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-411">Cuando se invalida en una clase derivada, finaliza una operación de escritura de área de reinicio asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-411">When overridden in a derived class, ends an asynchronous restart area write operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-412">Número de secuencia del registro de entrada escrito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-412">The sequence number of the written log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-413">Este método se bloquea hasta que se haya completado la operación de E/S.</span><span class="sxs-lookup"><span data-stu-id="129de-413">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="129de-414">Errores que producen durante una solicitud de lectura asincrónica, como un error de disco durante la petición de E/S, se vuelve visible cuando se llama <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-414">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> is called.</span></span>  
  
 <span data-ttu-id="129de-415">Se debe llamar a este método exactamente una vez en <xref:System.IAsyncResult> devuelto por el método <xref:System.IO.Log.IRecordSequence.BeginWriteRestartArea%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-415">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.IRecordSequence.BeginWriteRestartArea%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-416">Uno o varios argumentos no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-416">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-417">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-417">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flush">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="129de-418">Cuando se invalida en una clase derivada, hace que se escriban los registros anexados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-418">When overridden in a derived class, causes appended records to be written.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Function Flush () As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="129de-419">Cuando se invalida en una clase derivada, asegura que todos los registros anexados se han escrito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-419">When overridden in a derived class, ensures that all appended records have been written.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-420">Número de secuencia del último registro escrito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-420">The sequence number of the last record written.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-421">Llamar a este método asegura que todos los registros anexados a <xref:System.IO.Log.IRecordSequence> se han escrito de manera duradera.</span><span class="sxs-lookup"><span data-stu-id="129de-421">Calling this method ensures that all records that have been appended to the <xref:System.IO.Log.IRecordSequence> have been durably written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="129de-422">Un error E/S ha ocurrido durante el vaciado de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-422">An I/O error occurred while flushing the data.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-423">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-423">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Flush (System.IO.Log.SequenceNumber sequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Flush(valuetype System.IO.Log.SequenceNumber sequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.Flush(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber Flush(System::IO::Log::SequenceNumber sequenceNumber);" />
      <MemberSignature Language="F#" Value="abstract member Flush : System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.Flush sequenceNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber">
          <span data-ttu-id="129de-424">El número de secuencia del último registro que se debe escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-424">The sequence number of the latest record that must be written.</span>
          </span>
          <span data-ttu-id="129de-425">Si <see cref="T:System.IO.Log.SequenceNumber" /> no es válido, a continuación, se deben escribir todos los registros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-425">If this <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-426">Cuando se invalida en una clase derivada, garantiza que todos los registros anexados hasta el registro con el número de secuencia especificado, incluido éste, se han escrito de manera duradera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-426">When overridden in a derived class, ensures that all appended records up to and including the record with the specified sequence number have been durably written.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-427">Número de secuencia del último registro escrito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-427">The sequence number of the last record written.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-428">Llamar a este método garantiza que todos los registros con números de secuencia hasta el especificado, incluido éste, se han escrito de manera duradera.</span><span class="sxs-lookup"><span data-stu-id="129de-428">Calling this method ensures that all records with sequence numbers up to and including the specified sequence number have been durably written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-429">Uno o varios argumentos no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-429">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="129de-430">Un error E/S ha ocurrido durante el vaciado de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-430">An I/O error occurred while flushing the data.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-431">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-431">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LastSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber LastSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber LastSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.IRecordSequence.LastSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber LastSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.LastSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.IRecordSequence.LastSequenceNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="129de-432">Cuando se invalida en una clase derivada, obtiene el número de secuencia que es mayor que el último registro que se anexó.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-432">When overridden in a derived class, gets the sequence number which is greater than the last record appended.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="129de-433">Un número de secuencia que es mayor que el último registro anexado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-433">A sequence number which is greater than the last record appended.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-434">Esta propiedad contiene un número de secuencia con la garantía de ser mayor que el número de secuencia del último registro anexado.</span><span class="sxs-lookup"><span data-stu-id="129de-434">This property contains a sequence number that is guaranteed to be larger than the sequence number of the last appended record.</span></span> <span data-ttu-id="129de-435">Los números de secuencia válidos son mayores que o iguales a <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> y menores que <xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-435">Valid sequence numbers are greater than or equal to <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="129de-436">Al utilizar una instancia <xref:System.IO.Log.LogRecordSequence>, el valor <xref:System.IO.Log.LogRecordSequence.LastSequenceNumber%2A> se puede volver anticuado hasta que los registros se vacíen al registro.</span><span class="sxs-lookup"><span data-stu-id="129de-436">When using a <xref:System.IO.Log.LogRecordSequence> instance, the <xref:System.IO.Log.LogRecordSequence.LastSequenceNumber%2A> value can become out of date until records are flushed to the log.</span></span> <span data-ttu-id="129de-437">Vea <xref:System.IO.Log.IRecordSequence.Flush%2A> y <xref:System.IO.Log.RecordAppendOptions> para obtener más información sobre cómo vaciar los registros.</span><span class="sxs-lookup"><span data-stu-id="129de-437">See <xref:System.IO.Log.IRecordSequence.Flush%2A> and <xref:System.IO.Log.RecordAppendOptions> for more information on flushing records..</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-438">Se tuvo acceso a la propiedad después de haber eliminado la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-438">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumRecordLength">
      <MemberSignature Language="C#" Value="public long MaximumRecordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumRecordLength" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.IRecordSequence.MaximumRecordLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaximumRecordLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumRecordLength { long get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRecordLength : int64" Usage="System.IO.Log.IRecordSequence.MaximumRecordLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="129de-439">Cuando se invalida en una clase derivada, obtiene el tamaño del registro más grande que se puede anexar a, o que puede leerse de esta secuencia, en bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-439">When overridden in a derived class, gets the size of the largest record that can be appended to or read from this sequence, in bytes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="129de-440">El tamaño del registro más grande que se puede anexar a o que puede leerse de esta secuencia, en bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-440">The size of the largest record that can be appended to or read from this sequence, in bytes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-441">Se tuvo acceso a la propiedad después de haber eliminado la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-441">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLogRecords">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt; ReadLogRecords (System.IO.Log.SequenceNumber start, System.IO.Log.LogRecordEnumeratorType logRecordEnum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Log.LogRecord&gt; ReadLogRecords(valuetype System.IO.Log.SequenceNumber start, valuetype System.IO.Log.LogRecordEnumeratorType logRecordEnum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadLogRecords (start As SequenceNumber, logRecordEnum As LogRecordEnumeratorType) As IEnumerable(Of LogRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::Log::LogRecord ^&gt; ^ ReadLogRecords(System::IO::Log::SequenceNumber start, System::IO::Log::LogRecordEnumeratorType logRecordEnum);" />
      <MemberSignature Language="F#" Value="abstract member ReadLogRecords : System.IO.Log.SequenceNumber * System.IO.Log.LogRecordEnumeratorType -&gt; seq&lt;System.IO.Log.LogRecord&gt;" Usage="iRecordSequence.ReadLogRecords (start, logRecordEnum)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="logRecordEnum" Type="System.IO.Log.LogRecordEnumeratorType" />
      </Parameters>
      <Docs>
        <param name="start">
          <span data-ttu-id="129de-442">El número de secuencia del primer registro donde la lectura se inicia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-442">The sequence number of the first record where the reading starts.</span>
          </span>
        </param>
        <param name="logRecordEnum">
          <span data-ttu-id="129de-443">Un valor <see cref="T:System.IO.Log.LogRecordEnumeratorType" /> válido que especifica la manera (es decir, hacia adelante o hacia atrás) en la que los registros se deberían leer de <see cref="T:System.IO.Log.LogRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-443">A valid <see cref="T:System.IO.Log.LogRecordEnumeratorType" /> value that specifies the manner (that is, forward or backward) in which records should be read from a <see cref="T:System.IO.Log.LogRecordSequence" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-444">Cuando se invalida en una clase derivada, devuelve una colección enumerable de registros en la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-444">When overridden in a derived class, returns an enumerable collection of records in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-445">Una colección enumerable de registros en la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-445">An enumerable collection of records in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-446">Cuando se invalida en una clase derivada, devuelve una colección enumerable de registros en la secuencia.</span><span class="sxs-lookup"><span data-stu-id="129de-446">When overridden in a derived class, returns an enumerable collection of records in the sequence.</span></span> <span data-ttu-id="129de-447">El orden de los registros enumerados depende del valor del parámetro `logRecordEnum`.</span><span class="sxs-lookup"><span data-stu-id="129de-447">The order of the enumerated records depends on the value of the `logRecordEnum` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="129de-448">Este ejemplo muestra el uso del método <xref:System.IO.Log.IRecordSequence.ReadLogRecords%2A> .</span><span class="sxs-lookup"><span data-stu-id="129de-448">This sample demonstrates the use of the <xref:System.IO.Log.IRecordSequence.ReadLogRecords%2A> method.</span></span>  
  
```csharp  
using System;  
 using System.IO;  
 using System.IO.Log;  
  
 class ReadRecordsSample  
 {  
     static SequenceNumber AppendRecord(IRecordSequence sequence,  
                                        string message,  
                                        SequenceNumber user,  
                                        SequenceNumber previous)  
     {  
         MemoryStream data = new MemoryStream();  
         BinaryWriter writer = new BinaryWriter(data);  
         writer.Write(message);  
  
         ArraySegment<byte>[] segments;  
         segments = new ArraySegment<byte>[1];  
         segments[0] = new ArraySegment(data.GetBuffer(),  
                                        0,  
                                        Data.Length);  
  
         return sequence.Append(segments,  
                                user,  
                                previous,  
                                WriteFlags.None);  
     }  
  
     public static void Main(string[] args)  
     {  
         IRecordSequence sequence;  
         sequence = new FileIRecordSequence(args[0]);  
  
         SequenceNumber a, b, c, d;  
  
         a = AppendRecord(sequence,  
                          "This is record A",  
                          SequenceNumber.Invalid,  
                          SequenceNumber.Invalid);  
         Console.WriteLine("Record A has sequence number System.IO.Log", a);  
  
         b = AppendRecord(sequence,  
                          "This is record B",  
                          a,  
                          a);  
         Console.WriteLine("Record B has sequence number System.IO.Log", b);  
  
         c = AppendRecord(sequence,  
                          "This is record C",  
                          a,  
                          a);  
         Console.WriteLine("Record C has sequence number System.IO.Log", c);  
  
         d = AppendRecord(sequence,  
                          "This is record D",  
                          b,  
                          c);  
         Console.WriteLine("Record D has sequence number System.IO.Log", d);  
  
         foreach(LogRecord record in  
                 sequence.ReadLogRecords(a, ReadDirection.Forward))  
         {  
             BinaryReader reader = new BinaryReader(record.Data);  
             Console.WriteLine("System.IO.Log: T:System.IO.Log.IRecordSequence",  
                               record.SequenceNumber,  
                               reader.ReadString());  
         }  
  
         foreach(LogRecord record in  
                 sequence.ReadLogRecords(d, ReadDirection.User))  
         {  
             BinaryReader reader = new BinaryReader(record.Data);  
             Console.WriteLine("System.IO.Log: T:System.IO.Log.IRecordSequence",  
                               record.SequenceNumber,  
                               reader.ReadString());  
         }  
  
         foreach(LogRecord record in  
                 sequence.ReadLogRecords(d, ReadDirection.Previous))  
         {  
             BinaryReader reader = new BinaryReader(record.Data);  
             Console.WriteLine("System.IO.Log: T:System.IO.Log.IRecordSequence",  
                               record.SequenceNumber,  
                               reader.ReadString());  
         }  
     }  
       }  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-449">Uno o varios argumentos no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-449">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="129de-450">Ha ocurrido un error de E/S al leer un registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-450">An I/O error occurred while reading the record.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-451">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-451">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadRestartAreas">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt; ReadRestartAreas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Log.LogRecord&gt; ReadRestartAreas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.ReadRestartAreas" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadRestartAreas () As IEnumerable(Of LogRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::Log::LogRecord ^&gt; ^ ReadRestartAreas();" />
      <MemberSignature Language="F#" Value="abstract member ReadRestartAreas : unit -&gt; seq&lt;System.IO.Log.LogRecord&gt;" Usage="iRecordSequence.ReadRestartAreas " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="129de-452">Cuando se invalida en una clase derivada, devuelve una colección enumerable de las áreas de reinicio en la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-452">When overridden in a derived class, returns an enumerable collection of the restart areas in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-453">Una colección enumerable de las áreas de reinicio en la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-453">An enumerable collection of the restart areas in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-454">Las áreas de reinicio se enumeran en orden inverso del número de secuencia, es decir, del número de secuencia superior al número de secuencia más bajo.</span><span class="sxs-lookup"><span data-stu-id="129de-454">The restart areas are enumerated in reverse sequence number order, that is, from the highest sequence number to the lowest sequence number.</span></span> <span data-ttu-id="129de-455">Sólo se enumeran las áreas de reinicio con números de secuencia entre el último número de secuencia y el número de secuencia base.</span><span class="sxs-lookup"><span data-stu-id="129de-455">Only restart areas with sequence numbers between the last sequence number and the base sequence number are enumerated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="129de-456">Si se daña la extensión del registro que contiene <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A>, este método puede iniciar <xref:System.IO.IOException> con el mensaje de error que "La solicitud no se pudo realizar debido a una excepción E/S inesperada.</span><span class="sxs-lookup"><span data-stu-id="129de-456">If the log extent containing the <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> becomes corrupted, this method can throw an <xref:System.IO.IOException> with the error message "The request could not be performed because of an unexpected I/O exception.</span></span> <span data-ttu-id="129de-457">Se ha devuelto el siguiente código erróneo: '80070026'".</span><span class="sxs-lookup"><span data-stu-id="129de-457">The following error code was returned: '80070026'".</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-458">Uno o varios argumentos no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-458">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="129de-459">Ha ocurrido un error de E/S al leer un registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-459">An I/O error occurred while reading the record.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-460">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-460">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReserveAndAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="129de-461">Cuando se invalida en una clase derivada, automáticamente realiza una reserva única y anexa un registro a la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-461">When overridden in a derived class, automatically makes a single reservation and appends a record to the sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber ReserveAndAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, params long[] reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber ReserveAndAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber ReserveAndAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, ... cli::array &lt;long&gt; ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member ReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.ReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="129de-462">Una lista de segmentos de la matriz de bytes que se concatenarán y anexarán como el registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-462">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="129de-463">El número de secuencia del registro siguiente en el orden especificado por el usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-463">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="129de-464">El número de secuencia del registro siguiente en orden anterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-464">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="129de-465">Un valor válido de <see cref="T:System.IO.Log.RecordAppendOptions" /> que especifica cómo se deberían escribir los datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-465">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservationCollection">
          <span data-ttu-id="129de-466">
            <see cref="T:System.IO.Log.ReservationCollection" /> en el que se contiene la colección para realizar las reservas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-466">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the collection to make reservations in.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="129de-467">Las reservas que se han de realizar, en bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-467">The reservations to make, in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-468">Cuando se invalida en una clase derivada, automáticamente realiza una reserva única y anexa un registro a la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-468">When overridden in a derived class, automatically makes a single reservation and appends a record to the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-469">Número de secuencia del registro de entrada anexado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-469">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-470">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-470">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="129de-471">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-471">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="129de-472">Las reservas especificadas se agregan a la colección de reservas proporcionada en una operación atómica con una operación de anexado de registro.</span><span class="sxs-lookup"><span data-stu-id="129de-472">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="129de-473">Si no se produce el anexado, no se reserva ningún espacio.</span><span class="sxs-lookup"><span data-stu-id="129de-473">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="129de-474">Normalmente, este método puede completarse antes de que se haya escrito el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-474">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="129de-475">Para asegurarse de que se ha escrito un registro, especifique la marca <xref:System.IO.Log.RecordAppendOptions.ForceFlush> utilizando el parámetro `recordAppendOptions` o llame al método <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-475">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-476">Uno o varios argumentos no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-476">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="129de-477">Ha ocurrido un error de E/S al anexar un registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-477">An I/O error occurred while appending the record.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="129de-478">La secuencia del registro no pudo liberar espacio suficiente para contener el nuevo registro o para hacer la reserva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-478">The record sequence could not make enough free space to contain the new record, or to make the reservation.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-479">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-479">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber ReserveAndAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, params long[] reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber ReserveAndAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber ReserveAndAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, ... cli::array &lt;long&gt; ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member ReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.ReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="129de-480">Una lista de segmentos de la matriz de bytes que se concatenarán y anexarán como el registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-480">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="129de-481">El número de secuencia del registro siguiente en el orden especificado por el usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-481">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="129de-482">El número de secuencia del registro siguiente en orden anterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-482">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="129de-483">Un valor válido de <see cref="T:System.IO.Log.RecordAppendOptions" /> que especifica cómo se deberían escribir los datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-483">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservationCollection">
          <span data-ttu-id="129de-484">La colección de reservas en la que realizar las reservas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-484">The reservation collection to make reservations in.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="129de-485">Las reservas que se han de realizar, en bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-485">The reservations to make, in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-486">Cuando se invalida en una clase derivada, automáticamente realiza una reserva única y anexa un registro a la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-486">When overridden in a derived class, automatically makes a single reservation and appends a record to the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-487">Número de secuencia del registro de entrada anexado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-487">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-488">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-488">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="129de-489">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-489">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="129de-490">Las reservas especificadas se agregan a la colección de reservas proporcionada en una operación atómica con una operación de anexado de registro.</span><span class="sxs-lookup"><span data-stu-id="129de-490">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="129de-491">Si no se produce el anexado, no se reserva ningún espacio.</span><span class="sxs-lookup"><span data-stu-id="129de-491">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="129de-492">Normalmente, este método puede completarse antes de que se haya escrito el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-492">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="129de-493">Para asegurarse de que se ha escrito un registro, especifique la marca <xref:System.IO.Log.RecordAppendOptions.ForceFlush> utilizando el parámetro `recordAppendOptions` o llame al método <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-493">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-494">Uno o varios argumentos no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-494">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="129de-495">Ha ocurrido un error de E/S al anexar un registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-495">An I/O error occurred while appending the record.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="129de-496">La secuencia del registro no pudo liberar espacio suficiente para contener el nuevo registro o para hacer la reserva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-496">The record sequence could not make enough free space to contain the new record, or to make the reservation.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-497">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-497">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReservedBytes">
      <MemberSignature Language="C#" Value="public long ReservedBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReservedBytes" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.IRecordSequence.ReservedBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReservedBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ReservedBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ReservedBytes : int64" Usage="System.IO.Log.IRecordSequence.ReservedBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="129de-498">Cuando se invalida en una clase derivada, obtiene el número total de bytes que se han reservado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-498">When overridden in a derived class, gets the total number of bytes that have been reserved.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="129de-499">El tamaño total de todas las reservas realizadas en esta secuencia del registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-499">The total size of all reservations made in this record sequence.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-500">Se tuvo acceso a la propiedad después de haber eliminado la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-500">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RestartSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber RestartSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber RestartSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.IRecordSequence.RestartSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestartSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber RestartSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.RestartSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.IRecordSequence.RestartSequenceNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="129de-501">Cuando se invalida en una clase derivada, obtiene el número de secuencia del área de reinicio recientemente escrita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-501">When overridden in a derived class, gets the sequence number of the most recently written restart area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="129de-502">El número de secuencia del área de reinicio recientemente escrita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-502">The sequence number of the most recently written restart area.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-503">Un área de reinicio se utiliza para almacenar temporalmente información que contiene la última operación de punto de control de un cliente.</span><span class="sxs-lookup"><span data-stu-id="129de-503">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="129de-504">Cuando una recuperación es necesaria, puede analizar el área de reinicio para recuperar todos los datos de la última operación de punto de control.</span><span class="sxs-lookup"><span data-stu-id="129de-504">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="129de-505">Estos datos inicializan la tabla de transacciones, la tabla de páginas desfasadas y la tabla de archivos abiertos para que se puedan utilizar en el proceso de recuperación.</span><span class="sxs-lookup"><span data-stu-id="129de-505">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-506">Se tuvo acceso a la propiedad después de haber eliminado la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-506">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RetryAppend">
      <MemberSignature Language="C#" Value="public bool RetryAppend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RetryAppend" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.IRecordSequence.RetryAppend" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryAppend As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RetryAppend { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RetryAppend : bool with get, set" Usage="System.IO.Log.IRecordSequence.RetryAppend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="129de-507">Obtiene o establece un valor que indica si los anexos se reintentan automáticamente en caso de que el registro esté completo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-507">Gets or sets a value indicating whether appends are automatically retried if the log is full.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="129de-508">
            <see langword="true" /> si las operaciones de anexado se reintentan automáticamente cuando el registro esté lleno; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-508">
              <see langword="true" /> if appends are automatically retried if the log is full; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="129de-509">El valor predeterminado es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-509">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-510">Si el valor de esta propiedad es `true`, y una llamada <xref:System.IO.Log.IRecordSequence.Append%2A> no puede realizarse porque no hay espacio suficiente en la secuencia, la secuencia de registro intentará liberar espacio y volverá a intentar anexarse.</span><span class="sxs-lookup"><span data-stu-id="129de-510">If the value of this property is `true`, and an <xref:System.IO.Log.IRecordSequence.Append%2A> call fails because there is not enough space in the sequence, the record sequence will try to free space and retry the append.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-511">Se tuvo acceso a la propiedad después de haber eliminado la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-511">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TailPinned">
      <MemberSignature Language="C#" Value="event EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; TailPinned;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IO.Log.TailPinnedEventArgs&gt; TailPinned" />
      <MemberSignature Language="DocId" Value="E:System.IO.Log.IRecordSequence.TailPinned" />
      <MemberSignature Language="VB.NET" Value="Event TailPinned As EventHandler(Of TailPinnedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IO::Log::TailPinnedEventArgs ^&gt; ^ TailPinned;" />
      <MemberSignature Language="F#" Value="member this.TailPinned : EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; " Usage="member this.TailPinned : System.EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="129de-512">Se produce cuando la secuencia del registro determina que se debe avanzar la cola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-512">Occurs when the record sequence determines that the tail must be moved forward.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-513">Puede desencadenar este evento cuando la secuencia del registro se haya quedado sin espacio.</span><span class="sxs-lookup"><span data-stu-id="129de-513">You can fire this event when the record sequence has run out of space.</span></span> <span data-ttu-id="129de-514">Cuando se desencadena este evento, la cola de la secuencia (es decir, el número de secuencia base) avanza para liberar espacio.</span><span class="sxs-lookup"><span data-stu-id="129de-514">When this event is fired, the tail of the sequence (that is, the base sequence number) is moved forward to free up space.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRestartArea">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="129de-515">Cuando se invalida en una clase derivada, escribe un área de reinicio a<see cref="T:System.IO.Log.IRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-515">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-516">Un área de reinicio se utiliza para almacenar temporalmente información que contiene la última operación de punto de control de un cliente.</span><span class="sxs-lookup"><span data-stu-id="129de-516">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="129de-517">Cuando una recuperación es necesaria, puede analizar el área de reinicio para recuperar todos los datos de la última operación de punto de control.</span><span class="sxs-lookup"><span data-stu-id="129de-517">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="129de-518">Estos datos inicializan la tabla de transacciones, la tabla de páginas desfasadas y la tabla de archivos abiertos para que se puedan utilizar en el proceso de recuperación.</span><span class="sxs-lookup"><span data-stu-id="129de-518">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span> <span data-ttu-id="129de-519">Un área de reinicio puede leerse mediante el método <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-519">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte)) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : ArraySegment&lt;byte&gt; -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.WriteRestartArea data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="129de-520">Una lista de segmentos de la matriz de bytes que se concatenarán y anexarán como el registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-520">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-521">Cuando se invalida en una clase derivada, escribe un área de reinicio a<see cref="T:System.IO.Log.IRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-521">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-522">Número de secuencia del área de reinicio escrita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-522">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-523">Un área de reinicio se utiliza para almacenar temporalmente información que contiene la última operación de punto de control de un cliente.</span><span class="sxs-lookup"><span data-stu-id="129de-523">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="129de-524">El Sistema de Registro de Archivo Común (CLFS) mantiene dos áreas de reinicio para garantizar por lo menos que un área válida esté siempre disponible.</span><span class="sxs-lookup"><span data-stu-id="129de-524">The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</span></span> <span data-ttu-id="129de-525">Cuando una recuperación es necesaria, CLFS lee su área de reinicio y todos los datos de la última operación de punto de control.</span><span class="sxs-lookup"><span data-stu-id="129de-525">When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</span></span> <span data-ttu-id="129de-526">Estos datos inicializan la tabla de transacciones, la tabla de páginas desfasadas y la tabla de archivos abiertos para que se puedan utilizar en el proceso de recuperación.</span><span class="sxs-lookup"><span data-stu-id="129de-526">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="129de-527">Un área de reinicio puede leerse mediante el método <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-527">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="129de-528">Los datos contenidos en los segmentos de la matriz de bytes se concatenarán en una matriz de bytes única para anexarse como el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-528">The data in the byte array segments will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="129de-529">No se ha realizado ninguna disposición para dividir los datos de nuevo en segmentos de matriz cuando se lee el área de reinicio.</span><span class="sxs-lookup"><span data-stu-id="129de-529">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-530">Uno o varios argumentos no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-530">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="129de-531">Se produjo un error de E/S al escribir el área de reinicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-531">An I/O error occurred while writing the restart area.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="129de-532">La secuencia del registro no pudo liberar espacio suficiente para contener el área de reinicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-532">The record sequence could not make enough free space to contain the new restart area.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-533">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-533">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte))) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.WriteRestartArea data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="129de-534">Una lista de segmentos de la matriz de bytes que se concatenarán y anexarán como el registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-534">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-535">Cuando se invalida en una clase derivada, escribe un área de reinicio a<see cref="T:System.IO.Log.IRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-535">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-536">Número de secuencia del área de reinicio escrita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-536">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-537">Un área de reinicio se utiliza para almacenar temporalmente información que contiene la última operación de punto de control de un cliente.</span><span class="sxs-lookup"><span data-stu-id="129de-537">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="129de-538">Cuando una recuperación es necesaria, puede analizar el área de reinicio para recuperar todos los datos de la última operación de punto de control.</span><span class="sxs-lookup"><span data-stu-id="129de-538">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="129de-539">Estos datos inicializan la tabla de transacciones, la tabla de páginas desfasadas y la tabla de archivos abiertos para que se puedan utilizar en el proceso de recuperación.</span><span class="sxs-lookup"><span data-stu-id="129de-539">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span> <span data-ttu-id="129de-540">Un área de reinicio puede leerse mediante el método <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-540">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="129de-541">Los datos contenidos en los segmentos de la matriz de bytes se concatenarán en una matriz de bytes única para anexarse como el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-541">The data in the byte array segments will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="129de-542">No se ha realizado ninguna disposición para dividir los datos de nuevo en segmentos de matriz cuando se lee el área de reinicio.</span><span class="sxs-lookup"><span data-stu-id="129de-542">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-543">Uno o varios argumentos no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-543">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="129de-544">Se produjo un error de E/S al escribir el área de reinicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-544">An I/O error occurred while writing the restart area.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="129de-545">La secuencia del registro no pudo liberar espacio suficiente para contener el área de reinicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-545">The record sequence could not make enough free space to contain the new restart area.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-546">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-546">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte), newBaseSequenceNumber As SequenceNumber) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.WriteRestartArea (data, newBaseSequenceNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="129de-547">Una lista de segmentos de la matriz de bytes que se concatenarán y anexarán como el registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-547">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSequenceNumber">
          <span data-ttu-id="129de-548">El nuevo número de secuencia base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-548">The new base sequence number.</span>
          </span>
          <span data-ttu-id="129de-549">El número de secuencia especificado debe ser mayor que o igual al número de secuencia base actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-549">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-550">Cuando se invalida en una clase derivada, se escribe un área de reinicio a<see cref="T:System.IO.Log.IRecordSequence" /> y se actualiza el número de secuencia base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-550">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" /> and updates the base sequence number</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-551">Número de secuencia del área de reinicio escrita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-551">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-552">Un área de reinicio se utiliza para almacenar temporalmente información que contiene la última operación de punto de control de un cliente.</span><span class="sxs-lookup"><span data-stu-id="129de-552">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="129de-553">Cuando una recuperación es necesaria, puede analizar el área de reinicio para recuperar todos los datos de la última operación de punto de control.</span><span class="sxs-lookup"><span data-stu-id="129de-553">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="129de-554">Estos datos inicializan la tabla de transacciones, la tabla de páginas desfasadas y la tabla de archivos abiertos para que se puedan utilizar en el proceso de recuperación.</span><span class="sxs-lookup"><span data-stu-id="129de-554">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span> <span data-ttu-id="129de-555">Un área de reinicio puede leerse mediante el método <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-555">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="129de-556">Cuando se escribe un área de reinicio, los datos en los segmentos de la matriz de bytes se concatenan en una matriz de bytes única para anexar como el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-556">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="129de-557">No se ha realizado ninguna disposición para dividir los datos de nuevo en segmentos de matriz cuando se lee el área de reinicio.</span><span class="sxs-lookup"><span data-stu-id="129de-557">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="129de-558">Cuando el método se completa correctamente, el número de secuencia base se actualiza.</span><span class="sxs-lookup"><span data-stu-id="129de-558">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="129de-559">Todas las entradas de registro con números de secuencia menores que el nuevo número de secuencia base son inaccesibles.</span><span class="sxs-lookup"><span data-stu-id="129de-559">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-560">Uno o varios argumentos no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-560">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="129de-561">Se produjo un error de E/S al escribir el área de reinicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-561">An I/O error occurred while writing the restart area.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="129de-562">La secuencia del registro no pudo liberar espacio suficiente para contener el área de reinicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-562">The record sequence could not make enough free space to contain the new restart area.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-563">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-563">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSequenceNumber As SequenceNumber) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.WriteRestartArea (data, newBaseSequenceNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="129de-564">Una lista de segmentos de la matriz de bytes que se concatenarán y anexarán como el registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-564">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSequenceNumber">
          <span data-ttu-id="129de-565">El nuevo número de secuencia base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-565">The new base sequence number.</span>
          </span>
          <span data-ttu-id="129de-566">El número de secuencia especificado debe ser mayor que o igual al número de secuencia base actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-566">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-567">Cuando se invalida en una clase derivada, escribe un área de reinicio en <see cref="T:System.IO.Log.IRecordSequence" /> y actualiza el número de secuencia base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-567">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" /> and updates the base sequence number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-568">Número de secuencia del área de reinicio escrita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-568">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-569">Un área de reinicio se utiliza para almacenar temporalmente información que contiene la última operación de punto de control de un cliente.</span><span class="sxs-lookup"><span data-stu-id="129de-569">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="129de-570">Cuando una recuperación es necesaria, puede analizar el área de reinicio para recuperar todos los datos de la última operación de punto de control.</span><span class="sxs-lookup"><span data-stu-id="129de-570">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="129de-571">Estos datos inicializan la tabla de transacciones, la tabla de páginas desfasadas y la tabla de archivos abiertos para que se puedan utilizar en el proceso de recuperación.</span><span class="sxs-lookup"><span data-stu-id="129de-571">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span> <span data-ttu-id="129de-572">Un área de reinicio puede leerse mediante el método <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-572">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="129de-573">Cuando se escribe un área de reinicio, los datos en los segmentos de la matriz de bytes se concatenan en una matriz de bytes única para anexar como el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-573">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="129de-574">No se ha realizado ninguna disposición para dividir los datos de nuevo en segmentos de matriz cuando se lee el área de reinicio.</span><span class="sxs-lookup"><span data-stu-id="129de-574">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="129de-575">Cuando el método se completa correctamente, el número de secuencia base se actualiza.</span><span class="sxs-lookup"><span data-stu-id="129de-575">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="129de-576">Todas las entradas de registro con números de secuencia menores que el nuevo número de secuencia base son inaccesibles.</span><span class="sxs-lookup"><span data-stu-id="129de-576">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-577">Uno o varios argumentos no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-577">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="129de-578">Se produjo un error de E/S al escribir el área de reinicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-578">An I/O error occurred while writing the restart area.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="129de-579">La secuencia del registro no pudo liberar espacio suficiente para contener el área de reinicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-579">The record sequence could not make enough free space to contain the new restart area.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-580">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-580">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSequenceNumber, System.IO.Log.ReservationCollection reservation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber, class System.IO.Log.ReservationCollection reservation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte), newBaseSequenceNumber As SequenceNumber, reservation As ReservationCollection) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSequenceNumber, System::IO::Log::ReservationCollection ^ reservation);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.WriteRestartArea (data, newBaseSequenceNumber, reservation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="129de-581">Una lista de segmentos de la matriz de bytes que se concatenarán y anexarán como el registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-581">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSequenceNumber">
          <span data-ttu-id="129de-582">El nuevo número de secuencia base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-582">The new base sequence number.</span>
          </span>
          <span data-ttu-id="129de-583">El número de secuencia especificado debe ser mayor que o igual al número de secuencia base actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-583">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <param name="reservation">
          <span data-ttu-id="129de-584">
            <see cref="T:System.IO.Log.ReservationCollection" /> que contiene la reserva que se debería utilizar para este área de reinicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-584">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-585">Cuando se invalida en una clase derivada, escribe un área de reinicio en <see cref="T:System.IO.Log.IRecordSequence" /> mediante una reserva, y actualiza el número de secuencia base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-585">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" /> using a reservation, and updates the base sequence number</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-586">Número de secuencia del área de reinicio escrita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-586">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-587">Un área de reinicio se utiliza para almacenar temporalmente información que contiene la última operación de punto de control de un cliente.</span><span class="sxs-lookup"><span data-stu-id="129de-587">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="129de-588">Cuando una recuperación es necesaria, puede analizar el área de reinicio para recuperar todos los datos de la última operación de punto de control.</span><span class="sxs-lookup"><span data-stu-id="129de-588">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="129de-589">Estos datos inicializan la tabla de transacciones, la tabla de páginas desfasadas y la tabla de archivos abiertos para que se puedan utilizar en el proceso de recuperación.</span><span class="sxs-lookup"><span data-stu-id="129de-589">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span> <span data-ttu-id="129de-590">Un área de reinicio puede leerse mediante el método <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-590">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="129de-591">Cuando se escribe un área de reinicio, los datos en los segmentos de la matriz de bytes se concatenan en una matriz de bytes única para anexar como el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-591">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="129de-592">No se ha realizado ninguna disposición para dividir los datos de nuevo en segmentos de matriz cuando se lee el área de reinicio.</span><span class="sxs-lookup"><span data-stu-id="129de-592">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="129de-593">Si se especifica una reserva , el área de reinicio escrita utilizará el espacio que se ha reservado previamente, utilizando una reserva contenida en la colección.</span><span class="sxs-lookup"><span data-stu-id="129de-593">If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="129de-594">Si el método tiene éxito, utilizará la menor reserva que pueda contener los datos y esa reserva se quitará de la colección.</span><span class="sxs-lookup"><span data-stu-id="129de-594">If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="129de-595">Cuando el método se completa correctamente, el número de secuencia base se actualiza.</span><span class="sxs-lookup"><span data-stu-id="129de-595">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="129de-596">Todas las entradas de registro con números de secuencia menores que el nuevo número de secuencia base son inaccesibles.</span><span class="sxs-lookup"><span data-stu-id="129de-596">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="129de-597">Si una secuencia del registro se ha eliminado, o si se pasa un argumento no válido, las excepciones se producen inmediatamente en esta operación.</span><span class="sxs-lookup"><span data-stu-id="129de-597">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="129de-598">Los errores que se produjeron durante una solicitud de anexado asincrónica, como, por ejemplo, un error de disco durante la petición de E/S, producirá excepciones que se producen cuando se llama al método <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-598">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-599">Uno o varios argumentos no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-599">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="129de-600">Se produjo un error de E/S al escribir el área de reinicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-600">An I/O error occurred while writing the restart area.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="129de-601">La secuencia del registro no pudo liberar espacio suficiente para contener el área de reinicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-601">The record sequence could not make enough free space to contain the new restart area.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-602">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-602">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSequenceNumber, System.IO.Log.ReservationCollection reservation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber, class System.IO.Log.ReservationCollection reservation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSequenceNumber As SequenceNumber, reservation As ReservationCollection) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSequenceNumber, System::IO::Log::ReservationCollection ^ reservation);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.WriteRestartArea (data, newBaseSequenceNumber, reservation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="129de-603">Una lista de segmentos de la matriz de bytes que se concatenarán y anexarán como el registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-603">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSequenceNumber">
          <span data-ttu-id="129de-604">El nuevo número de secuencia base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-604">The new base sequence number.</span>
          </span>
          <span data-ttu-id="129de-605">El número de secuencia especificado debe ser mayor que o igual al número de secuencia base actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-605">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <param name="reservation">
          <span data-ttu-id="129de-606">
            <see cref="T:System.IO.Log.ReservationCollection" /> que contiene la reserva que se debería utilizar para este área de reinicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-606">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="129de-607">Cuando se invalida en una clase derivada, escribe un área de reinicio en <see cref="T:System.IO.Log.IRecordSequence" /> mediante una reserva y se actualiza el número de secuencia base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-607">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" /> using a reservation, and updates the base sequence number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="129de-608">Número de secuencia del área de reinicio escrita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-608">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129de-609">Un área de reinicio se utiliza para almacenar temporalmente información que contiene la última operación de punto de control de un cliente.</span><span class="sxs-lookup"><span data-stu-id="129de-609">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="129de-610">Cuando una recuperación es necesaria, puede analizar el área de reinicio para recuperar todos los datos de la última operación de punto de control.</span><span class="sxs-lookup"><span data-stu-id="129de-610">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="129de-611">Estos datos inicializan la tabla de transacciones, la tabla de páginas desfasadas y la tabla de archivos abiertos para que se puedan utilizar en el proceso de recuperación.</span><span class="sxs-lookup"><span data-stu-id="129de-611">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span> <span data-ttu-id="129de-612">Un área de reinicio puede leerse mediante el método <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-612">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="129de-613">Cuando se escribe un área de reinicio, los datos en los segmentos de la matriz de bytes se concatenan en una matriz de bytes única para anexar como el registro.</span><span class="sxs-lookup"><span data-stu-id="129de-613">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="129de-614">No se ha realizado ninguna disposición para dividir los datos de nuevo en segmentos de matriz cuando se lee el área de reinicio.</span><span class="sxs-lookup"><span data-stu-id="129de-614">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="129de-615">Si se especifica una reserva , el área de reinicio escrita utilizará el espacio que se ha reservado previamente, utilizando una reserva contenida en la colección.</span><span class="sxs-lookup"><span data-stu-id="129de-615">If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="129de-616">Si el método tiene éxito, utilizará la menor reserva que pueda contener los datos y esa reserva se quitará de la colección.</span><span class="sxs-lookup"><span data-stu-id="129de-616">If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="129de-617">Cuando el método se completa correctamente, el número de secuencia base se actualiza.</span><span class="sxs-lookup"><span data-stu-id="129de-617">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="129de-618">Todas las entradas de registro con números de secuencia menores que el nuevo número de secuencia base son inaccesibles.</span><span class="sxs-lookup"><span data-stu-id="129de-618">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="129de-619">Si una secuencia del registro se ha eliminado, o si se pasa un argumento no válido, las excepciones se producen inmediatamente en esta operación.</span><span class="sxs-lookup"><span data-stu-id="129de-619">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="129de-620">Los errores que se produjeron durante una solicitud de anexado asincrónica, como, por ejemplo, un error de disco durante la petición de E/S, producirá excepciones que se producen cuando se llama al método <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="129de-620">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="129de-621">Uno o varios argumentos no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-621">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="129de-622">Se produjo un error de E/S al escribir el área de reinicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-622">An I/O error occurred while writing the restart area.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="129de-623">La secuencia del registro no pudo liberar espacio suficiente para contener el área de reinicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-623">The record sequence could not make enough free space to contain the new restart area.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="129de-624">Se llamó al método una vez eliminada la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="129de-624">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>