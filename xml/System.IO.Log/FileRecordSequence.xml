<Type Name="FileRecordSequence" FullName="System.IO.Log.FileRecordSequence">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4c853a66a932592421edbe6cd06c3f5073c2580e" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37654523" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FileRecordSequence : IDisposable, System.IO.Log.IRecordSequence" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileRecordSequence extends System.Object implements class System.IDisposable, class System.IO.Log.IRecordSequence" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.FileRecordSequence" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileRecordSequence&#xA;Implements IDisposable, IRecordSequence" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileRecordSequence sealed : IDisposable, System::IO::Log::IRecordSequence" />
  <TypeSignature Language="F#" Value="type FileRecordSequence = class&#xA;    interface IRecordSequence&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IO.Log.IRecordSequence</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e8012-101">Implements an <see cref="T:System.IO.Log.IRecordSequence" /> on top of a file.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e8012-101">Implements an <see cref="T:System.IO.Log.IRecordSequence" /> on top of a file.</span>
      </span>
      <span data-ttu-id="e8012-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e8012-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-103"><xref:System.IO.Log.FileRecordSequence> es una secuencia de registro basada en un archivo de registro único del sistema de archivos.</span><span class="sxs-lookup"><span data-stu-id="e8012-103">The <xref:System.IO.Log.FileRecordSequence> is a record sequence based on a single log file in the file system.</span></span> <span data-ttu-id="e8012-104">Es una implementación simple de la interfaz <xref:System.IO.Log.IRecordSequence> sobre un registro basado en archivos simple.</span><span class="sxs-lookup"><span data-stu-id="e8012-104">It is a simple implementation of the <xref:System.IO.Log.IRecordSequence> interface, on top of a simple file-based log.</span></span>  
  
 <span data-ttu-id="e8012-105">Para manipular un registro basado en archivos, la cuenta en la que se ejecuta su aplicación debe tener los privilegios suficientes, tal y como lo dicta la seguridad del sistema de archivos en el momento que se construye <xref:System.IO.Log.FileRecordSequence>.</span><span class="sxs-lookup"><span data-stu-id="e8012-105">To manipulate a file-based log, the account that your application is running in must have sufficient privileges, as dictated by the file system security at the time the <xref:System.IO.Log.FileRecordSequence> is constructed.</span></span> <span data-ttu-id="e8012-106">Además, en el momento de la construcción se realiza una petición de FullTrust.</span><span class="sxs-lookup"><span data-stu-id="e8012-106">In addition, a demand for FullTrust is made at construction time.</span></span> <span data-ttu-id="e8012-107">Los resultados de la comprobación del permiso se almacenan después en memoria caché siguiendo el modelo de seguridad de Windows.</span><span class="sxs-lookup"><span data-stu-id="e8012-107">The permission verification results are cached thereafter in keeping with the Windows security model.</span></span> <span data-ttu-id="e8012-108">Debería asegurarse que no expone accidentalmente el contenido de la secuencia del registro a un usuario sin autorización.</span><span class="sxs-lookup"><span data-stu-id="e8012-108">You should ensure that you do not accidentally expose the contents of the record sequence to an unauthorized user.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8012-109">El siguiente ejemplo crea una secuencia de registro, anexa el registro a ella y finalmente lee los registros.</span><span class="sxs-lookup"><span data-stu-id="e8012-109">The following example creates a record sequence, appends record to it, and finally reads the records.</span></span>  
  
 [!code-csharp[IRecordSequence#1](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#1)]
 [!code-vb[IRecordSequence#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e8012-110">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-110">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileRecordSequence (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileRecordSequence(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.FileRecordSequence : string -&gt; System.IO.Log.FileRecordSequence" Usage="new System.IO.Log.FileRecordSequence path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="e8012-111">A relative or absolute path for the file that this <see cref="T:System.IO.Log.FileRecordSequence" /> instance will encapsulate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-111">A relative or absolute path for the file that this <see cref="T:System.IO.Log.FileRecordSequence" /> instance will encapsulate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-112">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class with a specified file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-112">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class with a specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-113">Este constructor crea el acceso de lectura y escritura al archivo y abre el archivo con acceso de lectura del recurso compartido.</span><span class="sxs-lookup"><span data-stu-id="e8012-113">This constructor creates read/write access to the file, and opens the file with share Read access.</span></span> <span data-ttu-id="e8012-114">Esto significa que las solicitudes que este u otro proceso realicen para abrir el archivo para su escritura producen un error hasta que se haya eliminado esta instancia de <xref:System.IO.Log.FileRecordSequence>, pero los intentos de lectura se realizarán con éxito.</span><span class="sxs-lookup"><span data-stu-id="e8012-114">This means that requests to open the file for writing by this or another process fails until this <xref:System.IO.Log.FileRecordSequence> instance has been disposed of, but read attempts will succeed.</span></span> <span data-ttu-id="e8012-115">Si no se encuentra `path`, se crea un nuevo archivo con un tamaño de 0 bytes.</span><span class="sxs-lookup"><span data-stu-id="e8012-115">If `path` is not found, a new file is created with a size of 0 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8012-116">El siguiente ejemplo crea una secuencia de registro, anexa el registro a ella, lee los registros y finalmente elimina la secuencia.</span><span class="sxs-lookup"><span data-stu-id="e8012-116">The following example creates a record sequence, appends record to it, reads the records, and finally diposes the sequence.</span></span>  
  
 [!code-csharp[IRecordSequence#1](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#1)]
 [!code-vb[IRecordSequence#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8012-117">The file specified by <paramref name="path" /> is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-117">The file specified by <paramref name="path" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="e8012-118">The file specified by <paramref name="path" /> cannot be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-118">The file specified by <paramref name="path" /> cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-119">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-119">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-120">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-120">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="e8012-121">Access for the specified log store is denied by the operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-121">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileRecordSequence (string path, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.#ctor(System.String,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, access As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileRecordSequence(System::String ^ path, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.FileRecordSequence : string * System.IO.FileAccess -&gt; System.IO.Log.FileRecordSequence" Usage="new System.IO.Log.FileRecordSequence (path, access)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="e8012-122">A relative or absolute path for the file that this <see cref="T:System.IO.Log.FileRecordSequence" /> instance will encapsulate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-122">A relative or absolute path for the file that this <see cref="T:System.IO.Log.FileRecordSequence" /> instance will encapsulate.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="e8012-123">A valid <see cref="T:System.IO.FileAccess" /> value that controls the kind of access users have to a log file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-123">A valid <see cref="T:System.IO.FileAccess" /> value that controls the kind of access users have to a log file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-124">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class with a specified file and an access mode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-124">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class with a specified file and an access mode.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8012-125">The file specified by <paramref name="path" /> is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-125">The file specified by <paramref name="path" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="e8012-126">The file specified by <paramref name="path" /> cannot be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-126">The file specified by <paramref name="path" /> cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-127">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-127">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-128">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-128">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="e8012-129">Access for the specified log store is denied by the operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-129">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileRecordSequence (string path, System.IO.FileAccess access, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileAccess access, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.#ctor(System.String,System.IO.FileAccess,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, access As FileAccess, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileRecordSequence(System::String ^ path, System::IO::FileAccess access, int size);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.FileRecordSequence : string * System.IO.FileAccess * int -&gt; System.IO.Log.FileRecordSequence" Usage="new System.IO.Log.FileRecordSequence (path, access, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="e8012-130">A relative or absolute path for the file that this <see cref="T:System.IO.Log.FileRecordSequence" /> instance will encapsulate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-130">A relative or absolute path for the file that this <see cref="T:System.IO.Log.FileRecordSequence" /> instance will encapsulate.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="e8012-131">A valid <see cref="T:System.IO.FileAccess" /> value that controls the kind of access users have to a log file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-131">A valid <see cref="T:System.IO.FileAccess" /> value that controls the kind of access users have to a log file.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="e8012-132">The size of the log file to be opened.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-132">The size of the log file to be opened.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-133">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class with a specified file, an access mode, and a file size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-133">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class with a specified file, an access mode, and a file size.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8012-134">One or more of the parameters are out of the valid range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-134">One or more of the parameters are out of the valid range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8012-135">The file specified by <paramref name="path" /> is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-135">The file specified by <paramref name="path" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="e8012-136">The file specified by <paramref name="path" /> cannot be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-136">The file specified by <paramref name="path" /> cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-137">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-137">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-138">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-138">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="e8012-139">Access for the specified log store is denied by the operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-139">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AdvanceBaseSequenceNumber">
      <MemberSignature Language="C#" Value="public void AdvanceBaseSequenceNumber (System.IO.Log.SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdvanceBaseSequenceNumber(valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AdvanceBaseSequenceNumber (newBaseSequenceNumber As SequenceNumber)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AdvanceBaseSequenceNumber(System::IO::Log::SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="F#" Value="abstract member AdvanceBaseSequenceNumber : System.IO.Log.SequenceNumber -&gt; unit&#xA;override this.AdvanceBaseSequenceNumber : System.IO.Log.SequenceNumber -&gt; unit" Usage="fileRecordSequence.AdvanceBaseSequenceNumber newBaseSequenceNumber" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="newBaseSequenceNumber">
          <span data-ttu-id="e8012-140">The new base sequence number of the record sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-140">The new base sequence number of the record sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-141">Moves the base sequence number of the log forward.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-141">Moves the base sequence number of the log forward.</span>
          </span>
          <span data-ttu-id="e8012-142">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-142">This method cannot be inherited.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8012-143">
            <paramref name="newBaseSequenceNumber" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-143">
              <paramref name="newBaseSequenceNumber" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8012-144">
            <paramref name="newBaseSequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-144">
              <paramref name="newBaseSequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-145">An I/O error occurred while modifying the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-145">An I/O error occurred while modifying the sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-146">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-146">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-147">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-147">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Append">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e8012-148">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-148">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e8012-149">El siguiente ejemplo crea una secuencia de registro, anexa el registro a ella y finalmente lee los registros.</span><span class="sxs-lookup"><span data-stu-id="e8012-149">The following example creates a record sequence, appends record to it, and finally reads the records.</span></span>  
  
 [!code-csharp[IRecordSequence#0](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#0)]
 [!code-vb[IRecordSequence#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="F#" Value="abstract member Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber&#xA;override this.Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="e8012-150">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-150">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="e8012-151">The sequence number of the next record in the user-specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-151">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="e8012-152">The sequence number of the next record in Previous order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-152">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="e8012-153">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-153">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-154">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-154">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
          <span data-ttu-id="e8012-155">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-155">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-156">The sequence number of the appended log record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-156">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-157">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-157">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e8012-158">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-158">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e8012-159">Normalmente, este método se completa antes de que se haya escrito el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-159">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="e8012-160">Para asegurarse de que se ha escrito un registro, especifique la marca <xref:System.IO.Log.RecordAppendOptions.ForceFlush> utilizando el parámetro `recordAppendOptions` o llame al método <xref:System.IO.Log.FileRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-160">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8012-161">El siguiente ejemplo crea una secuencia de registro, anexa el registro a ella y finalmente lee los registros.</span><span class="sxs-lookup"><span data-stu-id="e8012-161">The following example creates a record sequence, appends record to it, and finally reads the records.</span></span>  
  
 [!code-csharp[FileRecordSequence#0](~/samples/snippets/csharp/VS_Snippets_CFX/filerecordsequence/cs/filerecordsequence.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8012-162">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-162">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8012-163">One or more of the arguments are out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-163">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8012-164">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-164">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-165">The request could not be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-165">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-166">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-166">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-167">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-167">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="e8012-168">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-168">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="F#" Value="abstract member Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber&#xA;override this.Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="e8012-169">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-169">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="e8012-170">The sequence number of the next record in the user-specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-170">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="e8012-171">The sequence number of the next record in Previous order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-171">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="e8012-172">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-172">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-173">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-173">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
          <span data-ttu-id="e8012-174">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-174">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-175">The sequence number of the appended log record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-175">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-176">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-176">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e8012-177">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-177">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e8012-178">Normalmente, este método se completa antes de que se haya escrito el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-178">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="e8012-179">Para asegurarse de que se ha escrito un registro, especifique la marca <xref:System.IO.Log.RecordAppendOptions.ForceFlush> utilizando el parámetro `recordAppendOptions` o llame al método <xref:System.IO.Log.FileRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-179">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8012-180">El siguiente ejemplo muestra cómo crear una secuencia del registro con este método.</span><span class="sxs-lookup"><span data-stu-id="e8012-180">The following example shows how you can create a record sequence with this method.</span></span>  
  
 [!code-csharp[IRecordSequence#3](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#3)] 
 [!code-vb[IRecordSequence#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#3)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8012-181">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-181">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8012-182">One or more of the arguments are out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-182">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8012-183">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-183">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-184">The request could not be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-184">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-185">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-185">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-186">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-186">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="e8012-187">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-187">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber&#xA;override this.Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="e8012-188">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-188">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="e8012-189">The sequence number of the next record in the user-specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-189">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="e8012-190">The sequence number of the next record in Previous order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-190">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="e8012-191">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-191">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="e8012-192">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-192">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-193">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />, using space previously reserved in the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-193">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />, using space previously reserved in the sequence.</span>
          </span>
          <span data-ttu-id="e8012-194">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-194">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-195">The sequence number of the appended log record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-195">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-196">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-196">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e8012-197">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-197">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e8012-198">El registro anexado utilizará el espacio que se ha reservado previamente, utilizando una reserva especificada por el parámetro `reservations`.</span><span class="sxs-lookup"><span data-stu-id="e8012-198">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="e8012-199">Si el anexado tiene éxito, utilizará el área de reserva menor posible que pueda contener los datos y esa área de reserva se quitará de la colección.</span><span class="sxs-lookup"><span data-stu-id="e8012-199">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="e8012-200">Normalmente, este método se completa antes de que se haya escrito el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-200">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="e8012-201">Para asegurarse de que se ha escrito un registro, especifique la marca <xref:System.IO.Log.RecordAppendOptions.ForceFlush> utilizando el parámetro `recordAppendOptions` o llame al método <xref:System.IO.Log.FileRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-201">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8012-202">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-202">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8012-203">One or more of the arguments are out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-203">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8012-204">
            <paramref name="reservations" /> was not created by this record sequence..</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-204">
              <paramref name="reservations" /> was not created by this record sequence..</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8012-205">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-205">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-206">The request could not be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-206">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-207">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-207">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-208">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-208">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="e8012-209">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-209">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="e8012-210">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-210">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber&#xA;override this.Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="e8012-211">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-211">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="e8012-212">The sequence number of the next record in the user-specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-212">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="e8012-213">The sequence number of the next record in Previous order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-213">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="e8012-214">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-214">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="e8012-215">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-215">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-216">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />, using space previously reserved in the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-216">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />, using space previously reserved in the sequence.</span>
          </span>
          <span data-ttu-id="e8012-217">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-217">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-218">The sequence number of the appended log record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-218">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-219">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-219">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e8012-220">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-220">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e8012-221">El registro anexado utilizará el espacio que se ha reservado previamente, utilizando una reserva especificada por el parámetro `reservations`.</span><span class="sxs-lookup"><span data-stu-id="e8012-221">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="e8012-222">Si el anexado tiene éxito, utilizará el área de reserva menor posible que pueda contener los datos y esa área de reserva se quitará de la colección.</span><span class="sxs-lookup"><span data-stu-id="e8012-222">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="e8012-223">Normalmente, este método se completa antes de que se haya escrito el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-223">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="e8012-224">Para asegurarse de que se ha escrito un registro, especifique la marca <xref:System.IO.Log.RecordAppendOptions.ForceFlush> utilizando el parámetro `recordAppendOptions` o llame al método <xref:System.IO.Log.FileRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-224">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8012-225">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-225">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8012-226">One or more of the arguments are out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-226">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8012-227">
            <paramref name="reservations" /> was not created by this record sequence..</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-227">
              <paramref name="reservations" /> was not created by this record sequence..</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8012-228">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-228">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-229">The request could not be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-229">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-230">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-230">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-231">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-231">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="e8012-232">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-232">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="e8012-233">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-233">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber BaseSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber BaseSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.BaseSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber BaseSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.FileRecordSequence.BaseSequenceNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.BaseSequenceNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8012-234">Gets the sequence number of the first valid record in the current <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-234">Gets the sequence number of the first valid record in the current <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8012-235">El número de secuencia más bajo que corresponde a un registro válido en <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-235">The lowest sequence number that corresponds to a valid record in the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-236">Los números de secuencia válidos son mayores que o iguales a <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A> y menores que <xref:System.IO.Log.FileRecordSequence.LastSequenceNumber%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-236">Valid sequence numbers are greater than or equal to <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.FileRecordSequence.LastSequenceNumber%2A>.</span></span> <span data-ttu-id="e8012-237">El resto de números de secuencia no son válidos.</span><span class="sxs-lookup"><span data-stu-id="e8012-237">All other sequence numbers are invalid.</span></span>  
  
 <span data-ttu-id="e8012-238">El valor de esta propiedad se puede modificar llamando a <xref:System.IO.Log.FileRecordSequence.WriteRestartArea%2A> o al método <xref:System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber%2A> .</span><span class="sxs-lookup"><span data-stu-id="e8012-238">The value of this property can be changed by calling the <xref:System.IO.Log.FileRecordSequence.WriteRestartArea%2A> or <xref:System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8012-239">El siguiente ejemplo muestra cómo utilizar <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A> en un bucle:</span><span class="sxs-lookup"><span data-stu-id="e8012-239">The following example shows using <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A> in a loop:</span></span>  
  
 [!code-csharp[IRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#2)]
 [!code-vb[IRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-240">The property was accessed after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-240">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e8012-241">Begins an asynchronous append operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-241">Begins an asynchronous append operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="e8012-242">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-242">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="e8012-243">The sequence number of the next record in the user-specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-243">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="e8012-244">The sequence number of the next record in Previous order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-244">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="e8012-245">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-245">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="e8012-246">An optional asynchronous callback, to be called when the append is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-246">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="e8012-247">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-247">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-248">Begins an asynchronous append operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-248">Begins an asynchronous append operation.</span>
          </span>
          <span data-ttu-id="e8012-249">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-249">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-250">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-250">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-251">Debería pasar el <xref:System.IAsyncResult> devuelto por este método al método <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> para asegurarse de que la operación de anexado ha finalizado y de que se pueden liberar los recursos de manera adecuada.</span><span class="sxs-lookup"><span data-stu-id="e8012-251">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="e8012-252">Si se ha producido un error durante el anexado asincrónico, no se produce una excepción hasta que se llame al método <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> con el <xref:System.IAsyncResult> que devuelve este método.</span><span class="sxs-lookup"><span data-stu-id="e8012-252">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="e8012-253">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-253">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e8012-254">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-254">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e8012-255">Normalmente, este método se completa antes de que se haya escrito el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-255">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="e8012-256">Para asegurarse de que se ha escrito un registro, especifique la marca <xref:System.IO.Log.RecordAppendOptions.ForceFlush> utilizando el parámetro `recordAppendOptions` o llame al método <xref:System.IO.Log.FileRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-256">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8012-257">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-257">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8012-258">One or more of the arguments are out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-258">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8012-259">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-259">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-260">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-260">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-261">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-261">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-262">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-262">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="e8012-263">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-263">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="e8012-264">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-264">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="e8012-265">The sequence number of the next record in the user-specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-265">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="e8012-266">The sequence number of the next record in Previous order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-266">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="e8012-267">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-267">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="e8012-268">An optional asynchronous callback, to be called when the append is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-268">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="e8012-269">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-269">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-270">Begins an asynchronous append operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-270">Begins an asynchronous append operation.</span>
          </span>
          <span data-ttu-id="e8012-271">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-271">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-272">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-272">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-273">Debería pasar el <xref:System.IAsyncResult> devuelto por este método al método <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> para asegurarse de que la operación de anexado ha finalizado y de que se pueden liberar los recursos de manera adecuada.</span><span class="sxs-lookup"><span data-stu-id="e8012-273">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="e8012-274">Si se ha producido un error durante el anexado asincrónico, no se produce una excepción hasta que se llame al método <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> con el <xref:System.IAsyncResult> que devuelve este método.</span><span class="sxs-lookup"><span data-stu-id="e8012-274">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="e8012-275">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-275">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e8012-276">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-276">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e8012-277">Normalmente, este método se completa antes de que se haya escrito el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-277">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="e8012-278">Para asegurarse de que se ha escrito un registro, especifique la marca <xref:System.IO.Log.RecordAppendOptions.ForceFlush> utilizando el parámetro `recordAppendOptions` o llame al método <xref:System.IO.Log.FileRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-278">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8012-279">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-279">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8012-280">One or more of the arguments are out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-280">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8012-281">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-281">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-282">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-282">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-283">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-283">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-284">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-284">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="e8012-285">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-285">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="e8012-286">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-286">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="e8012-287">The sequence number of the next record in the user-specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-287">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="e8012-288">The sequence number of the next record in Previous order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-288">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="e8012-289">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-289">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="e8012-290">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-290">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="e8012-291">An optional asynchronous callback, to be called when the append is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-291">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="e8012-292">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-292">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-293">Begins an asynchronous append operation using space previously reserved in the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-293">Begins an asynchronous append operation using space previously reserved in the sequence.</span>
          </span>
          <span data-ttu-id="e8012-294">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-294">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-295">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-295">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-296">Debería pasar el <xref:System.IAsyncResult> devuelto por este método al método <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> para asegurarse de que la operación de anexado ha finalizado y de que se pueden liberar los recursos de manera adecuada.</span><span class="sxs-lookup"><span data-stu-id="e8012-296">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="e8012-297">Si se ha producido un error durante el anexado asincrónico, no se produce una excepción hasta que se llame al método <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> con el <xref:System.IAsyncResult> que devuelve este método.</span><span class="sxs-lookup"><span data-stu-id="e8012-297">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="e8012-298">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-298">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e8012-299">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-299">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e8012-300">El registro anexado utilizará el espacio que se ha reservado previamente, utilizando una reserva especificada por el parámetro `reservations`.</span><span class="sxs-lookup"><span data-stu-id="e8012-300">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="e8012-301">Si el anexado tiene éxito, utilizará el área de reserva menor posible que pueda contener los datos y esa área de reserva se quitará de la colección.</span><span class="sxs-lookup"><span data-stu-id="e8012-301">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="e8012-302">Normalmente, este método se completa antes de que se haya escrito el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-302">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="e8012-303">Para asegurarse de que se ha escrito un registro, especifique la marca <xref:System.IO.Log.RecordAppendOptions.ForceFlush> utilizando el parámetro `recordAppendOptions` o llame al método <xref:System.IO.Log.FileRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-303">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8012-304">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-304">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8012-305">One or more of the arguments are out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-305">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8012-306">
            <paramref name="reservations" /> was not created by this record sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-306">
              <paramref name="reservations" /> was not created by this record sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8012-307">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-307">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-308">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-308">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-309">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-309">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-310">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-310">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="e8012-311">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-311">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="e8012-312">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-312">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="e8012-313">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-313">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="e8012-314">The sequence number of the next record in the user-specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-314">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="e8012-315">The sequence number of the next record in Previous order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-315">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="e8012-316">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-316">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="e8012-317">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-317">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="e8012-318">An optional asynchronous callback, to be called when the append is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-318">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="e8012-319">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-319">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-320">Begins an asynchronous append operation using space previously reserved in the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-320">Begins an asynchronous append operation using space previously reserved in the sequence.</span>
          </span>
          <span data-ttu-id="e8012-321">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-321">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-322">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-322">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-323">Debería pasar el <xref:System.IAsyncResult> devuelto por este método al método <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> para asegurarse de que la operación de anexado ha finalizado y de que se pueden liberar los recursos de manera adecuada.</span><span class="sxs-lookup"><span data-stu-id="e8012-323">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="e8012-324">Si se ha producido un error durante el anexado asincrónico, no se produce una excepción hasta que se llame al método <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> con el <xref:System.IAsyncResult> que devuelve este método.</span><span class="sxs-lookup"><span data-stu-id="e8012-324">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="e8012-325">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-325">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e8012-326">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-326">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e8012-327">El registro anexado utilizará el espacio que se ha reservado previamente, utilizando una reserva especificada por el parámetro `reservations`.</span><span class="sxs-lookup"><span data-stu-id="e8012-327">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="e8012-328">Si el anexado tiene éxito, utilizará el área de reserva menor posible que pueda contener los datos y esa área de reserva se quitará de la colección.</span><span class="sxs-lookup"><span data-stu-id="e8012-328">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="e8012-329">Normalmente, este método se completa antes de que se haya escrito el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-329">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="e8012-330">Para asegurarse de que se ha escrito un registro, especifique la marca <xref:System.IO.Log.RecordAppendOptions.ForceFlush> utilizando el parámetro `recordAppendOptions` o llame al método <xref:System.IO.Log.FileRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-330">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8012-331">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-331">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8012-332">One or more of the arguments are out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-332">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8012-333">
            <paramref name="reservations" /> was not created by this record sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-333">
              <paramref name="reservations" /> was not created by this record sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8012-334">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-334">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-335">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-335">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-336">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-336">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-337">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-337">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="e8012-338">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-338">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="e8012-339">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-339">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginFlush">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginFlush (System.IO.Log.SequenceNumber sequenceNumber, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginFlush(valuetype System.IO.Log.SequenceNumber sequenceNumber, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginFlush(System::IO::Log::SequenceNumber sequenceNumber, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginFlush : System.IO.Log.SequenceNumber * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginFlush : System.IO.Log.SequenceNumber * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginFlush (sequenceNumber, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber">
          <span data-ttu-id="e8012-340">The sequence number of the latest record that must be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-340">The sequence number of the latest record that must be written.</span>
          </span>
          <span data-ttu-id="e8012-341">If <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-341">If <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="e8012-342">An optional asynchronous callback, to be called when the flush is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-342">An optional asynchronous callback, to be called when the flush is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="e8012-343">A user-provided object that distinguishes this particular asynchronous flush request from other requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-343">A user-provided object that distinguishes this particular asynchronous flush request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-344">Begins an asynchronous flush operation, using space previously reserved in the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-344">Begins an asynchronous flush operation, using space previously reserved in the sequence.</span>
          </span>
          <span data-ttu-id="e8012-345">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-345">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-346">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous flush operation, which could still be pending.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-346">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous flush operation, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-347">Debería pasar <xref:System.IAsyncResult>devuelto por este método al método <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> para asegurarse que la operación de vaciado ha finalizado y que se pueden liberar los recursos apropiadamente.</span><span class="sxs-lookup"><span data-stu-id="e8012-347">You should pass the <xref:System.IAsyncResult> returned by the current method to the <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> method to ensure that the flush completes and resources are freed appropriately.</span></span> <span data-ttu-id="e8012-348">Si se produce un error durante el vaciado asincrónico, no se producirá una excepción hasta que se llame al método <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> con el <xref:System.IAsyncResult> devuelto por este método.</span><span class="sxs-lookup"><span data-stu-id="e8012-348">If an error occurs during an asynchronous flush, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="e8012-349">Llamar a este método asegura que todos los registros anexados a <xref:System.IO.Log.FileRecordSequence> se escriben de manera duradera.</span><span class="sxs-lookup"><span data-stu-id="e8012-349">Calling this method ensures that all records that have been appended to the <xref:System.IO.Log.FileRecordSequence> are durably written.</span></span>  
  
 <span data-ttu-id="e8012-350">Si una secuencia del registro se ha eliminado, o si se pasa un argumento no válido, las excepciones se producen inmediatamente en esta operación.</span><span class="sxs-lookup"><span data-stu-id="e8012-350">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="e8012-351">Los errores que se produjeron durante una solicitud de vaciado asincrónica, por ejemplo, un error de disco durante la petición de E/S, producirá excepciones que se inician cuando se llama al método <xref:System.IO.Log.FileRecordSequence.EndFlush%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-351">Errors that occurred during an asynchronous flush request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8012-352">One or more of the arguments is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-352">One or more of the arguments is invalid.</span>
          </span>
          <span data-ttu-id="e8012-353">
            <paramref name="sequenceNumber" /> is not valid for this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-353">
              <paramref name="sequenceNumber" /> is not valid for this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8012-354">
            <paramref name="sequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-354">
              <paramref name="sequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-355">An I/O error occurred while flushing the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-355">An I/O error occurred while flushing the data.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-356">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-356">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-357">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-357">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginReserveAndAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e8012-358">Begins an asynchronous reserve and append operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-358">Begins an asynchronous reserve and append operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginReserveAndAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReserveAndAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReserveAndAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginReserveAndAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, cli::array &lt;long&gt; ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="e8012-359">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-359">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="e8012-360">The sequence number of the next record in the user-specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-360">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="e8012-361">The sequence number of the next record in Previous order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-361">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="e8012-362">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-362">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservationCollection">
          <span data-ttu-id="e8012-363">The reservation collection to make reservations in.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-363">The reservation collection to make reservations in.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="e8012-364">The reservations to make, in bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-364">The reservations to make, in bytes.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="e8012-365">An optional asynchronous callback, to be called when the append is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-365">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="e8012-366">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-366">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-367">Begins an asynchronous reserve and append operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-367">Begins an asynchronous reserve and append operation.</span>
          </span>
          <span data-ttu-id="e8012-368">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-368">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-369">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-369">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-370">Debería pasar el <xref:System.IAsyncResult> devuelto por este método al método <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> para asegurarse de que la operación de anexado ha finalizado y de que se pueden liberar los recursos de manera adecuada.</span><span class="sxs-lookup"><span data-stu-id="e8012-370">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="e8012-371">Si se ha producido un error durante el anexado asincrónico, no se produce una excepción hasta que se llame al método <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> con el <xref:System.IAsyncResult> que devuelve este método.</span><span class="sxs-lookup"><span data-stu-id="e8012-371">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="e8012-372">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-372">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e8012-373">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-373">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e8012-374">Las reservas especificadas se agregan a la colección de reservas proporcionada en una operación atómica con una operación de anexado de registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-374">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="e8012-375">Si no se produce el anexado, no se reserva ningún espacio.</span><span class="sxs-lookup"><span data-stu-id="e8012-375">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="e8012-376">Normalmente, este método puede completarse antes de que se haya escrito el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-376">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="e8012-377">Para asegurarse de que se ha escrito un registro, especifique la marca <xref:System.IO.Log.RecordAppendOptions.ForceFlush> utilizando el parámetro `recordAppendOptions` o llame al método <xref:System.IO.Log.FileRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-377">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 <span data-ttu-id="e8012-378">Si una secuencia del registro se ha eliminado, o si se pasa un argumento no válido, las excepciones se producen inmediatamente en esta operación.</span><span class="sxs-lookup"><span data-stu-id="e8012-378">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="e8012-379">Los errores que se produjeron durante una solicitud de anexado asincrónica, como, por ejemplo, un error de disco durante la petición de E/S, producirá excepciones que se producen cuando se llama al método <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-379">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8012-380">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-380">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8012-381">One or more of the arguments are out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-381">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8012-382">
            <paramref name="reservations" /> was not created by this record sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-382">
              <paramref name="reservations" /> was not created by this record sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8012-383">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-383">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-384">The request could not be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-384">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-385">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-385">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-386">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-386">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="e8012-387">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-387">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="e8012-388">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-388">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReserveAndAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReserveAndAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReserveAndAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginReserveAndAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, cli::array &lt;long&gt; ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="e8012-389">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-389">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="e8012-390">The sequence number of the next record in the user-specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-390">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="e8012-391">The sequence number of the next record in Previous order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-391">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="e8012-392">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-392">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservationCollection">
          <span data-ttu-id="e8012-393">The reservation collection to make reservations in.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-393">The reservation collection to make reservations in.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="e8012-394">The reservations to make, in bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-394">The reservations to make, in bytes.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="e8012-395">An optional asynchronous callback, to be called when the append is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-395">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="e8012-396">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-396">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-397">Begins an asynchronous reserve and append operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-397">Begins an asynchronous reserve and append operation.</span>
          </span>
          <span data-ttu-id="e8012-398">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-398">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-399">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-399">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-400">Debería pasar el <xref:System.IAsyncResult> devuelto por este método al método <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> para asegurarse de que la operación de anexado ha finalizado y de que se pueden liberar los recursos de manera adecuada.</span><span class="sxs-lookup"><span data-stu-id="e8012-400">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="e8012-401">Si se ha producido un error durante el anexado asincrónico, no se produce una excepción hasta que se llame al método <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> con el <xref:System.IAsyncResult> que devuelve este método.</span><span class="sxs-lookup"><span data-stu-id="e8012-401">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="e8012-402">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-402">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e8012-403">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-403">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e8012-404">Las reservas especificadas se agregan a la colección de reservas proporcionada en una operación atómica con una operación de anexado de registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-404">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="e8012-405">Si no se produce el anexado, no se reserva ningún espacio.</span><span class="sxs-lookup"><span data-stu-id="e8012-405">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="e8012-406">Normalmente, este método puede completarse antes de que se haya escrito el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-406">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="e8012-407">Para asegurarse de que se ha escrito un registro, especifique la marca <xref:System.IO.Log.RecordAppendOptions.ForceFlush> utilizando el parámetro `recordAppendOptions` o llame al método <xref:System.IO.Log.FileRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-407">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 <span data-ttu-id="e8012-408">Si una secuencia del registro se ha eliminado, o si se pasa un argumento no válido, las excepciones se producen inmediatamente en esta operación.</span><span class="sxs-lookup"><span data-stu-id="e8012-408">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="e8012-409">Los errores que se produjeron durante una solicitud de anexado asincrónica, como, por ejemplo, un error de disco durante la petición de E/S, producirá excepciones que se producen cuando se llama al método <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-409">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8012-410">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-410">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8012-411">One or more of the arguments are out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-411">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8012-412">
            <paramref name="reservations" /> was not created by this record sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-412">
              <paramref name="reservations" /> was not created by this record sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8012-413">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-413">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-414">The request could not be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-414">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-415">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-415">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-416">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-416">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="e8012-417">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-417">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="e8012-418">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-418">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginWriteRestartArea">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e8012-419">Begins an asynchronous restart area write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-419">Begins an asynchronous restart area write operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginWriteRestartArea">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWriteRestartArea (data As ArraySegment(Of Byte), newBaseSeqNum As SequenceNumber, reservation As ReservationCollection, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginWriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginWriteRestartArea (data, newBaseSeqNum, reservation, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="e8012-420">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-420">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSeqNum">
          <span data-ttu-id="e8012-421">The new base sequence number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-421">The new base sequence number.</span>
          </span>
          <span data-ttu-id="e8012-422">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-422">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <param name="reservation">
          <span data-ttu-id="e8012-423">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-423">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="e8012-424">An optional asynchronous callback, to be called when the restart area write is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-424">An optional asynchronous callback, to be called when the restart area write is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="e8012-425">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-425">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-426">Begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-426">Begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span>
          </span>
          <span data-ttu-id="e8012-427">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-427">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-428">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-428">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-429">Debería pasar <xref:System.IAsyncResult> devuelto por este método al método <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> para asegurarse de que la operación de escritura de área de reinicio ha finalizado y de que se pueden liberar los recursos apropiadamente.</span><span class="sxs-lookup"><span data-stu-id="e8012-429">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method, to assure that the restart area write operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="e8012-430">Si se produce un error durante la escritura asincrónica, no se producirá una excepción hasta que se llame a <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> con el <xref:System.IAsyncResult> que devuelve este método.</span><span class="sxs-lookup"><span data-stu-id="e8012-430">If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="e8012-431">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-431">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e8012-432">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-432">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e8012-433">Cuando la operación se completa correctamente, el número de secuencia base se actualiza.</span><span class="sxs-lookup"><span data-stu-id="e8012-433">When the operation successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="e8012-434">Todas las entradas de registro con números de secuencia menores que el nuevo número de secuencia base son inaccesibles.</span><span class="sxs-lookup"><span data-stu-id="e8012-434">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="e8012-435">Si se especifica una <xref:System.IO.Log.ReservationCollection>, el área de reinicio escrita utilizará el espacio que se ha reservado previamente, utilizando una reserva contenida en la colección.</span><span class="sxs-lookup"><span data-stu-id="e8012-435">If a <xref:System.IO.Log.ReservationCollection> is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="e8012-436">Si el método tiene éxito, utilizará la reserva de menor tamaño que pueda contener los datos y esa reserva se quitará de la colección.</span><span class="sxs-lookup"><span data-stu-id="e8012-436">If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="e8012-437">Si una secuencia del registro se ha eliminado, o si se pasa un argumento no válido, las excepciones se producen inmediatamente en esta operación.</span><span class="sxs-lookup"><span data-stu-id="e8012-437">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="e8012-438">Los errores que se produjeron durante una solicitud de anexado asincrónica, como, por ejemplo, un error de disco durante la petición de E/S, producirá excepciones que se producen cuando se llama al método <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-438">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8012-439">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-439">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8012-440">
            <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-440">
              <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
          <span data-ttu-id="e8012-441">-or-  A new or existing archive tail or base of the active log is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-441">-or-  A new or existing archive tail or base of the active log is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8012-442">
            <paramref name="reservations" /> was not created by this record sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-442">
              <paramref name="reservations" /> was not created by this record sequence.</span>
          </span>
          <span data-ttu-id="e8012-443">-or-  <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-443">-or-  <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8012-444">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-444">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-445">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-445">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-446">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-446">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-447">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-447">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="e8012-448">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-448">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="e8012-449">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-449">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWriteRestartArea">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSeqNum As SequenceNumber, reservation As ReservationCollection, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginWriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginWriteRestartArea (data, newBaseSeqNum, reservation, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="e8012-450">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-450">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSeqNum">
          <span data-ttu-id="e8012-451">The new base sequence number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-451">The new base sequence number.</span>
          </span>
          <span data-ttu-id="e8012-452">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-452">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <param name="reservation">
          <span data-ttu-id="e8012-453">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-453">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="e8012-454">An optional asynchronous callback, to be called when the restart area write is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-454">An optional asynchronous callback, to be called when the restart area write is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="e8012-455">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-455">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-456">Begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-456">Begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span>
          </span>
          <span data-ttu-id="e8012-457">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-457">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-458">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-458">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-459">Debería pasar <xref:System.IAsyncResult> devuelto por este método al método <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> para asegurarse de que la operación de escritura de área de reinicio ha finalizado y de que se pueden liberar los recursos apropiadamente.</span><span class="sxs-lookup"><span data-stu-id="e8012-459">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method, to assure that the restart area write operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="e8012-460">Si se produce un error durante la escritura asincrónica, no se producirá una excepción hasta que se llame a <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> con el <xref:System.IAsyncResult> que devuelve este método.</span><span class="sxs-lookup"><span data-stu-id="e8012-460">If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="e8012-461">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-461">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e8012-462">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-462">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e8012-463">Cuando la operación se completa correctamente, el número de secuencia base se actualiza.</span><span class="sxs-lookup"><span data-stu-id="e8012-463">When the operation successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="e8012-464">Todas las entradas de registro con números de secuencia menores que el nuevo número de secuencia base son inaccesibles.</span><span class="sxs-lookup"><span data-stu-id="e8012-464">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="e8012-465">Si se especifica una <xref:System.IO.Log.ReservationCollection>, el área de reinicio escrita utilizará el espacio que se ha reservado previamente, utilizando una reserva contenida en la colección.</span><span class="sxs-lookup"><span data-stu-id="e8012-465">If a <xref:System.IO.Log.ReservationCollection> is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="e8012-466">Si el método tiene éxito, utilizará la reserva de menor tamaño que pueda contener los datos y esa reserva se quitará de la colección.</span><span class="sxs-lookup"><span data-stu-id="e8012-466">If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="e8012-467">Si una secuencia del registro se ha eliminado, o si se pasa un argumento no válido, las excepciones se producen inmediatamente en esta operación.</span><span class="sxs-lookup"><span data-stu-id="e8012-467">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="e8012-468">Los errores que se produjeron durante una solicitud de anexado asincrónica, como, por ejemplo, un error de disco durante la petición de E/S, producirá excepciones que se producen cuando se llama al método <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-468">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8012-469">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-469">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8012-470">
            <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-470">
              <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
          <span data-ttu-id="e8012-471">-or-  A new or existing archive tail or base of the active log is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-471">-or-  A new or existing archive tail or base of the active log is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8012-472">
            <paramref name="reservations" /> was not created by this record sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-472">
              <paramref name="reservations" /> was not created by this record sequence.</span>
          </span>
          <span data-ttu-id="e8012-473">-or-  <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-473">-or-  <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8012-474">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-474">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-475">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-475">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-476">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-476">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-477">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-477">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="e8012-478">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-478">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="e8012-479">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-479">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateReservationCollection">
      <MemberSignature Language="C#" Value="public System.IO.Log.ReservationCollection CreateReservationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Log.ReservationCollection CreateReservationCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.CreateReservationCollection" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateReservationCollection () As ReservationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::ReservationCollection ^ CreateReservationCollection();" />
      <MemberSignature Language="F#" Value="abstract member CreateReservationCollection : unit -&gt; System.IO.Log.ReservationCollection&#xA;override this.CreateReservationCollection : unit -&gt; System.IO.Log.ReservationCollection" Usage="fileRecordSequence.CreateReservationCollection " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.CreateReservationCollection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.ReservationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8012-480">Creates a new <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-480">Creates a new <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          </span>
          <span data-ttu-id="e8012-481">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-481">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-482">The newly created <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-482">The newly created <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-483">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-483">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="fileRecordSequence.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8012-484">Immediately releases the unmanaged resources used by an object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-484">Immediately releases the unmanaged resources used by an object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-485">An I/O error occurred while flushing the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-485">An I/O error occurred while flushing the data.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-486">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-486">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-487">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-487">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndAppend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndAppend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.EndAppend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAppend (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndAppend(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber&#xA;override this.EndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.EndAppend result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndAppend(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="e8012-488">A reference to the outstanding asynchronous I/O request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-488">A reference to the outstanding asynchronous I/O request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-489">Ends an asynchronous append operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-489">Ends an asynchronous append operation.</span>
          </span>
          <span data-ttu-id="e8012-490">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-490">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-491">The sequence number of the appended log record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-491">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-492">Este método se bloquea hasta que se haya completado la operación de E/S.</span><span class="sxs-lookup"><span data-stu-id="e8012-492">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="e8012-493">Errores que producen durante una solicitud de lectura asincrónica, como un error de disco durante la petición de E/S, se vuelve visible cuando se llama <xref:System.IO.Log.FileRecordSequence.EndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-493">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> is called.</span></span>  
  
 <span data-ttu-id="e8012-494">Se debe llamar a este método exactamente una vez en <xref:System.IAsyncResult> devuelto por el método <xref:System.IO.Log.FileRecordSequence.BeginAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-494">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.FileRecordSequence.BeginAppend%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8012-495">
            <paramref name="result" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-495">
              <paramref name="result" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e8012-496">
            <see langword="End" /> has already been called for this asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-496">
              <see langword="End" /> has already been called for this asynchronous operation.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-497">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-497">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-498">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-498">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-499">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-499">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndFlush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndFlush (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndFlush(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.EndFlush(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndFlush (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndFlush(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndFlush : IAsyncResult -&gt; System.IO.Log.SequenceNumber&#xA;override this.EndFlush : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.EndFlush result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndFlush(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="e8012-500">A reference to the outstanding asynchronous I/O request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-500">A reference to the outstanding asynchronous I/O request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-501">Ends an asynchronous flush operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-501">Ends an asynchronous flush operation.</span>
          </span>
          <span data-ttu-id="e8012-502">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-502">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-503">The sequence number of the last record written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-503">The sequence number of the last record written.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-504">Este método se bloquea hasta que se haya completado la operación de E/S.</span><span class="sxs-lookup"><span data-stu-id="e8012-504">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="e8012-505">Errores que se producen durante una solicitud de vaciado asincrónica, como un error de disco durante la petición de E/S, se vuelve visible cuando se llama <xref:System.IO.Log.FileRecordSequence.EndFlush%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-505">Errors that occur during an asynchronous flush request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> is called.</span></span>  
  
 <span data-ttu-id="e8012-506">Se debe llamar a este método exactamente una vez en <xref:System.IAsyncResult> devuelto por el método <xref:System.IO.Log.FileRecordSequence.BeginFlush%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-506">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.FileRecordSequence.BeginFlush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8012-507">
            <paramref name="result" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-507">
              <paramref name="result" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e8012-508">
            <see langword="End" /> has already been called for this asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-508">
              <see langword="End" /> has already been called for this asynchronous operation.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-509">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-509">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-510">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-510">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-511">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-511">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndReserveAndAppend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndReserveAndAppend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.EndReserveAndAppend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReserveAndAppend (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndReserveAndAppend(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndReserveAndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber&#xA;override this.EndReserveAndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.EndReserveAndAppend result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndReserveAndAppend(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="e8012-512">A reference to the outstanding asynchronous I/O request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-512">A reference to the outstanding asynchronous I/O request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-513">Ends an asynchronous reserve and append operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-513">Ends an asynchronous reserve and append operation.</span>
          </span>
          <span data-ttu-id="e8012-514">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-514">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-515">The sequence number of the appended log record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-515">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-516">Este método se bloquea hasta que se haya completado la operación de E/S.</span><span class="sxs-lookup"><span data-stu-id="e8012-516">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="e8012-517">Errores que producen durante una solicitud de lectura asincrónica, como un error de disco durante la petición de E/S, se vuelve visible cuando se llama <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-517">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> is called.</span></span>  
  
 <span data-ttu-id="e8012-518">Se debe llamar a este método exactamente una vez en <xref:System.IAsyncResult> devuelto por el método <xref:System.IO.Log.FileRecordSequence.BeginReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-518">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.FileRecordSequence.BeginReserveAndAppend%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8012-519">
            <paramref name="result" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-519">
              <paramref name="result" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e8012-520">
            <see langword="End" /> has already been called for this asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-520">
              <see langword="End" /> has already been called for this asynchronous operation.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-521">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-521">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-522">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-522">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-523">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-523">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndWriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndWriteRestartArea (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndWriteRestartArea(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.EndWriteRestartArea(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWriteRestartArea (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndWriteRestartArea(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndWriteRestartArea : IAsyncResult -&gt; System.IO.Log.SequenceNumber&#xA;override this.EndWriteRestartArea : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.EndWriteRestartArea result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndWriteRestartArea(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="e8012-524">A reference to the outstanding asynchronous I/O request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-524">A reference to the outstanding asynchronous I/O request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-525">Ends an asynchronous restart area write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-525">Ends an asynchronous restart area write operation.</span>
          </span>
          <span data-ttu-id="e8012-526">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-526">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-527">The sequence number of the written log record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-527">The sequence number of the written log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-528">Este método se bloquea hasta que se haya completado la operación de E/S.</span><span class="sxs-lookup"><span data-stu-id="e8012-528">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="e8012-529">Errores que producen durante una solicitud de lectura asincrónica, como un error de disco durante la petición de E/S, se vuelve visible cuando se llama <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-529">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> is called.</span></span>  
  
 <span data-ttu-id="e8012-530">Se debe llamar a este método exactamente una vez en <xref:System.IAsyncResult> devuelto por el método <xref:System.IO.Log.FileRecordSequence.BeginWriteRestartArea%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-530">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.FileRecordSequence.BeginWriteRestartArea%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8012-531">
            <paramref name="result" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-531">
              <paramref name="result" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e8012-532">
            <see langword="End" /> has already been called for this asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-532">
              <see langword="End" /> has already been called for this asynchronous operation.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-533">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-533">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-534">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-534">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-535">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-535">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flush">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e8012-536">Causes appended records to be durably written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-536">Causes appended records to be durably written.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Function Flush () As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; System.IO.Log.SequenceNumber&#xA;override this.Flush : unit -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.Flush " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Flush</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8012-537">Ensures that all appended records have been written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-537">Ensures that all appended records have been written.</span>
          </span>
          <span data-ttu-id="e8012-538">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-538">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-539">The sequence number of the last record written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-539">The sequence number of the last record written.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-540">Llamar a este método asegura que todos los registros anexados a <xref:System.IO.Log.FileRecordSequence> se han escrito de manera duradera.</span><span class="sxs-lookup"><span data-stu-id="e8012-540">Calling this method ensures that all records that have been appended to the <xref:System.IO.Log.FileRecordSequence> have been durably written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-541">An I/O error occurred while flushing the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-541">An I/O error occurred while flushing the data.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-542">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-542">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-543">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-543">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Flush (System.IO.Log.SequenceNumber sequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Flush(valuetype System.IO.Log.SequenceNumber sequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Flush(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Flush(System::IO::Log::SequenceNumber sequenceNumber);" />
      <MemberSignature Language="F#" Value="abstract member Flush : System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber&#xA;override this.Flush : System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.Flush sequenceNumber" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Flush(System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber">
          <span data-ttu-id="e8012-544">The sequence number of the latest record that must be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-544">The sequence number of the latest record that must be written.</span>
          </span>
          <span data-ttu-id="e8012-545">If this <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-545">If this <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-546">Ensures that all appended records have been written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-546">Ensures that all appended records have been written.</span>
          </span>
          <span data-ttu-id="e8012-547">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-547">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-548">The sequence number of the last record written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-548">The sequence number of the last record written.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-549">Llamar a este método garantiza que todos los registros con números de secuencia hasta el especificado, incluido éste, se han escrito de manera duradera.</span><span class="sxs-lookup"><span data-stu-id="e8012-549">Calling this method ensures that all records with sequence numbers up to and including the specified sequence number have been durably written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8012-550">
            <paramref name="sequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-550">
              <paramref name="sequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8012-551">
            <paramref name="sequenceNumber" /> is not valid for this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-551">
              <paramref name="sequenceNumber" /> is not valid for this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-552">An I/O error occurred while flushing the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-552">An I/O error occurred while flushing the data.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-553">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-553">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-554">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-554">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LastSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber LastSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber LastSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.LastSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber LastSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.LastSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.FileRecordSequence.LastSequenceNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.LastSequenceNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8012-555">Gets the sequence number which is greater than the last record appended.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-555">Gets the sequence number which is greater than the last record appended.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8012-556">Un número de secuencia que es mayor que el último registro anexado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-556">A sequence number which is greater than the last record appended.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-557">Esta propiedad contiene un número de secuencia con la garantía de ser mayor que el número de secuencia del último registro anexado.</span><span class="sxs-lookup"><span data-stu-id="e8012-557">This property contains a sequence number that is guaranteed to be larger than the sequence number of the last appended record.</span></span> <span data-ttu-id="e8012-558">Los números de secuencia válidos son mayores que o iguales a <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A> y menores que <xref:System.IO.Log.FileRecordSequence.LastSequenceNumber%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-558">Valid sequence numbers are greater than or equal to <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.FileRecordSequence.LastSequenceNumber%2A>.</span></span> <span data-ttu-id="e8012-559">El resto de números de secuencia no son válidos.</span><span class="sxs-lookup"><span data-stu-id="e8012-559">All other sequence numbers are invalid.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-560">The property was accessed after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-560">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumRecordLength">
      <MemberSignature Language="C#" Value="public long MaximumRecordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumRecordLength" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.MaximumRecordLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaximumRecordLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumRecordLength { long get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRecordLength : int64" Usage="System.IO.Log.FileRecordSequence.MaximumRecordLength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.MaximumRecordLength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8012-561">Gets the size of the largest record that can be appended to or read from this sequence, in bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-561">Gets the size of the largest record that can be appended to or read from this sequence, in bytes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8012-562">El tamaño del registro más grande que se puede anexar a o que puede leerse de esta secuencia, en bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-562">The size of the largest record that can be appended to or read from this sequence, in bytes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-563">The property was accessed after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-563">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLogRecords">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt; ReadLogRecords (System.IO.Log.SequenceNumber start, System.IO.Log.LogRecordEnumeratorType logRecordEnum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Log.LogRecord&gt; ReadLogRecords(valuetype System.IO.Log.SequenceNumber start, valuetype System.IO.Log.LogRecordEnumeratorType logRecordEnum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadLogRecords (start As SequenceNumber, logRecordEnum As LogRecordEnumeratorType) As IEnumerable(Of LogRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::IO::Log::LogRecord ^&gt; ^ ReadLogRecords(System::IO::Log::SequenceNumber start, System::IO::Log::LogRecordEnumeratorType logRecordEnum);" />
      <MemberSignature Language="F#" Value="abstract member ReadLogRecords : System.IO.Log.SequenceNumber * System.IO.Log.LogRecordEnumeratorType -&gt; seq&lt;System.IO.Log.LogRecord&gt;&#xA;override this.ReadLogRecords : System.IO.Log.SequenceNumber * System.IO.Log.LogRecordEnumeratorType -&gt; seq&lt;System.IO.Log.LogRecord&gt;" Usage="fileRecordSequence.ReadLogRecords (start, logRecordEnum)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="logRecordEnum" Type="System.IO.Log.LogRecordEnumeratorType" />
      </Parameters>
      <Docs>
        <param name="start">
          <span data-ttu-id="e8012-564">The sequence number of the first record where the reading starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-564">The sequence number of the first record where the reading starts.</span>
          </span>
        </param>
        <param name="logRecordEnum">
          <span data-ttu-id="e8012-565">A valid <see cref="T:System.IO.Log.LogRecordEnumeratorType" /> value that specifies the manner (that is, forward or backward) in which records should be read from a <see cref="T:System.IO.Log.LogRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-565">A valid <see cref="T:System.IO.Log.LogRecordEnumeratorType" /> value that specifies the manner (that is, forward or backward) in which records should be read from a <see cref="T:System.IO.Log.LogRecordSequence" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-566">Returns an enumerable collection of records in the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-566">Returns an enumerable collection of records in the sequence.</span>
          </span>
          <span data-ttu-id="e8012-567">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-567">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-568">An enumerable collection of records in the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-568">An enumerable collection of records in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-569">Este método devuelve una colección enumerable de registros en la secuencia.</span><span class="sxs-lookup"><span data-stu-id="e8012-569">This method returns an enumerable collection of records in the sequence.</span></span> <span data-ttu-id="e8012-570">El orden de los registros enumerados depende del valor del parámetro `logRecordEnum`.</span><span class="sxs-lookup"><span data-stu-id="e8012-570">The order of the enumerated records depends on the value of the `logRecordEnum` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8012-571">El ejemplo siguiente muestra cómo se puede utilizar este método para leer los registros en una secuencia del registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-571">The following example shows how you can use this method to read the records in a log sequence.</span></span>  
  
 [!code-csharp[IRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#2)]
 [!code-vb[IRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8012-572">One or more of the arguments are out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-572">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8012-573">The operation cannot be performed because the record sequence was opened with write-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-573">The operation cannot be performed because the record sequence was opened with write-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-574">The record sequence is corrupted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-574">The record sequence is corrupted.</span>
          </span>
          <span data-ttu-id="e8012-575">-or-  The record was written with an incompatible version of the record sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-575">-or-  The record was written with an incompatible version of the record sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e8012-576">The enumeration has ended.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-576">The enumeration has ended.</span>
          </span>
          <span data-ttu-id="e8012-577">-or-  The enumeration has not been started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-577">-or-  The enumeration has not been started.</span>
          </span>
          <span data-ttu-id="e8012-578">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-578">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-579">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-579">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-580">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-580">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadRestartAreas">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt; ReadRestartAreas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Log.LogRecord&gt; ReadRestartAreas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.ReadRestartAreas" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadRestartAreas () As IEnumerable(Of LogRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::IO::Log::LogRecord ^&gt; ^ ReadRestartAreas();" />
      <MemberSignature Language="F#" Value="abstract member ReadRestartAreas : unit -&gt; seq&lt;System.IO.Log.LogRecord&gt;&#xA;override this.ReadRestartAreas : unit -&gt; seq&lt;System.IO.Log.LogRecord&gt;" Usage="fileRecordSequence.ReadRestartAreas " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReadRestartAreas</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8012-581">Returns an enumerable collection of the restart areas in the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-581">Returns an enumerable collection of the restart areas in the sequence.</span>
          </span>
          <span data-ttu-id="e8012-582">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-582">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-583">An enumerable collection of the restart areas in the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-583">An enumerable collection of the restart areas in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-584">Las áreas de reinicio se enumeran en orden inverso del número de secuencia, es decir, del número de secuencia superior al número de secuencia más bajo.</span><span class="sxs-lookup"><span data-stu-id="e8012-584">The restart areas are enumerated in reverse sequence number order, that is, from the highest sequence number to the lowest sequence number.</span></span> <span data-ttu-id="e8012-585">Sólo se enumeran las áreas de reinicio con números de secuencia entre el último número de secuencia y el número de secuencia base.</span><span class="sxs-lookup"><span data-stu-id="e8012-585">Only restart areas with sequence numbers between the last sequence number and the base sequence number are enumerated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8012-586">The operation cannot be performed because the record sequence was opened with write-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-586">The operation cannot be performed because the record sequence was opened with write-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-587">The record sequence is corrupted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-587">The record sequence is corrupted.</span>
          </span>
          <span data-ttu-id="e8012-588">-or-  The record was written with an incompatible version of the record sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-588">-or-  The record was written with an incompatible version of the record sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e8012-589">The enumeration has ended.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-589">The enumeration has ended.</span>
          </span>
          <span data-ttu-id="e8012-590">-or-  The enumeration has not been started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-590">-or-  The enumeration has not been started.</span>
          </span>
          <span data-ttu-id="e8012-591">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-591">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-592">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-592">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-593">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-593">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReserveAndAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e8012-594">Automatically makes a single reservation and appends a record to the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-594">Automatically makes a single reservation and appends a record to the sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber ReserveAndAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, params long[] reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber ReserveAndAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber ReserveAndAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, ... cli::array &lt;long&gt; ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member ReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber&#xA;override this.ReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.ReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="e8012-595">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-595">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="e8012-596">The sequence number of the next record in the user-specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-596">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="e8012-597">The sequence number of the next record in Previous order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-597">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="e8012-598">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-598">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservationCollection">
          <span data-ttu-id="e8012-599">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the collection to make reservations in.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-599">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the collection to make reservations in.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="e8012-600">The reservations to make, in bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-600">The reservations to make, in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-601">Automatically makes a single reservation and appends a record to the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-601">Automatically makes a single reservation and appends a record to the sequence.</span>
          </span>
          <span data-ttu-id="e8012-602">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-602">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-603">The sequence number of the appended log record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-603">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-604">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-604">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e8012-605">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-605">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e8012-606">Las reservas especificadas se agregan a la colección de reservas proporcionada en una operación atómica con una operación de anexado de registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-606">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="e8012-607">Si no se produce el anexado, no se reserva ningún espacio.</span><span class="sxs-lookup"><span data-stu-id="e8012-607">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="e8012-608">Normalmente, este método puede completarse antes de que se haya escrito el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-608">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="e8012-609">Para asegurarse de que se ha escrito un registro, especifique la marca <xref:System.IO.Log.RecordAppendOptions.ForceFlush> utilizando el parámetro `recordAppendOptions` o llame al método <xref:System.IO.Log.FileRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-609">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8012-610">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-610">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8012-611">One or more of the arguments are out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-611">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8012-612">
            <paramref name="reservations" /> was not created by this record sequence..</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-612">
              <paramref name="reservations" /> was not created by this record sequence..</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8012-613">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-613">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-614">The request could not be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-614">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-615">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-615">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-616">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-616">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="e8012-617">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-617">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber ReserveAndAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, params long[] reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber ReserveAndAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber ReserveAndAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, ... cli::array &lt;long&gt; ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member ReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber&#xA;override this.ReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.ReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="e8012-618">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-618">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="e8012-619">The sequence number of the next record in the user-specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-619">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="e8012-620">The sequence number of the next record in Previous order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-620">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="e8012-621">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-621">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservationCollection">
          <span data-ttu-id="e8012-622">The reservation collection to make reservations in.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-622">The reservation collection to make reservations in.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="e8012-623">The reservations to make, in bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-623">The reservations to make, in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-624">Automatically makes a single reservation and appends a record to the sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-624">Automatically makes a single reservation and appends a record to the sequence.</span>
          </span>
          <span data-ttu-id="e8012-625">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-625">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-626">The sequence number of the appended log record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-626">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-627">Los datos contenidos en el parámetro `data` se concatenarán en una matriz de bytes única para anexarlos como el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-627">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e8012-628">Sin embargo, no se ha realizado ninguna disposición para dividir los datode nuevo en los segmentos de la matriz cuando se lee el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-628">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e8012-629">Las reservas especificadas se agregan a la colección de reservas proporcionada en una operación atómica con una operación de anexado de registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-629">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="e8012-630">Si no se produce el anexado, no se reserva ningún espacio.</span><span class="sxs-lookup"><span data-stu-id="e8012-630">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="e8012-631">Normalmente, este método puede completarse antes de que se haya escrito el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-631">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="e8012-632">Para asegurarse de que se ha escrito un registro, especifique la marca <xref:System.IO.Log.RecordAppendOptions.ForceFlush> utilizando el parámetro `recordAppendOptions` o llame al método <xref:System.IO.Log.FileRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-632">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8012-633">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-633">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8012-634">One or more of the arguments are out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-634">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8012-635">
            <paramref name="reservations" /> was not created by this record sequence..</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-635">
              <paramref name="reservations" /> was not created by this record sequence..</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8012-636">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-636">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-637">The request could not be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-637">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-638">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-638">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-639">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-639">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="e8012-640">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-640">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReservedBytes">
      <MemberSignature Language="C#" Value="public long ReservedBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReservedBytes" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.ReservedBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReservedBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ReservedBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ReservedBytes : int64" Usage="System.IO.Log.FileRecordSequence.ReservedBytes" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.ReservedBytes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8012-641">Gets the total number of bytes that have been reserved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-641">Gets the total number of bytes that have been reserved.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8012-642">El tamaño total de todas las reservas realizadas en esta secuencia del registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-642">The total size of all reservations made in this record sequence.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-643">The property was accessed after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-643">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RestartSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber RestartSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber RestartSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.RestartSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestartSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber RestartSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.RestartSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.FileRecordSequence.RestartSequenceNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.RestartSequenceNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8012-644">Gets the sequence number of the most recently written restart area.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-644">Gets the sequence number of the most recently written restart area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8012-645">El número de secuencia del área de reinicio recientemente escrita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-645">The sequence number of the most recently written restart area.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-646">Un área de reinicio se utiliza para almacenar temporalmente información que contiene la última operación de punto de control de un cliente.</span><span class="sxs-lookup"><span data-stu-id="e8012-646">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="e8012-647">El Sistema de Registro de Archivo Común (CLFS) mantiene dos áreas de reinicio para garantizar por lo menos que un área válida esté siempre disponible.</span><span class="sxs-lookup"><span data-stu-id="e8012-647">The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</span></span> <span data-ttu-id="e8012-648">Cuando una recuperación es necesaria, CLFS lee su área de reinicio y todos los datos de la última operación de punto de control.</span><span class="sxs-lookup"><span data-stu-id="e8012-648">When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</span></span> <span data-ttu-id="e8012-649">Estos datos inicializan la tabla de transacciones, la tabla de páginas desfasadas y la tabla de archivos abiertos para que se puedan utilizar en el proceso de recuperación.</span><span class="sxs-lookup"><span data-stu-id="e8012-649">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-650">The property was accessed after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-650">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RetryAppend">
      <MemberSignature Language="C#" Value="public bool RetryAppend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RetryAppend" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.RetryAppend" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryAppend As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RetryAppend { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RetryAppend : bool with get, set" Usage="System.IO.Log.FileRecordSequence.RetryAppend" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.RetryAppend</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8012-651">Gets or sets a value indicating whether or not appends are automatically retried if the log is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-651">Gets or sets a value indicating whether or not appends are automatically retried if the log is full.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8012-652">
            <see langword="true" /> si las operaciones de anexado se reintentan automáticamente cuando el registro esté lleno; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-652">
              <see langword="true" /> if appends are automatically retried if the log is full; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e8012-653">De manera predeterminada, es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-653">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-654">Si el valor de esta propiedad es `true`, y una llamada <xref:System.IO.Log.FileRecordSequence.Append%2A> no puede realizarse porque no hay espacio suficiente en la secuencia, la secuencia de registro intentará liberar espacio y volverá a intentar anexarse.</span><span class="sxs-lookup"><span data-stu-id="e8012-654">If the value of this property is `true`, and an <xref:System.IO.Log.FileRecordSequence.Append%2A> call fails because there is not enough space in the sequence, the record sequence will try to free space and retry the append.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-655">The property was accessed after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-655">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TailPinned">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; TailPinned;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IO.Log.TailPinnedEventArgs&gt; TailPinned" />
      <MemberSignature Language="DocId" Value="E:System.IO.Log.FileRecordSequence.TailPinned" />
      <MemberSignature Language="VB.NET" Value="Public Event TailPinned As EventHandler(Of TailPinnedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler&lt;System::IO::Log::TailPinnedEventArgs ^&gt; ^ TailPinned;" />
      <MemberSignature Language="F#" Value="member this.TailPinned : EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; " Usage="member this.TailPinned : System.EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.IO.Log.IRecordSequence.TailPinned</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8012-656">Occurs when the record sequence determines that the tail must be moved forward.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-656">Occurs when the record sequence determines that the tail must be moved forward.</span>
          </span>
          <span data-ttu-id="e8012-657">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-657">This method cannot be inherited.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-658">Puede desencadenar este evento cuando la secuencia del registro se haya quedado sin espacio.</span><span class="sxs-lookup"><span data-stu-id="e8012-658">You can fire this event when the record sequence has run out of space.</span></span> <span data-ttu-id="e8012-659">Cuando se desencadena este evento, la cola de la secuencia (es decir, el número de secuencia base) avanza para liberar espacio.</span><span class="sxs-lookup"><span data-stu-id="e8012-659">When this event is fired, the tail of the sequence (that is, the base sequence number) is moved forward to free up space.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRestartArea">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e8012-660">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-660">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-661">Un área de reinicio se puede usar para almacenar temporalmente información que contiene la última operación de punto de control de un cliente.</span><span class="sxs-lookup"><span data-stu-id="e8012-661">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="e8012-662">Cuando una recuperación es necesaria, puede leer un área de reinicio y recuperar todos los datos de la última operación de punto de control.</span><span class="sxs-lookup"><span data-stu-id="e8012-662">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="e8012-663">Estos datos inicializan la tabla de transacciones, la tabla de páginas desfasadas y la tabla de archivos abiertos para que se puedan utilizar en el proceso de recuperación.</span><span class="sxs-lookup"><span data-stu-id="e8012-663">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="e8012-664">Un área de reinicio puede leerse mediante el método <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-664">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte)) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : ArraySegment&lt;byte&gt; -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : ArraySegment&lt;byte&gt; -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.WriteRestartArea data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="e8012-665">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-665">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-666">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-666">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
          <span data-ttu-id="e8012-667">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-667">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-668">The sequence number of the written restart area.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-668">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-669">Un área de reinicio se puede usar para almacenar temporalmente información que contiene la última operación de punto de control de un cliente.</span><span class="sxs-lookup"><span data-stu-id="e8012-669">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="e8012-670">Cuando una recuperación es necesaria, puede leer un área de reinicio y recuperar todos los datos de la última operación de punto de control.</span><span class="sxs-lookup"><span data-stu-id="e8012-670">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="e8012-671">Estos datos inicializan la tabla de transacciones, la tabla de páginas desfasadas y la tabla de archivos abiertos para que se puedan utilizar en el proceso de recuperación.</span><span class="sxs-lookup"><span data-stu-id="e8012-671">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="e8012-672">Un área de reinicio puede leerse mediante el método <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-672">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="e8012-673">Los datos contenidos en los segmentos de la matriz de bytes se concatenarán en una matriz de bytes única para anexarse como el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-673">The data in the byte array segments will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e8012-674">No se ha realizado ninguna disposición para dividir los datos de nuevo en segmentos de matriz cuando se lee el área de reinicio.</span><span class="sxs-lookup"><span data-stu-id="e8012-674">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8012-675">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-675">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8012-676">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-676">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-677">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-677">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-678">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-678">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-679">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-679">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="e8012-680">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-680">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte))) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.WriteRestartArea data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="e8012-681">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-681">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-682">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-682">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
          <span data-ttu-id="e8012-683">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-683">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-684">The sequence number of the written restart area.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-684">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-685">Un área de reinicio se puede usar para almacenar temporalmente información que contiene la última operación de punto de control de un cliente.</span><span class="sxs-lookup"><span data-stu-id="e8012-685">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="e8012-686">Cuando una recuperación es necesaria, puede leer un área de reinicio y recuperar todos los datos de la última operación de punto de control.</span><span class="sxs-lookup"><span data-stu-id="e8012-686">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="e8012-687">Estos datos inicializan la tabla de transacciones, la tabla de páginas desfasadas y la tabla de archivos abiertos para que se puedan utilizar en el proceso de recuperación.</span><span class="sxs-lookup"><span data-stu-id="e8012-687">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="e8012-688">Un área de reinicio puede leerse mediante el método <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-688">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="e8012-689">Los datos contenidos en los segmentos de la matriz de bytes se concatenarán en una matriz de bytes única para anexarse como el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-689">The data in the byte array segments will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e8012-690">No se ha realizado ninguna disposición para dividir los datos de nuevo en segmentos de matriz cuando se lee el área de reinicio.</span><span class="sxs-lookup"><span data-stu-id="e8012-690">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8012-691">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-691">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8012-692">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-692">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-693">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-693">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-694">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-694">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-695">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-695">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="e8012-696">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-696">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte), newBaseSeqNum As SequenceNumber) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.WriteRestartArea (data, newBaseSeqNum)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="e8012-697">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-697">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSeqNum">
          <span data-ttu-id="e8012-698">The new base sequence number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-698">The new base sequence number.</span>
          </span>
          <span data-ttu-id="e8012-699">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-699">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-700">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-700">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
          <span data-ttu-id="e8012-701">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-701">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-702">The sequence number of the written restart area.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-702">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-703">Un área de reinicio se puede usar para almacenar temporalmente información que contiene la última operación de punto de control de un cliente.</span><span class="sxs-lookup"><span data-stu-id="e8012-703">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="e8012-704">Cuando una recuperación es necesaria, puede leer un área de reinicio y recuperar todos los datos de la última operación de punto de control.</span><span class="sxs-lookup"><span data-stu-id="e8012-704">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="e8012-705">Estos datos inicializan la tabla de transacciones, la tabla de páginas desfasadas y la tabla de archivos abiertos para que se puedan utilizar en el proceso de recuperación.</span><span class="sxs-lookup"><span data-stu-id="e8012-705">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="e8012-706">Un área de reinicio puede leerse mediante el método <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-706">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="e8012-707">Cuando se escribe un área de reinicio, los datos en los segmentos de la matriz de bytes se concatenan en una matriz de bytes única para anexar como el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-707">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e8012-708">No se ha realizado ninguna disposición para dividir los datos de nuevo en segmentos de matriz cuando se lee el área de reinicio.</span><span class="sxs-lookup"><span data-stu-id="e8012-708">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="e8012-709">Cuando el método se completa correctamente, el número de secuencia base se actualiza.</span><span class="sxs-lookup"><span data-stu-id="e8012-709">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="e8012-710">Todas las entradas de registro con números de secuencia menores que el nuevo número de secuencia base son inaccesibles.</span><span class="sxs-lookup"><span data-stu-id="e8012-710">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8012-711">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-711">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8012-712">
            <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-712">
              <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
          <span data-ttu-id="e8012-713">-or-  A new or existing archive tail or base of the active log is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-713">-or-  A new or existing archive tail or base of the active log is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8012-714">
            <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-714">
              <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8012-715">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-715">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-716">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-716">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-717">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-717">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-718">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-718">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="e8012-719">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-719">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSeqNum As SequenceNumber) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.WriteRestartArea (data, newBaseSeqNum)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="e8012-720">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-720">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSeqNum">
          <span data-ttu-id="e8012-721">The new base sequence number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-721">The new base sequence number.</span>
          </span>
          <span data-ttu-id="e8012-722">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-722">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-723">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-723">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
          <span data-ttu-id="e8012-724">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-724">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-725">The sequence number of the written restart area.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-725">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-726">Un área de reinicio se puede usar para almacenar temporalmente información que contiene la última operación de punto de control de un cliente.</span><span class="sxs-lookup"><span data-stu-id="e8012-726">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="e8012-727">Cuando una recuperación es necesaria, puede leer un área de reinicio y recuperar todos los datos de la última operación de punto de control.</span><span class="sxs-lookup"><span data-stu-id="e8012-727">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="e8012-728">Estos datos inicializan la tabla de transacciones, la tabla de páginas desfasadas y la tabla de archivos abiertos para que se puedan utilizar en el proceso de recuperación.</span><span class="sxs-lookup"><span data-stu-id="e8012-728">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="e8012-729">Un área de reinicio puede leerse mediante el método <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-729">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="e8012-730">Cuando se escribe un área de reinicio, los datos en los segmentos de la matriz de bytes se concatenan en una matriz de bytes única para anexar como el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-730">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e8012-731">No se ha realizado ninguna disposición para dividir los datos de nuevo en segmentos de matriz cuando se lee el área de reinicio.</span><span class="sxs-lookup"><span data-stu-id="e8012-731">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="e8012-732">Cuando el método se completa correctamente, el número de secuencia base se actualiza.</span><span class="sxs-lookup"><span data-stu-id="e8012-732">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="e8012-733">Todas las entradas de registro con números de secuencia menores que el nuevo número de secuencia base son inaccesibles.</span><span class="sxs-lookup"><span data-stu-id="e8012-733">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8012-734">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-734">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8012-735">
            <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-735">
              <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
          <span data-ttu-id="e8012-736">-or-  A new or existing archive tail or base of the active log is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-736">-or-  A new or existing archive tail or base of the active log is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8012-737">
            <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-737">
              <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8012-738">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-738">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-739">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-739">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-740">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-740">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-741">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-741">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="e8012-742">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-742">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte), newBaseSeqNum As SequenceNumber, reservations As ReservationCollection) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.WriteRestartArea (data, newBaseSeqNum, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="e8012-743">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-743">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSeqNum">
          <span data-ttu-id="e8012-744">The new base sequence number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-744">The new base sequence number.</span>
          </span>
          <span data-ttu-id="e8012-745">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-745">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="e8012-746">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-746">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-747">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-747">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
          <span data-ttu-id="e8012-748">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-748">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-749">The sequence number of the written restart area.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-749">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-750">Un área de reinicio se puede usar para almacenar temporalmente información que contiene la última operación de punto de control de un cliente.</span><span class="sxs-lookup"><span data-stu-id="e8012-750">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="e8012-751">Cuando una recuperación es necesaria, puede leer un área de reinicio y recuperar todos los datos de la última operación de punto de control.</span><span class="sxs-lookup"><span data-stu-id="e8012-751">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="e8012-752">Estos datos inicializan la tabla de transacciones, la tabla de páginas desfasadas y la tabla de archivos abiertos para que se puedan utilizar en el proceso de recuperación.</span><span class="sxs-lookup"><span data-stu-id="e8012-752">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="e8012-753">Un área de reinicio puede leerse mediante el método <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-753">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="e8012-754">Cuando se escribe un área de reinicio, los datos en los segmentos de la matriz de bytes se concatenan en una matriz de bytes única para anexar como el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-754">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e8012-755">No se ha realizado ninguna disposición para dividir los datos de nuevo en segmentos de matriz cuando se lee el área de reinicio.</span><span class="sxs-lookup"><span data-stu-id="e8012-755">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="e8012-756">Si se especifica una reserva , el área de reinicio escrita utilizará el espacio que se ha reservado previamente, utilizando una reserva contenida en la colección.</span><span class="sxs-lookup"><span data-stu-id="e8012-756">If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="e8012-757">Si el método tiene éxito, utilizará la menor reserva que pueda contener los datos y esa reserva se quitará de la colección.</span><span class="sxs-lookup"><span data-stu-id="e8012-757">If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="e8012-758">Cuando el método se completa correctamente, el número de secuencia base se actualiza.</span><span class="sxs-lookup"><span data-stu-id="e8012-758">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="e8012-759">Todas las entradas de registro con números de secuencia menores que el nuevo número de secuencia base son inaccesibles.</span><span class="sxs-lookup"><span data-stu-id="e8012-759">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="e8012-760">Si una secuencia del registro se ha eliminado, o si se pasa un argumento no válido, las excepciones se producen inmediatamente en esta operación.</span><span class="sxs-lookup"><span data-stu-id="e8012-760">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="e8012-761">Los errores que se produjeron durante una solicitud de anexado asincrónica, como, por ejemplo, un error de disco durante la petición de E/S, producirá excepciones que se producen cuando se llama al método <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-761">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8012-762">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-762">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8012-763">
            <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-763">
              <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
          <span data-ttu-id="e8012-764">-or-  A new or existing archive tail or base of the active log is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-764">-or-  A new or existing archive tail or base of the active log is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8012-765">
            <paramref name="reservations" /> was not created by this record sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-765">
              <paramref name="reservations" /> was not created by this record sequence.</span>
          </span>
          <span data-ttu-id="e8012-766">-or-  <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-766">-or-  <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8012-767">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-767">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-768">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-768">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-769">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-769">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-770">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-770">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="e8012-771">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-771">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="e8012-772">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-772">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSeqNum As SequenceNumber, reservations As ReservationCollection) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.WriteRestartArea (data, newBaseSeqNum, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="e8012-773">A list of byte array segments that will be concatenated and appended as the record.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-773">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSeqNum">
          <span data-ttu-id="e8012-774">The new base sequence number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-774">The new base sequence number.</span>
          </span>
          <span data-ttu-id="e8012-775">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-775">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="e8012-776">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-776">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8012-777">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-777">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
          <span data-ttu-id="e8012-778">This method cannot be inherited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-778">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8012-779">The sequence number of the written restart area.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-779">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8012-780">Un área de reinicio se puede usar para almacenar temporalmente información que contiene la última operación de punto de control de un cliente.</span><span class="sxs-lookup"><span data-stu-id="e8012-780">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="e8012-781">Cuando una recuperación es necesaria, puede leer un área de reinicio y recuperar todos los datos de la última operación de punto de control.</span><span class="sxs-lookup"><span data-stu-id="e8012-781">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="e8012-782">Estos datos inicializan la tabla de transacciones, la tabla de páginas desfasadas y la tabla de archivos abiertos para que se puedan utilizar en el proceso de recuperación.</span><span class="sxs-lookup"><span data-stu-id="e8012-782">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="e8012-783">Un área de reinicio puede leerse mediante el método <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-783">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="e8012-784">Cuando se escribe un área de reinicio, los datos en los segmentos de la matriz de bytes se concatenan en una matriz de bytes única para anexar como el registro.</span><span class="sxs-lookup"><span data-stu-id="e8012-784">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e8012-785">No se ha realizado ninguna disposición para dividir los datos de nuevo en segmentos de matriz cuando se lee el área de reinicio.</span><span class="sxs-lookup"><span data-stu-id="e8012-785">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="e8012-786">Si se especifica una reserva , el área de reinicio escrita utilizará el espacio que se ha reservado previamente, utilizando una reserva contenida en la colección.</span><span class="sxs-lookup"><span data-stu-id="e8012-786">If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="e8012-787">Si el método tiene éxito, utilizará la menor reserva que pueda contener los datos y esa reserva se quitará de la colección.</span><span class="sxs-lookup"><span data-stu-id="e8012-787">If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="e8012-788">Cuando el método se completa correctamente, el número de secuencia base se actualiza.</span><span class="sxs-lookup"><span data-stu-id="e8012-788">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="e8012-789">Todas las entradas de registro con números de secuencia menores que el nuevo número de secuencia base son inaccesibles.</span><span class="sxs-lookup"><span data-stu-id="e8012-789">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="e8012-790">Si una secuencia del registro se ha eliminado, o si se pasa un argumento no válido, las excepciones se producen inmediatamente en esta operación.</span><span class="sxs-lookup"><span data-stu-id="e8012-790">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="e8012-791">Los errores que se produjeron durante una solicitud de anexado asincrónica, como, por ejemplo, un error de disco durante la petición de E/S, producirá excepciones que se producen cuando se llama al método <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8012-791">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8012-792">One or more of the arguments are <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-792">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e8012-793">
            <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-793">
              <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
          <span data-ttu-id="e8012-794">-or-  A new or existing archive tail or base of the active log is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-794">-or-  A new or existing archive tail or base of the active log is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e8012-795">
            <paramref name="reservations" /> was not created by this record sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-795">
              <paramref name="reservations" /> was not created by this record sequence.</span>
          </span>
          <span data-ttu-id="e8012-796">-or-  <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-796">-or-  <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e8012-797">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-797">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e8012-798">The request cannot be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-798">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e8012-799">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-799">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="e8012-800">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-800">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="e8012-801">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-801">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="e8012-802">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8012-802">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>