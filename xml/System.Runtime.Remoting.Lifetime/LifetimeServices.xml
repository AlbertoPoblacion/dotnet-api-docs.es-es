<Type Name="LifetimeServices" FullName="System.Runtime.Remoting.Lifetime.LifetimeServices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bfadce6fb1532f79d8ed9648b1298ef4ba44851f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36631531" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class LifetimeServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed LifetimeServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Lifetime.LifetimeServices" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LifetimeServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class LifetimeServices sealed" />
  <TypeSignature Language="F#" Value="type LifetimeServices = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Controla los servicios de duración de .NET Remoting.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Recolección distribuida es responsable de controlar las duraciones de las aplicaciones de servidor y para eliminarlos cuando hayan expirado sus duraciones. Tradicionalmente, recolección distribuida utiliza recuentos de referencias y ejecutando el comando ping para el control. Esto funciona bien cuando hay pocos clientes por objeto, pero no funciona bien cuando hay miles de clientes por cada objeto. El servicio de duración puede asumir la función de un recolector de elementos no utilizados distribuido tradicional y escalas bien cuando aumenta el número de clientes.  
  
 El servicio de duración asocia una concesión a cada objeto activado remotamente. Cuando la concesión expira, se quita el objeto.  
  
> [!NOTE]
>  Esta clase realiza una petición de vínculo. Se produce una excepción de seguridad si el llamador inmediato no tiene permiso de infraestructura. Vea [peticiones de vínculo](~/docs/framework/misc/link-demands.md) para obtener más información.  
  
   
  
## Examples  
 [!code-cpp[System.Runtime.Remoting.Lifetime#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Lifetime/CPP/server.cpp#2)]
 [!code-csharp[System.Runtime.Remoting.Lifetime#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Lifetime/CS/server.cs#2)]
 [!code-vb[System.Runtime.Remoting.Lifetime#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Runtime.Remoting.Lifetime/VB/server.vb#2)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">Para trabajar con código de infraestructura. Valor de la petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valor del permiso: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LifetimeServices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Lifetime.LifetimeServices.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LifetimeServices();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Call the static methods directly on this type instead", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Crea una instancia de <see cref="T:System.Runtime.Remoting.Lifetime.LifetimeServices" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeaseManagerPollTime">
      <MemberSignature Language="C#" Value="public static TimeSpan LeaseManagerPollTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan LeaseManagerPollTime" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property LeaseManagerPollTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan LeaseManagerPollTime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.LeaseManagerPollTime : TimeSpan with get, set" Usage="System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el intervalo de tiempo entre cada activación del administrador de concesiones para limpiar las concesiones expiradas.</summary>
        <value>Tiempo predeterminado durante el cual el administrador de concesiones permanece inactivo tras comprobar la presencia de concesiones expiradas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La propiedad actual define la frecuencia con la que el Administrador de concesiones, se convierte en activo para limpiar las concesiones expiradas. Por ejemplo, si <xref:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime%2A> se establece en 100 segundos, la lista de concesiones se inspecciona cada 100 segundos para la limpieza y la renovación.  
  
 El valor predeterminado de la <xref:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime%2A> propiedad es de 10 segundos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Al menos uno de los llamadores situados en la parte superior de la pila de llamadas no tiene permiso para configurar los tipos y canales de comunicación remota. Esta excepción se produce únicamente cuando se establece el valor de propiedad.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Para la configuración de la infraestructura de comunicación remota. Valor de la petición: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Valor del permiso: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="LeaseTime">
      <MemberSignature Language="C#" Value="public static TimeSpan LeaseTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan LeaseTime" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseTime" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property LeaseTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan LeaseTime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.LeaseTime : TimeSpan with get, set" Usage="System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el intervalo de tiempo de concesión inicial de un <see cref="T:System.AppDomain" />.</summary>
        <value>La concesión inicial <see cref="T:System.TimeSpan" /> de los objetos que pueden tener concesiones en <see cref="T:System.AppDomain" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El intervalo de tiempo de concesión predeterminado es 5 minutos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Al menos uno de los llamadores situados en la parte superior de la pila de llamadas no tiene permiso para configurar los tipos y canales de comunicación remota. Esta excepción se produce únicamente cuando se establece el valor de propiedad.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Para la configuración de la infraestructura de comunicación remota. Valor de la petición: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Valor del permiso: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="RenewOnCallTime">
      <MemberSignature Language="C#" Value="public static TimeSpan RenewOnCallTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan RenewOnCallTime" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.LifetimeServices.RenewOnCallTime" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property RenewOnCallTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan RenewOnCallTime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.RenewOnCallTime : TimeSpan with get, set" Usage="System.Runtime.Remoting.Lifetime.LifetimeServices.RenewOnCallTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tiempo en que se amplía la concesión cada que vez que se recibe una llamada en el objeto de servidor.</summary>
        <value>
          <see cref="T:System.TimeSpan" /> en que se amplía una concesión de período de duración en el <see cref="T:System.AppDomain" /> actual después de cada llamada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El tiempo de renovación predeterminado en que se amplía una concesión de duración es de 2 minutos.  
  
   
  
## Examples  
 [!code-cpp[ILease_ILease#3](~/samples/snippets/cpp/VS_Snippets_Remoting/ILease_ILease/CPP/ilease_client.cpp#3)]
 [!code-csharp[ILease_ILease#3](~/samples/snippets/csharp/VS_Snippets_Remoting/ILease_ILease/CS/ilease_client.cs#3)]
 [!code-vb[ILease_ILease#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ILease_ILease/VB/ilease_client.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Al menos uno de los llamadores situados en la parte superior de la pila de llamadas no tiene permiso para configurar los tipos y canales de comunicación remota. Esta excepción se produce únicamente cuando se establece el valor de propiedad.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Para la configuración de la infraestructura de comunicación remota. Valor de la petición: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Valor del permiso: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SponsorshipTimeout">
      <MemberSignature Language="C#" Value="public static TimeSpan SponsorshipTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan SponsorshipTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.LifetimeServices.SponsorshipTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property SponsorshipTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan SponsorshipTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.SponsorshipTimeout : TimeSpan with get, set" Usage="System.Runtime.Remoting.Lifetime.LifetimeServices.SponsorshipTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tiempo que el administrador de concesiones espera a que el patrocinador vuelva con un tiempo de renovación de concesión.</summary>
        <value>Tiempo de espera inicial para el patrocinio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El tiempo predeterminado hasta que se agotó el tiempo una llamada a un patrocinador es 2 minutos.  
  
   
  
## Examples  
 [!code-cpp[ILease_ILease#3](~/samples/snippets/cpp/VS_Snippets_Remoting/ILease_ILease/CPP/ilease_client.cpp#3)]
 [!code-csharp[ILease_ILease#3](~/samples/snippets/csharp/VS_Snippets_Remoting/ILease_ILease/CS/ilease_client.cs#3)]
 [!code-vb[ILease_ILease#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ILease_ILease/VB/ilease_client.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Al menos uno de los llamadores situados en la parte superior de la pila de llamadas no tiene permiso para configurar los tipos y canales de comunicación remota. Esta excepción se produce únicamente cuando se establece el valor de propiedad.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Para la configuración de la infraestructura de comunicación remota. Valor de la petición: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Valor del permiso: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>