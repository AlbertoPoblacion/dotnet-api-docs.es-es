<Type Name="Group" FullName="System.Text.RegularExpressions.Group">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c9ceb4248a5285c62369d6da357d6eade4c623f8" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52907300" /></Metadata><TypeSignature Language="C#" Value="public class Group : System.Text.RegularExpressions.Capture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Group extends System.Text.RegularExpressions.Capture" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.Group" />
  <TypeSignature Language="VB.NET" Value="Public Class Group&#xA;Inherits Capture" />
  <TypeSignature Language="C++ CLI" Value="public ref class Group : System::Text::RegularExpressions::Capture" />
  <TypeSignature Language="F#" Value="type Group = class&#xA;    inherit Capture" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.RegularExpressions.Capture</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa los resultados de un único grupo de captura.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un grupo de captura puede capturar cero, uno o más cadenas en una única coincidencia debido a los cuantificadores. (Para obtener más información, consulte [cuantificadores](~/docs/standard/base-types/quantifiers-in-regular-expressions.md).) Están disponibles en todas las subcadenas que coinciden con un único grupo de captura el <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> propiedad. Información sobre la última subcadena capturada se puede acceder directamente desde el `Value` y `Index` propiedades. (Eso es, el <xref:System.Text.RegularExpressions.Group> instancia es equivalente al último elemento de la colección devuelta por la <xref:System.Text.RegularExpressions.Group.Captures%2A> propiedad, que refleja la última captura realizada por el grupo de captura.)  
  
 Un ejemplo ayuda a aclarar esta relación entre un <xref:System.Text.RegularExpressions.Group> objeto y el <xref:System.Text.RegularExpressions.CaptureCollection?displayProperty=nameWithType> devuelta por la <xref:System.Text.RegularExpressions.Group.Captures%2A> propiedad. El patrón de expresión regular `(\b(\w+?)[,:;]?\s?)+[?.!]` coincide con frases completas. La expresión regular se define como se muestra en la tabla siguiente.  
  
|Modelo|Descripción|  
|-------------|-----------------|  
|`\b`|Iniciar la búsqueda de coincidencias en un límite de palabras.|  
|`(\w+?)`|Coincide con uno o más caracteres de palabra, pero con el menor número de caracteres posible. Este es el segundo grupo de captura (interior). (El primer grupo de captura incluye el `\b` elemento del lenguaje.)|  
|`[,:;]?`|Coincide con cero o una aparición de una coma, coma o punto y coma.|  
|`\s?`|Coincide con cero o una aparición de un carácter de espacio en blanco.|  
|`(\b(\w+?)[,:;]?\s?)+`|Coincide con el patrón que consta de un límite de palabras, uno o más caracteres alfabéticos, un signo de puntuación y un carácter de espacio en blanco una o varias veces. Este es el primer grupo de captura.|  
|`[?.!]`|Coincide con cualquier aparición de un período, un signo de interrogación o un signo de exclamación.|  
  
 En este patrón de expresión regular, el subpatrón `(\w+?)` está diseñado para buscar varias palabras dentro de una frase. Sin embargo, el valor de la <xref:System.Text.RegularExpressions.Group> objeto representa solo la última coincidencia que `(\w+?)` captura, mientras que el <xref:System.Text.RegularExpressions.Group.Captures%2A> propiedad devuelve un <xref:System.Text.RegularExpressions.CaptureCollection> que representa todo el texto capturado. Como se muestra en la salida, la <xref:System.Text.RegularExpressions.CaptureCollection> para el segundo grupo de captura contiene cuatro objetos. La última de ellas se corresponde con el <xref:System.Text.RegularExpressions.Group> objeto.  
  
 [!code-csharp[System.Text.RegularExpressions.Group.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.group.class/cs/groupandcaptures1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Group.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.group.class/vb/groupandcaptures1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Captures">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.CaptureCollection Captures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.RegularExpressions.CaptureCollection Captures" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Group.Captures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Captures As CaptureCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::RegularExpressions::CaptureCollection ^ Captures { System::Text::RegularExpressions::CaptureCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Captures : System.Text.RegularExpressions.CaptureCollection" Usage="System.Text.RegularExpressions.Group.Captures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.CaptureCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de todas las capturas que coinciden con el grupo de captura, en el orden de primero el más interno más a la izquierda (o el orden de primero el más interno más a la derecha si la expresión regular se modifica con el <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" /> opción). La colección puede tener cero o más elementos.</summary>
        <value>La colección de subcadenas que coinciden por el grupo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si no se aplica un cuantificador a una captura de grupo, la colección devuelta por la <xref:System.Text.RegularExpressions.Group.Captures%2A> propiedad contiene un único <xref:System.Text.RegularExpressions.Capture> objeto que proporciona información acerca de la misma subcadena como el <xref:System.Text.RegularExpressions.Group> objeto. Esto se muestra en el ejemplo siguiente. Define una expresión regular, `\b(\w+)\b`, que extrae una sola palabra de una frase. El <xref:System.Text.RegularExpressions.Group> objeto captura la palabra "This" y el objeto único en la <xref:System.Text.RegularExpressions.CaptureCollection> contiene información sobre la misma captura.  
  
 [!code-csharp[System.Text.RegularExpressions.Group.Captures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/cs/captures1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Group.Captures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/vb/captures1.vb#1)]  
  
 La verdadera utilidad de la <xref:System.Text.RegularExpressions.Group.Captures%2A> propiedad se produce cuando se aplica un cuantificador a un grupo de captura para que el grupo de captura varias subcadenas en una expresión regular única. En este caso, el <xref:System.Text.RegularExpressions.Group> objeto contiene información sobre la última subcadena capturada, mientras que el <xref:System.Text.RegularExpressions.Group.Captures%2A> propiedad contiene información sobre todas las subcadenas capturadas por el grupo. En el ejemplo siguiente, la expresión regular `\b(\w+\s*)+\.` coincide con una frase completa que finaliza con un punto. El grupo `(\w+\s*)+` captura las palabras individuales en la colección. Dado que el <xref:System.Text.RegularExpressions.Group> colección solo contiene información sobre la última subcadena capturada, captura la última palabra en la frase "la frase". Sin embargo, cada palabra capturada por el grupo está disponible desde la colección devuelta por la <xref:System.Text.RegularExpressions.Group.Captures%2A> propiedad.  
  
 [!code-csharp[System.Text.RegularExpressions.Group.Captures#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/cs/captures2.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Group.Captures#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/vb/captures2.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/0fc18634-f590-4062-8d5c-f0b71abe405b">Construcciones de agrupamiento</related>
        <related type="Article" href="https://msdn.microsoft.com/library/36b81212-6511-49ed-a8f1-ff080415312f">Cuantificadores</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Group.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Text.RegularExpressions.Group.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve el nombre del grupo de captura representado por la instancia actual.</summary>
        <value>El nombre del grupo de captura que la instancia actual representa.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Success">
      <MemberSignature Language="C#" Value="public bool Success { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Success" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Group.Success" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Success As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Success { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Success : bool" Usage="System.Text.RegularExpressions.Group.Success" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si la coincidencia es correcta.</summary>
        <value><see langword="true" /> Si la coincidencia es correcta; de lo contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `Success` propiedad es true si se ha capturado al menos una subcadena por este grupo. Es equivalente a la expresión booleana (Group.Captures.Count > 0).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.Group Synchronized (System.Text.RegularExpressions.Group inner);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.Group Synchronized(class System.Text.RegularExpressions.Group inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (inner As Group) As Group" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::Group ^ Synchronized(System::Text::RegularExpressions::Group ^ inner);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Text.RegularExpressions.Group -&gt; System.Text.RegularExpressions.Group" Usage="System.Text.RegularExpressions.Group.Synchronized inner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Group</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inner" Type="System.Text.RegularExpressions.Group" />
      </Parameters>
      <Docs>
        <param name="inner">La entrada <see cref="T:System.Text.RegularExpressions.Group" /> objeto.</param>
        <summary>Devuelve un <see langword="Group" /> objeto equivalente a la suministrada que es seguro compartir entre varios subprocesos.</summary>
        <returns>Una expresión regular <see langword="Group" /> objeto.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="inner" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
