<Type Name="PackageDigitalSignatureManager" FullName="System.IO.Packaging.PackageDigitalSignatureManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6e16960f0bc3887a47bf8d05b3f52441e0df89ed" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33682589" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PackageDigitalSignatureManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PackageDigitalSignatureManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageDigitalSignatureManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PackageDigitalSignatureManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageDigitalSignatureManager sealed" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona una clase de utilidad para la creación y comprobación de firmas digitales en una clase <see cref="T:System.IO.Packaging.Package" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageDigitalSignatureManager> se basa en la arquitectura de .NET Framework, las clases de firma digital y proporciona una clase de utilidad para realizar tareas comunes de uso de firmas digitales con <xref:System.IO.Packaging.Package> elementos.  
  
 Para obtener más información sobre firmas digitales, vea el artículo MSDN estructura de firma Digital de Open Packaging Conventions disponible en [ http://go.microsoft.com/fwlink/?LinkId=74494 ](http://go.microsoft.com/fwlink/?LinkId=74494).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.IO.Packaging.PackageDigitalSignatureManager>.  Para obtener un ejemplo completo, vea [crear un paquete con un ejemplo de firma Digital](http://go.microsoft.com/fwlink/?LinkID=159966).  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.Package" />
    <altmember cref="T:System.IO.Packaging.PackageDigitalSignature" />
    <altmember cref="T:System.Windows.Xps.Packaging.XpsDigitalSignature" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PackageDigitalSignatureManager (System.IO.Packaging.Package package);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Packaging.Package package) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PackageDigitalSignatureManager(System::IO::Packaging::Package ^ package);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
      </Parameters>
      <Docs>
        <param name="package">Paquete asociado a este administrador de firmas.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.Packaging.PackageDigitalSignatureManager" /> para su uso con una clase <see cref="T:System.IO.Packaging.Package" /> especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El paquete de destino asociado con el Administrador de firma se establece durante la inicialización. Una vez configurada, no se puede cambiar el paquete asociado con el Administrador de firma. Cree una nueva firma de administrador para cada paquete según sea necesario.  
  
   
  
## Examples  
 En el siguiente ejemplo se muestra cómo usar este constructor.  Para obtener un ejemplo completo, vea [crear un paquete con un ejemplo de firma Digital](http://go.microsoft.com/fwlink/?LinkID=159966).  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Packaging.PackageDigitalSignature" />
      </Docs>
    </Member>
    <Member MemberName="CertificateOption">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.CertificateEmbeddingOption CertificateOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Packaging.CertificateEmbeddingOption CertificateOption" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificateOption As CertificateEmbeddingOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::CertificateEmbeddingOption CertificateOption { System::IO::Packaging::CertificateEmbeddingOption get(); void set(System::IO::Packaging::CertificateEmbeddingOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.CertificateEmbeddingOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la opción de inserción del certificado X.509 que el método <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" /> usa para firmar digitalmente las partes del paquete.</summary>
        <value>Uno de los valores de <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad especifica donde se almacenará el certificado X.509 del firmante cuando se firma digitalmente un elemento.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo establecer esta propiedad como preparación para firmar digitalmente las partes dentro de un paquete.  Para obtener un ejemplo completo, vea [crear un paquete con un ejemplo de firma Digital](http://go.microsoft.com/fwlink/?LinkID=159966).  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Countersign">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Contrafirma las firmas del paquete con un certificado X.509 especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Countersign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Countersign ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Countersign() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign" />
      <MemberSignature Language="VB.NET" Value="Public Function Countersign () As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Countersign();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Contrafirma todas las firmas del paquete con un certificado X.509 seleccionado por el usuario.</summary>
        <returns>Firma que se agregó como contrafirma o <see langword="null" /> si no se encontró ningún certificado o el usuario canceló el cuadro de diálogo de selección de certificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si no hay ningún certificado X.509 se especifica en la llamada, este método abre un cuadro de diálogo de selección de certificado que se le solicita al usuario elegir un certificado que se usará para firmar.  
  
 Establecer el identificador de ventana en el <xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A> propiedad antes de llamar a <xref:System.IO.Packaging.PackageDigitalSignatureManager.Countersign%2A> para hacer que el cuadro de diálogo de selección de certificado modal respecto a la ventana especificada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Countersign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Countersign (System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Countersign(class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Countersign (certificate As X509Certificate) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Countersign(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="certificate">Certificado X.509 que se debe agregar como contrafirma.</param>
        <summary>Contrafirma todas las signaturas del paquete con un certificado X.509 especificado.</summary>
        <returns>Signatura que se agregó como contrafirma.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificate" /> es <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName="Countersign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Countersign (System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;Uri&gt; signatures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Countersign(class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; signatures) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})" />
      <MemberSignature Language="VB.NET" Value="Public Function Countersign (certificate As X509Certificate, signatures As IEnumerable(Of Uri)) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Countersign(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ signatures);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="signatures" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
      </Parameters>
      <Docs>
        <param name="certificate">Certificado X.509 que se usará para contrafirmar cada uno de las <c>firmas</c> especificadas.</param>
        <param name="signatures">Lista de firmas que se van a contrafirmar.</param>
        <summary>Contrafirma una lista de firmas con un certificado X.509 determinado.</summary>
        <returns>Firma digital usada para contrafirmar cada uno de los elementos <paramref name="signatures" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">O bien el parámetro <paramref name="certificate" /> o el parámetro <paramref name="signatures" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">El paquete no contiene objetos <see cref="T:System.IO.Packaging.PackagePart" /> firmados.</exception>
        <exception cref="T:System.ArgumentException">El paquete no contiene partes <see cref="T:System.IO.Packaging.PackageDigitalSignature" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultHashAlgorithm">
      <MemberSignature Language="C#" Value="public static string DefaultHashAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string DefaultHashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultHashAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DefaultHashAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una cadena del [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] que identifica el algoritmo hash predeterminado usado para crear y comprobar firmas.</summary>
        <value>Cadena del [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] que identifica el algoritmo hash predeterminado usado para crear y comprobar firmas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El algoritmo hash predeterminado para el estándar <xref:System.IO.Packaging.PackageDigitalSignatureManager> clase es <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> ([!INCLUDE[TLA#tla_sha1](~/includes/tlasharptla-sha1-md.md)]).  
  
 El <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> propiedad obtiene o establece el algoritmo de hash real que se utiliza para crear y comprobar firmas.  
  
 El <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A> propiedad se suele usar para restablecer el <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> propiedad a predeterminada después de un cambio temporal.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.Xml.SignedXml" />
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="GetSignature">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature GetSignature (Uri signatureUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature GetSignature(class System.Uri signatureUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSignature (signatureUri As Uri) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ GetSignature(Uri ^ signatureUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signatureUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="signatureUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de la firma digital que se va a devolver.</param>
        <summary>Devuelve la firma digital de un [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] de firma especificado.</summary>
        <returns>Su valor es la firma digital del <paramref name="signatureUri" /> especificado o <see langword="null" />, si no se puede encontrar una firma para el <paramref name="signatureUri" /> especificado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public string HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HashAlgorithm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el identificador de [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] para la instancia <see cref="T:System.Security.Cryptography.HashAlgorithm" /> usada para crear y comprobar firmas.</summary>
        <value>El <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] identificador de la <see cref="T:System.Security.Cryptography.HashAlgorithm" /> instancia utilizada para crear y comprobar firmas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es el identificador del algoritmo hash predeterminado para el Administrador de firma digital estándar <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> (<xref:System.Security.Cryptography.SHA1>, Secure Hash Algorithm versión 1.0).  
  
 A menos que explícitamente el conjunto en caso contrario, esta propiedad obtiene el mismo valor que <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>.  
  
 El <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> propiedad normalmente no se cambia respecto a su valor predeterminado. Esta propiedad se debe cambiar solo si una firma que usa un conocido diferente y es accesible <xref:System.Security.Cryptography.HashAlgorithm> se encuentra.  Cuando finalice con la firma que utiliza un algoritmo de hash diferente, llame a <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A> para restablecer el <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> propiedad al valor predeterminado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de la cadena del [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] que se va a establecer es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">El valor de la cadena del [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] que se va a establecer está vacío.</exception>
        <altmember cref="T:System.Security.Cryptography.Xml.SignedXml" />
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm" />
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignature.SignatureValue" />
      </Docs>
    </Member>
    <Member MemberName="InvalidSignatureEvent">
      <MemberSignature Language="C#" Value="public event System.IO.Packaging.InvalidSignatureEventHandler InvalidSignatureEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.Packaging.InvalidSignatureEventHandler InvalidSignatureEvent" />
      <MemberSignature Language="DocId" Value="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Event InvalidSignatureEvent As InvalidSignatureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::Packaging::InvalidSignatureEventHandler ^ InvalidSignatureEvent;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.InvalidSignatureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando el método <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> detecta una firma no válida.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSigned { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el paquete contiene firmas.</summary>
        <value>
          Es <see langword="true" /> si el paquete contiene firmas; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A> propiedad no realiza validaciones de firma. Si no hay firmas y <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A> es `true`, una o varias de las firmas podrían no ser válido.  Llame a <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures%2A> para confirmar que las firmas son válidas y que no han cambiado.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A> propiedad para determinar si un paquete que contiene las firmas digitales.  Para obtener un ejemplo completo, vea [crear un paquete con un ejemplo de firma Digital](http://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigvalidate)]
 [!code-vb[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigvalidate)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ParentWindow">
      <MemberSignature Language="C#" Value="public IntPtr ParentWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ParentWindow" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentWindow As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ParentWindow { IntPtr get(); void set(IntPtr value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un identificador en la ventana primaria para mostrar un cuadro de diálogo de selección de certificado.</summary>
        <value>Identificador de la ventana primaria para usarlo con el fin de mostrar el cuadro de diálogo de selección de certificado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se presenta un cuadro de diálogo de selección de certificado solo si un <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> llamada no contiene ningún certificado. Si no se especifica ningún certificado, <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> mostrará un cuadro de diálogo de selección de certificado que permite al usuario elegir el certificado que se va a usar para la firma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllSignatures">
      <MemberSignature Language="C#" Value="public void RemoveAllSignatures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllSignatures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAllSignatures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAllSignatures();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quita todas las firmas digitales del paquete.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método también quita todos los certificados X.509 del paquete.  Después de quitar todas las firmas y certificados, llame a <xref:System.IO.Packaging.Package.Flush%2A> para conservar todos los cambios en el almacén.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.PackageDigitalSignatureManager.Sign" />
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)" />
        <altmember cref="T:System.IO.Packaging.PackageDigitalSignature" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSignature">
      <MemberSignature Language="C#" Value="public void RemoveSignature (Uri signatureUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveSignature(class System.Uri signatureUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSignature (signatureUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveSignature(Uri ^ signatureUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signatureUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="signatureUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> que se quitará.</param>
        <summary>Quita la firma digital con un [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] de firma especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método también quita el certificado X.509 asociado si no se hace referencia por ninguna otra firma digital.  
  
 Después de quitar una firma, llame a <xref:System.IO.Packaging.Package.Flush%2A> para conservar el cambio en el almacén.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sign">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Firma una lista de elementos de paquete con un certificado X.509 especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se muestra los pasos para firmar digitalmente una lista de elementos dentro de un <xref:System.IO.Packaging.Package>.  Para obtener un ejemplo completo, vea [crear un paquete con un ejemplo de firma Digital](http://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri)) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
      </Parameters>
      <Docs>
        <param name="parts">Lista de [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] de los elementos de <see cref="T:System.IO.Packaging.PackagePart" /> que se van a firmar.</param>
        <summary>Pide al usuario un certificado X.509, que se usa para firmar digitalmente una lista de elementos del paquete especificada.</summary>
        <returns>Firma digital utilizada para firmar la lista de <paramref name="parts" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para hacer que el cuadro de diálogo de selección de certificado modal respecto a una ventana determinada, establezca el <xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A> propiedad antes de llamar a <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>.  
  
 <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> no solicitará certificados si no hay ninguno en el almacén de certificados de forma predeterminada.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo firmar digitalmente una lista de elementos de paquete.  Para obtener un ejemplo completo, vea el [crear un paquete con un ejemplo de firma Digital](http://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri), certificate As X509Certificate) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts, System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="parts">Lista de [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] de los elementos de <see cref="T:System.IO.Packaging.PackagePart" /> que se van a firmar.</param>
        <param name="certificate">Certificado X.509 que se va a usar para firmar digitalmente cada una de las <c>partes</c> especificadas.</param>
        <summary>Firma una lista de elementos de paquete con un certificado X.509 especificado.</summary>
        <returns>Firma digital utilizada para firmar la lista de <paramref name="parts" /> especificada; o bien, es <see langword="null" /> si no se pudo encontrar ningún certificado o el usuario hizo clic en "Cancelar" en el cuadro de diálogo de selección de certificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se muestra cómo firmar digitalmente una lista de elementos dentro de un <xref:System.IO.Packaging.Package>.  Para obtener un ejemplo completo, vea el [crear un paquete con un ejemplo de firma Digital](http://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri), certificate As X509Certificate, relationshipSelectors As IEnumerable(Of PackageRelationshipSelector)) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts, System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, System::Collections::Generic::IEnumerable&lt;System::IO::Packaging::PackageRelationshipSelector ^&gt; ^ relationshipSelectors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="relationshipSelectors" Type="System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt;" />
      </Parameters>
      <Docs>
        <param name="parts">Lista de [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] para los objetos <see cref="T:System.IO.Packaging.PackagePart" /> que se van a firmar.</param>
        <param name="certificate">Certificado X.509 que se va a usar para firmar digitalmente cada uno de los elementos y relaciones especificados.</param>
        <param name="relationshipSelectors">Lista de los objetos <see cref="T:System.IO.Packaging.PackageRelationship" /> que se van a firmar.</param>
        <summary>Firma una lista de partes de paquete y relaciones de paquete con un certificado X.509 especificado.</summary>
        <returns>Firma digital utilizada para firmar los elementos especificados en las listas <paramref name="parts" /> y <paramref name="relationshipSelectors" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entre `parts` y `relationshipSelectors` debe haber al menos un elemento para iniciar sesión.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo firmar digitalmente una lista de elementos de paquete.  Para obtener un ejemplo completo, vea el [crear un paquete con un ejemplo de firma Digital](http://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ni <paramref name="parts" /> ni <paramref name="relationshipSelectors" /> especifican ningún objeto que firmar.</exception>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri), certificate As X509Certificate, relationshipSelectors As IEnumerable(Of PackageRelationshipSelector), signatureId As String) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts, System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, System::Collections::Generic::IEnumerable&lt;System::IO::Packaging::PackageRelationshipSelector ^&gt; ^ relationshipSelectors, System::String ^ signatureId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="relationshipSelectors" Type="System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt;" />
        <Parameter Name="signatureId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parts">Lista de [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] para los objetos <see cref="T:System.IO.Packaging.PackagePart" /> que se van a firmar.</param>
        <param name="certificate">Certificado X.509 que se va a usar para firmar digitalmente cada uno de los elementos y relaciones especificados.</param>
        <param name="relationshipSelectors">Lista de los objetos <see cref="T:System.IO.Packaging.PackageRelationship" /> que se van a firmar.</param>
        <param name="signatureId">Cadena de identificación que se asociará a la firma.</param>
        <summary>Firma una lista de partes de paquete y relaciones de paquete con un certificado X.509 y [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] especificados.</summary>
        <returns>Firma digital utilizada para firmar los elementos especificados en las listas <paramref name="parts" /> y <paramref name="relationshipSelectors" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `parts` la lista puede estar vacía o `null` si `relationshipSelectors` contiene al menos una entrada.  
  
 El `relationshipSelectors` la lista puede estar vacía o `null` si `parts` contiene al menos una entrada.  
  
 Entre los `parts` lista y `relationshipSelectors` debe haber al menos un elemento para iniciar sesión.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo firmar digitalmente una lista de elementos de paquete.  Para obtener un ejemplo completo, vea el [crear un paquete con un ejemplo de firma Digital](http://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ni <paramref name="parts" /> ni <paramref name="relationshipSelectors" /> especifican ningún elemento que firmar.</exception>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId, System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.DataObject&gt; signatureObjects, System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.Reference&gt; objectReferences);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Cryptography.Xml.DataObject&gt; signatureObjects, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Cryptography.Xml.Reference&gt; objectReferences) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri), certificate As X509Certificate, relationshipSelectors As IEnumerable(Of PackageRelationshipSelector), signatureId As String, signatureObjects As IEnumerable(Of DataObject), objectReferences As IEnumerable(Of Reference)) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts, System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, System::Collections::Generic::IEnumerable&lt;System::IO::Packaging::PackageRelationshipSelector ^&gt; ^ relationshipSelectors, System::String ^ signatureId, System::Collections::Generic::IEnumerable&lt;System::Security::Cryptography::Xml::DataObject ^&gt; ^ signatureObjects, System::Collections::Generic::IEnumerable&lt;System::Security::Cryptography::Xml::Reference ^&gt; ^ objectReferences);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="relationshipSelectors" Type="System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt;" />
        <Parameter Name="signatureId" Type="System.String" />
        <Parameter Name="signatureObjects" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.DataObject&gt;" />
        <Parameter Name="objectReferences" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.Reference&gt;" />
      </Parameters>
      <Docs>
        <param name="parts">Lista de [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] para los objetos <see cref="T:System.IO.Packaging.PackagePart" /> que se van a firmar.</param>
        <param name="certificate">Certificado X.509 que se va a usar para firmar digitalmente cada uno de los elementos y relaciones especificados.</param>
        <param name="relationshipSelectors">Lista de los objetos <see cref="T:System.IO.Packaging.PackageRelationship" /> que se van a firmar.</param>
        <param name="signatureId">Cadena de identificación para asociar a la firma.</param>
        <param name="signatureObjects">Lista de objetos de datos personalizados que firmar.</param>
        <param name="objectReferences">Lista de referencias a objetos personalizados que firmar.</param>
        <summary>Firma una lista de elementos de paquete, relaciones de paquete u objetos personalizados con un certificado X.509 especificado y un [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] de firma.</summary>
        <returns>Firma digital utilizada para firmar los elementos especificados en las listas <paramref name="parts" /> y <paramref name="relationshipSelectors" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Debe haber al menos un elemento para iniciar sesión en `parts`, `relationshipSelectors`, `signatureObjects`, o `objectReferences`.  
  
> [!NOTE]
>  Los términos `Object`, `Manifest`, `Reference`, `SignatureProperties`, y `Transform` en los siguientes dos remarks hacen referencia a tipos de elementos y etiquetas definidas por la especificación W3C XML-Signature Syntax and Processing, vea [ https://www.w3.org/TR/xmldsig-core/ ](https://www.w3.org/TR/xmldsig-core/).  
  
 Esta y otras <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> sobrecargas del método utilizar actual <xref:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping%2A> diccionario que define un `Transform` para aplicar basándose en el elemento del paquete <xref:System.IO.Packaging.PackagePart.ContentType%2A>.  La especificación de Microsoft Open Packaging Conventions (OPC) actualmente solo dos permite válido `Transform` algoritmos: C14 y C14N.  El estándar de W3C XML-Signature Syntax and Processing no permite vacío `Manifest` etiquetas.  También se requiere la especificación de Open Packaging Conventions un <xref:System.IO.Packaging.Package>-específico `Object` etiqueta que contiene ambos `Manifest` y `SignatureProperties` etiquetas.  Cada `Manifest` además de etiquetas también incluye al menos uno `Reference` etiqueta.  Estas etiquetas requieren que cada firma firme, al menos una <xref:System.IO.Packaging.PackagePart> (etiqueta sin elementos vacíos) o <xref:System.IO.Packaging.PackageRelationship> (no vacíos `relationshipSelectors`) incluso si la firma sólo es necesaria para iniciar sesión `signatureObjects` o `objectReferences`.  
  
 Esto <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> método omite la <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A> propiedad asociada con cada uno de ellos <xref:System.Security.Cryptography.Xml.Reference> definido en `objectReferences`.  
  
 Esto <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> sobrecarga proporciona compatibilidad para la generación de [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] firmas que requieren personalizado `Object` etiquetas.  Para cualquier proporciona `Object` etiqueta debe estar firmado, correspondiente `Reference` etiqueta debe proporcionarse con un [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] que especifica la `Object` etiqueta en la sintaxis de fragmento local.  Por ejemplo si el `Object` etiqueta con un identificador de "myObject", el URI en el `Reference` etiqueta sería "#myObject".  Para no firmado objetos, no `Reference` es necesario.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ni <paramref name="parts" />, <paramref name="relationshipSelectors" />, <paramref name="signatureObjects" /> o <paramref name="objectReferences" /> especifican elementos que firmar.</exception>
        <exception cref="T:System.InvalidOperationException">Una propiedad <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> de un elemento que se firma hace referencia a una propiedad <see cref="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" /> vacía, cuyo valor es <see langword="null" /> o no definida.</exception>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="signatureId" /> no tiene un valor <see langword="null" /> y no es un identificador de esquema [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] válido (por ejemplo, empieza con un dígito numérico inicial).</exception>
      </Docs>
    </Member>
    <Member MemberName="SignatureOrigin">
      <MemberSignature Language="C#" Value="public Uri SignatureOrigin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SignatureOrigin" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureOrigin As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SignatureOrigin { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] del elemento original de la firma.</summary>
        <value>[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] del elemento original de la firma.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin%2A> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] puede variar según el paquete porque el nombre no se ha definido formalmente. Aunque esta implementación generalmente utilizará el mismo valor predeterminado, el valor devuelto por esta propiedad reflejará cualquier origen ya está presente en el actual <xref:System.IO.Packaging.Package>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureOriginRelationshipType">
      <MemberSignature Language="C#" Value="public static string SignatureOriginRelationshipType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SignatureOriginRelationshipType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SignatureOriginRelationshipType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ SignatureOriginRelationshipType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tipo de relación de origen de firma predeterminado.</summary>
        <value>Tipo de relación de origen de firma predeterminado.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Signatures">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Packaging.PackageDigitalSignature&gt; Signatures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IO.Packaging.PackageDigitalSignature&gt; Signatures" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.Signatures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Signatures As ReadOnlyCollection(Of PackageDigitalSignature)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Packaging::PackageDigitalSignature ^&gt; ^ Signatures { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Packaging::PackageDigitalSignature ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Packaging.PackageDigitalSignature&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de todas las firmas contenidas en el paquete.</summary>
        <value>Colección de todos los objetos <see cref="T:System.IO.Packaging.PackageDigitalSignature" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeFormat">
      <MemberSignature Language="C#" Value="public string TimeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TimeFormat" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TimeFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el formato de fecha y hora utilizado para crear la <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />de la firma.</summary>
        <value>Formato de fecha y hora utilizado para crear la <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />de la firma.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor predeterminado <xref:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat%2A> es "Aaaa-MM-sTZD".  
  
 Fecha y hora formatos seguir la sintaxis de la especificación "W3C Date and Time Formats" en [ http://www.w3.org/TR/Note-datetime.html ](http://www.w3.org/TR/Note-datetime.html). Los componentes que se muestra a continuación deben estar presente y utilizar la sintaxis y la puntuación, tal como se define.  
  
|TimeFormat|Descripción|Ejemplo|  
|----------------|-----------------|-------------|  
|YYYY|Year|2005|  
|AAAA-MM|Año y mes|2005-07|  
|YYYY-MM-DD|Fecha de finalización|2005-07-28|  
|AAAA-MM-Mmtzd|Completar la fecha más horas y minutos|2005-07-28T19:20-01:00|  
|AAAA-MM-DDThh:mm:ssTZD|Fecha de finalización más horas, minutos y segundos|2005-07-28T19:20:45-01:00|  
|AAAA-MM-sTZD|Fecha de finalización más horas, minutos y segundos con una fracción decimal|2005-07-28T19:20:45.75-01:00|  
  
 donde:  
  
|||  
|-|-|  
|YYYY|año de cuatro dígitos (por ejemplo 2005)|  
|MM|mes de dos dígitos (01 = enero)|  
|DD|día de dos dígitos del mes (del 01 al 31)|  
|Thh|hora de dos dígitos (00 a 23, 24 horas)|  
|mm|dos dígitos de minutos (00 a 59)|  
|ss|dos dígitos de segundos (de 00 a 59)|  
|s|uno o más dígitos que representa un fracción decimal de un segundo|  
|DZH|Designador de zona horaria (Z o + hh: mm o - hh: mm)|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />
      </Docs>
    </Member>
    <Member MemberName="TransformMapping">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;string,string&gt; TransformMapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, string&gt; TransformMapping" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransformMapping As Dictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::String ^, System::String ^&gt; ^ TransformMapping { System::Collections::Generic::Dictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un diccionario que contiene todos los objetos <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> definidos y su identificador <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> de [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] asociado.</summary>
        <value>Un diccionario que contiene cada uno define <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> y su [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> asociado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante una operación de inicio de sesión se aplica el algoritmo de transformación asociada para cada tipo de contenido antes de la <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> se ejecuta.  
  
 Las asignaciones predeterminadas de contenido y la transformación incluyen:  
  
|Contenido|Tipo de contenido|Identificador del algoritmo de transformación|  
|-------------|-----------------|------------------------------------|  
|Relación|"application/vnd.openxmlformats-package.relationships+xml"|<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>|  
|Firma digital|"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml"|<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyCertificate">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ChainStatusFlags VerifyCertificate (System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ChainStatusFlags VerifyCertificate(class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyCertificate (certificate As X509Certificate) As X509ChainStatusFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ChainStatusFlags VerifyCertificate(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ChainStatusFlags</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="certificate">Certificado X.509 que se va a comprobar.</param>
        <summary>Comprueba un certificado X.509 especificado.</summary>
        <returns>
          El valor de <see cref="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError" /> es 0 si el certificado se comprueba correctamente; de lo contrario, una enumeración bit a bit de marcadores de error.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="VerifySignatures">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.VerifyResult VerifySignatures (bool exitOnFailure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.IO.Packaging.VerifyResult VerifySignatures(bool exitOnFailure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifySignatures (exitOnFailure As Boolean) As VerifyResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::VerifyResult VerifySignatures(bool exitOnFailure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.VerifyResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exitOnFailure" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="exitOnFailure">
          Es <see langword="true" /> para salir en el primer error; de lo contrario, es <see langword="false" /> para continuar y comprobar todas las firmas.</param>
        <summary>Comprueba las firmas de todos los elementos firmados del paquete.</summary>
        <returns>
          El valor de <see cref="F:System.IO.Packaging.VerifyResult.Success" /> es 0, si todas las firmas se comprueban correctamente; de lo contrario, una enumeración que identifica el error.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método comprueba sólo las firmas digitales; no comprueba los certificados X.509 relacionados.  El <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate%2A> método se puede utilizar para comprobar los certificados X.509.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar este método para validar todos los elementos firmados dentro de un paquete.  Para obtener un ejemplo completo, vea [crear un paquete con un ejemplo de firma Digital](http://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigvalidate)]
 [!code-vb[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigvalidate)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" />
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)" />
        <altmember cref="T:System.IO.Packaging.InvalidSignatureEventHandler" />
      </Docs>
    </Member>
  </Members>
</Type>