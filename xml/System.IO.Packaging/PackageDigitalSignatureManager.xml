<Type Name="PackageDigitalSignatureManager" FullName="System.IO.Packaging.PackageDigitalSignatureManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e6eb371976675bde6275fcdc173b46cdbcf823fd" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53229329" /></Metadata><TypeSignature Language="C#" Value="public sealed class PackageDigitalSignatureManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PackageDigitalSignatureManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageDigitalSignatureManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PackageDigitalSignatureManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageDigitalSignatureManager sealed" />
  <TypeSignature Language="F#" Value="type PackageDigitalSignatureManager = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona una clase de utilidad para la creación y comprobación de firmas digitales en una clase <see cref="T:System.IO.Packaging.Package" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageDigitalSignatureManager> se basa en la arquitectura de .NET Framework, las clases de firma digital y proporciona una clase de utilidad para realizar tareas comunes de uso de firmas digitales con <xref:System.IO.Packaging.Package> elementos.  
  
 Para obtener más información sobre firmas digitales, vea el [estructura de firma Digital de Open Packaging Conventions](https://go.microsoft.com/fwlink/?LinkId=74494) artículo.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo usar el <xref:System.IO.Packaging.PackageDigitalSignatureManager>.  Para obtener un ejemplo completo, vea [creación de un paquete con un ejemplo de la firma Digital](https://go.microsoft.com/fwlink/?LinkID=159966).  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.Package" />
    <altmember cref="T:System.IO.Packaging.PackageDigitalSignature" />
    <altmember cref="T:System.Windows.Xps.Packaging.XpsDigitalSignature" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159966">Creación de un paquete con un ejemplo de la firma Digital</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Especificación Open Packaging Conventions (OPC)</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Estructura de firma digital de las convenciones de empaquetado abierto</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PackageDigitalSignatureManager (System.IO.Packaging.Package package);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Packaging.Package package) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PackageDigitalSignatureManager(System::IO::Packaging::Package ^ package);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.PackageDigitalSignatureManager : System.IO.Packaging.Package -&gt; System.IO.Packaging.PackageDigitalSignatureManager" Usage="new System.IO.Packaging.PackageDigitalSignatureManager package" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
      </Parameters>
      <Docs>
        <param name="package">Paquete asociado a este administrador de firmas.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.Packaging.PackageDigitalSignatureManager" /> para su uso con una clase <see cref="T:System.IO.Packaging.Package" /> especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El paquete de destino asociado con el Administrador de firma se establece durante la inicialización. Una vez que se establece, no se puede cambiar el paquete asociado con el Administrador de firma. Crear una nueva firma de administrador para cada paquete según sea necesario.  
  
   
  
## Examples  
 En el siguiente ejemplo se muestra cómo usar este constructor.  Para obtener un ejemplo completo, vea [creación de un paquete con un ejemplo de la firma Digital](https://go.microsoft.com/fwlink/?LinkID=159966).  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Packaging.PackageDigitalSignature" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Estructura de firma digital de las convenciones de empaquetado abierto</related>
      </Docs>
    </Member>
    <Member MemberName="CertificateOption">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.CertificateEmbeddingOption CertificateOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Packaging.CertificateEmbeddingOption CertificateOption" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificateOption As CertificateEmbeddingOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::CertificateEmbeddingOption CertificateOption { System::IO::Packaging::CertificateEmbeddingOption get(); void set(System::IO::Packaging::CertificateEmbeddingOption value); };" />
      <MemberSignature Language="F#" Value="member this.CertificateOption : System.IO.Packaging.CertificateEmbeddingOption with get, set" Usage="System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.CertificateEmbeddingOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la opción de inserción del certificado X.509 que el método <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" /> usa para firmar digitalmente las partes del paquete.</summary>
        <value>Uno de los valores de <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad especifica donde se almacenará el certificado X.509 del firmante al firmar digitalmente un elemento.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo establecer esta propiedad como preparación para firmar digitalmente las partes dentro de un paquete.  Para obtener un ejemplo completo, vea [creación de un paquete con un ejemplo de la firma Digital](https://go.microsoft.com/fwlink/?LinkID=159966).  
  
  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Estructura de firma digital de las convenciones de empaquetado abierto</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Countersign">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Contrafirma las firmas del paquete con un certificado X.509 especificado.</summary>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Estructura de firma digital de las convenciones de empaquetado abierto</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Countersign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Countersign ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Countersign() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign" />
      <MemberSignature Language="VB.NET" Value="Public Function Countersign () As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Countersign();" />
      <MemberSignature Language="F#" Value="member this.Countersign : unit -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Countersign " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Contrafirma todas las firmas del paquete con un certificado X.509 seleccionado por el usuario.</summary>
        <returns>Firma que se agregó como contrafirma o <see langword="null" /> si no se encontró ningún certificado o el usuario canceló el cuadro de diálogo de selección de certificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si no se especifica ningún certificado X.509 en la llamada, este método abre un cuadro de diálogo de selección de certificado que se solicita al usuario elegir un certificado que se usará para firmar.  
  
 Establece el identificador de ventana la <xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A> propiedad antes de llamar a <xref:System.IO.Packaging.PackageDigitalSignatureManager.Countersign%2A> para hacer que el cuadro de diálogo de selección de certificado modal respecto a la ventana especificada.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Estructura de firma digital de las convenciones de empaquetado abierto</related>
      </Docs>
    </Member>
    <Member MemberName="Countersign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Countersign (System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Countersign(class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Countersign (certificate As X509Certificate) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Countersign(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberSignature Language="F#" Value="member this.Countersign : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Countersign certificate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="certificate">Certificado X.509 que se debe agregar como contrafirma.</param>
        <summary>Contrafirma todas las signaturas del paquete con un certificado X.509 especificado.</summary>
        <returns>Signatura que se agregó como contrafirma.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="certificate" /> es <see langword="null" /></exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Estructura de firma digital de las convenciones de empaquetado abierto</related>
      </Docs>
    </Member>
    <Member MemberName="Countersign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Countersign (System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;Uri&gt; signatures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Countersign(class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; signatures) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})" />
      <MemberSignature Language="VB.NET" Value="Public Function Countersign (certificate As X509Certificate, signatures As IEnumerable(Of Uri)) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Countersign(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ signatures);" />
      <MemberSignature Language="F#" Value="member this.Countersign : System.Security.Cryptography.X509Certificates.X509Certificate * seq&lt;Uri&gt; -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Countersign (certificate, signatures)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="signatures" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
      </Parameters>
      <Docs>
        <param name="certificate">Certificado X.509 que se usará para contrafirmar cada uno de los elementos <paramref name="signatures" /> especificados.</param>
        <param name="signatures">Lista de firmas que se van a contrafirmar.</param>
        <summary>Contrafirma una lista de firmas con un certificado X.509 determinado.</summary>
        <returns>Firma digital usada para contrafirmar cada uno de los elementos <paramref name="signatures" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">O bien el parámetro <paramref name="certificate" /> o el parámetro <paramref name="signatures" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">El paquete no contiene objetos <see cref="T:System.IO.Packaging.PackagePart" /> firmados.</exception>
        <exception cref="T:System.ArgumentException">El paquete no contiene partes <see cref="T:System.IO.Packaging.PackageDigitalSignature" />.</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Estructura de firma digital de las convenciones de empaquetado abierto</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultHashAlgorithm">
      <MemberSignature Language="C#" Value="public static string DefaultHashAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string DefaultHashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultHashAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DefaultHashAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultHashAlgorithm : string" Usage="System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una cadena del [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] que identifica el algoritmo hash predeterminado usado para crear y comprobar firmas.</summary>
        <value>Cadena del [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] que identifica el algoritmo hash predeterminado usado para crear y comprobar firmas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El algoritmo hash predeterminado para el estándar <xref:System.IO.Packaging.PackageDigitalSignatureManager> clase es <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> ([!INCLUDE[TLA#tla_sha1](~/includes/tlasharptla-sha1-md.md)]).  
  
 El <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> propiedad obtiene o establece el algoritmo de hash real que se usa para crear y comprobar firmas.  
  
 El <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A> propiedad normalmente se usa para restablecer el <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> propiedad predeterminada después de un cambio temporal.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.Xml.SignedXml" />
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="GetSignature">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature GetSignature (Uri signatureUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature GetSignature(class System.Uri signatureUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSignature (signatureUri As Uri) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ GetSignature(Uri ^ signatureUri);" />
      <MemberSignature Language="F#" Value="member this.GetSignature : Uri -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.GetSignature signatureUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signatureUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="signatureUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de la firma digital que se va a devolver.</param>
        <summary>Devuelve la firma digital de un [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] de firma especificado.</summary>
        <returns>Su valor es la firma digital del <paramref name="signatureUri" /> especificado o <see langword="null" />, si no se puede encontrar una firma para el <paramref name="signatureUri" /> especificado.</returns>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Estructura de firma digital de las convenciones de empaquetado abierto</related>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public string HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HashAlgorithm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : string with get, set" Usage="System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el identificador de [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] para la instancia <see cref="T:System.Security.Cryptography.HashAlgorithm" /> usada para crear y comprobar firmas.</summary>
        <value>El <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] identificador para el <see cref="T:System.Security.Cryptography.HashAlgorithm" /> instancia utilizada para crear y comprobar firmas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es el identificador del algoritmo hash predeterminado para el Administrador de firma digital estándar <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> (<xref:System.Security.Cryptography.SHA1> -Secure Hash Algorithm versión 1.0).  
  
 A menos que explícitamente lo contrario, establezca esta propiedad obtiene el mismo valor que <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>.  
  
 El <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> propiedad normalmente no se cambia a su valor predeterminado. Esta propiedad se debe cambiar solo si una firma que usa un diferentes conocido y accesible <xref:System.Security.Cryptography.HashAlgorithm> se encuentra.  Cuando haya terminado con la firma que usa un algoritmo hash diferente, llame a <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A> para restablecer el <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> propiedad predeterminada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de la cadena del [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] que se va a establecer es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">El valor de la cadena del [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] que se va a establecer está vacío.</exception>
        <altmember cref="T:System.Security.Cryptography.Xml.SignedXml" />
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm" />
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignature.SignatureValue" />
      </Docs>
    </Member>
    <Member MemberName="InvalidSignatureEvent">
      <MemberSignature Language="C#" Value="public event System.IO.Packaging.InvalidSignatureEventHandler InvalidSignatureEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.Packaging.InvalidSignatureEventHandler InvalidSignatureEvent" />
      <MemberSignature Language="DocId" Value="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Event InvalidSignatureEvent As InvalidSignatureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::Packaging::InvalidSignatureEventHandler ^ InvalidSignatureEvent;" />
      <MemberSignature Language="F#" Value="member this.InvalidSignatureEvent : System.IO.Packaging.InvalidSignatureEventHandler " Usage="member this.InvalidSignatureEvent : System.IO.Packaging.InvalidSignatureEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.InvalidSignatureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando el método <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> detecta una firma no válida.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSigned { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSigned : bool" Usage="System.IO.Packaging.PackageDigitalSignatureManager.IsSigned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el paquete contiene firmas.</summary>
        <value>Es <see langword="true" /> si el paquete contiene firmas; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A> propiedad no lleva a cabo validaciones de firmas. Si están presentes las firmas y <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A> es `true`, una o varias de las firmas pueden no ser válidos.  Llame a <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures%2A> para confirmar que las firmas son válidas y que no han cambiado.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo usar el <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A> propiedad para determinar si un paquete contiene firmas digitales.  Para obtener un ejemplo completo, vea [creación de un paquete con un ejemplo de la firma Digital](https://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigvalidate)]
 [!code-vb[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigvalidate)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Estructura de firma digital de las convenciones de empaquetado abierto</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Especificación Open Packaging Conventions (OPC)</related>
      </Docs>
    </Member>
    <Member MemberName="ParentWindow">
      <MemberSignature Language="C#" Value="public IntPtr ParentWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ParentWindow" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentWindow As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ParentWindow { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.ParentWindow : nativeint with get, set" Usage="System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un identificador en la ventana primaria para mostrar un cuadro de diálogo de selección de certificado.</summary>
        <value>Identificador de la ventana primaria para usarlo con el fin de mostrar el cuadro de diálogo de selección de certificado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se muestra un cuadro de diálogo de selección de certificado solo si un <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> llamada no contiene ningún certificado. Si no se especifica ningún certificado, <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> mostrará un cuadro de diálogo de selección de certificado que permite al usuario elegir qué certificado utilizar para firmar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllSignatures">
      <MemberSignature Language="C#" Value="public void RemoveAllSignatures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllSignatures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAllSignatures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAllSignatures();" />
      <MemberSignature Language="F#" Value="member this.RemoveAllSignatures : unit -&gt; unit" Usage="packageDigitalSignatureManager.RemoveAllSignatures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quita todas las firmas digitales del paquete.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método también quita todos los certificados X.509 del paquete.  Después de quitar todas las firmas y certificados, llame a <xref:System.IO.Packaging.Package.Flush%2A> para conservar todos los cambios en el almacén.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.PackageDigitalSignatureManager.Sign" />
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)" />
        <altmember cref="T:System.IO.Packaging.PackageDigitalSignature" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Estructura de firma digital de las convenciones de empaquetado abierto</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveSignature">
      <MemberSignature Language="C#" Value="public void RemoveSignature (Uri signatureUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveSignature(class System.Uri signatureUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSignature (signatureUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveSignature(Uri ^ signatureUri);" />
      <MemberSignature Language="F#" Value="member this.RemoveSignature : Uri -&gt; unit" Usage="packageDigitalSignatureManager.RemoveSignature signatureUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signatureUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="signatureUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> que se quitará.</param>
        <summary>Quita la firma digital con un [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] de signatura determinado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método también quita el certificado X.509 asociado si no se hace referencia por ninguna otra firma digital.  
  
 Después de quitar una firma, llame a <xref:System.IO.Packaging.Package.Flush%2A> para conservar el cambio en el almacén.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Estructura de firma digital de las convenciones de empaquetado abierto</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sign">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Firma una lista de elementos de paquete con un certificado X.509 especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo siguiente muestra los pasos para firmar digitalmente una lista de elementos de un <xref:System.IO.Packaging.Package>.  Para obtener un ejemplo completo, vea [creación de un paquete con un ejemplo de la firma Digital](https://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Estructura de firma digital de las convenciones de empaquetado abierto</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri)) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts);" />
      <MemberSignature Language="F#" Value="member this.Sign : seq&lt;Uri&gt; -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Sign parts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
      </Parameters>
      <Docs>
        <param name="parts">Lista de [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] de los elementos <see cref="T:System.IO.Packaging.PackagePart" /> que se van a firmar.</param>
        <summary>Pide al usuario un certificado X.509, que se usa para firmar digitalmente una lista de elementos del paquete especificada.</summary>
        <returns>Firma digital usada para firmar la lista de <paramref name="parts" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para que el cuadro de diálogo de selección de certificado modal respecto a una ventana determinada, establezca el <xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A> propiedad antes de llamar a <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>.  
  
 <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> no se le pedirá para los certificados si no hay ninguno en el almacén de certificados predeterminado.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo firmar digitalmente una lista de elementos del paquete.  Para obtener un ejemplo completo, vea el [creación de un paquete con un ejemplo de la firma Digital](https://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Estructura de firma digital de las convenciones de empaquetado abierto</related>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri), certificate As X509Certificate) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts, System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberSignature Language="F#" Value="member this.Sign : seq&lt;Uri&gt; * System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Sign (parts, certificate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="parts">Lista de [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] de los elementos <see cref="T:System.IO.Packaging.PackagePart" /> que se van a firmar.</param>
        <param name="certificate">Certificado X.509 que se va a usar para firmar digitalmente cada uno de los <paramref name="parts" /> especificados.</param>
        <summary>Firma una lista de elementos de paquete con un certificado X.509 especificado.</summary>
        <returns>Firma digital usada para firmar la lista proporcionada de <paramref name="parts" />; o <see langword="null" /> si no se encontró ningún certificado o el usuario hizo clic en "Cancelar" en el cuadro de diálogo de selección de certificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo siguiente muestra cómo firmar digitalmente una lista de elementos de un <xref:System.IO.Packaging.Package>.  Para obtener un ejemplo completo, vea el [creación de un paquete con un ejemplo de la firma Digital](https://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Estructura de firma digital de las convenciones de empaquetado abierto</related>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri), certificate As X509Certificate, relationshipSelectors As IEnumerable(Of PackageRelationshipSelector)) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts, System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, System::Collections::Generic::IEnumerable&lt;System::IO::Packaging::PackageRelationshipSelector ^&gt; ^ relationshipSelectors);" />
      <MemberSignature Language="F#" Value="member this.Sign : seq&lt;Uri&gt; * System.Security.Cryptography.X509Certificates.X509Certificate * seq&lt;System.IO.Packaging.PackageRelationshipSelector&gt; -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Sign (parts, certificate, relationshipSelectors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="relationshipSelectors" Type="System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt;" />
      </Parameters>
      <Docs>
        <param name="parts">Lista de [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] para los objetos <see cref="T:System.IO.Packaging.PackagePart" /> que se van a firmar.</param>
        <param name="certificate">Certificado X.509 que se va a usar para firmar digitalmente cada uno de los elementos y relaciones especificados.</param>
        <param name="relationshipSelectors">Lista de objetos <see cref="T:System.IO.Packaging.PackageRelationship" /> que se van a firmar.</param>
        <summary>Firma una lista de partes de paquete y relaciones de paquete con un certificado X.509 especificado.</summary>
        <returns>Firma digital que se usa para firmar los elementos especificados en las listas de los parámetros <paramref name="parts" /> y <paramref name="relationshipSelectors" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entre `parts` y `relationshipSelectors` debe haber al menos un elemento para iniciar sesión.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo firmar digitalmente una lista de elementos del paquete.  Para obtener un ejemplo completo, vea el [creación de un paquete con un ejemplo de la firma Digital](https://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ni <paramref name="parts" /> ni <paramref name="relationshipSelectors" /> especifican objetos para firmar.</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Estructura de firma digital de las convenciones de empaquetado abierto</related>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri), certificate As X509Certificate, relationshipSelectors As IEnumerable(Of PackageRelationshipSelector), signatureId As String) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts, System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, System::Collections::Generic::IEnumerable&lt;System::IO::Packaging::PackageRelationshipSelector ^&gt; ^ relationshipSelectors, System::String ^ signatureId);" />
      <MemberSignature Language="F#" Value="member this.Sign : seq&lt;Uri&gt; * System.Security.Cryptography.X509Certificates.X509Certificate * seq&lt;System.IO.Packaging.PackageRelationshipSelector&gt; * string -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Sign (parts, certificate, relationshipSelectors, signatureId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="relationshipSelectors" Type="System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt;" />
        <Parameter Name="signatureId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parts">Lista de [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] para los objetos <see cref="T:System.IO.Packaging.PackagePart" /> que se van a firmar.</param>
        <param name="certificate">Certificado X.509 que se va a usar para firmar digitalmente cada uno de los elementos y relaciones especificados.</param>
        <param name="relationshipSelectors">Lista de objetos <see cref="T:System.IO.Packaging.PackageRelationship" /> que se van a firmar.</param>
        <param name="signatureId">Cadena de identificación que se asociará a la firma.</param>
        <summary>Firma una lista de partes de paquete y relaciones de paquete con un certificado X.509 y [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] especificados.</summary>
        <returns>Firma digital que se usa para firmar los elementos especificados en las listas de los parámetros <paramref name="parts" /> y <paramref name="relationshipSelectors" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `parts` lista puede estar vacía o `null` si `relationshipSelectors` contiene al menos una entrada.  
  
 El `relationshipSelectors` lista puede estar vacía o `null` si `parts` contiene al menos una entrada.  
  
 Entre los `parts` lista y `relationshipSelectors` debe haber al menos un elemento para iniciar sesión.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo firmar digitalmente una lista de elementos del paquete.  Para obtener un ejemplo completo, vea el [creación de un paquete con un ejemplo de la firma Digital](https://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ni el parámetro <paramref name="parts" /> ni el <paramref name="relationshipSelectors" /> especifican elementos que se deban firmar.</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Estructura de firma digital de las convenciones de empaquetado abierto</related>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId, System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.DataObject&gt; signatureObjects, System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.Reference&gt; objectReferences);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Cryptography.Xml.DataObject&gt; signatureObjects, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Cryptography.Xml.Reference&gt; objectReferences) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri), certificate As X509Certificate, relationshipSelectors As IEnumerable(Of PackageRelationshipSelector), signatureId As String, signatureObjects As IEnumerable(Of DataObject), objectReferences As IEnumerable(Of Reference)) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts, System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, System::Collections::Generic::IEnumerable&lt;System::IO::Packaging::PackageRelationshipSelector ^&gt; ^ relationshipSelectors, System::String ^ signatureId, System::Collections::Generic::IEnumerable&lt;System::Security::Cryptography::Xml::DataObject ^&gt; ^ signatureObjects, System::Collections::Generic::IEnumerable&lt;System::Security::Cryptography::Xml::Reference ^&gt; ^ objectReferences);" />
      <MemberSignature Language="F#" Value="member this.Sign : seq&lt;Uri&gt; * System.Security.Cryptography.X509Certificates.X509Certificate * seq&lt;System.IO.Packaging.PackageRelationshipSelector&gt; * string * seq&lt;System.Security.Cryptography.Xml.DataObject&gt; * seq&lt;System.Security.Cryptography.Xml.Reference&gt; -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Sign (parts, certificate, relationshipSelectors, signatureId, signatureObjects, objectReferences)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="relationshipSelectors" Type="System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt;" />
        <Parameter Name="signatureId" Type="System.String" />
        <Parameter Name="signatureObjects" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.DataObject&gt;" />
        <Parameter Name="objectReferences" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.Reference&gt;" />
      </Parameters>
      <Docs>
        <param name="parts">Lista de [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] para los objetos <see cref="T:System.IO.Packaging.PackagePart" /> que se van a firmar.</param>
        <param name="certificate">Certificado X.509 que se va a usar para firmar digitalmente cada uno de los elementos y relaciones especificados.</param>
        <param name="relationshipSelectors">Lista de objetos <see cref="T:System.IO.Packaging.PackageRelationship" /> que se van a firmar.</param>
        <param name="signatureId">Cadena de identificación para asociar a la firma.</param>
        <param name="signatureObjects">Lista de objetos de datos personalizados que firmar.</param>
        <param name="objectReferences">Lista de referencias a objetos personalizados que firmar.</param>
        <summary>Firma una lista de elementos de paquete, relaciones de paquete u objetos personalizados con un certificado X.509 especificado y un [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] de firma.</summary>
        <returns>Firma digital que se usa para firmar los elementos especificados en las listas de los parámetros <paramref name="parts" /> y <paramref name="relationshipSelectors" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Debe haber al menos un elemento para iniciar sesión en `parts`, `relationshipSelectors`, `signatureObjects`, o `objectReferences`.  
  
> [!NOTE]
>  Los términos `Object`, `Manifest`, `Reference`, `SignatureProperties`, y `Transform` en los siguientes dos observaciones hacen referencia a tipos de elementos y etiquetas definidas por la especificación W3C XML-Signature Syntax and Processing, vea [ https://www.w3.org/TR/xmldsig-core/ ](https://www.w3.org/TR/xmldsig-core/).  
  
 Esta y otras <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> sobrecargas del método utilizar actual <xref:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping%2A> diccionario que define un `Transform` a aplicar basándose en la parte del paquete <xref:System.IO.Packaging.PackagePart.ContentType%2A>.  La especificación de Microsoft Open Packaging Conventions (OPC) permite actualmente sólo dos válido `Transform` algoritmos: C14 y C14N.  No se permite vacía la norma W3C XML-Signature Syntax and Processing `Manifest` etiquetas.  También requiere la especificación de Open Packaging Conventions un <xref:System.IO.Packaging.Package>-específico `Object` etiqueta que contiene ambos `Manifest` y `SignatureProperties` etiquetas.  Cada `Manifest` además de etiquetas también incluir al menos un `Reference` etiqueta.  Estas etiquetas requieren que cada firma firme, al menos una <xref:System.IO.Packaging.PackagePart> (etiqueta partes no vacías) o <xref:System.IO.Packaging.PackageRelationship> (no vacíos `relationshipSelectors`) incluso si la firma solo es necesario para iniciar sesión `signatureObjects` o `objectReferences`.  
  
 Esto <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> método omite la <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A> propiedad asociada a cada <xref:System.Security.Cryptography.Xml.Reference> definido en `objectReferences`.  
  
 Esto <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> sobrecarga proporciona compatibilidad para la generación de [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] firmas que requieren personalizado `Object` etiquetas.  Para cualquier proporcionado `Object` que va a firmar, etiqueta correspondiente `Reference` etiqueta debe proporcionarse con un [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] que especifica la `Object` etiqueta en la sintaxis de fragmento local.  Por ejemplo si el `Object` etiqueta tiene un identificador de "MiObjeto", el URI en el `Reference` etiqueta sería "#myObject".  Para no firmado, los objetos no `Reference` es necesario.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ninguno de los parámetros <paramref name="parts" />, <paramref name="relationshipSelectors" />, <paramref name="signatureObjects" /> y <paramref name="objectReferences" /> especifican elementos para firmar.</exception>
        <exception cref="T:System.InvalidOperationException">Una propiedad <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> de un elemento cuya firma está en curso hace referencia a una propiedad <see cref="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" /> vacía, no definida o que tiene un valor <see langword="null" />.</exception>
        <exception cref="T:System.Xml.XmlException"><paramref name="signatureId" /> no tiene un valor <see langword="null" /> y no es un identificador de esquema [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] válido (por ejemplo, empieza con un dígito numérico inicial).</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Estructura de firma digital de las convenciones de empaquetado abierto</related>
      </Docs>
    </Member>
    <Member MemberName="SignatureOrigin">
      <MemberSignature Language="C#" Value="public Uri SignatureOrigin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SignatureOrigin" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureOrigin As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SignatureOrigin { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureOrigin : Uri" Usage="System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] del elemento original de la firma.</summary>
        <value>[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] del elemento original de la firma.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin%2A> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] puede variar por paquete porque el nombre no está definido formalmente. Aunque esta implementación generalmente utilizará el mismo valor predeterminado, el valor devuelto por esta propiedad reflejará cualquier origen ya está presente en el actual <xref:System.IO.Packaging.Package>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureOriginRelationshipType">
      <MemberSignature Language="C#" Value="public static string SignatureOriginRelationshipType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SignatureOriginRelationshipType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SignatureOriginRelationshipType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ SignatureOriginRelationshipType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureOriginRelationshipType : string" Usage="System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tipo de relación de origen de firma predeterminado.</summary>
        <value>Tipo de relación de origen de firma predeterminado.</value>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Estructura de firma digital de las convenciones de empaquetado abierto</related>
      </Docs>
    </Member>
    <Member MemberName="Signatures">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Packaging.PackageDigitalSignature&gt; Signatures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IO.Packaging.PackageDigitalSignature&gt; Signatures" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.Signatures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Signatures As ReadOnlyCollection(Of PackageDigitalSignature)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Packaging::PackageDigitalSignature ^&gt; ^ Signatures { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Packaging::PackageDigitalSignature ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Signatures : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Packaging.PackageDigitalSignature&gt;" Usage="System.IO.Packaging.PackageDigitalSignatureManager.Signatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Packaging.PackageDigitalSignature&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de todas las firmas contenidas en el paquete.</summary>
        <value>Colección de todos los objetos <see cref="T:System.IO.Packaging.PackageDigitalSignature" />.</value>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Estructura de firma digital de las convenciones de empaquetado abierto</related>
      </Docs>
    </Member>
    <Member MemberName="TimeFormat">
      <MemberSignature Language="C#" Value="public string TimeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TimeFormat" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TimeFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TimeFormat : string with get, set" Usage="System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el formato de fecha y hora utilizado para crear la <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />de la firma.</summary>
        <value>Formato de fecha y hora utilizado para crear la <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />de la firma.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor predeterminado <xref:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat%2A> es "Aaaa-MM-sTZD".  
  
 Fecha y hora formatos siguen la sintaxis de la especificación "W3C Date and Time Formats" en [ http://www.w3.org/TR/Note-datetime.html ](http://www.w3.org/TR/Note-datetime.html). Los componentes que se muestra a continuación deben estar presente y utilizar la sintaxis y la puntuación, tal como se define.  
  
|El parámetro TimeFormat|Descripción|Ejemplo|  
|----------------|-----------------|-------------|  
|YYYY|Year|2005|  
|AAAA-MM|Año y mes|2005-07|  
|YYYY-MM-DD|Fecha de finalización|2005-07-28|  
|AAAA-MM-Mmtzd|Completar la fecha más horas y minutos|2005-07-28T19:20-01:00|  
|AAAA-MM-DDThh:mm:ssTZD|Fecha de finalización más horas, minutos y segundos|2005-07-28T19:20:45-01:00|  
|AAAA-MM-sTZD|Fecha de finalización más horas, minutos y segundos con una fracción decimal|2005-07-28T19:20:45.75-01:00|  
  
 donde:  
  
|||  
|-|-|  
|YYYY|año de cuatro dígitos (por ejemplo, 2005)|  
|MM|mes de dos dígitos (01 = enero)|  
|DD|día de dos dígitos del mes (del 01 al 31)|  
|Thh|hora de dos dígitos (00 a 23, 24 horas)|  
|mm|dos dígitos de minutos (00 a 59)|  
|ss|dos dígitos de segundos (de 00 a 59)|  
|s|uno o más dígitos que representa un fracción decimal de un segundo|  
|DZH|Designador de zona horaria (Z o + hh: mm o - hh: mm)|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Estructura de firma digital de las convenciones de empaquetado abierto</related>
      </Docs>
    </Member>
    <Member MemberName="TransformMapping">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;string,string&gt; TransformMapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, string&gt; TransformMapping" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransformMapping As Dictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::String ^, System::String ^&gt; ^ TransformMapping { System::Collections::Generic::Dictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransformMapping : System.Collections.Generic.Dictionary&lt;string, string&gt;" Usage="System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un diccionario que contiene todos los objetos <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> definidos y su identificador <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> de [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] asociado.</summary>
        <value>Un diccionario que contiene cada uno definido <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> y sus asociados [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> asociado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante una operación de inicio de sesión se aplica el algoritmo de transformación para cada tipo de contenido antes de la <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> se ejecuta.  
  
 Las asignaciones predeterminadas de contenido y de transformación incluyen:  
  
|Contenido|ContentType|Identificador del algoritmo de transformación|  
|-------------|-----------------|------------------------------------|  
|Relación|"application/vnd.openxmlformats-package.relationships+xml"|<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>|  
|Firma digital|"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml"|<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>|  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Estructura de firma digital de las convenciones de empaquetado abierto</related>
      </Docs>
    </Member>
    <Member MemberName="VerifyCertificate">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ChainStatusFlags VerifyCertificate (System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ChainStatusFlags VerifyCertificate(class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyCertificate (certificate As X509Certificate) As X509ChainStatusFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ChainStatusFlags VerifyCertificate(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberSignature Language="F#" Value="static member VerifyCertificate : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" Usage="System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate certificate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ChainStatusFlags</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="certificate">Certificado X.509 que se va a comprobar.</param>
        <summary>Comprueba un certificado X.509 especificado.</summary>
        <returns>Devuelve <see cref="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError" /> (valor 0) si el certificado se comprueba correctamente; de lo contrario, devuelve una enumeración bit a bit de marcas de error.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Estructura de firma digital de las convenciones de empaquetado abierto</related>
      </Docs>
    </Member>
    <Member MemberName="VerifySignatures">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.VerifyResult VerifySignatures (bool exitOnFailure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.IO.Packaging.VerifyResult VerifySignatures(bool exitOnFailure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifySignatures (exitOnFailure As Boolean) As VerifyResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::VerifyResult VerifySignatures(bool exitOnFailure);" />
      <MemberSignature Language="F#" Value="member this.VerifySignatures : bool -&gt; System.IO.Packaging.VerifyResult" Usage="packageDigitalSignatureManager.VerifySignatures exitOnFailure" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.VerifyResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exitOnFailure" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="exitOnFailure">Use <see langword="true" /> para salir del primer error; de lo contrario, use <see langword="false" /> para continuar y comprobar todas las firmas.</param>
        <summary>Comprueba las firmas de todos los elementos firmados del paquete.</summary>
        <returns><see cref="F:System.IO.Packaging.VerifyResult.Success" /> (valor 0) si todas las firmas se comprueban correctamente; de lo contrario, una enumeración que identifica el error.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método comprueba sólo las firmas digitales; no comprueba los certificados X.509 relacionados.  El <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate%2A> método puede utilizarse para comprobar los certificados X.509.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo usar este método para validar todos los elementos firmados dentro de un paquete.  Para obtener un ejemplo completo, vea [creación de un paquete con un ejemplo de la firma Digital](https://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigvalidate)]
 [!code-vb[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigvalidate)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" />
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)" />
        <altmember cref="T:System.IO.Packaging.InvalidSignatureEventHandler" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Estructura de firma digital de las convenciones de empaquetado abierto</related>
      </Docs>
    </Member>
  </Members>
</Type>