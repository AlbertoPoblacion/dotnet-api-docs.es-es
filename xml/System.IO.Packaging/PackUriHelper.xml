<Type Name="PackUriHelper" FullName="System.IO.Packaging.PackUriHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="76405508cd622725c1bbd78654581656493a3fed" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51870201" /></Metadata><TypeSignature Language="C#" Value="public static class PackUriHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed PackUriHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackUriHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class PackUriHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackUriHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type PackUriHelper = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona métodos de utilidad para crear y analizar objetos de URI de paquete.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ComparePackUri">
      <MemberSignature Language="C#" Value="public static int ComparePackUri (Uri firstPackUri, Uri secondPackUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ComparePackUri(class System.Uri firstPackUri, class System.Uri secondPackUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComparePackUri (firstPackUri As Uri, secondPackUri As Uri) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ComparePackUri(Uri ^ firstPackUri, Uri ^ secondPackUri);" />
      <MemberSignature Language="F#" Value="static member ComparePackUri : Uri * Uri -&gt; int" Usage="System.IO.Packaging.PackUriHelper.ComparePackUri (firstPackUri, secondPackUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstPackUri" Type="System.Uri" />
        <Parameter Name="secondPackUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="firstPackUri">Primer Pack URI.</param>
        <param name="secondPackUri">Segundo Pack URI.</param>
        <summary>Devuelve un valor que indica si dos Pack URI son equivalentes.</summary>
        <returns>Entero con signo que indica la relación entre <paramref name="firstPackUri" /> y <paramref name="secondPackUri" />.  
  
 <list type="table"><listheader><term> Valor 
 </term><description> Significado 
 </description></listheader><item><term> Menor que 0 
 </term><description><paramref name="firstPackUri" /> es menor que <paramref name="secondPackUri" />.  
  
 </description></item><item><term> 0 
 </term><description><paramref name="firstPackUri" /> es equivalente a <paramref name="secondPackUri" />.  
  
 </description></item><item><term> Mayor que 0 
 </term><description><paramref name="firstPackUri" /> es mayor que <paramref name="secondPackUri" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si ambos `firstPackUri` y `secondPackUri` son `null`, <xref:System.IO.Packaging.PackUriHelper.ComparePackUri%2A> devuelve 0. Cuando se comparan los URI de paquete, un URI nulo siempre es menor que un URI distinto de null.    Para los casos donde `firstPackUri` y `secondPackUri` son ambos absoluta pack URI, <xref:System.IO.Packaging.PackUriHelper.ComparePackUri%2A> realiza la comparación.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Los parámetros <paramref name="firstPackUri" /> o <paramref name="secondPackUri" /> no son identificadores [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] absolutos.  
  
O bien 
Los parámetros <paramref name="firstPackUri" /> o <paramref name="secondPackUri" /> no comienzan con un esquema "pack://".</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="ComparePartUri">
      <MemberSignature Language="C#" Value="public static int ComparePartUri (Uri firstPartUri, Uri secondPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ComparePartUri(class System.Uri firstPartUri, class System.Uri secondPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComparePartUri (firstPartUri As Uri, secondPartUri As Uri) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ComparePartUri(Uri ^ firstPartUri, Uri ^ secondPartUri);" />
      <MemberSignature Language="F#" Value="static member ComparePartUri : Uri * Uri -&gt; int" Usage="System.IO.Packaging.PackUriHelper.ComparePartUri (firstPartUri, secondPartUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstPartUri" Type="System.Uri" />
        <Parameter Name="secondPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="firstPartUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de la primera parte de paquete <see cref="T:System.IO.Packaging.PackagePart" />.</param>
        <param name="secondPartUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de la segunda parte de paquete <see cref="T:System.IO.Packaging.PackagePart" />.</param>
        <summary>Devuelve un valor que indica si dos [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)] de parte de paquete son equivalentes.</summary>
        <returns>Un valor que indica la relación entre <paramref name="firstPartUri" /> y <paramref name="secondPartUri" />.  
  
 <list type="table"><listheader><term> Valor 
 </term><description> Significado 
 </description></listheader><item><term> Menor que 0 
 </term><description><paramref name="firstPartUri" /> es menor que <paramref name="secondPartUri" />.  
  
 </description></item><item><term> 0 
 </term><description><paramref name="firstPartUri" /> es equivalente a <paramref name="secondPartUri" />.  
  
 </description></item><item><term> Mayor que 0 
 </term><description><paramref name="firstPartUri" /> es mayor que <paramref name="secondPartUri" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si ambos `firstPartUri` y `secondPartUri` son `null`, <xref:System.IO.Packaging.PackUriHelper.ComparePartUri%2A> devuelve 0. Al comparar <xref:System.IO.Packaging.PackagePart> [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)], un valor null [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] siempre es menor que un valor no null [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]. Para los casos donde `firstPartUri` y `secondPartUri` son ambos relativos <xref:System.IO.Packaging.PackagePart> URI, <xref:System.IO.Packaging.PackUriHelper.ComparePartUri%2A> realiza la comparación.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Las sintaxis de <paramref name="firstPartUri" /> o de <paramref name="secondPartUri" /> no se corresponden con sintaxis válidas para [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de parte.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un nuevo URI de paquete.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En la tabla siguiente se muestra casos de ejemplo de la <xref:System.IO.Packaging.PackUriHelper.Create%2A> método.  
  
|`packageUri`|`partUri`|`fragment`|Pack URI devuelto|  
|------------------|---------------|----------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|/Page1.Xaml|#intro|pack://http:,,www.proseware.com,mypackage.pkg/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|/Page2.Xaml|**null**|Pack://http:,, www.proseware.com, mypackage.pkg/page2.xaml|  
|http://www.proseware.com/mypackage.pkg|/a/page4.Xaml|**null**|Pack://http:,, www.proseware.com, mypackage.pkg/a/page4.xaml|  
|http://www.proseware.com/mypackage.pkg|/%41/%61.Xml|**null**|Pack://http:,, www.proseware.com, mypackage.pkg/A/a.xml|  
|http://www.proseware.com/mypackage.pkg|/%25XY.Xml|**null**|Pack://http:,, www.proseware.com, mypackage.pkg/%25XY.xml|  
|http://www.proseware.com/mypackage.pkg|/a/page5.Xaml|#summary|Pack://http:,, www.proseware.com, mypackage.pkg/a/page5.xaml#summary|  
|http://www.proseware.com/packages.aspx?pkg04|/Page1.Xaml|#intro|Pack://http:,, www.proseware.com, packages.aspx%3fpkg04/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|**null**|**null**|Pack://http:,, www.proseware.com, mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|/a/MyDoc.Xaml|**null**|Pack://FTP:,, ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  
|File:///d:/Packages/mypackage2.pkg|/a/bar.Xaml|#xref|Pack://file:,, d:,packages,mypackage2.pkg/a/bar.xaml#xref|  
  
 Crear un URI de paquete es un proceso de varios pasos.  Por ejemplo, es un paso para formar un pack URI reemplazar los caracteres de barra diagonal (/) de la `packageUri` con comas (,).  
  
 Para obtener más información sobre la conversión de cadena y cómo se forman los URI de paquete, vea el apéndice A.4 "Ejemplos de conversión de cadena" y el apéndice B.3 "Composing a Pack URI" en la especificación de Open Packaging Conventions disponible para su descarga en [especificaciones y las descargas de licencias](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Especificación Open Packaging Conventions</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create packageUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="packageUri">URI del paquete <see cref="T:System.IO.Packaging.Package" /> al que se hace referencia.</param>
        <summary>Crea un nuevo elemento Pack URI que apunta a un paquete.</summary>
        <returns>El elemento Pack URI del paquete <see cref="T:System.IO.Packaging.Package" /> al que hace referencia el elemento <paramref name="packageUri" /> dado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` no se puede especificar como `null` o está vacío.  
  
 En la tabla siguiente se muestra casos de ejemplo <xref:System.IO.Packaging.PackUriHelper.Create%2A>.  
  
|`packageUri`|Pack URI devuelto|  
|------------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|Pack://http:,, www.proseware.com, mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|Pack://FTP:,, ftp.proseware.com,packages,mypackage1.abc|  
|File:///d:/Packages/mypackage2.pkg|Pack://file:,, d:,packages,mypackage2.pkg|  
  
 Crear un URI de paquete es un proceso de varios pasos.  Por ejemplo, es un paso para formar un pack URI reemplazar los caracteres de barra diagonal (/) de la `packageUri` con comas (,).  
  
 Para obtener más información sobre la conversión de cadena y cómo se forman los URI de paquete, vea el apéndice A.4 "Ejemplos de conversión de cadena" y el apéndice B.3 "Composing a Pack URI" en la especificación de Open Packaging Conventions disponible para su descarga en [especificaciones y las descargas de licencias](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo usar el <xref:System.IO.Packaging.PackUriHelper.Create%2A> método para definir un pack URI que hace referencia a un paquete.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="packageUri" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">El parámetro <paramref name="packageUri" /> no es un identificador URI absoluto.</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Especificación Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri, Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri, class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri, partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri, Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create (packageUri, partUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" />
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="packageUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] del objeto <see cref="T:System.IO.Packaging.Package" />.</param>
        <param name="partUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] del elemento <see cref="T:System.IO.Packaging.PackagePart" /> del paquete.</param>
        <summary>Crea un Pack URI, dados un [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de <see cref="T:System.IO.Packaging.Package" /> y el [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de un elemento del paquete.</summary>
        <returns>Pack URI del elemento <see cref="T:System.IO.Packaging.PackagePart" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` no se puede especificar como nulo o vacío.  
  
 Si `partUri` es `null`, el pack URI devuelto señala el paquete.  
  
 En la tabla siguiente se muestra casos de ejemplo de la <xref:System.IO.Packaging.PackUriHelper.Create%2A> método.  
  
|`packageUri`|`partUri`|Pack URI devuelto|  
|------------------|---------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|/Page2.Xaml|Pack://http:,, www.proseware.com, mypackage.pkg/page2.xaml|  
|http://www.proseware.com/mypackage.pkg|/a/page4.Xaml|Pack://http:,, www.proseware.com, mypackage.pkg/a/page4.xaml|  
|http://www.proseware.com/mypackage.pkg|/%41/%61.Xml|Pack://http:,, www.proseware.com, mypackage.pkg/A/a.xml|  
|http://www.proseware.com/mypackage.pkg|/%25XY.Xml|Pack://http:,, www.proseware.com, mypackage.pkg/%25XY.xml|  
|http://www.proseware.com/mypackage.pkg|**null**|Pack://http:,, www.proseware.com, mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|/a/MyDoc.Xaml|Pack://FTP:,, ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  
|File:///d:/Packages/mypackage2.pkg|/a/bar.Xaml|Pack://file:,, d:,packages,mypackage2.pkg/a/bar.xaml|  
  
 Crear un URI de paquete es un proceso de varios pasos.  Por ejemplo, es un paso para formar un pack URI reemplazar los caracteres de barra diagonal (/) de la `packageUri` con comas (,).  
  
 Para obtener más información sobre la conversión de cadena y cómo se forman los URI de paquete, vea el apéndice A.4 "Ejemplos de conversión de cadena" y el apéndice B.3 "Composing a Pack URI" en la especificación de Open Packaging Conventions disponible para su descarga en [especificaciones y las descargas de licencias](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo usar el <xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29> método para definir un pack URI que hace referencia a un paquete.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="packageUri" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">El parámetro <paramref name="packageUri" /> no es un identificador URI absoluto.  
  
O bien 
 El parámetro <paramref name="partUri" /> no es una sintaxis de URI de elemento válida.</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Especificación Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri, Uri partUri, string fragment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri, class System.Uri partUri, string fragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri, partUri As Uri, fragment As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri, Uri ^ partUri, System::String ^ fragment);" />
      <MemberSignature Language="F#" Value="static member Create : Uri * Uri * string -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create (packageUri, partUri, fragment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" />
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="fragment" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] del objeto <see cref="T:System.IO.Packaging.Package" />.</param>
        <param name="partUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] del elemento <see cref="T:System.IO.Packaging.PackagePart" /> del paquete.</param>
        <param name="fragment">Referencia "#" que identifica un elemento dentro de la parte del paquete.</param>
        <summary>Crea un Pack URI, dados un elemento [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de <see cref="T:System.IO.Packaging.Package" />, el [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de una parte del paquete y un fragmento "#" que se anexará.</summary>
        <returns>URI de paquete que identifica el paquete especificado, la parte del paquete y el fragmento.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` no se puede especificar como `null` o está vacío.  
  
 Si `partUri` es `null`, el pack URI devuelto señala el paquete.  
  
 `fragment` no puede ser una cadena vacía, pero se puede especificar como `null`.  Cuando no se especifica como `null`, el `fragment` cadena debe comenzar con un carácter '#'.  Para obtener más información de la sintaxis de `fragment` referencias, vea la sección 3.5 "Fragment" de [RFC 3986](https://www.ietf.org/rfc/rfc3986.txt).  
  
 En la tabla siguiente se muestra casos de ejemplo de la <xref:System.IO.Packaging.PackUriHelper.Create%2A> método.  
  
|`packageUri`|`partUri`|`fragment`|Pack URI devuelto|  
|------------------|---------------|----------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|/Page1.Xaml|#intro|pack://http:,,www.proseware.com,mypackage.pkg/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|/Page2.Xaml|**null**|Pack://http:,, www.proseware.com, mypackage.pkg/page2.xaml|  
|http://www.proseware.com/mypackage.pkg|/a/page4.Xaml|**null**|Pack://http:,, www.proseware.com, mypackage.pkg/a/page4.xaml|  
|http://www.proseware.com/mypackage.pkg|/%41/%61.Xml|**null**|Pack://http:,, www.proseware.com, mypackage.pkg/A/a.xml|  
|http://www.proseware.com/mypackage.pkg|/%25XY.Xml|**null**|Pack://http:,, www.proseware.com, mypackage.pkg/%25XY.xml|  
|http://www.proseware.com/mypackage.pkg|/a/page5.Xaml|#summary|Pack://http:,, www.proseware.com, mypackage.pkg/a/page5.xaml#summary|  
|http://www.proseware.com/packages.aspx?pkg04|/Page1.Xaml|#intro|Pack://http:,, www.proseware.com, packages.aspx%3fpkg04/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|**null**|**null**|Pack://http:,, www.proseware.com, mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|/a/MyDoc.Xaml|**null**|Pack://FTP:,, ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  
|File:///d:/Packages/mypackage2.pkg|/a/bar.Xaml|#xref|Pack://file:,, d:,packages,mypackage2.pkg/a/bar.xaml#xref|  
  
 Crear un URI de paquete es un proceso de varios pasos.  Por ejemplo, es un paso para formar un pack URI reemplazar los caracteres de barra diagonal (/) de la `packageUri` con comas (,).  
  
 Para obtener más información sobre la conversión de cadena y cómo se forman los URI de paquete, vea el apéndice A.4 "Ejemplos de conversión de cadena" y el apéndice B.3 "Composing a Pack URI" en la especificación de Open Packaging Conventions disponible para su descarga en [especificaciones y las descargas de licencias](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo usar el <xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29> método para definir un pack URI que hace referencia a un paquete.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="packageUri" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">El parámetro <paramref name="packageUri" /> no es un identificador URI absoluto.  
  
O bien 
 El parámetro <paramref name="partUri" /> no es una sintaxis de URI de elemento válida.  
  
O bien 
 <paramref name="fragment" /> está vacío o empieza por "#".</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Especificación Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="CreatePartUri">
      <MemberSignature Language="C#" Value="public static Uri CreatePartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri CreatePartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ CreatePartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member CreatePartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.CreatePartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">URI de la parte <see cref="T:System.IO.Packaging.PackagePart" /> del paquete.</param>
        <summary>Crea un URI de parte de paquete <see cref="T:System.IO.Packaging.PackagePart" /> con formato.</summary>
        <returns>Un URI de <see cref="T:System.IO.Packaging.PackagePart" /> con formato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de un <xref:System.IO.Packaging.PackagePart> siempre se hace referencia desde el <xref:System.IO.Packaging.Package> raíz.  
  
 El valor devuelto <xref:System.IO.Packaging.PackagePart> URI es una ruta de acceso absoluta que siempre empieza por "/" y se ajusta a la sintaxis definida en el [Open Packaging Conventions Specification](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
 En la tabla siguiente se muestra casos de ejemplo <xref:System.IO.Packaging.PackUriHelper.CreatePartUri%2A>.  
  
|`partUri`|URI de parte devuelto|  
|---------------|-----------------------|  
|imagen1.jpg|/Picture1.jpg|  
|/Picture2.jpg|/Picture2.jpg|  
|a/MyDoc.Xaml|/a/MyDoc.Xaml|  
|/b/Bar.Xaml|/b/Bar.Xaml|  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo usar el <xref:System.IO.Packaging.PackUriHelper.CreatePartUri%2A> método para definir los identificadores URI relativos <xref:System.IO.Packaging.PackagePart> elementos.  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePartUri](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreateparturi)]
 [!code-vb[PackageWrite#PackageWriteCreatePartUri](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreateparturi)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160055">Escribir un ejemplo de paquete</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Especificación Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="GetNormalizedPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetNormalizedPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetNormalizedPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNormalizedPartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetNormalizedPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member GetNormalizedPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetNormalizedPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">URI de <see cref="T:System.IO.Packaging.PackagePart" /> que se va a normalizar.</param>
        <summary>Devuelve la forma normalizada de un URI de una parte de paquete <see cref="T:System.IO.Packaging.PackagePart" /> especificada.</summary>
        <returns>La forma normalizada del <paramref name="partUri" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri%2A> normaliza `partUri` por caso doblado en mayúsculas (<xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType>) y devolviendo el resultado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="partUri" /> es <see langword="null" />.</exception>
        <altmember cref="M:System.String.Normalize" />
        <altmember cref="T:System.Text.NormalizationForm" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Especificación Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="GetPackageUri">
      <MemberSignature Language="C#" Value="public static Uri GetPackageUri (Uri packUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetPackageUri(class System.Uri packUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPackageUri (packUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetPackageUri(Uri ^ packUri);" />
      <MemberSignature Language="F#" Value="static member GetPackageUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetPackageUri packUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="packUri">Pack URI desde el que se va a devolver el URI de la clase <see cref="T:System.IO.Packaging.Package" />.</param>
        <summary>Devuelve el identificador URI interno que señala el paquete completo de un Pack URI especificado.</summary>
        <returns>URI de la clase <see cref="T:System.IO.Packaging.Package" /> del parámetro <paramref name="packUri" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En la tabla siguiente se muestra casos de ejemplo <xref:System.IO.Packaging.PackUriHelper.GetPackageUri%2A>.  
  
|`packUri`|URI de paquete devuelto|  
|---------------|--------------------------|  
|Pack://http:,, www.proseware.com, mypackage.xyz/a/mydoc.xaml|http://www.proseware.com/mypackage.xyz|  
|Pack://http:,, www.proseware.com, packages.aspx%3fmypackage/a/bar.xaml|http://www.proseware.com/packages.aspx?mypackage|  
|Pack://http:,, www.proseware.com, mypackage.pkg|http://www.proseware.com/mypackage.pkg|  
|Pack://FTP:,, ftp.proseware.com,packages,mypackage1.abc/a/picture.jpg|ftp://ftp.proseware.com/packages/mypackage1.abc|  
|Pack://file:,, d:,packages,mypackage2.pkg/a/bar.xaml|File:///d:/Packages/mypackage2.pkg|  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.PackUriHelper.Create" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Especificación Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="GetPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetPartUri (Uri packUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetPartUri(class System.Uri packUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPartUri (packUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetPartUri(Uri ^ packUri);" />
      <MemberSignature Language="F#" Value="static member GetPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetPartUri packUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="packUri">Pack URI desde el que se devolverá el URI del elemento <see cref="T:System.IO.Packaging.PackagePart" />.</param>
        <summary>Devuelve el URI de un elemento <see cref="T:System.IO.Packaging.PackagePart" /> dentro de un URI de paquete especificado.</summary>
        <returns>URI del elemento <see cref="T:System.IO.Packaging.PackagePart" /> en el elemento <paramref name="packUri" /> especificado, o <see langword="null" /> si <paramref name="packUri" /> apunta a un paquete en lugar de a un elemento <see cref="T:System.IO.Packaging.PackagePart" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor devuelto <xref:System.IO.Packaging.PackagePart> URI es relativa a la raíz del paquete y es una ruta de acceso absoluta que siempre empieza por "/" y se ajusta a la sintaxis definida en el [Open Packaging Conventions Specification](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
 En la tabla siguiente se muestra casos de ejemplo <xref:System.IO.Packaging.PackUriHelper.GetPartUri%2A>.  
  
|`packUri`|URI de parte devuelto|  
|---------------|-----------------------|  
|Pack://http:,, www.proseware.com, mypackage.xyz/a/mydoc.xaml|/a/MyDoc.Xaml|  
|Pack://http:,, www.proseware.com, packages.aspx%3fmypackage/a/bar.xaml|/a/bar.Xaml|  
|Pack://http:,, www.proseware.com, mypackage.pkg|nulo|  
|Pack://FTP:,, ftp.proseware.com,packages,mypackage1.abc/a/picture.jpg|/a/Picture.jpg|  
|Pack://file:,, d:,packages,mypackage2.pkg/a/bar.xaml|/a/bar.Xaml|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Especificación Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetRelationshipPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetRelationshipPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRelationshipPartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetRelationshipPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member GetRelationshipPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetRelationshipPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri"><see cref="P:System.IO.Packaging.PackagePart.Uri" /> de la <see cref="T:System.IO.Packaging.PackagePart" /> en la que se devuelve el URI de la <see cref="T:System.IO.Packaging.PackageRelationship" /> asociada.</param>
        <summary>Devuelve el [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de la parte de relación asociada a una parte de paquete <see cref="T:System.IO.Packaging.PackagePart" /> especificada.</summary>
        <returns>El URI de la parte de <see cref="T:System.IO.Packaging.PackageRelationship" /> asociada a la <see cref="T:System.IO.Packaging.PackagePart" /> identificada por <paramref name="partUri" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `partUri` debe identificar ya sea el <xref:System.IO.Packaging.Package> ("/") o un <xref:System.IO.Packaging.PackagePart> que no es un <xref:System.IO.Packaging.PackageRelationship> parte.  
  
 Para obtener más información acerca de <xref:System.IO.Packaging.PackageRelationship> partes, vea la sección 9.3 "Relaciones" en la especificación de convenciones de empaquetado abierto disponibles para su descarga en [especificaciones y descarga de la licencia](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
   
  
## Examples  
 [Identificadores URI de paquete en WPF](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md)  
  
 [Especificación Open Packaging Conventions](https://go.microsoft.com/fwlink/?LinkID=71255)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="partUri" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">La sintaxis de <paramref name="partUri" /> no se corresponde con la sintaxis válida para un URI de parte de paquete.  
  
O bien 
 <paramref name="partUri" /> es un URI absoluto.  
  
O bien 
 <paramref name="partUri" /> hace referencia a una parte de relación.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelativeUri">
      <MemberSignature Language="C#" Value="public static Uri GetRelativeUri (Uri sourcePartUri, Uri targetPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetRelativeUri(class System.Uri sourcePartUri, class System.Uri targetPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRelativeUri (sourcePartUri As Uri, targetPartUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetRelativeUri(Uri ^ sourcePartUri, Uri ^ targetPartUri);" />
      <MemberSignature Language="F#" Value="static member GetRelativeUri : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetRelativeUri (sourcePartUri, targetPartUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourcePartUri" Type="System.Uri" />
        <Parameter Name="targetPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourcePartUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de la parte de origen.</param>
        <param name="targetPartUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] del elemento de destino.</param>
        <summary>Devuelve el [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] relativo comprendido entre dos [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)] de partes de paquetes <see cref="T:System.IO.Packaging.PackagePart" /> especificados.</summary>
        <returns>El [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] relativo desde <paramref name="sourcePartUri" /> hasta <paramref name="targetPartUri" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En la tabla siguiente se muestra casos de ejemplo <xref:System.IO.Packaging.PackUriHelper.GetRelativeUri%2A>.  
  
|`sourcePartUri`|`targetPartUri`|Devuelve el URI relativo|  
|---------------------|---------------------|---------------------------|  
|/MyDoc/Markup/Page.Xml|/MyDoc/Markup/Picture.jpg|"imagen.jpg"|  
|/MyDoc/Markup/Page.Xml|/MyDoc/Picture.jpg|.. /Picture.jpg|  
|/MyDoc/Markup/Page.Xml|/MyDoc/images/Picture.jpg|.. /images/Picture.jpg|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="sourcePartUri" /> o <paramref name="targetPartUri" /> es <see langword="null" />.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Especificación Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="GetSourcePartUriFromRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetSourcePartUriFromRelationshipPartUri (Uri relationshipPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetSourcePartUriFromRelationshipPartUri(class System.Uri relationshipPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourcePartUriFromRelationshipPartUri (relationshipPartUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetSourcePartUriFromRelationshipPartUri(Uri ^ relationshipPartUri);" />
      <MemberSignature Language="F#" Value="static member GetSourcePartUriFromRelationshipPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri relationshipPartUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="relationshipPartUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de la parte de relación de la cual se devuelve el <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />.</param>
        <summary>Devuelve el <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> de la parte de <see cref="T:System.IO.Packaging.PackageRelationship" /> con el [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] especificado.</summary>
        <returns>El <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> de la parte de paquete <see cref="T:System.IO.Packaging.PackagePart" /> a partir de la relación con el <paramref name="relationshipPartUri" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> propiedad de una parte de relación debe identificar ya sea el <xref:System.IO.Packaging.PackagePart.Package%2A> ("/") o un <xref:System.IO.Packaging.PackagePart> que no es un <xref:System.IO.Packaging.PackageRelationship>.  
  
 Por ejemplo, si el elemento del paquete "/ /Files/Document.XAML" es el propietario del origen de la parte de relación "/ files/_rels/document.xaml.rels", al llamar a <xref:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri%2A> con el `relationshipPartUri` parámetro de "/ files/_rels/document.xaml.rels" devuelve la <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>de "/ /Files/Document.XAML".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="relationshipPartUri" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="relationshipPartUri" /> es un [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] absoluto.  
  
O bien 
 La sintaxis de <paramref name="relationshipPartUri" /> no es válida para una parte de paquete <see cref="T:System.IO.Packaging.PackagePart" />.  
  
O bien 
 <paramref name="relationshipPartUri" /> no hace referencia a una parte de relación.  
  
O bien 
El <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> de la parte de relación hace referencia a otra parte de relación (no es válida).</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Especificación Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="IsRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static bool IsRelationshipPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsRelationshipPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsRelationshipPartUri (partUri As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsRelationshipPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member IsRelationshipPartUri : Uri -&gt; bool" Usage="System.IO.Packaging.PackUriHelper.IsRelationshipPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] en el que se busca una parte de <see cref="T:System.IO.Packaging.PackageRelationship" />.</param>
        <summary>Devuelve un valor que indica si un [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] especificado es el [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de una parte de <see cref="T:System.IO.Packaging.PackageRelationship" />.</summary>
        <returns><see langword="true" /> si <paramref name="partUri" /> identifica una parte de <see cref="T:System.IO.Packaging.PackageRelationship" />; en caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="partUri" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" /> es un [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] absoluto.  
  
O bien 
 La sintaxis de <paramref name="partUri" /> no es válida para <see cref="T:System.IO.Packaging.PackagePart" />.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Especificación Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="ResolvePartUri">
      <MemberSignature Language="C#" Value="public static Uri ResolvePartUri (Uri sourcePartUri, Uri targetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri ResolvePartUri(class System.Uri sourcePartUri, class System.Uri targetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResolvePartUri (sourcePartUri As Uri, targetUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ ResolvePartUri(Uri ^ sourcePartUri, Uri ^ targetUri);" />
      <MemberSignature Language="F#" Value="static member ResolvePartUri : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.ResolvePartUri (sourcePartUri, targetUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourcePartUri" Type="System.Uri" />
        <Parameter Name="targetUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourcePartUri">URI de la parte de origen o "/" para designar la raíz del paquete <see cref="T:System.IO.Packaging.Package" />.</param>
        <param name="targetUri">URI relativo a la parte de destino.</param>
        <summary>Devuelve un URI de parte de paquete, dados un URI de parte de origen y un URI con una ruta de acceso relativa a una parte de paquete de destino.</summary>
        <returns>El URI de la parte de destino resuelto entre los parámetros <paramref name="SourcePartUri" /> y <paramref name="targetUri" /> especificados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En la tabla siguiente se muestra casos de ejemplo <xref:System.IO.Packaging.PackUriHelper.ResolvePartUri%2A>.  
  
|`sourcePartUri`|`targetUri`|Identificador URI devuelto|  
|---------------------|-----------------|------------------|  
|/MyDoc/Markup/Page.Xml|"imagen.jpg"|/MyDoc/Markup/Picture.jpg|  
|/MyDoc/Markup/Page.Xml|images/Picture.jpg|/MyDoc/Markup/images/Picture.jpg|  
|/MyDoc/Markup/Page.Xml|./Picture.jpg|/MyDoc/Markup/Picture.jpg|  
|/MyDoc/Markup/Page.Xml|.. /Picture.jpg|/MyDoc/Picture.jpg|  
|/MyDoc/Markup/Page.Xml|.. /images/Picture.jpg|/MyDoc/images/Picture.jpg|  
|/|images/Picture.jpg|/images/Picture.jpg|  
  
   
  
## Examples  
 En el siguiente ejemplo, se muestra cómo utilizar el método <xref:System.IO.Packaging.PackUriHelper.ResolvePartUri%2A>.  Para obtener un ejemplo completo, vea [leer un ejemplo de paquete](https://go.microsoft.com/fwlink/?LinkID=160034).  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="sourcePartUri" /> o <paramref name="targetUri" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="sourcePartUri" /> no es un URI válido de parte de paquete.  
  
O bien 
 <paramref name="targetUri" /> no es un URI relativo válido.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Especificación Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="UriSchemePack">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemePack;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemePack" />
      <MemberSignature Language="DocId" Value="F:System.IO.Packaging.PackUriHelper.UriSchemePack" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemePack As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemePack;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemePack : string" Usage="System.IO.Packaging.PackUriHelper.UriSchemePack" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Define el nombre del esquema URI de paquete "pack".</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>