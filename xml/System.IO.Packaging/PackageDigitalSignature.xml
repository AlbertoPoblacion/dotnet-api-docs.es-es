<Type Name="PackageDigitalSignature" FullName="System.IO.Packaging.PackageDigitalSignature">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d4d0edb0cdd9341a8b4dd65de48fb4e6d372d7fd" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30418599" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PackageDigitalSignature" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PackageDigitalSignature extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageDigitalSignature" />
  <TypeSignature Language="VB.NET" Value="Public Class PackageDigitalSignature" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageDigitalSignature" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa una firma digital que se aplica a un conjunto de relaciones y partes del paquete.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.IO.Packaging.PackageDigitalSignature> objeto es inmutable y no se puede modificar después de crearlo.  
  
 Para la seguridad, un <xref:System.IO.Packaging.PackageDigitalSignature> pueden asociarse a partes dentro de un <xref:System.IO.Packaging.Package>. Un <xref:System.IO.Packaging.PackageDigitalSignature> incorpora un certificado X.509 que proporciona dos características:  
  
-   Identifica y autentica al originador del elemento.  
  
-   Valida que no se haya modificado el elemento.  
  
 La firma digital no impide que un elemento que se va a modificar, pero se produce un error en la comprobación de validación de la firma si el elemento ha cambiado de ninguna manera. La aplicación puede tomar las medidas apropiadas, por ejemplo, puede evitar que la parte de apertura o puede notificar al usuario que el elemento se ha modificado y no es seguro.  
  
 Para obtener más información sobre firmas digitales, vea el artículo MSDN [estructura de firma Digital de Open Packaging Conventions](http://go.microsoft.com/fwlink/?LinkId=74494).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.PackageDigitalSignatureManager" />
    <altmember cref="T:System.Windows.Xps.Packaging.XpsDigitalSignature" />
  </Docs>
  <Members>
    <Member MemberName="CertificateEmbeddingOption">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.CertificateEmbeddingOption CertificateEmbeddingOption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Packaging.CertificateEmbeddingOption CertificateEmbeddingOption" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CertificateEmbeddingOption As CertificateEmbeddingOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::CertificateEmbeddingOption CertificateEmbeddingOption { System::IO::Packaging::CertificateEmbeddingOption get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.CertificateEmbeddingOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la opción de incrustación del certificado X.509.</summary>
        <value>Uno de los valores de <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" /> que especifica la opción para la firma digital.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certificados X.509 usados para validar un paquete pueden estar almacenados en una de estas tres ubicaciones:  
  
|||  
|-|-|  
|<xref:System.IO.Packaging.CertificateEmbeddingOption.InCertificatePart>|En su propio certificado <xref:System.IO.Packaging.PackagePart> en el paquete.<br /><br /> El certificado X.509 se puede obtener a través de la <xref:System.IO.Packaging.PackageDigitalSignature.Signer%2A> propiedad.|  
|<xref:System.IO.Packaging.CertificateEmbeddingOption.InSignaturePart>|En el contenido de la <xref:System.IO.Packaging.PackageDigitalSignature.SignaturePart%2A> en el paquete.<br /><br /> El certificado X.509 se puede obtener a través de la <xref:System.IO.Packaging.PackageDigitalSignature.Signer%2A> propiedad.|  
|<xref:System.IO.Packaging.CertificateEmbeddingOption.NotEmbedded>|Externos al paquete en una ubicación conocida por la aplicación que crea la signatura y la aplicación que posteriormente utiliza la firma para la validación.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital se ha eliminado.</exception>
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignature.Signer" />
      </Docs>
    </Member>
    <Member MemberName="GetPartTransformList">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; GetPartTransformList (Uri partName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;string&gt; GetPartTransformList(class System.Uri partName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPartTransformList (partName As Uri) As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;System::String ^&gt; ^ GetPartTransformList(Uri ^ partName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partName" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partName">
          <see cref="T:System.Uri" /> de <see cref="T:System.IO.Packaging.PackagePart" /> para el que devolver la lista de transformaciones.</param>
        <summary>Devuelve una lista ordenada de las operaciones de <see cref="T:System.Security.Cryptography.Xml.Transform" /> aplicadas a un elemento especificado.</summary>
        <returns>Una lista ordenada de cadenas URI, como <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl" /> o <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />, que representa las transformaciones XML canónicas aplicadas al elemento con el URI <paramref name="partName" /> especificado.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital se ha eliminado.</exception>
        <altmember cref="N:System.Security.Cryptography.Xml" />
      </Docs>
    </Member>
    <Member MemberName="Signature">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.Signature Signature { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.Signature Signature" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignature.Signature" />
      <MemberSignature Language="VB.NET" Value="Public Property Signature As Signature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::Signature ^ Signature { System::Security::Cryptography::Xml::Signature ^ get(); void set(System::Security::Cryptography::Xml::Signature ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.Signature</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la firma digital XML.</summary>
        <value>Firma digital XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageDigitalSignature.Signature%2A> proporciona acceso a la clase base que realiza las funciones criptográficas de firma específica de tipo y la serialización a y desde el <xref:System.IO.Packaging.PackagePart> que hospeda la firma.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital se ha eliminado.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignaturePart">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePart SignaturePart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.PackagePart SignaturePart" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignaturePart As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::PackagePart ^ SignaturePart { System::IO::Packaging::PackagePart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la clase <see cref="T:System.IO.Packaging.PackagePart" /> que contiene la firma.</summary>
        <value>Elemento del paquete que contiene la firma.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elemento del paquete de la firma se accede con frecuencia cuando ésta se contrafirma.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital se ha eliminado.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignatureType">
      <MemberSignature Language="C#" Value="public string SignatureType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignature.SignatureType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignatureType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la cadena del [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] que identifica el tipo de firma.</summary>
        <value>Cadena de [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] que identifica el tipo de firma. El valor predeterminado es <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital se ha eliminado.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignatureValue">
      <MemberSignature Language="C#" Value="public byte[] SignatureValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SignatureValue" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignature.SignatureValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureValue As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ SignatureValue { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor hash cifrado de la propiedad <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />.</summary>
        <value>Matriz de bytes que contiene el valor hash cifrado de la propiedad <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital se ha eliminado.</exception>
        <altmember cref="M:System.Security.Policy.Hash.GenerateHash(System.Security.Cryptography.HashAlgorithm)" />
      </Docs>
    </Member>
    <Member MemberName="SignedParts">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;Uri&gt; SignedParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Uri&gt; SignedParts" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignature.SignedParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignedParts As ReadOnlyCollection(Of Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;Uri ^&gt; ^ SignedParts { System::Collections::ObjectModel::ReadOnlyCollection&lt;Uri ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Uri&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de todos los objetos <see cref="T:System.IO.Packaging.PackagePart" /> firmados con la firma.</summary>
        <value>Colección que contiene todos los elementos del paquete firmados con la firma.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital se ha eliminado.</exception>
        <altmember cref="T:System.IO.Packaging.PackagePart" />
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors" />
      </Docs>
    </Member>
    <Member MemberName="SignedRelationshipSelectors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Packaging.PackageRelationshipSelector&gt; SignedRelationshipSelectors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IO.Packaging.PackageRelationshipSelector&gt; SignedRelationshipSelectors" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignedRelationshipSelectors As ReadOnlyCollection(Of PackageRelationshipSelector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Packaging::PackageRelationshipSelector ^&gt; ^ SignedRelationshipSelectors { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Packaging::PackageRelationshipSelector ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Packaging.PackageRelationshipSelector&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la lista de elementos de <see cref="T:System.IO.Packaging.PackageRelationship" /> firmados con la firma.</summary>
        <value>Lista de elementos de <see cref="T:System.IO.Packaging.PackageRelationship" /> firmados con la firma.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital se ha eliminado.</exception>
      </Docs>
    </Member>
    <Member MemberName="Signer">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate Signer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate Signer" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignature.Signer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Signer As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate ^ Signer { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el certificado X.509 del firmante.</summary>
        <value>El certificado digital del signatario o <see langword="null" /> si el certificado no se almacena en <see cref="T:System.IO.Packaging.Package" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageDigitalSignature.Signer%2A> Devuelve el certificado X.509 del firmante cuando el certificado digital se almacena dentro del paquete (es decir, cuando <xref:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption%2A> es <xref:System.IO.Packaging.CertificateEmbeddingOption.InCertificatePart> o <xref:System.IO.Packaging.CertificateEmbeddingOption.InSignaturePart>).  
  
 <xref:System.IO.Packaging.PackageDigitalSignature.Signer%2A> Devuelve `null` cuando el certificado X.509 no se almacena en el paquete (es decir, cuando <xref:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption%2A> es <xref:System.IO.Packaging.CertificateEmbeddingOption.NotEmbedded>).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital se ha eliminado.</exception>
      </Docs>
    </Member>
    <Member MemberName="SigningTime">
      <MemberSignature Language="C#" Value="public DateTime SigningTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime SigningTime" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SigningTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime SigningTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la fecha y la hora de creación de la firma.</summary>
        <value>Fecha y hora de creación de la firma.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.IO.Packaging.PackageDigitalSignature.TimeFormat%2A> propiedad especifica el formato de la fecha.  El formato de la <xref:System.IO.Packaging.PackageDigitalSignature.SigningTime%2A> string se basa en el <xref:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat%2A?displayProperty=nameWithType> propiedad en vigor cuando se creó la firma.  
  
 <xref:System.IO.Packaging.PackageDigitalSignature.SigningTime%2A> se basa en la hora del sistema del equipo en el que tuvo lugar la firma.  
  
 <xref:System.IO.Packaging.PackageDigitalSignature.SigningTime%2A> no es una "marca de tiempo segura" y no es de autoridad de marca de tiempo de confianza.  Una marca de tiempo segura se debe obtener y aplican a través de una autoridad de marca de tiempo de confianza.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital se ha eliminado.</exception>
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignature.TimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="TimeFormat">
      <MemberSignature Language="C#" Value="public string TimeFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TimeFormat" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignature.TimeFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TimeFormat { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el formato de fecha y hora devuelto por la propiedad <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</summary>
        <value>Formato de fecha y hora devuelto por la propiedad <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fecha y hora formatos seguir la sintaxis de la W3C [Date and Time Formats](http://go.microsoft.com/fwlink/?LinkId=84446) nota.  Los componentes mostrados en la tabla siguiente deben usar la sintaxis y puntuación mostrada.  
  
|TimeFormat|Descripción|Ejemplo|  
|----------------|-----------------|-------------|  
|YYYY|Year|2005|  
|YYYY-MM|Año y mes|2005-07|  
|YYYY-MM-DD|Fecha de finalización|2005-07-28|  
|YYYY-MM-DDThh:mmTZD|Completar la fecha más horas y minutos|2005-07-28T19:20-01:00|  
|YYYY-MM-DDThh:mm:ssTZD|Fecha de finalización más horas, minutos y segundos|2005-07-28T19:20:45-01:00|  
|YYYY-MM-DDThh:mm:ss.sTZD|Fecha de finalización más horas, minutos y segundos con una fracción decimal|2005-07-28T19:20:45.75-01:00|  
  
 donde:  
  
|||  
|-|-|  
|YYYY|año de cuatro dígitos (por ejemplo, 2006)|  
|MM|mes de dos dígitos (01 = enero)|  
|DD|día de dos dígitos del mes (del 01 al 31)|  
|Thh|hora de dos dígitos (00 a 23, 24 horas)|  
|mm|dos dígitos de minutos (00 a 59)|  
|ss|dos dígitos de segundos (de 00 a 59)|  
|s|uno o más dígitos que representa una fracción decimal de un segundo|  
|TZD|Designador de zona horaria (Z o + hh: mm o - hh: mm)|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital se ha eliminado.</exception>
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Verify">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Comprueba la firma digital con un certificado X.509 especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.VerifyResult Verify ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.IO.Packaging.VerifyResult Verify() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignature.Verify" />
      <MemberSignature Language="VB.NET" Value="Public Function Verify () As VerifyResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::VerifyResult Verify();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.VerifyResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Comprueba la firma digital con un certificado X.509 especificado.</summary>
        <returns>
          Es <see cref="F:System.IO.Packaging.VerifyResult.Success" /> si la comprobación tiene éxito; de lo contrario, es uno de los valores de <see cref="T:System.IO.Packaging.VerifyResult" /> que identifica un problema.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método comprueba la firma con un certificado X.509 incrustado que se almacenan en la <xref:System.IO.Packaging.Package>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital se ha eliminado.</exception>
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)" />
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.VerifyResult Verify (System.Security.Cryptography.X509Certificates.X509Certificate signingCertificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.IO.Packaging.VerifyResult Verify(class System.Security.Cryptography.X509Certificates.X509Certificate signingCertificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Verify (signingCertificate As X509Certificate) As VerifyResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::VerifyResult Verify(System::Security::Cryptography::X509Certificates::X509Certificate ^ signingCertificate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.VerifyResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signingCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="signingCertificate">Certificado X.509 del firmante con el que se comprobará la firma digital.</param>
        <summary>Comprueba la firma digital con un certificado X.509 especificado.</summary>
        <returns>
          Es <see cref="F:System.IO.Packaging.VerifyResult.Success" /> si la comprobación tiene éxito; de lo contrario, es uno de los valores de <see cref="T:System.IO.Packaging.VerifyResult" /> que identifica un problema.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital se ha eliminado.</exception>
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)" />
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />
      </Docs>
    </Member>
  </Members>
</Type>