<Type Name="RightsManagementInformation" FullName="System.IO.Packaging.RightsManagementInformation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4c1bd3b755cb55a77fe0c508db4810fd5cc628e4" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="63986584" /></Metadata><TypeSignature Language="C#" Value="public class RightsManagementInformation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RightsManagementInformation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.RightsManagementInformation" />
  <TypeSignature Language="VB.NET" Value="Public Class RightsManagementInformation" />
  <TypeSignature Language="C++ CLI" Value="public ref class RightsManagementInformation" />
  <TypeSignature Language="F#" Value="type RightsManagementInformation = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa la información de administración de derechos digitales (DRM) que se almacena en un <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.RightsManagementInformation> proporciona acceso a la <xref:System.Security.RightsManagement.PublishLicense> y <xref:System.Security.RightsManagement.UseLicense> datos almacenados en un derechos administran protegido <xref:System.IO.Packaging.Package>.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo inicializar un <xref:System.IO.Packaging.RightsManagementInformation> objeto para el cifrado.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 El ejemplo siguiente muestra cómo inicializar un <xref:System.IO.Packaging.RightsManagementInformation> objeto para el descifrado.  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewOpenPkg](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewopenpkg)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewOpenPkg](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewopenpkg)]  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Security.RightsManagement" />
  </Docs>
  <Members>
    <Member MemberName="CryptoProvider">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.CryptoProvider CryptoProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.RightsManagement.CryptoProvider CryptoProvider" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.RightsManagementInformation.CryptoProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property CryptoProvider As CryptoProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::RightsManagement::CryptoProvider ^ CryptoProvider { System::Security::RightsManagement::CryptoProvider ^ get(); void set(System::Security::RightsManagement::CryptoProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CryptoProvider : System.Security.RightsManagement.CryptoProvider with get, set" Usage="System.IO.Packaging.RightsManagementInformation.CryptoProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.CryptoProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el objeto <see cref="T:System.Security.RightsManagement.CryptoProvider" /> para obtener acceso al flujo de datos de administración de derechos cifrada del paquete.</summary>
        <value>El objeto <see cref="T:System.Security.RightsManagement.CryptoProvider" /> para obtener acceso a la información de administración de derechos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se muestra cómo establecer la propiedad <xref:System.IO.Packaging.RightsManagementInformation.CryptoProvider%2A>.  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewBind](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewbind)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewBind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewbind)]  
  
 En el siguiente ejemplo se muestra cómo se obtiene acceso a la propiedad <xref:System.IO.Packaging.RightsManagementInformation.CryptoProvider%2A>.  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewDecrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewdecrypt)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewDecrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewdecrypt)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteUseLicense">
      <MemberSignature Language="C#" Value="public void DeleteUseLicense (System.Security.RightsManagement.ContentUser userKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteUseLicense(class System.Security.RightsManagement.ContentUser userKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.RightsManagementInformation.DeleteUseLicense(System.Security.RightsManagement.ContentUser)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteUseLicense (userKey As ContentUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteUseLicense(System::Security::RightsManagement::ContentUser ^ userKey);" />
      <MemberSignature Language="F#" Value="member this.DeleteUseLicense : System.Security.RightsManagement.ContentUser -&gt; unit" Usage="rightsManagementInformation.DeleteUseLicense userKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userKey" Type="System.Security.RightsManagement.ContentUser" />
      </Parameters>
      <Docs>
        <param name="userKey">El usuario de <see cref="T:System.Security.RightsManagement.UseLicense" /> que se va a eliminar.</param>
        <summary>Elimina del flujo de datos de administración de derechos cifrada el objeto <see cref="T:System.Security.RightsManagement.UseLicense" /> de un usuario especificado.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.IO.Packaging.RightsManagementInformation.SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)" />
        <altmember cref="M:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses" />
        <altmember cref="M:System.IO.Packaging.RightsManagementInformation.LoadUseLicense(System.Security.RightsManagement.ContentUser)" />
      </Docs>
    </Member>
    <Member MemberName="GetEmbeddedUseLicenses">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense&gt; GetEmbeddedUseLicenses ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IDictionary`2&lt;class System.Security.RightsManagement.ContentUser, class System.Security.RightsManagement.UseLicense&gt; GetEmbeddedUseLicenses() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEmbeddedUseLicenses () As IDictionary(Of ContentUser, UseLicense)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IDictionary&lt;System::Security::RightsManagement::ContentUser ^, System::Security::RightsManagement::UseLicense ^&gt; ^ GetEmbeddedUseLicenses();" />
      <MemberSignature Language="F#" Value="member this.GetEmbeddedUseLicenses : unit -&gt; System.Collections.Generic.IDictionary&lt;System.Security.RightsManagement.ContentUser, System.Security.RightsManagement.UseLicense&gt;" Usage="rightsManagementInformation.GetEmbeddedUseLicenses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una colección de diccionarios de usuario y pares clave/valor de <see cref="T:System.Security.RightsManagement.UseLicense" /> del flujo de datos de administración de derechos cifrada.</summary>
        <returns>Una colección de usuarios y pares clave/valor de <see cref="T:System.Security.RightsManagement.UseLicense" /> incluidos en el paquete protegido de administración de derechos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses%2A> solo devuelve las licencias de uso que actualmente están incrustadas en el paquete.  No incluye ningún otro uso de licencias que la aplicación podría haber adquirido por separado desde un servidor de administración de derechos, pero que aún no esté incrustadas en el paquete.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.RightsManagementInformation.LoadUseLicense(System.Security.RightsManagement.ContentUser)" />
        <altmember cref="M:System.IO.Packaging.RightsManagementInformation.SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)" />
      </Docs>
    </Member>
    <Member MemberName="LoadPublishLicense">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.PublishLicense LoadPublishLicense ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.RightsManagement.PublishLicense LoadPublishLicense() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.RightsManagementInformation.LoadPublishLicense" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadPublishLicense () As PublishLicense" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::RightsManagement::PublishLicense ^ LoadPublishLicense();" />
      <MemberSignature Language="F#" Value="member this.LoadPublishLicense : unit -&gt; System.Security.RightsManagement.PublishLicense" Usage="rightsManagementInformation.LoadPublishLicense " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.PublishLicense</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve el objeto <see cref="T:System.Security.RightsManagement.PublishLicense" /> incrustado a partir del flujo de datos de administración de derechos cifrada.</summary>
        <returns>El objeto <see cref="T:System.Security.RightsManagement.PublishLicense" /> incrustado, o <see langword="null" /> si el paquete no contiene ningún objeto <see cref="T:System.Security.RightsManagement.PublishLicense" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el siguiente ejemplo, se muestra cómo utilizar el método <xref:System.IO.Packaging.RightsManagementInformation.LoadPublishLicense%2A>.  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewOpenPkg](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewopenpkg)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewOpenPkg](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewopenpkg)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileFormatException">La información de administración de derechos de este paquete no la puede leer la versión actual de esta clase.</exception>
        <altmember cref="M:System.IO.Packaging.RightsManagementInformation.SavePublishLicense(System.Security.RightsManagement.PublishLicense)" />
        <altmember cref="M:System.IO.Packaging.RightsManagementInformation.LoadUseLicense(System.Security.RightsManagement.ContentUser)" />
      </Docs>
    </Member>
    <Member MemberName="LoadUseLicense">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.UseLicense LoadUseLicense (System.Security.RightsManagement.ContentUser userKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.RightsManagement.UseLicense LoadUseLicense(class System.Security.RightsManagement.ContentUser userKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.RightsManagementInformation.LoadUseLicense(System.Security.RightsManagement.ContentUser)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadUseLicense (userKey As ContentUser) As UseLicense" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::RightsManagement::UseLicense ^ LoadUseLicense(System::Security::RightsManagement::ContentUser ^ userKey);" />
      <MemberSignature Language="F#" Value="member this.LoadUseLicense : System.Security.RightsManagement.ContentUser -&gt; System.Security.RightsManagement.UseLicense" Usage="rightsManagementInformation.LoadUseLicense userKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.UseLicense</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userKey" Type="System.Security.RightsManagement.ContentUser" />
      </Parameters>
      <Docs>
        <param name="userKey">Usuario o grupo de usuarios para el que se va a devolver el objeto <see cref="T:System.Security.RightsManagement.UseLicense" />.</param>
        <summary>Devuelve un objeto <see cref="T:System.Security.RightsManagement.UseLicense" /> incrustado de un usuario especificado a partir del flujo de datos de administración de derechos cifrada.</summary>
        <returns><see cref="T:System.Security.RightsManagement.UseLicense" /> para el usuario especificado, o <see langword="null" /> si el paquete no contiene ningún objeto <see cref="T:System.Security.RightsManagement.UseLicense" /> que coincide con el valor <paramref name="userKey" /> indicado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el siguiente ejemplo, se muestra cómo utilizar el método <xref:System.IO.Packaging.RightsManagementInformation.LoadUseLicense%2A>.  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewOpenPkg](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewopenpkg)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewOpenPkg](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewopenpkg)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="userKey" /> es <see langword="null" />.</exception>
        <exception cref="T:System.IO.FileFormatException">La información de administración de derechos de este paquete no la puede leer la versión actual de esta clase.</exception>
        <altmember cref="M:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses" />
        <altmember cref="M:System.IO.Packaging.RightsManagementInformation.SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)" />
        <altmember cref="M:System.IO.Packaging.RightsManagementInformation.DeleteUseLicense(System.Security.RightsManagement.ContentUser)" />
        <altmember cref="M:System.IO.Packaging.RightsManagementInformation.LoadPublishLicense" />
      </Docs>
    </Member>
    <Member MemberName="SavePublishLicense">
      <MemberSignature Language="C#" Value="public void SavePublishLicense (System.Security.RightsManagement.PublishLicense publishLicense);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SavePublishLicense(class System.Security.RightsManagement.PublishLicense publishLicense) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.RightsManagementInformation.SavePublishLicense(System.Security.RightsManagement.PublishLicense)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SavePublishLicense(System::Security::RightsManagement::PublishLicense ^ publishLicense);" />
      <MemberSignature Language="F#" Value="member this.SavePublishLicense : System.Security.RightsManagement.PublishLicense -&gt; unit" Usage="rightsManagementInformation.SavePublishLicense publishLicense" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
      </Parameters>
      <Docs>
        <param name="publishLicense">Licencia de publicación que se va a almacenar e incrustar en el paquete.</param>
        <summary>Guarda un objeto <see cref="T:System.Security.RightsManagement.PublishLicense" /> determinado en el flujo de datos de administración de derechos cifrada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada <xref:System.IO.Packaging.EncryptedPackageEnvelope> solo puede contener una <xref:System.Security.RightsManagement.PublishLicense>.  Cada llamada a <xref:System.IO.Packaging.RightsManagementInformation.SavePublishLicense%2A> sobrescribirá las anteriores <xref:System.Security.RightsManagement.PublishLicense> contenidos en el <xref:System.IO.Packaging.EncryptedPackageEnvelope>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="publishLicense" /> es <see langword="null" />.</exception>
        <exception cref="T:System.IO.FileFormatException">La información de administración de derechos de este paquete no la puede leer la versión actual de esta clase.</exception>
        <altmember cref="M:System.IO.Packaging.RightsManagementInformation.LoadPublishLicense" />
        <altmember cref="M:System.IO.Packaging.RightsManagementInformation.SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)" />
      </Docs>
    </Member>
    <Member MemberName="SaveUseLicense">
      <MemberSignature Language="C#" Value="public void SaveUseLicense (System.Security.RightsManagement.ContentUser userKey, System.Security.RightsManagement.UseLicense useLicense);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveUseLicense(class System.Security.RightsManagement.ContentUser userKey, class System.Security.RightsManagement.UseLicense useLicense) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.RightsManagementInformation.SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveUseLicense(System::Security::RightsManagement::ContentUser ^ userKey, System::Security::RightsManagement::UseLicense ^ useLicense);" />
      <MemberSignature Language="F#" Value="member this.SaveUseLicense : System.Security.RightsManagement.ContentUser * System.Security.RightsManagement.UseLicense -&gt; unit" Usage="rightsManagementInformation.SaveUseLicense (userKey, useLicense)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userKey" Type="System.Security.RightsManagement.ContentUser" />
        <Parameter Name="useLicense" Type="System.Security.RightsManagement.UseLicense" />
      </Parameters>
      <Docs>
        <param name="userKey">Usuario de <see cref="T:System.Security.RightsManagement.UseLicense" />.</param>
        <param name="useLicense">Licencia de uso que se va a almacenar e incrustar en el paquete.</param>
        <summary>Guarda un objeto <see cref="T:System.Security.RightsManagement.UseLicense" /> determinado para un usuario especificado en el flujo de datos de administración de derechos cifrada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Después de la <xref:System.Security.RightsManagement.UseLicense> para el usuario especificado se ha guardado, se puede recuperar a través de la <xref:System.IO.Packaging.RightsManagementInformation.LoadUseLicense%2A> método y desde la colección devuelta por <xref:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses%2A>.  
  
 Un <xref:System.IO.Packaging.Package> puede almacenar el <xref:System.Security.RightsManagement.UseLicense> de derechos de información para varios usuarios de contenido.  Cada usuario puede tener como máximo un <xref:System.Security.RightsManagement.UseLicense>.  Si <xref:System.IO.Packaging.RightsManagementInformation.SaveUseLicense%2A> se llama para almacenar un nuevo <xref:System.Security.RightsManagement.UseLicense> para un <xref:System.Security.RightsManagement.ContentUser> que ya tiene un <xref:System.Security.RightsManagement.UseLicense>, la licencia anterior se sobrescribirá con la nueva licencia.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.IO.Packaging.RightsManagementInformation.SaveUseLicense%2A> método.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O bien el parámetro <paramref name="userKey" /> o el parámetro <paramref name="useLicense" /> es <see langword="null" />.</exception>
        <exception cref="T:System.IO.FileFormatException">La información de administración de derechos de este paquete no la puede leer la versión actual de esta clase.</exception>
        <altmember cref="M:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses" />
        <altmember cref="M:System.IO.Packaging.RightsManagementInformation.LoadUseLicense(System.Security.RightsManagement.ContentUser)" />
        <altmember cref="M:System.IO.Packaging.RightsManagementInformation.DeleteUseLicense(System.Security.RightsManagement.ContentUser)" />
        <altmember cref="M:System.IO.Packaging.RightsManagementInformation.SavePublishLicense(System.Security.RightsManagement.PublishLicense)" />
      </Docs>
    </Member>
  </Members>
</Type>