<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="KeyContainerPermissionAccessEntryEnumerator.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac566f862bbfa6c0776208bb1fde780133d2c230622.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">66f862bbfa6c0776208bb1fde780133d2c230622</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>Represents the enumerator for <ph id="ph1">&lt;see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /&gt;</ph> objects in a <ph id="ph2">&lt;see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" /&gt;</ph>.</source>
          <target state="translated">Representa el enumerador de los objetos <ph id="ph1">&lt;see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /&gt;</ph> existentes en una colección <ph id="ph2">&lt;see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>Enumerators allow only reading the data in the collection.</source>
          <target state="translated">Los enumeradores permiten sólo se lee los datos de la colección.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>Enumerators cannot be used to modify the underlying collection.</source>
          <target state="translated">Los enumeradores no pueden usarse para modificar la colección subyacente.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">En principio, el enumerador se coloca antes del primer elemento de la colección.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> method also brings the enumerator back to this position.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> método también devuelve el enumerador a esta posición.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>At this position, calling the <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property throws an exception.</source>
          <target state="translated">En esta posición, al llamar a la <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> propiedad produce una excepción.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of the <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property.</source>
          <target state="translated">Por lo tanto, debe llamar a la <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> método para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de la <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> devuelve el mismo objeto hasta que se llama a <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> o a <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> establece <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> en el siguiente elemento.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Cuando se pasa el final de la colección, el enumerador se coloca detrás del último elemento de la colección y si se llama al método <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> devuelve <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, calling <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">Si la última llamada a <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> devuelve <ph id="ph2">`false`</ph>, si se llama <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> produce una excepción.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>To reset <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> to the first element of the collection, call <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> followed by a call to <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Restablecer <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> hasta el primer elemento de la colección, llame a <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> seguido por una llamada a <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un enumerador es válido mientras la colección no cambie.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Si se realizan cambios en la colección, como agregar, modificar, o eliminar elementos, el enumerador queda permanentemente invalidado y la siguiente llamada a <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> produce una <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>If the collection is modified between calling <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> returns the element to which it is currently set, even if the enumerator is already invalidated.</source>
          <target state="translated">Si la colección se modifica entre llamar a <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> devuelve el elemento al que está establecido actualmente, aunque el enumerador ya haya quedado invalidado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
          <source>Gets the current entry in the collection.</source>
          <target state="translated">Obtiene la entrada actual de la colección.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /&gt;</ph> object in the collection.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /&gt;</ph> actual de la colección.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
          <source>When the enumerator is created, it does not point to an object, so the <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property is not valid and will throw an exception if it is accessed.</source>
          <target state="translated">Cuando se crea el enumerador, no apunta a un objeto, por lo que el <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> propiedad no es válida y producirá una excepción si se tiene acceso.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
          <source>You must first call the <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> method to position the cursor at the first object in the collection.</source>
          <target state="translated">Primero debe llamar a la <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> método para colocar el cursor en el primer objeto de la colección.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
          <source>Getting the <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property multiple times with no intervening calls to <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> will return the same <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;</ph> object each time.</source>
          <target state="translated">Obtener la <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> propiedad varias veces con ninguna llamada intermedia a <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> devolverá el mismo <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;</ph> objeto cada vez.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /&gt;</ph> property is accessed before first calling the <ph id="ph2">&lt;see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /&gt;</ph> method.</source>
          <target state="translated">Se tiene acceso a la propiedad <ph id="ph1">&lt;see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /&gt;</ph> antes de llamar por primera vez al método <ph id="ph2">&lt;see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
          <source>The cursor is located before the first object in the collection.</source>
          <target state="translated">El cursor se encuentra ubicado delante del primer objeto de la colección.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /&gt;</ph> property is accessed after a call to the <ph id="ph2">&lt;see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /&gt;</ph> method returns <ph id="ph3">&lt;see langword="false" /&gt;</ph>, which indicates that the cursor is located after the last object in the collection.</source>
          <target state="translated">Se tiene acceso a la propiedad <ph id="ph1">&lt;see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /&gt;</ph> después de que una llamada al método <ph id="ph2">&lt;see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /&gt;</ph> devuelva <ph id="ph3">&lt;see langword="false" /&gt;</ph>, lo que indica que el cursor se encuentra después del último objeto de la colección.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
          <source>Moves to the next element in the collection.</source>
          <target state="translated">Se desplaza al siguiente elemento de la colección.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next element; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has passed the end of the collection.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el enumerador avanzó con éxito hasta el siguiente elemento; es <ph id="ph2">&lt;see langword="false" /&gt;</ph> si el enumerador alcanzó el final de la colección.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> method returns <ph id="ph2">`false`</ph> immediately if there are no objects in the collection.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> método <ph id="ph2">`false`</ph> inmediatamente si no hay ningún objeto en la colección.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
          <source><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph2">`true`</ph> until it has reached the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> Devuelve <ph id="ph2">`true`</ph> hasta que se ha alcanzado el final de la colección.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
          <source>It then returns <ph id="ph1">`false`</ph> for each successive call.</source>
          <target state="translated">A continuación, devuelve <ph id="ph1">`false`</ph> para cada llamada sucesiva.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
          <source>However, once <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> has returned <ph id="ph2">`false`</ph>, accessing the <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property throws an exception.</source>
          <target state="translated">Sin embargo, una vez <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> ha devuelto <ph id="ph2">`false`</ph>, acceso a la <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> propiedad produce una excepción.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
          <source>Upon creation, an enumerator is positioned before the first <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;</ph> object in the collection, and the first call to <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> positions the enumerator to the first object in the collection.</source>
          <target state="translated">Tras su creación, el enumerador se coloca antes del primer <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;</ph> objeto en la colección y la primera llamada a <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> coloca el enumerador hasta el primer objeto de la colección.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset">
          <source>Resets the enumerator to the beginning of the collection.</source>
          <target state="translated">Restablece el enumerador al principio de la colección.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset">
          <source>An enumerator moves in a forward-only direction.</source>
          <target state="translated">Un enumerador se desplaza en una dirección de solo avance.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset">
          <source>Use this method to return to the beginning of the collection.</source>
          <target state="translated">Utilice este método para volver al principio de la colección.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> method positions the cursor at the first object in the collection.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> método coloca el cursor en el primer objeto de la colección.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset">
          <source>After calling <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph>, you do not need to call <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> to move the cursor forward to the first object.</source>
          <target state="translated">Después de llamar a <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph>, no es necesario llamar a <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> para mover el cursor hacia delante hasta el primer objeto.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current">
          <source>Gets the current object in the collection.</source>
          <target state="translated">Obtiene el objeto actual de la colección.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current">
          <source>The current object in the collection.</source>
          <target state="translated">Objeto actual de la colección.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current">
          <source>Do not call this method; use the <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property instead.</source>
          <target state="translated">No llame a este método; Utilice la <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> propiedad en su lugar.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>