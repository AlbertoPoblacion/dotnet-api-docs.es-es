<Type Name="PrincipalPermission" FullName="System.Security.Permissions.PrincipalPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6a29b903e2cf4c356ee3b6a9b5137de0f039871b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37630560" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PrincipalPermission : System.Security.IPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PrincipalPermission extends System.Object implements class System.Security.IPermission, class System.Security.ISecurityEncodable, class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.PrincipalPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PrincipalPermission&#xA;Implements IPermission, IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrincipalPermission sealed : System::Security::IPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type PrincipalPermission = class&#xA;    interface IPermission&#xA;    interface IUnrestrictedPermission&#xA;    interface ISecurityEncodable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.IPermission</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6e559-101">Allows checks against the active principal (see <see cref="T:System.Security.Principal.IPrincipal" />) using the language constructs defined for both declarative and imperative security actions.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6e559-101">Allows checks against the active principal (see <see cref="T:System.Security.Principal.IPrincipal" />) using the language constructs defined for both declarative and imperative security actions.</span>
      </span>
      <span data-ttu-id="6e559-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6e559-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e559-103">Al pasar la información de identidad (nombre de usuario y rol) al constructor, <xref:System.Security.Permissions.PrincipalPermission> se puede usar para solicitar que la identidad del principal activo coincida con esta información.</span><span class="sxs-lookup"><span data-stu-id="6e559-103">By passing identity information (user name and role) to the constructor, <xref:System.Security.Permissions.PrincipalPermission> can be used to demand that the identity of the active principal matches this information.</span></span>  
  
 <span data-ttu-id="6e559-104">Para que coincida con el activo <xref:System.Security.Principal.IPrincipal> y asociado <xref:System.Security.Principal.IIdentity>, deben coincidir con la identidad especificada y la función.</span><span class="sxs-lookup"><span data-stu-id="6e559-104">To match the active <xref:System.Security.Principal.IPrincipal> and associated <xref:System.Security.Principal.IIdentity>, both the specified identity and role must match.</span></span> <span data-ttu-id="6e559-105">Si `null` se utiliza la cadena de identidad, se interpreta como una solicitud para que coincida con cualquier identidad.</span><span class="sxs-lookup"><span data-stu-id="6e559-105">If `null` identity string is used, it is interpreted as a request to match any identity.</span></span> <span data-ttu-id="6e559-106">El uso de `null` coincidirá con cualquier función de cadena del rol.</span><span class="sxs-lookup"><span data-stu-id="6e559-106">Use of `null` role string will match any role.</span></span> <span data-ttu-id="6e559-107">Por implicación, pasando `null` parámetro `name` o `role` a <xref:System.Security.Permissions.PrincipalPermission> coincidirá con la identidad y los roles en cualquier <xref:System.Security.Principal.IPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="6e559-107">By implication, passing `null` parameter for `name` or `role` to <xref:System.Security.Permissions.PrincipalPermission> will match the identity and roles in any <xref:System.Security.Principal.IPrincipal>.</span></span> <span data-ttu-id="6e559-108">También es posible construir un <xref:System.Security.Permissions.PrincipalPermission> que solo determina si el <xref:System.Security.Principal.IIdentity> representa una entidad autenticada o no autenticada.</span><span class="sxs-lookup"><span data-stu-id="6e559-108">It is also possible to construct a <xref:System.Security.Permissions.PrincipalPermission> that only determines whether the <xref:System.Security.Principal.IIdentity> represents an authenticated or unauthenticated entity.</span></span> <span data-ttu-id="6e559-109">En este caso, `name` y `role` se omiten.</span><span class="sxs-lookup"><span data-stu-id="6e559-109">In this case, `name` and `role` are ignored.</span></span>  
  
 <span data-ttu-id="6e559-110">A diferencia de otros permisos, <xref:System.Security.Permissions.PrincipalPermission> no se extiende <xref:System.Security.CodeAccessPermission>.</span><span class="sxs-lookup"><span data-stu-id="6e559-110">Unlike most other permissions, <xref:System.Security.Permissions.PrincipalPermission> does not extend <xref:System.Security.CodeAccessPermission>.</span></span> <span data-ttu-id="6e559-111">Sin embargo, neimplementuje la <xref:System.Security.IPermission> interfaz.</span><span class="sxs-lookup"><span data-stu-id="6e559-111">It does, however, implement the <xref:System.Security.IPermission> interface.</span></span> <span data-ttu-id="6e559-112">Esto es porque <xref:System.Security.Permissions.PrincipalPermission> no es un permiso de acceso del código; es decir, no está garantizado en función de la identidad del ensamblado en ejecución.</span><span class="sxs-lookup"><span data-stu-id="6e559-112">This is because <xref:System.Security.Permissions.PrincipalPermission> is not a code access permission; that is, it is not granted based on the identity of the executing assembly.</span></span> <span data-ttu-id="6e559-113">En su lugar, permite que el código realizar acciones (<xref:System.Security.Permissions.PrincipalPermission.Demand%2A>, <xref:System.Security.Permissions.PrincipalPermission.Union%2A>, <xref:System.Security.Permissions.PrincipalPermission.Intersect%2A>, etc.) en la identidad del usuario actual de una manera coherente con la forma esas acciones se realizan para el acceso de código y los permisos de identidad del código.</span><span class="sxs-lookup"><span data-stu-id="6e559-113">Instead, it allows code to perform actions (<xref:System.Security.Permissions.PrincipalPermission.Demand%2A>, <xref:System.Security.Permissions.PrincipalPermission.Union%2A>, <xref:System.Security.Permissions.PrincipalPermission.Intersect%2A>, and so on) against the current user identity in a manner consistent with the way those actions are performed for code access and code identity permissions.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6e559-114">Antes de una solicitud de permiso principal es necesario establecer la directiva de entidad del dominio de aplicación actual en el valor de enumeración <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="6e559-114">Prior to a demand for principal permission it is necessary to set the current application domain's principal policy to the enumeration value <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>.</span></span> <span data-ttu-id="6e559-115">De forma predeterminada, la directiva principal se establece en <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="6e559-115">By default, the principal policy is set to <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>.</span></span> <span data-ttu-id="6e559-116">Si no establece la directiva principal en <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, se producirá un error en una solicitud de permiso de entidad de seguridad.</span><span class="sxs-lookup"><span data-stu-id="6e559-116">If you do not set the principal policy to <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, a demand for principal permission will fail.</span></span> <span data-ttu-id="6e559-117">Antes de que se produzca la entidad de seguridad, se debe ejecutar el código siguiente:</span><span class="sxs-lookup"><span data-stu-id="6e559-117">The following code should be executed before the principal permission is demanded:</span></span>  
>   
>  `AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal).`  
  
   
  
## Examples  
 <span data-ttu-id="6e559-118">El ejemplo siguiente requiere la entidad de seguridad activa sea un administrador.</span><span class="sxs-lookup"><span data-stu-id="6e559-118">The following example requires the active principal to be an administrator.</span></span> <span data-ttu-id="6e559-119">El `name` parámetro es `null`, lo que permite que cualquier usuario que sea administrador pase la petición.</span><span class="sxs-lookup"><span data-stu-id="6e559-119">The `name` parameter is `null`, which enables any user who is an administrator to pass the demand.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6e559-120">En Windows Vista, el control de cuentas de usuario (UAC) determina los privilegios de un usuario.</span><span class="sxs-lookup"><span data-stu-id="6e559-120">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="6e559-121">Si es miembro del grupo Administradores integrados, se le asignarán dos símbolos (tokens) de acceso en tiempo de ejecución: un símbolo (token) de acceso de usuario estándar y un símbolo (token) de acceso de administrador.</span><span class="sxs-lookup"><span data-stu-id="6e559-121">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="6e559-122">De forma predeterminada, se le asignará el rol de usuario estándar.</span><span class="sxs-lookup"><span data-stu-id="6e559-122">By default, you are in the standard user role.</span></span> <span data-ttu-id="6e559-123">Para ejecutar código que requiere permisos de administrador, primero debe elevar el nivel de sus privilegios de usuario estándar a administrador.</span><span class="sxs-lookup"><span data-stu-id="6e559-123">To execute the code that requires you to be an administrator, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="6e559-124">Para ello, inicie una aplicación haciendo clic con el botón derecho en el icono de la aplicación e indique que desea ejecutarla como administrador.</span><span class="sxs-lookup"><span data-stu-id="6e559-124">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 [!code-cpp[Classic PrincipalPermission Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermission Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermission Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.PrincipalPermissionAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6e559-125">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermission" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-125">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermission" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.PrincipalPermission : System.Security.Permissions.PermissionState -&gt; System.Security.Permissions.PrincipalPermission" Usage="new System.Security.Permissions.PrincipalPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="6e559-126">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-126">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e559-127">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermission" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-127">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermission" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e559-128">`None` coincide con solo la entidad de seguridad no autenticada (<xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> es una cadena vacía (""), no <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A>, <xref:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated%2A> es `false`).</span><span class="sxs-lookup"><span data-stu-id="6e559-128">`None` matches only the unauthenticated principal (<xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> is the empty string (""), no <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A>, <xref:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated%2A> is `false`).</span></span> <span data-ttu-id="6e559-129">`Unrestricted` coincide con todas las entidades (<xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> es `null`, <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> es `null`).</span><span class="sxs-lookup"><span data-stu-id="6e559-129">`Unrestricted` matches all principals (<xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> is `null`, <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> is `null`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6e559-130">Este constructor se incluye por coherencia con el diseño de otros permisos, pero no es útil en la práctica.</span><span class="sxs-lookup"><span data-stu-id="6e559-130">This constructor is included for consistency with the design of other permissions, but is not useful in practice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6e559-131">The <paramref name="state" /> parameter is not a valid <see cref="T:System.Security.Permissions.PermissionState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-131">The <paramref name="state" /> parameter is not a valid <see cref="T:System.Security.Permissions.PermissionState" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalPermission (string name, string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, role As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalPermission(System::String ^ name, System::String ^ role);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.PrincipalPermission : string * string -&gt; System.Security.Permissions.PrincipalPermission" Usage="new System.Security.Permissions.PrincipalPermission (name, role)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="6e559-132">The name of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-132">The name of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user.</span>
          </span>
        </param>
        <param name="role">
          <span data-ttu-id="6e559-133">The role of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user (for example, Administrator).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-133">The role of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user (for example, Administrator).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e559-134">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermission" /> class for the specified <paramref name="name" /> and <paramref name="role" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-134">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermission" /> class for the specified <paramref name="name" /> and <paramref name="role" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e559-135">Tanto el `name` parámetro y el `role` parámetro debe coincidir con este permiso para que coincida con el activo <xref:System.Security.Principal.IPrincipal> y asociado <xref:System.Security.Principal.IIdentity>.</span><span class="sxs-lookup"><span data-stu-id="6e559-135">Both the `name` parameter and the `role` parameter must match for this permission to match the active <xref:System.Security.Principal.IPrincipal> and associated <xref:System.Security.Principal.IIdentity>.</span></span> <span data-ttu-id="6e559-136">Establecer `name` a `null` para que busque cualquier usuario en un rol.</span><span class="sxs-lookup"><span data-stu-id="6e559-136">Set `name` to `null` to check for any user in a role.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e559-137">El ejemplo siguiente requiere la entidad de seguridad activa sea un administrador.</span><span class="sxs-lookup"><span data-stu-id="6e559-137">The following example requires the active principal to be an administrator.</span></span> <span data-ttu-id="6e559-138">El `name` parámetro es `null`, lo que permite que cualquier usuario que sea administrador pase la petición.</span><span class="sxs-lookup"><span data-stu-id="6e559-138">The `name` parameter is `null`, which enables any user who is an administrator to pass the demand.</span></span>  
  
 <span data-ttu-id="6e559-139">**Tenga en cuenta** en Windows Vista, Control de cuentas de usuario (UAC) determina los privilegios de un usuario.</span><span class="sxs-lookup"><span data-stu-id="6e559-139">**Note** In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="6e559-140">Si es miembro del grupo Administradores integrados, se le asignarán dos símbolos (tokens) de acceso en tiempo de ejecución: un símbolo (token) de acceso de usuario estándar y un símbolo (token) de acceso de administrador.</span><span class="sxs-lookup"><span data-stu-id="6e559-140">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="6e559-141">De forma predeterminada, se le asignará el rol de usuario estándar.</span><span class="sxs-lookup"><span data-stu-id="6e559-141">By default, you are in the standard user role.</span></span> <span data-ttu-id="6e559-142">Para ejecutar código que requiere permisos de administrador, primero debe elevar el nivel de sus privilegios de usuario estándar a administrador.</span><span class="sxs-lookup"><span data-stu-id="6e559-142">To execute the code that requires you to be an administrator, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="6e559-143">Para ello, inicie una aplicación haciendo clic con el botón derecho en el icono de la aplicación e indique que desea ejecutarla como administrador.</span><span class="sxs-lookup"><span data-stu-id="6e559-143">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 [!code-cpp[Classic PrincipalPermission Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermission Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermission Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalPermission (string name, string role, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string role, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, role As String, isAuthenticated As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalPermission(System::String ^ name, System::String ^ role, bool isAuthenticated);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.PrincipalPermission : string * string * bool -&gt; System.Security.Permissions.PrincipalPermission" Usage="new System.Security.Permissions.PrincipalPermission (name, role, isAuthenticated)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="6e559-144">The name of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-144">The name of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user.</span>
          </span>
        </param>
        <param name="role">
          <span data-ttu-id="6e559-145">The role of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user (for example, Administrator).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-145">The role of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user (for example, Administrator).</span>
          </span>
        </param>
        <param name="isAuthenticated">
          <span data-ttu-id="6e559-146">
            <see langword="true" /> to signify that the user is authenticated; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-146">
              <see langword="true" /> to signify that the user is authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e559-147">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermission" /> class for the specified <paramref name="name" />, <paramref name="role" />, and authentication status.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-147">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermission" /> class for the specified <paramref name="name" />, <paramref name="role" />, and authentication status.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e559-148">Tanto el `name` parámetro y el `role` parámetro debe coincidir con este permiso para que coincida con el activo <xref:System.Security.Principal.IPrincipal> y asociado <xref:System.Security.Principal.IIdentity>.</span><span class="sxs-lookup"><span data-stu-id="6e559-148">Both the `name` parameter and the `role` parameter must match for this permission to match the active <xref:System.Security.Principal.IPrincipal> and associated <xref:System.Security.Principal.IIdentity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission&#xA;override this.Copy : unit -&gt; System.Security.IPermission" Usage="principalPermission.Copy " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Copy</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6e559-149">Creates and returns an identical copy of the current permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-149">Creates and returns an identical copy of the current permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e559-150">A copy of the current permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-150">A copy of the current permission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e559-151">Una copia del permiso representa la misma entidad de seguridad e identidad que el permiso original.</span><span class="sxs-lookup"><span data-stu-id="6e559-151">A copy of the permission represents the same principal and identity as the original permission.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Demand();" />
      <MemberSignature Language="F#" Value="abstract member Demand : unit -&gt; unit&#xA;override this.Demand : unit -&gt; unit" Usage="principalPermission.Demand " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Demand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6e559-152">Determines at run time whether the current principal matches the principal specified by the current permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-152">Determines at run time whether the current principal matches the principal specified by the current permission.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e559-153">Si no hay ningún <xref:System.Security.SecurityException> se genera, <xref:System.Security.Permissions.PrincipalPermission.Demand%2A> se realiza correctamente.</span><span class="sxs-lookup"><span data-stu-id="6e559-153">If no <xref:System.Security.SecurityException> is raised, <xref:System.Security.Permissions.PrincipalPermission.Demand%2A> succeeds.</span></span>  
  
 <span data-ttu-id="6e559-154">Este método actúa en la entidad de seguridad asociado al subproceso que realiza la llamada.</span><span class="sxs-lookup"><span data-stu-id="6e559-154">This method acts against the principal attached to the calling thread.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6e559-155">Antes de llamar a la <xref:System.Security.Permissions.PrincipalPermission.Demand%2A> método, es necesario establecer la directiva de entidad del dominio de aplicación actual en el valor de enumeración <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="6e559-155">Prior to calling the <xref:System.Security.Permissions.PrincipalPermission.Demand%2A> method, it is necessary to set the current application domain's principal policy to the enumeration value <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>.</span></span> <span data-ttu-id="6e559-156">De forma predeterminada, la directiva principal se establece en <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="6e559-156">By default the principal policy is set to <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>.</span></span> <span data-ttu-id="6e559-157">Si no establece la directiva principal en <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, se producirá un error en una solicitud de permiso de entidad de seguridad.</span><span class="sxs-lookup"><span data-stu-id="6e559-157">If you do not set the principal policy to <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, a demand for principal permission will fail.</span></span> <span data-ttu-id="6e559-158">El siguiente código se debe ejecutar antes de que se produce la demanda de permiso principal:</span><span class="sxs-lookup"><span data-stu-id="6e559-158">The following code should be executed before the demand for principal permission occurs:</span></span>  
>   
>  `AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal).`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="6e559-159">The current principal does not pass the security check for the principal specified by the current permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-159">The current principal does not pass the security check for the principal specified by the current permission.</span>
          </span>
          <span data-ttu-id="6e559-160">-or-  The current <see cref="T:System.Security.Principal.IPrincipal" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-160">-or-  The current <see cref="T:System.Security.Principal.IPrincipal" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.Equals(System.Object)" FrameworkAlternate="netframework-4.5;netcore-2.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="principalPermission.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0" />
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="6e559-161">The <see cref="T:System.Security.Permissions.PrincipalPermission" /> object to compare with the current <see cref="T:System.Security.Permissions.PrincipalPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-161">The <see cref="T:System.Security.Permissions.PrincipalPermission" /> object to compare with the current <see cref="T:System.Security.Permissions.PrincipalPermission" />.</span>
          </span>
        </param>
        <param name="obj">To be added.</param>
        <summary>
          <span data-ttu-id="6e559-162">Determines whether the specified <see cref="T:System.Security.Permissions.PrincipalPermission" /> object is equal to the current <see cref="T:System.Security.Permissions.PrincipalPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-162">Determines whether the specified <see cref="T:System.Security.Permissions.PrincipalPermission" /> object is equal to the current <see cref="T:System.Security.Permissions.PrincipalPermission" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e559-163">
            <see langword="true" /> if the specified <see cref="T:System.Security.Permissions.PrincipalPermission" /> is equal to the current <see cref="T:System.Security.Permissions.PrincipalPermission" /> object; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-163">
              <see langword="true" /> if the specified <see cref="T:System.Security.Permissions.PrincipalPermission" /> is equal to the current <see cref="T:System.Security.Permissions.PrincipalPermission" /> object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e559-164">Para obtener más información, consulta <xref:System.Object.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e559-164">For more information, see <xref:System.Object.Equals%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public void FromXml (System.Security.SecurityElement elem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromXml(class System.Security.SecurityElement elem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FromXml (elem As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FromXml(System::Security::SecurityElement ^ elem);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit&#xA;override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="principalPermission.FromXml elem" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elem" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="elem">
          <span data-ttu-id="6e559-165">The XML encoding to use to reconstruct the permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-165">The XML encoding to use to reconstruct the permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e559-166">Reconstructs a permission with a specified state from an XML encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-166">Reconstructs a permission with a specified state from an XML encoding.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6e559-167">The <paramref name="elem" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-167">The <paramref name="elem" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6e559-168">The <paramref name="elem" /> parameter is not a valid permission element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-168">The <paramref name="elem" /> parameter is not a valid permission element.</span>
          </span>
          <span data-ttu-id="6e559-169">-or-  The <paramref name="elem" /> parameter's version number is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-169">-or-  The <paramref name="elem" /> parameter's version number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="principalPermission.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6e559-170">Gets a hash code for the <see cref="T:System.Security.Permissions.PrincipalPermission" /> object that is suitable for use in hashing algorithms and data structures such as a hash table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-170">Gets a hash code for the <see cref="T:System.Security.Permissions.PrincipalPermission" /> object that is suitable for use in hashing algorithms and data structures such as a hash table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e559-171">A hash code for the current <see cref="T:System.Security.Permissions.PrincipalPermission" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-171">A hash code for the current <see cref="T:System.Security.Permissions.PrincipalPermission" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e559-172">El código hash para dos instancias del mismo permiso podría ser diferente, por lo tanto, un código hash no debe usarse para comparar dos <xref:System.Security.Permissions.PrincipalPermission> objetos.</span><span class="sxs-lookup"><span data-stu-id="6e559-172">The hash code for two instances of the same permission might be different, hence a hash code should not be used to compare two <xref:System.Security.Permissions.PrincipalPermission> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="principalPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Intersect(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="6e559-173">A permission to intersect with the current permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-173">A permission to intersect with the current permission.</span>
          </span>
          <span data-ttu-id="6e559-174">It must be of the same type as the current permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-174">It must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e559-175">Creates and returns a permission that is the intersection of the current permission and the specified permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-175">Creates and returns a permission that is the intersection of the current permission and the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e559-176">A new permission that represents the intersection of the current permission and the specified permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-176">A new permission that represents the intersection of the current permission and the specified permission.</span>
          </span>
          <span data-ttu-id="6e559-177">This new permission will be <see langword="null" /> if the intersection is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-177">This new permission will be <see langword="null" /> if the intersection is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e559-178">Dado que dos usuarios que nunca intersecten, este método no es útil para <xref:System.Security.Permissions.PrincipalPermission>.</span><span class="sxs-lookup"><span data-stu-id="6e559-178">Because two users never intersect, this method is not useful for <xref:System.Security.Permissions.PrincipalPermission>.</span></span> <span data-ttu-id="6e559-179">Por ejemplo,</span><span class="sxs-lookup"><span data-stu-id="6e559-179">For example,</span></span>  
  
 [!code-cpp[System.Security.Permissions.PrincipalPermission#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cpp/remarks.cpp#1)]
 [!code-csharp[System.Security.Permissions.PrincipalPermission#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cs/remarks.cs#1)]
 [!code-vb[System.Security.Permissions.PrincipalPermission#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.permissions.principalpermission/vb/remarks.vb#1)]  
  
 <span data-ttu-id="6e559-180">es equivalente a</span><span class="sxs-lookup"><span data-stu-id="6e559-180">is equivalent to</span></span>  
  
 [!code-cpp[System.Security.Permissions.PrincipalPermission#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cpp/remarks.cpp#2)]
 [!code-csharp[System.Security.Permissions.PrincipalPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cs/remarks.cs#2)]
 [!code-vb[System.Security.Permissions.PrincipalPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.permissions.principalpermission/vb/remarks.vb#2)]  
  
 <span data-ttu-id="6e559-181">Dado que no hay ninguna identidad al mismo tiempo puede representar Bob y Louise.</span><span class="sxs-lookup"><span data-stu-id="6e559-181">because no identity can simultaneously represent both Bob and Louise.</span></span> <span data-ttu-id="6e559-182">De hecho, `pp1.Demand()` solo se realiza correctamente si una entidad no autenticada (con el nombre coincide con la cadena vacía ("")) tiene permiso para actuar en el rol de administrador.</span><span class="sxs-lookup"><span data-stu-id="6e559-182">In effect, `pp1.Demand()` only succeeds if an unauthenticated principal (with name equal to the empty string ("")) is allowed to act in the Administrator role.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6e559-183">The <paramref name="target" /> parameter is not <see langword="null" /> and is not an instance of the same class as the current permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-183">The <paramref name="target" /> parameter is not <see langword="null" /> and is not an instance of the same class as the current permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool&#xA;override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="principalPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="6e559-184">A permission that is to be tested for the subset relationship.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-184">A permission that is to be tested for the subset relationship.</span>
          </span>
          <span data-ttu-id="6e559-185">This permission must be of the same type as the current permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-185">This permission must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e559-186">Determines whether the current permission is a subset of the specified permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-186">Determines whether the current permission is a subset of the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e559-187">
            <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-187">
              <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e559-188">El permiso actual es un subconjunto del permiso especificado si todas las demandas que se realice correctamente para el permiso actual también se realizan correctamente para el permiso especificado.</span><span class="sxs-lookup"><span data-stu-id="6e559-188">The current permission is a subset of the specified permission if all demands that succeed for the current permission also succeed for the specified permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e559-189">El siguiente ejemplo define las instancias de <xref:System.Security.Permissions.PrincipalPermission> correspondientes a tres usuarios distintos.</span><span class="sxs-lookup"><span data-stu-id="6e559-189">The following example defines instances of <xref:System.Security.Permissions.PrincipalPermission> corresponding to three distinct users.</span></span> <span data-ttu-id="6e559-190">A continuación, se crean dos instancias adicionales como grupos de usuarios.</span><span class="sxs-lookup"><span data-stu-id="6e559-190">Two additional instances are then created as groups of users.</span></span> <span data-ttu-id="6e559-191">`pp1` representa a Bob y Louise, `pp2` representa a Bob, Louise y Greg.</span><span class="sxs-lookup"><span data-stu-id="6e559-191">`pp1` represents Bob and Louise, `pp2` represents Bob, Louise, and Greg.</span></span>  
  
 [!code-cpp[Classic PrincipalPermission.IsSubsetOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermission.IsSubsetOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermission.IsSubsetOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermission.IsSubsetOf Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermission.IsSubsetOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermission.IsSubsetOf Example/VB/source.vb#1)]  
  
 <span data-ttu-id="6e559-192">Con las declaraciones anteriores, `pp1.IsSubsetOf(pp2)` devuelve `true`, y `pp2.IsSubsetOf(pp1)` devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="6e559-192">With the preceding declarations, `pp1.IsSubsetOf(pp2)` returns `true`, and `pp2.IsSubsetOf(pp1)` returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6e559-193">The <paramref name="target" /> parameter is an object that is not of the same type as the current permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-193">The <paramref name="target" /> parameter is an object that is not of the same type as the current permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="principalPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6e559-194">Returns a value indicating whether the current permission is unrestricted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-194">Returns a value indicating whether the current permission is unrestricted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e559-195">
            <see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-195">
              <see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e559-196">Sin restricciones <xref:System.Security.Permissions.PrincipalPermission> coincide con cualquier entidad de seguridad.</span><span class="sxs-lookup"><span data-stu-id="6e559-196">An unrestricted <xref:System.Security.Permissions.PrincipalPermission> matches any principal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="principalPermission.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6e559-197">Creates and returns a string representing the current permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-197">Creates and returns a string representing the current permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e559-198">A representation of the current permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-198">A representation of the current permission.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement&#xA;override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="principalPermission.ToXml " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.ToXml</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6e559-199">Creates an XML encoding of the permission and its current state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-199">Creates an XML encoding of the permission and its current state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e559-200">An XML encoding of the permission, including any state information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-200">An XML encoding of the permission, including any state information.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Union (System.Security.IPermission other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Union(class System.Security.IPermission other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (other As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Union(System::Security::IPermission ^ other);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="principalPermission.Union other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Union(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="6e559-201">A permission to combine with the current permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-201">A permission to combine with the current permission.</span>
          </span>
          <span data-ttu-id="6e559-202">It must be of the same type as the current permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-202">It must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e559-203">Creates a permission that is the union of the current permission and the specified permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-203">Creates a permission that is the union of the current permission and the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e559-204">A new permission that represents the union of the current permission and the specified permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-204">A new permission that represents the union of the current permission and the specified permission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e559-205"><xref:System.Security.Permissions.PrincipalPermission.Union%2A> crea un permiso que representa los criterios de un conjunto determinado de persona <xref:System.Security.Permissions.PrincipalPermission> objetos.</span><span class="sxs-lookup"><span data-stu-id="6e559-205"><xref:System.Security.Permissions.PrincipalPermission.Union%2A> creates a permission representing the criteria of a given set of individual <xref:System.Security.Permissions.PrincipalPermission> objects.</span></span> <span data-ttu-id="6e559-206">Es útil para la representación compacta de un conjunto de condiciones de prueba.</span><span class="sxs-lookup"><span data-stu-id="6e559-206">It is useful for compactly representing a set of conditions to test.</span></span> <span data-ttu-id="6e559-207">Por ejemplo, con las declaraciones</span><span class="sxs-lookup"><span data-stu-id="6e559-207">For example, with the declarations</span></span>  
  
 [!code-cpp[System.Security.Permissions.PrincipalPermission#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cpp/remarks.cpp#3)]
 [!code-csharp[System.Security.Permissions.PrincipalPermission#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cs/remarks.cs#3)]
 [!code-vb[System.Security.Permissions.PrincipalPermission#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.permissions.principalpermission/vb/remarks.vb#3)]  
  
 <span data-ttu-id="6e559-208">`(ppBob.Union(ppLouise)).Demand()` se realizará correctamente si la entidad de seguridad actual representa a Bob al rol de administrador o a Louis en el rol de administrador.</span><span class="sxs-lookup"><span data-stu-id="6e559-208">`(ppBob.Union(ppLouise)).Demand()` will succeed if the current principal represents Bob in the role of Administrator or Louise in the role of Administrator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6e559-209">The <paramref name="other" /> parameter is an object that is not of the same type as the current permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e559-209">The <paramref name="other" /> parameter is an object that is not of the same type as the current permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>