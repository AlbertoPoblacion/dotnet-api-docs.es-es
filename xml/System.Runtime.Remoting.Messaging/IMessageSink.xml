<Type Name="IMessageSink" FullName="System.Runtime.Remoting.Messaging.IMessageSink">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1dd3980c6db096c63bf5a16dc14529fdeaebe51c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36631079" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IMessageSink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMessageSink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Messaging.IMessageSink" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMessageSink" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMessageSink" />
  <TypeSignature Language="F#" Value="type IMessageSink = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="29265-101">Define la interfaz de un receptor de mensajes.</span>
      <span class="sxs-lookup">
        <span data-stu-id="29265-101">Defines the interface for a message sink.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29265-102">Cuando se realiza una llamada de método en el servidor proxy, la infraestructura de comunicación remota proporciona la compatibilidad necesaria para pasar los argumentos al objeto real a través de los límites de comunicación remota, vuelve a llamar al método del objeto real con los argumentos y devolver los resultados el cliente del objeto proxy.</span><span class="sxs-lookup"><span data-stu-id="29265-102">When a method call is made on the proxy, the remoting infrastructure provides the necessary support for passing the arguments to the actual object across the remoting boundaries, calling the actual object method with the arguments, and returning the results back to the client of the proxy object.</span></span>  
  
 <span data-ttu-id="29265-103">Una llamada de método remoto es un mensaje que va desde el extremo de cliente para el extremo del servidor y posiblemente volver.</span><span class="sxs-lookup"><span data-stu-id="29265-103">A remote method call is a message that goes from the client end to the server end and possibly back again.</span></span> <span data-ttu-id="29265-104">Mientras que cruza los límites de comunicación remota en la forma, la llamada de método remoto pasa a través de una cadena de `IMessageSink` objetos.</span><span class="sxs-lookup"><span data-stu-id="29265-104">As it crosses remoting boundaries on the way, the remote method call passes through a chain of `IMessageSink` objects.</span></span> <span data-ttu-id="29265-105">Cada receptor de la cadena recibe el objeto de mensaje, realiza una operación específica y delega en el siguiente receptor de la cadena.</span><span class="sxs-lookup"><span data-stu-id="29265-105">Each sink in the chain receives the message object, performs a specific operation, and delegates to the next sink in the chain.</span></span> <span data-ttu-id="29265-106">El objeto proxy contiene una referencia a la primera `IMessageSink` debe usar para iniciar la cadena.</span><span class="sxs-lookup"><span data-stu-id="29265-106">The proxy object contains a reference to the first `IMessageSink` it needs to use to start off the chain.</span></span>  
  
 <span data-ttu-id="29265-107">Para las llamadas asincrónicas, en el momento de la delegación, cada receptor proporciona un receptor de respuesta (otro `IMessageSink`) que se llamará el siguiente receptor cuando la respuesta esté de regreso.</span><span class="sxs-lookup"><span data-stu-id="29265-107">For asynchronous calls, at the time of delegation, each sink provides a reply sink (another `IMessageSink`) that will be called by the next sink when the reply is on its way back.</span></span>  
  
 <span data-ttu-id="29265-108">Diferentes tipos de receptores realizan distintas operaciones, según el tipo de objeto de mensaje recibido.</span><span class="sxs-lookup"><span data-stu-id="29265-108">Different types of sinks perform different operations, depending on the type of message object received.</span></span> <span data-ttu-id="29265-109">Por ejemplo, un receptor podría provocar un bloqueo que se debe realizar, otro podría exigir un mecanismo de seguridad en las llamadas, otro podría realizar servicios de control y la confiabilidad de la llamada de flujo y todavía otro más podría transportar la llamada a otra <xref:System.AppDomain>, proceso o equipo.</span><span class="sxs-lookup"><span data-stu-id="29265-109">For example, one sink could cause a lock to be taken, another could enforce call security, another could perform flow call control and reliability services, and yet another could transport the call to a different <xref:System.AppDomain>, process, or computer.</span></span> <span data-ttu-id="29265-110">Dos o más receptores de mensajes en la cadena pueden interactuar entre sí con respecto a cada acción específica.</span><span class="sxs-lookup"><span data-stu-id="29265-110">Two or more message sinks in the chain can interact with each other in regard to each specific action.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29265-111">En el ejemplo de código siguiente se muestra la implementación de la <xref:System.Runtime.Remoting.Messaging.IMessageSink> interfaz.</span><span class="sxs-lookup"><span data-stu-id="29265-111">The following code example shows the implementation of the <xref:System.Runtime.Remoting.Messaging.IMessageSink> interface.</span></span> <span data-ttu-id="29265-112">Tenga en cuenta que en el ejemplo se considera las definiciones de tipo y las referencias de ensamblado que se deben proporcionar para que compilar el ejemplo.</span><span class="sxs-lookup"><span data-stu-id="29265-112">Note that the sample assumes type definitions and assembly references that must be provided for the sample to compile.</span></span>  
  
 [!code-cpp[IMessageSink_Client#3](~/samples/snippets/cpp/VS_Snippets_Remoting/IMessageSink_Client/CPP/imessagesink_client.cpp#3)]
 [!code-csharp[IMessageSink_Client#3](~/samples/snippets/csharp/VS_Snippets_Remoting/IMessageSink_Client/CS/imessagesink_client.cs#3)]
 [!code-vb[IMessageSink_Client#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMessageSink_Client/VB/imessagesink_client.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="29265-113">
        <para>Es importante tener en cuenta que el código que implementa la interfaz actual debe proporcionar implementaciones para ambos <see cref="M:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" /> y <see cref="M:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" />, ya que las llamadas sincrónicas se pueden convertir en llamadas asincrónicas y viceversa. Ambos métodos deben implementarse, incluso si el receptor no admite el procesamiento asincrónico.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="29265-113">
          <para>It is important to note that code implementing the current interface must provide implementations for both <see cref="M:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" /> and <see cref="M:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" />, since synchronous calls can be converted to asynchronous calls and vice versa. Both methods must be implemented, even if the sink does not support asynchronous processing.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <Member MemberName="AsyncProcessMessage">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessageCtrl AsyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Messaging.IMessageSink replySink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessageCtrl AsyncProcessMessage(class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Messaging.IMessageSink replySink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" />
      <MemberSignature Language="VB.NET" Value="Public Function AsyncProcessMessage (msg As IMessage, replySink As IMessageSink) As IMessageCtrl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::Messaging::IMessageCtrl ^ AsyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Messaging::IMessageSink ^ replySink);" />
      <MemberSignature Language="F#" Value="abstract member AsyncProcessMessage : System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Messaging.IMessageSink -&gt; System.Runtime.Remoting.Messaging.IMessageCtrl" Usage="iMessageSink.AsyncProcessMessage (msg, replySink)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageCtrl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="replySink" Type="System.Runtime.Remoting.Messaging.IMessageSink" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="29265-114">Mensaje que se va a procesar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29265-114">The message to process.</span>
          </span>
        </param>
        <param name="replySink">
          <span data-ttu-id="29265-115">Receptor de respuestas para el mensaje de respuesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29265-115">The reply sink for the reply message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29265-116">Procesa, de forma asincrónica, el mensaje especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29265-116">Asynchronously processes the given message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29265-117">Devuelve una interfaz <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> que proporciona una forma de controlar los mensajes asincrónicos, una vez enviados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29265-117">Returns an <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> interface that provides a way to control asynchronous messages after they have been dispatched.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29265-118">Este método se invoca en el receptor de mensajes mediante la infraestructura de comunicación remota o un receptor anterior de mensajes asincrónicos.</span><span class="sxs-lookup"><span data-stu-id="29265-118">This method is invoked on the message sink by the remoting infrastructure or by a previous sink for asynchronous messages.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="29265-119">El llamador inmediato hace la llamada mediante una referencia a la interfaz y no tiene permiso de infraestructura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29265-119">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="29265-120">Para trabajar con código de infraestructura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29265-120">for operating with infrastructure code.</span>
          </span>
          <span data-ttu-id="29265-121">Valor de la petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valor del permiso: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="29265-121">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="NextSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessageSink NextSink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Messaging.IMessageSink NextSink" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.IMessageSink.NextSink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextSink As IMessageSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Messaging::IMessageSink ^ NextSink { System::Runtime::Remoting::Messaging::IMessageSink ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextSink : System.Runtime.Remoting.Messaging.IMessageSink" Usage="System.Runtime.Remoting.Messaging.IMessageSink.NextSink" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29265-122">Obtiene el siguiente receptor de mensajes en la cadena de receptores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29265-122">Gets the next message sink in the sink chain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29265-123">Siguiente receptor de mensajes en la cadena de receptores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29265-123">The next message sink in the sink chain.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="29265-124">El llamador inmediato hace la llamada mediante una referencia a la interfaz y no tiene permiso de infraestructura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29265-124">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="29265-125">Para trabajar con código de infraestructura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29265-125">for operating with infrastructure code.</span>
          </span>
          <span data-ttu-id="29265-126">Valor de la petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valor del permiso: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="29265-126">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SyncProcessMessage">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessage SyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessage SyncProcessMessage(class System.Runtime.Remoting.Messaging.IMessage msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function SyncProcessMessage (msg As IMessage) As IMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::Messaging::IMessage ^ SyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage ^ msg);" />
      <MemberSignature Language="F#" Value="abstract member SyncProcessMessage : System.Runtime.Remoting.Messaging.IMessage -&gt; System.Runtime.Remoting.Messaging.IMessage" Usage="iMessageSink.SyncProcessMessage msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="29265-127">Mensaje que se va a procesar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29265-127">The message to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29265-128">Procesa, de forma sincrónica, el mensaje especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29265-128">Synchronously processes the given message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29265-129">Un mensaje de respuesta a la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29265-129">A reply message in response to the request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29265-130">El <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A> método se invoca en el receptor de mensajes mediante la infraestructura de comunicación remota o un receptor anterior de mensajes sincrónicos.</span><span class="sxs-lookup"><span data-stu-id="29265-130">The <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A> method is invoked on the message sink by the remoting infrastructure or by a previous sink for synchronous messages.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="29265-131">El llamador inmediato hace la llamada mediante una referencia a la interfaz y no tiene permiso de infraestructura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29265-131">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="29265-132">Para trabajar con código de infraestructura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29265-132">for operating with infrastructure code.</span>
          </span>
          <span data-ttu-id="29265-133">Valor de la petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valor del permiso: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="29265-133">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>