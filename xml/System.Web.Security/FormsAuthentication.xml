<Type Name="FormsAuthentication" FullName="System.Web.Security.FormsAuthentication">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f4f56adb7aba1c1c15a54767ca04681d14f6b223" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52245608" /></Metadata><TypeSignature Language="C#" Value="public sealed class FormsAuthentication" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FormsAuthentication extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.FormsAuthentication" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FormsAuthentication" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormsAuthentication sealed" />
  <TypeSignature Language="F#" Value="type FormsAuthentication = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Administra los servicios de autenticación de formularios para las aplicaciones Web. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Autenticación de formularios permite validar la contraseña para las aplicaciones Web que no requieren autenticación de Windows y usuario. Con la autenticación de formularios, información de usuario se almacena en un origen de datos externo, como un <xref:System.Web.Security.Membership> base de datos, o en el archivo de configuración para una aplicación. Una vez que un usuario se autentica, la autenticación de formularios mantiene un vale de autenticación en una cookie o en la dirección URL para que un usuario autenticado no necesita proporcionar credenciales con cada solicitud.  
  
 Autenticación de formularios se habilita estableciendo el `mode` atributo del elemento de configuración para `Forms`. Puede requerir que todas las solicitudes a una aplicación contienen un vale de autenticación de usuario válido usando el elemento de configuración para denegar la solicitud de cualquier usuario desconocido, tal como se muestra en el ejemplo siguiente.  
  
```  
<system.web>  
  <authentication mode="Forms">  
    <forms loginUrl="login.aspx" />  
  </authentication>  
  <authorization>  
    <deny users="?" />  
  </authorization>  
</system.web>  
```  
  
 En el ejemplo anterior, cualquier solicitud de una página ASP.NET que forma parte de la aplicación requiere un nombre de usuario válido que se proporciona mediante la autenticación de formularios. Si no existe ningún nombre de usuario, entonces la solicitud se redirige a la configurada <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.  
  
 La <xref:System.Web.Security.FormsAuthentication> clase proporciona acceso a los métodos y propiedades que puede usar en una aplicación que autentica a los usuarios. El <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método redirige un explorador a la configurada <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> para los usuarios inicien sesión en una aplicación. El <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método redirige al usuario autenticado a la dirección URL protegida original que se solicitó o a la <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>. También hay métodos que permiten administrar vales de autenticación de formularios, si es necesario.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra el archivo Web.config para una aplicación ASP.NET que usa el proveedor de pertenencia ASP.NET para la autenticación de formularios y requiere que todos los usuarios se autentiquen.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <add name="SqlProvider"  
          type="System.Web.Security.SqlMembershipProvider"  
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          passwordFormat="Hashed"  
          applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 En el ejemplo de código siguiente se muestra la página de inicio de sesión para una aplicación ASP.NET que usa la autenticación de formularios y la pertenencia a ASP.NET.  
  
> [!IMPORTANT]
>  En este ejemplo contiene un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Web.AspNetHostingPermission">Para usar el <see cref="T:System.Web.Security.FormsAuthentication" /> clase en un entorno hospedado. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Valor de permiso: <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />.</permission>
    <related type="Article" href="https://msdn.microsoft.com/library/77e21ba2-bad1-4967-a8ec-74942dea7e47">Proveedor de autenticación de formularios</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormsAuthentication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormsAuthentication();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Security.FormsAuthentication" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor no está pensado para usarse desde el código.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public static bool Authenticate (string name, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Authenticate(string name, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Authenticate (name As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Authenticate(System::String ^ name, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member Authenticate : string * string -&gt; bool" Usage="System.Web.Security.FormsAuthentication.Authenticate (name, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is to use the Membership APIs, such as Membership.ValidateUser. For more information, see http://go.microsoft.com/fwlink/?LinkId=252463.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre de usuario.</param>
        <param name="password">Contraseña del usuario.</param>
        <summary>Valida un nombre de usuario y contraseña contra credenciales almacenadas en el archivo de configuración de una aplicación.</summary>
        <returns><see langword="true" /> si el nombre de usuario y la contraseña son válidos; en caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El método de autenticación comprueba las credenciales de usuario que se almacenan en la sección del archivo de configuración de aplicación. Como alternativa, puede usar la pertenencia a ASP.NET para almacenar las credenciales de usuario y la llamada la <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> para comprobar las credenciales. Para obtener más información, consulte [administrar usuarios mediante pertenencia](https://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
 Para mejorar la seguridad, puede cifrar las contraseñas almacenadas en el archivo de configuración para una aplicación mediante el uso de la <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> método.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra las credenciales de usuario almacenadas en el archivo Web.config para una aplicación. Los valores de las contraseñas han sido usa un algoritmo hash el <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> método.  
  
 `<authentication mode="Forms">`  
  
 `<forms loginUrl="login.aspx">`  
  
 `<credentials passwordFormat="SHA1">`  
  
 `<user name="user1"   password="27CE4CA7FBF00685AF2F617E3F5BBCAFF7B7403C" />`  
  
 `<user name="user2"   password="D108F80936F78DFDD333141EBC985B0233A30C7A" />`  
  
 `<user name="user3" password="7BDB09781A3F23885CD43177C0508B375CB1B7E9"/>`  
  
 `</credentials>`  
  
 `</forms>`  
  
 `</authentication>`  
  
 En el ejemplo de código siguiente se muestra una página de inicio de sesión que usa el <xref:System.Web.Security.FormsAuthentication.Authenticate%2A> método para validar las credenciales de usuario.  
  
> [!IMPORTANT]
>  En este ejemplo contiene un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CookieDomain">
      <MemberSignature Language="C#" Value="public static string CookieDomain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string CookieDomain" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookieDomain" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieDomain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ CookieDomain { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieDomain : string" Usage="System.Web.Security.FormsAuthentication.CookieDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor del dominio de la cookie de autenticación de formularios.</summary>
        <value>Propiedad <see cref="P:System.Web.HttpCookie.Domain" /> de la cookie de autenticación de formularios. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.FormsAuthentication.CookieDomain%2A> valor de propiedad se establece en el archivo de configuración para una aplicación ASP.NET mediante el `domain` atributo del elemento de configuración. El <xref:System.Web.Security.FormsAuthentication.CookieDomain%2A> determina el valor de propiedad el <xref:System.Web.HttpCookie.Domain%2A> que se usará para la cookie.  
  
   
  
## Examples  
 El siguiente ejemplo de código establece la `domain` atributo en el archivo Web.config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    domain="contoso.com" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CookieMode">
      <MemberSignature Language="C#" Value="public static System.Web.HttpCookieMode CookieMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Web.HttpCookieMode CookieMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookieMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieMode As HttpCookieMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::HttpCookieMode CookieMode { System::Web::HttpCookieMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieMode : System.Web.HttpCookieMode" Usage="System.Web.Security.FormsAuthentication.CookieMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si la aplicación está configurada para autenticación mediante formularios sin cookies.</summary>
        <value>Uno de los valores de <see cref="T:System.Web.HttpCookieMode" /> que indica si la aplicación está configurada para autenticación de formularios sin cookies. El valor predeterminado es <see cref="F:System.Web.HttpCookieMode.UseDeviceProfile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> propiedad refleja el valor para el `cookieless` atributo del elemento de configuración. El <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> propiedad determina si el <xref:System.Web.Security.FormsAuthenticationTicket> valor se almacena en una cookie de sesión en el explorador o almacenado en el <xref:System.Web.HttpRequest.QueryString%2A> propiedad.  
  
> [!NOTE]
>  Cuando el <xref:System.Web.Security.FormsAuthenticationTicket> valor se almacena en el URI, la longitud del URI generado puede ser mayor que la longitud máxima permitida. Esto es más probable que se producen cuando el <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> propiedad está establecida en el nombre de la aplicación y el nombre de la aplicación es largo (40 o más caracteres) cuando los nombres de usuario en la aplicación son largos o largos cuando <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> cadenas se almacenan en el <xref:System.Web.Security.FormsAuthenticationTicket> valor. Si el URI generado es demasiado largo, el servidor Web devolverá un `400 - Bad Request` error.  
  
   
  
## Examples  
 El siguiente ejemplo de código establece la `cookieless` atributo `AutoDetect` en el archivo Web.config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="AutoDetect" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CookieSameSite">
      <MemberSignature Language="C#" Value="public static System.Web.SameSiteMode CookieSameSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Web.SameSiteMode CookieSameSite" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookieSameSite" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieSameSite As SameSiteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::SameSiteMode CookieSameSite { System::Web::SameSiteMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieSameSite : System.Web.SameSiteMode" Usage="System.Web.Security.FormsAuthentication.CookieSameSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SameSiteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor del atributo SameSite de la cookie.</summary>
        <value>Uno de los valores de enumeración que representa el modo de cumplimiento de la cookie. El valor predeterminado es <see cref="F:System.Web.SameSiteMode.Lax" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookiesSupported">
      <MemberSignature Language="C#" Value="public static bool CookiesSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CookiesSupported" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookiesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookiesSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CookiesSupported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CookiesSupported : bool" Usage="System.Web.Security.FormsAuthentication.CookiesSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si la aplicación está configurada para admitir la autenticación mediante formularios sin cookies.</summary>
        <value><see langword="false" /> si la aplicación está configurada para admitir la autenticación de formularios sin cookies; de lo contrario, <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propiedad devuelve un valor basado en la <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> valor y las capacidades del explorador.  
  
-   Si el <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> propiedad está establecida en <xref:System.Web.HttpCookieMode.UseCookies>, <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propiedad devolverá `true`.  
  
-   Si el <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> propiedad está establecida en <xref:System.Web.HttpCookieMode.UseUri>, <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propiedad devolverá `false`.  
  
-   Si el <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> propiedad está establecida en <xref:System.Web.HttpCookieMode.AutoDetect>, <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propiedad devolverá `true` si el explorador admite cookies y las cookies están habilitadas; en caso contrario, el <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propiedad devolverá `false`.  
  
-   Si el <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> propiedad está establecida en <xref:System.Web.HttpCookieMode.UseDeviceProfile>, el <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propiedad devolverá `true` si el <xref:System.Web.HttpRequest.Browser%2A> actual <xref:System.Web.HttpContext.Request%2A> admite las cookies y redirigir con cookies; de lo contrario, el <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propiedad devolverá `false`.  
  
   
  
## Examples  
 El siguiente ejemplo de código establece la `cookieless` atributo <xref:System.Web.HttpCookieMode.UseUri> en el archivo Web.config. Esta configuración dará como resultado la <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propiedad devolver `false`.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseUri" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public static System.Web.Security.FormsAuthenticationTicket Decrypt (string encryptedTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.FormsAuthenticationTicket Decrypt(string encryptedTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Decrypt(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decrypt (encryptedTicket As String) As FormsAuthenticationTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::FormsAuthenticationTicket ^ Decrypt(System::String ^ encryptedTicket);" />
      <MemberSignature Language="F#" Value="static member Decrypt : string -&gt; System.Web.Security.FormsAuthenticationTicket" Usage="System.Web.Security.FormsAuthentication.Decrypt encryptedTicket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.FormsAuthenticationTicket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedTicket" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encryptedTicket">Vale de autenticación cifrado.</param>
        <summary>Crea un objeto <see cref="T:System.Web.Security.FormsAuthenticationTicket" /> basado en el vale de autenticación de formularios cifrado que se pasa al método.</summary>
        <returns>Un objeto <see cref="T:System.Web.Security.FormsAuthenticationTicket" />. Si el parámetro <paramref name="encryptedTicket" /> no es un vale válido, se devuelve <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">El valor de <paramref name="encryptedTicket" /> es <see langword="null" />.  
  
\- o - 
 <paramref name="encryptedTicket" /> es una cadena vacía ("").  
  
\- o - 
La longitud de <paramref name="encryptedTicket" /> es mayor que 4096 caracteres.  
  
\- o - 
 <paramref name="encryptedTicket" /> tiene un formato no válido.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultUrl">
      <MemberSignature Language="C#" Value="public static string DefaultUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string DefaultUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.DefaultUrl" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DefaultUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultUrl : string" Usage="System.Web.Security.FormsAuthentication.DefaultUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la dirección URL a la que se redirigirá la clase <see cref="T:System.Web.Security.FormsAuthentication" /> si no se especifica ninguna dirección URL de redireccionamiento.</summary>
        <value>Dirección URL a la que se redirigirá la clase <see cref="T:System.Web.Security.FormsAuthentication" /> si no se especifica ninguna dirección URL de redireccionamiento. El valor predeterminado es "default.aspx".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> valor de propiedad se establece en el archivo de configuración para una aplicación ASP.NET mediante el `defaultUrl` atributo del elemento de configuración. El <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> propiedad la usa el <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método si no se incluye ninguna dirección URL de retorno en la solicitud. De forma similar, el <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> método devolverá el <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> si no se incluye ninguna dirección URL de retorno en la solicitud.  
  
   
  
## Examples  
 El siguiente ejemplo de código establece la `defaultUrl` atributo en el archivo Web.config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    defaultUrl="index.aspx" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EnableCrossAppRedirects">
      <MemberSignature Language="C#" Value="public static bool EnableCrossAppRedirects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableCrossAppRedirects" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnableCrossAppRedirects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableCrossAppRedirects { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnableCrossAppRedirects : bool" Usage="System.Web.Security.FormsAuthentication.EnableCrossAppRedirects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si los usuarios autenticados se pueden redirigir a direcciones URL de otras aplicaciones Web.</summary>
        <value>Es <see langword="true" /> si los usuarios autenticados se pueden redirigir a direcciones URL de otras aplicaciones Web; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> el valor de propiedad se establece mediante la `enableCrossAppRedirects` atributo del elemento de configuración.  
  
 El <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> se comprueba la propiedad dentro de la <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método cuando la redirección de URL no señala a una página en la aplicación actual. Si <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> es `true`, a continuación, se realiza la redirección; si <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> es `false`, el explorador se redirige a la página definida en el <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> propiedad.  
  
> [!NOTE]
>  Al redirigir las páginas en todas las aplicaciones, debe asegurarse de que se repiten los atributos específicos en el elemento de configuración en las aplicaciones autenticadas. Para obtener más información y un ejemplo, vea [formularios de autenticación en las aplicaciones](https://msdn.microsoft.com/library/99e2f9e8-5b97-4a4d-a4ed-5f93276053b7).  
  
> [!IMPORTANT]
>  Cuando se permiten redirecciones entre aplicaciones, el sitio es vulnerable a un ataque que dirige a los usuarios a un sitio Web malintencionado pero usa la página de inicio de sesión para el sitio. Compruebe siempre que la dirección URL de redireccionamiento que devuelve el <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> método es una dirección URL que se espera para que asegurarse de que permiten redirecciones solo a sitios Web aprobados. También debe comprobar que la dirección URL de redireccionamiento usa el protocolo adecuado (HTTP o HTTPS). Para realizar estas comprobaciones, puede agregar un controlador de eventos de postback de datos a la página de inicio de sesión o puede agregar un controlador para el <xref:System.Web.UI.WebControls.Login.LoggedIn> eventos de la <xref:System.Web.UI.WebControls.Login> control.  
  
   
  
## Examples  
 El siguiente ejemplo de código establece la `enableCrossAppRedirects` atributo `true` en el archivo Web.config para una aplicación ASP.NET.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseUri"  
    requireSSL="true"   
    enableCrossAppRedirects="true" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EnableFormsAuthentication">
      <MemberSignature Language="C#" Value="public static void EnableFormsAuthentication (System.Collections.Specialized.NameValueCollection configurationData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableFormsAuthentication(class System.Collections.Specialized.NameValueCollection configurationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableFormsAuthentication (configurationData As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableFormsAuthentication(System::Collections::Specialized::NameValueCollection ^ configurationData);" />
      <MemberSignature Language="F#" Value="static member EnableFormsAuthentication : System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="System.Web.Security.FormsAuthentication.EnableFormsAuthentication configurationData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationData" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="configurationData">Colección de valores de nombre que contiene los valores para “defaultUrl” y/o “loginUrl”. El parámetro puede ser null si no hay valores para la dirección URL predeterminada o la dirección URL de inicio de sesión.</param>
        <summary>Habilita la autenticación de formularios.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> propiedad es `null`, que la propiedad está establecida en el valor de la dirección URL predeterminada de la `configurationData` parámetro. Si el <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> propiedad es `null`, que la propiedad se establece en el valor de dirección URL de inicio de sesión desde el `configurationData` parámetro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La aplicación no está en la fase de inicialización previa al inicio.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public static string Encrypt (System.Web.Security.FormsAuthenticationTicket ticket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Encrypt(class System.Web.Security.FormsAuthenticationTicket ticket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encrypt (ticket As FormsAuthenticationTicket) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Encrypt(System::Web::Security::FormsAuthenticationTicket ^ ticket);" />
      <MemberSignature Language="F#" Value="static member Encrypt : System.Web.Security.FormsAuthenticationTicket -&gt; string" Usage="System.Web.Security.FormsAuthentication.Encrypt ticket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ticket" Type="System.Web.Security.FormsAuthenticationTicket" />
      </Parameters>
      <Docs>
        <param name="ticket">Objeto <see cref="T:System.Web.Security.FormsAuthenticationTicket" /> con el que se creará el vale de autenticación de formularios cifrado.</param>
        <summary>Crea una cadena que contiene un vale de autenticación de formularios cifrado apto para utilizarlo en una cookie HTTP.</summary>
        <returns>Cadena que contiene un vale de autenticación de formularios cifrado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo de código siguiente almacena el resultado de la <xref:System.Web.Security.FormsAuthentication.Encrypt%2A> método en una cookie utilizando la <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> propiedad y redirige al usuario a la dirección URL devuelta desde el <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> método.  
  
> [!IMPORTANT]
>  En este ejemplo contiene un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormsAuthenticationTicketClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationTicketClass/CS/formsauthenticationticketclasscs.aspx#1)]
 [!code-aspx-vb[FormsAuthenticationTicketClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationTicketClass/VB/formsauthenticationticketclassvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="ticket" /> es <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FormsCookieName">
      <MemberSignature Language="C#" Value="public static string FormsCookieName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string FormsCookieName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.FormsCookieName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FormsCookieName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ FormsCookieName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormsCookieName : string" Usage="System.Web.Security.FormsAuthentication.FormsCookieName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de la cookie utilizada para almacenar el vale de autenticación de formularios.</summary>
        <value>Nombre de la cookie utilizada para almacenar el vale de autenticación de formularios. El valor predeterminado es ".ASPXAUTH".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> valor de propiedad se establece en el archivo de configuración para una aplicación ASP.NET mediante el `name` atributo del elemento de configuración. El <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> se usa para hacer referencia a la cookie que almacena el <xref:System.Web.Security.FormsAuthenticationTicket> información.  
  
   
  
## Examples  
 El siguiente ejemplo de código establece la <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> valor de propiedad mediante el uso de la `name` atributo en el archivo Web.config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    name=".ASPXFORMSAUTH" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FormsCookiePath">
      <MemberSignature Language="C#" Value="public static string FormsCookiePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string FormsCookiePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.FormsCookiePath" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FormsCookiePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ FormsCookiePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormsCookiePath : string" Usage="System.Web.Security.FormsAuthentication.FormsCookiePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la ruta de acceso para la cookie de autenticación de formularios.</summary>
        <value>La ruta de acceso de la cookie donde se almacena la información del vale de autenticación de formularios. El valor predeterminado es "/".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> valor de propiedad se establece en el archivo de configuración para una aplicación ASP.NET con la `path` atributo del elemento de configuración. El <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> especifica la <xref:System.Web.HttpCookie.Path%2A> para la cookie que almacena el <xref:System.Web.Security.FormsAuthenticationTicket> información.  
  
   
  
## Examples  
 El siguiente ejemplo de código establece la <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> valor de propiedad mediante el uso de la `path` atributo en el archivo Web.config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    path="/MyApplication" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAuthCookie">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea una cookie de autenticación para un nombre de usuario dado.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAuthCookie">
      <MemberSignature Language="C#" Value="public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.HttpCookie GetAuthCookie(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAuthCookie (userName As String, createPersistentCookie As Boolean) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::HttpCookie ^ GetAuthCookie(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member GetAuthCookie : string * bool -&gt; System.Web.HttpCookie" Usage="System.Web.Security.FormsAuthentication.GetAuthCookie (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">Nombre del usuario autenticado.</param>
        <param name="createPersistentCookie"><see langword="true" /> para crear una cookie duradera (aquella que se guarda en cada sesión del explorador); en caso contrario, <see langword="false" />.</param>
        <summary>Crea una cookie de autenticación para un nombre de usuario dado. Esto no establece la cookie como parte de la respuesta de salida, de modo que una aplicación pueda tener más control sobre cómo se emite la cookie.</summary>
        <returns>Objeto <see cref="T:System.Web.HttpCookie" /> que contiene información cifrada del vale de autenticación de formularios. Se utiliza el valor predeterminado de la propiedad <see cref="P:System.Web.Security.FormsAuthentication.FormsCookiePath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La ruta de acceso de la cookie viene determinada por la <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetAuthCookie">
      <MemberSignature Language="C#" Value="public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.HttpCookie GetAuthCookie(string userName, bool createPersistentCookie, string strCookiePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAuthCookie (userName As String, createPersistentCookie As Boolean, strCookiePath As String) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::HttpCookie ^ GetAuthCookie(System::String ^ userName, bool createPersistentCookie, System::String ^ strCookiePath);" />
      <MemberSignature Language="F#" Value="static member GetAuthCookie : string * bool * string -&gt; System.Web.HttpCookie" Usage="System.Web.Security.FormsAuthentication.GetAuthCookie (userName, createPersistentCookie, strCookiePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
        <Parameter Name="strCookiePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">Nombre del usuario autenticado.</param>
        <param name="createPersistentCookie"><see langword="true" /> para crear una cookie duradera (aquella que se guarda en cada sesión del explorador); en caso contrario, <see langword="false" />.</param>
        <param name="strCookiePath">Propiedad <see cref="P:System.Web.HttpCookie.Path" /> de la cookie de autenticación.</param>
        <summary>Crea una cookie de autenticación para un nombre de usuario dado. Esto no establece la cookie como parte de la respuesta saliente.</summary>
        <returns>Objeto <see cref="T:System.Web.HttpCookie" /> que contiene información cifrada del vale de autenticación de formularios.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetRedirectUrl">
      <MemberSignature Language="C#" Value="public static string GetRedirectUrl (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetRedirectUrl(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRedirectUrl (userName As String, createPersistentCookie As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetRedirectUrl(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member GetRedirectUrl : string * bool -&gt; string" Usage="System.Web.Security.FormsAuthentication.GetRedirectUrl (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">Nombre del usuario autenticado.</param>
        <param name="createPersistentCookie">Este parámetro se ignora.</param>
        <summary>Devuelve la URL redirigida de la solicitud original causante de la redirección a la página de inicio de sesión.</summary>
        <returns>Cadena que contiene la URL de redireccionamiento, o NULL si <paramref name="userName" /> es NULL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar este método cuando desee realizar la redirección en el código de aplicación en lugar de usar el <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método.  
  
 El <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> método devuelve la dirección URL especificada en la cadena de consulta usando el `ReturnURL` nombre de variable. Por ejemplo, en la dirección URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> método devuelve la dirección URL de retorno `caller.aspx`. Si el `ReturnURL` variable no existe, el <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> método devuelve la dirección URL en el <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> propiedad.  
  
 Cuando el explorador se redirige a la página de inicio de sesión, ASP.NET agrega automáticamente la URL de retorno.  
  
 De forma predeterminada, el `ReturnUrl` variable debe hacer referencia a una página dentro de la aplicación actual. Si `ReturnUrl` hace referencia a una página en una aplicación diferente o en un servidor diferente, el <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> métodos devuelve la dirección URL en el <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> propiedad. Si desea permitir que la dirección URL de retorno hacer referencia a una página fuera de la aplicación actual, debe establecer el <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> propiedad `true` utilizando el `enableCrossAppRedirects` atributo del elemento de configuración.  

Este método no crea una cookie.
  
> [!IMPORTANT]
>  Establecer el <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> propiedad `true` para permitir redireccionamientos entre aplicaciones es una amenaza de seguridad. Para obtener más información, vea la propiedad <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>.  
  
   
  
## Examples  
 El siguiente código redirecciones de ejemplo los usuarios autenticados a la dirección URL devuelven desde el <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> método.  
  
> [!IMPORTANT]
>  En este ejemplo contiene un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormsAuthenticationTicketClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationTicketClass/CS/formsauthenticationticketclasscs.aspx#1)]
 [!code-aspx-vb[FormsAuthenticationTicketClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationTicketClass/VB/formsauthenticationticketclassvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="HashPasswordForStoringInConfigFile">
      <MemberSignature Language="C#" Value="public static string HashPasswordForStoringInConfigFile (string password, string passwordFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HashPasswordForStoringInConfigFile(string password, string passwordFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashPasswordForStoringInConfigFile (password As String, passwordFormat As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HashPasswordForStoringInConfigFile(System::String ^ password, System::String ^ passwordFormat);" />
      <MemberSignature Language="F#" Value="static member HashPasswordForStoringInConfigFile : string * string -&gt; string" Usage="System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile (password, passwordFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is to use the Membership APIs, such as Membership.CreateUser. For more information, see http://go.microsoft.com/fwlink/?LinkId=252463.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="passwordFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="password">Contraseña a la que se va a aplicar un algoritmo hash.</param>
        <param name="passwordFormat">Algoritmo hash que se va a usar. <paramref name="passwordFormat" /> es un valor de tipo <see langword="String" /> que representa uno de los valores de la enumeración <see cref="T:System.Web.Configuration.FormsAuthPasswordFormat" />.</param>
        <summary>Genera una contraseña con algoritmo hash apropiada para almacenar en un archivo de configuración basándose en la contraseña y el algoritmo hash especificados.</summary>
        <returns>Contraseña con algoritmo hash.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> método crea un valor de contraseña con algoritmo hash que se puede usar cuando las credenciales de autenticación de formularios de almacenar en el archivo de configuración para una aplicación.  
  
 Se usan las credenciales de autenticación que se almacenan en el archivo de configuración para una aplicación mediante el <xref:System.Web.Security.FormsAuthentication.Authenticate%2A> método para comprobar las contraseñas de usuarios de una aplicación. Como alternativa, puede usar la pertenencia a ASP.NET para almacenar las credenciales de usuario. Para obtener más información, consulte [administrar usuarios mediante pertenencia](https://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se toma un nombre de usuario, contraseña y tipo de algoritmo hash y se muestra la sección de la configuración que incluye la definición de usuario y contraseña con algoritmo hash.  
  
> [!IMPORTANT]
>  En este ejemplo contiene un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormsAuthenticationHashPassword#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationHashPassword/CS/formsauthenticationhashpasswordcs.aspx#1)]
 [!code-aspx-vb[FormsAuthenticationHashPassword#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationHashPassword/VB/formsauthenticationhashpasswordvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="password" /> es <see langword="null" />  
  
O bien 
 El valor de <paramref name="passwordFormat" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="passwordFormat" /> no es un valor <see cref="T:System.Web.Configuration.FormsAuthPasswordFormat" /> válido.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public static void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Initialize();" />
      <MemberSignature Language="F#" Value="static member Initialize : unit -&gt; unit" Usage="System.Web.Security.FormsAuthentication.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicializa el objeto <see cref="T:System.Web.Security.FormsAuthentication" /> basándose en las opciones de configuración de la aplicación.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.FormsAuthentication.Initialize%2A> método se llama cuando el <xref:System.Web.Security.FormsAuthenticationModule> crea una instancia de la <xref:System.Web.Security.FormsAuthentication> clase. No está prevista la llamada a este método desde el código.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public static bool IsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool" Usage="System.Web.Security.FormsAuthentication.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el la autenticación de formularios está habilitada.</summary>
        <value><see langword="true" /> si la autenticación de formas está habilitada; en caso contrario, devuelve el valor <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoginUrl">
      <MemberSignature Language="C#" Value="public static string LoginUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string LoginUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.LoginUrl" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LoginUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ LoginUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoginUrl : string" Usage="System.Web.Security.FormsAuthentication.LoginUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la dirección URL de la página de inicio de sesión a la que se redirigirá la clase <see cref="T:System.Web.Security.FormsAuthentication" />.</summary>
        <value>Dirección URL de la página de inicio de sesión a la que se redirigirá la clase <see cref="T:System.Web.Security.FormsAuthentication" />. El valor predeterminado es "login.aspx".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> valor de propiedad se establece en el archivo de configuración para una aplicación ASP.NET mediante el `loginUrl` atributo del elemento de configuración. El <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> está usando el <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método.  
  
   
  
## Examples  
 El siguiente ejemplo de código establece la `loginUrl` atributo en el archivo Web.config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    defaultUrl="index.aspx" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectFromLoginPage">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Redirige al usuario autenticado hacia la dirección URL originalmente solicitada o a la dirección URL predeterminada.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectFromLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectFromLoginPage (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectFromLoginPage(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectFromLoginPage (userName As String, createPersistentCookie As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectFromLoginPage(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member RedirectFromLoginPage : string * bool -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectFromLoginPage (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">Nombre del usuario autenticado.</param>
        <param name="createPersistentCookie"><see langword="true" /> para crear una cookie duradera (aquella que se guarda en cada sesión del explorador); en caso contrario, <see langword="false" />.</param>
        <summary>Redirige al usuario autenticado hacia la dirección URL originalmente solicitada o a la dirección URL predeterminada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método redirige a la dirección URL especificada en la cadena de consulta usando el `ReturnURL` nombre de variable. Por ejemplo, en la dirección URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método redirige a la dirección URL de retorno `caller.aspx`. Si el `ReturnURL` variable no existe, el <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método redirige a la dirección URL en el <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> propiedad.  
  
 Cuando el explorador se redirige a la página de inicio de sesión, ASP.NET agrega automáticamente la URL de retorno.  
  
 De forma predeterminada, el `ReturnUrl` variable debe hacer referencia a una página dentro de la aplicación actual. Si `ReturnUrl` hace referencia a una página en una aplicación diferente o en un servidor diferente, el <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> métodos redirige a la dirección URL en el <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> propiedad. Si desea permitir que redirige a una página fuera de la aplicación actual, debe establecer el <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> propiedad `true` utilizando el `enableCrossAppRedirects` atributo del elemento de configuración.  
  
> [!IMPORTANT]
>  Establecer el <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> propiedad `true` para permitir redireccionamientos entre aplicaciones es una amenaza de seguridad. Para obtener más información, vea la propiedad <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>.  
  
 Si el <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propiedad es `true`y el `ReturnUrl` variable está dentro de la aplicación actual o el <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> propiedad es `true`, el <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método emite un vale de autenticación y lo coloca en el uso de cookies predeterminado el <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> método.  
  
 Si <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> es `false` y es la ruta de acceso de redirección a una dirección URL de la aplicación actual, el vale se emitió como parte de la dirección URL de redireccionamiento. Si <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> es `false`, <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> es `true`y la redirección de URL no hace referencia a una página dentro de la aplicación actual, el <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método emite un vale de autenticación y lo coloca en el <xref:System.Web.HttpRequest.QueryString%2A> propiedad.  
  
   
  
## Examples  
 El ejemplo de código siguiente redirige usuarios validados a la dirección de URL originalmente solicitada o el <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>. El ejemplo de código usa la pertenencia a ASP.NET para validar a los usuarios. Para obtener más información sobre la pertenencia a ASP.NET, vea [administrar usuarios mediante pertenencia](https://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
> [!IMPORTANT]
>  En este ejemplo contiene un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">La dirección URL devuelta especificada en la cadena de consulta contiene un protocolo que no es ni HTTP: ni HTTPS:.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RedirectFromLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectFromLoginPage (string userName, bool createPersistentCookie, string strCookiePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectFromLoginPage(string userName, bool createPersistentCookie, string strCookiePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectFromLoginPage (userName As String, createPersistentCookie As Boolean, strCookiePath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectFromLoginPage(System::String ^ userName, bool createPersistentCookie, System::String ^ strCookiePath);" />
      <MemberSignature Language="F#" Value="static member RedirectFromLoginPage : string * bool * string -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectFromLoginPage (userName, createPersistentCookie, strCookiePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
        <Parameter Name="strCookiePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">Nombre del usuario autenticado.</param>
        <param name="createPersistentCookie"><see langword="true" /> para crear una cookie duradera (aquella que se guarda en cada sesión del explorador); en caso contrario, <see langword="false" />.</param>
        <param name="strCookiePath">Ruta de cookies de acceso para el vale de autenticación de formularios.</param>
        <summary>Redirige a un usuario autenticado a la dirección URL originalmente solicitada o la dirección URL predeterminada utilizando la ruta de acceso de cookies especificada para la cookie de autenticación de formularios.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método redirige a la dirección URL devuelta especificada en la cadena de consulta con el `ReturnURL` nombre de variable. Por ejemplo, en la dirección URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método redirige a la dirección URL de retorno `caller.aspx`. Si el `ReturnURL` variable no existe, el <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método redirige a la dirección URL en el <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> propiedad.  
  
 Cuando el explorador se redirige a la página de inicio de sesión, ASP.NET agrega automáticamente la URL de retorno.  
  
 De forma predeterminada, el `ReturnUrl` variable debe hacer referencia a una página dentro de la aplicación actual. Si `ReturnUrl` hace referencia a una página en una aplicación diferente o en un servidor diferente, el <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método redirige a la dirección URL en el <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> propiedad. Si desea permitir que redirige a una página fuera de la aplicación actual, debe establecer el <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> propiedad `true` utilizando el `enableCrossAppRedirects` atributo del elemento de configuración.  
  
> [!IMPORTANT]
>  Establecer el <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> propiedad `true` para permitir redireccionamientos entre aplicaciones es una amenaza de seguridad. Para obtener más información, vea la propiedad <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>.  
  
 Si el <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propiedad es `true`y el `ReturnUrl` variable está dentro de la aplicación actual o el <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> propiedad es `true`, el <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método emite un vale de autenticación y lo coloca en el cookie especificada por el `strCookiePath` parámetro mediante el <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> método.  
  
 Si <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> es `false` y es la ruta de acceso de redirección a una dirección URL de la aplicación actual, el vale se emitió como parte de la dirección URL de redireccionamiento. Si <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> es `false`, <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> es `true`y la redirección de URL no hace referencia a una página dentro de la aplicación actual, el <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método emite un vale de autenticación y lo coloca en el <xref:System.Web.HttpRequest.QueryString%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">La dirección URL devuelta especificada en la cadena de consulta contiene un protocolo que no es ni HTTP: ni HTTPS:.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectToLoginPage">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Redirige el explorador a la dirección URL de inicio de sesión.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método redirige el explorador a la <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.  
  
 El <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método no borra la cookie de autenticación de formularios. Puede usar el <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método junto con el <xref:System.Web.Security.FormsAuthentication.SignOut%2A> método para un usuario cierre la sesión y permitir que un usuario diferente iniciar sesión.  
  
 A diferencia de la <xref:System.Web.HttpResponse.Redirect%2A?displayProperty=nameWithType> método, este método no finaliza la solicitud mediante una llamada a <xref:System.Web.HttpResponse.End%2A?displayProperty=nameWithType>. Esto significa que el código que sigue el <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> se ejecutará la llamada al método.  
  
   
  
## Examples  
 En el siguiente ejemplo se borra la cookie de autenticación de formularios utilizando el <xref:System.Web.Security.FormsAuthentication.SignOut%2A> método y redirige al usuario al inicio de sesión página utilizando la <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método.  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signoutcs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signoutvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectToLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectToLoginPage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectToLoginPage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectToLoginPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectToLoginPage ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectToLoginPage();" />
      <MemberSignature Language="F#" Value="static member RedirectToLoginPage : unit -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectToLoginPage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Redirige el explorador a la dirección URL de inicio de sesión.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método redirige el explorador a la <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.  
  
 El <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método no borra la cookie de autenticación de formularios. Puede usar el <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método junto con el <xref:System.Web.Security.FormsAuthentication.SignOut%2A> método para un usuario cierre la sesión y permitir que un usuario diferente iniciar sesión.  
  
   
  
## Examples  
 En el siguiente ejemplo se borra la cookie de autenticación de formularios utilizando el <xref:System.Web.Security.FormsAuthentication.SignOut%2A> método y redirige al usuario al inicio de sesión página utilizando la <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método.  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signoutcs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signoutvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RedirectToLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectToLoginPage (string extraQueryString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectToLoginPage(string extraQueryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectToLoginPage (extraQueryString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectToLoginPage(System::String ^ extraQueryString);" />
      <MemberSignature Language="F#" Value="static member RedirectToLoginPage : string -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectToLoginPage extraQueryString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extraQueryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extraQueryString">Cadena de consulta que se incluirá con la dirección URL de redireccionamiento.</param>
        <summary>Redirige el explorador a la dirección URL de inicio de sesión con la cadena de consulta especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método redirige el explorador a la <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> e incluye el `extraQueryString` valor como el <xref:System.Management.ManagementQuery.QueryString%2A> para la dirección URL redirigida.  
  
 El <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método no borra la cookie de autenticación de formularios. Puede usar el <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método junto con el <xref:System.Web.Security.FormsAuthentication.SignOut%2A> método para un usuario cierre la sesión y permitir que un usuario diferente iniciar sesión.  
  
   
  
## Examples  
 En el siguiente ejemplo se borra la cookie de autenticación de formularios utilizando el <xref:System.Web.Security.FormsAuthentication.SignOut%2A> método y redirige al usuario al inicio de sesión página utilizando la <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método.  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signout2cs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signout2vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RenewTicketIfOld">
      <MemberSignature Language="C#" Value="public static System.Web.Security.FormsAuthenticationTicket RenewTicketIfOld (System.Web.Security.FormsAuthenticationTicket tOld);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.FormsAuthenticationTicket RenewTicketIfOld(class System.Web.Security.FormsAuthenticationTicket tOld) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RenewTicketIfOld (tOld As FormsAuthenticationTicket) As FormsAuthenticationTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::FormsAuthenticationTicket ^ RenewTicketIfOld(System::Web::Security::FormsAuthenticationTicket ^ tOld);" />
      <MemberSignature Language="F#" Value="static member RenewTicketIfOld : System.Web.Security.FormsAuthenticationTicket -&gt; System.Web.Security.FormsAuthenticationTicket" Usage="System.Web.Security.FormsAuthentication.RenewTicketIfOld tOld" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.FormsAuthenticationTicket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tOld" Type="System.Web.Security.FormsAuthenticationTicket" />
      </Parameters>
      <Docs>
        <param name="tOld">Vale de autenticación de formularios que se va a actualizar.</param>
        <summary>Actualiza condicionalmente la fecha y hora de emisión y de expiración para <see cref="T:System.Web.Security.FormsAuthenticationTicket" />.</summary>
        <returns><see cref="T:System.Web.Security.FormsAuthenticationTicket" /> actualizado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.FormsAuthentication.RenewTicketIfOld%2A> método actualiza la fecha de expiración y la hora de la <xref:System.Web.Security.FormsAuthenticationTicket> si la fecha y hora actuales menos la <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> valor es mayor que el <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> valor menos la fecha y hora actuales.  
  
 El vale se actualiza con el <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> propiedad establecida en la fecha y hora actuales y el <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> propiedad establecida en la fecha y hora actuales más original <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> valor menos original <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> valor.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RequireSSL">
      <MemberSignature Language="C#" Value="public static bool RequireSSL { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool RequireSSL" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.RequireSSL" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RequireSSL As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool RequireSSL { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequireSSL : bool" Usage="System.Web.Security.FormsAuthentication.RequireSSL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si la cookie de autenticación de formularios requiere SSL para su devolución al servidor.</summary>
        <value><see langword="true" /> si se requiere SSL para devolver la cookie de autenticación de formularios al servidor; de lo contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> valor de propiedad se establece en el archivo de configuración para una aplicación ASP.NET mediante el `requireSSL` atributo del elemento de configuración. Puede especificar en el archivo Web.config de la aplicación ASP.NET si se requiere SSL (capa de Sockets seguros) para devolver la cookie de autenticación de formularios al servidor estableciendo el `requireSSL` atributo. Para obtener más información, vea <xref:System.Web.HttpCookie.Secure%2A>.  
  
 Se recomienda que si configura `requireSSL` como `false`, también configurar `slidingExpiration` como `false`para reducir la cantidad de tiempo para el que un vale es válido.  
  
   
  
## Examples  
 El siguiente ejemplo de código establece la `requireSSL` atributo en el archivo Web.config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    requireSSL="true"  
    path="/MyApplication" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAuthCookie">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un vale de autenticación para el nombre de usuario proporcionado y lo agrega a la colección de cookies de la respuesta o a la dirección URL si se usa la autenticación sin cookies.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> método agrega un vale de autenticación de formularios a la colección de cookies o la dirección URL si <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> es `false`. El vale de autenticación de formularios proporciona información de autenticación de formularios a la siguiente solicitud realizada por el explorador. Con la autenticación de formularios, puede usar el <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> método cuando desee autenticar a un usuario pero retener el control del panel de navegación con redireccionamientos.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197376">Se explica: Autenticación de formularios en ASP.NET 2.0</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197377">Cómo: Utilizar la pertenencia en ASP.NET 2.0</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAuthCookie">
      <MemberSignature Language="C#" Value="public static void SetAuthCookie (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAuthCookie(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAuthCookie (userName As String, createPersistentCookie As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAuthCookie(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member SetAuthCookie : string * bool -&gt; unit" Usage="System.Web.Security.FormsAuthentication.SetAuthCookie (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">Nombre de un usuario autenticado. No debe estar asignado a una cuenta de Windows.</param>
        <param name="createPersistentCookie">Es <see langword="true" /> para crear una cookie persistente (se guarda entre las sesiones del explorador); de lo contrario, es <see langword="false" />.</param>
        <summary>Crea un vale de autenticación para el nombre de usuario proporcionado y lo agrega a la colección de cookies de la respuesta o a la dirección URL si se usa la autenticación sin cookies.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> método agrega un vale de autenticación de formularios a la colección de cookies o a la dirección URL si <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> es `false`. El vale de autenticación de formularios proporciona información de autenticación de formularios a la siguiente solicitud realizada por el explorador. Con la autenticación de formularios, puede usar el <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> método cuando desee autenticar a un usuario pero retener el control del panel de navegación con redireccionamientos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.Security.FormsAuthentication.RequireSSL" /> es <see langword="true" /> y <see cref="P:System.Web.HttpRequest.IsSecureConnection" /> es <see langword="false" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SetAuthCookie">
      <MemberSignature Language="C#" Value="public static void SetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAuthCookie(string userName, bool createPersistentCookie, string strCookiePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAuthCookie (userName As String, createPersistentCookie As Boolean, strCookiePath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAuthCookie(System::String ^ userName, bool createPersistentCookie, System::String ^ strCookiePath);" />
      <MemberSignature Language="F#" Value="static member SetAuthCookie : string * bool * string -&gt; unit" Usage="System.Web.Security.FormsAuthentication.SetAuthCookie (userName, createPersistentCookie, strCookiePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
        <Parameter Name="strCookiePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">Nombre de un usuario autenticado.</param>
        <param name="createPersistentCookie"><see langword="true" /> para crear una cookie duradera (aquella que se guarda en cada sesión del explorador); en caso contrario, <see langword="false" />.</param>
        <param name="strCookiePath">Ruta de cookies de acceso para el vale de autenticación de formularios.</param>
        <summary>Crea un vale de autenticación para el nombre de usuario proporcionado y lo agrega a la colección de cookies de la respuesta, utilizando la ruta de cookies suministrada, o a la dirección URL si se usa la autenticación sin cookies.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> método agrega un vale de autenticación de formularios a la colección de cookies o la dirección URL si <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> es `false`. El vale de autenticación de formularios proporciona información de autenticación de formularios a la siguiente solicitud realizada por el explorador. Con la autenticación de formularios, puede usar el <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> método cuando desee autenticar a un usuario pero retener el control del panel de navegación con redireccionamientos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.Security.FormsAuthentication.RequireSSL" /> es <see langword="true" /> y <see cref="P:System.Web.HttpRequest.IsSecureConnection" /> es <see langword="false" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197376">Se explica: Autenticación de formularios en ASP.NET 2.0</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197377">Cómo: Utilizar la pertenencia en ASP.NET 2.0</related>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public static void SignOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SignOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.SignOut" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SignOut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SignOut();" />
      <MemberSignature Language="F#" Value="static member SignOut : unit -&gt; unit" Usage="System.Web.Security.FormsAuthentication.SignOut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quita el vale de autenticación de formularios del explorador.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.FormsAuthentication.SignOut%2A> método quita la información del vale de autenticación de formularios de la cookie o la dirección URL si <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> es `false`. Puede usar el <xref:System.Web.Security.FormsAuthentication.SignOut%2A> método junto con el <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método para un usuario cierre la sesión y permitir que un usuario diferente iniciar sesión.  
  
 Si se ejecuta exclusivamente en modo sin cookies, o si se admiten los usuarios autenticados y anónimos, explícitamente debe controlar la redirección a la página de inicio de sesión si requieren lógica de negocios especiales como resultado de quitar el identificador anónimo.  
  
 Cuando el <xref:System.Web.Security.FormsAuthentication.SignOut%2A> se llama al método, se realiza un redireccionamiento a la página de inicio de sesión de la aplicación mediante una llamada a la <xref:System.Web.HttpResponse.Redirect%2A> método con el `endResponse` parámetro establecido en `false`. El redireccionamiento no realizará hasta que la página actual ha terminado de ejecutarse, por lo que se puede ejecutar código adicional. Si el código no tiene un redireccionamiento explícito a otra página, el usuario se redirige a la página de inicio de sesión definido en el archivo de configuración de la aplicación.  
  
 Una llamada a la <xref:System.Web.Security.FormsAuthentication.SignOut%2A> método solo quita la cookie de autenticación de formularios. El servidor Web no almacena los vales de autenticación válido y ha expirado para una comparación posterior. Esto hace que su sitio vulnerable a ataques de reproducción si un usuario malintencionado obtiene una cookie de autenticación de formularios válido. Para mejorar la seguridad cuando se utiliza una cookie de autenticación de formularios, debe hacer lo siguiente:  
  
-   Usar una expiración absoluta para las cookies de autenticación de formularios estableciendo la <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> propiedad `false`. Esto limita la ventana en la que se puede reproducir una cookie secuestrada.  
  
-   Emitir solo y Aceptar las cookies de autenticación a través de Secure Sockets Layer (SSL), estableciendo el <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> propiedad `true` y ejecutando todo el sitio Web con SSL. Establecer el <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> propiedad `true` garantiza que ASP.NET nunca enviará una cookie de autenticación al explorador a través de una conexión no SSL; sin embargo, el cliente podría no respetan la configuración de seguridad de la cookie. Esto significa que el cliente podría enviar la cookie de autenticación de formularios a través de una conexión no SSL, dejando vulnerable al secuestro. Puede impedir que un cliente envía la cookie de autenticación de formularios sin cifrar mediante la ejecución de todo el sitio Web con SSL.  
  
-   Utilice el almacenamiento persistente en el servidor para registrar cuando un usuario cierra sesión en el sitio Web y, a continuación, usar un evento de aplicación, como <xref:System.Web.HttpApplication.PostAuthenticateRequest> evento para determinar si se autenticó al usuario actual con la autenticación de formularios. Si el usuario se autenticó con autenticación de formularios y, si indica la información de forma permanente el usuario está cerrado, inmediatamente borrar la cookie de autenticación y redirigir el explorador a la página de inicio de sesión. Después de iniciar sesión correctamente, actualice el almacenamiento para reflejar que el usuario ha iniciado sesión. Cuando se usa este método, la aplicación debe seguir el estado ha iniciado la sesión del usuario y debe obligar a los usuarios inactivos para cerrar sesión.  
  
   
  
## Examples  
 En el siguiente ejemplo se borra la cookie de autenticación de formularios utilizando el <xref:System.Web.Security.FormsAuthentication.SignOut%2A> método y redirige al usuario al inicio de sesión página utilizando la <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método.  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signoutcs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signoutvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197376">Se explica: Autenticación de formularios en ASP.NET 2.0</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197377">Cómo: Utilizar la pertenencia en ASP.NET 2.0</related>
      </Docs>
    </Member>
    <Member MemberName="SlidingExpiration">
      <MemberSignature Language="C#" Value="public static bool SlidingExpiration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool SlidingExpiration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.SlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SlidingExpiration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool SlidingExpiration { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SlidingExpiration : bool" Usage="System.Web.Security.FormsAuthentication.SlidingExpiration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si está habilitado el plazo de expiración.</summary>
        <value><see langword="true" /> si la expiración variable está habilitada; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> el valor de propiedad se establece mediante la `slidingExpiration` atributo del elemento de configuración.  
  
 Fecha de expiración variable restablece la hora de expiración para una cookie de autenticación válida si se realiza una solicitud y ha transcurrido más de la mitad del intervalo de tiempo de espera. Si la cookie expira, el usuario debe autenticarse de nuevo. Establecer el <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> propiedad `false` puede mejorar la seguridad de una aplicación mediante la limitación del tiempo para que una cookie de autenticación es válida, en función de la configurada `timeout` valor.  
  
 Se recomienda que si configura `requireSSL` como `false`, también configurar `slidingExpiration` como `false`para reducir la cantidad de tiempo para el que un vale es válido.  
  
   
  
## Examples  
 El siguiente ejemplo de código establece la `slidingExpiration` atributo `false` en el archivo Web.config para una aplicación ASP.NET.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    name=".ASPXFORMSAUTH"  
    cookieless="UseCookies"  
    requireSSL="true"   
    slidingExpiration="false" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Seguridad de aplicaciones web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="TicketCompatibilityMode">
      <MemberSignature Language="C#" Value="public static System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.TicketCompatibilityMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TicketCompatibilityMode As TicketCompatibilityMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Configuration::TicketCompatibilityMode TicketCompatibilityMode { System::Web::Configuration::TicketCompatibilityMode get(); };" />
      <MemberSignature Language="F#" Value="member this.TicketCompatibilityMode : System.Web.Configuration.TicketCompatibilityMode" Usage="System.Web.Security.FormsAuthentication.TicketCompatibilityMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.TicketCompatibilityMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si se va a usar la Hora universal coordinada (UTC) o la hora local para la fecha de expiración del vale.</summary>
        <value>Valor que indica si se va a usar la Hora universal coordinada (UTC) o la hora local para la fecha de expiración del vale.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public static TimeSpan Timeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Timeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan Timeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : TimeSpan" Usage="System.Web.Security.FormsAuthentication.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la cantidad de tiempo antes de que expire un vale de autenticación.</summary>
        <value>La cantidad de tiempo antes de que expire un vale de autenticación.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>