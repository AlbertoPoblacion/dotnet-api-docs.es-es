<Type Name="SqlMembershipProvider" FullName="System.Web.Security.SqlMembershipProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2c653fcd735b425b1a29ff05b8e411e9f2c59cc5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36397781" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlMembershipProvider : System.Web.Security.MembershipProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlMembershipProvider extends System.Web.Security.MembershipProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.SqlMembershipProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlMembershipProvider&#xA;Inherits MembershipProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlMembershipProvider : System::Web::Security::MembershipProvider" />
  <TypeSignature Language="F#" Value="type SqlMembershipProvider = class&#xA;    inherit MembershipProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.MembershipProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Manages storage of membership information for an ASP.NET application in a SQL Server database.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta clase es utilizada por la <xref:System.Web.Security.Membership> y <xref:System.Web.Security.MembershipUser> clases para proporcionar servicios de pertenencia para una aplicación de ASP.NET con una base de datos de SQL Server. No se puede utilizar un <xref:System.Web.Security.SqlMembershipProvider> sin SQL Server. Si el equipo tiene SQL Server Express instalado con el nombre de instancia predeterminado y un usuario la creación de instancias está habilitada, el <xref:System.Web.Security.SqlMembershipProvider> objeto creará una base de datos denominada `aspnetdb` en la aplicación `App_Data` directorio la primera vez la aplicación se ejecuta.  
  
 Para crear manualmente la base de datos, ejecute el `Aspnet_regsql.exe` ejecutable se encuentra en la `%systemroot%\Microsoft.NET\Framework\ versionNumber` carpeta y especifique la `-A m` opción (por ejemplo `aspnet_regsql.exe -A m`). La base de datos creada se llama Aspnetdb. O bien, ejecute `Aspnet_regsql.exe` para extraer el modo de configuración de la interfaz gráfica de usuario y optar por configurar todas las características de ASP.NET.  
  
 Si el proveedor de pertenencia está configurado con una cadena de conexión que utiliza seguridad integrada, la cuenta de proceso de la aplicación ASP.NET debe tener derechos para conectarse a la base de datos de SQL Server.  
  
 El archivo Machine.config define el valor predeterminado es <xref:System.Web.Security.SqlMembershipProvider> instancia denominada `AspNetSqlMembershipProvider` que se conecta a la instancia predeterminada de SQL Server Express en el equipo local. Puede utilizar esta instancia del proveedor si instaló SQL Server Express con el nombre de instancia predeterminado, o puede definir su propia instancia en el archivo Web.config para la aplicación de ASP.NET.  
  
 Si establece la `passwordCompatMode` atribuir a <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework40>, la aplicación puede usar el hash y opciones de pertenencia de cifrado que se agregaron en ASP.NET 4. Sin embargo, si la `passwordCompatMode` atributo está establecido en <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20>, solo la pertenencia de cifrado y hash opciones desde la versión 2.0 de ASP.NET, ASP.NET 3.5, y se puede utilizar ASP.NET 3.5 SP1. El valor predeterminado es <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20>. Para obtener más información, consulta <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el archivo Web.config para una aplicación ASP.NET configurada para utilizar un <xref:System.Web.Security.SqlMembershipProvider>.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx"  
        name=".ASPXFORMSAUTH" />  
    </authentication>  
    <authorization>  
      <deny users="?" />  
    </authorization>  
    <membership defaultProvider="SqlProvider"  
      userIsOnlineTimeWindow="15">  
      <providers>  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          applicationName="MyApplication"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          requiresUniqueEmail="false"  
          passwordFormat="Hashed"  
          maxInvalidPasswordAttempts="5"  
          passwordAttemptWindow="10" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlMembershipProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlMembershipProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Security.SqlMembershipProvider" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.SqlMembershipProvider.%23ctor%2A> constructor se lo llama ASP.NET para crear una instancia de la <xref:System.Web.Security.SqlMembershipProvider> clase tal como se especifica en la configuración de la aplicación. Este constructor no está pensado para usarse desde el código.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.SqlMembershipProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the application to store and retrieve membership information for.</summary>
        <value>El nombre de la aplicación para almacenar y recuperar información de pertenencia. El valor predeterminado es el <see cref="P:System.Web.HttpRequest.ApplicationPath" /> valor de propiedad actuales <see cref="P:System.Web.HttpContext.Request" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> utiliza el <xref:System.Web.Security.SqlMembershipProvider> para agrupar la información de usuario. Calificando la información del usuario con un nombre de aplicación, puede almacenar información para varias aplicaciones en una sola base de datos sin que se produzcan conflictos entre los nombres de usuario duplicados. Además, varias aplicaciones ASP.NET pueden utilizar la misma base de datos de usuario especificando el mismo valor en el <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> propiedad. El <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> propiedad puede establecerse mediante programación o se puede establecer mediante declaración en el archivo de configuración para la aplicación Web con el `applicationName` atributo.  
  
 Si no se especifica un valor para el `applicationName` atributo en el archivo de configuración para la aplicación Web, el <xref:System.Web.HttpRequest.ApplicationPath%2A> se utiliza el valor de propiedad para la primera solicitud realizada a la aplicación.  
  
> [!CAUTION]
>  Dado que una instancia del proveedor de pertenencia predeterminado solo se usa para todas las solicitudes servidas por un <xref:System.Web.HttpApplication> objeto, puede tener varias solicitudes ejecutando de forma simultánea y al intentar establecer la <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> valor de propiedad. El <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> propiedad no es un subproceso seguro para varias operaciones de escritura y que cambian el <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> valor de propiedad puede provocar un comportamiento inesperado para varios usuarios de una aplicación. Recomendamos que evite escribir código para permitir que los usuarios establezcan la <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> propiedad, a menos que debe. Un ejemplo de una aplicación que el valor del <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> propiedad puede ser necesaria es una aplicación administrativa que administre los datos de pertenencia para varias aplicaciones. Este tipo de aplicación debe ser una aplicación de usuario único y no es una aplicación Web.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el elemento en la `system.web` sección del archivo Web.config para una aplicación ASP.NET. Especifica la aplicación <xref:System.Web.Security.SqlMembershipProvider> instancia y establece el <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> a `MyApplication`.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">An attempt was made to set the <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> property to an empty string or <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">An attempt was made to set the <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> property to a string that is longer than 256 characters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public override bool ChangePassword (string username, string oldPassword, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePassword(string username, string oldPassword, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePassword (username As String, oldPassword As String, newPassword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePassword(System::String ^ username, System::String ^ oldPassword, System::String ^ newPassword);" />
      <MemberSignature Language="F#" Value="override this.ChangePassword : string * string * string -&gt; bool" Usage="sqlMembershipProvider.ChangePassword (username, oldPassword, newPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="oldPassword" Type="System.String" />
        <Parameter Name="newPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to update the password for.</param>
        <param name="oldPassword">The current password for the specified user.</param>
        <param name="newPassword">The new password for the specified user.</param>
        <summary>Modifies a user's password.</summary>
        <returns>
          <see langword="true" /> if the password was updated successfully. <see langword="false" /> if the supplied old password is invalid, the user is locked out, or the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es invocado por la <xref:System.Web.Security.Membership> clase para actualizar la contraseña de un usuario en la base de datos de SQL Server especificada en el archivo de configuración de la aplicación ASP.NET (Web.config).  
  
 La longitud máxima de la contraseña es de 128 caracteres.  
  
 Si se proporciona una contraseña incorrecta para el  <xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A> /método siguiente, el contador interno que realiza un seguimiento de intentos de contraseña no válida se incrementa en uno. Esto puede dar lugar al usuario está bloqueado y no se ha podido iniciar sesión hasta que se borre el estado de bloqueo por una llamada a la <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> método. Si se proporciona la contraseña correcta y el usuario no está bloqueado actualmente, los contadores internos esa contraseña no válida de seguimiento y los intentos de respuesta de contraseña se restablecen a cero. Para obtener más información, consulte el <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> y <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> propiedades.  
  
 Puede llamar a la <xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A> método directamente por obtener primero una referencia a la <xref:System.Web.Security.SqlMembershipProvider> instancia a través de la <xref:System.Web.Security.Membership.Provider%2A> propiedad de la <xref:System.Web.Security.Membership> clase. El <xref:System.Web.Security.Membership.Provider%2A> propiedad expone el `defaultProvider` especificado en el archivo Web.config para la aplicación. Configurar proveedores que no son el proveedor predeterminado que se hace referencia mediante el <xref:System.Web.Security.Membership.Providers%2A> propiedad.  
  
 También puede cambiar las contraseñas de usuario mediante el <xref:System.Web.Security.MembershipUser.ChangePassword%2A> método.  
  
 Espacios iniciales y finales se recortan de todos los valores de parámetro.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se modifica la contraseña para el usuario especificado.  
  
> [!NOTE]
>  Este ejemplo se utiliza la <xref:System.Web.Security.Membership.Provider%2A> propiedad de la <xref:System.Web.Security.Membership> clase para llamar a la <xref:System.Web.Security.SqlMembershipProvider> especificado como el `defaultProvider` en el archivo Web.config. Si necesita obtener acceso al proveedor predeterminado como el tipo de <xref:System.Web.Security.SqlMembershipProvider>, puede convertir el <xref:System.Web.Security.Membership.Provider%2A> propiedad de la <xref:System.Web.Security.Membership> clase. Para tener acceso a otros proveedores configurados como un tipo de proveedor específico, puede tener acceso a ellos por su nombre configurado con el <xref:System.Web.Security.Membership.Providers%2A> propiedad de la <xref:System.Web.Security.Membership> clase y convertirlos como el tipo de proveedor específico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordcs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  <paramref name="oldPassword" /> is an empty string or longer than 128 characters.  \- or -  <paramref name="newPassword" /> is an empty string or longer than 128 characters.  \- or -  The encoded version of <paramref name="newPassword" /> is greater than 128 characters.  \- or -  The change-password action was canceled by a subscriber to the <see cref="E:System.Web.Security.Membership.ValidatingPassword" /> event, and the <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" /> property was <see langword="null" />.  \- or -  The length of <paramref name="newPassword" /> is less than the minimum length specified in the <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" /> property.  \- or -  The number of non-alphabetic characters in <paramref name="newPassword" /> is less than the required number of non-alphabetic characters specified in the <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" /> property.  \- or -  <paramref name="newPassword" /> does not pass the regular expression defined in the <see cref="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" /> property.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="oldPassword" /> is <see langword="null" />.  \- or -  <paramref name="newPassword" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="username" /> was not found in the database.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">An error occurred while setting the new password value at the database.</exception>
        <exception cref="T:System.Exception">An unhandled exception occurred.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePasswordQuestionAndAnswer(string username, string password, string newPasswordQuestion, string newPasswordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePasswordQuestionAndAnswer (username As String, password As String, newPasswordQuestion As String, newPasswordAnswer As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePasswordQuestionAndAnswer(System::String ^ username, System::String ^ password, System::String ^ newPasswordQuestion, System::String ^ newPasswordAnswer);" />
      <MemberSignature Language="F#" Value="override this.ChangePasswordQuestionAndAnswer : string * string * string * string -&gt; bool" Usage="sqlMembershipProvider.ChangePasswordQuestionAndAnswer (username, password, newPasswordQuestion, newPasswordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="newPasswordQuestion" Type="System.String" />
        <Parameter Name="newPasswordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to change the password question and answer for.</param>
        <param name="password">The password for the specified user.</param>
        <param name="newPasswordQuestion">The new password question for the specified user.</param>
        <param name="newPasswordAnswer">The new password answer for the specified user.</param>
        <summary>Updates the password question and answer for a user in the SQL Server membership database.</summary>
        <returns>
          <see langword="true" /> if the update was successful; otherwise, <see langword="false" />. A value of <see langword="false" /> is also returned if the <paramref name="password" /> is incorrect, the user is locked out, or the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es invocado por la <xref:System.Web.Security.MembershipUser> clase para actualizar la pregunta de contraseña y respuesta para un usuario en la base de datos de SQL Server que se especifica en el archivo de configuración de la aplicación ASP.NET (Web.config). La respuesta de contraseña se cifra utilizando el formato que se especifica en el <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> propiedad.  
  
 Requerir una pregunta de contraseña y la respuesta, proporciona una capa adicional de seguridad al recuperar o restablecer una contraseña de usuario. Al crear un nombre de usuario, un usuario puede proporcionar una pregunta y respuesta que puede usarse más tarde para recuperar o restablecer una contraseña olvidada. El <xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A> método actualiza la pregunta de contraseña y la respuesta para un usuario de pertenencia.  
  
 Si se proporciona una contraseña incorrecta para el  <xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A> /método siguiente, los contadores internos que los intentos de contraseña no válida de seguimiento se incrementa en uno. Esto puede dar lugar al usuario está bloqueado y no se ha podido iniciar sesión hasta que se borre el estado de bloqueo mediante una llamada a la <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> método. Si se proporciona la contraseña correcta y el usuario no está bloqueado actualmente, los contadores internos esa contraseña no válida de seguimiento y los intentos de respuesta de contraseña se restablecen a cero. Para obtener más información, consulte el <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> y <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> propiedades.  
  
 La longitud máxima de la pregunta de contraseña es de 256 caracteres. La longitud máxima de la respuesta de contraseña es de 128 caracteres.  
  
 Para obtener más información, vea <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>, <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> y <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>.  
  
 Espacios iniciales y finales se recortan de todos los valores de parámetro.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se actualiza la pregunta de contraseña y la respuesta para un usuario.  
  
> [!NOTE]
>  Este ejemplo se utiliza la <xref:System.Web.Security.Membership.Provider%2A> propiedad de la <xref:System.Web.Security.Membership> clase para llamar a la <xref:System.Web.Security.SqlMembershipProvider> especificado como el `defaultProvider` en el archivo Web.config. Si necesita obtener acceso al proveedor predeterminado como el tipo de <xref:System.Web.Security.SqlMembershipProvider>, puede convertir el <xref:System.Web.Security.Membership.Provider%2A> propiedad de la <xref:System.Web.Security.Membership> clase. Para tener acceso a otros proveedores configurados como un tipo de proveedor específico, puede tener acceso a ellos por su nombre configurado con el <xref:System.Web.Security.Membership.Providers%2A> propiedad de la <xref:System.Web.Security.Membership> clase y convertirlos como el tipo de proveedor específico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordQuestioncs.aspx#10)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordQuestionvb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  <paramref name="password" /> is an empty string or is longer than 128 characters.  \- or -  <paramref name="newPasswordQuestion" /> is an empty string or is longer than 256 characters.  \- or -  <paramref name="newPasswordAnswer" /> is an empty string or is longer than 128 characters.  \- or -  The encoded version of <paramref name="newPasswordAnswer" /> is longer than 128 characters.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="password" /> is <see langword="null" />.  \- or -  <paramref name="newPasswordQuestion" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.  \- or -  <paramref name="newPasswordAnswer" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">An error occurred when changing the password question and answer in the database.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="override this.CreateUser : string * string * string * string * string * bool * obj *  -&gt; System.Web.Security.MembershipUser" Usage="sqlMembershipProvider.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, providerUserKey, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">The user name for the new user.</param>
        <param name="password">The password for the new user.</param>
        <param name="email">The email address for the new user.</param>
        <param name="passwordQuestion">The password question for the new user.</param>
        <param name="passwordAnswer">The password answer for the new user.</param>
        <param name="isApproved">Whether or not the new user is approved to be validated.</param>
        <param name="providerUserKey">A <see cref="T:System.Guid" /> that uniquely identifies the membership user in the SQL Server database.</param>
        <param name="status">One of the <see cref="T:System.Web.Security.MembershipCreateStatus" /> values, indicating whether the user was created successfully.</param>
        <summary>Adds a new user to the SQL Server membership database.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object for the newly created user. If no user was created, this method returns <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es invocado por la <xref:System.Web.Security.Membership> clase para crear un nuevo usuario en la base de datos de SQL Server especificada en el archivo de configuración de la aplicación ASP.NET.  
  
 Los nuevos usuarios se identifican con el configurado <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 Si el <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> propiedad está establecida en `true`, y `null` o una cadena vacía ("") se especifica para el `email` parámetro, la creación del usuario se producirá un error. La creación de usuario también se producirá un error si la <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> propiedad está establecida en `true` y el valor especificado para la `email` parámetro es un duplicado de la dirección de correo electrónico para un usuario existente en la base de datos para el <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 La longitud máxima del nombre de usuario es de 256 caracteres. La longitud máxima de la dirección de correo electrónico es de 256 caracteres. La longitud máxima de la contraseña en texto no cifrado o después de aplicar un algoritmo hash o cifrada es de 128 caracteres.  
  
 Otras condiciones que harán que la creación de usuario a un error:  
  
-   El `password` parámetro es `null`, o una cadena vacía después del recorte.  
  
-   La longitud de la `password` parámetro es menor que el valor especificado en el <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> propiedad.  
  
-   El número de caracteres no alfabéticos en el `password` parámetro es menor que el valor especificado en el <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> propiedad.  
  
-   El `password` parámetro no pasa la expresión regular en la <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> propiedad.  
  
-   Código de validación de contraseña personalizado canceló la creación del usuario durante la <xref:System.Web.Security.MembershipProvider.ValidatingPassword> eventos.  
  
-   El <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> propiedad es `true` y `passwordAnswer` parámetro sea `null` o una cadena vacía después del recorte.  
  
-   El `passwordAnswer` parámetro es una cadena vacía.  
  
-   El `passwordAnswer` parámetro tiene más de 128 caracteres.  
  
-   El <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> propiedad es `true` y la pregunta de contraseña sea `null` o una cadena vacía después del recorte.  
  
-   El `passwordQuestion` parámetro es una cadena vacía.  
  
-   El `passwordQuestion` parámetro tiene más de 256 caracteres.  
  
-   El `providerUserKey` parámetro establecido en un objeto de un tipo distinto de <xref:System.Guid?displayProperty=nameWithType>.  
  
-   El `providerUserKey` parámetro es un duplicado de una clave de usuario existente.  
  
-   El `username` parámetro es un duplicado de un nombre de usuario existente.  
  
 Espacios iniciales y finales se recortan de todos los valores de parámetro de cadena.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un nuevo usuario para una aplicación ASP.NET configurada para usar autenticación de formularios y la <xref:System.Web.Security.SqlMembershipProvider>. Si el usuario no se crea correctamente, se muestra un mensaje al usuario. En caso contrario, se redirige al usuario a la página de inicio de sesión para la aplicación.  
  
> [!NOTE]
>  Este ejemplo llama el <xref:System.Web.Security.SqlMembershipProvider> especificado como el `defaultProvider` en el archivo Web.config mediante el <xref:System.Web.Security.Membership> clase. Si necesita obtener acceso al proveedor predeterminado como el tipo de <xref:System.Web.Security.SqlMembershipProvider>, puede convertir el <xref:System.Web.Security.Membership.Provider%2A> propiedad de la <xref:System.Web.Security.Membership> clase. Para tener acceso a otros proveedores configurados como un tipo de proveedor específico, puede tener acceso a ellos por su nombre configurado con el <xref:System.Web.Security.Membership.Providers%2A> propiedad de la <xref:System.Web.Security.Membership> clase y convertirlos como el tipo de proveedor específico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public override bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberSignature Language="F#" Value="override this.DeleteUser : string * bool -&gt; bool" Usage="sqlMembershipProvider.DeleteUser (username, deleteAllRelatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to delete.</param>
        <param name="deleteAllRelatedData">
          <see langword="true" /> to delete data related to the user from the database; <see langword="false" /> to leave data related to the user in the database.</param>
        <summary>Removes a user's membership information from the SQL Server membership database.</summary>
        <returns>
          <see langword="true" /> if the user was deleted; otherwise, <see langword="false" />. A value of <see langword="false" /> is also returned if the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es invocado por la <xref:System.Web.Security.Membership> clase para quitar un usuario de la base de datos de SQL Server especificada en el archivo de configuración de la aplicación ASP.NET.  
  
 Usuarios eliminados sólo se eliminan de la configurada <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 Si `deleteAllRelatedData` está establecido en `true`, a continuación, todos los datos de usuario almacenados en la base de datos para la <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, o <xref:System.Web.UI.WebControls.WebParts.WebPart> características de personalización también se elimina el configurado <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 Si el usuario de pertenencia no existe en la base de datos y `deleteAllRelatedData` es `true`, a continuación, los datos relacionados y la información de usuario almacenada para el <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, o <xref:System.Web.UI.WebControls.WebParts.WebPart> todavía se eliminarán las características de personalización para el aplicación especificada en el <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> propiedad. Como resultado, el <xref:System.Web.Security.SqlMembershipProvider.DeleteUser%2A> método puede usarse para eliminar rápidamente información relativa a un usuario, incluso cuando la <xref:System.Web.Security.SqlMembershipProvider> objeto no se utiliza para almacenar información del usuario autenticado.  
  
 Espacios iniciales y finales se recortan de los `username` el valor del parámetro.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se elimina el usuario ha iniciado sesión actualmente.  
  
> [!NOTE]
>  Este ejemplo se utiliza <xref:System.Web.Security.SqlMembershipProvider> para llamar a la <xref:System.Web.Security.SqlMembershipProvider> especificado como el `defaultProvider` en el archivo Web.config. Si necesita obtener acceso al proveedor predeterminado como el tipo de <xref:System.Web.Security.SqlMembershipProvider>, puede convertir el <xref:System.Web.Security.Membership.Provider%2A> propiedad de la <xref:System.Web.Security.Membership> clase. Para tener acceso a otros proveedores configurados como un tipo de proveedor específico, puede tener acceso a ellos por su nombre configurado con el <xref:System.Web.Security.Membership.Providers%2A> propiedad de la <xref:System.Web.Security.Membership> clase y convertirlos como el tipo de proveedor específico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/DeleteUsercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/DeleteUservb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordReset { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordReset : bool" Usage="System.Web.Security.SqlMembershipProvider.EnablePasswordReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the SQL Server membership provider is configured to allow users to reset their passwords.</summary>
        <value>
          <see langword="true" /> si el proveedor de pertenencia admite el restablecimiento de contraseña; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Restablecimiento de contraseña permite al proveedor de pertenencia reemplazar la contraseña actual para un nombre de usuario con una nueva generada aleatoriamente. Esto es especialmente útil cuando el <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> propiedad está establecida en <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, ya que los usuarios no pueden recuperar los valores de contraseña con algoritmo hash.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el elemento en la `system.web` sección del archivo Web.config para una aplicación ASP.NET. Especifica la aplicación <xref:System.Web.Security.SqlMembershipProvider> de restablecimiento de contraseña de la instancia y habilita.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordRetrieval : bool" Usage="System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the SQL Server membership provider is configured to allow users to retrieve their passwords.</summary>
        <value>
          <see langword="true" /> Si el proveedor de pertenencia admite la recuperación de contraseñas; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> propiedad está establecida en <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, un usuario no podrá recuperar su contraseña existente de la base de datos. El <xref:System.Web.Security.MembershipPasswordFormat.Hashed> formato de la contraseña proporciona codificación unidireccional de valores de contraseña. Las contraseñas se aplica un algoritmo hash con un valor salt generado aleatoriamente y comparado con los valores almacenados en la base de datos para la autenticación. Valores hash no se pueden descodificar para recuperar el valor de contraseña original.  
  
 Si el <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> propiedad está establecida en <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, y <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> está establecido en `true`, un <xref:System.Configuration.Provider.ProviderException> se produce cuando se inicializa el proveedor.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el elemento en la `system.web` sección del archivo Web.config para una aplicación ASP.NET. Especifica la aplicación <xref:System.Web.Security.SqlMembershipProvider> instancia y habilita la recuperación de contraseña.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="false"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.FindUsersByEmail : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="sqlMembershipProvider.FindUsersByEmail (emailToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">The email address to search for.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">The total number of matched users.</param>
        <summary>Returns a collection of membership users for which the email address field contains the specified email address.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> that contains a page of <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> objects beginning at the page specified by <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> Devuelve una lista de usuarios de pertenencia en el que la dirección de correo electrónico contiene una coincidencia con el proporcionado `emailToMatch` el configurado <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 El <xref:System.Web.Security.SqlMembershipProvider> busca un nombre de usuario que coincida con el `emailToMatch` valor del parámetro, utilizando la cláusula LIKE. Caracteres comodín de SQL Server pueden incluirse en el valor del parámetro. Por ejemplo, si la `emailToMatch` parámetro está establecido en "address@example.com", a continuación, obtener información para los usuarios con la dirección de correo electrónico "address@example.com" se devuelve, si existe. Si el `emailToMatch` parámetro está establecido en "%@example.com", a continuación, obtener información para los usuarios con la dirección de correo electrónico "address@example.com","address2@example.com","admin@example.com", y así sucesivamente, se devuelve.  
  
 Los resultados devueltos por <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> están restringidos por la `pageIndex` y `pageSize` parámetros. El `pageSize` parámetro identifica el número máximo de <xref:System.Web.Security.MembershipUser> objetos que se va a devolver en la <xref:System.Web.Security.MembershipUserCollection>. El `pageIndex` parámetro identifica qué página de resultados que se va a devolver, donde cero identifica la primera página. El `totalRecords` parámetro es un `out` parámetro que se establece en el número total de usuarios de pertenencia para la configurado `applicationName`. Por ejemplo, si hay 13 usuarios para el `applicationName`y el `pageIndex` valor fue 1 con un `pageSize` de 5, la <xref:System.Web.Security.MembershipUserCollection> devuelto contendría del sexto al décimo usuario devueltos. El `totalRecords` parámetro se establecería en 13.  
  
 Espacios iniciales y finales se recortan de los `emailToMatch` el valor del parámetro.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> método para recuperar información de usuario de pertenencia y muestra los resultados en páginas de datos.  
  
> [!NOTE]
>  Este ejemplo se utiliza la <xref:System.Web.Security.Membership> clase para llamar a la <xref:System.Web.Security.SqlMembershipProvider> especificado como el `defaultProvider` en el archivo Web.config. Si necesita obtener acceso al proveedor predeterminado como el tipo de <xref:System.Web.Security.SqlMembershipProvider>, puede convertir el <xref:System.Web.Security.Membership.Provider%2A> propiedad de la <xref:System.Web.Security.Membership> clase. Para tener acceso a otros proveedores configurados como un tipo de proveedor específico, puede tener acceso a ellos por su nombre configurado con el <xref:System.Web.Security.Membership.Providers%2A> propiedad de la <xref:System.Web.Security.Membership> clase y convertirlos como el tipo de proveedor específico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByEmailcs.aspx#13)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByEmailvb.aspx#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emailToMatch" /> is longer than 256 characters.  \- or -  <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than one.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> plus <paramref name="pageSize" /> minus one exceeds <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.FindUsersByName : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="sqlMembershipProvider.FindUsersByName (usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">The user name to search for.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains the total number of matched users.</param>
        <summary>Gets a collection of membership users where the user name contains the specified user name to match.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> that contains a page of <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> objects beginning at the page specified by <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> Devuelve una lista de usuarios de pertenencia para el que el nombre de usuario contiene una coincidencia con el proporcionado `usernameToMatch` el configurado <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 El <xref:System.Web.Security.SqlMembershipProvider> busca un nombre de usuario que coincida con el `usernameToMatch` valor del parámetro, utilizando la cláusula LIKE. Caracteres comodín de SQL Server se pueden incluidos en el valor del parámetro. Por ejemplo, si la `usernameToMatch` parámetro se establece en "user1", a continuación, se devuelve información de usuario para el usuario con el nombre de usuario "user1", si existe. Si el `usernameToMatch` parámetro se establece en "user %", información de usuario para los usuarios con el nombre de usuario de "user1", "user2", "user_admin", y así sucesivamente se devuelven.  
  
 Los resultados devueltos por <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> están restringidos por la `pageIndex` y `pageSize` parámetros. El `pageSize` parámetro identifica el número máximo de <xref:System.Web.Security.MembershipUser> objetos que se va a devolver en la <xref:System.Web.Security.MembershipUserCollection>. El `pageIndex` parámetro identifica qué página de resultados que se va a devolver, donde cero identifica la primera página. El `totalRecords` parámetro es un `out` parámetro que se establece en el número total de usuarios de pertenencia para la configurado `applicationName`. Por ejemplo, si hay 13 usuarios para el `applicationName`y el `pageIndex` valor fue 1 con un `pageSize` de 5, la <xref:System.Web.Security.MembershipUserCollection> devuelto contendría del sexto al décimo usuario devueltos. El `totalRecords` parámetro se establecería en 13.  
  
 Espacios iniciales y finales se recortan de los `usernameToMatch` el valor del parámetro.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> método para recuperar información de usuario de pertenencia y muestra los resultados en páginas de datos.  
  
> [!NOTE]
>  Este ejemplo utiliza System.Web.Security.SqlMembershipProvider para llamar a la <xref:System.Web.Security.SqlMembershipProvider> especificado como el `defaultProvider` en el archivo Web.config. Si necesita obtener acceso al proveedor predeterminado como el tipo de <xref:System.Web.Security.SqlMembershipProvider>, puede convertir el <xref:System.Web.Security.Membership.Provider%2A> propiedad de la <xref:System.Web.Security.Membership> clase. Para tener acceso a otros proveedores configurados como un tipo de proveedor específico, puede tener acceso a ellos por su nombre configurado con el <xref:System.Web.Security.Membership.Providers%2A> propiedad de la <xref:System.Web.Security.Membership> clase y convertirlos como el tipo de proveedor específico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByNamecs.aspx#12)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByNamevb.aspx#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> is an empty string ("") or is longer than 256 characters.  \- or -  <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than 1.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> plus <paramref name="pageSize" /> minus one exceeds <see cref="F:System.Int32.MaxValue" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GeneratePassword">
      <MemberSignature Language="C#" Value="public virtual string GeneratePassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GeneratePassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GeneratePassword" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GeneratePassword () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GeneratePassword();" />
      <MemberSignature Language="F#" Value="abstract member GeneratePassword : unit -&gt; string&#xA;override this.GeneratePassword : unit -&gt; string" Usage="sqlMembershipProvider.GeneratePassword " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generates a random password that is at least 14 characters long.</summary>
        <returns>A random password that is at least 14 characters long.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.Membership> clase proporciona un <xref:System.Web.Security.Membership.GeneratePassword%2A> método, que genera una contraseña de un cambio de tamaño con al menos el número especificado de caracteres no alfabéticos. El <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> método de la <xref:System.Web.Security.SqlMembershipProvider> llamadas el <xref:System.Web.Security.Membership.GeneratePassword%2A> método de la <xref:System.Web.Security.Membership> clase para recuperar una contraseña aleatoria que tenga al menos de 14 caracteres. Si el <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> propiedad es mayor que 14, la contraseña devuelta será la longitud especificada en el <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> propiedad.  
  
 Puede llamar específicamente el <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> método haciendo referencia a la <xref:System.Web.Security.SqlMembershipProvider> clase directamente desde el <xref:System.Web.Security.Membership.Provider%2A> propiedad de la <xref:System.Web.Security.Membership> clase.  
  
 La contraseña generada sólo contiene caracteres alfanuméricos y los signos de puntuación siguientes: `!@#$%^&*()_-+=[{]};:<>|./?`. Ningún carácter de control oculto o no imprimibles se incluye en la contraseña generada.  
  
> [!NOTE]
>  La contraseña aleatoria creada por el <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> método no se garantiza que pasa la expresión regular en la <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> propiedad. Sin embargo, la contraseña aleatoria cumplirá los criterios establecidos por la <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> y <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> propiedades.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se genera una contraseña aleatoria de 10 caracteres.  
  
 [!code-csharp[System.Web.Security.SqlMembershipProvider#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GeneratePasswordcs.aspx#9)]
 [!code-vb[System.Web.Security.SqlMembershipProvider#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GeneratePasswordvb.aspx#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.GetAllUsers : int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="sqlMembershipProvider.GetAllUsers (pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">The total number of users.</param>
        <summary>Gets a collection of all the users in the SQL Server membership database.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> of <see cref="T:System.Web.Security.MembershipUser" /> objects representing all the users in the database for the configured <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es invocado por la <xref:System.Web.Security.Membership> clase para recuperar información de usuario de la base de datos de SQL Server especificada en el archivo de configuración de la aplicación ASP.NET (Web.config).  
  
 Los resultados devueltos por <xref:System.Web.Security.SqlMembershipProvider.GetAllUsers%2A> están restringidos por la `pageIndex` y `pageSize` parámetros. El `pageSize` parámetro identifica el número máximo de <xref:System.Web.Security.MembershipUser> objetos que se va a devolver en la <xref:System.Web.Security.MembershipUserCollection>. El `pageIndex` parámetro identifica qué página de resultados que se va a devolver, donde cero identifica la primera página. El `totalRecords` parámetro es un `out` parámetro que se establece en el número total de usuarios de pertenencia para la configurado `applicationName`. Por ejemplo, si hay 13 usuarios para el `applicationName`y el `pageIndex` valor fue 1 con un `pageSize` de 5, la <xref:System.Web.Security.MembershipUserCollection> devuelto contendría del sexto al décimo usuario devueltos. El `totalRecords` parámetro se establecería en 13.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se devuelve una lista de usuarios en páginas de datos con un recuento del número de usuarios actualmente en línea.  
  
> [!NOTE]
>  Este ejemplo se utiliza la <xref:System.Web.Security.Membership> clase para llamar a la <xref:System.Web.Security.SqlMembershipProvider> especificado como el `defaultProvider` en el archivo Web.config. Si necesita obtener acceso al proveedor predeterminado como el tipo de <xref:System.Web.Security.SqlMembershipProvider>, puede convertir el <xref:System.Web.Security.Membership.Provider%2A> propiedad de la <xref:System.Web.Security.Membership> clase. Para tener acceso a otros proveedores configurados como un tipo de proveedor específico, puede tener acceso a ellos por su nombre configurado con el <xref:System.Web.Security.Membership.Providers%2A> propiedad de la <xref:System.Web.Security.Membership> clase y convertirlos como el tipo de proveedor específico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than one.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> plus <paramref name="pageSize" /> minus one exceeds <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public override int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetNumberOfUsersOnline();" />
      <MemberSignature Language="F#" Value="override this.GetNumberOfUsersOnline : unit -&gt; int" Usage="sqlMembershipProvider.GetNumberOfUsersOnline " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the number of users currently accessing the application.</summary>
        <returns>The number of users currently accessing the application.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es invocado por la <xref:System.Web.Security.Membership> clase para recuperar el número de usuarios que se considera en línea desde la base de datos de SQL Server especificada en el archivo de configuración de la aplicación ASP.NET (Web.config).  
  
 <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> Devuelve el número de usuarios de la aplicación actual cuya última fecha de actividad y hora es mayor que la fecha y hora actual menos el valor de la <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> propiedad en minutos.  
  
 Solo los usuarios asociados con el configurado <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> se incluyen en el recuento.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se devuelve una lista de usuarios con un recuento de los usuarios en línea actualmente.  
  
> [!NOTE]
>  Este ejemplo se utiliza la <xref:System.Web.Security.Membership> clase para llamar a la <xref:System.Web.Security.SqlMembershipProvider> especificado como el `defaultProvider` en el archivo Web.config. Si necesita obtener acceso al proveedor predeterminado como el tipo de <xref:System.Web.Security.SqlMembershipProvider>, puede convertir el <xref:System.Web.Security.Membership.Provider%2A> propiedad de la <xref:System.Web.Security.Membership> clase. Para tener acceso a otros proveedores configurados como un tipo de proveedor específico, puede tener acceso a ellos por su nombre configurado con el <xref:System.Web.Security.Membership.Providers%2A> propiedad de la <xref:System.Web.Security.Membership> clase y convertirlos como el tipo de proveedor específico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPassword">
      <MemberSignature Language="C#" Value="public override string GetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberSignature Language="F#" Value="override this.GetPassword : string * string -&gt; string" Usage="sqlMembershipProvider.GetPassword (username, passwordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to retrieve the password for.</param>
        <param name="passwordAnswer">The password answer for the user.</param>
        <summary>Returns the password for the specified user name from the SQL Server membership database.</summary>
        <returns>The password for the specified user name.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es invocado por la <xref:System.Web.Security.MembershipUser> clase para recuperar la contraseña de un usuario de la base de datos de SQL Server especificada en el archivo de configuración de la aplicación ASP.NET (Web.config).  
  
 Si se proporciona una respuesta de contraseña incorrecta para el  <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> /método siguiente, el contador interno que realiza un seguimiento de intentos de respuesta a la contraseña se incrementa en uno. Esto puede dar lugar al usuario está bloqueado y no se ha podido iniciar sesión hasta que se borre el estado de bloqueo por una llamada a la <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> método. Si se proporciona la respuesta de contraseña correcta y el usuario no está bloqueado actualmente, a continuación, el contador interno que realiza el seguimiento de los intentos de respuesta a la contraseña se restablece en cero. Para obtener más información, consulte el <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> y <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> propiedades.  
  
 Puede llamar a la <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> método directamente por obtener primero una referencia a la <xref:System.Web.Security.SqlMembershipProvider> instancia a través de la <xref:System.Web.Security.Membership.Provider%2A> propiedad de la <xref:System.Web.Security.Membership> clase.  
  
 Si el <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> propiedad está establecida en <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, el <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> método no puede recuperar la contraseña. Las contraseñas descodificadas se cifran de forma unidireccionales y no se puede descifrar. Si el <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> propiedad está establecida en <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, y <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> está establecido en `true`, un <xref:System.Configuration.Provider.ProviderException> se produce cuando se inicializa el proveedor.  
  
 Espacios iniciales y finales se recortan de todos los valores de parámetro.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se recupera la contraseña para un nombre de usuario especificado y lo envía al usuario en un mensaje de correo electrónico.  
  
> [!NOTE]
>  No se recomienda devolver una contraseña en texto no cifrado mediante correo electrónico para los sitios que requieren un alto nivel de seguridad. Para los sitios de alta seguridad, se recomienda devolver contraseñas utilizando el cifrado, como SSL.  
  
> [!NOTE]
>  Este ejemplo llama el <xref:System.Web.Security.SqlMembershipProvider> especificado como el `defaultProvider` en el archivo Web.config mediante el uso de la <xref:System.Web.Security.Membership> clase. Si necesita obtener acceso al proveedor predeterminado como el tipo de <xref:System.Web.Security.SqlMembershipProvider>, puede convertir el <xref:System.Web.Security.Membership.Provider%2A> propiedad de la <xref:System.Web.Security.Membership> clase. Para tener acceso a otros proveedores configurados como un tipo de proveedor específico, puede tener acceso a ellos por su nombre configurado con el <xref:System.Web.Security.Membership.Providers%2A> propiedad de la <xref:System.Web.Security.Membership> clase y convertirlos como el tipo de proveedor específico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="passwordAnswer" /> is invalid.  \- or -  The membership user identified by <paramref name="username" /> is locked out.</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" /> is set to <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="username" /> is not found in the membership database.  \- or -  An error occurred while retrieving the password from the database.</exception>
        <exception cref="T:System.ArgumentException">One of the parameter values exceeds the maximum allowed length.  \- or -  <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  <paramref name="passwordAnswer" /> is an empty string and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.  \- or -  <paramref name="passwordAnswer" /> is greater than 128 characters.  \- or -  The encoded version of <paramref name="passwordAnswer" /> is greater than 128 characters.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="passwordAnswer" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets the information for a membership user from the data source.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="override this.GetUser : obj * bool -&gt; System.Web.Security.MembershipUser" Usage="sqlMembershipProvider.GetUser (providerUserKey, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">The unique identifier for the user.</param>
        <param name="userIsOnline">
          <see langword="true" /> to update the last-activity date/time stamp for the specified user; otherwise, <see langword="false" />.</param>
        <summary>Gets the information from the data source for the membership user associated with the specified unique identifier and updates the last activity date/time stamp for the user, if specified.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the user associated with the specified unique identifier. If no user is found in the database for the specified <paramref name="providerUserKey" /> value, <see langword="null" /> is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> Recupera la información de usuario desde el origen de datos y crea un <xref:System.Web.Security.MembershipUser> objeto rellenado con los datos devueltos. El usuario se identifica mediante el identificador único especificado con el `providerUserKey` parámetro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerUserKey" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerUserKey" /> is not of type <see cref="T:System.Guid" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="override this.GetUser : string * bool -&gt; System.Web.Security.MembershipUser" Usage="sqlMembershipProvider.GetUser (username, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to get information for.</param>
        <param name="userIsOnline">
          <see langword="true" /> to update the last activity date/time stamp for the user; <see langword="false" /> to return user information without updating the last activity date/time stamp for the user.</param>
        <summary>Returns information from the SQL Server membership database for a user and provides an option to update the last activity date/time stamp for the user.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the specified user. If no user is found in the database for the specified <paramref name="username" /> value, <see langword="null" /> is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es invocado por la <xref:System.Web.Security.Membership> clase para recuperar información de usuario de la base de datos de SQL Server especificada en el archivo de configuración de la aplicación ASP.NET (Web.config).  
  
 Si `userIsOnline` es `true`, la marca de fecha y hora de última actividad del usuario se actualiza a la fecha y hora actuales. Esto se refleja en el <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> y <xref:System.Web.Security.MembershipUser.IsOnline%2A> propiedades y en el valor devuelto por <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>.  
  
 Espacios iniciales y finales se recortan de los `username` el valor del parámetro.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Web.Security.SqlMembershipProvider.GetUser%2A> método para determinar si existe un usuario antes de recuperar la contraseña del usuario.  
  
> [!NOTE]
>  Este ejemplo se utiliza la <xref:System.Web.Security.Membership> clase para llamar a la <xref:System.Web.Security.SqlMembershipProvider> especificado como el `defaultProvider` en el archivo Web.config. Si necesita obtener acceso al proveedor predeterminado como el tipo de <xref:System.Web.Security.SqlMembershipProvider>, puede convertir el <xref:System.Web.Security.Membership.Provider%2A> propiedad de la <xref:System.Web.Security.Membership> clase. Para tener acceso a otros proveedores configurados como un tipo de proveedor específico, puede tener acceso a ellos por su nombre configurado con el <xref:System.Web.Security.Membership.Providers%2A> propiedad de la <xref:System.Web.Security.Membership> clase y convertirlos como el tipo de proveedor específico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> exceeds 256 characters.  \- or -  <paramref name="username" /> contains a comma.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public override string GetUserNameByEmail (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetUserNameByEmail(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUserNameByEmail (email As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetUserNameByEmail(System::String ^ email);" />
      <MemberSignature Language="F#" Value="override this.GetUserNameByEmail : string -&gt; string" Usage="sqlMembershipProvider.GetUserNameByEmail email" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">The email address to search for.</param>
        <summary>Gets the user name associated with the specified email address.</summary>
        <returns>The user name associated with the specified email address. If no match is found, this method returns <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es invocado por la <xref:System.Web.Security.Membership> clase con una dirección de correo electrónico, que utiliza para recuperar un nombre de usuario asociado de la base de datos de SQL Server especificada en el archivo de configuración de la aplicación ASP.NET (Web.config).  
  
 Si más de un usuario en la base de datos de pertenencia tiene la misma dirección de correo electrónico, se devuelve el primer nombre de usuario encontrado. Puede establecer la `requiresUniqueEmail` atribuir a `true` en el archivo de configuración de la aplicación para asegurarse de que cada correo electrónico la dirección en la base de datos es única.  
  
 Espacios iniciales y finales se recortan de los `email` el valor del parámetro.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se recupera el nombre de usuario para una dirección de correo electrónico especificada.  
  
> [!NOTE]
>  Este ejemplo se utiliza la <xref:System.Web.Security.Membership> clase para llamar a la <xref:System.Web.Security.SqlMembershipProvider> especificado como el `defaultProvider` en el archivo Web.config. Si necesita obtener acceso al proveedor predeterminado como el tipo de <xref:System.Web.Security.SqlMembershipProvider>, puede convertir el <xref:System.Web.Security.Membership.Provider%2A> propiedad de la <xref:System.Web.Security.Membership> clase. Para tener acceso a otros proveedores configurados como un tipo de proveedor específico, puede tener acceso a ellos por su nombre configurado con el <xref:System.Web.Security.Membership.Providers%2A> propiedad de la <xref:System.Web.Security.Membership> clase y convertirlos como el tipo de proveedor específico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GetUserByEmailcs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GetUserByEmailvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="email" /> exceeds 256 characters.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">More than one user with the same email address exists in the database and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is <see langword="true" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="sqlMembershipProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">The name of the <see cref="T:System.Web.Security.SqlMembershipProvider" /> instance to initialize.</param>
        <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the names and values of configuration options for the membership provider.</param>
        <summary>Initializes the SQL Server membership provider with the property values specified in the ASP.NET application's configuration file. This method is not intended to be used directly from your code.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método inicializa la <xref:System.Web.Security.SqlMembershipProvider> con la propiedad de valores especificado en el archivo de configuración de aplicación de ASP.NET (Web.config) y no está diseñada para utilizarse directamente desde el código.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="config" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see langword="enablePasswordRetrieval" />, <see langword="enablePasswordReset" />, <see langword="requiresQuestionAndAnswer" />, or <see langword="requiresUniqueEmail" /> attribute is set to a value other than a <see langword="Boolean" />.  \- or -  The <see langword="maxInvalidPasswordAttempts" /> or the <see langword="passwordAttemptWindow" /> attribute is set to a value other than a positive integer.  \- or -  The <see langword="minRequiredPasswordLength" /> attribute is set to a value other than a positive integer, or the value is greater than 128.  \- or -  The <see langword="minRequiredNonalphanumericCharacters" /> attribute is set to a value other than zero or a positive integer, or the value is greater than 128.  \- or -  The value for the <see langword="passwordStrengthRegularExpression" /> attribute is not a valid regular expression.  \- or -  The <see langword="applicationName" /> attribute is set to a value that is greater than 256 characters.  \- or -  The <see langword="passwordFormat" /> attribute specified in the application configuration file is an invalid <see cref="T:System.Web.Security.MembershipPasswordFormat" /> enumeration.  \- or -  The <see langword="passwordFormat" /> attribute is set to <see cref="F:System.Web.Security.MembershipPasswordFormat.Hashed" /> and the <see langword="enablePasswordRetrieval" /> attribute is set to <see langword="true" /> in the application configuration.  \- or -  The <see langword="passwordFormat" /> attribute is set to <see langword="Encrypted" /> and the  configuration element specifies <see langword="AutoGenerate" /> for the <see langword="decryptionKey" /> attribute.  \- or -  The <see langword="connectionStringName" /> attribute is empty or does not exist in the application configuration.  \- or -  The value of the connection string for the <see langword="connectionStringName" /> attribute value is empty, or the specified <see langword="connectionStringName" /> does not exist in the application configuration file.  \- or -  The value for the <see langword="commandTimeout" /> attribute is set to a value other than zero or a positive integer.  \- or -  The application configuration file for this <see cref="T:System.Web.Security.SqlMembershipProvider" /> instance contains an unrecognized attribute.</exception>
        <exception cref="T:System.Web.HttpException">The current trust level is less than <see langword="Low" />.</exception>
        <exception cref="T:System.InvalidOperationException">The provider has already been initialized prior to the current call to the <see cref="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> method.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public override int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxInvalidPasswordAttempts : int" Usage="System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.</summary>
        <value>Número de intentos de contraseña o respuesta de contraseña no válidos que se permiten antes de bloquear al usuario de pertenencia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> funciona junto con el <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> para protegerse contra un origen no deseado adivine la contraseña o respuesta de contraseña de un usuario de pertenencia mediante intentos repetidos. Si el número de contraseñas no válidas o preguntas de contraseña proporcionados para un usuario de pertenencia es mayor o igual que el valor de la <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> propiedad dentro del número de minutos identificado por el valor de la <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> propiedad y, a continuación, el usuario de pertenencia está bloqueada estableciendo la <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> propiedad `true` hasta que el usuario se desbloquea con el <xref:System.Web.Security.MembershipUser.UnlockUser%2A> método. Si se proporciona una contraseña válida antes de la <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> se alcanza el valor, se restablecen los contadores que realizan el seguimiento del número de intentos no válidos de contraseña y respuesta de contraseña a cero. Si se proporciona una respuesta de contraseña válida antes de la <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> se alcanza el valor, solo el contador que realiza el seguimiento del número de intentos de respuesta a la contraseña se restablece en cero.  
  
 El <xref:System.Web.Security.SqlMembershipProvider> mantiene por separado los recuentos de intentos de contraseña no válida y los intentos de respuesta de contraseña no válida. Contraseña no válida intentos incorrectos de solo el contador de intentos de contraseña que se incrementa. Respuesta a la contraseña intentos incorrectos de solo el contador de respuesta de contraseña que se va a incrementar.  
  
 El <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> valor de la propiedad se establece en la configuración de aplicación mediante el `maxInvalidPasswordAttempts` atributo de la sección de configuración.  
  
 Si el <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> propiedad está establecida en `false`, no se realiza un seguimiento de los intentos de respuesta de contraseña no válida.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el elemento en la `system.web` sección del archivo Web.config para una aplicación ASP.NET. Especifica que la aplicación utiliza una instancia de la <xref:System.Web.Security.SqlMembershipProvider> y establece la `maxInvalidPasswordAttempts` atribuir a cinco intentos no válidos y el `passwordAttemptWindow` en 30 minutos.  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
    <providers>  
      <add name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        maxInvalidPasswordAttempts="5"  
        passwordAttemptWindow="30"  
        applicationName="MyApplication" />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public override int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredNonAlphanumericCharacters : int" Usage="System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minimum number of special characters that must be present in a valid password.</summary>
        <value>Número mínimo de caracteres especiales que debe contener una contraseña válida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> propiedad devuelve el número mínimo de caracteres especiales no alfabéticos que se deben escribir para crear una contraseña válida para el <xref:System.Web.Security.SqlMembershipProvider> objeto.  
  
 El <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> valor de la propiedad se establece en la configuración de aplicación mediante el `minRequiredNonalphanumericCharacters` atributo de la [pertenencia Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento de configuración.  
  
 Un carácter no alfanumérico es un carácter para el que el <xref:System.Char.IsLetterOrDigit%2A> método `false`.  
  
   
  
## Examples  
 El siguiente ejemplo se muestra la [pertenencia Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento de configuración en la `system.web` sección del archivo Web.config de la aplicación. Especifica que la aplicación utiliza una instancia de la <xref:System.Web.Security.SqlMembershipProvider> clase para proporcionar servicios de pertenencia y establece el `minRequiredNonalphanumericCharacters` atributo a un carácter.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredNonalphanumericCharacters="1"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public override int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredPasswordLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredPasswordLength : int" Usage="System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minimum length required for a password.</summary>
        <value>Longitud mínima necesaria para una contraseña.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> propiedad obtiene el número mínimo de caracteres que debe escribirse para crear una contraseña válida para el <xref:System.Web.Security.SqlMembershipProvider> objeto.  
  
 El <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> valor de la propiedad se establece en la configuración de aplicación mediante el `minRequiredPasswordLength` atributo de la [pertenencia Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento de configuración.  
  
   
  
## Examples  
 El siguiente ejemplo se muestra la [pertenencia Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento de configuración en la `system.web` sección del archivo Web.config de la aplicación. Especifica que la aplicación utiliza una instancia de la <xref:System.Web.Security.SqlMembershipProvider> clase para proporcionar servicios de pertenencia y establece el `minRequiredPasswordLength` atribuir a siete caracteres.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
    <providers>  
      <add  
        name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        minRequiredPasswordLength="7"  
        />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public override int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PasswordAttemptWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordAttemptWindow : int" Usage="System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the time window between which consecutive failed attempts to provide a valid password or password answers are tracked.</summary>
        <value>El período de tiempo, en minutos, durante el cual consecutivos intentos para proporcionar una contraseña válida o se realiza el seguimiento de las respuestas de contraseña. El valor predeterminado es 10 minutos. Si el intervalo entre el intento incorrecto actual y el último intento incorrecto es mayor que el <see cref="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" /> la propiedad, cada intento fallido se trata como si fuera el primer intento fallido.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> propiedad funciona junto con el <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> propiedad para ayudar a protegerse contra un origen no deseado adivine la contraseña o respuesta de la contraseña de un usuario de pertenencia a través de varios intentos. Cuando los usuarios intentan iniciar sesión, cambiar su contraseña o restablecer su contraseña, sólo un determinado número de intentos consecutivos se permite dentro de un período de tiempo especificado. La longitud del intervalo de tiempo especificada por el <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> propiedad, que identifica el número de minutos permitido entre intentos no válidos. Si el número de intentos fallidos consecutivos que realiza un usuario para restablece su o la contraseña es igual al valor almacenado en el <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> propiedad y el tiempo transcurrido desde el último intento no válido es menor que el número de minutos especificado para el <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> propiedad y, a continuación, el usuario de pertenencia se bloquea estableciendo la <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> propiedad `true`. El usuario puede desbloquear mediante una llamada a la <xref:System.Web.Security.MembershipUser.UnlockUser%2A> método. Si el intervalo entre el intento incorrecto actual y el último intento incorrecto es mayor que el <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> la propiedad, el intento no válido actual se cuenta como la primera. Si se proporciona una respuesta de contraseña válida antes de que se alcanza el número máximo de intentos no válidos permitidos, el recuento de intentos de respuesta a la contraseña se establece en cero. Si se proporciona una contraseña válida antes de que el número máximo permitido de válido intentos se alcanza el número de intentos de contraseña no válidos y el número de intentos de respuesta de contraseña no válidos se establecen en cero.  
  
 El <xref:System.Web.Security.SqlMembershipProvider> mantiene un recuento de intentos de contraseña no válida y los intentos de respuesta a la contraseña por separado. Contraseña no válida intentos incorrectos de solo el contador de intentos de contraseña que se incrementa. Respuesta a la contraseña intentos incorrectos de solo el contador de respuesta de contraseña que se va a incrementar.  
  
 El <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> valor de la propiedad se establece en la configuración de aplicación mediante el `passwordAttemptWindow` atributo de la sección de configuración.  
  
 Si el <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> propiedad está establecida en `false`, no se realiza un seguimiento de los intentos de respuesta de contraseña no válida.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el elemento en la `system.web` sección del archivo Web.config para una aplicación ASP.NET. Especifica que la aplicación utiliza una instancia de la <xref:System.Web.Security.SqlMembershipProvider> y establece la `maxInvalidPasswordAttempts` atribuir a cinco intentos no válidos y el `passwordAttemptWindow` en 30 minutos.  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
    <providers>  
      <add name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        maxInvalidPasswordAttempts="5"  
        passwordAttemptWindow="30"  
        applicationName="MyApplication" />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordFormat">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Security.MembershipPasswordFormat PasswordFormat" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordFormat As MembershipPasswordFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Security::MembershipPasswordFormat PasswordFormat { System::Web::Security::MembershipPasswordFormat get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordFormat : System.Web.Security.MembershipPasswordFormat" Usage="System.Web.Security.SqlMembershipProvider.PasswordFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipPasswordFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating the format for storing passwords in the SQL Server membership database.</summary>
        <value>Uno de los valores <see cref="T:System.Web.Security.MembershipPasswordFormat" /> que indica el formato para almacenar las contraseñas en la base de datos de SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use `Hashed` , `Clear` y `Encrypted` no son seguras. `Hashed` las contraseñas se envían con hash utilizando un algoritmo hash unidireccional y un valor salt generado aleatoriamente cuando se almacenan en la base de datos. Cuando se valida una contraseña, se descodifica con el valor "salt" en la base de datos para la comprobación. No se puede recuperar las contraseñas descodificadas. `Encrypted` las contraseñas no se consideran seguras, como una infracción que revela el contenido de la base de datos también puede exponer la clave de cifrado. Esto significa que podrían descifrar y expone sus contraseñas cifradas.  
  
 El <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> se expresa en la sección del archivo Web.config de la aplicación ASP.NET.  
  
 `Encrypted` y `Hashed` contraseñas están cifradas o aplicar un algoritmo hash en función de la información proporcionada en el elemento en la configuración de forma predeterminada. Tenga en cuenta que si especifica un valor de `3DES` para el `validation` atributo, o si no se especifica ningún valor, las contraseñas descodificadas se se aplica un algoritmo hash mediante la <xref:System.Security.Cryptography.SHA1> algoritmo.  
  
 Un algoritmo hash personalizado puede definirse mediante el `hashAlgorithmType` atributo de la [pertenencia Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento de configuración. Si elige el cifrado, cifrado de contraseña predeterminado utiliza AES. Puede cambiar el algoritmo de cifrado estableciendo el `decryption` atributo del elemento de configuración. Si cifra las contraseñas, debe proporcionar un valor explícito para la `decryptionKey` atributo del elemento. El valor predeterminado de `AutoGenerate` para el `decryptionKey` atributo no se admite al usar cifra contraseñas con pertenencia a ASP.NET.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el elemento en la `system.web` sección del archivo Web.config para una aplicación ASP.NET. Especifica la aplicación <xref:System.Web.Security.SqlMembershipProvider> instancia y establece su formato de la contraseña en `Hashed`.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public override string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordStrengthRegularExpression : string" Usage="System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the regular expression used to evaluate a password.</summary>
        <value>Expresión regular utilizada para evaluar una contraseña.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> propiedad obtiene la expresión regular utilizada para evaluar la complejidad de contraseña para el <xref:System.Web.Security.SqlMembershipProvider> objeto.  
  
 El <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> propiedad se establece en la configuración de aplicación mediante el `passwordStrengthRegularExpression` atributo de la [pertenencia Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento de configuración.  
  
   
  
## Examples  
 El siguiente ejemplo se muestra la [pertenencia Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento de configuración en la `system.web` sección del archivo Web.config de la aplicación. Especifica que la aplicación utiliza una instancia de la <xref:System.Web.Security.SqlMembershipProvider> clase para proporcionar servicios de pertenencia y establece el `passwordStrengthRegularExpression` atributo a una expresión regular que valida que la contraseña cumple los criterios siguientes:  
  
-   Tiene al menos siete caracteres.  
  
-   Contiene al menos un dígito.  
  
-   Contiene al menos un carácter especial de (no alfanuméricos).  
  
 Si la contraseña no cumple estos criterios, el proveedor de pertenencia no acepta la contraseña.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression="@\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresQuestionAndAnswer : bool" Usage="System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the SQL Server membership provider is configured to require the user to answer a password question for password reset and retrieval.</summary>
        <value>
          <see langword="true" /> Si una respuesta de contraseña es necesaria para restablecer la contraseña y la recuperación; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Requerir una pregunta de contraseña y la respuesta, proporciona una capa adicional de seguridad al recuperar o restablecer una contraseña de usuario. Al crear un nombre de usuario, un usuario puede proporcionar una pregunta y respuesta que puede usarse más tarde para recuperar o restablecer una contraseña olvidada. Si el <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset%2A> propiedad y el <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> propiedad son `false`, el valor de la <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> propiedad es irrelevante.  
  
 Para obtener más información, consulte <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> y <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el elemento en la `system.web` sección del archivo Web.config para una aplicación ASP.NET. Especifica la aplicación <xref:System.Web.Security.SqlMembershipProvider> de la instancia y lo configura para requerir una respuesta de contraseña de recuperación o el restablecimiento de contraseña.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueEmail">
      <MemberSignature Language="C#" Value="public override bool RequiresUniqueEmail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueEmail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresUniqueEmail As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueEmail { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueEmail : bool" Usage="System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the SQL Server membership provider is configured to require a unique email address for each user name.</summary>
        <value>
          <see langword="true" /> Si el proveedor de pertenencia requiere una dirección de correo electrónico única; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra el elemento en la `system.web` sección del archivo Web.config para una aplicación ASP.NET. Especifica la <xref:System.Web.Security.SqlMembershipProvider> de la instancia y lo configura para requerir una dirección de correo electrónico única para cada nombre de usuario.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      requiresUniqueEmail="true"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPassword">
      <MemberSignature Language="C#" Value="public override string ResetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ResetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ResetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberSignature Language="F#" Value="override this.ResetPassword : string * string -&gt; string" Usage="sqlMembershipProvider.ResetPassword (username, passwordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to reset the password for.</param>
        <param name="passwordAnswer">The password answer for the specified user.</param>
        <summary>Resets a user's password to a new, automatically generated password.</summary>
        <returns>The new password for the specified user.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es invocado por la <xref:System.Web.Security.Membership> clase para restablecer la contraseña de un usuario en la base de datos de SQL Server especificado en el archivo de configuración de la aplicación ASP.NET (Web.config) a un nuevo valor generado aleatoriamente. Se devuelve la nueva contraseña.  
  
> [!NOTE]
>  La contraseña aleatoria creada por el <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> método no se garantiza que pasa la expresión regular en la <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> propiedad. Sin embargo, la contraseña aleatoria cumplirá los criterios establecidos por la <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> y <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> propiedades.  
  
 El <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> método es la mayoría se usa habitualmente cuando el <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> propiedad está establecida en `Hashed`. Si un usuario olvida una contraseña que se aplica un algoritmo hash, no se puede recuperar la contraseña. Sin embargo, el proveedor puede restablecer la contraseña a una nueva contraseña generada automáticamente si el usuario proporciona la respuesta de contraseña correcta.  
  
 Si se proporciona una respuesta de contraseña incorrecta para el  <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> /método siguiente, el contador interno que realiza un seguimiento de intentos de contraseña no válida se incrementa en uno. Esto puede dar lugar al usuario está bloqueado y no se ha podido iniciar sesión hasta que se borre el estado de bloqueo por una llamada a la <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> método. Si se proporciona la respuesta de contraseña correcta y el usuario no está bloqueado actualmente, a continuación, el contador interno que realiza el seguimiento de los intentos de respuesta a la contraseña se restablece en cero. Para obtener más información, consulte el <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> y <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> propiedades.  
  
 Puede llamar a la <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> método directamente por obtener primero una referencia a la <xref:System.Web.Security.SqlMembershipProvider> instancia desde el <xref:System.Web.Security.Membership.Provider%2A> propiedad de la <xref:System.Web.Security.Membership> clase. La contraseña generada tendrá al menos 14 caracteres o la longitud especificada en el <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> propiedad y contendrá el número de caracteres no alfanuméricos especificado en el <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> propiedad. La contraseña no se garantiza para pasar la expresión regular contenida en el <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> propiedad, si se especifica uno.  
  
 Espacios iniciales y finales se recortan de todos los valores de parámetro.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se restablece la contraseña de un usuario y devuelve la nueva contraseña generada automáticamente.  
  
> [!NOTE]
>  Este ejemplo se utiliza la <xref:System.Web.Security.Membership> clase para llamar a la <xref:System.Web.Security.SqlMembershipProvider> especificado como el `defaultProvider` en el archivo Web.config. Si necesita obtener acceso al proveedor predeterminado como el tipo de <xref:System.Web.Security.SqlMembershipProvider>, puede convertir el <xref:System.Web.Security.Membership.Provider%2A> propiedad de la <xref:System.Web.Security.Membership> clase. Para tener acceso a otros proveedores configurados como un tipo de proveedor específico, puede tener acceso a ellos por su nombre configurado con el <xref:System.Web.Security.Membership.Providers%2A> propiedad de la <xref:System.Web.Security.Membership> clase y convertirlos como el tipo de proveedor específico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ResetPasswordcs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ResetPasswordvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="passwordAnswer" /> is invalid.  \- or -  The user account is currently locked.</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset" /> is set to <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="username" /> is not found in the membership database.  \- or -  The change password action was canceled by a subscriber to the <see cref="E:System.Web.Security.Membership.ValidatingPassword" /> event and the <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" /> property was <see langword="null" />.  \- or -  An error occurred while retrieving the password from the database.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  <paramref name="passwordAnswer" /> is an empty string, or is longer than 128 characters, and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.  \- or -  <paramref name="passwordAnswer" /> is longer than 128 characters after encoding.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="passwordAnswer" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.</exception>
        <exception cref="T:System.Exception">An unhandled exception occurred.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnlockUser">
      <MemberSignature Language="C#" Value="public override bool UnlockUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool UnlockUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnlockUser (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool UnlockUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.UnlockUser : string -&gt; bool" Usage="sqlMembershipProvider.UnlockUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The name of the membership user to clear the locked-out status for.</param>
        <summary>Clears the user's locked-out status so that the membership user can be validated.</summary>
        <returns>
          <see langword="true" /> if the membership user was successfully unlocked; otherwise, <see langword="false" />. A value of <see langword="false" /> is also returned if the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los usuarios quedan bloqueados y no se puede validar el <xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A> (método) cuando el <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> superado dentro de la <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>.  
  
 Espacios iniciales y finales se recortan de los `username` el valor del parámetro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string, is longer than 256 characters, or contains a comma.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public override void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberSignature Language="F#" Value="override this.UpdateUser : System.Web.Security.MembershipUser -&gt; unit" Usage="sqlMembershipProvider.UpdateUser user" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">A <see cref="T:System.Web.Security.MembershipUser" /> object that represents the user to update and the updated information for the user.</param>
        <summary>Updates information about a user in the SQL Server membership database.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es invocado por la <xref:System.Web.Security.Membership> clase para actualizar la información de usuario para un usuario en la base de datos de SQL Server especificada en el archivo de configuración de la aplicación ASP.NET (Web.config). El <xref:System.Web.Security.MembershipUser.Email%2A>, <xref:System.Web.Security.MembershipUser.Comment%2A>, <xref:System.Web.Security.MembershipUser.IsApproved%2A>, <xref:System.Web.Security.MembershipUser.LastLoginDate%2A>, y <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> se actualizan los valores de propiedad del usuario de pertenencia especificado.  
  
 La longitud máxima de la <xref:System.Web.Security.MembershipUser.UserName%2A> propiedad es de 256 caracteres. La longitud máxima de la <xref:System.Web.Security.MembershipUser.Email%2A> propiedad es de 256 caracteres.  
  
 No se puede actualizar la contraseña de un usuario de pertenencia mediante la <xref:System.Web.Security.SqlMembershipProvider.UpdateUser%2A> método. Para actualizar la contraseña de un usuario de pertenencia, utilice el <xref:System.Web.Security.MembershipUser.ChangePassword%2A> método de la <xref:System.Web.Security.MembershipUser> clase.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se actualiza la dirección de correo electrónico para un usuario.  
  
> [!NOTE]
>  Este ejemplo se utiliza la <xref:System.Web.Security.Membership> clase para llamar a la <xref:System.Web.Security.SqlMembershipProvider> especificado como el `defaultProvider` en el archivo Web.config. Si necesita obtener acceso al proveedor predeterminado como el tipo de <xref:System.Web.Security.SqlMembershipProvider>, puede convertir el <xref:System.Web.Security.Membership.Provider%2A> propiedad de la <xref:System.Web.Security.Membership> clase. Para tener acceso a otros proveedores configurados como un tipo de proveedor específico, puede tener acceso a ellos por su nombre configurado con el <xref:System.Web.Security.Membership.Providers%2A> propiedad de la <xref:System.Web.Security.Membership> clase y convertirlos como el tipo de proveedor específico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="user" /> is <see langword="null" />.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.UserName" /> property of <paramref name="user" /> is <see langword="null" />.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is set to <see langword="true" />.</exception>
        <exception cref="T:System.ArgumentException">The <see cref="P:System.Web.Security.MembershipUser.UserName" /> property of <paramref name="user" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> is longer than 256 characters.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> is an empty string and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is set to <see langword="true" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see cref="P:System.Web.Security.MembershipUser.UserName" /> property of <paramref name="user" /> was not found in the database.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> was equal to an existing email address in the database and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is set to true.  \- or -  The user update failed.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public override bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="override this.ValidateUser : string * string -&gt; bool" Usage="sqlMembershipProvider.ValidateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to validate.</param>
        <param name="password">The password for the specified user.</param>
        <summary>Verifies that the specified user name and password exist in the SQL Server membership database.</summary>
        <returns>
          <see langword="true" /> if the specified username and password are valid; otherwise, <see langword="false" />. A value of <see langword="false" /> is also returned if the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es invocado por la <xref:System.Web.Security.Membership> clase para validar la información de usuario para un usuario en la base de datos de SQL Server especificada en el archivo de configuración de la aplicación ASP.NET (Web.config).  
  
 Cuando un usuario se ha validado correctamente, la fecha de última actividad y los últimos valores de fecha de inicio de sesión se actualizan a la fecha y hora actuales en la base de datos.  
  
 Si se proporciona una contraseña incorrecta para el  <xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A> /método siguiente, el contador interno que realiza un seguimiento de intentos de contraseña no válida se incrementa en uno. Esto puede dar lugar al usuario está bloqueado y no se ha podido iniciar sesión hasta que se borre el estado de bloqueo por una llamada a la <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> método. Si se proporciona la contraseña correcta y el usuario no está bloqueado actualmente, los contadores internos esa contraseña no válida de seguimiento y los intentos de respuesta de contraseña se restablecen a cero. Para obtener más información, consulte el <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> y <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> propiedades.  
  
 Espacios iniciales y finales se recortan de todos los valores de parámetro.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la página de inicio de sesión para una aplicación ASP.NET configurada para usar autenticación de formularios y la <xref:System.Web.Security.SqlMembershipProvider>. Si las credenciales de usuario proporcionadas no son válidas, se muestra un mensaje al usuario. En caso contrario, se redirige al usuario a la dirección URL solicitada originalmente mediante el <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método.  
  
> [!NOTE]
>  Este ejemplo se utiliza la <xref:System.Web.Security.Membership> clase para llamar a la <xref:System.Web.Security.SqlMembershipProvider> especificado como el `defaultProvider` en el archivo Web.config. Si necesita obtener acceso al proveedor predeterminado como el tipo de <xref:System.Web.Security.SqlMembershipProvider>, puede convertir el <xref:System.Web.Security.Membership.Provider%2A> propiedad de la <xref:System.Web.Security.Membership> clase. Para tener acceso a otros proveedores configurados como un tipo de proveedor específico, puede tener acceso a ellos por su nombre configurado con el <xref:System.Web.Security.Membership.Providers%2A> propiedad de la <xref:System.Web.Security.Membership> clase y convertirlos como el tipo de proveedor específico.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>