<Type Name="Membership" FullName="System.Web.Security.Membership">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d0d48d2df26687f1c21c48ff75f0300a56ee6283" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46612474" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Membership" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Membership extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.Membership" />
  <TypeSignature Language="VB.NET" Value="Public Class Membership" />
  <TypeSignature Language="C++ CLI" Value="public ref class Membership abstract sealed" />
  <TypeSignature Language="F#" Value="type Membership = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Valida las credenciales del usuario y administra su configuración. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.Security.Membership> clase se utiliza en aplicaciones de ASP.NET para validar las credenciales de usuario y administrar la configuración de usuario, como contraseñas y direcciones de correo electrónico. El <xref:System.Web.Security.Membership> clase puede utilizarse por sí solo o junto con el <xref:System.Web.Security.FormsAuthentication> para crear un sistema completo para autenticar a los usuarios de un sitio o aplicación Web. El <xref:System.Web.UI.WebControls.Login> control encapsula el <xref:System.Web.Security.Membership> clase para proporcionar un mecanismo práctico para validar a los usuarios.  
  
> [!NOTE]
>  Si no está familiarizado con las características de pertenencia de ASP.NET, consulte [Introducción a la suscripción](https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)) antes de continuar. Para obtener una lista de otros temas relacionados con la pertenencia, vea [administrar usuarios mediante pertenencia](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
 La <xref:System.Web.Security.Membership> clase proporciona los medios para:  
  
-   Creación de nuevos usuarios.  
  
-   Almacenar información de pertenencia (nombres de usuario, contraseñas, direcciones de correo electrónico y datos de compatibilidad) en Microsoft SQL Server o en un almacén de datos alternativo.  
  
-   Autenticación de usuarios que visitan su sitio. Puede autenticar a los usuarios mediante programación, o puede usar el <xref:System.Web.UI.WebControls.Login> control para crear un sistema de autenticación completo que requiere poco o ningún código.  
  
-   Administración de contraseñas, que incluye la creación, cambio, recuperación y restaurarla y así sucesivamente. Opcionalmente puede configurar la pertenencia a ASP.NET para solicitar una pregunta de contraseña y respuesta para autenticar las solicitudes de restablecimiento o recuperación de contraseña para los usuarios que han olvidado su contraseña.  
  
 Aunque la pertenencia ASP.NET es una característica independiente de ASP.NET para la autenticación, se puede integrar con la administración de funciones de ASP.NET para proporcionar servicios de autorización para su sitio. También puede integrarse con el usuario ASP.NET Membership <xref:System.Web.Profile> para proporcionar una personalización específica de la aplicación que se puede adaptar a usuarios individuales. Para obtener más información, consulte [descripción de la función de administración](http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6) y [información general de las propiedades del perfil de ASP.NET](http://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d).  
  
 La <xref:System.Web.Security.Membership> clase se basa en proveedores de pertenencia para comunicarse con un origen de datos. .NET Framework incluye un <xref:System.Web.Security.SqlMembershipProvider>, que almacena información de usuario en una base de datos de Microsoft SQL Server y un <xref:System.Web.Security.ActiveDirectoryMembershipProvider>, lo que permite almacenar información de usuario en un servidor de Active Directory o Active Directory Application Mode (ADAM). También puede implementar un proveedor de pertenencia personalizado para comunicarse con un origen de datos alternativo que puede usar el <xref:System.Web.Security.Membership> clase. Los proveedores de pertenencia personalizado heredan la <xref:System.Web.Security.MembershipProvider> clase abstracta. Para obtener más información, consulte [implementar un proveedor de pertenencia](http://msdn.microsoft.com/library/d8658b8e-c962-4f64-95e1-4acce35e4582).  
  
 De forma predeterminada, la pertenencia a ASP.NET está habilitada para todas las aplicaciones ASP.NET. El proveedor de pertenencia predeterminado es el <xref:System.Web.Security.SqlMembershipProvider> y se especifica en la configuración del equipo con el nombre `AspNetSqlProvider`. La instancia predeterminada de la <xref:System.Web.Security.SqlMembershipProvider> está configurado para conectarse a una instancia local de Microsoft SQL Server.  
  
 Puede modificar la configuración predeterminada para especificar un <xref:System.Web.Security.SqlMembershipProvider> distinto el `AspNetSqlProvider` la instancia como el proveedor predeterminado o especificar una instancia de un proveedor personalizado como el proveedor predeterminado para su aplicación ASP.NET mediante el archivo Web.config. Puede especificar la configuración de pertenencia a ASP.NET para su aplicación Web con la sección de configuración en el archivo Web.config. Puede usar el `providers` subsección de la sección para especificar un proveedor de pertenencia que no sea uno de los proveedores predeterminados. Por ejemplo, en la sección siguiente quita los proveedores de pertenencia predeterminado de la configuración de aplicación actual y agrega un nuevo proveedor con el nombre de `SqlProvider` que se conecta a una instancia de SQL Server denominada `AspSqlServer`.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=AspSqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <remove name="AspNetSqlProvider" />  
        <add name="SqlProvider"  
          type="System.Web.Security.SqlMembershipProvider"  
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          passwordFormat="Hashed"  
          applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la página de inicio de sesión para una aplicación ASP.NET configurada para usar autenticación de formularios y la pertenencia a ASP.NET. Si las credenciales de usuario proporcionado no son válidas, se muestra un mensaje al usuario. En caso contrario, se redirige al usuario a la dirección URL solicitada originalmente mediante el <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método.  
  
> [!NOTE]
>  Los controles de inicio de sesión ASP.NET (<xref:System.Web.UI.WebControls.Login>, <xref:System.Web.UI.WebControls.LoginView>, <xref:System.Web.UI.WebControls.LoginStatus>, <xref:System.Web.UI.WebControls.LoginName>, y <xref:System.Web.UI.WebControls.PasswordRecovery>) encapsulan virtualmente toda la lógica necesaria para pedir a los usuarios las credenciales y validar las credenciales en el sistema de pertenencia y puede ser usar en lugar de usar comprobación mediante programación la <xref:System.Web.Security.Membership> clase.  
  
> [!IMPORTANT]
>  En este ejemplo contiene un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la suscripción</related>
  </Docs>
  <Members>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public static string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.Membership.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre de la aplicación.</summary>
        <value>El nombre de la aplicación.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.Membership.ApplicationName%2A> se usa para identificar a los usuarios específicos para una aplicación. Es decir, el mismo nombre de usuario puede existir en la base de datos para varias aplicaciones de ASP.NET que se especifique otro <xref:System.Web.Security.Membership.ApplicationName%2A>. Esto permite que varias aplicaciones usar la misma base de datos para almacenar información de usuario sin que se produzcan conflictos de nombre de usuario duplicado. Como alternativa, varias aplicaciones ASP.NET pueden utilizar la misma base de datos de usuario especificando la misma <xref:System.Web.Security.Membership.ApplicationName%2A>. El <xref:System.Web.Security.Membership.ApplicationName%2A> se puede establecer mediante programación o mediante declaración en la configuración de la aplicación Web.  
  
> [!CAUTION]
>  Dado que se usa una instancia del proveedor de pertenencia predeterminado único para todas las solicitudes atendidas por un <xref:System.Web.HttpApplication> objeto, puede tener varias solicitudes de ejecución al mismo tiempo y se intentó establecer el <xref:System.Web.Security.Membership.ApplicationName%2A> valor de propiedad. El <xref:System.Web.Security.Membership.ApplicationName%2A> propiedad no es segura para subprocesos de varias escrituras y variación la <xref:System.Web.Security.Membership.ApplicationName%2A> valor de propiedad puede provocar un comportamiento inesperado para varios usuarios de una aplicación. Se recomienda evitar escribir código que permite que los usuarios establezcan la <xref:System.Web.Security.Membership.ApplicationName%2A> propiedad, a menos que debe. Un ejemplo de una aplicación que el valor del <xref:System.Web.Security.Membership.ApplicationName%2A> propiedad puede ser necesaria es una aplicación administrativa que administra los datos de pertenencia para varias aplicaciones. Este tipo de aplicación debe ser una aplicación de usuario único y no es una aplicación Web.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra el elemento en el `system.web` sección del archivo Web.config para una aplicación ASP.NET. Especifica que la aplicación utiliza un <xref:System.Web.Security.SqlMembershipProvider> instancia y establece el <xref:System.Web.Security.Membership.ApplicationName%2A> a `MyApplication`.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Agrega un nuevo usuario al origen de datos.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nombre de usuario del nuevo usuario.</param>
        <param name="password">Contraseña del nuevo usuario.</param>
        <summary>Agrega un nuevo usuario al origen de datos.</summary>
        <returns>Objeto <see cref="T:System.Web.Security.MembershipUser" /> para el usuario recién creado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> Agrega un nuevo usuario al almacén de datos y devuelve un <xref:System.Web.Security.MembershipUser> objeto para el usuario recién creado. Si se produce un error en la creación del usuario, un <xref:System.Web.Security.MembershipCreateUserException> se produce. Puede recuperar un <xref:System.Web.Security.MembershipCreateStatus> valor desde el <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> propiedad de la <xref:System.Web.Security.MembershipCreateUserException> que indica el motivo del error de creación de usuario.  
  
 Una vez que se ha creado un usuario de pertenencia y tiene una referencia a un <xref:System.Web.Security.MembershipUser> objeto para ese usuario, puede modificar la configuración para ese usuario con el <xref:System.Web.Security.MembershipUser> métodos públicos, como <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> para las aplicaciones donde <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> es `true`, o estableciendo los valores de propiedad de la <xref:System.Web.Security.MembershipUser> objetos y pasarlos a la <xref:System.Web.Security.Membership.UpdateUser%2A> método.  
  
 Si un usuario ya existe en el origen de datos para la aplicación, puede obtener un <xref:System.Web.Security.MembershipUser> objeto para el usuario ya existente con el <xref:System.Web.Security.Membership.GetUser%2A> método.  
  
 El <xref:System.Web.Security.SqlMembershipProvider> proporciona una opción para requerir una dirección de correo electrónico única para cada usuario. Si el <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> propiedad es `true`, deberá usar uno de los <xref:System.Web.Security.Membership.CreateUser%2A> sobrecargas que le permite especificar una dirección de correo electrónico para el usuario que se va a crear. En caso contrario, un <xref:System.Web.Security.MembershipCreateUserException> se iniciará.  
  
 Espacios iniciales y finales se recortan de todos los valores de parámetro.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un nuevo usuario para una aplicación ASP.NET configurada para usar autenticación de formularios y la pertenencia a ASP.NET. Si el usuario no se crea correctamente, se muestra un mensaje al usuario. En caso contrario, se redirige al usuario a la página de inicio de sesión para la aplicación.  
  
> [!IMPORTANT]
>  En este ejemplo contiene un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Membership#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/createuser2cs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.Membership#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/createuser2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipCreateUserException">El usuario no se creó. Vea la propiedad <see cref="P:System.Web.Security.MembershipCreateUserException.StatusCode" /> para obtener un valor <see cref="T:System.Web.Security.MembershipCreateStatus" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string * string -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password, email)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nombre de usuario del nuevo usuario.</param>
        <param name="password">Contraseña del nuevo usuario.</param>
        <param name="email">La dirección de correo electrónico para el nuevo usuario.</param>
        <summary>Agrega al almacén de datos un nuevo usuario con la dirección de correo electrónico especificada.</summary>
        <returns>Objeto <see cref="T:System.Web.Security.MembershipUser" /> para el usuario recién creado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> Agrega un nuevo usuario al almacén de datos y devuelve un <xref:System.Web.Security.MembershipUser> objeto para el usuario recién creado. Si se produce un error en la creación del usuario, un <xref:System.Web.Security.MembershipCreateUserException> se produce. Puede recuperar un <xref:System.Web.Security.MembershipCreateStatus> valor desde el <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> propiedad de la <xref:System.Web.Security.MembershipCreateUserException> que indica el motivo del error de creación de usuario.  
  
 Una vez que se ha creado un usuario de pertenencia y tiene una referencia a un <xref:System.Web.Security.MembershipUser> objeto para ese usuario, puede modificar la configuración para ese usuario con el <xref:System.Web.Security.MembershipUser> métodos públicos, como <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> para las aplicaciones donde <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> es `true`, o estableciendo los valores de propiedad de la <xref:System.Web.Security.MembershipUser> objetos y pasarlos a la <xref:System.Web.Security.Membership.UpdateUser%2A> método.  
  
 Si un usuario ya existe en el origen de datos para la aplicación, puede obtener un <xref:System.Web.Security.MembershipUser> objeto para el usuario ya existente con el <xref:System.Web.Security.Membership.GetUser%2A> método.  
  
 Espacios iniciales y finales se recortan de todos los valores de parámetro.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un nuevo usuario para una aplicación ASP.NET configurada para usar autenticación de formularios y la pertenencia a ASP.NET. Si el usuario no se crea correctamente, se muestra un mensaje al usuario. En caso contrario, se redirige al usuario a la página de inicio de sesión para la aplicación.  
  
> [!IMPORTANT]
>  En este ejemplo contiene un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Membership#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/createuser1cs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.Membership#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/createuser1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipCreateUserException">El usuario no se creó. Vea la propiedad <see cref="P:System.Web.Security.MembershipCreateUserException.StatusCode" /> para obtener un valor <see cref="T:System.Web.Security.MembershipCreateStatus" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string * string * string * string * bool *  -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">Nombre de usuario del nuevo usuario.</param>
        <param name="password">Contraseña del nuevo usuario.</param>
        <param name="email">La dirección de correo electrónico para el nuevo usuario.</param>
        <param name="passwordQuestion">El valor de la pregunta de contraseña para el usuario de pertenencia.</param>
        <param name="passwordAnswer">El valor de la respuesta de contraseña para el usuario de pertenencia.</param>
        <param name="isApproved">Un booleano que indica si el nuevo usuario puede iniciar la sesión.</param>
        <param name="status">Objeto <see cref="T:System.Web.Security.MembershipCreateStatus" /> que indica que el usuario se ha creado correctamente o el motivo del error en la creación.</param>
        <summary>Agrega un nuevo usuario con los valores de propiedades especificados al almacén de datos y devuelve un parámetro de estado que indica que el usuario se ha creado correctamente o el motivo del error en la creación del usuario.</summary>
        <returns>Objeto <see cref="T:System.Web.Security.MembershipUser" /> para el usuario recién creado. Si no se ha creado ningún usuario, este método devuelve <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> Agrega un nuevo usuario al almacén de datos y devuelve un <xref:System.Web.Security.MembershipUser> objeto para el usuario recién creado. Si se produce un error en la creación del usuario, puede recuperar un <xref:System.Web.Security.MembershipCreateStatus> valor desde el `status` parámetro de salida que indica el motivo del error de creación de usuario.  
  
 El <xref:System.Web.Security.Membership.CreateUser%2A> método devolverá `null` si `password` es una cadena vacía o `null`, `username` es una cadena vacía o `null` o contiene una coma (,), `passwordQuestion` no `null` y es una cadena vacía, o `passwordAnswer` no `null` y contiene una cadena vacía.  
  
 Una vez que se ha creado un usuario de pertenencia y tiene una referencia a un <xref:System.Web.Security.MembershipUser> objeto para ese usuario, puede modificar la configuración para ese usuario con el <xref:System.Web.Security.MembershipUser> métodos públicos y estableciendo los valores de propiedad de la <xref:System.Web.Security.MembershipUser> objeto y, a continuación, pasar el <xref:System.Web.Security.MembershipUser> de objeto para el <xref:System.Web.Security.Membership.UpdateUser%2A> método.  
  
 Si un usuario ya existe en el origen de datos para la aplicación, puede obtener un <xref:System.Web.Security.MembershipUser> objeto para el usuario ya existente con el <xref:System.Web.Security.Membership.GetUser%2A> método.  
  
 Espacios iniciales y finales se recortan de todos los valores de parámetro de cadena.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un nuevo usuario para una aplicación ASP.NET configurada para usar autenticación de formularios y la pertenencia a ASP.NET. Si el usuario no se crea correctamente, se muestra un mensaje al usuario. En caso contrario, se redirige al usuario a la página de inicio de sesión para la aplicación.  
  
> [!IMPORTANT]
>  En este ejemplo contiene un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string * string * string * string * bool * obj *  -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, providerUserKey, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">Nombre de usuario del nuevo usuario.</param>
        <param name="password">Contraseña del nuevo usuario.</param>
        <param name="email">La dirección de correo electrónico para el nuevo usuario.</param>
        <param name="passwordQuestion">El valor de la pregunta de contraseña para el usuario de pertenencia.</param>
        <param name="passwordAnswer">El valor de la respuesta de contraseña para el usuario de pertenencia.</param>
        <param name="isApproved">Un booleano que indica si el nuevo usuario puede iniciar la sesión.</param>
        <param name="providerUserKey">El identificador de usuario para el usuario que se debería almacenar en el almacén de datos de la pertenencia.</param>
        <param name="status">Objeto <see cref="T:System.Web.Security.MembershipCreateStatus" /> que indica que el usuario se ha creado correctamente o el motivo del error en la creación.</param>
        <summary>Agrega a un nuevo usuario con los valores de propiedades especificados y un identificador único al almacén de datos y devuelve un parámetro de estado que indica que el usuario se ha creado correctamente o el motivo del error en la creación del usuario.</summary>
        <returns>Objeto <see cref="T:System.Web.Security.MembershipUser" /> para el usuario recién creado. Si no se ha creado ningún usuario, este método devuelve <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> Agrega un nuevo usuario al almacén de datos y devuelve un <xref:System.Web.Security.MembershipUser> objeto para el usuario recién creado. Si se produce un error en la creación del usuario, puede recuperar un <xref:System.Web.Security.MembershipCreateStatus> valor desde el `status` parámetro de salida que indica el motivo del error de creación de usuario. Puede especificar un identificador único para el usuario, como un valor de clave principal de una base de datos mediante el `providerUserKey` parámetro.  
  
 El <xref:System.Web.Security.Membership.CreateUser%2A> método devolverá `null` si `password` es una cadena vacía o `null`, `username` es una cadena vacía o `null` o contiene una coma (,), `passwordQuestion` no `null` y contiene un valor vacío cadena, o `passwordAnswer` no `null` y contiene una cadena vacía.  
  
 Una vez que se ha creado un usuario de pertenencia y tiene una referencia a un <xref:System.Web.Security.MembershipUser> objeto para ese usuario, puede modificar la configuración para ese usuario con el <xref:System.Web.Security.MembershipUser> métodos públicos y estableciendo los valores de propiedad de la <xref:System.Web.Security.MembershipUser> objeto y, a continuación, pasar el <xref:System.Web.Security.MembershipUser> de objeto para el <xref:System.Web.Security.Membership.UpdateUser%2A> método.  
  
 Si un usuario ya existe en el origen de datos para la aplicación, puede obtener un <xref:System.Web.Security.MembershipUser> objeto para el usuario ya existente con el <xref:System.Web.Security.Membership.GetUser%2A> método.  
  
 Espacios iniciales y finales se recortan de todos los valores de parámetro de cadena.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Elimina a un usuario de la base de datos.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public static bool DeleteUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.DeleteUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteUser (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member DeleteUser : string -&gt; bool" Usage="System.Web.Security.Membership.DeleteUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nombre del usuario que se eliminará.</param>
        <summary>Elimina un usuario y cualquier dato del usuario relacionado de la base de datos.</summary>
        <returns>Es <see langword="true" /> si se ha eliminado al usuario; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Datos de usuario almacenados en la base de datos para el <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, o <xref:System.Web.UI.WebControls.WebParts.WebPart> personalización también se elimina cuando se usa el <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, y <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> objetos para el almacenamiento de datos.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se elimina el usuario ha iniciado sesión actualmente y todos los datos relacionados.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/DeleteUsercs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.Membership#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/DeleteUservb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> es una cadena vacía o contiene una coma (,).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> es <see langword="null." /></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public static bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberSignature Language="F#" Value="static member DeleteUser : string * bool -&gt; bool" Usage="System.Web.Security.Membership.DeleteUser (username, deleteAllRelatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Nombre del usuario que se eliminará.</param>
        <param name="deleteAllRelatedData">
          <see langword="true" /> para eliminar los datos relacionados con el usuario de la base de datos; <see langword="false" /> para mantener los datos relacionados con el usuario en la base de datos.</param>
        <summary>Elimina a un usuario de la base de datos.</summary>
        <returns>Es <see langword="true" /> si se ha eliminado al usuario; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Solo se eliminan los usuarios eliminados de la base de datos de la configurada `applicationName`.  
  
 Si `deleteAllRelatedData` es `true`, datos de usuario almacenados en la base de datos para el <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, o <xref:System.Web.UI.WebControls.WebParts.WebPart> personalización también se elimina cuando se usa el <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, y <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> de objetos para almacenamiento de datos.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se elimina el usuario ha iniciado sesión actualmente y todos los datos relacionados.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/DeleteUsercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/DeleteUservb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> es una cadena vacía o contiene una coma (,).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> es <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public static bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnablePasswordReset { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordReset : bool" Usage="System.Web.Security.Membership.EnablePasswordReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si se configura el proveedor de pertenencia actual para permitirles a los usuarios restablecer sus contraseñas.</summary>
        <value>
          <see langword="true" /> si el proveedor de pertenencia admite el restablecimiento de contraseña; de lo contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Contraseña restablecimiento es la posibilidad de pertenencia a ASP.NET reemplazar la contraseña actual de un nombre de usuario con un nuevo generado aleatoriamente cuando un usuario ha olvidado su contraseña o la contraseña actual ya no es válida. Esto es especialmente útil cuando se establece el formato de la contraseña en <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, como los usuarios no pueden recuperar los valores de contraseña con algoritmo hash.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra el elemento en el `system.web` sección del archivo Web.config para una aplicación ASP.NET. Especifica que la aplicación utiliza una instancia de la <xref:System.Web.Security.SqlMembershipProvider> y habilita el restablecimiento de contraseña.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 El ejemplo de código siguiente comprueba primero que <xref:System.Web.Security.Membership.EnablePasswordReset%2A> es `true`, a continuación, restablece una contraseña de usuario y devuelve la nueva contraseña generada automáticamente.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ResetPasswordcs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ResetPasswordvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public static bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordRetrieval : bool" Usage="System.Web.Security.Membership.EnablePasswordRetrieval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si se configura el proveedor de pertenencia actual para permitirles a los usuarios recuperar sus contraseñas.</summary>
        <value>Es <see langword="true" /> si el proveedor de pertenencia admite la recuperación de contraseñas; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> es `false`, el proveedor de pertenencia subyacente puede producir un <xref:System.Web.HttpException>.  
  
 Los proveedores que se incluyen con .NET Framework admiten varios formatos de contraseña para mejorar la seguridad de contraseña. Si el formato de la contraseña se establece en <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, a continuación, los usuarios no podrán recuperar su contraseña existente de la base de datos. El <xref:System.Web.Security.MembershipPasswordFormat.Hashed> formato de la contraseña proporciona codificación unidireccional de los valores de contraseña. Las contraseñas son "hash" y en comparación con los valores almacenados en la base de datos para la autenticación. Los valores "Hash" no pueden ser sin codificar para recuperar el valor de contraseña original. Para obtener más información, vea <xref:System.Web.Security.MembershipPasswordFormat>.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra el elemento en el `system.web` sección del archivo Web.config para una aplicación ASP.NET. Especifica que la aplicación utiliza una instancia de la <xref:System.Web.Security.SqlMembershipProvider> y habilita la recuperación de contraseña.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="false"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 El ejemplo de código siguiente comprueba primero que <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> es `true`, a continuación, recupera la contraseña de un nombre de usuario especificado y lo envía a la dirección de correo electrónico para el usuario especificado.  
  
> [!IMPORTANT]
>  No se recomienda devolver una contraseña en texto no cifrado mediante correo electrónico para los sitios que requieren un alto nivel de seguridad. Para los sitios de alta seguridad, se recomienda devolver contraseñas usando cifrado, como SSL.  
>   
>  Este ejemplo incluye un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindUsersByEmail">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene una colección de usuarios de pertenencia donde la dirección de correo contiene la dirección de correo electrónico especificada que necesita coincidir.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByEmail (emailToMatch As String) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch);" />
      <MemberSignature Language="F#" Value="static member FindUsersByEmail : string -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByEmail emailToMatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">Dirección de correo electrónico que se va a buscar.</param>
        <summary>Obtiene una colección de usuarios de pertenencia donde la dirección de correo contiene la dirección de correo electrónico especificada que necesita coincidir.</summary>
        <returns>Objeto <see cref="T:System.Web.Security.MembershipUserCollection" /> que contiene todos los usuarios que coinciden con el parámetro <paramref name="emailToMatch" />.  
  
Los espacios al inicio y al final se recortan del valor de parámetro <paramref name="emailToMatch" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.FindUsersByEmail%2A> Devuelve una lista de usuarios de pertenencia donde la dirección de correo electrónico coincide con el proporcionado `emailToMatch` el configurado `applicationName`.  
  
 El <xref:System.Web.Security.SqlMembershipProvider> realiza la búsqueda utilizando una cláusula LIKE contra el `emailToMatch` parámetro. Los caracteres comodín que es compatibles con SQL Server en como cláusulas que pueden usarse en el `emailToMatch` el valor del parámetro.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Web.Security.Membership.FindUsersByEmail%2A> método para recuperar información de usuario de pertenencia de la base de datos de pertenencia basándose en la entrada de usuario y muestra los resultados en páginas de datos.  
  
> [!IMPORTANT]
>  En este ejemplo contiene un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Membership#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/FindUsersByEmailcs.aspx#9)]
 [!code-aspx-vb[System.Web.Security.Membership#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/FindUsersByEmailvb.aspx#9)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindUsersByEmail : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByEmail (emailToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">Dirección de correo electrónico que se va a buscar.</param>
        <param name="pageIndex">Índice de la página de resultados que se va a devolver. <c>pageIndex</c> es de base cero.</param>
        <param name="pageSize">Tamaño de la página de resultados que se va a devolver.</param>
        <param name="totalRecords">Número total de usuarios coincidentes.</param>
        <summary>Obtiene una colección de usuarios de pertenencia, en una página de datos, donde la dirección de correo electrónico contiene la dirección de correo electrónico especificada que necesita coincidir.</summary>
        <returns>
          <see cref="T:System.Web.Security.MembershipUserCollection" /> que contiene una página de objetos <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> que comienza en la página especificada por <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.FindUsersByEmail%2A> Devuelve una lista de usuarios de pertenencia donde la dirección de correo electrónico coincide con el proporcionado `emailToMatch` el configurado `applicationName`.  
  
 El <xref:System.Web.Security.SqlMembershipProvider> realiza la búsqueda utilizando una cláusula LIKE contra el `emailToMatch` parámetro. Los caracteres comodín que es compatibles con SQL Server en como cláusulas que pueden usarse en el `emailToMatch` el valor del parámetro.  
  
 Los resultados devueltos por <xref:System.Web.Security.Membership.FindUsersByEmail%2A> están restringidas por la `pageIndex` y `pageSize` parámetros. El `pageSize` parámetro identifica el número máximo de <xref:System.Web.Security.MembershipUser> objetos que se va a devolver en el <xref:System.Web.Security.MembershipUserCollection>. El `pageIndex` parámetro identifica qué página de resultados que se va a devolver, donde 0 representa la primera página. El `totalRecords` parámetro es un `out` parámetro que se establece en el número total de usuarios de pertenencia que coincide con el `emailToMatch` valor. Por ejemplo, si se encuentran 13 usuarios dónde `emailToMatch` coincide con la dirección de correo electrónico completo, o de parte de y el `pageIndex` valor es 1 con un `pageSize` de 5, el <xref:System.Web.Security.MembershipUserCollection> devuelto contendría del sexto al décimo usuario devueltos. `totalRecords` se establecería en 13.  
  
 Los espacios al inicio y al final se recortan del valor de parámetro `emailToMatch`.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Web.Security.Membership.FindUsersByEmail%2A> método para recuperar información de usuario de pertenencia de la base de datos de pertenencia basándose en la entrada de usuario y muestra los resultados en páginas de datos.  
  
> [!IMPORTANT]
>  En este ejemplo contiene un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByEmailcs.aspx#13)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByEmailvb.aspx#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> es menor que cero.  
  
O bien 
 <paramref name="pageSize" /> es menor que 1.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindUsersByName">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene una colección de usuarios de pertenencia en la que el nombre de usuario contiene el nombre de usuario especificado que debe coincidir.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByName (usernameToMatch As String) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="static member FindUsersByName : string -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByName usernameToMatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">El nombre de usuario que se va a buscar.</param>
        <summary>Obtiene una colección de usuarios de pertenencia en la que el nombre de usuario contiene el nombre de usuario especificado que debe coincidir.</summary>
        <returns>Objeto <see cref="T:System.Web.Security.MembershipUserCollection" /> que contiene todos los usuarios que coinciden con el parámetro <paramref name="usernameToMatch" />.  
  
Los espacios al inicio y al final se recortan del valor de parámetro <paramref name="usernameToMatch" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> Devuelve una lista de usuarios de pertenencia donde el nombre de usuario coincide con el proporcionado `usernameToMatch` el configurado `applicationName`.  
  
 El <xref:System.Web.Security.SqlMembershipProvider> realiza la búsqueda utilizando una cláusula LIKE contra el `usernameToMatch` parámetro. Los caracteres comodín que es compatibles con SQL Server en como cláusulas que pueden usarse en el `usernameToMatch` el valor del parámetro.  
  
 Espacios iniciales y finales se recortan de todos los valores de parámetro.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Web.Security.Membership.FindUsersByName%2A> método para recuperar información de usuario de pertenencia de la base de datos de pertenencia basándose en la entrada de usuario y muestra los resultados en páginas de datos.  
  
> [!IMPORTANT]
>  En este ejemplo contiene un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Membership#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/FindUsersByNamecs.aspx#10)]
 [!code-aspx-vb[System.Web.Security.Membership#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/FindUsersByNamevb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> es una cadena vacía.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> es <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindUsersByName : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByName (usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">El nombre de usuario que se va a buscar.</param>
        <param name="pageIndex">Índice de la página de resultados que se va a devolver. <c>pageIndex</c> es de base cero.</param>
        <param name="pageSize">Tamaño de la página de resultados que se va a devolver.</param>
        <param name="totalRecords">Número total de usuarios coincidentes.</param>
        <summary>Obtiene una colección de usuarios de pertenencia, en una página de datos, cuyo nombre de usuario contiene el nombre de usuario especificado que debe coincidir.</summary>
        <returns>
          <see cref="T:System.Web.Security.MembershipUserCollection" /> que contiene una página de objetos <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> que comienza en la página especificada por <paramref name="pageIndex" />.  
  
Los espacios al inicio y al final se recortan del valor de parámetro <paramref name="usernameToMatch" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> Devuelve una lista de usuarios de pertenencia donde el nombre de usuario coincide con el proporcionado `usernameToMatch` el configurado `applicationName`.  
  
 El <xref:System.Web.Security.SqlMembershipProvider> realiza la búsqueda utilizando una cláusula LIKE contra el `usernameToMatch` parámetro. Los caracteres comodín que es compatibles con SQL Server en como cláusulas que pueden usarse en el `usernameToMatch` el valor del parámetro.  
  
 Los resultados devueltos por <xref:System.Web.Security.Membership.FindUsersByName%2A> están restringidas por la `pageIndex` y `pageSize` parámetros. El `pageSize` parámetro identifica el número máximo de <xref:System.Web.Security.MembershipUser> objetos que se va a devolver en el <xref:System.Web.Security.MembershipUserCollection>. El `pageIndex` parámetro identifica qué página de resultados que se va a devolver, donde 0 representa la primera página. El `totalRecords` parámetro es un `out` parámetro que se establece en el número total de usuarios de pertenencia que coincide con el `usernameToMatch` valor. Por ejemplo, si se encuentran 13 usuarios dónde `usernameToMatch` coincide con el nombre de usuario completo, o de parte de y el `pageIndex` valor es 1 con un `pageSize` de 5, el <xref:System.Web.Security.MembershipUserCollection> devuelto contendría del sexto al décimo usuario devueltos. `totalRecords` se establecería en 13.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Web.Security.Membership.FindUsersByName%2A> método para recuperar información de usuario de pertenencia de la base de datos de pertenencia basándose en la entrada de usuario y muestra los resultados en páginas de datos.  
  
> [!IMPORTANT]
>  En este ejemplo contiene un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByNamecs.aspx#12)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByNamevb.aspx#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> es una cadena vacía.  
  
O bien 
 <paramref name="pageIndex" /> es menor que cero.  
  
O bien 
 <paramref name="pageSize" /> es menor que 1.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> es <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GeneratePassword">
      <MemberSignature Language="C#" Value="public static string GeneratePassword (int length, int numberOfNonAlphanumericCharacters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GeneratePassword(int32 length, int32 numberOfNonAlphanumericCharacters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GeneratePassword (length As Integer, numberOfNonAlphanumericCharacters As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GeneratePassword(int length, int numberOfNonAlphanumericCharacters);" />
      <MemberSignature Language="F#" Value="static member GeneratePassword : int * int -&gt; string" Usage="System.Web.Security.Membership.GeneratePassword (length, numberOfNonAlphanumericCharacters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="numberOfNonAlphanumericCharacters" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">Número de caracteres de la contraseña generada. La longitud debe estar entre 1 y 128 caracteres.</param>
        <param name="numberOfNonAlphanumericCharacters">Número mínimo de caracteres no alfanuméricos (como @, #, !, %, &amp;, etc.) en la contraseña generada.</param>
        <summary>Genera una contraseña aleatoria de la longitud especificada.</summary>
        <returns>Contraseña aleatoria de la longitud especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.Membership.GeneratePassword%2A> método se usa para generar una contraseña aleatoria y se usa normalmente el <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> método implementado por un proveedor de pertenencia para restablecer la contraseña de un usuario a una nueva contraseña temporal.  
  
 La contraseña generada contiene solo caracteres alfanuméricos y los signos de puntuación siguientes: `!@#$%^&*()_-+=[{]};:<>|./?`. Ningún carácter de control oculto o no imprimibles se incluye en la contraseña generada.  
  
> [!NOTE]
>  La contraseña aleatoria creada por el <xref:System.Web.Security.Membership.GeneratePassword%2A> no se garantiza que el método pasa la expresión regular en la <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> propiedad. Sin embargo, la contraseña aleatoria cumplirá los criterios establecidos por la <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> propiedad y el `numberOfNonAlphanumericCharacters` parámetro.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un nuevo usuario de pertenencia y usa el <xref:System.Web.Security.Membership.GeneratePassword%2A> método para inicializar la contraseña para el nuevo usuario a un valor aleatorio que se muestra al usuario.  
  
> [!IMPORTANT]
>  En este ejemplo contiene un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Membership#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/GeneratePasswordcs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.Membership#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/GeneratePasswordvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="length" /> es menor que 1 o mayor que 128 o 
 <paramref name="numberOfNonAlphanumericCharacters" /> es menor que 0 o mayor que <paramref name="length" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllUsers">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene una colección de todos los usuarios en la base de datos.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection GetAllUsers ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection GetAllUsers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetAllUsers" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllUsers () As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ GetAllUsers();" />
      <MemberSignature Language="F#" Value="static member GetAllUsers : unit -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.GetAllUsers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene una colección de todos los usuarios en la base de datos.</summary>
        <returns>Objeto <see cref="T:System.Web.Security.MembershipUserCollection" /> de objetos <see cref="T:System.Web.Security.MembershipUser" /> que representa a todos los usuarios de la base de datos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetAllUsers%2A> Devuelve la información de todos los usuarios de pertenencia para una aplicación como una colección de <xref:System.Web.Security.MembershipUser> objetos. Tenga cuidado al usar el <xref:System.Web.Security.Membership.GetAllUsers%2A> método con bases de datos de usuario muy grandes, como resultante <xref:System.Web.Security.MembershipUserCollection> en ASP.NET página puede degradar el rendimiento de la aplicación.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se devuelve una lista de usuarios con un recuento del número de usuarios en línea actualmente.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member GetAllUsers : int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.GetAllUsers (pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">Índice de la página de resultados que se va a devolver. Utilice 0 para indicar la primera página.</param>
        <param name="pageSize">Tamaño de la página de resultados que se va a devolver. <c>pageIndex</c> es de base cero.</param>
        <param name="totalRecords">Número total de usuarios.</param>
        <summary>Obtiene una colección de todos los usuarios de la base de datos en páginas de datos.</summary>
        <returns>Colección <see cref="T:System.Web.Security.MembershipUserCollection" /> de objetos <see cref="T:System.Web.Security.MembershipUser" /> que representan a todos los usuarios en la base de datos para la propiedad <see langword="applicationName" /> configurada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los resultados devueltos por <xref:System.Web.Security.Membership.GetAllUsers%2A> están restringidas por la `pageIndex` y `pageSize` parámetros. El `pageSize` parámetro identifica el número máximo de <xref:System.Web.Security.MembershipUser> objetos que se va a devolver en el <xref:System.Web.Security.MembershipUserCollection>. El `pageIndex` parámetro identifica qué página de resultados que se va a devolver, donde 0 representa la primera página. El `totalRecords` parámetro es un `out` parámetro que se establece en el número total de usuarios de pertenencia para el `applicationName`. Por ejemplo, si hay 13 usuarios para el `applicationName`y el `pageIndex` valor es 1 con un `pageSize` de 5, el <xref:System.Web.Security.MembershipUserCollection> devuelto contendría del sexto al décimo usuario devueltos. `totalRecords` se establecería en 13.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se devuelve una lista de usuarios en las páginas de datos con un recuento del número de usuarios en línea actualmente.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> es menor que cero.  
  
O bien 
 <paramref name="pageSize" /> es menor que 1.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public static int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNumberOfUsersOnline();" />
      <MemberSignature Language="F#" Value="static member GetNumberOfUsersOnline : unit -&gt; int" Usage="System.Web.Security.Membership.GetNumberOfUsersOnline " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene el número de usuarios que actualmente tienen acceso a una aplicación.</summary>
        <returns>Número de usuarios que actualmente tienen acceso a una aplicación.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> Devuelve el número de usuarios actual <xref:System.Web.Security.Membership.ApplicationName%2A> donde la fecha de última actividad es mayor que la hora actual menos el <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>. Marca de fecha/hora de la última actividad se actualiza a la fecha y hora actuales cuando se validan las credenciales de usuario por medio de la <xref:System.Web.Security.Membership.ValidateUser%2A> o <xref:System.Web.Security.Membership.UpdateUser%2A> método o cuando una llamada a un <xref:System.Web.Security.Membership.GetUser%2A> sobrecarga que toma ningún parámetro o una que usa el `userIsOnline`parámetro para especificar que se debe actualizar la marca de fecha y hora.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se devuelve una lista de usuarios con un recuento del número de usuarios en línea actualmente.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene la información del origen de datos para el usuario de pertenencia.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser () As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser();" />
      <MemberSignature Language="F#" Value="static member GetUser : unit -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recibe la información del origen de datos y actualiza la marca de fecha y hora de la última actividad para el usuario de pertenencia que ha iniciado la sesión.</summary>
        <returns>Objeto <see cref="T:System.Web.Security.MembershipUser" /> que representa al usuario que ha iniciado la sesión.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser> Recupera la información de usuario del origen de datos y crea un <xref:System.Web.Security.MembershipUser> objeto rellenado con los datos devueltos. Si usa uno de los <xref:System.Web.Security.Membership.GetUser%2A> sobrecargas que no tome un `username` parámetro, <xref:System.Web.Security.Membership.GetUser%2A> devuelve la información del usuario de pertenencia que ha iniciado la sesión actual. El usuario de pertenencia que ha iniciado la sesión actual se identifica mediante el <xref:System.Security.Principal.IIdentity.Name%2A> del usuario actual <xref:System.Web.HttpContext>.  
  
 También puede especificar si desea que <xref:System.Web.Security.Membership.GetUser%2A> para actualizar la última actividad marca de fecha y hora para el usuario que se va a recuperar mediante el `userIsOnline` parámetro. De la <xref:System.Web.Security.Membership.GetUser%2A> sobrecargas que no toman un `userIsOnline` parámetro, `GetUser()` implícitamente marca de fecha y hora de las actualizaciones de la última actividad del usuario. `GetUser(System.String)` y `GetUser(System.Object)` no lo hacen.  
  
   
  
## Examples  
 El ejemplo de código siguiente actualiza la última actividad sello para el usuario de pertenencia que ha iniciado la sesión actual y muestra el nombre de usuario en la página ASP.NET de fecha y hora.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/default1cs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.Membership#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/default1vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ningún usuario de pertenencia ha iniciado sesión.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(bool userIsOnline);" />
      <MemberSignature Language="F#" Value="static member GetUser : bool -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser userIsOnline" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userIsOnline">Si es <see langword="true" />, se actualiza la marca de fecha y hora de la última actividad correspondiente al usuario especificado.</param>
        <summary>Recibe la información del origen de datos para el usuario de pertenencia que ha iniciado la sesión. Actualiza la marca de fecha y hora de la última actividad para el usuario de pertenencia que ha iniciado la sesión, si se ha especificado.</summary>
        <returns>Objeto <see cref="T:System.Web.Security.MembershipUser" /> que representa al usuario que ha iniciado la sesión.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.Membership.GetUser%2A> método recupera la información de usuario del origen de datos y crea un <xref:System.Web.Security.MembershipUser> objeto rellenado con los datos devueltos. Si usa uno de los <xref:System.Web.Security.Membership.GetUser%2A> sobrecargas que no tome un `username` parámetro, <xref:System.Web.Security.Membership.GetUser%2A> devuelve la información del usuario de pertenencia que ha iniciado la sesión actual. El usuario de pertenencia que ha iniciado la sesión actual se identifica mediante el <xref:System.Security.Principal.IIdentity.Name%2A> del usuario actual <xref:System.Web.HttpContext>.  
  
 También puede especificar si desea que <xref:System.Web.Security.Membership.GetUser%2A> para actualizar la última actividad marca de fecha y hora para el usuario que se va a recuperar mediante el `userIsOnline` parámetro. De la <xref:System.Web.Security.Membership.GetUser%2A> sobrecargas que no toman un `userIsOnline` parámetro, `GetUser()` implícitamente marca de fecha y hora de las actualizaciones de la última actividad del usuario. `GetUser(System.String)` y `GetUser(System.Object)` no lo hacen.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra el nombre de usuario para el usuario de pertenencia ha iniciado sesión en la página ASP.NET sin actualizar la última actividad sello para el usuario de fecha y hora.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/default2cs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.Membership#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/default2vb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ningún usuario de pertenencia ha iniciado sesión.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (object providerUserKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(object providerUserKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (providerUserKey As Object) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey);" />
      <MemberSignature Language="F#" Value="static member GetUser : obj -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser providerUserKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">El identificador de usuario único del origen de datos de la pertenencia para el usuario.</param>
        <summary>Recibe la información del origen de datos para el usuario de pertenencia asociado al identificador único especificado.</summary>
        <returns>Objeto <see cref="T:System.Web.Security.MembershipUser" /> que representa al usuario asociado al identificador único que se ha especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.Membership.GetUser%2A> método recupera la información de usuario del origen de datos y crea un <xref:System.Web.Security.MembershipUser> objeto rellenado con los datos devueltos. El usuario se identifica mediante el identificador único del origen de datos especificado utilizando el `providerUserKey` parámetro.  
  
 También puede especificar si desea que <xref:System.Web.Security.Membership.GetUser%2A> actualicen la actividad de la última marca de fecha y hora para el usuario que se recuperan con el `userIsOnline` parámetro. De la <xref:System.Web.Security.Membership.GetUser%2A> sobrecargas que no toman un `userIsOnline` parámetro, `GetUser()` implícitamente marca de fecha y hora de las actualizaciones de la última actividad del usuario. `GetUser(System.String)` y `GetUser(System.Object)` no  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerUserKey" /> es <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (username As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member GetUser : string -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nombre del usuario que se va a recuperar.</param>
        <summary>Recibe la información del origen de datos para el usuario de pertenencia especificado.</summary>
        <returns>Objeto <see cref="T:System.Web.Security.MembershipUser" /> que representa el usuario especificado. Si el parámetro <paramref name="username" /> no corresponde a un usuario existente, este método devuelve <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.Membership.GetUser%2A> método recupera la información de usuario del origen de datos y crea un <xref:System.Web.Security.MembershipUser> objeto rellenado con los datos devueltos. Si usa uno de los <xref:System.Web.Security.Membership.GetUser%2A> sobrecargas que no tome un `username` parámetro, <xref:System.Web.Security.Membership.GetUser%2A> devuelve la información del usuario de pertenencia que ha iniciado la sesión actual. El usuario de pertenencia que ha iniciado la sesión actual se identifica mediante el <xref:System.Security.Principal.IIdentity.Name%2A> del usuario actual <xref:System.Web.HttpContext>.  
  
 También puede especificar si desea que <xref:System.Web.Security.Membership.GetUser%2A> actualicen la actividad de la última marca de fecha y hora para el usuario que se recuperan con el `userIsOnline` parámetro. De la <xref:System.Web.Security.Membership.GetUser%2A> sobrecargas que no toman un `userIsOnline` parámetro, <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> implícitamente marca de fecha y hora de las actualizaciones de la última actividad del usuario. <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> y <xref:System.Web.Security.Membership.GetUser%2A> no lo hacen.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Web.Security.Membership.GetUser%2A> método devuelva un <xref:System.Web.Security.MembershipUser> objeto para el usuario ha iniciado la sesión actual y las actualizaciones de direcciones de correo electrónico para el usuario.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> contiene una coma (,).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> es <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="static member GetUser : obj * bool -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser (providerUserKey, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">El identificador de usuario único del origen de datos de la pertenencia para el usuario.</param>
        <param name="userIsOnline">Si es <see langword="true" />, se actualiza la marca de fecha y hora de la última actividad correspondiente al usuario especificado.</param>
        <summary>Recibe la información del origen de datos para el usuario de pertenencia asociado al identificador único especificado. Actualiza la marca de fecha y hora de la última actividad para el usuario, si se ha especificado.</summary>
        <returns>Objeto <see cref="T:System.Web.Security.MembershipUser" /> que representa al usuario asociado al identificador único que se ha especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.Membership.GetUser%2A> método recupera la información de usuario del origen de datos y crea un <xref:System.Web.Security.MembershipUser> objeto rellenado con los datos devueltos. El usuario se identifica con el identificador único del origen de datos especificado en el `providerUserKey` parámetro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerUserKey" /> es <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="static member GetUser : string * bool -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser (username, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Nombre del usuario que se va a recuperar.</param>
        <param name="userIsOnline">Si es <see langword="true" />, se actualiza la marca de fecha y hora de la última actividad correspondiente al usuario especificado.</param>
        <summary>Recibe la información del origen de datos para el usuario de pertenencia especificado. Actualiza la marca de fecha y hora de la última actividad para el usuario, si se ha especificado.</summary>
        <returns>Objeto <see cref="T:System.Web.Security.MembershipUser" /> que representa el usuario especificado. Si el parámetro <paramref name="username" /> no corresponde a un usuario existente, este método devuelve <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.Membership.GetUser%2A> método recupera la información de usuario del origen de datos y crea un <xref:System.Web.Security.MembershipUser> objeto rellenado con los datos devueltos.  
  
 Si usa uno de los <xref:System.Web.Security.Membership.GetUser%2A> sobrecargas que no tome un `username` parámetro, <xref:System.Web.Security.Membership.GetUser%2A> devuelve la información del usuario de pertenencia que ha iniciado la sesión actual. El usuario de pertenencia que ha iniciado la sesión actual se identifica mediante el <xref:System.Security.Principal.IIdentity.Name%2A> del usuario actual <xref:System.Web.HttpContext>.  
  
 También puede especificar si desea que <xref:System.Web.Security.Membership.GetUser%2A> actualicen la actividad de la última marca de fecha y hora para el usuario que se recuperan con el `userIsOnline` parámetro. De la <xref:System.Web.Security.Membership.GetUser%2A> sobrecargas que no toman un `userIsOnline` parámetro, <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> implícitamente marca de fecha y hora de las actualizaciones de la última actividad del usuario. <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> y <xref:System.Web.Security.Membership.GetUser%2A> no lo hacen.  
  
   
  
## Examples  
 El ejemplo de código siguiente recupera la contraseña de un nombre de usuario especificado y lo envía a la dirección de correo electrónico para el usuario especificado. La llamada a <xref:System.Web.Security.Membership.GetUser%2A> especifica que la actividad de la última marca de fecha y hora para el usuario no se puede actualizar.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> contiene una coma (,).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> es <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public static string GetUserNameByEmail (string emailToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetUserNameByEmail(string emailToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUserNameByEmail (emailToMatch As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetUserNameByEmail(System::String ^ emailToMatch);" />
      <MemberSignature Language="F#" Value="static member GetUserNameByEmail : string -&gt; string" Usage="System.Web.Security.Membership.GetUserNameByEmail emailToMatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">Dirección de correo electrónico que se va a buscar.</param>
        <summary>Obtiene un nombre de usuario donde la dirección de correo electrónico del usuario coincide con la dirección de correo electrónico especificada.</summary>
        <returns>Nombre de usuario donde la dirección de correo electrónico del usuario coincide con la dirección de correo electrónico especificada. Si no se encuentra alguna coincidencia, se devuelve <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUserNameByEmail%2A> puede usarse para recuperar el nombre de usuario para un usuario de pertenencia en el caso de que un usuario no sabe su nombre de usuario, pero conoce su dirección de correo electrónico. Si más de un usuario en el almacén de datos tiene la misma dirección de correo electrónico, se devuelve el primer nombre de usuario encontrado.  
  
 Espacios iniciales y finales se recortan de todos los valores de parámetro.  
  
   
  
## Examples  
 El ejemplo de código siguiente recupera el nombre de usuario para una dirección de correo electrónico especificada.  
  
> [!IMPORTANT]
>  En este ejemplo contiene un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GetUserByEmailcs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GetUserByEmailvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithmType">
      <MemberSignature Language="C#" Value="public static string HashAlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string HashAlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.HashAlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property HashAlgorithmType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ HashAlgorithmType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithmType : string" Usage="System.Web.Security.Membership.HashAlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identificador del algoritmo utilizado para aplicar un algoritmo hash a las contraseñas.</summary>
        <value>Identificador del algoritmo utilizado para aplicar un algoritmo hash a las contraseñas o dejar en blanco para utilizar el algoritmo hash predeterminado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.Membership.HashAlgorithmType%2A> propiedad identifica el algoritmo hash personalizado utilizado por la <xref:System.Web.Security.Membership> clase. Establece el <xref:System.Web.Security.Membership.HashAlgorithmType%2A> propiedad utilizando el `hashAlgorithmType` atributo del elemento.  
  
 .NET Framework le permite configurar clases de criptografía personalizadas mediante la sección de configuración del elemento. El <xref:System.Web.Security.Membership.HashAlgorithmType%2A> propiedad debe coincidir con el `name` atributo del elemento en un elemento. Para obtener más información, consulte [asignación de nombres de algoritmo a clases de criptografía](~/docs/framework/configure-apps/map-algorithm-names-to-cryptography-classes.md).  
  
 Si el <xref:System.Web.Security.Membership.HashAlgorithmType%2A> no se establece la propiedad, el <xref:System.Web.Security.Membership> clase usa el algoritmo hash que se establezca el `validation` atributo del elemento.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public static int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxInvalidPasswordAttempts : int" Usage="System.Web.Security.Membership.MaxInvalidPasswordAttempts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número de intentos de contraseña o respuesta de contraseña no válidos que se permiten antes de bloquear al usuario de pertenencia.</summary>
        <value>Número de intentos de contraseña o respuesta de contraseña no válidos que se permiten antes de bloquear al usuario de pertenencia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> propiedad funciona junto con el <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> propiedad para protegernos contra un origen no deseado mediante intentos para adivinar la contraseña o respuesta de contraseña de un usuario de pertenencia.  
  
 Si el número de contraseñas no válidas o respuestas de contraseña especificado para un usuario de pertenencia es mayor o igual que el valor de la <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> propiedad dentro del número de minutos especificados por el <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> propiedad y, a continuación, el usuario está bloqueado en el sitio Web establecer el <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> propiedad `true` hasta que el usuario se desbloquea mediante una llamada a la <xref:System.Web.Security.MembershipUser.UnlockUser%2A> método.  
  
 Si se proporciona una contraseña o respuesta de contraseña antes del valor de la <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> se alcanza la propiedad, el contador que realiza el seguimiento del número de intentos no válidos se establece en cero.  
  
 Contraseña no válida y los intentos de respuesta de contraseña se realiza un seguimiento por separado. Por ejemplo, si la <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> propiedad está establecida en 5, el usuario tiene hasta cinco intentos para escribir una contraseña correcta y hasta cinco intentos para escribir una respuesta de contraseña correcta sin que se bloquee.  
  
 El <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> valor de propiedad se establece en la configuración de aplicación mediante el `maxInvalidPasswordAttempts` atributo del elemento de configuración.  
  
 Si el <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> propiedad es `false`, no se realiza un seguimiento de los intentos de respuesta de contraseña no válida.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra el elemento en el `system.web` sección del archivo Web.config de la aplicación. Especifica que la aplicación utiliza una instancia de la <xref:System.Web.Security.SqlMembershipProvider> clase para proporcionar servicios de pertenencia y establece el `maxInvalidPasswordAttempts` atribuir a cinco intentos no válidos y el `passwordAttemptWindow` en 30 minutos.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      maxInvalidPasswordAttempts="5"  
      passwordAttemptWindow="30"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public static int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredNonAlphanumericCharacters : int" Usage="System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número mínimo de caracteres especiales que debe contener una contraseña válida.</summary>
        <value>Número mínimo de caracteres especiales que debe contener una contraseña válida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A> propiedad devuelve el número mínimo de caracteres no alfanuméricos especiales que se debe especificar para crear una contraseña válida para el proveedor de pertenencia especificado en el <xref:System.Web.Security.Membership.Provider%2A> propiedad.  
  
 El <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A> valor de propiedad se establece en la configuración de aplicación mediante el `minRequiredNonAlphanumericCharacters` atributo del elemento de configuración.  
  
 Un carácter no alfanumérico es un carácter para el que el <xref:System.Char.IsLetterOrDigit%2A> devuelve del método `false`.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra el elemento de configuración en el `system.web` sección del archivo Web.config de la aplicación. Especifica que la aplicación utiliza una instancia de la <xref:System.Web.Security.SqlMembershipProvider> clase para proporcionar servicios de pertenencia y establece el `minRequiredNonAlphanumericCharacters` atribuir a 1 carácter.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredNonAlphanumericCharacters="1"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public static int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MinRequiredPasswordLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredPasswordLength : int" Usage="System.Web.Security.Membership.MinRequiredPasswordLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la longitud mínima necesaria para una contraseña.</summary>
        <value>Longitud mínima necesaria para una contraseña.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> propiedad obtiene el número mínimo de caracteres que se debe escribir para crear una contraseña válida para el proveedor de pertenencia especificado en el <xref:System.Web.Security.Membership.Provider%2A> propiedad.  
  
 El <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> valor de propiedad se establece en la configuración de aplicación mediante el `minRequiredPasswordLength` atributo del elemento de configuración.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra el elemento de configuración en el `system.web` sección del archivo Web.config de la aplicación. Especifica que la aplicación utiliza una instancia de la <xref:System.Web.Security.SqlMembershipProvider> clase para proporcionar servicios de pertenencia y establece el `minRequiredPasswordLength` atribuir a siete caracteres.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredPasswordLength="7"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public static int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int PasswordAttemptWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordAttemptWindow : int" Usage="System.Web.Security.Membership.PasswordAttemptWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la ventana de tiempo durante el que se realiza un seguimiento de los intentos incorrectos consecutivos para proporcionar una contraseña o respuesta de contraseña válida.</summary>
        <value>Ventana de tiempo, en minutos, durante el que se realiza un seguimiento de intentos incorrectos consecutivos para proporcionar una contraseña o respuesta de contraseña válida. El valor predeterminado es 10 minutos. Si el intervalo entre el intento incorrecto actual y el último intento incorrecto es mayor que el valor de la propiedad <see cref="P:System.Web.Security.Membership.PasswordAttemptWindow" />, cada intento incorrecto se trata como si fuera el primero.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> propiedad funciona junto con el <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> propiedad para ayudar a protegerse frente a un origen no deseado que adivinar la contraseña o respuesta de contraseña de un usuario de pertenencia a través de varios intentos. Cuando un usuario intenta iniciar sesión con, cambiar o restablecer su contraseña, sólo un número determinado de intentos consecutivos se permite dentro de un período de tiempo especificado. La longitud de esta ventana de tiempo se especifica en el <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> propiedad, que identifica el número de minutos permitido entre intentos no válidos.  
  
 Si el número de intentos incorrectos consecutivos que realiza un usuario para restablece su o la contraseña es igual al valor almacenado en el <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> propiedad y el tiempo transcurrido desde que el último intento no válido es menor que el número de minutos especificado en el <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> propiedad y, a continuación, el usuario de pertenencia está bloqueado. El usuario está bloqueado estableciendo el <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> propiedad `true` hasta que el usuario se desbloquea mediante una llamada a la <xref:System.Web.Security.MembershipUser.UnlockUser%2A> método.  
  
 Si el intervalo entre el intento incorrecto actual y el último intento incorrecto es mayor que el <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> la propiedad, el intento incorrecto actual se cuenta como la primera. Si se proporciona una respuesta de contraseña válida antes de alcanza el número máximo de intentos no válidos permitidos, el número de intentos de respuesta a la contraseña se establece en 0 (cero). Si se proporciona una contraseña válida antes de que el número máximo permitido de válido intentos se alcanza el número de intentos de contraseña no válidos y el número de intentos de respuesta de contraseña no válidos se establecen en 0 (cero).  
  
 Intentos de contraseña y respuesta de contraseña no válidos son independientes entre sí. Por ejemplo, si la <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> se establece en 5 y tres intentos de contraseña no válida se realizan seguidos de dos intentos de respuesta a la contraseña, se deben realizar dos intentos más de una contraseña no válida (o tres intentos más de respuesta a la contraseña) dentro de <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> para el usuario de pertenencia que se bloquee.  
  
 El <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> valor de propiedad se establece en la configuración de aplicación mediante el `passwordAttemptWindow` atributo de la sección de elemento de configuración.  
  
 Si el <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> propiedad está establecida en `false`, no se realiza un seguimiento de los intentos de respuesta de contraseña no válida.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra el elemento en el `system.web` sección del archivo Web.config para una aplicación ASP.NET. Especifica que la aplicación utiliza una instancia de la <xref:System.Web.Security.SqlMembershipProvider> y establece el `maxInvalidPasswordAttempts` atribuir a cinco intentos no válidos y el `passwordAttemptWindow` en 30 minutos.  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      maxInvalidPasswordAttempts="5"  
      passwordAttemptWindow="30"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public static string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordStrengthRegularExpression : string" Usage="System.Web.Security.Membership.PasswordStrengthRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la expresión regular utilizada para evaluar una contraseña.</summary>
        <value>Expresión regular utilizada para evaluar una contraseña.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> propiedad obtiene la expresión regular utilizada para evaluar la complejidad de contraseña desde el proveedor especificado en el <xref:System.Web.Security.Membership.Provider%2A> propiedad.  
  
 El <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> propiedad se establece en la configuración de aplicación mediante el `passwordStrengthRegularExpression` atributo del elemento de configuración.  
  
 Para obtener más información sobre las expresiones regulares, vea [expresiones regulares de .NET Framework](~/docs/standard/base-types/regular-expressions.md).  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra el elemento de configuración en el `system.web` sección del archivo Web.config de la aplicación. Especifica que la aplicación utiliza una instancia de la <xref:System.Web.Security.SqlMembershipProvider> clase para proporcionar servicios de pertenencia y establece el `passwordStrengthRegularExpression` atributo a una expresión regular que valide la contraseña cumple los criterios siguientes:  
  
-   Es mayor que siete caracteres.  
  
-   Contiene al menos un dígito.  
  
-   Contiene al menos un carácter especial de (no alfanumérico).  
  
 Si la contraseña no cumple estos criterios, el proveedor de pertenencia no acepta la contraseña.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression=" @\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
   </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Security.MembershipProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Provider As MembershipProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::MembershipProvider ^ Provider { System::Web::Security::MembershipProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.Security.MembershipProvider" Usage="System.Web.Security.Membership.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una referencia al proveedor de pertenencia predeterminado para la aplicación.</summary>
        <value>Proveedor de pertenencia predeterminado para la aplicación expuesto utilizando la clase base abstracta <see cref="T:System.Web.Security.MembershipProvider" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.Membership.Provider%2A> propiedad permite hacer referencia directamente al proveedor de pertenencia predeterminado para una aplicación. Esto se utiliza normalmente para tener acceso a los miembros personalizados del proveedor de pertenencia que no forma parte de la <xref:System.Web.Security.MembershipProvider> clase base abstracta.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se obtiene acceso a la predeterminada <xref:System.Web.Security.SqlMembershipProvider> habilitado para la aplicación mediante el <xref:System.Web.Security.Membership.Provider%2A> propiedad con el fin de determinar el valor de personalizado <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> propiedad.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/Providercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.Membership#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/Providervb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Security.MembershipProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Providers As MembershipProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::MembershipProviderCollection ^ Providers { System::Web::Security::MembershipProviderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Web.Security.MembershipProviderCollection" Usage="System.Web.Security.Membership.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de los proveedores de pertenencia para la aplicación ASP.NET.</summary>
        <value>Colección <see cref="T:System.Web.Security.MembershipProviderCollection" /> de los proveedores de pertenencia que están configurados para la aplicación ASP.NET.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.Membership.Providers%2A> propiedad hace referencia a todos los proveedores de pertenencia habilitados para una aplicación, incluidos los proveedores agregados en el archivo Web.config de la aplicación y el archivo Machine.config para todas las aplicaciones. Puede controlar qué suscripciones existen proveedores para una aplicación con el `providers` elemento de la sección de la configuración de la aplicación. Por ejemplo, el ejemplo siguiente muestra la sección en el archivo Web.config para una aplicación que quita el <xref:System.Web.Security.SqlMembershipProvider> instancia (`AspNetSqlProvider`) especificado en el archivo de configuración de máquina y agrega un <xref:System.Web.Security.SqlMembershipProvider> instancia denominada `SqlProvider` como la proveedor de pertenencia predeterminado para la aplicación.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <remove name="AspNetSqlProvider" />  
          <add name="SqlProvider"  
            type="System.Web.Security.SqlMembershipProvider"  
            connectionStringName="SqlServices"  
            enablePasswordRetrieval="false"  
            enablePasswordReset="true"  
            requiresQuestionAndAnswer="true"  
            passwordFormat="Hashed"  
            applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 Al especificar el [pertenencia Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) sección, debe especificar el `defaultProvider` atributo. Si no especifica un [pertenencia Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) sección en el archivo Web.config, los valores de configuración de la máquina se usan y <xref:System.Web.Security.SqlMembershipProvider> instancia denominada `AspNetSqlProvider` se establece como el `defaultProvider`.  
  
 Puede obtener una referencia fuertemente tipada a un proveedor de la <xref:System.Web.Security.Membership.Providers%2A> colección por el proveedor de pertenencia de indexación por su nombre y tenerlo que convertir el tipo deseado.  
  
   
  
## Examples  
 El ejemplo de código siguiente enumera los proveedores habilitados para una aplicación y sus tipos respectivos.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/Providerscs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.Membership#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/Providersvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public static bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresQuestionAndAnswer : bool" Usage="System.Web.Security.Membership.RequiresQuestionAndAnswer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el proveedor de pertenencia predeterminado necesita que el usuario responda una pregunta de la contraseña para restablecerla y recuperarla.</summary>
        <value>Es <see langword="true" /> si se necesita una respuesta sobre la contraseña para el restablecimiento y recuperación de la misma; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Requerir una pregunta y respuesta proporciona un nivel adicional de seguridad al recuperar o restablecer una contraseña de usuario. Los usuarios pueden proporcionar una pregunta y respuesta cuando se crea su nombre de usuario que puede usar posteriormente para recuperar o restablecer una contraseña olvidada.  
  
 <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> se comprueba cuando <xref:System.Web.Security.MembershipUser.ResetPassword%2A> o <xref:System.Web.Security.MembershipUser.GetPassword%2A> se llama. El proveedor proporcionado con .NET Framework se produce una <xref:System.NotSupportedException> si <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> es `true` y la respuesta de contraseña proporcionada es `null`.  
  
 Si <xref:System.Web.Security.Membership.EnablePasswordReset%2A> y <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> son ambos `false`, <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> puede usarse para forzar la creación de preguntas y respuestas cuando se crean nuevos usuarios; sin embargo, la pregunta y respuesta no se usará. Podrá recuperar la pregunta mediante la <xref:System.Web.Security.MembershipUser> clase.  
  
 Para obtener más información, consulte <xref:System.Web.Security.MembershipUser.ResetPassword%2A> y <xref:System.Web.Security.MembershipUser.GetPassword%2A>.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra el elemento en el `system.web` sección del archivo Web.config para una aplicación ASP.NET. Especifica que la aplicación utiliza una instancia de la <xref:System.Web.Security.SqlMembershipProvider>, habilita el restablecimiento de contraseña y requiere una respuesta de contraseña al realizar un restablecimiento.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 Ejemplo de código siguiente comprueba el valor de <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> y agrega los controles necesarios para una pregunta de contraseña y respuesta que se proporcione al crear un usuario.  
  
> [!IMPORTANT]
>  Este ejemplo incluye un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public static void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberSignature Language="F#" Value="static member UpdateUser : System.Web.Security.MembershipUser -&gt; unit" Usage="System.Web.Security.Membership.UpdateUser user" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">Objeto <see cref="T:System.Web.Security.MembershipUser" /> que representa al usuario que se va a actualizar y la información actualizada correspondiente al usuario.</param>
        <summary>Actualiza la base de datos con la información correspondiente al usuario especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.UpdateUser%2A> toma como entrada un <xref:System.Web.Security.MembershipUser> objeto rellenado con información actual del usuario de pertenencia y actualiza el origen de datos con los valores de propiedad de la <xref:System.Web.Security.MembershipUser> objeto. Puede construir un nuevo <xref:System.Web.Security.MembershipUser>, o recuperar un <xref:System.Web.Security.MembershipUser> objeto rellenado con los valores actuales en el origen de datos mediante el <xref:System.Web.Security.Membership.GetUser%2A>, <xref:System.Web.Security.Membership.GetAllUsers%2A>, <xref:System.Web.Security.Membership.FindUsersByName%2A>, o <xref:System.Web.Security.Membership.FindUsersByEmail%2A> métodos.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se actualiza la dirección de correo electrónico para el usuario ha iniciado la sesión actual.  
  
> [!IMPORTANT]
>  En este ejemplo contiene un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="user" /> es <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="UserIsOnlineTimeWindow">
      <MemberSignature Language="C#" Value="public static int UserIsOnlineTimeWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 UserIsOnlineTimeWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.UserIsOnlineTimeWindow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UserIsOnlineTimeWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int UserIsOnlineTimeWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.UserIsOnlineTimeWindow : int" Usage="System.Web.Security.Membership.UserIsOnlineTimeWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Especifica el número de minutos después de la marca de fecha y hora de la última actividad para un usuario durante el cual éste se considera que está en línea.</summary>
        <value>Número de minutos después de la marca de fecha y hora de la última actividad para un usuario durante el cual éste se considera que está en línea.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> se comprueba el valor de propiedad durante la llamada a <xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A>. Si el <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> para un usuario es mayor que la fecha y hora actuales menos la <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> valor en minutos, el usuario se considera en línea. Puede determinar si un usuario de pertenencia se considera en línea con el <xref:System.Web.Security.MembershipUser.IsOnline%2A> propiedad de la <xref:System.Web.Security.MembershipUser> clase.  
  
 El <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> para un usuario se actualiza cuando se validan correctamente las credenciales del usuario mediante el <xref:System.Web.Security.Membership.ValidateUser%2A> método. También puede actualizar el <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> para un usuario de pertenencia al llamar a uno de los <xref:System.Web.Security.Membership.GetUser%2A> sobrecargas. Si se llama a un <xref:System.Web.Security.Membership.GetUser%2A> sobrecarga que toma un `userIsOnline` parámetro, especifique un valor de `true` para actualizar la <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> para el usuario.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra el elemento en el `system.web` sección del archivo Web.config para una aplicación ASP.NET. Especifica que la aplicación utiliza una instancia de la <xref:System.Web.Security.SqlMembershipProvider> y establece el `userIsOnlineTimeWindow` atribuir a 20 minutos.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public static bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member ValidateUser : string * string -&gt; bool" Usage="System.Web.Security.Membership.ValidateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nombre del usuario que se va a validar.</param>
        <param name="password">Contraseña para el usuario especificado.</param>
        <summary>Comprueba que el nombre de usuario y la contraseña proporcionados son válidos.</summary>
        <returns>Es <see langword="true" /> si el nombre de usuario y la contraseña proporcionados son válidos; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.ValidateUser%2A> Proporciona una manera fácil para comprobar un nombre de usuario y contraseña del origen de datos. Tenga en cuenta que, si la `username` parámetro está vacío o `null`, un <xref:System.Web.HttpException> se produce.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la página de inicio de sesión para una aplicación ASP.NET configurada para usar la autenticación de formularios y la <xref:System.Web.Security.Membership> clase. Si las credenciales de usuario proporcionado no son válidas, se muestra un mensaje al usuario. En caso contrario, se redirige al usuario a la dirección URL solicitada originalmente por el <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método.  
  
> [!IMPORTANT]
>  En este ejemplo contiene un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ValidatingPassword">
      <MemberSignature Language="C#" Value="public static event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword" />
      <MemberSignature Language="DocId" Value="E:System.Web.Security.Membership.ValidatingPassword" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event ValidatingPassword As MembershipValidatePasswordEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Web::Security::MembershipValidatePasswordEventHandler ^ ValidatingPassword;" />
      <MemberSignature Language="F#" Value="member this.ValidatingPassword : System.Web.Security.MembershipValidatePasswordEventHandler " Usage="member this.ValidatingPassword : System.Web.Security.MembershipValidatePasswordEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipValidatePasswordEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se crea un usuario o se cambia o se restablece una contraseña.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.MembershipProvider.ValidatingPassword> evento se desencadena cuando el <xref:System.Web.Security.MembershipProvider.CreateUser%2A> método, el <xref:System.Web.Security.MembershipProvider.ChangePassword%2A> método, o el <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> se llama al método de un proveedor de pertenencia.  
  
 Puede usar el <xref:System.Web.Security.MembershipProvider.ValidatingPassword> evento para validar los formatos y los valores para los usuarios de pertenencia.  
  
 Puede cancelar actual <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, o <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> acción estableciendo el <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> propiedad de la <xref:System.Web.Security.ValidatePasswordEventArgs> a `true` durante el <xref:System.Web.Security.MembershipProvider.ValidatingPassword> eventos.  
  
 Si cancela la acción actual estableciendo la <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> propiedad `true`, puede establecer el <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> propiedad de la <xref:System.Web.Security.ValidatePasswordEventArgs> a una excepción que describe el motivo del error de validación de contraseña. El método de llamada producirá la excepción que el <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> propiedad está establecida en. Si el <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> propiedad es `null`, el llamador producirá una excepción genérica de error de validación de contraseña.  
  
   
  
## Examples  
 El siguiente ejemplo de código muestra un <xref:System.Web.Security.MembershipProvider.ValidatingPassword> eventos que valida el formato de la contraseña de un usuario y cancela la acción si la contraseña no coincide con el formato requerido.  
  
 [!code-csharp[System.Web.Security.Membership#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/CreateUser3cs.aspx#11)]
 [!code-vb[System.Web.Security.Membership#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/CreateUser3vb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Introducción a la pertenencia a ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>