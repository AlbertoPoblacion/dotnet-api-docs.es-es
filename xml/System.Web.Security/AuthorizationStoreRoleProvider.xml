<Type Name="AuthorizationStoreRoleProvider" FullName="System.Web.Security.AuthorizationStoreRoleProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7664a660b7c321799e51d290e875ffa92f1d34c7" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52244881" /></Metadata><TypeSignature Language="C#" Value="public class AuthorizationStoreRoleProvider : System.Web.Security.RoleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthorizationStoreRoleProvider extends System.Web.Security.RoleProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.AuthorizationStoreRoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthorizationStoreRoleProvider&#xA;Inherits RoleProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthorizationStoreRoleProvider : System::Web::Security::RoleProvider" />
  <TypeSignature Language="F#" Value="type AuthorizationStoreRoleProvider = class&#xA;    inherit RoleProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.RoleProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Administra el almacenamiento de la información de pertenencia de roles para una aplicación ASP.NET en un almacén de directivas del administrador de autorizaciones, o en un archivo XML, en un Active Directory, o en un servidor de modo de aplicaciones Active Directory.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta clase es utilizada por el <xref:System.Web.Security.Roles> y <xref:System.Web.Security.RolePrincipal> clases para proporcionar servicios de administración de roles para una aplicación ASP.NET con un almacén de administrador de autorización. Puede usar Administración de roles para especificar distintos niveles de autorización para la aplicación. El Administrador de autorización se puede acceder mediante la consola de administración de Microsoft.  
  
 La <xref:System.Web.Security.AuthorizationStoreRoleProvider> objeto funciona con tanto la autenticación de Windows y los modos de autenticación de formularios.  
  
 Puede configurar el <xref:System.Web.Security.AuthorizationStoreRoleProvider> objeto va a usar un archivo XML local o en un servidor de Active Directory o Active Directory Application Mode (ADAM). Cuando se usa un archivo local, la cadena de conexión debe ser similar al ejemplo siguiente.  
  
```  
msxml://<path to xml file>  
```  
  
 Si el archivo local se almacena en el árbol de directorios de una aplicación Web ASP.NET, puede usar la tilde ("~") carácter para indicar el directorio raíz. Por ejemplo, para indicar que el archivo local se almacena en el directorio de datos de la aplicación Web, usaría una cadena de conexión similar al ejemplo siguiente.  
  
 `msxml://~\App_Data\datafilename.xml`  
  
> [!IMPORTANT]
>  Almacenar archivos de datos XML en el directorio de aplicación Web es una amenaza de seguridad. De forma predeterminada, IIS suministrará los archivos de datos XML a la Web. Para mejorar la seguridad al utilizar un archivo de datos local en una aplicación ASP.NET, debe almacenar el archivo de datos en el `App_Data` directory. Los archivos almacenados en el `App_Data` directorio no se enviará a la Web.  
  
 Si está utilizando un servidor de Active Directory o ADAM para el almacén de directivas, la cadena de conexión debe ser similar al ejemplo siguiente.  
  
 `msldap://myserver/CN=MyAzManStore,OU=MyOU,DC=MyDomain,DC=MyDC,DC=Com`  
  
 Las excepciones que aparecen en la documentación de <xref:System.Web.Security.AuthorizationStoreRoleProvider> métodos del objeto son las excepciones que son generadas por el <xref:System.Web.Security.AuthorizationStoreRoleProvider> objeto. Puesto que el proveedor se basa en el tiempo de ejecución de administrador de autenticación subyacente, un <xref:System.Runtime.InteropServices.COMException> excepción puede ser cada vez que inicia el <xref:System.Web.Security.AuthorizationStoreRoleProvider> objeto reenvía una llamada al método en el tiempo de ejecución de administrador de autenticación.  
  
> [!IMPORTANT]
>  La <xref:System.Web.Security.AuthorizationStoreRoleProvider> objeto tiene los siguientes requisitos para que se ejecutan en entornos de confianza parcial:  
>   
>  Cuando utiliza un almacén de directivas basado en archivos en una aplicación de ASP.NET, los permisos de E/S de archivos concedidos por el nivel de confianza actual determinan si lectura y acciones de escritura están permitidas por el proveedor. La aplicación ASP.NET debe tener permiso en el archivo para leer datos desde el almacén de directivas de lectura y debe tener permiso de escritura para guardar información nueva o actualizar la información existente en el almacén de directivas. El archivo de directiva de confianza media predeterminada proporciona un permisos de lectura/escritura de la aplicación de ASP.NET en su directorio de aplicaciones. El archivo de directiva de confianza baja predeterminado solo ofrece una aplicación ASP.NET permiso de lectura en su directorio de aplicaciones. Además, la identidad del proceso que se ejecuta la aplicación ASP.NET debe tener permisos de sistema de archivos para leer o escribir el archivo de directiva.  
>   
>  Cuando se usa un servidor de Active Directory o ADAM, la aplicación ASP.NET necesita permiso de código no administrado porque interno <xref:System.Web.Security.AuthorizationStoreRoleProvider> código de objeto usa la interoperabilidad COM.  
>   
>  Cuando se usa el <xref:System.Web.Security.AuthorizationStoreRoleProvider> objeto fuera de ASP.NET, el código que realiza la llamada necesita permisos de código no administrado.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra un archivo Web.config establecido para usar el <xref:System.Web.Security.AuthorizationStoreRoleProvider> para administración de roles.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="AuthorizationServices" connectionString="msxml://~\App_Data\SampleStore.xml" />  
  </connectionStrings>  
  
  <system.web>  
  
    <authentication mode="Windows" />  
    <identity impersonate="true" />  
  
    <roleManager defaultProvider="AuthorizationStoreRoleProvider"   
      enabled="true"  
      cacheRolesInCookie="true"  
      cookieName=".ASPROLES"  
      cookieTimeout="30"  
      cookiePath="/"  
      cookieRequireSSL="false"  
      cookieSlidingExpiration="true"  
      cookieProtection="All" >  
      <providers>  
        <clear />  
          <add  
            name="AuthorizationStoreRoleProvider"  
            type="System.Web.Security.AuthorizationStoreRoleProvider"  
            connectionStringName="AuthorizationServices"  
            applicationName="SampleApplication"   
            cacheRefreshInterval="60"  
            scopeName="" />  
      </providers>  
    </roleManager>  
  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Descripción de la administración de roles de ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthorizationStoreRoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthorizationStoreRoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.AuthorizationStoreRoleProvider.%23ctor%2A> constructor se lo llama ASP.NET para crear una instancia de la <xref:System.Web.Security.AuthorizationStoreRoleProvider> clase tal como se especifica en la configuración de la aplicación. Este constructor no está pensado para usarse desde el código.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Descripción de la administración de roles de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public override void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.AddUsersToRoles : string[] * string[] -&gt; unit" Usage="authorizationStoreRoleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Matriz de cadenas de nombres de usuario que se van a agregar a los roles especificados.</param>
        <param name="roleNames">Una matriz de cadenas de nombres de roles a los que se agregan los nombres de usuario especificados.</param>
        <summary>Agrega los nombres de usuario especificados a cada una de los roles especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles%2A> llama al método el <xref:System.Web.Security.Roles> clase para asociar uno o varios usuarios con uno o varios roles en el almacén de datos de administrador de autorización especificado en el archivo de configuración de la aplicación ASP.NET (Web.config). Este método es invocado por el <xref:System.Web.Security.Roles.AddUserToRole%2A?displayProperty=nameWithType>, <xref:System.Web.Security.Roles.AddUserToRoles%2A?displayProperty=nameWithType>, <xref:System.Web.Security.Roles.AddUsersToRole%2A?displayProperty=nameWithType>, y <xref:System.Web.Security.Roles.AddUsersToRoles%2A?displayProperty=nameWithType> métodos de la <xref:System.Web.Security.Roles> clase.  
  
   
  
## Examples  
 El siguiente ejemplo de código agrega uno o varios usuarios a un rol o quita un usuario de un rol. Para obtener un ejemplo de un archivo Web.config que permite la administración de roles, consulte <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Uno de los nombres de usuario especificados es <see langword="null" />.  
  
O bien 
Uno de los nombres de rol especificados es <see langword="null" />.  
  
O bien 
 El valor de <paramref name="usernames" /> es <see langword="null" />.  
  
O bien 
 El valor de <paramref name="roleNames" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Uno de los nombres de usuario especificados es una cadena vacía o contiene una coma (,).  
  
O bien 
Uno de los nombres de rol especificados es una cadena vacía o contiene una coma (,).  
  
O bien 
 <paramref name="usernames" /> contiene un elemento duplicado.  
  
O bien 
 <paramref name="roleNames" /> contiene un elemento duplicado.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">No se ha encontrado el objeto <see langword="applicationName" /> configurado.  
  
O bien 
No se ha encontrado el objeto <see langword="scopeName" /> configurado.  
  
O bien 
El motor en tiempo de ejecución del administrador de autorizaciones no está instalado en el servidor.</exception>
        <exception cref="T:System.IO.FileNotFoundException">El atributo <see langword="connectionStringName" /> hace referencia a una cadena de conexión de un archivo que no existe.</exception>
        <exception cref="T:System.Web.HttpException">La instancia de <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> se configura con un almacén de directivas basado en archivos y no está permitido el acceso de lectura al archivo en el nivel de confianza actual.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Descripción de la administración de roles de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre de la aplicación de almacenamiento de autorizaciones para la que se va a almacenar y recuperar información de roles.</summary>
        <value>Nombre de la aplicación de almacenamiento de autorizaciones para la que se va a almacenar y recuperar información de roles. El valor predeterminado es el valor de la propiedad <see cref="P:System.Web.HttpRequest.ApplicationPath" /> para la propiedad <see cref="P:System.Web.HttpContext.Request" /> actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> está usando el <xref:System.Web.Security.AuthorizationStoreRoleProvider> para asociar usuarios y roles de administrador de autorización diferentes aplicaciones, que permite a ASP.NET varias aplicaciones para usar la misma directiva de administrador de autorización almacenan para almacenar información de la función sin que se produzcan conflictos entre los nombres de rol duplicado. Como alternativa, varias aplicaciones ASP.NET pueden utilizar el mismo almacén de directivas especificando el mismo valor en el <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> propiedad. El <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> propiedad puede establecerse mediante programación, o se puede establecer mediante declaración en el archivo Web.config de la aplicación mediante el uso de la `applicationName` atributo.  
  
 Si no se especifica un valor para el `applicationName` atributo en el archivo Web.config, el <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=nameWithType> valor actual de la propiedad <xref:System.Web.HttpContext.Request%2A?displayProperty=nameWithType> se usa el objeto.  
  
> [!NOTE]
>  Los nombres de aplicación de administrador de autorización no pueden contener el carácter "/" que se incluye en el <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=nameWithType> propiedad. Como resultado, el valor predeterminado para el <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> propiedad no se puede usar como nombre de aplicación Administrador de autorización y, en el archivo Web.config de la aplicación, debe especificar siempre un `applicationName` atributo el `provider` elemento que se va a configurar su <xref:System.Web.Security.AuthorizationStoreRoleProvider> instancia.  
  
> [!CAUTION]
>  Dado que se usa una instancia del proveedor de funciones predeterminado único para todas las solicitudes atendidas por un <xref:System.Web.HttpApplication> objeto, puede tener varias solicitudes de ejecución al mismo tiempo y se intentó establecer el <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> valor de propiedad. El <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> propiedad no es segura para subprocesos de varias escrituras y variación la <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> valor de propiedad puede provocar un comportamiento inesperado cuando hay varios usuarios de una aplicación. Se recomienda evitar escribir código que permite que los usuarios establezcan la <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> propiedad a menos que debe. Un ejemplo de una aplicación que el valor del <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> propiedad puede ser necesaria es una aplicación administrativa que administra datos de rol para varias aplicaciones. Este tipo de aplicación debe ser una aplicación de usuario único y no es una aplicación Web.  
  
   
  
## Examples  
 El ejemplo siguiente muestra el elemento en el `system.web` sección del archivo Web.config para una aplicación ASP.NET. Especifica la aplicación <xref:System.Web.Security.AuthorizationStoreRoleProvider> instancia y establece el <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> propiedad `MyApplication`.  
  
```  
<roleManager defaultProvider="AuthorizationStoreProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.AuthorizationStoreRoleProvider"  
      connectionStringName="AuthorizationStoreServices"   
      scopeName="MyScope"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Se intentó establecer la propiedad <see cref="P:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName" /> en una cadena más larga de 256 caracteres.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Descripción de la administración de roles de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CacheRefreshInterval">
      <MemberSignature Language="C#" Value="public int CacheRefreshInterval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheRefreshInterval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CacheRefreshInterval As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CacheRefreshInterval { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheRefreshInterval : int" Usage="System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número de minutos entre las actualizaciones de la caché de los datos del almacén de directivas.</summary>
        <value>El número de minutos entre las actualizaciones de los datos del almacén de directivas en memoria caché. El valor predeterminado es 60.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Descripción de la administración de roles de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public override void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.CreateRole : string -&gt; unit" Usage="authorizationStoreRoleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nombre del rol que se va a crear.</param>
        <summary>Agrega una nuevo rol al almacén de directivas del administrador de autorizaciones del rol.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.AuthorizationStoreRoleProvider.CreateRole%2A> llama al método el <xref:System.Web.Security.Roles> clase para crear un rol en el almacén de datos de administrador de autorización especificado en el archivo de configuración de la aplicación ASP.NET (Web.config).  
  
 Los nombres de rol no distinguen mayúsculas de minúsculas.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un nuevo rol en el almacén de directivas del Administrador de autorización. Para obtener un ejemplo de un archivo Web.config que permite la administración de roles, consulte <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="roleName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> es una cadena vacía.  
  
O bien 
 <paramref name="roleName" /> contiene una coma.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">No se ha encontrado el objeto <see langword="applicationName" /> configurado.  
  
O bien 
No se ha encontrado el objeto <see langword="scopeName" /> configurado.  
  
O bien 
El motor en tiempo de ejecución del administrador de autorizaciones no está instalado en el servidor.</exception>
        <exception cref="T:System.IO.FileNotFoundException">El atributo <see langword="connectionStringName" /> hace referencia a una cadena de conexión de un archivo que no existe.</exception>
        <exception cref="T:System.Web.HttpException">La instancia de <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> se configura con un almacén de directivas basado en archivos y no está permitido el acceso de lectura al archivo en el nivel de confianza actual.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Descripción de la administración de roles de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="override this.DeleteRole : string * bool -&gt; bool" Usage="authorizationStoreRoleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">Nombre del rol que se va a eliminar.</param>
        <param name="throwOnPopulatedRole">Si es <see langword="true" />, se produce una excepción si <paramref name="roleName" /> tiene uno o más miembros.</param>
        <summary>Quita un rol del almacén de directivas del administrador de autorizaciones.</summary>
        <returns>Es <see langword="true" /> si se ha eliminado el rol; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole%2A> llama al método el <xref:System.Web.Security.Roles> clase para eliminar un rol desde el almacén de directivas del Administrador de autorización especificado en el archivo de configuración de la aplicación ASP.NET (Web.config). Cuando se elimina un rol, también se elimina la lista de los usuarios asociados a ese rol desde el almacén de directivas. No se ve afectada la información de usuario en la base de datos.  
  
 Si `throwOnPopulatedRole` es `true`, a continuación, se producirá una excepción y el rol no se eliminará si la función identificada por el `roleName` parámetro tiene uno o más miembros. Si `throwOnPopulatedRole` es `false`, a continuación, se eliminará el rol si está vacía o no.  
  
   
  
## Examples  
 El ejemplo siguiente elimina un rol desde el almacén de directivas del Administrador de autorización. Para obtener un ejemplo de un archivo Web.config que permite la administración de roles, consulte <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/deleterolecs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/deleterolevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="roleName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> es una cadena vacía.  
  
O bien 
 <paramref name="roleName" /> contiene una coma.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException"><paramref name="roleName" /> tiene uno o más miembros y <paramref name="throwOnPopulatedRole" /> es <see langword="true" />.  
  
O bien 
No se ha encontrado el objeto <see langword="applicationName" /> configurado.  
  
O bien 
No se ha encontrado el objeto <see langword="scopeName" /> configurado.  
  
O bien 
El motor en tiempo de ejecución del administrador de autorizaciones no está instalado en el servidor.</exception>
        <exception cref="T:System.IO.FileNotFoundException">El atributo <see langword="connectionStringName" /> hace referencia a una cadena de conexión de un archivo que no existe.</exception>
        <exception cref="T:System.Web.HttpException">La instancia de <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> se configura con un almacén de directivas basado en archivos y no está permitido el acceso de lectura al archivo en el nivel de confianza actual.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Descripción de la administración de roles de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="override this.FindUsersInRole : string * string -&gt; string[]" Usage="authorizationStoreRoleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">El rol en el que se va a buscar.</param>
        <param name="usernameToMatch">El nombre de usuario que se va a buscar.</param>
        <summary>Este método no lo admite el proveedor de roles del almacén de autorizaciones.</summary>
        <returns>Una matriz de cadenas que contiene los nombres de todos los usuarios cuyo nombre coincide con <paramref name="usernameToMatch" /> y que son miembros del rol especificado.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Se llamó a un método no admitido.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Descripción de la administración de roles de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public override string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="override this.GetAllRoles : unit -&gt; string[]" Usage="authorizationStoreRoleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene una lista de todas los roles de la aplicación.</summary>
        <returns>Una matriz de cadenas que contiene los nombres de todos los roles almacenados en el almacén de directivas del administrador de autorizaciones para una aplicación determinada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles%2A> llama al método el <xref:System.Web.Security.Roles> clase para recuperar una lista de todos los roles en el almacén de directivas del Administrador de autorización especificados en el archivo de configuración de la aplicación ASP.NET (Web.config).  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Web.Security.Roles.GetAllRoles%2A> método para obtener la lista de roles para una aplicación y enlazar los resultados a un <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> control. Para obtener un ejemplo de un archivo Web.config que permite la administración de roles, consulte <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">No se ha encontrado el objeto <see langword="applicationName" /> configurado.  
  
O bien 
No se ha encontrado el objeto <see langword="scopeName" /> configurado.  
  
O bien 
El motor en tiempo de ejecución del administrador de autorizaciones no está instalado en el servidor.</exception>
        <exception cref="T:System.IO.FileNotFoundException">El atributo <see langword="connectionStringName" /> hace referencia a una cadena de conexión de un archivo que no existe.</exception>
        <exception cref="T:System.Web.HttpException">La instancia de <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> se configura con un almacén de directivas basado en archivos y no está permitido el acceso de lectura al archivo en el nivel de confianza actual.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Descripción de la administración de roles de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public override string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.GetRolesForUser : string -&gt; string[]" Usage="authorizationStoreRoleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Usuario del que se va a devolver una lista de roles.</param>
        <summary>Obtiene una lista de los roles en que está incluido un usuario.</summary>
        <returns>Matriz de cadenas que contiene los nombres de todas los roles en los que está incluido el usuario especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser%2A> llama al método el <xref:System.Web.Security.Roles> clase para recuperar una lista de roles del usuario especificado desde el almacén de directivas del Administrador de autorización especificado en el archivo de configuración de la aplicación ASP.NET (Web.config).  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Web.Security.Roles.GetRolesForUser%2A> método para recuperar una lista de roles para un usuario especificado y se enlaza a un <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> control. Para obtener un ejemplo de un archivo Web.config que permite la administración de roles, consulte <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="username" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> contiene una coma.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">No se ha encontrado el objeto <see langword="applicationName" /> configurado.  
  
O bien 
No se ha encontrado el objeto <see langword="scopeName" /> configurado.  
  
O bien 
El motor en tiempo de ejecución del administrador de autorizaciones no está instalado en el servidor.</exception>
        <exception cref="T:System.IO.FileNotFoundException">El atributo <see langword="connectionStringName" /> hace referencia a una cadena de conexión de un archivo que no existe.</exception>
        <exception cref="T:System.Web.HttpException">La instancia de <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> se configura con un almacén de directivas basado en archivos y no está permitido el acceso de lectura al archivo en el nivel de confianza actual.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Descripción de la administración de roles de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.GetUsersInRole : string -&gt; string[]" Usage="authorizationStoreRoleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nombre del rol para el que se obtendrá la lista de usuarios.</param>
        <summary>Obtiene una lista de usuarios incluidos en el rol especificado.</summary>
        <returns>Matriz de cadenas que contiene los nombres de todos los usuarios que son miembros del rol especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole%2A> llama al método el <xref:System.Web.Security.Roles> clase para recuperar la lista de los usuarios asociados con el rol especificado en el almacén de directivas del Administrador de autorización especificado en el archivo de configuración de la aplicación ASP.NET (Web.config).  
  
 El <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole%2A> método sólo devuelve los nombres de usuario que se encuentran directamente en el rol de administrador de autorización especificado por el `roleName` parámetro. El Administrador de autorizaciones subyacente API llamado por el <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole%2A> método no admite la expansión de grupo, por lo que no se devolverán los usuarios contenidos en grupos NT anidados, grupos anidados del Administrador de autorización y grupos de consulta LDAP.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Web.Security.Roles.GetUsersInRole%2A> método para obtener una lista de los usuarios de un rol determinado y enlazar los resultados a un <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> control. Para obtener un ejemplo de un archivo Web.config que permite la administración de roles, consulte <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="roleName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> es una cadena vacía.  
  
O bien 
 <paramref name="roleName" /> contiene una coma.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">No se ha encontrado el objeto <see langword="applicationName" /> configurado.  
  
O bien 
No se ha encontrado el objeto <see langword="scopeName" /> configurado.  
  
O bien 
El motor en tiempo de ejecución del administrador de autorizaciones no está instalado en el servidor.</exception>
        <exception cref="T:System.IO.FileNotFoundException">El atributo <see langword="connectionStringName" /> hace referencia a una cadena de conexión de un archivo que no existe.</exception>
        <exception cref="T:System.Web.HttpException">La instancia de <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> se configura con un almacén de directivas basado en archivos y no está permitido el acceso de lectura al archivo en el nivel de confianza actual.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Descripción de la administración de roles de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="authorizationStoreRoleProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Nombre de la instancia de <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> que se va a inicializar.</param>
        <param name="config">Objeto <see cref="T:System.Collections.Specialized.NameValueCollection" /> que contiene los nombres y valores de las opciones de configuración para el proveedor de roles.</param>
        <summary>Inicializa el proveedor de roles del administrador de autorizaciones con los valores de propiedades especificados en el archivo de configuración de la aplicación ASP.NET. Este método no está pensado para usarse directamente desde su código.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.AuthorizationStoreRoleProvider.Initialize%2A> método inicializa la <xref:System.Web.Security.AuthorizationStoreRoleProvider> con la propiedad de valores especificado en el archivo de configuración de aplicación (Web.config) de ASP.NET y no está pensado para utilizarse directamente desde el código.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="config" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">El atributo <see langword="connectionStringName" /> está vacío o no existe en la sección de configuración del [elemento connectionStrings (Esquema de configuración de ASP.NET)](https://msdn.microsoft.com/library/b6ffbb2e-a4d1-410e-8f7e-9755e92c65de).  
  
O bien 
El atributo <see langword="applicationName" /> configurado tiene más de 256 caracteres.  
  
O bien 
La configuración para esta instancia de <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> contiene un atributo desconocido.</exception>
        <exception cref="T:System.Web.HttpException">La aplicación ASP.NET no se está ejecutando con el nivel de confianza <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> o superior.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Descripción de la administración de roles de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public override bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.IsUserInRole : string * string -&gt; bool" Usage="authorizationStoreRoleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">El nombre de usuario que se va a buscar.</param>
        <param name="roleName">El rol en el que se va a buscar.</param>
        <summary>Obtiene un valor que indica si el usuario especificado está incluido en el rol especificado.</summary>
        <returns>Es <see langword="true" /> si el nombre de usuario especificado está incluido en el rol específico; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole%2A> llama al método el <xref:System.Web.Security.Roles> clase y el <xref:System.Security.Principal.IPrincipal.IsInRole%2A> método de la <xref:System.Web.UI.Page.User%2A?displayProperty=nameWithType> propiedad para determinar si un usuario está asociado a un rol en el almacén de datos de administrador de autorización especificado en la aplicación de ASP.NET archivo de configuración (Web.config).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se comprueba mediante programación si el usuario ha iniciado la sesión está en la función Administradores antes de permitir al usuario ver los roles de usuario. Para obtener un ejemplo de un archivo Web.config que permite la administración de roles, consulte <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="username" /> es <see langword="null" />.  
  
, o 
 El valor de <paramref name="roleName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> es una cadena vacía.  
  
O bien 
 <paramref name="roleName" /> contiene una coma.  
  
O bien 
 <paramref name="username" /> contiene una coma.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">No se ha encontrado el objeto <see langword="applicationName" /> configurado.  
  
O bien 
No se ha encontrado el objeto <see langword="scopeName" /> configurado.  
  
O bien 
El motor en tiempo de ejecución del administrador de autorizaciones no está instalado en el servidor.</exception>
        <exception cref="T:System.IO.FileNotFoundException">El atributo <see langword="connectionStringName" /> hace referencia a una cadena de conexión de un archivo que no existe.</exception>
        <exception cref="T:System.Web.HttpException">La instancia de <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> se configura con un almacén de directivas basado en archivos y no está permitido el acceso de lectura al archivo en el nivel de confianza actual.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Descripción de la administración de roles de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public override void RemoveUsersFromRoles (string[] userNames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveUsersFromRoles(string[] userNames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveUsersFromRoles (userNames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ userNames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="authorizationStoreRoleProvider.RemoveUsersFromRoles (userNames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userNames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="userNames">Matriz de cadenas de nombres de usuario que se quitará de los roles especificados.</param>
        <param name="roleNames">Matriz de cadenas de nombres de rol de los que se quitan los nombres de usuario especificados.</param>
        <summary>Quita los nombres de usuario especificados de los roles especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles%2A> llama al método el <xref:System.Web.Security.Roles> clase para quitar uno o varios usuarios de uno o varios roles en el almacén de directivas del Administrador de autorización especificados en el archivo de configuración de la aplicación ASP.NET (Web.config). Este método es invocado por el <xref:System.Web.Security.Roles.RemoveUserFromRole%2A>, <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A>, <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A>, y <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> métodos de la <xref:System.Web.Security.Roles> clase.  
  
   
  
## Examples  
 El siguiente ejemplo de código agrega uno o varios usuarios a un rol o quita un usuario de un rol. Para obtener un ejemplo de un archivo Web.config que permite la administración de roles, consulte <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Uno de los nombres de usuario especificados es <see langword="null" />.  
  
O bien 
Uno de los nombres de rol especificados es <see langword="null" />.  
  
O bien 
 El valor de <paramref name="userNames" /> es <see langword="null" />.  
  
O bien 
 El valor de <paramref name="roleNames" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Uno de los nombres de usuario especificados es una cadena vacía o contiene una coma.  
  
O bien 
Uno de los nombres de rol especificados es una cadena vacía o contiene una coma.  
  
O bien 
 <paramref name="userNames" /> contiene un elemento duplicado.  
  
O bien 
 <paramref name="roleNames" /> contiene un elemento duplicado.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">No se ha encontrado el objeto <see langword="applicationName" /> configurado.  
  
O bien 
No se ha encontrado el objeto <see langword="scopeName" /> configurado.  
  
O bien 
El motor en tiempo de ejecución del administrador de autorizaciones no está instalado en el servidor.</exception>
        <exception cref="T:System.IO.FileNotFoundException">El atributo <see langword="connectionStringName" /> hace referencia a una cadena de conexión de un archivo que no existe.</exception>
        <exception cref="T:System.Web.HttpException">La instancia de <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> se configura con un almacén de directivas basado en archivos y no está permitido el acceso de lectura al archivo en el nivel de confianza actual.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Descripción de la administración de roles de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public override bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.RoleExists : string -&gt; bool" Usage="authorizationStoreRoleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">El nombre del rol que se va a buscar en el almacén de directivas del administrador de autorizaciones.</param>
        <summary>Obtiene un valor que indica si el nombre del rol especificado ya existe en el almacén de directivas del administrador de autorizaciones.</summary>
        <returns>Es <see langword="true" /> si el nombre del rol ya existe en el almacén de directivas del administrador de autorizaciones; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.AuthorizationStoreRoleProvider.RoleExists%2A> llama al método el <xref:System.Web.Security.Roles> clase para determinar si existe un nombre de rol en el almacén de datos de administrador de autorización especificado en el archivo de configuración de la aplicación ASP.NET (Web.config).  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Web.Security.Roles.RoleExists%2A> método para determinar si un nombre de rol ya existe antes de crear el rol. Para obtener un ejemplo de un archivo Web.config que permite la administración de roles, consulte <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="roleName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> es una cadena vacía.  
  
O bien 
 <paramref name="roleName" /> contiene una coma.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">No se ha encontrado el objeto <see langword="applicationName" /> configurado.  
  
O bien 
No se ha encontrado el objeto <see langword="scopeName" /> configurado.  
  
O bien 
El motor en tiempo de ejecución del administrador de autorizaciones no está instalado en el servidor.</exception>
        <exception cref="T:System.IO.FileNotFoundException">El atributo <see langword="connectionStringName" /> hace referencia a una cadena de conexión de un archivo que no existe.</exception>
        <exception cref="T:System.Web.HttpException">La instancia de <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> se configura con un almacén de directivas basado en archivos y no está permitido el acceso de lectura al archivo en el nivel de confianza actual.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Descripción de la administración de roles de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ScopeName">
      <MemberSignature Language="C#" Value="public string ScopeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScopeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName" />
      <MemberSignature Language="VB.NET" Value="Public Property ScopeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScopeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScopeName : string with get, set" Usage="System.Web.Security.AuthorizationStoreRoleProvider.ScopeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre de ámbito para el almacén de autorizaciones.</summary>
        <value>Nombre de ámbito para el almacén de autorizaciones.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> propiedad puede establecerse utilizando la `scopeName` atributo de configuración para la instancia del proveedor en la `providers` sección de la sección de configuración.  
  
> [!CAUTION]
>  Dado que se usa una instancia del proveedor de funciones predeterminado único para todas las solicitudes atendidas por un <xref:System.Web.HttpApplication> objeto, puede tener varias solicitudes de ejecución al mismo tiempo y se intentó establecer el <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> valor de propiedad. El <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> propiedad no es segura para subprocesos de varias escrituras y variación la <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> valor de propiedad puede provocar un comportamiento inesperado cuando hay varios usuarios de una aplicación. Se recomienda evitar escribir código que permite que los usuarios establezcan la <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> propiedad a menos que debe. Un ejemplo de una aplicación que el valor del <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> propiedad puede ser necesaria es una aplicación administrativa que administra datos de rol para varias aplicaciones. Este tipo de aplicación debe ser una aplicación de usuario único y no es una aplicación Web.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Descripción de la administración de roles de ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>