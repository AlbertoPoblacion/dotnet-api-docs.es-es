<Type Name="RoleProvider" FullName="System.Web.Security.RoleProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fc9f236e049e9dcbef28d5a9631c0c24106f1c1e" />
    <Meta Name="ms.sourcegitcommit" Value="6f3d3181d9ca22a1ab46a7f61f3ee152f2b844ea" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="10/27/2018" />
    <Meta Name="ms.locfileid" Value="50171300" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class RoleProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RoleProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.RoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RoleProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoleProvider abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type RoleProvider = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web.ApplicationServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web, Version=2.0.0.0, Culture=Neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Define el contrato que implementa ASP.NET para proporcionar servicios de administración de roles mediante proveedores de roles personalizados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Administración de roles ASP.NET está diseñada para que pueda usar fácilmente un número de proveedores de funciones diferentes para las aplicaciones de ASP.NET. Puede usar los proveedores de funciones proporcionados se incluyen con .NET Framework o puede implementar su propio proveedor.  
  
 Al implementar un proveedor de roles personalizados, debe heredar la <xref:System.Web.Security.RoleProvider> clase abstracta.  
  
 Hay dos razones principales para crear un proveedor de funciones personalizado.  
  
-   Necesario almacenar información de roles en un origen de datos que no es compatible con los proveedores de roles incluidos con .NET Framework, como una base de datos de FoxPro, una base de datos de Oracle u otros orígenes de datos.  
  
-   Debe administrar la información de rol mediante un esquema de base de datos que es diferente en el esquema de base de datos usado por los proveedores que se suministran con .NET Framework. Un ejemplo común de esto sería datos de rol que ya existe en una base de datos de SQL Server para una empresa o un sitio Web.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementar un proveedor de roles</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Security.RoleProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No es necesario implementar un constructor para una clase que hereda la <xref:System.Web.Security.RoleProvider> clase abstracta. Los valores de inicialización para un <xref:System.Web.Security.RoleProvider> implementación se pasan a la <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> implementación del método.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementar un proveedor de roles</related>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public abstract void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="abstract member AddUsersToRoles : string[] * string[] -&gt; unit" Usage="roleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Matriz de cadenas de nombres de usuario que se van a agregar a los roles especificados.</param>
        <param name="roleNames">Matriz de cadenas de los nombres de roles a los que se agregan los nombres de usuario especificados.</param>
        <summary>Agrega los nombres de usuario especificados a los roles especificados para el <see langword="applicationName" /> configurado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A> llama a la <xref:System.Web.Security.Roles> clase para asociar los usuarios especificados a las funciones especificadas en el origen de datos. Las funciones se agregan a la configurada <xref:System.Web.Security.RoleProvider.ApplicationName%2A>.  
  
 Si alguno de los nombres de rol especificado son no se encontró el configurado `applicationName`, se recomienda que el proveedor produzca una <xref:System.Configuration.Provider.ProviderException>.  
  
 Si cualquiera de los nombres de usuario especificado no se asocian con cualquiera de los nombres de rol especificado para el `applicationName`, se recomienda que el proveedor produzca una <xref:System.Configuration.Provider.ProviderException>.  
  
 Si cualquiera de los nombres de usuario especificado es `null` o es una cadena vacía, se recomienda que el proveedor produzca una excepción.  
  
 Si alguno de los nombres de rol especificados es `null` o es una cadena vacía, se recomienda que el proveedor produzca una excepción.  
  
 Si el origen de datos admite transacciones, se recomienda incluir cada operación de agregación en una transacción y que revierta la transacción y producir una excepción si alguna operación produce un error.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de ejemplo de la <xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A> método.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#2)]
 [!code-vb[System.Web.Security.IRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementar un proveedor de roles</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.RoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre de la aplicación para la que se va a almacenar y recuperar información de roles.</summary>
        <value>Nombre de la aplicación para la que se va a almacenar y recuperar información de roles.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.RoleProvider.ApplicationName%2A> está usando el <xref:System.Web.Security.Roles> clase para asociar usuarios y roles diferentes aplicaciones. Esto permite que varias aplicaciones usar la misma base de datos para almacenar información de usuario y rol sin entrar en conflicto entre nombres de usuario duplicados o nombres de función. Varias aplicaciones de ASP.NET pueden utilizar la misma base de datos especificando el mismo valor en el <xref:System.Web.Security.Roles.ApplicationName%2A> propiedad. El <xref:System.Web.Security.Roles.ApplicationName%2A> propiedad puede establecerse mediante programación, o puede establecerse mediante declaración en el archivo de configuración para la aplicación Web con el `applicationName` atributo.  
  
 Si no hay ningún <xref:System.Web.Security.RoleProvider.ApplicationName%2A> propiedad se especifica, se recomienda que el <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> se usa el valor de propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de ejemplo de la <xref:System.Web.Security.RoleProvider.ApplicationName%2A> propiedad.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#1)]
 [!code-vb[System.Web.Security.IRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementar un proveedor de roles</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public abstract void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member CreateRole : string -&gt; unit" Usage="roleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nombre del rol que se va a crear.</param>
        <summary>Agrega un rol nuevo al origen de datos de la aplicación <see langword="applicationName" /> configurada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.CreateRole%2A> llama a la <xref:System.Web.Security.Roles.CreateRole%2A> método de la <xref:System.Web.Security.Roles> clase para agregar el rol especificado para el origen de datos configurado <xref:System.Web.Security.RoleProvider.ApplicationName%2A>.  
  
 Si el nombre del rol especificado ya existe para el `applicationName`, es `null`, o es una cadena vacía, se recomienda que el proveedor produzca una excepción.  
  
 Si el nombre del rol especificado contiene una coma, se recomienda el proveedor produzca una excepción.  
  
 Si el origen de datos restringe la longitud del nombre de rol, por ejemplo, a través de una columna de longitud fija de una tabla en una base de datos, se recomienda producir una excepción si el nombre del rol supera la longitud máxima permitida por el origen de datos.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de ejemplo de la <xref:System.Web.Security.RoleProvider.CreateRole%2A> método.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#3)]
 [!code-vb[System.Web.Security.IRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementar un proveedor de roles</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public abstract bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="abstract member DeleteRole : string * bool -&gt; bool" Usage="roleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">Nombre del rol que se va a eliminar.</param>
        <param name="throwOnPopulatedRole">Si <see langword="true" />, se inicia una excepción cuando <c>roleName</c> tiene uno o más miembros y <c>roleName</c> no se elimina.</param>
        <summary>Quita un rol del origen de datos para el valor de <see langword="applicationName" /> configurado.</summary>
        <returns>
          <see langword="true" /> si el rol se eliminó correctamente; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.DeleteRole%2A> llama a la <xref:System.Web.Security.Roles.DeleteRole%2A> y <xref:System.Web.Security.Roles.DeleteRole%2A> métodos de la <xref:System.Web.Security.Roles> clase para eliminar el rol especificado del origen de datos para el <xref:System.Web.Security.RoleProvider.ApplicationName%2A>.  
  
 Cuando se elimina un rol del origen de datos, asegúrese de que también elimina todas las asociaciones entre un nombre de usuario y la función eliminada para configurado `applicationName`.  
  
 Si `throwOnPopulatedRole` es `true`y la función identificada por el `roleName` parámetro tiene uno o más miembros, se produce un <xref:System.Configuration.Provider.ProviderException> y no elimine el rol. Si `throwOnPopulatedRole` es `false`, a continuación, elimine la función de si está vacía o no.  
  
 Si el nombre del rol especificado no existe, es `null`, o es una cadena vacía, se recomienda que el proveedor produzca una excepción.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de ejemplo de la <xref:System.Web.Security.RoleProvider.DeleteRole%2A> método.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#4)]
 [!code-vb[System.Web.Security.IRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementar un proveedor de roles</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public abstract string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="abstract member FindUsersInRole : string * string -&gt; string[]" Usage="roleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">El rol en el que se va a buscar.</param>
        <param name="usernameToMatch">El nombre de usuario que se va a buscar.</param>
        <summary>Obtiene una matriz de los nombres de usuario de un rol que contengan un nombre de usuario determinado que debe coincidir.</summary>
        <returns>Matriz de cadenas que contiene los nombres de todos los usuarios cuyos nombres coinciden con <paramref name="usernameToMatch" /> y son miembros del rol especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.RoleProvider.FindUsersInRole%2A> llama al método el <xref:System.Web.Security.Roles> clase y devuelve una lista de usuarios de una función donde el nombre de usuario contiene una coincidencia de proporcionado `usernameToMatch` el configurado `applicationName`. Uso de caracteres comodín se incluye en función del origen de datos. Los usuarios se devuelven en orden alfabético por nombre de usuario.  
  
 Se recomienda que produzca un <xref:System.Configuration.Provider.ProviderException> si `roleName` no existe en el origen de datos.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra un ejemplo <xref:System.Web.Security.RoleProvider.FindUsersInRole%2A> implementación.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#11)]
 [!code-vb[System.Web.Security.IRoleProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#11)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementar un proveedor de roles</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public abstract string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="abstract member GetAllRoles : unit -&gt; string[]" Usage="roleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene una lista de todos los roles para el valor de <see langword="applicationName" /> configurado.</summary>
        <returns>Matriz de cadenas que contiene los nombres de todos los roles almacenados en el origen de datos del valor de <see langword="applicationName" /> configurado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetAllRoles%2A> llama a la <xref:System.Web.Security.Roles.GetAllRoles%2A> método de la <xref:System.Web.Security.Roles> clase para recuperar una lista de nombres de función del origen de datos. Solo los roles para el elemento especificado <xref:System.Web.Security.RoleProvider.ApplicationName%2A> se recuperan.  
  
 Si no existe ninguna función para el `applicationName`, se recomienda que el proveedor devuelva una matriz de cadenas sin elementos.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de ejemplo de la <xref:System.Web.Security.RoleProvider.GetAllRoles%2A> método.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#5)]
 [!code-vb[System.Web.Security.IRoleProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementar un proveedor de roles</related>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public abstract string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="abstract member GetRolesForUser : string -&gt; string[]" Usage="roleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Usuario del que se va a devolver una lista de roles.</param>
        <summary>Obtiene una lista de los roles en los que está incluido el usuario especificado para el <see langword="applicationName" /> configurado.</summary>
        <returns>Matriz de cadenas que contiene los nombres de todos los roles en los que está incluido el usuario especificado para el <see langword="applicationName" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> llama a la <xref:System.Web.Security.Roles.GetRolesForUser%2A> método de la <xref:System.Web.Security.Roles> clase para recuperar los nombres de rol que está asociado con el usuario especificado del origen de datos. Sólo las funciones de la configurada <xref:System.Web.Security.RoleProvider.ApplicationName%2A> se recuperan.  
  
 Si no existe ninguna función para el usuario especificado para el `applicationName`, se recomienda que el proveedor devuelva una matriz de cadenas sin elementos.  
  
 Si el nombre de usuario especificado es `null` o es una cadena vacía, se recomienda que el proveedor produzca una excepción.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de ejemplo de la <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> método.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#6)]
 [!code-vb[System.Web.Security.IRoleProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementar un proveedor de roles</related>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public abstract string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member GetUsersInRole : string -&gt; string[]" Usage="roleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nombre del rol para el que se obtendrá la lista de usuarios.</param>
        <summary>Obtiene una lista de usuarios incluidos en el rol especificado para el elemento <see langword="applicationName" /> configurado.</summary>
        <returns>Matriz de cadenas que contiene los nombres de todos los usuarios que son miembros del rol especificado para el elemento <see langword="applicationName" /> configurado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetUsersInRole%2A> llama a la <xref:System.Web.Security.Roles.GetUsersInRole%2A> método de la <xref:System.Web.Security.Roles> clase para recuperar los nombres de usuario asociados a una función del origen de datos. Sólo las funciones de la configurada <xref:System.Web.Security.RoleProvider.ApplicationName%2A> se recuperan.  
  
 Si el nombre del rol especificado no existe para el `applicationName` o si es `null` o una cadena vacía, se recomienda que el proveedor produzca una excepción.  
  
 Si no hay usuarios están asociados con la función especificada para el `applicationName`, se recomienda que el proveedor devuelva una matriz de cadenas sin elementos.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de ejemplo de la <xref:System.Web.Security.RoleProvider.GetUsersInRole%2A> método.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#7)]
 [!code-vb[System.Web.Security.IRoleProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementar un proveedor de roles</related>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public abstract bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member IsUserInRole : string * string -&gt; bool" Usage="roleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">El nombre de usuario que se va a buscar.</param>
        <param name="roleName">El rol en el que se va a buscar.</param>
        <summary>Obtiene un valor que indica si el usuario especificado está incluido en el rol especificado del elemento <see langword="applicationName" /> configurado.</summary>
        <returns>
          <see langword="true" /> si el usuario especificado está incluido en el rol especificado del elemento <see langword="applicationName" /> configurado; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> llama al método el <xref:System.Web.Security.Roles.IsUserInRole%2A> método de la <xref:System.Web.Security.Roles> clase para determinar si el usuario ha iniciado la sesión actual está asociado a un rol del origen de datos para el <xref:System.Web.Security.Roles.ApplicationName%2A>.  
  
 Si el nombre de usuario especificado es `null` o es una cadena vacía, se recomienda que el proveedor produzca una excepción.  
  
 Si el nombre de rol especificado es `null` o es una cadena vacía, se recomienda que el proveedor produzca una excepción.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de ejemplo de la <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> método.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#8)]
 [!code-vb[System.Web.Security.IRoleProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementar un proveedor de roles</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public abstract void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="abstract member RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="roleProvider.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Matriz de cadenas de nombres de usuario que se quitará de los roles especificados.</param>
        <param name="roleNames">Matriz de cadenas de nombres de rol de los que se quitan los nombres de usuario especificados.</param>
        <summary>Quita los nombres de usuario especificados de los roles especificados para el <see langword="applicationName" /> configurado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A> llama a <xref:System.Web.Security.Roles.RemoveUserFromRole%2A> , <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A> , <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A> , y <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> métodos de la <xref:System.Web.Security.Roles> clase para quitar los usuarios especificados de las funciones especificadas en el origen de datos. Solo los roles para el <xref:System.Web.Security.RoleProvider.ApplicationName%2A> se modifican.  
  
 Si alguno de los nombres de rol especificado son no se encontró el configurado `applicationName`, se recomienda que el proveedor produzca una <xref:System.Configuration.Provider.ProviderException>.  
  
 Si cualquiera de los nombres de usuario especificado no se asocian con cualquiera de los nombres de rol especificado para el `applicationName`, se recomienda que el proveedor produzca una <xref:System.Configuration.Provider.ProviderException>.  
  
 Si cualquiera de los nombres de usuario especificado es `null` o es una cadena vacía, se recomienda que el proveedor produzca una excepción.  
  
 Si alguno de los nombres de rol especificados es `null` o es una cadena vacía, se recomienda que el proveedor produzca una excepción.  
  
 Si el origen de datos admite transacciones, se recomienda incluir cada operación de eliminación en una transacción y que revierta la transacción y producir una excepción si se produce un error en cualquier operación de eliminación.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de ejemplo de la <xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A> método.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#9)]
 [!code-vb[System.Web.Security.IRoleProvider#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#9)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementar un proveedor de roles</related>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public abstract bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member RoleExists : string -&gt; bool" Usage="roleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">El nombre del rol que se va a buscar en el origen de datos.</param>
        <summary>Obtiene un valor que indica si el nombre de rol especificado ya existe en el origen de datos del rol para el valor de <see langword="applicationName" /> configurado.</summary>
        <returns>
          <see langword="true" /> si el nombre del rol ya existe en el origen de datos para el valor de <see langword="applicationName" /> configurado; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.RoleExists%2A> llama a la <xref:System.Web.Security.Roles.RoleExists%2A> método de la <xref:System.Web.Security.Roles> clase para determinar si existe un nombre de rol en el origen de datos configurado <xref:System.Web.Security.Roles.ApplicationName%2A>.  
  
 Si el nombre de rol especificado es `null` o es una cadena vacía, se recomienda que el proveedor produzca una excepción.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de ejemplo de la <xref:System.Web.Security.RoleProvider.RoleExists%2A> método.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#10)]
 [!code-vb[System.Web.Security.IRoleProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementar un proveedor de roles</related>
      </Docs>
    </Member>
  </Members>
</Type>