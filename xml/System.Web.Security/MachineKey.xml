<Type Name="MachineKey" FullName="System.Web.Security.MachineKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fd29ebecb8b86a39cdeff7d84129301c17522321" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52242164" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class MachineKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MachineKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.MachineKey" />
  <TypeSignature Language="VB.NET" Value="Public Class MachineKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class MachineKey abstract sealed" />
  <TypeSignature Language="F#" Value="type MachineKey = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona una manera de cifrar o aplicar un algoritmo hash (o ambos) a los datos utilizando los mismos algoritmos y valores de clave que se utilizan para las cookies de autenticación de formularios de ASP.NET y para el estado de vista.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.Security.MachineKey> clase proporciona métodos que exponen la lógica de cifrado y hash que proporciona ASP.NET. Para obtener información acerca de qué cifrado y algoritmos hash utiliza ASP.NET y los valores de clave que usa con ellos, consulte [machineKey Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46).  
  
> [!WARNING]
>  El <xref:System.Web.Security.MachineKey> API solo deben usarse en una aplicación ASP.NET. Comportamiento de las APIs de MachineKey fuera del contexto de una aplicación ASP.NET no está definido  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.ArgumentNullException">Los datos para cifrar, aplicar un algoritmo hash, descifrar o validar no existen</exception>
  </Docs>
  <Members>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public static byte[] Decode (string encodedData, System.Web.Security.MachineKeyProtection protectionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Decode(string encodedData, valuetype System.Web.Security.MachineKeyProtection protectionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Decode(System.String,System.Web.Security.MachineKeyProtection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decode (encodedData As String, protectionOption As MachineKeyProtection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Decode(System::String ^ encodedData, System::Web::Security::MachineKeyProtection protectionOption);" />
      <MemberSignature Language="F#" Value="static member Decode : string * System.Web.Security.MachineKeyProtection -&gt; byte[]" Usage="System.Web.Security.MachineKey.Decode (encodedData, protectionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete and is only provided for compatibility with existing code. It is recommended that new code use the Protect and Unprotect methods instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedData" Type="System.String" />
        <Parameter Name="protectionOption" Type="System.Web.Security.MachineKeyProtection" />
      </Parameters>
      <Docs>
        <param name="encodedData">Los datos cifrados para descifrar o validar.</param>
        <param name="protectionOption">Indica si el parámetro <paramref name="encodedData" /> se debería cifrar o someterse a un algoritmo hash.</param>
        <summary>Descodifica y/o valida datos que se han cifrado o se han proporcionado con un código de autenticación de mensaje basado en hash (HMAC).</summary>
        <returns>Una matriz <see cref="T:System.Byte" /> que representa los datos descifrados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener información acerca de qué cifrado y algoritmos hash que ASP.NET utiliza para descifrar y validar los datos que se pasan, consulte [machineKey Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46).  
  
   
  
## Examples  
 Para obtener un ejemplo de código, vea el <xref:System.Web.Security.MachineKey> información general de clases.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static string Encode (byte[] data, System.Web.Security.MachineKeyProtection protectionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Encode(unsigned int8[] data, valuetype System.Web.Security.MachineKeyProtection protectionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Encode(System.Byte[],System.Web.Security.MachineKeyProtection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (data As Byte(), protectionOption As MachineKeyProtection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Encode(cli::array &lt;System::Byte&gt; ^ data, System::Web::Security::MachineKeyProtection protectionOption);" />
      <MemberSignature Language="F#" Value="static member Encode : byte[] * System.Web.Security.MachineKeyProtection -&gt; string" Usage="System.Web.Security.MachineKey.Encode (data, protectionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete and is only provided for compatibility with existing code. It is recommended that new code use the Protect and Unprotect methods instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="protectionOption" Type="System.Web.Security.MachineKeyProtection" />
      </Parameters>
      <Docs>
        <param name="data">Datos que se van a cifrar.</param>
        <param name="protectionOption">Indica si el parámetro <paramref name="data" /> se debería cifrar o someterse a un algoritmo hash.</param>
        <summary>Cifra los datos y/o anexa un código de autenticación de mensaje basado en hash (HMAC).</summary>
        <returns>El valor cifrado, el valor de entrada con HMAC anexado o el resultado de cifrar el valor de entrada con HMAC anexado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener información acerca de qué cifrado y algoritmos hash que ASP.NET utiliza para descifrar y validar los datos que se pasan, consulte [machineKey Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46).  
  
   
  
## Examples  
 Para obtener un ejemplo de código, vea el <xref:System.Web.Security.MachineKey> información general de clases.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public static byte[] Protect (byte[] userData, params string[] purposes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Protect(unsigned int8[] userData, string[] purposes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Protect (userData As Byte(), ParamArray purposes As String()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Protect(cli::array &lt;System::Byte&gt; ^ userData, ... cli::array &lt;System::String ^&gt; ^ purposes);" />
      <MemberSignature Language="F#" Value="static member Protect : byte[] * string[] -&gt; byte[]" Usage="System.Web.Security.MachineKey.Protect (userData, purposes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" />
        <Parameter Name="purposes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="userData">Datos que se van a proteger. Estos datos se pasan como texto simple.</param>
        <param name="purposes">Una lista de finalidades para los datos. Si se especifica este valor, se debe pasar la misma lista al método <see cref="M:System.Web.Security.MachineKey.Unprotect(System.Byte[],System.String[])" /> para descifrar el texto cifrado devuelto.</param>
        <summary>Cifra o firma los datos especificados para protegerlos.</summary>
        <returns>Los datos de texto cifrado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método reemplaza el <xref:System.Web.Security.MachineKey.Encode%2A> método, que requiere que el llamador especificar si se deben cifrar los datos de texto simple, firmado, o ambos. El <xref:System.Web.Security.MachineKey.Protect%2A> método realiza la operación correspondiente y protege los datos de forma segura. Datos de texto cifrado producidos por este método solo se pueden descifrar un el <xref:System.Web.Security.MachineKey.Unprotect%2A> método.  
  
 El `purposes` parámetro es una lista opcional de razones por las que puede bloquear el texto cifrado para un propósito específico. Este parámetro permite aislar las operaciones criptográficas realizadas por los diferentes subsistemas dentro de una aplicación. Un cliente malintencionado no podrá obtener el resultado de un subsistema <xref:System.Web.Security.MachineKey.Protect%2A> método y la fuente como entrada para otro subsistema <xref:System.Web.Security.MachineKey.Unprotect%2A> método, que podría poner en peligro la seguridad de la aplicación. El `purposes` parámetro ayuda a garantizar que los datos protegidos solo pueden usarse por el componente que lo generó originalmente. Las aplicaciones deben asegurarse de que cada subsistema usa un único `purposes` lista.  
  
 Por ejemplo, para proteger o desproteger un token de autenticación, podría llamar al método mediante código similar al ejemplo siguiente:  
  
```csharp  
MachineKey.Protect(..., "Authentication token");  
MachineKey.Unprotect(..., "Authentication token");  
```  
  
```vb  
MachineKey.Protect(..., "Authentication token")  
MachineKey.Unprotect(..., "Authentication token")  
```  
  
 Las aplicaciones pueden generar dinámicamente el `purposes` parámetro. En ese caso, utilizar prefijos en valores proporcionados por el usuario con un valor fijo (como "`Username:` " + *username*) para minimizar el riesgo de un cliente malintencionado creación de entrada que coincide con un token que se usa por otra parte del sistema. Las cadenas que se genera dinámicamente deben ir después de cadenas fijas. Por ejemplo, para proteger o desproteger un mensaje privado que está asociado a un usuario específico, use código similar al ejemplo siguiente:  
  
```csharp  
MachineKey.Protect(..., "Private message", "Recipient: " + username);  
MachineKey.Unprotect(..., "Private message", "Recipient: " + username);  
```  
  
```vb  
MachineKey.Protect(..., "Private message", "Recipient: " + username)  
MachineKey.Unprotect(..., "Private message", "Recipient: " + username)  
```  
  
 Cuando el <xref:System.Web.Security.MachineKey.Unprotect%2A> llama el método, el valor proporcionado para el `purposes` parámetro debe ser el mismo valor que se ha proporcionado para el <xref:System.Web.Security.MachineKey.Protect%2A> método. En caso contrario, se producirá un error la operación con un <xref:System.Security.Cryptography.CryptographicException> excepción.  
  
 Los valores de configuración que son necesarios para la <xref:System.Web.Configuration.MachineKeyCompatibilityMode.Framework45?displayProperty=nameWithType> opción son necesarios para este aunque método la <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A?displayProperty=nameWithType> propiedad no está establecida en el <xref:System.Web.Configuration.MachineKeyCompatibilityMode.Framework45> opción.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="userData" /> es null.</exception>
        <exception cref="T:System.ArgumentException">La matriz de fines contiene una o más entradas que solo son espacios en blanco.</exception>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public static byte[] Unprotect (byte[] protectedData, params string[] purposes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Unprotect(unsigned int8[] protectedData, string[] purposes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Unprotect(System.Byte[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Unprotect (protectedData As Byte(), ParamArray purposes As String()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Unprotect(cli::array &lt;System::Byte&gt; ^ protectedData, ... cli::array &lt;System::String ^&gt; ^ purposes);" />
      <MemberSignature Language="F#" Value="static member Unprotect : byte[] * string[] -&gt; byte[]" Usage="System.Web.Security.MachineKey.Unprotect (protectedData, purposes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protectedData" Type="System.Byte[]" />
        <Parameter Name="purposes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="protectedData">Los datos de texto cifrado que se van a desproteger.</param>
        <param name="purposes">Una lista de finalidades que describen para qué se necesitan los datos. Debe ser el mismo valor que se pasó al método <see cref="M:System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])" /> cuando los datos se protegieron.</param>
        <summary>Desprotege los datos especificados, que se protegieron mediante el método <see cref="M:System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])" />.</summary>
        <returns>Los datos de texto simple.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener información acerca de este método, consulte el <xref:System.Web.Security.MachineKey.Protect%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="protectedData" /> es null.</exception>
        <exception cref="T:System.ArgumentException">La matriz de fines contiene una o más entradas que solo son espacios en blanco.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Las causas posibles son las siguientes: 
-   Los datos protegidos se manipularon.  
  
-   El valor del parámetro <paramref name="purposes" /> no es igual que el valor que se especificó cuando los datos se protegieron.  
  
-   La aplicación se implementó en más de un servidor y usa claves de cifrado generadas automáticamente.</exception>
      </Docs>
    </Member>
  </Members>
</Type>