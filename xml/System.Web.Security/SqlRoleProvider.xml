<Type Name="SqlRoleProvider" FullName="System.Web.Security.SqlRoleProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3821267f02c4232ad9472ffac2f25dee0e18de19" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39946158" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlRoleProvider : System.Web.Security.RoleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlRoleProvider extends System.Web.Security.RoleProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.SqlRoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlRoleProvider&#xA;Inherits RoleProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlRoleProvider : System::Web::Security::RoleProvider" />
  <TypeSignature Language="F#" Value="type SqlRoleProvider = class&#xA;    inherit RoleProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.RoleProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Administra el almacenamiento de la información de pertenencia a roles para una aplicación ASP.NET en una base de datos de SQL Server.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta clase es utilizada por el <xref:System.Web.Security.Roles> y <xref:System.Web.Security.RolePrincipal> clases para proporcionar servicios de administración de roles para una aplicación ASP.NET con una base de datos de SQL Server. Puede usar Administración de roles para especificar distintos niveles de autorización para la aplicación.  
  
 Para usar el <xref:System.Web.Security.SqlRoleProvider> (clase), primero debe crear la base de datos de SQL Server utilizado por el <xref:System.Web.Security.SqlRoleProvider>. Para crear la base de datos utilizado por el <xref:System.Web.Security.SqlRoleProvider> (clase), ejecute el `aspnet_regsql.exe` ejecutable se encuentra en la C:\WINDOWS\Microsoft.NET\Framework\ `versionNumber` carpeta y especifique la `-Ar` opción (por ejemplo, `aspnet_regsql.exe -Ar`). La base de datos creado se denomina Aspnetdb. Como alternativa, ejecute aspnet_regsql.exe para extraer el modo de configuración de la interfaz gráfica de usuario y elija Configurar todas las características ASP.NET.  
  
 Si el proveedor de roles se configura con una cadena de conexión que utiliza seguridad integrada, la cuenta de proceso de la aplicación ASP.NET debe tener derechos para conectarse a la base de datos de SQL Server.  
  
 El archivo Machine.config se configura con un <xref:System.Web.Security.SqlRoleProvider> instancia denominada AspNetSqlProvider que se conecta a SQL Server en el equipo local. Puede usar esta instancia del proveedor o especificar su propia en el archivo Web.config para la aplicación de ASP.NET. Para usar la instancia de AspNetSqlProvider, especifique AspNetSqlProvider como el `defaultProvider` en la configuración.  
  
 Puede configurar el <xref:System.Web.Security.SqlRoleProvider> para usar la misma información de usuario y la base de datos que el <xref:System.Web.Security.SqlMembershipProvider> para poder usar una sola base de datos para obtener información de autenticación y autorización. Para usar la misma base de datos para la suscripción y la información de la función, ejecute el archivo aspnet_regsql.exe e instale la característica de pertenencia. A continuación, especifique la misma cadena de conexión en la configuración tanto para su <xref:System.Web.Security.SqlRoleProvider> y <xref:System.Web.Security.SqlMembershipProvider> instancias. También garantiza que ambas instancias del proveedor estén configurados con el mismo <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A>.  
  
   
  
## Examples  
 El ejemplo siguiente muestra el archivo Web.config para una aplicación ASP.NET configurada para usar un <xref:System.Web.Security.SqlRoleProvider> objeto y el <xref:System.Web.Security.SqlMembershipProvider>. El elemento se configura para solo permitir el acceso a los usuarios autenticados en la función Administrators.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="logincs.aspx"  
      name=".ASPXFORMSAUTH" />  
    </authentication>  
    <authorization>  
      <deny users="?" />  
         <allow roles="Administrators" />  
         <deny users="*" />  
    </authorization>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="15">  
      <providers>  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="false"  
          requiresQuestionAndAnswer="false"   
          passwordFormat="Hashed"   
          applicationName="SampleApplication" />  
      </providers>  
    </membership>  
    <roleManager defaultProvider="SqlProvider"   
      enabled="true"  
      cacheRolesInCookie="true"  
      cookieName=".ASPROLES"  
      cookieTimeout="30"  
      cookiePath="/"  
      cookieRequireSSL="true"  
      cookieSlidingExpiration="true"  
      cookieProtection="All" >  
      <providers>  
        <add  
          name="SqlProvider"  
          type="System.Web.Security.SqlRoleProvider"  
          connectionStringName="SqlServices"   
          applicationName="SampleApplication" />  
      </providers>  
    </roleManager>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlRoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlRoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Crea una instancia de la clase <see cref="T:System.Web.Security.SqlRoleProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.SqlRoleProvider.%23ctor%2A> constructor se lo llama ASP.NET para crear una instancia de la <xref:System.Web.Security.SqlRoleProvider> clase tal como se especifica en la configuración de la aplicación. Este constructor no está pensado para usarse desde el código.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public override void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.AddUsersToRoles : string[] * string[] -&gt; unit" Usage="sqlRoleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Matriz de cadenas de nombres de usuario que se van a agregar a los roles especificados.</param>
        <param name="roleNames">Una matriz de cadenas de nombres de roles a los que se agregan los nombres de usuario especificados.</param>
        <summary>Agrega los nombres de usuario especificados a cada una de los roles especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.SqlRoleProvider.AddUsersToRoles%2A> llama al método el <xref:System.Web.Security.Roles> clase para asociar uno o varios usuarios con uno o varios roles en la base de datos de SQL Server especificada en el archivo de configuración de la aplicación ASP.NET (Web.config). Este método es invocado por el <xref:System.Web.Security.Roles.AddUserToRole%2A>, <xref:System.Web.Security.Roles.AddUserToRoles%2A>, <xref:System.Web.Security.Roles.AddUsersToRole%2A>, y <xref:System.Web.Security.Roles.AddUsersToRoles%2A> métodos de la <xref:System.Web.Security.Roles> clase.  
  
 Las actualizaciones de base de datos que se realizan durante la llamada a la <xref:System.Web.Security.SqlRoleProvider.AddUsersToRoles%2A> método se realizan dentro de una transacción. Si se produce un error, como un nombre de usuario que ya está en una función especificada, la transacción se revierte y no se realizan actualizaciones.  
  
 Si el <xref:System.Web.Security.SqlRoleProvider> se usa con el <xref:System.Web.Security.SqlMembershipProvider>y uno de los nombres de usuario especificado no existe en la base de datos, el nombre de usuario se agregará automáticamente a la base de datos.  
  
 Los nombres de usuario y los nombres de rol no pueden contener comas.  
  
   
  
## Examples  
 El siguiente ejemplo de código agrega uno o varios usuarios a un rol o quita un usuario de un rol. Para obtener un ejemplo de un archivo Web.config que permite la administración de roles, consulte <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Una de los roles de <paramref name="roleNames" /> es <see langword="null" />.  
  
O bien 
Uno de los usuarios de <paramref name="usernames" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Una de los roles de <paramref name="roleNames" /> es una cadena vacía o contiene una coma.  
  
O bien 
Uno de los usuarios de <paramref name="usernames" /> es una cadena vacía o contiene una coma.  
  
O bien 
Una de los roles de <paramref name="roleNames" /> tiene más de 256 caracteres.  
  
O bien 
Uno de los usuarios de <paramref name="usernames" /> tiene más de 256 caracteres.  
  
O bien 
 <paramref name="roleNames" /> contiene un elemento duplicado.  
  
O bien 
 <paramref name="usernames" /> contiene un elemento duplicado.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Uno o más de los nombres de rol especificados no se encontró.  
  
O bien 
Uno o más de los nombres de usuario especificados no se encontró.  
  
O bien 
Uno o más de los nombres de usuario especificados ya están asociados a uno o más de los nombres de rol especificados.  
  
O bien 
Se ha producido un error desconocido al establecer comunicación con la base de datos.</exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlRoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.SqlRoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre de la aplicación para la que se va a almacenar y recuperar información de roles.</summary>
        <value>El nombre de la aplicación para la que se va a almacenar y recuperar información de roles. El valor predeterminado es el valor de la propiedad <see cref="P:System.Web.HttpRequest.ApplicationPath" /> para la propiedad <see cref="P:System.Web.HttpContext.Request" /> actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> está usando el <xref:System.Web.Security.SqlRoleProvider> para asociar usuarios y roles diferentes aplicaciones. Esto permite que varias aplicaciones usar la misma base de datos para almacenar información de usuario y rol sin entrar en conflicto entre nombres de usuario duplicados o nombres de función. Varias aplicaciones de ASP.NET pueden utilizar la misma base de datos especificando el mismo valor en el <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> propiedad. El <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> propiedad puede establecerse mediante programación, o puede establecerse mediante declaración en el archivo de configuración para la aplicación Web con el `applicationName` atributo.  
  
 Si no se especifica un valor para el `applicationName` atributo en el archivo de configuración de la aplicación Web, el <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=nameWithType> valor actual de la propiedad <xref:System.Web.HttpContext.Request%2A?displayProperty=nameWithType> se usa el objeto.  
  
> [!CAUTION]
>  Dado que se usa una instancia del proveedor de funciones predeterminado único para todas las solicitudes atendidas por un <xref:System.Web.HttpApplication> objeto, puede tener varias solicitudes de ejecución al mismo tiempo y se intentó establecer el <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> valor de propiedad. El <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> propiedad no es segura para subprocesos de varias escrituras y variación la <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> valor de propiedad puede provocar un comportamiento inesperado para varios usuarios de una aplicación. Se recomienda que evite escribir código que permite que los usuarios establezcan la <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> propiedad a menos que debe. Un ejemplo de una aplicación que el valor del <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> propiedad puede ser necesaria es una aplicación administrativa que administra datos de rol para varias aplicaciones. Este tipo de aplicación debe ser una aplicación de usuario único y no es una aplicación Web.  
  
   
  
## Examples  
 El ejemplo siguiente muestra el elemento en el `system.web` sección del archivo Web.config para una aplicación ASP.NET. Especifica la aplicación <xref:System.Web.Security.SqlRoleProvider> instancia y establece el <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> propiedad `MyApplication`.  
  
```  
<roleManager defaultProvider="SqlProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlRoleProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Un llamador que no tiene permiso de hospedaje de ASP.NET <see cref="P:System.Web.Security.SqlRoleProvider.ApplicationName" /> intentó establecer la propiedad <see cref="F:System.Web.AspNetHostingPermissionLevel.High" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Se intentó establecer la propiedad <see cref="P:System.Web.Security.SqlRoleProvider.ApplicationName" /> en una cadena más larga de 256 caracteres.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public override void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.CreateRole : string -&gt; unit" Usage="sqlRoleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nombre del rol que se va a crear.</param>
        <summary>Agrega una nuevo rol a la base de datos de roles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.SqlRoleProvider.CreateRole%2A> llama al método el <xref:System.Web.Security.Roles> clase para crear un rol en la base de datos de SQL Server especificada en el archivo de configuración de la aplicación ASP.NET (Web.config).  
  
 La longitud máxima para el nombre del rol es de 256 caracteres. Los nombres de rol no distinguen mayúsculas de minúsculas. No se permiten comas en nombres de función.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un nuevo rol de la base de datos. Para obtener un ejemplo de un archivo Web.config que permite la administración de roles, consulte <xref:System.Web.Security.SqlRoleProvider>.  
  
> [!IMPORTANT]
>  En este ejemplo contiene un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> es una cadena vacía o contiene una coma.  
  
O bien 
 <paramref name="roleName" /> tiene más de 256 caracteres.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="roleName" /> ya existe en la base de datos.  
  
O bien 
Se ha producido un error desconocido al establecer comunicación con la base de datos.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="override this.DeleteRole : string * bool -&gt; bool" Usage="sqlRoleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">Nombre del rol que se va a eliminar.</param>
        <param name="throwOnPopulatedRole">Si es <see langword="true" />, se produce una excepción si <c>roleName</c> tiene uno o más miembros.</param>
        <summary>Quita un rol de la base de datos de roles.</summary>
        <returns>
          <see langword="true" /> si el rol se eliminó correctamente; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.SqlRoleProvider.DeleteRole%2A> llama al método el <xref:System.Web.Security.Roles> clase para eliminar un rol de la base de datos de SQL Server especificada en el archivo de configuración de la aplicación ASP.NET (Web.config). Cuando se elimina un rol, la lista de los usuarios asociados a ese rol también se elimina de la base de datos. No se ve afectada la información de usuario en la base de datos.  
  
 Si `throwOnPopulatedRole` es `true`, a continuación, se producirá una excepción y el rol no se eliminará si la función identificada por el `roleName` parámetro tiene uno o más miembros. Si `throwOnPopulatedRole` es `false`, a continuación, se eliminará el rol si está vacía o no.  
  
   
  
## Examples  
 El ejemplo siguiente elimina un rol de la base de datos. Para obtener un ejemplo de un archivo Web.config que permite la administración de roles, consulte <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/deleterolecs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/deleterolevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> es <see langword="null" /> (<see langword="Nothing" /> en Visual Basic).</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> es una cadena vacía o contiene una coma.  
  
O bien 
 <paramref name="roleName" /> tiene más de 256 caracteres.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="roleName" /> tiene uno o más miembros y <paramref name="throwOnPopulatedRole" /> es <see langword="true" />.  
  
O bien 
Se ha producido un error desconocido al establecer comunicación con la base de datos.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="override this.FindUsersInRole : string * string -&gt; string[]" Usage="sqlRoleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">El rol en el que se va a buscar.</param>
        <param name="usernameToMatch">El nombre de usuario que se va a buscar.</param>
        <summary>Obtiene una matriz de los nombres de usuario de un rol que contengan un nombre de usuario determinado que debe coincidir.</summary>
        <returns>Una matriz de cadenas que contiene los nombres de todos los usuarios cuyos nombres coinciden con <paramref name="usernameToMatch" /> y que son miembros del rol especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.SqlRoleProvider.FindUsersInRole%2A> llama al método el <xref:System.Web.Security.Roles> clase y devuelve una lista de usuarios de una función donde el nombre de usuario contiene una coincidencia de proporcionado `usernameToMatch` el configurado `applicationName`. El <xref:System.Web.Security.SqlRoleProvider> busca un nombre de usuario que coincida con el `usernameToMatch` valor del parámetro con los caracteres de comodín como palabra clave y es compatible con SQL Server. Por ejemplo, si la `usernameToMatch` parámetro se establece en "user1", a continuación, se devuelve información de pertenencia para el usuario con el nombre de usuario sea "user1", si existe. Si el `usernameToMatch` parámetro se establece en "user %", a continuación, se devuelve información de pertenencia para los usuarios con el nombre de usuario de "user1", "user2", "user_admin" y así sucesivamente.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Web.Security.Roles.FindUsersInRole%2A> método para mostrar la pertenencia al rol basado en la entrada del usuario. Para obtener un ejemplo de un archivo Web.config que permite la administración de roles, consulte <xref:System.Web.Security.Roles>.  
  
> [!IMPORTANT]
>  En este ejemplo contiene un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Roles#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/FindUsersInRolecs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.Roles#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/FindUsersInRolevb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> es <see langword="null" /> (<see langword="Nothing" /> en Visual Basic).  
  
O bien 
 <paramref name="usernameToMatch" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> es una cadena vacía o contiene una coma.  
  
O bien 
 <paramref name="usernameToMatch" /> es una cadena vacía.  
  
O bien 
 <paramref name="roleName" /> tiene más de 256 caracteres.  
  
O bien 
 <paramref name="usernameToMatch" /> tiene más de 256 caracteres.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">No se encontró <paramref name="roleName" /> en la base de datos.  
  
O bien 
Se ha producido un error desconocido al establecer comunicación con la base de datos.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public override string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="override this.GetAllRoles : unit -&gt; string[]" Usage="sqlRoleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene una lista de todas los roles de la aplicación.</summary>
        <returns>Una matriz de cadenas que contiene los nombres de todas los roles almacenados en la base de datos para una aplicación determinada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.SqlRoleProvider.GetAllRoles%2A> llama al método el <xref:System.Web.Security.Roles> clase para recuperar una lista de todos los roles de la base de datos SQL Server especificada en el archivo de configuración de la aplicación ASP.NET (Web.config).  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Web.Security.Roles.GetAllRoles%2A> método para obtener la lista de roles para una aplicación y enlazar los resultados a un <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> control. Para obtener un ejemplo de un archivo Web.config que permite la administración de roles, consulte <xref:System.Web.Security.SqlRoleProvider>.  
  
> [!IMPORTANT]
>  En este ejemplo contiene un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Se ha producido un error desconocido al establecer comunicación con la base de datos.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public override string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.GetRolesForUser : string -&gt; string[]" Usage="sqlRoleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Usuario del que se va a devolver una lista de roles.</param>
        <summary>Obtiene una lista de los roles en que está incluido un usuario.</summary>
        <returns>Matriz de cadenas que contiene los nombres de todas los roles en los que está incluido el usuario especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.SqlRoleProvider.GetRolesForUser%2A> llama al método el <xref:System.Web.Security.Roles> clase para recuperar una lista de roles del usuario especificado de la base de datos de SQL Server especificada en el archivo de configuración de la aplicación ASP.NET (Web.config).  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Web.Security.Roles.GetRolesForUser%2A> método para recuperar una lista de roles para un usuario especificado y se enlaza a un <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> control. Para obtener un ejemplo de un archivo Web.config que permite la administración de roles, consulte <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> contiene una coma.  
  
O bien 
 <paramref name="username" /> tiene más de 256 caracteres.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Se ha producido un error desconocido al establecer comunicación con la base de datos.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.GetUsersInRole : string -&gt; string[]" Usage="sqlRoleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nombre del rol para el que se obtendrá la lista de usuarios.</param>
        <summary>Obtiene una lista de usuarios incluidos en el rol especificado.</summary>
        <returns>Matriz de cadenas que contiene los nombres de todos los usuarios que son miembros del rol especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.SqlRoleProvider.GetUsersInRole%2A> llama al método el <xref:System.Web.Security.Roles> clase para recuperar la lista de los usuarios asociados con el rol especificado en la base de datos de SQL Server especificada en el archivo de configuración de la aplicación ASP.NET (Web.config).  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Web.Security.Roles.GetUsersInRole%2A> método para obtener una lista de los usuarios de un rol determinado y enlazar los resultados a un <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> control. Para obtener un ejemplo de un archivo Web.config que permite la administración de roles, consulte <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> es una cadena vacía o contiene una coma.  
  
O bien 
 <paramref name="roleName" /> tiene más de 256 caracteres.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">No se encontró <paramref name="rolename" /> en la base de datos.  
  
O bien 
Se ha producido un error desconocido al establecer comunicación con la base de datos.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="sqlRoleProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Nombre de la instancia de <see cref="T:System.Web.Security.SqlRoleProvider" /> que se va a inicializar.</param>
        <param name="config">Objeto <see cref="T:System.Collections.Specialized.NameValueCollection" /> que contiene los nombres y valores de las opciones de configuración para el proveedor de roles.</param>
        <summary>Inicializa el proveedor de roles de SQL Server con los valores de propiedades especificados en el archivo de configuración de la aplicación ASP.NET. Este método no está pensado para usarse directamente desde su código.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método inicializa la <xref:System.Web.Security.SqlRoleProvider> con la propiedad de valores especificado en el archivo de configuración de aplicación (Web.config) de ASP.NET y no está pensado para utilizarse directamente desde el código.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">La aplicación ASP.NET no se está ejecutando con el nivel de confianza <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> o superior.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="config" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">El atributo <see langword="connectionStringName" /> está vacío o no existe en el archivo de configuración de la aplicación para esta instancia de <see cref="T:System.Web.Security.SqlRoleProvider" />.  
  
O bien 
El atributo <see langword="applicationName" /> tiene más de 256 caracteres.  
  
O bien 
El archivo de configuración de la aplicación para esta instancia de <see cref="T:System.Web.Security.SqlRoleProvider" /> contiene un atributo desconocido.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public override bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.IsUserInRole : string * string -&gt; bool" Usage="sqlRoleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">El nombre de usuario que se va a buscar.</param>
        <param name="roleName">El rol en el que se va a buscar.</param>
        <summary>Obtiene un valor que indica si el usuario especificado está incluido en el rol especificado.</summary>
        <returns>Es <see langword="true" /> si el nombre de usuario especificado está incluido en el rol específico; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.SqlRoleProvider.IsUserInRole%2A> llama al método el <xref:System.Web.Security.Roles> clase y el <xref:System.Security.Principal.IPrincipal.IsInRole%2A> método de la <xref:System.Web.UI.Page.User%2A?displayProperty=nameWithType> propiedad para determinar si un usuario está asociado a un rol en la base de datos de SQL Server especificada en el archivo de configuración de la aplicación de ASP.NET (Web.config).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se comprueba mediante programación si el usuario ha iniciado la sesión está en la función Administradores antes de permitir al usuario ver los roles de usuario. Para obtener un ejemplo de un archivo Web.config que permite la administración de roles, consulte <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> es <see langword="null" />.  
  
O bien 
 <paramref name="username" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> es una cadena vacía o contiene una coma.  
  
O bien 
 <paramref name="username" /> contiene una coma.  
  
O bien 
 <paramref name="roleName" /> tiene más de 256 caracteres.  
  
O bien 
 <paramref name="username" /> tiene más de 256 caracteres.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Se ha producido un error desconocido al establecer comunicación con la base de datos.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="sqlRoleProvider.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Matriz de cadenas de nombres de usuario que se quitará de los roles especificados.</param>
        <param name="roleNames">Matriz de cadenas de nombres de rol de los que se quitan los nombres de usuario especificados.</param>
        <summary>Quita los nombres de usuario especificados de los roles especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles%2A> llama al método el <xref:System.Web.Security.Roles> clase para quitar uno o varios usuarios de uno o varios roles en la base de datos de SQL Server especificada en el archivo de configuración de la aplicación ASP.NET (Web.config). Este método es invocado por el <xref:System.Web.Security.Roles.RemoveUserFromRole%2A>, <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A>, <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A>, y <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> métodos de la <xref:System.Web.Security.Roles> clase.  
  
 Las actualizaciones de base de datos que se realizan durante la llamada a <xref:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles%2A> se realizan dentro de una transacción. Si se produce un error, como un nombre de usuario que no existe o un nombre de usuario que ya está en una función especificada, la transacción se revierte y no se realizan actualizaciones.  
  
 Los nombres de usuario y los nombres de rol no pueden contener comas.  
  
   
  
## Examples  
 El siguiente ejemplo de código agrega uno o varios usuarios a un rol o quita un usuario de un rol. Para obtener un ejemplo de un archivo Web.config que permite la administración de roles, consulte <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Una de los roles de <paramref name="roleNames" /> es <see langword="null" />.  
  
O bien 
Uno de los usuarios de <paramref name="usernames" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Una de los roles de <paramref name="roleNames" /> es una cadena vacía o contiene una coma.  
  
O bien 
Uno de los usuarios de <paramref name="usernames" /> es una cadena vacía o contiene una coma.  
  
O bien 
Una de los roles de <paramref name="roleNames" /> tiene más de 256 caracteres.  
  
O bien 
Uno de los usuarios de <paramref name="usernames" /> tiene más de 256 caracteres.  
  
O bien 
 <paramref name="roleNames" /> contiene un elemento duplicado.  
  
O bien 
 <paramref name="usernames" /> contiene un elemento duplicado.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Uno o más de los nombres de usuario especificados no se encontró.  
  
O bien 
Uno o más de los nombres de rol especificados no se encontró.  
  
O bien 
Uno o más de los nombres de usuario especificados no están asociados a uno o más de los nombres de rol especificados.  
  
O bien 
Se ha producido un error desconocido al establecer comunicación con la base de datos.</exception>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public override bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.RoleExists : string -&gt; bool" Usage="sqlRoleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nombre del rol que se va a buscar en la base de datos.</param>
        <summary>Obtiene un valor que indica si el nombre del rol especificado ya existe en la base de datos de roles.</summary>
        <returns>
          <see langword="true" /> si el nombre del rol ya existe en la base de datos; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.SqlRoleProvider.RoleExists%2A> llama al método el <xref:System.Web.Security.Roles> clase para determinar si existe un nombre de rol en la base de datos de SQL Server especificada en el archivo de configuración de la aplicación ASP.NET (Web.config).  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Web.Security.Roles.RoleExists%2A> método para determinar si un nombre de rol ya existe antes de crear el rol. Para obtener un ejemplo de un archivo Web.config que permite la administración de roles, consulte <xref:System.Web.Security.SqlRoleProvider>.  
  
> [!IMPORTANT]
>  En este ejemplo contiene un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> es una cadena vacía o contiene una coma.  
  
O bien 
 <paramref name="roleName" /> tiene más de 256 caracteres.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Se ha producido un error desconocido al establecer comunicación con la base de datos.</exception>
      </Docs>
    </Member>
  </Members>
</Type>