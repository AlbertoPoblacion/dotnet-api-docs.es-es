<Type Name="RolePrincipal" FullName="System.Web.Security.RolePrincipal">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ed43cd461b44aff0397846c8aa68a577964133eb" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52342122" /></Metadata><TypeSignature Language="C#" Value="public class RolePrincipal : System.Security.Claims.ClaimsPrincipal, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RolePrincipal extends System.Security.Claims.ClaimsPrincipal implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.RolePrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class RolePrincipal&#xA;Inherits ClaimsPrincipal&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class RolePrincipal : System::Security::Claims::ClaimsPrincipal, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type RolePrincipal = class&#xA;    inherit ClaimsPrincipal&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Claims.ClaimsPrincipal</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-2.0">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa información de seguridad de la solicitud HTTP actual, incluida la pertenencia a roles. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.RolePrincipal> objeto implementa la <xref:System.Security.Principal.IPrincipal> interfaz y representa el contexto de seguridad actual de la solicitud HTTP.  
  
 Cuando se habilita la administración de roles (consulte <xref:System.Web.Security.Roles>), el <xref:System.Web.Security.RoleManagerModule> asigna un <xref:System.Web.Security.RolePrincipal> de objeto para el <xref:System.Web.HttpContext.User%2A> propiedad de la <xref:System.Web.HttpContext.Current%2A> <xref:System.Web.HttpContext>.  
  
 La <xref:System.Web.Security.RolePrincipal> clase expone la identidad de seguridad de la solicitud HTTP actual y realiza otras comprobaciones de pertenencia a roles. Si <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> es `true`, el <xref:System.Web.Security.RolePrincipal> objeto administra la lista de roles almacenada y busca los miembros del rol para el usuario actual en la caché en primer lugar, a continuación, la lista la función <xref:System.Web.Security.Roles.Provider%2A>. Si <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> es `false`, el <xref:System.Web.Security.RolePrincipal> objeto siempre busca la pertenencia a roles con el proveedor de roles.  
  
 El <xref:System.Web.Security.RolePrincipal> objeto cifra y descifra la información de roles almacenada en la cookie identificada por el <xref:System.Web.Security.Roles.CookieName%2A> según el <xref:System.Web.Security.Roles.CookieProtectionValue%2A>.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Administrar autorizaciones con funciones ASP.NET</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea una nueva instancia de la clase <see cref="T:System.Web.Security.RolePrincipal" />.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Administrar autorizaciones con funciones ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::Security::Principal::IIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : System.Security.Principal.IIdentity -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal identity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="identity">La identidad de usuario para la que se va a crear la clase <see cref="T:System.Web.Security.RolePrincipal" />.</param>
        <summary>Crea una instancia de un objeto <see cref="T:System.Web.Security.RolePrincipal" /> correspondiente a la <paramref name="identity" /> especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta sobrecarga de la <xref:System.Web.Security.RolePrincipal.%23ctor%2A> el constructor crea un nuevo <xref:System.Web.Security.RolePrincipal> objeto e inicializa sus valores de propiedad. Información de rol almacenados en caché no se lee de la cookie identificada por el <xref:System.Web.Security.Roles.CookieName%2A> propiedad. El <xref:System.Web.Security.RolePrincipal.ProviderName%2A> propiedad está establecida en el <xref:System.Configuration.Provider.ProviderBase.Name%2A> del proveedor de funciones de forma predeterminada.  
  
 Para obtener información sobre cómo habilitar la administración de roles, consulte el <xref:System.Web.Security.Roles> clase.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un nuevo <xref:System.Web.Security.RolePrincipal> objeto. Si <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> es `true`, el ejemplo se crea el <xref:System.Web.Security.RolePrincipal> con información de la cookie de la cookie que identifica el <xref:System.Web.Security.Roles.CookieName%2A> propiedad.  
  
 [!code-csharp[System.Web.Security.RolePrincipal#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/snippetscs.aspx#2)]
 [!code-vb[System.Web.Security.RolePrincipal#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/snippetsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="identity" /> es <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Administrar autorizaciones con funciones ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RolePrincipal (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RolePrincipal(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se va a rellenar con datos.</param>
        <param name="context">Destino de esta serialización.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Security.RolePrincipal" />, usando la información contenido en el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> especificado y el contexto de transmisión por secuencias especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (System.Security.Principal.IIdentity identity, string encryptedTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity, string encryptedTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity, encryptedTicket As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::Security::Principal::IIdentity ^ identity, System::String ^ encryptedTicket);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : System.Security.Principal.IIdentity * string -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal (identity, encryptedTicket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="encryptedTicket" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identity">La identidad de usuario para la que se va a crear la clase <see cref="T:System.Web.Security.RolePrincipal" />.</param>
        <param name="encryptedTicket">Una cadena que contiene la información de roles cifrada.</param>
        <summary>Crea una instancia de un objeto <see cref="T:System.Web.Security.RolePrincipal" /> para la <paramref name="identity" /> especificada con información de roles del <paramref name="encryptedTicket" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)]

 Esta sobrecarga de la <xref:System.Web.Security.RolePrincipal.%23ctor%2A> el constructor crea un nuevo <xref:System.Web.Security.RolePrincipal> objeto e inicializa sus valores de propiedad. Información de rol para el usuario actual se lee desde proporcionado `encryptedTicket` y almacenado en caché con la <xref:System.Web.Security.RolePrincipal> objeto. El <xref:System.Web.Security.RolePrincipal.ProviderName%2A> propiedad está establecida en el <xref:System.Configuration.Provider.ProviderBase.Name%2A> del proveedor de funciones de forma predeterminada.  
  
 Para obtener información sobre cómo habilitar la administración de roles, consulte el <xref:System.Web.Security.Roles> clase.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea un nuevo <xref:System.Web.Security.RolePrincipal> objeto. Si <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> es `true`, el ejemplo se crea el <xref:System.Web.Security.RolePrincipal> con información de la cookie de la cookie que identifica el <xref:System.Web.Security.Roles.CookieName%2A> propiedad.  
  
 [!code-csharp[System.Web.Security.RolePrincipal#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/snippetscs.aspx#2)]
 [!code-vb[System.Web.Security.RolePrincipal#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/snippetsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="identity" /> es <see langword="null" />.  
  
O bien 
 El valor de <paramref name="encryptedTicket" /> es <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Administrar autorizaciones con funciones ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (string providerName, System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::String ^ providerName, System::Security::Principal::IIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : string * System.Security.Principal.IIdentity -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal (providerName, identity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="providerName">El nombre del proveedor de roles para el usuario.</param>
        <param name="identity">La identidad de usuario para la que se va a crear la clase <see cref="T:System.Web.Security.RolePrincipal" />.</param>
        <summary>Crea una instancia de un objeto <see cref="T:System.Web.Security.RolePrincipal" /> para la <paramref name="identity" /> especificada utilizando el <paramref name="providerName" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta sobrecarga de la <xref:System.Web.Security.RolePrincipal.%23ctor%2A> el constructor crea un nuevo <xref:System.Web.Security.RolePrincipal> objeto e inicializa sus valores de propiedad. El <xref:System.Web.Security.RolePrincipal.ProviderName%2A> propiedad está establecida en el valor especificado en el `providerName` parámetro.  
  
 Para obtener información sobre cómo habilitar la administración de roles, consulte el <xref:System.Web.Security.Roles> clase.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="identity" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">El valor de <paramref name="providerName" /> es <see langword="null" />.  
  
O bien 
 <paramref name="providerName" /> hace referencia a un proveedor de roles que no existe en la configuración de la aplicación.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Administrar autorizaciones con funciones ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (string providerName, System.Security.Principal.IIdentity identity, string encryptedTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, class System.Security.Principal.IIdentity identity, string encryptedTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, identity As IIdentity, encryptedTicket As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::String ^ providerName, System::Security::Principal::IIdentity ^ identity, System::String ^ encryptedTicket);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : string * System.Security.Principal.IIdentity * string -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal (providerName, identity, encryptedTicket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="encryptedTicket" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerName">El nombre del proveedor de roles para el usuario.</param>
        <param name="identity">La identidad de usuario para la que se va a crear la clase <see cref="T:System.Web.Security.RolePrincipal" />.</param>
        <param name="encryptedTicket">Una cadena que contiene la información de roles cifrada.</param>
        <summary>Crea una instancia de un objeto <see cref="T:System.Web.Security.RolePrincipal" /> para la <paramref name="identity" /> especificada utilizando el <paramref name="providerName" /> especificado e información de roles del <paramref name="encryptedTicket" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)]

 Esta sobrecarga de la <xref:System.Web.Security.RolePrincipal.%23ctor%2A> el constructor crea un nuevo <xref:System.Web.Security.RolePrincipal> objeto e inicializa sus valores de propiedad. Información de rol para el usuario actual se lee desde proporcionado `encryptedTicket` y almacenado en caché con la <xref:System.Web.Security.RolePrincipal> objeto. El <xref:System.Web.Security.RolePrincipal.ProviderName%2A> propiedad está establecida en el valor especificado en el `providerName` parámetro.  
  
 Para obtener información sobre cómo habilitar la administración de roles, consulte el <xref:System.Web.Security.Roles> clase.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="identity" /> es <see langword="null" />.  
  
O bien 
 El valor de <paramref name="encryptedTicket" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">El valor de <paramref name="providerName" /> es <see langword="null" />.  
  
O bien 
 <paramref name="providerName" /> hace referencia a un proveedor de roles que no existe en la configuración de la aplicación.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Administrar autorizaciones con funciones ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CachedListChanged">
      <MemberSignature Language="C#" Value="public bool CachedListChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CachedListChanged" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.CachedListChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CachedListChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CachedListChanged { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CachedListChanged : bool" Usage="System.Web.Security.RolePrincipal.CachedListChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si la lista de nombres de rol almacenada con el objeto <see cref="T:System.Web.Security.RolePrincipal" /> ha sido modificada.</summary>
        <value>Es <see langword="true" /> si se ha modificado la lista de nombres de rol almacenada con el objeto <see cref="T:System.Web.Security.RolePrincipal" />; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> propiedad devolverá `true` después de recuperar los nombres de rol del rol predeterminado <xref:System.Web.Security.Roles.Provider%2A> y se agrega a la memoria caché por la <xref:System.Web.Security.RolePrincipal.GetRoles%2A> método, o cuando el <xref:System.Web.Security.RolePrincipal.IsInRole%2A> llamadas al método el <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> método de la proveedor de roles predeterminado y, a continuación, recibe una respuesta de `true`, con lo que el nombre de función pasado a la <xref:System.Web.Security.RolePrincipal.IsInRole%2A> método que se agrega a la memoria caché.  
  
 El <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> propiedad también devolverá true si <xref:System.Web.Security.Roles.CookieSlidingExpiration%2A> está establecido en `true` y <xref:System.Web.Security.RolePrincipal.ExpireDate%2A> ha pasado, como resultado un nuevo <xref:System.Web.Security.RolePrincipal.ExpireDate%2A> que se va a establecer.  
  
   
  
## Examples  
 El ejemplo siguiente muestra información de almacenamiento en caché de rol para el usuario actual si está habilitada la administración de roles. Para obtener información sobre cómo habilitar la administración de roles, consulte el <xref:System.Web.Security.Roles> clase.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Administrar autorizaciones con funciones ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CookiePath">
      <MemberSignature Language="C#" Value="public string CookiePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookiePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.CookiePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CookiePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CookiePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CookiePath : string" Usage="System.Web.Security.RolePrincipal.CookiePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la ruta de acceso de la cookie de nombres de rol.</summary>
        <value>La ruta de acceso de la cookie donde están almacenados los nombres de rol. El valor predeterminado es /.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.RolePrincipal.CookiePath%2A> propiedad devuelve el valor de la `cookiePath` atributo desde el archivo Web.config de la aplicación ASP.NET. Para obtener más información sobre las rutas de acceso de la cookie, consulte <xref:System.Web.HttpCookie.Path%2A>.  
  
   
  
## Examples  
 El ejemplo siguiente muestra información de almacenamiento en caché de rol para el usuario actual si está habilitada la administración de roles. Para obtener información sobre cómo habilitar la administración de roles, consulte el <xref:System.Web.Security.Roles> clase.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Administrar autorizaciones con funciones ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Expired">
      <MemberSignature Language="C#" Value="public bool Expired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Expired" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.Expired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Expired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Expired : bool" Usage="System.Web.Security.RolePrincipal.Expired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si la cookie de roles ha expirado.</summary>
        <value>Es <see langword="true" /> si la cookie de roles ha expirado; de lo contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.RolePrincipal.Expired%2A> propiedad devuelve un `Boolean` según el valor que indica si la cookie de roles ha expirado la <xref:System.Web.Security.RolePrincipal.ExpireDate%2A> y la fecha y hora actuales.  
  
   
  
## Examples  
 El ejemplo siguiente muestra información de almacenamiento en caché de rol para el usuario actual si está habilitada la administración de roles. Para obtener información sobre cómo habilitar la administración de roles, consulte el <xref:System.Web.Security.Roles> clase.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Administrar autorizaciones con funciones ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExpireDate">
      <MemberSignature Language="C#" Value="public DateTime ExpireDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ExpireDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.ExpireDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpireDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime ExpireDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpireDate : DateTime" Usage="System.Web.Security.RolePrincipal.ExpireDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la fecha y hora de expiración de la cookie de roles.</summary>
        <value>El valor de <see cref="T:System.DateTime" /> en que la cookie de roles expirará.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo siguiente muestra información de almacenamiento en caché de rol para el usuario actual si está habilitada la administración de roles. Para obtener información sobre cómo habilitar la administración de roles, consulte el <xref:System.Web.Security.Roles> clase.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Administrar autorizaciones con funciones ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="rolePrincipal.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se va a rellenar con datos.</param>
        <param name="context">Destino de esta serialización.</param>
        <summary>Rellena un objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar el objeto de destino utilizando el contexto de transmisión por secuencias especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información, vea el método <xref:System.Runtime.Serialization.ISerializable.GetObjectData%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoles">
      <MemberSignature Language="C#" Value="public string[] GetRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.GetRoles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetRoles();" />
      <MemberSignature Language="F#" Value="member this.GetRoles : unit -&gt; string[]" Usage="rolePrincipal.GetRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene una lista de roles de los que es miembro <see cref="T:System.Web.Security.RolePrincipal" />.</summary>
        <returns>La lista de roles de los que es miembro <see cref="T:System.Web.Security.RolePrincipal" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> es `true` y se ha almacenado en caché los nombres de rol para el usuario representado por la <xref:System.Web.Security.RolePrincipal>, el <xref:System.Web.Security.RolePrincipal.GetRoles%2A> método devolverá la lista de nombres de función en la memoria caché que el usuario es miembro de. Si no se ha almacenado en caché los nombres de rol, el <xref:System.Web.Security.RolePrincipal.GetRoles%2A> método devuelve la lista de nombres de función que el usuario es miembro del rol predeterminado de <xref:System.Web.Security.Roles.Provider%2A>. Solo los nombres de rol actual <xref:System.Web.Security.Roles.ApplicationName%2A> se devuelven. Para determinar si se ha almacenado en caché los nombres de rol en el <xref:System.Web.Security.RolePrincipal> objeto, compruebe el <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> propiedad.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra los roles que el usuario ha iniciado sesión es miembro de.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/GetRolescs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/GetRolesvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">La propiedad <see cref="P:System.Web.Security.RolePrincipal.Identity" /> es <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Administrar autorizaciones con funciones ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public override System.Security.Principal.IIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Identity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ Identity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : System.Security.Principal.IIdentity" Usage="System.Web.Security.RolePrincipal.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la identidad de seguridad de la solicitud HTTP actual.</summary>
        <value>La identidad de seguridad de la solicitud HTTP actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.RolePrincipal.Identity%2A> de un <xref:System.Web.Security.RolePrincipal> objeto se establece cuando el <xref:System.Web.Security.RolePrincipal> se llama al constructor.  
  
   
  
## Examples  
 El ejemplo siguiente muestra información de almacenamiento en caché de rol para el usuario actual si está habilitada la administración de roles. Para obtener información sobre cómo habilitar la administración de roles, consulte el <xref:System.Web.Security.Roles> clase.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Administrar autorizaciones con funciones ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public override bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsInRole(System::String ^ role);" />
      <MemberSignature Language="F#" Value="abstract member IsInRole : string -&gt; bool&#xA;override this.IsInRole : string -&gt; bool" Usage="rolePrincipal.IsInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">El rol que se busca.</param>
        <summary>Obtiene un valor que indica si el usuario representado por <see cref="T:System.Web.Security.RolePrincipal" /> está incluido en el rol especificado.</summary>
        <returns>Es <see langword="true" /> si el usuario representado por <see cref="T:System.Web.Security.RolePrincipal" /> está incluido en el rol especificado; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RolePrincipal.IsInRole%2A> comprueba primero la <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> propiedad para determinar si una lista en caché de nombres de rol para el usuario actual está disponible. Si el <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> propiedad es `true`, se comprueba la lista en caché para el rol especificado. Si el <xref:System.Web.Security.RolePrincipal.IsInRole%2A> método encuentra el rol especificado en la lista almacenada en caché, devuelve `true`.  
  
 Si <xref:System.Web.Security.RolePrincipal.IsInRole%2A> no encuentra el rol especificado, llama a la <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> método predeterminado <xref:System.Web.Security.Roles.Provider%2A> instancia para determinar si el nombre de usuario está asociado a un rol del origen de datos para el <xref:System.Web.Security.Roles.ApplicationName%2A> valor.  
  
   
  
## Examples  
 El ejemplo de código siguiente comprueba si el usuario ha iniciado la sesión está en la función Administradores antes de permitir al usuario ver los roles de usuario.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/ViewRolescs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/ViewRolesvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">La propiedad <see cref="P:System.Web.Security.RolePrincipal.Identity" /> es <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Administrar autorizaciones con funciones ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsRoleListCached">
      <MemberSignature Language="C#" Value="public bool IsRoleListCached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRoleListCached" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.IsRoleListCached" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRoleListCached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRoleListCached { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRoleListCached : bool" Usage="System.Web.Security.RolePrincipal.IsRoleListCached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si la lista de roles para el usuario se ha almacenado en una cookie.</summary>
        <value>Es <see langword="true" /> si los nombres de rol están almacenados en una cookie; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el `cacheRolesInCookie` atributo en el archivo Web.config de la aplicación está establecida en `true`, a continuación, se escribe una lista de nombres de rol para el usuario actual en una cookie cuando se comprueba la pertenencia del usuario a un rol determinado. El <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> propiedad indica si se han escrito los nombres de rol en la cookie. Tenga en cuenta que, aunque el `cacheRolesInCookie` puede ser el atributo de configuración `true`, el <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> propiedad no devuelve `true` hasta después de que se ha escrito la información de roles en la cookie. Si no hay ningún rol comprobaciones se realizan para un usuario, <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> devolverá `false`.  
  
   
  
## Examples  
 El ejemplo siguiente muestra información de almacenamiento en caché de rol para el usuario actual si está habilitada la administración de roles. Para obtener información sobre cómo habilitar la administración de roles, consulte el <xref:System.Web.Security.Roles> clase.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Administrar autorizaciones con funciones ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IssueDate">
      <MemberSignature Language="C#" Value="public DateTime IssueDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime IssueDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.IssueDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IssueDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime IssueDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.IssueDate : DateTime" Usage="System.Web.Security.RolePrincipal.IssueDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la fecha y hora de emisión de la cookie de roles.</summary>
        <value>Valor de <see cref="T:System.DateTime" /> en que se emitió la cookie de roles.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo siguiente muestra información de almacenamiento en caché de rol para el usuario actual si está habilitada la administración de roles. Para obtener información sobre cómo habilitar la administración de roles, consulte el <xref:System.Web.Security.Roles> clase.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Administrar autorizaciones con funciones ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderName : string" Usage="System.Web.Security.RolePrincipal.ProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre del proveedor de roles que almacena y recupera información de roles para el usuario.</summary>
        <value>El nombre del proveedor de roles que almacena y recupera información de roles para el usuario.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.RolePrincipal.ProviderName%2A> propiedad expone el nombre del proveedor de funciones que administra la información de roles para el usuario representado por la <xref:System.Web.Security.RolePrincipal> objeto. Esto le permite tener acceso a la instancia específica del proveedor de roles para un usuario mediante el <xref:System.Web.Security.Roles.Providers%2A> propiedad de la <xref:System.Web.Security.Roles> clase independientemente de si el proveedor es el proveedor predeterminado para la aplicación. Por ejemplo, puede crear un método que toma un <xref:System.Web.Security.RolePrincipal> como entrada y devuelve la lista de roles para el usuario representado. Puede asegurarse de que se utiliza el proveedor de roles adecuados para devolver la lista de roles para el <xref:System.Web.Security.RolePrincipal> mediante una llamada a la <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> método del proveedor de funciones desde la <xref:System.Web.Security.Roles.Providers%2A> colección indizado por el <xref:System.Web.Security.RolePrincipal.ProviderName%2A> valor de propiedad.  
  
 Para rellenar el <xref:System.Web.Security.RolePrincipal> objeto para cada solicitud, debe usar un <xref:System.Web.Security.RoleManagerModule.GetRoles> controlador de eventos definido en el archivo Global.asax de la aplicación.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Administrar autorizaciones con funciones ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SetDirty">
      <MemberSignature Language="C#" Value="public void SetDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.SetDirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDirty();" />
      <MemberSignature Language="F#" Value="member this.SetDirty : unit -&gt; unit" Usage="rolePrincipal.SetDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Marca como modificada la lista de roles almacenada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Security.RolePrincipal.SetDirty%2A> método marca la lista de roles almacenada en caché como se ha modificado estableciendo <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> a `true` y <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> a `false`.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Administrar autorizaciones con funciones ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se rellena con datos.</param>
        <param name="context">Destino de esta serialización.</param>
        <summary>Para una descripción de este miembro, vea <see cref="M:System.Runtime.Serialization.ISerializationSurrogate.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación de miembro de interfaz explícita. Solo se puede utilizar cuando la instancia de <xref:System.Web.Security.RolePrincipal> se convierte en una interfaz <xref:System.Runtime.Serialization.ISerializable>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToEncryptedTicket">
      <MemberSignature Language="C#" Value="public string ToEncryptedTicket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToEncryptedTicket() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.ToEncryptedTicket" />
      <MemberSignature Language="VB.NET" Value="Public Function ToEncryptedTicket () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToEncryptedTicket();" />
      <MemberSignature Language="F#" Value="member this.ToEncryptedTicket : unit -&gt; string" Usage="rolePrincipal.ToEncryptedTicket " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve la información de roles almacenada con el objeto <see cref="T:System.Web.Security.RolePrincipal" /> cifrado basándose en el valor de <see cref="P:System.Web.Security.Roles.CookieProtectionValue" />.</summary>
        <returns>La información de roles almacenada con el objeto <see cref="T:System.Web.Security.RolePrincipal" /> cifrado basada en <see cref="P:System.Web.Security.Roles.CookieProtectionValue" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor devuelto por la <xref:System.Web.Security.RolePrincipal.ToEncryptedTicket%2A> método se almacena en la cookie de roles cuando <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> es `true`.  
  
   
  
## Examples  
 El siguiente ejemplo de código escribe los resultados de la <xref:System.Web.Security.RolePrincipal.ToEncryptedTicket%2A> método a la cookie de roles.  
  
 [!code-csharp[System.Web.Security.RolePrincipal#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/snippetscs.aspx#6)]
 [!code-vb[System.Web.Security.RolePrincipal#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/snippetsvb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Administrar autorizaciones con funciones ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Version { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : int" Usage="System.Web.Security.RolePrincipal.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número de versión de la cookie de roles.</summary>
        <value>El número de versión de la cookie de roles.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al incluir un número de versión en la cookie de roles, pueden modificar el formato de la cookie de roles y usar las versiones futuras de ASP.NET el <xref:System.Web.Security.RolePrincipal.Version%2A> propiedad para distinguir entre diferentes formatos.  
  
   
  
## Examples  
 El ejemplo siguiente muestra información de almacenamiento en caché de rol para el usuario actual si está habilitada la administración de roles. Para obtener información sobre cómo habilitar la administración de roles, consulte el <xref:System.Web.Security.Roles> clase.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Administrar autorizaciones con funciones ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>