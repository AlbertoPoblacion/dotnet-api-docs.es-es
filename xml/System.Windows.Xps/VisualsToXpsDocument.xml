<Type Name="VisualsToXpsDocument" FullName="System.Windows.Xps.VisualsToXpsDocument">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0ed63c6c5136f7d5cd3af3fa96584639d327bfa8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36462304" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class VisualsToXpsDocument : System.Windows.Documents.Serialization.SerializerWriterCollator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualsToXpsDocument extends System.Windows.Documents.Serialization.SerializerWriterCollator" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Xps.VisualsToXpsDocument" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualsToXpsDocument&#xA;Inherits SerializerWriterCollator" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualsToXpsDocument : System::Windows::Documents::Serialization::SerializerWriterCollator" />
  <TypeSignature Language="F#" Value="type VisualsToXpsDocument = class&#xA;    inherit SerializerWriterCollator" />
  <AssemblyInfo>
    <AssemblyName>System.Printing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.Serialization.SerializerWriterCollator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona métodos para escribir objetos <see cref="T:System.Windows.Media.Visual" /> en documentos XML Paper Specification (XPS) o en una cola de impresión en modo de proceso por lotes.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dado que esta clase no tiene ningún constructor, utilice el <xref:System.Windows.Xps.XpsDocumentWriter.CreateVisualsCollator%2A> método para crear una instancia.  
  
 El <xref:System.Windows.Xps.VisualsToXpsDocument> escribe en el mismo destino <xref:System.Windows.Xps.Packaging.XpsDocument> o <xref:System.Printing.PrintQueue> como el <xref:System.Windows.Xps.XpsDocumentWriter> que crea el <xref:System.Windows.Xps.VisualsToXpsDocument>.  
  
 Cada <xref:System.Windows.Media.Visual> se convierte en una página en el documento.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo crear un clasificador de objetos visuales y usarlo para escribir en un [!INCLUDE[TLA#tla_metro](~/includes/tlasharptla-metro-md.md)] documento.  
  
 [!code-csharp[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#createandwritetovisualscollator)]
 [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#createandwritetovisualscollator)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginBatchWrite">
      <MemberSignature Language="C#" Value="public override void BeginBatchWrite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void BeginBatchWrite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.VisualsToXpsDocument.BeginBatchWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub BeginBatchWrite ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void BeginBatchWrite();" />
      <MemberSignature Language="F#" Value="override this.BeginBatchWrite : unit -&gt; unit" Usage="visualsToXpsDocument.BeginBatchWrite " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica que las operaciones de escritura pueden comenzar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Debe llamar a este método antes de llamar a cualquier <xref:System.Windows.Xps.VisualsToXpsDocument.Write%2A> o <xref:System.Windows.Xps.VisualsToXpsDocument.WriteAsync%2A> métodos.  
  
 Después de la última operación de escritura, llame a <xref:System.Windows.Xps.VisualsToXpsDocument.EndBatchWrite%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.VisualsToXpsDocument.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Cancel();" />
      <MemberSignature Language="F#" Value="override this.Cancel : unit -&gt; unit" Usage="visualsToXpsDocument.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancela una operación de escritura sincrónica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por ejemplo, se produce una excepción si el <xref:System.Windows.Xps.VisualsToXpsDocument.Cancel%2A> se llama al método y una operación de escritura no está en curso.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Xps.XpsWriterException">El estado de <see cref="T:System.Windows.Xps.VisualsToXpsDocument" /> no es compatible con una operación <see cref="M:System.Windows.Xps.VisualsToXpsDocument.Cancel" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public override void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.VisualsToXpsDocument.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CancelAsync();" />
      <MemberSignature Language="F#" Value="override this.CancelAsync : unit -&gt; unit" Usage="visualsToXpsDocument.CancelAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancela una operación de escritura asincrónica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por ejemplo, se produce una excepción si el <xref:System.Windows.Xps.VisualsToXpsDocument.CancelAsync%2A> se llama al método y una operación de escritura no está en curso.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Xps.XpsWriterException">El estado de <see cref="T:System.Windows.Xps.VisualsToXpsDocument" /> no es compatible con una operación <see cref="M:System.Windows.Xps.VisualsToXpsDocument.CancelAsync" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndBatchWrite">
      <MemberSignature Language="C#" Value="public override void EndBatchWrite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndBatchWrite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.VisualsToXpsDocument.EndBatchWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndBatchWrite ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndBatchWrite();" />
      <MemberSignature Language="F#" Value="override this.EndBatchWrite : unit -&gt; unit" Usage="visualsToXpsDocument.EndBatchWrite " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica que las operaciones de escritura deben finalizar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Después de la última llamada a <xref:System.Windows.Xps.VisualsToXpsDocument.Write%2A> o <xref:System.Windows.Xps.VisualsToXpsDocument.WriteAsync%2A>, llame a este método.  
  
 Debe llamar a <xref:System.Windows.Xps.VisualsToXpsDocument.BeginBatchWrite%2A> antes de que las operaciones de escritura.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Escribe un <see cref="T:System.Windows.Media.Visual" /> de forma sincrónica en un <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.VisualsToXpsDocument.Write(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="override this.Write : System.Windows.Media.Visual -&gt; unit" Usage="visualsToXpsDocument.Write visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">El objeto <see cref="T:System.Windows.Media.Visual" /> que se escribe.</param>
        <summary>Escribe un <see cref="T:System.Windows.Media.Visual" /> de forma sincrónica en un <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar este método para escribir en un [!INCLUDE[TLA#tla_metro](~/includes/tlasharptla-metro-md.md)] documento.  
  
 [!code-csharp[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#createandwritetovisualscollator)]
 [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#createandwritetovisualscollator)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.VisualsToXpsDocument.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Windows::Media::Visual ^ visual, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="override this.Write : System.Windows.Media.Visual * System.Printing.PrintTicket -&gt; unit" Usage="visualsToXpsDocument.Write (visual, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="visual">El objeto <see cref="T:System.Windows.Media.Visual" /> que se escribe.</param>
        <param name="printTicket">
          <see cref="T:System.Printing.PrintTicket" /> que representa las preferencias de impresión predeterminadas del documento.</param>
        <summary>Escribe un <see cref="T:System.Windows.Media.Visual" /> de forma sincrónica en un <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> e incluye un <see cref="T:System.Printing.PrintTicket" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método no valida ni modificar especificado `printTicket` para un determinado <xref:System.Printing.PrintQueue>. Si es necesario, utilice el <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> método para crear un <xref:System.Printing.PrintTicket> que es específico de la <xref:System.Printing.PrintQueue> y es válido para una impresora determinada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Escribe un <see cref="T:System.Windows.Media.Visual" /> de forma asincrónica en un <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o un <see cref="T:System.Printing.PrintQueue" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.VisualsToXpsDocument.WriteAsync(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : System.Windows.Media.Visual -&gt; unit" Usage="visualsToXpsDocument.WriteAsync visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">El objeto <see cref="T:System.Windows.Media.Visual" /> que se escribe.</param>
        <summary>Escribe un <see cref="T:System.Windows.Media.Visual" /> de forma asincrónica en un <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o un <see cref="T:System.Printing.PrintQueue" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Media.Visual visual, object userSuppliedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Media.Visual visual, object userSuppliedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.VisualsToXpsDocument.WriteAsync(System.Windows.Media.Visual,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Media::Visual ^ visual, System::Object ^ userSuppliedState);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : System.Windows.Media.Visual * obj -&gt; unit" Usage="visualsToXpsDocument.WriteAsync (visual, userSuppliedState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="userSuppliedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="visual">El objeto <see cref="T:System.Windows.Media.Visual" /> que se escribe.</param>
        <param name="userSuppliedState">Objeto que contiene datos que el llamador desea pasar al controlador de eventos <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingCompleted" />.</param>
        <summary>Escribe un <see cref="T:System.Windows.Media.Visual" /> de forma asincrónica en un <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> e incluye información adicional que el autor de llamada quiere pasar a un controlador de eventos.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.VisualsToXpsDocument.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Media::Visual ^ visual, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : System.Windows.Media.Visual * System.Printing.PrintTicket -&gt; unit" Usage="visualsToXpsDocument.WriteAsync (visual, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="visual">El objeto <see cref="T:System.Windows.Media.Visual" /> que se escribe.</param>
        <param name="printTicket">
          <see cref="T:System.Printing.PrintTicket" /> que representa las preferencias de impresión predeterminadas del documento.</param>
        <summary>Escribe un <see cref="T:System.Windows.Media.Visual" /> de forma asincrónica en un <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" /> e incluye un <see cref="T:System.Printing.PrintTicket" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método no valida ni modificar especificado `printTicket` para un determinado <xref:System.Printing.PrintQueue>. Si es necesario, utilice el <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> método para crear un <xref:System.Printing.PrintTicket> que es específico de la <xref:System.Printing.PrintQueue> y es válido para una impresora determinada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket, object userSuppliedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket, object userSuppliedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.VisualsToXpsDocument.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Media::Visual ^ visual, System::Printing::PrintTicket ^ printTicket, System::Object ^ userSuppliedState);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : System.Windows.Media.Visual * System.Printing.PrintTicket * obj -&gt; unit" Usage="visualsToXpsDocument.WriteAsync (visual, printTicket, userSuppliedState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userSuppliedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="visual">El objeto <see cref="T:System.Windows.Media.Visual" /> que se escribe.</param>
        <param name="printTicket">
          <see cref="T:System.Printing.PrintTicket" /> que representa las preferencias de impresión predeterminadas para el documento.</param>
        <param name="userSuppliedState">Objeto que contiene los datos que el llamador desea pasar al controlador de eventos <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingCompleted" />.</param>
        <summary>Escribe un <see cref="T:System.Windows.Media.Visual" /> de forma asincrónica en una clase <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> o <see cref="T:System.Printing.PrintQueue" />; también incluye un <see cref="T:System.Printing.PrintTicket" /> y toda la información adicional que el autor de llamada quiere pasar a un controlador de eventos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método no valida ni modificar especificado `printTicket` para un determinado <xref:System.Printing.PrintQueue>. Si es necesario, utilice el <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> método para crear un <xref:System.Printing.PrintTicket> que es específico de la <xref:System.Printing.PrintQueue> y es válido para una impresora determinada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>