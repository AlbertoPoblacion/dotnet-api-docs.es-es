<Type Name="ParallelForEach&lt;T&gt;" FullName="System.Activities.Statements.ParallelForEach&lt;T&gt;">
  <TypeSignature Language="C#" Value="public sealed class ParallelForEach&lt;T&gt; : System.Activities.NativeActivity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ParallelForEach`1&lt;T&gt; extends System.Activities.NativeActivity" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Statements.ParallelForEach`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ParallelForEach(Of T)&#xA;Inherits NativeActivity" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ParallelForEach sealed : System::Activities::NativeActivity" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Activities.NativeActivity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Body")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="b5c9a-101">El tipo de los valores proporcionados en la colección <see cref="P:System.Activities.Statements.ParallelForEach`1.Values" />.</span><span class="sxs-lookup"><span data-stu-id="b5c9a-101">The type of the values provided in the <see cref="P:System.Activities.Statements.ParallelForEach`1.Values" /> collection.</span></span></typeparam>
    <summary><span data-ttu-id="b5c9a-102">Enumera los elementos de una colección y ejecuta una instrucción incrustada para cada elemento de la colección en paralelo.</span><span class="sxs-lookup"><span data-stu-id="b5c9a-102">Enumerates the elements of a collection and executes an embedded statement for each element of the collection in parallel.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5c9a-103">Las instrucciones incrustadas se programan juntas y se ejecutan de forma asincrónica, pero a menos que las propias actividades programadas sean asincrónicas (como las actividades de mensajería, <xref:System.Activities.Statements.InvokeMethod> o las actividades derivadas de <xref:System.Activities.AsyncCodeActivity>), no se ejecutan en subprocesos independientes, por lo que cada actividad sucesiva solo se ejecutará cuando la actividad programada previamente se complete o quede inactiva.</span><span class="sxs-lookup"><span data-stu-id="b5c9a-103">The embedded statements are scheduled together and run asynchronously, but unless the scheduled activites themselves are asynchronous (such as messaging activities, <xref:System.Activities.Statements.InvokeMethod>, or activities that derive from <xref:System.Activities.AsyncCodeActivity>), they do not run on separate threads, so each successive activity will only execute when the previously scheduled activity completes or goes idle.</span></span>  <span data-ttu-id="b5c9a-104">Si ninguna de las actividades secundarias de esta actividad es asincrónica o queda inactiva, esta actividad se ejecuta del mismo modo que una actividad <xref:System.Activities.Statements.ForEach%601>.</span><span class="sxs-lookup"><span data-stu-id="b5c9a-104">If none of the child activities of this activity are asynchronous or go idle, this activity execute in the same way that a <xref:System.Activities.Statements.ForEach%601> activity does.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5c9a-105">En el siguiente ejemplo de código se muestra la creación de una actividad de la clase <xref:System.Activities.Statements.ParallelForEach%601>.</span><span class="sxs-lookup"><span data-stu-id="b5c9a-105">The following code sample demonstrates creating a <xref:System.Activities.Statements.ParallelForEach%601> activity.</span></span> <span data-ttu-id="b5c9a-106">Este ejemplo es de la [proceso de compra corporativa](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md) ejemplo.</span><span class="sxs-lookup"><span data-stu-id="b5c9a-106">This example is from the [Corporate Purchase Process](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md) sample.</span></span>  
  
 [!code-csharp[wfs_PurchaseProcess#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_purchaseprocess/cs/purchaseprocessworkflow.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelForEach ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.ParallelForEach`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParallelForEach();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5c9a-107">Crea una nueva instancia de la clase <see cref="T:System.Activities.Statements.ParallelForEach`1" />.</span><span class="sxs-lookup"><span data-stu-id="b5c9a-107">Creates a new instance of the <see cref="T:System.Activities.Statements.ParallelForEach`1" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b5c9a-108">En el siguiente ejemplo de código se muestra la creación de una actividad de la clase <xref:System.Activities.Statements.ParallelForEach%601>.</span><span class="sxs-lookup"><span data-stu-id="b5c9a-108">The following code sample demonstrates creating a <xref:System.Activities.Statements.ParallelForEach%601> activity.</span></span> <span data-ttu-id="b5c9a-109">Este ejemplo es de la [proceso de compra corporativa](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md) ejemplo.</span><span class="sxs-lookup"><span data-stu-id="b5c9a-109">This example is from the [Corporate Purchase Process](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md) sample.</span></span>  
  
 [!code-csharp[wfs_PurchaseProcess#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_purchaseprocess/cs/purchaseprocessworkflow.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityAction&lt;T&gt; Body { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.ActivityAction`1&lt;!T&gt; Body" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.ParallelForEach`1.Body" />
      <MemberSignature Language="VB.NET" Value="Public Property Body As ActivityAction(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::ActivityAction&lt;T&gt; ^ Body { System::Activities::ActivityAction&lt;T&gt; ^ get(); void set(System::Activities::ActivityAction&lt;T&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityAction&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5c9a-110">El objeto <see cref="T:System.Activities.ActivityAction" /> que se ejecuta una vez para cada valor contenido en la colección <see cref="P:System.Activities.Statements.ParallelForEach`1.Values" />.</span><span class="sxs-lookup"><span data-stu-id="b5c9a-110">The <see cref="T:System.Activities.ActivityAction" /> that is executed once for every value contained in the <see cref="P:System.Activities.Statements.ParallelForEach`1.Values" /> collection.</span></span></summary>
        <value><span data-ttu-id="b5c9a-111">La acción de actividad contenida.</span><span class="sxs-lookup"><span data-stu-id="b5c9a-111">The contained activity action.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b5c9a-112">En el siguiente ejemplo de código, se muestra la configuración de la propiedad Body de una actividad de la clase <xref:System.Activities.Statements.ParallelForEach%601>.</span><span class="sxs-lookup"><span data-stu-id="b5c9a-112">The following code sample demonstrates setting the Body property of a <xref:System.Activities.Statements.ParallelForEach%601> activity.</span></span> <span data-ttu-id="b5c9a-113">Este ejemplo es de la [proceso de compra corporativa](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md) ejemplo.</span><span class="sxs-lookup"><span data-stu-id="b5c9a-113">This example is from the [Corporate Purchase Process](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md) sample.</span></span>  
  
 [!code-csharp[wfs_PurchaseProcess#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_purchaseprocess/cs/purchaseprocessworkflow.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CacheMetadata(valuetype System.Activities.NativeActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.ParallelForEach`1.CacheMetadata(System.Activities.NativeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CacheMetadata (metadata As NativeActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CacheMetadata(System::Activities::NativeActivityMetadata metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.NativeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompletionCondition">
      <MemberSignature Language="C#" Value="public System.Activities.Activity&lt;bool&gt; CompletionCondition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity`1&lt;bool&gt; CompletionCondition" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.ParallelForEach`1.CompletionCondition" />
      <MemberSignature Language="VB.NET" Value="Public Property CompletionCondition As Activity(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity&lt;bool&gt; ^ CompletionCondition { System::Activities::Activity&lt;bool&gt; ^ get(); void set(System::Activities::Activity&lt;bool&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Activity&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5c9a-114">Se evalúa cuando se completa cada iteración.</span><span class="sxs-lookup"><span data-stu-id="b5c9a-114">Evaluated after each iteration completes.</span></span></summary>
        <value><span data-ttu-id="b5c9a-115">La expresión de finalización.</span><span class="sxs-lookup"><span data-stu-id="b5c9a-115">The completion expression.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5c9a-116">Si se evalúa como `true`, se cancelan las iteraciones programadas pendientes.</span><span class="sxs-lookup"><span data-stu-id="b5c9a-116">If it evaluates to `true`, then the scheduled pending iterations are canceled.</span></span> <span data-ttu-id="b5c9a-117">Si no se establece esta propiedad, se ejecutan todas las instrucciones programadas hasta su compleción.</span><span class="sxs-lookup"><span data-stu-id="b5c9a-117">If this property is not set, all scheduled statements execute until completion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override void Execute (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Execute(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.ParallelForEach`1.Execute(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Execute (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Execute(System::Activities::NativeActivityContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateDynamicUpdateMap">
      <MemberSignature Language="C#" Value="protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCreateDynamicUpdateMap(class System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, class System.Activities.Activity originalActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.ParallelForEach`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnCreateDynamicUpdateMap (metadata As NativeActivityUpdateMapMetadata, originalActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCreateDynamicUpdateMap(System::Activities::DynamicUpdate::NativeActivityUpdateMapMetadata ^ metadata, System::Activities::Activity ^ originalActivity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata" />
        <Parameter Name="originalActivity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <param name="originalActivity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Activities.InArgument&lt;System.Collections.Generic.IEnumerable&lt;T&gt;&gt; Values { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.InArgument`1&lt;class System.Collections.Generic.IEnumerable`1&lt;!T&gt;&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.ParallelForEach`1.Values" />
      <MemberSignature Language="VB.NET" Value="Public Property Values As InArgument(Of IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::InArgument&lt;System::Collections::Generic::IEnumerable&lt;T&gt; ^&gt; ^ Values { System::Activities::InArgument&lt;System::Collections::Generic::IEnumerable&lt;T&gt; ^&gt; ^ get(); void set(System::Activities::InArgument&lt;System::Collections::Generic::IEnumerable&lt;T&gt; ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Activities.RequiredArgument</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.InArgument&lt;System.Collections.Generic.IEnumerable&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5c9a-118">La colección de valores usada como parámetros para cada iteración de la actividad contenida en la propiedad <see cref="P:System.Activities.Statements.ParallelForEach`1.Body" />.</span><span class="sxs-lookup"><span data-stu-id="b5c9a-118">The collection of values used as parameters for each iteration of the activity contained in the <see cref="P:System.Activities.Statements.ParallelForEach`1.Body" />.</span></span></summary>
        <value><span data-ttu-id="b5c9a-119">Colección de valores.</span><span class="sxs-lookup"><span data-stu-id="b5c9a-119">The collection of values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b5c9a-120">En el siguiente código de ejemplo, se muestra la configuración de la propiedad Values de una actividad de la clase <xref:System.Activities.Statements.ParallelForEach%601>.</span><span class="sxs-lookup"><span data-stu-id="b5c9a-120">The following code sample demonstrates setting the Values property of a <xref:System.Activities.Statements.ParallelForEach%601> activity.</span></span> <span data-ttu-id="b5c9a-121">Este ejemplo es de la [proceso de compra corporativa](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md) ejemplo.</span><span class="sxs-lookup"><span data-stu-id="b5c9a-121">This example is from the [Corporate Purchase Process](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md) sample.</span></span>  
  
 [!code-csharp[wfs_PurchaseProcess#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_purchaseprocess/cs/purchaseprocessworkflow.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>