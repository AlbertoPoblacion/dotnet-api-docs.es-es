<Type Name="DurableTimerExtension" FullName="System.Activities.Statements.DurableTimerExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="576a0686cc9d8d42880b0c8682c86c749b6795f0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30356139" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DurableTimerExtension : System.Activities.Statements.TimerExtension, IDisposable, System.Activities.Hosting.IWorkflowInstanceExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DurableTimerExtension extends System.Activities.Statements.TimerExtension implements class System.Activities.Hosting.IWorkflowInstanceExtension, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Statements.DurableTimerExtension" />
  <TypeSignature Language="VB.NET" Value="Public Class DurableTimerExtension&#xA;Inherits TimerExtension&#xA;Implements IDisposable, IWorkflowInstanceExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class DurableTimerExtension : System::Activities::Statements::TimerExtension, IDisposable, System::Activities::Hosting::IWorkflowInstanceExtension" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Statements.TimerExtension</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Activities.Hosting.IWorkflowInstanceExtension</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Representa una extensión de temporizador de actividad que se puede hacer persistir.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Activities.Statements.DurableTimerExtension> objeto solo puede asociarse con una instancia de flujo de trabajo único. Si un <xref:System.Activities.Statements.DurableTimerExtension> objeto se usa con más de una instancia de flujo de trabajo, un <xref:System.InvalidOperationException> se produce con el siguiente mensaje:  
  
```Output  
This TimerExtension has already been attached to a workflow instance.  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DurableTimerExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.DurableTimerExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DurableTimerExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Crea una nueva instancia de la clase <see cref="T:System.Activities.Statements.DurableTimerExtension" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.DurableTimerExtension.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finaliza todos los temporizadores registrados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdditionalExtensions">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;object&gt; GetAdditionalExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetAdditionalExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.DurableTimerExtension.GetAdditionalExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Overridable Function GetAdditionalExtensions () As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetAdditionalExtensions();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Hosting.IWorkflowInstanceExtension.GetAdditionalExtensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Activities.Statements.DurableTimerExtension/&lt;GetAdditionalExtensions&gt;d__16))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve un enumerador que recorre en iteración la colección de extensiones de temporizador.</summary>
        <returns>Enumerador.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCancelTimer">
      <MemberSignature Language="C#" Value="protected override void OnCancelTimer (System.Activities.Bookmark bookmark);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCancelTimer(class System.Activities.Bookmark bookmark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.DurableTimerExtension.OnCancelTimer(System.Activities.Bookmark)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCancelTimer(System::Activities::Bookmark ^ bookmark);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
      </Parameters>
      <Docs>
        <param name="bookmark">Punto en que un flujo de trabajo o actividad pueden esperar pasivamente a ser reanudados cuando caduque el objeto de temporizador.</param>
        <summary>Quita un objeto de temporizador de la tabla de temporizadores registrados para la operación del flujo de trabajo actual.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRegisterTimer">
      <MemberSignature Language="C#" Value="protected override void OnRegisterTimer (TimeSpan timeout, System.Activities.Bookmark bookmark);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRegisterTimer(valuetype System.TimeSpan timeout, class System.Activities.Bookmark bookmark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.DurableTimerExtension.OnRegisterTimer(System.TimeSpan,System.Activities.Bookmark)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRegisterTimer(TimeSpan timeout, System::Activities::Bookmark ^ bookmark);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
      </Parameters>
      <Docs>
        <param name="timeout">Objeto de intervalo de tiempo que se agrega a la entrada de la tabla de registro de temporizadores en una operación del flujo de trabajo junto con información de devolución de llamada.</param>
        <param name="bookmark">Punto en que un flujo de trabajo o actividad pueden esperar pasivamente a ser reanudados cuando caduque un objeto de temporizador.</param>
        <summary>Agrega un objeto de temporizador que contiene el intervalo de tiempo especificado e información del marcador a la tabla de temporizadores registrados para la operación del flujo de trabajo actual.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInstance">
      <MemberSignature Language="C#" Value="public virtual void SetInstance (System.Activities.Hosting.WorkflowInstanceProxy instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInstance(class System.Activities.Hosting.WorkflowInstanceProxy instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.DurableTimerExtension.SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetInstance (instance As WorkflowInstanceProxy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetInstance(System::Activities::Hosting::WorkflowInstanceProxy ^ instance);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Hosting.IWorkflowInstanceExtension.SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.Hosting.WorkflowInstanceProxy" />
      </Parameters>
      <Docs>
        <param name="instance">Instancia del flujo de trabajo que debe establecerse como actual.</param>
        <summary>Establece la instancia de flujo de trabajo especificada como la instancia actual.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Activities.Statements.DurableTimerExtension> objeto solo puede asociarse con una instancia de flujo de trabajo único. Si un <xref:System.Activities.Statements.DurableTimerExtension> objeto se usa con más de una instancia de flujo de trabajo, un <xref:System.InvalidOperationException> se produce con el siguiente mensaje:  
  
```Output  
This TimerExtension has already been attached to a workflow instance.  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>