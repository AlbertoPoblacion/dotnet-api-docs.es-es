<Type Name="CompensableActivity" FullName="System.Activities.Statements.CompensableActivity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="353e23561547d68de2f582e8cc37f44fcb780871" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CompensableActivity : System.Activities.NativeActivity&lt;System.Activities.Statements.CompensationToken&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CompensableActivity extends System.Activities.NativeActivity`1&lt;class System.Activities.Statements.CompensationToken&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Statements.CompensableActivity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CompensableActivity&#xA;Inherits NativeActivity(Of CompensationToken)" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompensableActivity sealed : System::Activities::NativeActivity&lt;System::Activities::Statements::CompensationToken ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.NativeActivity&lt;System.Activities.Statements.CompensationToken&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TResult">System.Activities.Statements.CompensationToken</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Body")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5d488-101">Una actividad que admite la compensación de sus actividades secundarias.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5d488-101">An activity that supports compensation of its child activities.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d488-102">La clase <xref:System.Activities.Statements.CompensableActivity> permite a los desarrolladores de software especificar una actividad <xref:System.Activities.Statements.CompensableActivity.Body%2A> que define una tarea de ejecución prolongada que realiza su lógica de negocios básica.</span><span class="sxs-lookup"><span data-stu-id="5d488-102"><xref:System.Activities.Statements.CompensableActivity> allows a developer to specify a <xref:System.Activities.Statements.CompensableActivity.Body%2A> activity that defines a long-running task that performs their core business logic.</span></span> <span data-ttu-id="5d488-103">También permite al desarrollador de software especificar opcionalmente una compensación y una actividad de confirmación para programar la lógica de negocios adecuada en caso de que se produzcan errores o tras la realización correcta de <xref:System.Activities.Statements.CompensableActivity.Body%2A>.</span><span class="sxs-lookup"><span data-stu-id="5d488-103">It also allows the developer to optionally specify a compensation and confirmation activity to schedule appropriate business logic in the event of errors or successful completion of the <xref:System.Activities.Statements.CompensableActivity.Body%2A>.</span></span> <span data-ttu-id="5d488-104">La compensación y confirmación de <xref:System.Activities.Statements.CompensableActivity> se invocan usando la clase <xref:System.Activities.Statements.CompensationToken> devuelva por <xref:System.Activities.Statements.CompensableActivity>.</span><span class="sxs-lookup"><span data-stu-id="5d488-104">Compensation and confirmation of a <xref:System.Activities.Statements.CompensableActivity> is invoked by using the <xref:System.Activities.Statements.CompensationToken> returned by the <xref:System.Activities.Statements.CompensableActivity>.</span></span> <span data-ttu-id="5d488-105"><xref:System.Activities.Statements.CompensationToken> es un objeto opaco y tipado devuelvo tras finalizar correctamente un <xref:System.Activities.Statements.CompensableActivity> la actividad <xref:System.Activities.Statements.CompensableActivity.Body%2A>.</span><span class="sxs-lookup"><span data-stu-id="5d488-105"><xref:System.Activities.Statements.CompensationToken> is an opaque, typed object returned after successful completion of a <xref:System.Activities.Statements.CompensableActivity> activity’s <xref:System.Activities.Statements.CompensableActivity.Body%2A>.</span></span> <span data-ttu-id="5d488-106">Las actividades <xref:System.Activities.Statements.CompensationToken> y <xref:System.Activities.Statements.Confirm> utilizan este objeto <xref:System.Activities.Statements.Compensate> para invocar explícitamente la confirmación y compensación de una <xref:System.Activities.Statements.CompensableActivity>.</span><span class="sxs-lookup"><span data-stu-id="5d488-106">This <xref:System.Activities.Statements.CompensationToken> is used by the <xref:System.Activities.Statements.Confirm> and <xref:System.Activities.Statements.Compensate> activities to explicitly invoke confirmation and compensation of a <xref:System.Activities.Statements.CompensableActivity>.</span></span> <span data-ttu-id="5d488-107">El objeto <xref:System.Activities.Statements.CompensableActivity> se puede componer en una forma jerárquica anidada en el flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="5d488-107"><xref:System.Activities.Statements.CompensableActivity> can be composed in a nested hierarchical fashion in the workflow.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="5d488-108"> [Modelo de programación de compensación](http://msdn.microsoft.com/library/29e5442c-1df7-401d-a6ca-746e617cbf9f).</span><span class="sxs-lookup"><span data-stu-id="5d488-108"> [Compensation Programming Model](http://msdn.microsoft.com/library/29e5442c-1df7-401d-a6ca-746e617cbf9f).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompensableActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.CompensableActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompensableActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5d488-109">Inicializa una nueva instancia de la clase <see cref="T:System.Activities.Statements.CompensableActivity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d488-109">Initializes a new instance of the <see cref="T:System.Activities.Statements.CompensableActivity" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public System.Activities.Activity Body { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity Body" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.CompensableActivity.Body" />
      <MemberSignature Language="VB.NET" Value="Public Property Body As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity ^ Body { System::Activities::Activity ^ get(); void set(System::Activities::Activity ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Variables")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d488-110">Obtiene o establece la actividad que se programa cuando se ejecuta la clase <see cref="T:System.Activities.Statements.CompensableActivity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d488-110">Gets or sets the activity that is scheduled when the <see cref="T:System.Activities.Statements.CompensableActivity" /> executes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5d488-111">La actividad que se programa cuando se ejecuta el objeto <see cref="T:System.Activities.Statements.CompensableActivity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d488-111">The activity that is scheduled when the <see cref="T:System.Activities.Statements.CompensableActivity" /> executes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d488-112">Esta propiedad es de solo lectura en runtime.</span><span class="sxs-lookup"><span data-stu-id="5d488-112">This property is read-only at runtime.</span></span> <span data-ttu-id="5d488-113">Si el valor se establece en runtime, se produce una excepción <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="5d488-113">If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CacheMetadata(valuetype System.Activities.NativeActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.CompensableActivity.CacheMetadata(System.Activities.NativeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CacheMetadata (metadata As NativeActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CacheMetadata(System::Activities::NativeActivityMetadata metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.NativeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected override void Cancel (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Cancel(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.CompensableActivity.Cancel(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Cancel (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Cancel(System::Activities::NativeActivityContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancellationHandler">
      <MemberSignature Language="C#" Value="public System.Activities.Activity CancellationHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity CancellationHandler" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.CompensableActivity.CancellationHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property CancellationHandler As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity ^ CancellationHandler { System::Activities::Activity ^ get(); void set(System::Activities::Activity ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Body")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d488-114">Obtiene o establece la actividad que está programada cuando se cancela la actividad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d488-114">Gets or sets the activity that is scheduled when the activity is canceled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5d488-115">La actividad que está programada cuando se cancela el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d488-115">The activity that is scheduled when the activity is canceled.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d488-116">La propiedad <xref:System.Activities.Statements.CompensableActivity.CancellationHandler%2A> se puede utilizar para especificar la lógica de cancelación personalizada para el objeto <xref:System.Activities.Statements.CompensableActivity.Body%2A> de <xref:System.Activities.Statements.CompensableActivity>.</span><span class="sxs-lookup"><span data-stu-id="5d488-116"><xref:System.Activities.Statements.CompensableActivity.CancellationHandler%2A> can be used to specify custom cancelation logic for the <xref:System.Activities.Statements.CompensableActivity.Body%2A> of the <xref:System.Activities.Statements.CompensableActivity>.</span></span>  
  
 <span data-ttu-id="5d488-117">Esta propiedad es de solo lectura en runtime.</span><span class="sxs-lookup"><span data-stu-id="5d488-117">This property is read-only at runtime.</span></span> <span data-ttu-id="5d488-118">Si el valor se establece en runtime, se produce una excepción <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="5d488-118">If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInduceIdle">
      <MemberSignature Language="C#" Value="protected override bool CanInduceIdle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInduceIdle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.CompensableActivity.CanInduceIdle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CanInduceIdle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanInduceIdle { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompensationHandler">
      <MemberSignature Language="C#" Value="public System.Activities.Activity CompensationHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity CompensationHandler" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.CompensableActivity.CompensationHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property CompensationHandler As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity ^ CompensationHandler { System::Activities::Activity ^ get(); void set(System::Activities::Activity ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("CancellationHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d488-119">Obtiene o establece la actividad que está programada cuando la compensación se realiza en el objeto <see cref="T:System.Activities.Statements.CompensableActivity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d488-119">Gets or sets the activity that is scheduled when compensation is performed on the <see cref="T:System.Activities.Statements.CompensableActivity" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5d488-120">La actividad que está programada cuando la compensación se realiza en el objeto <see cref="T:System.Activities.Statements.CompensableActivity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d488-120">The activity that is scheduled when compensation is performed on the <see cref="T:System.Activities.Statements.CompensableActivity" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d488-121">La propiedad <xref:System.Activities.Statements.CompensableActivity.CompensationHandler%2A> se puede utilizar para especificar la lógica de compensación personalizada para el objeto <xref:System.Activities.Statements.CompensableActivity.Body%2A> de <xref:System.Activities.Statements.CompensableActivity>.</span><span class="sxs-lookup"><span data-stu-id="5d488-121"><xref:System.Activities.Statements.CompensableActivity.CompensationHandler%2A> can be used to specify custom compensation logic for the <xref:System.Activities.Statements.CompensableActivity.Body%2A> of the <xref:System.Activities.Statements.CompensableActivity>.</span></span>  
  
 <span data-ttu-id="5d488-122">Esta propiedad es de solo lectura en runtime.</span><span class="sxs-lookup"><span data-stu-id="5d488-122">This property is read-only at runtime.</span></span> <span data-ttu-id="5d488-123">Si el valor se establece en runtime, se produce una excepción <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="5d488-123">If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfirmationHandler">
      <MemberSignature Language="C#" Value="public System.Activities.Activity ConfirmationHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity ConfirmationHandler" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.CompensableActivity.ConfirmationHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property ConfirmationHandler As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity ^ ConfirmationHandler { System::Activities::Activity ^ get(); void set(System::Activities::Activity ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("CompensationHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d488-124">Obtiene o establece la actividad que está programada cuando se realiza la confirmación para <see cref="T:System.Activities.Statements.CompensableActivity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d488-124">Gets or sets the activity that is scheduled when confirmation is performed for this <see cref="T:System.Activities.Statements.CompensableActivity" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5d488-125">La actividad que está programada cuando se realiza la confirmación para esta <see cref="T:System.Activities.Statements.CompensableActivity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d488-125">The activity that is scheduled when confirmation is performed for this <see cref="T:System.Activities.Statements.CompensableActivity" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d488-126">La propiedad <xref:System.Activities.Statements.CompensableActivity.ConfirmationHandler%2A> se puede utilizar para especificar la lógica de confirmación personalizada para el objeto <xref:System.Activities.Statements.CompensableActivity.Body%2A> de <xref:System.Activities.Statements.CompensableActivity>.</span><span class="sxs-lookup"><span data-stu-id="5d488-126"><xref:System.Activities.Statements.CompensableActivity.ConfirmationHandler%2A> can be used to specify custom confirmation logic for the <xref:System.Activities.Statements.CompensableActivity.Body%2A> of the <xref:System.Activities.Statements.CompensableActivity>.</span></span>  
  
 <span data-ttu-id="5d488-127">Esta propiedad es de solo lectura en runtime.</span><span class="sxs-lookup"><span data-stu-id="5d488-127">This property is read-only at runtime.</span></span> <span data-ttu-id="5d488-128">Si el valor se establece en runtime, se produce una excepción <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="5d488-128">If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override void Execute (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Execute(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.CompensableActivity.Execute(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Execute (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Execute(System::Activities::NativeActivityContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateDynamicUpdateMap">
      <MemberSignature Language="C#" Value="protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCreateDynamicUpdateMap(class System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, class System.Activities.Activity originalActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.CompensableActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnCreateDynamicUpdateMap (metadata As NativeActivityUpdateMapMetadata, originalActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCreateDynamicUpdateMap(System::Activities::DynamicUpdate::NativeActivityUpdateMapMetadata ^ metadata, System::Activities::Activity ^ originalActivity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata" />
        <Parameter Name="originalActivity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <param name="originalActivity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Variables">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt; Variables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Variable&gt; Variables" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.CompensableActivity.Variables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Variables As Collection(Of Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Activities::Variable ^&gt; ^ Variables { System::Collections::ObjectModel::Collection&lt;System::Activities::Variable ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d488-129">Obtiene la colección de objetos <see cref="T:System.WorkflowModel.Variable" /> para esta <see cref="T:System.Activities.Statements.CompensableActivity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d488-129">Gets the collection of <see cref="T:System.WorkflowModel.Variable" /> objects for this <see cref="T:System.Activities.Statements.CompensableActivity" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5d488-130">La colección de objetos <see cref="T:System.WorkflowModel.Variable" /> para esta <see cref="T:System.Activities.Statements.CompensableActivity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d488-130">The collection of <see cref="T:System.WorkflowModel.Variable" /> objects for this <see cref="T:System.Activities.Statements.CompensableActivity" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>