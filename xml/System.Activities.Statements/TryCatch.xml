<Type Name="TryCatch" FullName="System.Activities.Statements.TryCatch">
  <TypeSignature Language="C#" Value="public sealed class TryCatch : System.Activities.NativeActivity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TryCatch extends System.Activities.NativeActivity" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Statements.TryCatch" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TryCatch&#xA;Inherits NativeActivity" />
  <TypeSignature Language="C++ CLI" Value="public ref class TryCatch sealed : System::Activities::NativeActivity" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.NativeActivity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e53fc-101">Contiene las actividades que va a ejecutar el motor de tiempo de ejecución del flujo de trabajo en un bloque de control de excepciones.</span><span class="sxs-lookup"><span data-stu-id="e53fc-101">Contains activities to be executed by the workflow runtime in an exception handling block.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e53fc-102">El <xref:System.Activities.Statements.TryCatch.Finally%2A> miembro de actividad de un <xref:System.Activities.Statements.TryCatch> actividad que es el elemento secundario de un <xref:System.Activities.Statements.TransactionScope> no se ejecutará si se propaga una excepción no controlada más allá de la <xref:System.Activities.Statements.TransactionScope> límite.</span><span class="sxs-lookup"><span data-stu-id="e53fc-102">The <xref:System.Activities.Statements.TryCatch.Finally%2A> activity member of a <xref:System.Activities.Statements.TryCatch> activity that is the child of a <xref:System.Activities.Statements.TransactionScope> will not execute if an unhandled exception propagates past the <xref:System.Activities.Statements.TransactionScope> boundary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e53fc-103">En el siguiente ejemplo de código se muestra la creación de una actividad de la clase <xref:System.Activities.Statements.TransactionScope>.</span><span class="sxs-lookup"><span data-stu-id="e53fc-103">The following code sample demonstrates creating a <xref:System.Activities.Statements.TransactionScope> activity.</span></span> <span data-ttu-id="e53fc-104">Este ejemplo es de la [anidamiento de TransactionScope dentro de un servicio](~/docs/framework/windows-workflow-foundation/samples/nesting-of-transactionscope-within-a-service.md) ejemplo.</span><span class="sxs-lookup"><span data-stu-id="e53fc-104">This example is from the [Nesting of TransactionScope within a service](~/docs/framework/windows-workflow-foundation/samples/nesting-of-transactionscope-within-a-service.md) sample.</span></span>  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TryCatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.TryCatch.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TryCatch();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e53fc-105">Crea una nueva instancia de la clase <see cref="M:System.Activities.Statements.TryCatch.#ctor" />.</span><span class="sxs-lookup"><span data-stu-id="e53fc-105">Creates a new instance of the <see cref="M:System.Activities.Statements.TryCatch.#ctor" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e53fc-106">En el siguiente ejemplo de código se muestra la creación de una actividad de la clase <xref:System.Activities.Statements.TransactionScope>.</span><span class="sxs-lookup"><span data-stu-id="e53fc-106">The following code sample demonstrates creating a <xref:System.Activities.Statements.TransactionScope> activity.</span></span> <span data-ttu-id="e53fc-107">Este ejemplo es de la [anidamiento de TransactionScope dentro de un servicio](~/docs/framework/windows-workflow-foundation/samples/nesting-of-transactionscope-within-a-service.md) ejemplo.</span><span class="sxs-lookup"><span data-stu-id="e53fc-107">This example is from the [Nesting of TransactionScope within a service](~/docs/framework/windows-workflow-foundation/samples/nesting-of-transactionscope-within-a-service.md) sample.</span></span>  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CacheMetadata(valuetype System.Activities.NativeActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.TryCatch.CacheMetadata(System.Activities.NativeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CacheMetadata (metadata As NativeActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CacheMetadata(System::Activities::NativeActivityMetadata metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.NativeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected override void Cancel (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Cancel(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.TryCatch.Cancel(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Cancel (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Cancel(System::Activities::NativeActivityContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Catches">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.Statements.Catch&gt; Catches { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Statements.Catch&gt; Catches" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.TryCatch.Catches" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Catches As Collection(Of Catch)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Activities::Statements::Catch ^&gt; ^ Catches { System::Collections::ObjectModel::Collection&lt;System::Activities::Statements::Catch ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Try")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.Statements.Catch&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e53fc-108">La colección de elementos <see langword="Catch" /> que se va a comprobar cuando la actividad <see cref="P:System.Activities.Statements.TryCatch.Try" /> produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="e53fc-108">The collection of <see langword="Catch" /> elements to be checked when the <see cref="P:System.Activities.Statements.TryCatch.Try" /> activity throws an exception.</span></span></summary>
        <value><span data-ttu-id="e53fc-109">Colección de capturas.</span><span class="sxs-lookup"><span data-stu-id="e53fc-109">The catch collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e53fc-110">Las capturas se evalúan en el orden en el que se agregan a la colección.</span><span class="sxs-lookup"><span data-stu-id="e53fc-110">Catches are evaluated in the order in which they are added to the collection.</span></span> <span data-ttu-id="e53fc-111">Si se encuentra una coincidencia exacta para el tipo de excepción, la búsqueda de coincidencias <xref:System.Activities.Statements.Catch> se ejecuta la actividad.</span><span class="sxs-lookup"><span data-stu-id="e53fc-111">If an exact match for the exception type is found, the matching <xref:System.Activities.Statements.Catch> activity is executed.</span></span>  <span data-ttu-id="e53fc-112">Si no se encuentra ninguna coincidencia exacta, la <xref:System.Activities.Statements.Catch> con la coincidencia más cercana <xref:System.Activities.Statements.Catch.ExceptionType%2A> se ejecuta.</span><span class="sxs-lookup"><span data-stu-id="e53fc-112">If no exact match is found, the <xref:System.Activities.Statements.Catch> with the closest matching <xref:System.Activities.Statements.Catch.ExceptionType%2A> is executed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e53fc-113">En el siguiente código de ejemplo, se muestra la configuración de la propiedad Catches de una actividad de la clase <xref:System.Activities.Statements.TransactionScope>.</span><span class="sxs-lookup"><span data-stu-id="e53fc-113">The following code sample demonstrates setting the Catches property of a <xref:System.Activities.Statements.TransactionScope> activity.</span></span> <span data-ttu-id="e53fc-114">Este ejemplo es de la [anidamiento de TransactionScope dentro de un servicio](~/docs/framework/windows-workflow-foundation/samples/nesting-of-transactionscope-within-a-service.md) ejemplo.</span><span class="sxs-lookup"><span data-stu-id="e53fc-114">This example is from the [Nesting of TransactionScope within a service](~/docs/framework/windows-workflow-foundation/samples/nesting-of-transactionscope-within-a-service.md) sample.</span></span>  
  
 <span data-ttu-id="e53fc-115">Una vez situados en el diseñador, <xref:System.Activities.Statements.Catch> no se pueden reordenar las actividades en el diseñador.</span><span class="sxs-lookup"><span data-stu-id="e53fc-115">Once placed in the designer, <xref:System.Activities.Statements.Catch> activities cannot be reordered in the designer.</span></span>  <span data-ttu-id="e53fc-116">Para volver a ordenar la colección de <xref:System.Activities.Statements.Catch> actividades, puede eliminar y volver a agregarlos en el orden correcto o utilizar la vista xaml (código) para el flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="e53fc-116">To reorder the collection of <xref:System.Activities.Statements.Catch> activities, either delete and re-add them in the correct order, or use the xaml (code) view for the workflow.</span></span>  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override void Execute (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Execute(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.TryCatch.Execute(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Execute (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Execute(System::Activities::NativeActivityContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finally">
      <MemberSignature Language="C#" Value="public System.Activities.Activity Finally { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity Finally" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.TryCatch.Finally" />
      <MemberSignature Language="VB.NET" Value="Public Property Finally As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity ^ Finally { System::Activities::Activity ^ get(); void set(System::Activities::Activity ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Catches")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e53fc-117">La actividad que se va a ejecutar cuando la clase <see cref="P:System.Activities.Statements.TryCatch.Try" /> y cualquiera de las actividades necesarias en la colección <see cref="P:System.Activities.Statements.TryCatch.Catches" /> completen la ejecución.</span><span class="sxs-lookup"><span data-stu-id="e53fc-117">The activity to be executed when the <see cref="P:System.Activities.Statements.TryCatch.Try" /> and any necessary activities in the <see cref="P:System.Activities.Statements.TryCatch.Catches" /> collection complete execution.</span></span></summary>
        <value><span data-ttu-id="e53fc-118">La actividad que representa la lógica de <see cref="P:System.Activities.Statements.TryCatch.Finally" />.</span><span class="sxs-lookup"><span data-stu-id="e53fc-118">The activity that represents the <see cref="P:System.Activities.Statements.TryCatch.Finally" /> logic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e53fc-119">El ejemplo de código siguiente se muestra cómo establecer el <xref:System.Activities.Statements.TryCatch.Finally%2A> propiedad de un <xref:System.Activities.Statements.TransactionScope> actividad.</span><span class="sxs-lookup"><span data-stu-id="e53fc-119">The following code sample demonstrates setting the <xref:System.Activities.Statements.TryCatch.Finally%2A> property of a <xref:System.Activities.Statements.TransactionScope> activity.</span></span> <span data-ttu-id="e53fc-120">Este ejemplo es de la [anidamiento de TransactionScope dentro de un servicio](~/docs/framework/windows-workflow-foundation/samples/nesting-of-transactionscope-within-a-service.md) ejemplo.</span><span class="sxs-lookup"><span data-stu-id="e53fc-120">This example is from the [Nesting of TransactionScope within a service](~/docs/framework/windows-workflow-foundation/samples/nesting-of-transactionscope-within-a-service.md) sample.</span></span>  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateDynamicUpdateMap">
      <MemberSignature Language="C#" Value="protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCreateDynamicUpdateMap(class System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, class System.Activities.Activity originalActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.TryCatch.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnCreateDynamicUpdateMap (metadata As NativeActivityUpdateMapMetadata, originalActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCreateDynamicUpdateMap(System::Activities::DynamicUpdate::NativeActivityUpdateMapMetadata ^ metadata, System::Activities::Activity ^ originalActivity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata" />
        <Parameter Name="originalActivity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <param name="originalActivity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Try">
      <MemberSignature Language="C#" Value="public System.Activities.Activity Try { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity Try" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.TryCatch.Try" />
      <MemberSignature Language="VB.NET" Value="Public Property Try As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity ^ Try { System::Activities::Activity ^ get(); void set(System::Activities::Activity ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Variables")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e53fc-121">La actividad se ejecuta primero cuando <see cref="T:System.Activities.Statements.TryCatch" /> se ejecuta.</span><span class="sxs-lookup"><span data-stu-id="e53fc-121">The activity first executed when the <see cref="T:System.Activities.Statements.TryCatch" /> executes.</span></span></summary>
        <value><span data-ttu-id="e53fc-122">La actividad.</span><span class="sxs-lookup"><span data-stu-id="e53fc-122">The activity.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e53fc-123">En el siguiente ejemplo de código, se muestra la configuración de la propiedad Try de una actividad de la clase <xref:System.Activities.Statements.TransactionScope>.</span><span class="sxs-lookup"><span data-stu-id="e53fc-123">The following code sample demonstrates setting the Try property of a <xref:System.Activities.Statements.TransactionScope> activity.</span></span> <span data-ttu-id="e53fc-124">Este ejemplo es de la [anidamiento de TransactionScope dentro de un servicio](~/docs/framework/windows-workflow-foundation/samples/nesting-of-transactionscope-within-a-service.md) ejemplo.</span><span class="sxs-lookup"><span data-stu-id="e53fc-124">This example is from the [Nesting of TransactionScope within a service](~/docs/framework/windows-workflow-foundation/samples/nesting-of-transactionscope-within-a-service.md) sample.</span></span>  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateInstance">
      <MemberSignature Language="C#" Value="protected override void UpdateInstance (System.Activities.DynamicUpdate.NativeActivityUpdateContext updateContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void UpdateInstance(class System.Activities.DynamicUpdate.NativeActivityUpdateContext updateContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.TryCatch.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub UpdateInstance (updateContext As NativeActivityUpdateContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void UpdateInstance(System::Activities::DynamicUpdate::NativeActivityUpdateContext ^ updateContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updateContext" Type="System.Activities.DynamicUpdate.NativeActivityUpdateContext" />
      </Parameters>
      <Docs>
        <param name="updateContext">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Variables">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt; Variables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Variable&gt; Variables" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.TryCatch.Variables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Variables As Collection(Of Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Activities::Variable ^&gt; ^ Variables { System::Collections::ObjectModel::Collection&lt;System::Activities::Variable ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e53fc-125">Colección de variables contenidas.</span><span class="sxs-lookup"><span data-stu-id="e53fc-125">The collection of contained variables.</span></span></summary>
        <value><span data-ttu-id="e53fc-126">La colección de variables.</span><span class="sxs-lookup"><span data-stu-id="e53fc-126">The collection of variables.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>