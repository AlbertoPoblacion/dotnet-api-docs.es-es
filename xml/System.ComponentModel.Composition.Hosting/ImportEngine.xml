<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ImportEngine.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b14c4734da89634da92a00f16b3e0a973c803790.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b14c4734da89634da92a00f16b3e0a973c803790</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Hosting.ImportEngine">
          <source>Performs composition for containers.</source>
          <target state="translated">Realiza la composición para los contenedores.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.ImportEngine">
          <source>This class is used internally by <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph>.</source>
          <target state="translated">Esta clase se utiliza internamente por <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.ImportEngine">
          <source>You should generally not use it unless you are authoring a container.</source>
          <target state="translated">Es por lo general no deberían utilizarse a menos que se va a crear un contenedor.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.ImportEngine">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Este tipo implementa la <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interfaz.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.ImportEngine">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Cuando haya terminado de utilizar el tipo, debe eliminar del mismo directa o indirectamente.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.ImportEngine">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Para deshacerse del tipo directamente, llame a su <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> método en un <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> bloque.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.ImportEngine">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Para deshacerse de él indirectamente, use una construcción de lenguaje como <ph id="ph1">`using`</ph> (en C#) o <ph id="ph2">`Using`</ph> (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.ImportEngine">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Para obtener más información, vea la sección "Uso de un objeto que implementa IDisposable" en el <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> tema de la interfaz.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Hosting.ImportEngine">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> that provides the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /&gt;</ph> access to <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> que proporciona a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /&gt;</ph> acceso a los objetos <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> that provides the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /&gt;</ph> access to <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> que proporciona a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /&gt;</ph> acceso a los objetos <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if thread safety is required; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si es necesaria la seguridad para subprocesos; de lo contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /&gt;</ph> class, optionally in thread-safe mode.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /&gt;</ph>, opcionalmente en modo seguro para procesos.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider,System.ComponentModel.Composition.Hosting.CompositionOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> that provides the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /&gt;</ph> access to <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> que proporciona a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /&gt;</ph> acceso a los objetos <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider,System.ComponentModel.Composition.Hosting.CompositionOptions)">
          <source>An object that specifies options that affect the behavior of the engine.</source>
          <target state="translated">Un objeto que especifica las opciones que afectan al comportamiento del motor.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider,System.ComponentModel.Composition.Hosting.CompositionOptions)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /&gt;</ph> class with the specified options.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /&gt;</ph> con las opciones especificadas.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Hosting.ImportEngine">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /&gt;</ph>.</source>
          <target state="translated">Libera los recursos que usa <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /&gt;</ph> class.</source>
          <target state="translated">Libera todos los recursos usados por la instancia actual de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.ImportEngine&gt;</ph>.</source>
          <target state="translated">Llame a <ph id="ph1">`Dispose`</ph> cuando haya terminado de usar <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.ImportEngine&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.ImportEngine&gt;</ph> in an unusable state.</source>
          <target state="translated">El método <ph id="ph1">`Dispose`</ph> deja el <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.ImportEngine&gt;</ph> en un estado no utilizable.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.ImportEngine&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.ComponentModel.Composition.Hosting.ImportEngine&gt;</ph> was occupying.</source>
          <target state="translated">Después de llamar a <ph id="ph1">`Dispose`</ph>, debe liberar todas las referencias a la <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.ImportEngine&gt;</ph> para que el recolector de elementos no utilizados pueda reclamar la memoria que el <ph id="ph3">&lt;xref:System.ComponentModel.Composition.Hosting.ImportEngine&gt;</ph> estaba ocupando.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>limpiar recursos no administrados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> y <bpt id="p2">[</bpt>implementa un método Dispose<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.ImportEngine&gt;</ph>.</source>
          <target state="translated">Realice siempre una llamada a <ph id="ph1">`Dispose`</ph> antes de liberar la última referencia al objeto <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.ImportEngine&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.ImportEngine&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">En caso contrario, los recursos que está usando no se liberarán hasta que el recolector de elementos no utilizados llame al método <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.ImportEngine&gt;</ph> del objeto <ph id="ph2">`Finalize`</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar tanto recursos administrados como no administrados; es <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar únicamente recursos no administrados.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libera los recursos no administrados que usa <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /&gt;</ph> y, de forma opcional, libera los recursos administrados.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ImportEngine.PreviewImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <source>The part to preview the imports of.</source>
          <target state="translated">Elemento de cuyas importaciones se va a obtener una vista previa.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ImportEngine.PreviewImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <source>The composition transaction to use, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> for no composition transaction.</source>
          <target state="translated">Transacción de composición que se va a usar o <ph id="ph1">&lt;see langword="null" /&gt;</ph> en caso de que no haya ninguna transacción de composición.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ImportEngine.PreviewImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <source>Previews all the required imports for the specified part to make sure that they can be satisfied, without actually setting them.</source>
          <target state="translated">Proporciona una vista previa de todas las importaciones necesarias para que el elemento especificado tenga la seguridad de que pueden satisfacerse sin que sea necesario establecerlas realmente.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ImportEngine.ReleaseImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <source>The part to release the imports of.</source>
          <target state="translated">Elemento cuyas importaciones se van a liberar.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ImportEngine.ReleaseImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <source>The composition transaction to use, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> for no composition transaction.</source>
          <target state="translated">Transacción de composición que se va a usar o <ph id="ph1">&lt;see langword="null" /&gt;</ph> en caso de que no haya ninguna transacción de composición.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ImportEngine.ReleaseImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <source>Releases all the exports used to satisfy the imports of the specified part.</source>
          <target state="translated">Libera todas las exportaciones usadas para satisfacer las importaciones del elemento especificado.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ImportEngine.SatisfyImports(System.ComponentModel.Composition.Primitives.ComposablePart)">
          <source>The part to satisfy the imports of.</source>
          <target state="translated">Elemento cuyas importaciones se van a satisfacer.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ImportEngine.SatisfyImports(System.ComponentModel.Composition.Primitives.ComposablePart)">
          <source>Satisfies the imports of the specified part.</source>
          <target state="translated">Satisface las importaciones del elemento especificado.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ImportEngine.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
          <source>The part to satisfy the imports of.</source>
          <target state="translated">Elemento cuyas importaciones se van a satisfacer.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ImportEngine.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
          <source>Satisfies the imports of the specified part without registering them for recomposition.</source>
          <target state="translated">Satisface las importaciones del elemento especificado sin registrarlas para su recomposición.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>