<Type Name="SignedXml" FullName="System.Security.Cryptography.Xml.SignedXml">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1f8ac401693b149ab07e9bb6addec91b3ccb14b1" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33683220" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SignedXml" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SignedXml extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.SignedXml" />
  <TypeSignature Language="VB.NET" Value="Public Class SignedXml" />
  <TypeSignature Language="C++ CLI" Value="public ref class SignedXml" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona un contenedor en un objeto de firma XML base para facilitar la creación de firmas XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.Cryptography.Xml.SignedXml> clase es la implementación de .NET Framework de World Wide Web Consortium (W3C) [XML Signature Syntax y especificación del procesamiento](https://www.w3.org/TR/xmldsig-core/), también conocido como XMLDSIG (firma Digital XML).  XMLDSIG es una manera interoperable, basada en estándares para firmar y comprobar todo o parte de un documento XML u otros datos que se puede asignar un identificador uniforme de recursos (URI).  
  
 Use la <xref:System.Security.Cryptography.Xml.SignedXml> clase siempre que necesite compartir datos XML firmados entre aplicaciones u organizaciones de una manera estándar.  Los datos firmados mediante esta clase pueden comprobarse con cualquier implementación de la especificación de W3C para XMLDSIG.  
  
 La <xref:System.Security.Cryptography.Xml.SignedXml> clase le permite crear los tres tipos siguientes de firmas digitales XML:  
  
|Tipo de firma|Descripción|  
|--------------------|-----------------|  
|Firma con doble cifrado|La firma se encuentra dentro del elemento XML que se está firmando.|  
|Firma de protección|El XML firmado está incluido en el <`Signature`> elemento.|  
|Firma desasociada interno|La firma y el XML firmado que se encuentran en el mismo documento, pero ningún elemento contiene el otro.|  
  
 También hay un cuarto tipo de firma que se llama a una firma desasociada externa que es cuando los datos y la firma se encuentran en documentos XML independientes. Firmas desasociadas externas no son compatibles con el <xref:System.Security.Cryptography.Xml.SignedXml> clase.  
  
## <a name="the-structure-of-an--xml-signature"></a>La estructura de una firma de XML  
 XMLDSIG crea un <`Signature`> elemento, que contiene una firma digital de un documento XML u otros datos direccionables desde un identificador URI.  El <`Signature`> elemento puede incluir opcionalmente información sobre dónde buscar una clave que comprobará la firma y qué algoritmo criptográfico se utilizó para firmar. La estructura básica es la siguiente:  
  
```xml  
  
<Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">  
    <SignedInfo>  
      <CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/>  
      <SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>  
      <Reference URI="">  
        <Transforms>  
          <Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>  
        </Transforms>  
        <DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/>  
        <DigestValue>Base64EncodedValue==</DigestValue>  
      </Reference>  
    </SignedInfo>  
    <SignatureValue>AnotherBase64EncodedValue===</SignatureValue>  
  </Signature>  
  
```  
  
 Las partes principales de esta estructura son:  
  
 El <`CanonicalizationMethod`> elemento  
 Especifica las reglas para volver a escribir el `Signature` elemento de texto/XML en bytes para validar la firma. El valor predeterminado en .NET Framework es http://www.w3.org/TR/2001/REC-xml-c14n-20010315, que identifica un algoritmo de confianza. Este elemento se representa mediante el <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A?displayProperty=nameWithType> propiedad.  
  
 El <`SignatureMethod`> elemento  
 Especifica el algoritmo utilizado para la generación y validación, lo que se aplicó a la <`Signature`> elemento que se va a generar el valor de <`SignatureValue`>. En el ejemplo anterior, el valor http://www.w3.org/2000/09/xmldsig#rsa-sha1 identifica una firma RSA PKCS1 SHA-1. Este elemento se representa mediante el <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> propiedad.  
  
 El <`SignatureValue`> elemento  
 Especifica la firma criptográfica para el <`Signature`> elemento. Si esta firma no comprobar, a continuación, en alguna parte de la <`Signature`> se ha alterado bloque y el documento se considera no válido. Siempre que el <`CanonicalizationMethod`> valor es de confianza, este valor es altamente resistente a la alteración. Este elemento se representa mediante el <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> propiedad.  
  
 El `URI` atributo de la <`Reference`> elemento  
 Especifica un objeto de datos utilizando una referencia de URI. Este atributo se representa mediante el <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=nameWithType> propiedad.  
  
-   No se especifica el `URI` configuración de atributo, es decir, el <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=nameWithType> propiedad `null`, significa que la aplicación receptora debe conocer la identidad del objeto. En la mayoría de los casos, un `null` URI se producirá una excepción. No use un `null` URI, a menos que la aplicación está interoperando con un protocolo que lo requiera.  
  
-   Establecer el `URI` atributo en una cadena vacía indica que se está firmando el elemento raíz del documento, una forma de firma con doble cifrado.  
  
-   Si el valor de `URI` atributo comienza con #, a continuación, el valor debe resolverse en un elemento del documento actual. Este formulario puede utilizarse con cualquiera de los tipos admitidos de firma (firma con doble cifrado, sobre la firma o la firma desasociada interno).  
  
-   Todo lo demás se considera una firma de un recurso externo desasociado y no es compatible con la <xref:System.Security.Cryptography.Xml.SignedXml> clase.  
  
 El <`Transforms`> elemento  
 Contiene una lista ordenada de <`Transform`> elementos que describen cómo el firmante Obtiene el objeto de datos que se va. Un algoritmo de transformación es similar al método de canonización, pero en lugar de volver a escribir la <`Signature`> elemento, vuelve a escribir el contenido identificado por la `URI` atributo de la <`Reference`> elemento. El <`Transforms`> elemento representado por la <xref:System.Security.Cryptography.Xml.TransformChain> clase.  
  
-   Cada algoritmo de transformación se define como si tomara XML (un conjunto de nodos XPath) o bytes como entrada. Si el formato de los datos actuales difiere de los requisitos de entrada de transformación, se aplican las reglas de conversión.  
  
-   Cada algoritmo de transformación se define como la producción de XML o bytes como salida.  
  
-   Si el resultado de la última algoritmo de transformación no está definido en bytes (o no se especificaron transformaciones), a continuación, el método de canonización http://www.w3.org/TR/2001/REC-xml-c14n-20010315 se utiliza como una transformación implícita (incluso si no se especificó un algoritmo diferente en el <`CanonicalizationMethod`> elemento).  
  
-   Un valor de http://www.w3.org/2000/09/xmldsig#enveloped-signature para la transformación algoritmo codifica una regla que se interpreta como quitar el <`Signature`> elemento del documento. En caso contrario, un comprobador de una firma con doble cifrado implícita del documento, incluida la firma, pero el firmante habría va el documento antes de que se aplicó la firma, dando lugar a respuestas diferentes.  
  
 El <`DigestMethod`> elemento  
 Identifica el método de síntesis (hash criptográfico) para aplicar en el contenido transformado identificado por la `URI` atributo de la <`Reference`> elemento. Esto se representa mediante el <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A?displayProperty=nameWithType> propiedad.  
  
## <a name="choosing-a-canonicalization-method"></a>Elegir un método de resolución de nombres canónicos  
 A menos que interoperar con una especificación que requiere el uso de un valor diferente, se recomienda que utilice el método de canonización predeterminado en .NET Framework, que es el algoritmo C14N XML 1.0, cuyo valor es http://www.w3.org/TR/2001/REC-xml-c14n-20010315. El algoritmo C14N XML 1.0 se requiere para ser compatibles con todas las implementaciones de XMLDSIG, especialmente ya que es una transformación final implícita que se aplicará.  
  
 Hay versiones de los algoritmos de canonización que admiten comentarios de conservación. Métodos de resolución de nombres canónicos conserva el comentario no se recomiendan porque infringe el principio de "iniciar sesión, lo que se ve". Es decir, los comentarios en un <`Signature`> elemento no afectará a la lógica de procesamiento de cómo se realiza la firma, es simplemente qué el valor de firma. Cuando se combina con un algoritmo de firma no segura, lo que permite a los comentarios se incluyen proporciona una libertad innecesarios del atacante forzar una colisión de hash, parezca un documento alterado legítimo.  En .NET Framework, se admiten sólo canonicalizers integradas de forma predeterminada. Para admitir canonicalizers adicionales o personalizados, vea el <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> propiedad. Si el documento utiliza un método de resolución de nombres canónicos que no está en la colección representada por el <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> propiedad, el <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> método devolverá `false`.  
  
> [!NOTE]
>  Una aplicación muy estable puede quitar todos los valores no espera firmantes utilizar desde el <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> colección.  
  
## <a name="are-the-reference-values-safe-from-tampering"></a>¿Son los valores de referencia seguros frente a manipulaciones?  
 Sí, el <`Reference`> valores son seguros frente a manipulaciones.  .NET framework comprueba el <`SignatureValue`> cálculo antes de procesar cualquiera de los <`Reference`> valores y sus asociados transforma y se anulará al principio para evitar las instrucciones de procesamiento que puedan ser malintencionadas.  
  
## <a name="choosing-the-elements-to-sign"></a>Elegir los elementos que se va a iniciar sesión  
 Le recomendamos que use el valor de "" para el `URI` atributo (o establecer el <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> propiedad en una cadena vacía), si es posible. Esto significa que todo el documento se considera para el cálculo de resumen, lo que significa que todo el documento está protegido contra alteraciones.  
  
 Es muy habitual ver `URI` valores en forma de los delimitadores, como #foo, que hace referencia a un elemento cuyo atributo ID es "foo". Por desgracia, es fácil para que esto se manipulen porque esto incluye sólo el contenido del elemento de destino, no en el contexto. Aprovecharse de esta distinción se conoce como XML firma ajuste (XSW).  
  
 Si la aplicación considera semántica de comentarios (que es no es común cuando trabaja con XML), debe usar "#xpointer(/)" en lugar de "" y "#xpointer(id('foo'))" en lugar de "#foo". Las versiones de #xpointer se interpretan como incluidos los comentarios, mientras que los formularios shortname son sin incluir comentarios.  
  
 Si debe aceptar los documentos que están protegidos solo parcialmente y desea asegurarse de que está leyendo el mismo contenido que la firma protegido, utilice el <xref:System.Security.Cryptography.Xml.SignedXml.GetIdElement%2A> método.  
  
## <a name="security-considerations-about-the-keyinfo-element"></a>Consideraciones de seguridad sobre el elemento KeyInfo  
 Los datos en la parte opcional <`KeyInfo`> elemento (es decir, el <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> propiedad), que contiene una clave para validar la firma no es de confianza.  
  
 En particular, cuando la <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> valor representa una clave pública RSA, DSA o ECDSA reconstrucción, el documento podría haber sido alterado, a pesar de la <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> método informar de que la firma es válida.  Esto puede ocurrir porque la entidad haciendo la manipulación solo tiene que generar una nueva clave y volver a firmar el documento modificado con esa clave nueva. Por lo tanto, a menos que la aplicación comprueba que la clave pública es un valor esperado, el documento debe tratarse como si se han alterado. Esto requiere que la aplicación examina la clave pública incrustada en el documento y compruebe con una lista de valores conocidos para el contexto del documento. Por ejemplo, si el documento podría considerarse para ser emitido por un usuario conocido, se protegerían la clave con una lista de las claves conocidas usados por ese usuario.  
  
 También puede comprobar la clave después de procesar el documento mediante el uso de la <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey%2A> método, en lugar de utilizar el <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> método. Sin embargo, para una seguridad óptima, debe comprobar la clave con antelación.  
  
 Como alternativa, considere la posibilidad de tratar el usuario registrado las claves públicas, en lugar de leer el contenido el <`KeyInfo`> elemento.  
  
## <a name="security-considerations-about-the-x509data-element"></a>Consideraciones de seguridad sobre el elemento X509Data  
 Opcional <`X509Data`> es un elemento secundario de la <`KeyInfo`> elemento y contiene uno o más X509 certificados o identificadores de X509 certificados. Los datos en el <`X509Data`> elemento no debe confiable de manera inherente.  
  
 Al comprobar un documento con los datos incrustados <`X509Data`> elemento, .NET Framework sólo comprueba que los datos se resuelve como un X509 certificado cuya clave pública puede utilizarse correctamente para validar la firma del documento. A diferencia de llamar a la <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> método con el `verifySignatureOnly` parámetro establecido en `false`, se realiza ninguna comprobación de revocación, no se comprueba ninguna cadena de confianza y no se comprueba expiración. Incluso si la aplicación extrae el certificado y lo pasa a la <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> método con el `verifySignatureOnly` parámetro establecido en `false`, que se sigue la validación no es suficiente para evitar la manipulación de documento. El certificado todavía debe comprobarse como adecuado para el documento que se está firmando.  
  
 Con un certificado de firmado incrustado puede proporcionar estrategias de rotación de claves útil, si en el <`X509Data`> sección o en el contenido del documento. Cuando se usa este enfoque una aplicación debe extraer manualmente el certificado y realizar la validación similar al:  
  
-   El certificado se emitió directamente o a través de una cadena por una entidad de certificación (CA) cuyo certificado público se incrusta en la aplicación.  
  
     Mediante la lista de confianza proporcionado por el sistema operativo sin comprobaciones adicionales, como un nombre de sujeto conocido, no es suficiente para evitar la manipulación en <xref:System.Security.Cryptography.Xml.SignedXml>.  
  
-   El certificado se comprueba que no ha expirado en el momento de la firma de documentos (o "ahora" para cerca de procesamiento de documentos en tiempo real).  
  
-   Para los certificados emitidos por una CA que admite la revocación, compruebe que el certificado no se ha revocado.  
  
-   El sujeto del certificado se verifica como apropiada para el documento actual.  
  
## <a name="choosing-the-transform-algorithm"></a>La elección del algoritmo de transformación  
 Si está interoperando con una especificación que se dicte valores específicos (por ejemplo, XrML), debe seguir la especificación.  Si tiene una firma con doble cifrado (como cuando firma todo el documento), a continuación, debe usar http://www.w3.org/2000/09/xmldsig#enveloped-signature (representado por la <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> clase). Puede especificar la transformación C14N XML implícita también, pero no es necesario.  Para una firma de protección o desasociada no transformaciones son necesarias. La transformación XML C14N implícita se encarga de todo.  
  
 Con la seguridad que se actualiza introducidos por el [boletín de seguridad de Microsoft MS16-035](https://technet.microsoft.com/en-us/library/security/ms16-035.aspx), .NET Framework ha restringido qué transformaciones se pueden usar en la comprobación de documento de forma predeterminada, con confianza transformaciones que produce <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> que se devuelva siempre `false`. En concreto, las transformaciones que requieren una entrada adicional (especificada como elementos secundarios en el archivo XML) ya no se permiten debido a su susceptibilidad de abuso por usuarios malintencionados. El W3C aconseja evitar las transformaciones de XPath y XSLT, que son las dos transformaciones principales afectadas por estas restricciones.  
  
## <a name="the-problem-with-external-references"></a>El problema con las referencias externas  
 Si una aplicación no se comprueba que las referencias externas parecen adecuadas para el contexto actual, puede ser usadas de forma que proporcione para muchas vulnerabilidades de seguridad (incluido por denegación de servicio, reflexión por denegación de servicio distribuido, divulgación de información, omisión de firma y ejecución remota de código). Incluso si una aplicación validar la referencia externa URI, se mantendría un problema del recurso que se va a cargar dos veces: una vez cuando la aplicación lo lee y otra vez cuando <xref:System.Security.Cryptography.Xml.SignedXml> lo lee. Puesto que no hay ninguna garantía de que el documento y la lectura de la aplicación compruebe pasos tienen el mismo contenido, la firma no proporciona confiabilidad.  
  
 Teniendo en cuenta los riesgos de referencias externas, <xref:System.Security.Cryptography.Xml.SignedXml> se iniciará una excepción cuando se detecta una referencia externa.  Para obtener más información acerca de este problema, consulte [artículo de Knowledge Base 3148821](https://support.microsoft.com/en-us/kb/3148821).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un documento XML completo utilizando una firma con doble cifrado.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]  
  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un solo elemento de un documento XML mediante una firma de protección.  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedXml();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un documento XML completo utilizando una firma con doble cifrado.  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un objeto direccionable de identificador uniforme de recursos (URI) mediante una firma desasociada.  
  
 [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]
 [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]
 [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]  
  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un solo elemento de un documento XML mediante una firma de protección.  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedXml (System.Xml.XmlDocument document);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDocument document) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (document As XmlDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedXml(System::Xml::XmlDocument ^ document);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
      </Parameters>
      <Docs>
        <param name="document">Objeto <see cref="T:System.Xml.XmlDocument" /> que se va a utilizar para inicializar una nueva instancia de <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> a partir del documento XML especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un documento XML completo utilizando una firma con doble cifrado.  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un objeto direccionable de identificador uniforme de recursos (URI) mediante una firma desasociada.  
  
 [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]
 [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]
 [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]  
  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un solo elemento de un documento XML mediante una firma de protección.  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="document" /> es <see langword="null" />.  
  
 O bien  
  
 El parámetro <paramref name="document" /> contiene una propiedad <see cref="P:System.Xml.XmlDocument.DocumentElement" /> con un valor nulo.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedXml (System.Xml.XmlElement elem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlElement elem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elem As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedXml(System::Xml::XmlElement ^ elem);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elem" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="elem">Objeto <see cref="T:System.Xml.XmlElement" /> que se va a utilizar para inicializar una nueva instancia de <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> a partir del objeto <see cref="T:System.Xml.XmlElement" /> especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="elem" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public void AddObject (System.Security.Cryptography.Xml.DataObject dataObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddObject(class System.Security.Cryptography.Xml.DataObject dataObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddObject(System::Security::Cryptography::Xml::DataObject ^ dataObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataObject" Type="System.Security.Cryptography.Xml.DataObject" />
      </Parameters>
      <Docs>
        <param name="dataObject">Objeto <see cref="T:System.Security.Cryptography.Xml.DataObject" /> que se va a agregar a la lista de objetos que se van a firmar.</param>
        <summary>Agrega un objeto <see cref="T:System.Security.Cryptography.Xml.DataObject" /> a la lista de objetos que se van a firmar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.Cryptography.Xml.SignedXml.AddObject%2A> método agrega un <`Object`> elemento que representa un objeto debe estar firmado para el <`Signature`> elemento de una firma digital XML.  
  
 El <xref:System.Security.Cryptography.Xml.SignedXml.AddObject%2A> método llama internamente la <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> método de la <xref:System.Security.Cryptography.Xml.Signature> objeto encapsulado por el <xref:System.Security.Cryptography.Xml.SignedXml> objeto.  También puede agregar un <xref:System.Security.Cryptography.Xml.DataObject> objeto llamando directamente el <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> método desde el <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> propiedad.  
  
 Para obtener más información acerca de las firmas digitales XML, vea la especificación XMLDSIG, disponible en www.w3.org/TR/xmldsig-core/.  
  
   
  
## Examples  
 El siguiente código en el ejemplo se calcula y la firma XML.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml-AddObject-AddReference/CPP/example.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml-AddObject-AddReference/CS/example.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml-AddObject-AddReference/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddReference">
      <MemberSignature Language="C#" Value="public void AddReference (System.Security.Cryptography.Xml.Reference reference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddReference(class System.Security.Cryptography.Xml.Reference reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddReference(System::Security::Cryptography::Xml::Reference ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Security.Cryptography.Xml.Reference" />
      </Parameters>
      <Docs>
        <param name="reference">Objeto <see cref="T:System.Security.Cryptography.Xml.Reference" /> que describe un método de síntesis, valor de síntesis y transformación que se usan para crear una signatura digital XML.</param>
        <summary>Agrega un objeto <see cref="T:System.Security.Cryptography.Xml.Reference" /> al objeto <see cref="T:System.Security.Cryptography.Xml.SignedXml" />, que describe un método de síntesis, valor de síntesis y transformación que se utilizan para crear una firma digital XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.Cryptography.Xml.SignedXml.AddReference%2A> método agrega un <`Reference`> elemento a la <xref:System.Security.Cryptography.Xml.SignedXml> objeto que describe un método de síntesis, valor de síntesis y transformación que se utilizan para crear una firma digital XML.  El <`Reference`> es un subelemento de la <`SignedInfo`> elemento.  
  
 El <xref:System.Security.Cryptography.Xml.SignedXml.AddReference%2A> método llama internamente la <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> método de la <xref:System.Security.Cryptography.Xml.SignedInfo> objeto encapsulado por el <xref:System.Security.Cryptography.Xml.SignedXml> objeto.  También puede agregar un <xref:System.Security.Cryptography.Xml.Reference> objeto llamando directamente el <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> método desde el <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> propiedad.  
  
 Para obtener más información acerca de las firmas digitales XML, vea la especificación XMLDSIG, disponible en www.w3.org/TR/xmldsig-core/.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un documento XML completo utilizando una firma con doble cifrado.  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un objeto direccionable de identificador uniforme de recursos (URI) mediante una firma desasociada.  
  
 [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]
 [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]
 [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]  
  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un solo elemento de un documento XML mediante una firma de protección.  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckSignature">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina si la propiedad <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> realiza una comprobación.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public bool CheckSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignature () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignature();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina si la propiedad <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> realiza una comprobación utilizando la clave pública de la firma.</summary>
        <returns>
          Es <see langword="true" /> si la propiedad <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> realiza la comprobación; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método también calcula el resumen de las referencias y el valor de la firma.  
  
 Si un documento XML se firmó con una firma X.509, el <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> método buscará en el almacén "AddressBook" certificados adecuados para la comprobación. Por ejemplo, si el certificado se hace referencia mediante un identificador de clave de sujeto (SKI), el <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> método seleccionará los certificados con este SKI y probar una tras otra hasta que puede comprobar el certificado.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un documento XML completo utilizando una firma con doble cifrado.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]  
  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un objeto direccionable de identificador uniforme de recursos (URI) mediante una firma desasociada.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CPP/exampledetached.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CS/exampledetached.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/VB/exampledetached.vb#1)]  
  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un solo elemento de un documento XML mediante una firma de protección.  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La propiedad <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" /> de la clave pública de la firma no coincide con la propiedad <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" />.  
  
 O bien  
  
 No se pudo crear la descripción de la firma.  
  
 , o  
  
 No se pudo crear el algoritmo hash.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public bool CheckSignature (System.Security.Cryptography.AsymmetricAlgorithm key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignature(class System.Security.Cryptography.AsymmetricAlgorithm key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignature (key As AsymmetricAlgorithm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignature(System::Security::Cryptography::AsymmetricAlgorithm ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
      </Parameters>
      <Docs>
        <param name="key">Implementación de la propiedad <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> que contiene la clave que se va a utilizar para comprobar la propiedad <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" />.</param>
        <summary>Determina si la propiedad <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> realiza una comprobación para la clave especificada.</summary>
        <returns>
          Es <see langword="true" /> si la propiedad <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> realiza una comprobación de la clave especificada; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un objeto direccionable de identificador uniforme de recursos (URI) mediante una firma desasociada.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CPP/exampledetached.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CS/exampledetached.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/VB/exampledetached.vb#1)]  
  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un documento XML completo utilizando una firma con doble cifrado.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="key" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La propiedad <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" /> del parámetro <paramref name="key" /> no coincide con la propiedad <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" />.  
  
 O bien  
  
 No se pudo crear la descripción de la firma.  
  
 , o  
  
 No se pudo crear el algoritmo hash.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public bool CheckSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignature(class System.Security.Cryptography.KeyedHashAlgorithm macAlg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignature (macAlg As KeyedHashAlgorithm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignature(System::Security::Cryptography::KeyedHashAlgorithm ^ macAlg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="macAlg" Type="System.Security.Cryptography.KeyedHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="macAlg">Implementación de <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> que contiene el MAC que se va a utilizar para comprobar la propiedad <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" />.</param>
        <summary>Determina si la propiedad <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> comprueba el algoritmo de código de autenticación de mensajes (MAC) especificado.</summary>
        <returns>
          Es <see langword="true" /> si la propiedad <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> comprueba el MAC especificado; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un objeto direccionable de identificador uniforme de recursos (URI) mediante una firma desasociada.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CPP/xmldsigdetachedkeyedhashalg.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CS/xmldsigdetachedkeyedhashalg.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/VB/xmldsigdetachedkeyedhashalg.vb#1)]  
  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un documento XML completo utilizando una firma de protección.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CPP/xmldsigenvkeyedhashalg.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CS/xmldsigenvkeyedhashalg.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/VB/xmldsigenvkeyedhashalg.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="macAlg" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La propiedad <see cref="P:System.Security.Cryptography.HashAlgorithm.HashSize" /> del objeto <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> especificado no es válida.  
  
 O bien  
  
 La propiedad <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> es <see langword="null" />.  
  
 O bien  
  
 No se pudo crear la transformación criptográfica utilizada para comprobar la firma.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public bool CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, bool verifySignatureOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignature(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, bool verifySignatureOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignature (certificate As X509Certificate2, verifySignatureOnly As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignature(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate, bool verifySignatureOnly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="verifySignatureOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="certificate">Objeto <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> que se va a utilizar para comprobar la propiedad <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" />.</param>
        <param name="verifySignatureOnly">
          <see langword="true" /> para comprobar únicamente la firma; <see langword="false" /> para comprobar la firma y el certificado.</param>
        <summary>Determina si la propiedad <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> realiza una comprobación del objeto <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> especificado y, opcionalmente, si el certificado es válido.</summary>
        <returns>
          <see langword="true" /> si la firma es válida; en caso contrario, <see langword="false" />.  
  
 O bien  
  
 Es <see langword="true" /> si la firma y el certificado son válidos; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En la versión 1.1 de .NET Framework, no se comprueba el certificado X.509.  En la versión 2.0 y versiones posterior, se comprueba el certificado X.509.  
  
 En la versión 2.0 y versiones posterior de .NET Framework, el <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> método buscará en el almacén "AddressBook" certificados adecuados para la comprobación. Por ejemplo, si el certificado se hace referencia mediante un identificador de clave de sujeto (SKI), el <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> método seleccionará los certificados con este SKI y probar una tras otra hasta que puede comprobar el certificado.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se usa un certificado X.509 de un almacén de certificados para firmar y comprobar un documento XML.  
  
 [!code-csharp[Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)#1](~/samples/snippets/csharp/VS_Snippets_CLR/Security.Cryptography.Xml.SignedXml.CheckSignature/cs/sample.cs#1)]
 [!code-vb[Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Security.Cryptography.Xml.SignedXml.CheckSignature/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="certificate" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo crear una descripción de firma para el parámetro <paramref name="certificate" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignatureReturningKey">
      <MemberSignature Language="C#" Value="public bool CheckSignatureReturningKey (out System.Security.Cryptography.AsymmetricAlgorithm signingKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignatureReturningKey([out] class System.Security.Cryptography.AsymmetricAlgorithm&amp; signingKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignatureReturningKey (ByRef signingKey As AsymmetricAlgorithm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignatureReturningKey([Runtime::InteropServices::Out] System::Security::Cryptography::AsymmetricAlgorithm ^ % signingKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signingKey" Type="System.Security.Cryptography.AsymmetricAlgorithm&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="signingKey">Cuando este método finaliza, contiene la implementación de <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> con la clave pública de la firma. Este parámetro se pasa sin inicializar.</param>
        <summary>Determina si la propiedad <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> realiza una comprobación utilizando la clave pública de la firma.</summary>
        <returns>
          Es <see langword="true" /> si la propiedad <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> realiza la comprobación utilizando la clave pública de la firma; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un objeto direccionable de identificador uniforme de recursos (URI) mediante una firma desasociada.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached/CPP/exampledetached.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached/CS/exampledetached.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached/VB/exampledetached.vb#1)]  
  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un documento XML completo utilizando una firma de protección.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope/VB/exampleenvelope.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="signingKey" /> es null.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La propiedad <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" /> de la clave pública de la firma no coincide con la propiedad <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" />.  
  
 O bien  
  
 No se pudo crear la descripción de la firma.  
  
 , o  
  
 No se pudo crear el algoritmo hash.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ComputeSignature">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Calcula una firma digital XML.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ComputeSignature">
      <MemberSignature Language="C#" Value="public void ComputeSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.ComputeSignature" />
      <MemberSignature Language="VB.NET" Value="Public Sub ComputeSignature ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ComputeSignature();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Calcula una firma digital XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> método crea una firma digital XML y construye muchos de los elementos XML necesarios.  
  
 Debe establecer los datos debe estar firmado y el <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A> propiedad antes de llamar a este método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un objeto direccionable de identificador uniforme de recursos (URI) mediante una firma desasociada.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un documento XML completo utilizando una firma de protección.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La propiedad <see cref="P:System.Security.Cryptography.Xml.SignedXml.SigningKey" /> es <see langword="null" />.  
  
 O bien  
  
 La propiedad <see cref="P:System.Security.Cryptography.Xml.SignedXml.SigningKey" /> no es un objeto <see cref="T:System.Security.Cryptography.DSA" /> ni <see cref="T:System.Security.Cryptography.RSA" />.  
  
 O bien  
  
 No se pudo cargar la clave.</exception>
      </Docs>
    </Member>
    <Member MemberName="ComputeSignature">
      <MemberSignature Language="C#" Value="public void ComputeSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeSignature(class System.Security.Cryptography.KeyedHashAlgorithm macAlg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ComputeSignature (macAlg As KeyedHashAlgorithm)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ComputeSignature(System::Security::Cryptography::KeyedHashAlgorithm ^ macAlg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="macAlg" Type="System.Security.Cryptography.KeyedHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="macAlg">Objeto <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> que contiene el MAC que se va a utilizar para calcular el valor de la propiedad <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" />.</param>
        <summary>Calcula una firma digital XML utilizando el algoritmo de código de autenticación de mensajes (MAC) especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> método crea una firma digital XML utilizando el algoritmo MAC especificado y construye muchos de los elementos XML necesarios.  
  
 Debe establecer los datos debe estar firmado antes de llamar a este método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un objeto direccionable de identificador uniforme de recursos (URI) mediante una firma desasociada.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CPP/xmldsigdetachedkeyedhashalg.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CS/xmldsigdetachedkeyedhashalg.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/VB/xmldsigdetachedkeyedhashalg.vb#1)]  
  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un documento XML completo utilizando una firma de protección.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CPP/xmldsigenvkeyedhashalg.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CS/xmldsigenvkeyedhashalg.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/VB/xmldsigenvkeyedhashalg.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="macAlg" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">El objeto <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> que se especifica en el parámetro <paramref name="macAlg" /> no es una instancia de <see cref="T:System.Security.Cryptography.HMACSHA1" />.  
  
 O bien  
  
 La propiedad <see cref="P:System.Security.Cryptography.HashAlgorithm.HashSize" /> del objeto <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> especificado no es válida.  
  
 O bien  
  
 No se pudo crear la transformación criptográfica utilizada para comprobar la firma.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptedXml">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.EncryptedXml EncryptedXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.EncryptedXml EncryptedXml" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.EncryptedXml" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptedXml As EncryptedXml" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::EncryptedXml ^ EncryptedXml { System::Security::Cryptography::Xml::EncryptedXml ^ get(); void set(System::Security::Cryptography::Xml::EncryptedXml ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptedXml</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un objeto <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> que define las reglas de procesamiento del cifrado XML.</summary>
        <value>Objeto <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> que define las reglas de procesamiento del cifrado XML.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIdElement">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement GetIdElement (System.Xml.XmlDocument document, string idValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement GetIdElement(class System.Xml.XmlDocument document, string idValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIdElement (document As XmlDocument, idValue As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlElement ^ GetIdElement(System::Xml::XmlDocument ^ document, System::String ^ idValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
        <Parameter Name="idValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="document">Objeto <see cref="T:System.Xml.XmlDocument" /> a partir del cual se recupera el objeto <see cref="T:System.Xml.XmlElement" />.</param>
        <param name="idValue">Identificador del objeto <see cref="T:System.Xml.XmlElement" /> que se va a recuperar a partir del objeto <see cref="T:System.Xml.XmlDocument" />.</param>
        <summary>Devuelve el objeto <see cref="T:System.Xml.XmlElement" /> con el identificador del objeto <see cref="T:System.Xml.XmlDocument" /> especificado.</summary>
        <returns>Objeto <see cref="T:System.Xml.XmlElement" /> con el identificador del objeto <see cref="T:System.Xml.XmlDocument" /> especificado, o <see langword="null" /> si no se pudo encontrar.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPublicKey">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Cryptography.AsymmetricAlgorithm GetPublicKey ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Cryptography.AsymmetricAlgorithm GetPublicKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.GetPublicKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPublicKey () As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::Cryptography::AsymmetricAlgorithm ^ GetPublicKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve la clave pública de una firma.</summary>
        <returns>Objeto <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> que contiene la clave pública de la firma o <see langword="null" /> si no se pudo encontrar la clave.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.Cryptography.Xml.SignedXml.GetPublicKey%2A> método devuelve un <xref:System.Security.Cryptography.AsymmetricAlgorithm> objeto que contiene una clave pública que puede utilizarse para comprobar una firma digital XML.  
  
 La clave debe ser un <xref:System.Security.Cryptography.DSA> o un <xref:System.Security.Cryptography.RSA> clave.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La propiedad <see cref="P:System.Security.Cryptography.Xml.SignedXml.KeyInfo" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ GetXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve la representación XML de un objeto <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</summary>
        <returns>Representación XML del objeto <see cref="T:System.Security.Cryptography.Xml.Signature" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La propiedad <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo" /> es <see langword="null" />.  
  
 O bien  
  
 La propiedad <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="KeyInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.KeyInfo KeyInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.KeyInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyInfo As KeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::KeyInfo ^ KeyInfo { System::Security::Cryptography::Xml::KeyInfo ^ get(); void set(System::Security::Cryptography::Xml::KeyInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.KeyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el objeto <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> del objeto <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> actual.</summary>
        <value>Objeto <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> del objeto <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> propiedad representa la <`KeyInfo`> elemento de una firma digital XML utilizando un <xref:System.Security.Cryptography.Xml.KeyInfo> dentro de la propiedad de objeto.  El <`KeyInfo`> es un subelemento de la <`Signature`> elemento.  
  
 Use la <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> propiedad para incrustar información relacionada con la clave diseñados para ayudar a identificar la clave necesaria para validar un documento XML.  
  
 Para obtener más información sobre la `<KeyInfo>` elemento, vea la especificación XMLDSIG, que está disponible en www.w3.org/TR/xmldsig-core/.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Security.Cryptography.Xml.KeyInfo> al firmar un recurso representado por un identificador de recursos Universal (URI) del objeto.  En este ejemplo se guarda la firma en un archivo nuevo.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 El siguiente ejemplo de código utiliza el <xref:System.Security.Cryptography.Xml.KeyInfo> al firmar un documento XML del objeto.  En este ejemplo se guarda la firma en un archivo nuevo.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">Elemento XML a partir del cual se carga el estado de <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</param>
        <summary>Carga un estado de la clase <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> a partir de un elemento XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Security.Cryptography.Xml.SignedXml.LoadXml%2A> método para comprobar un documento XML.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#3)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#3)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">El parámetro <paramref name="value" /> no contiene una propiedad <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue" /> válida.  
  
 O bien  
  
 El parámetro <paramref name="value" /> no contiene una propiedad <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo" /> válida.</exception>
      </Docs>
    </Member>
    <Member MemberName="m_signature">
      <MemberSignature Language="C#" Value="protected System.Security.Cryptography.Xml.Signature m_signature;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Security.Cryptography.Xml.Signature m_signature" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.m_signature" />
      <MemberSignature Language="VB.NET" Value="Protected m_signature As Signature " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Security::Cryptography::Xml::Signature ^ m_signature;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.Signature</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el objeto <see cref="T:System.Security.Cryptography.Xml.Signature" /> del objeto <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> actual.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="m_strSigningKeyName">
      <MemberSignature Language="C#" Value="protected string m_strSigningKeyName;" />
      <MemberSignature Language="ILAsm" Value=".field family string m_strSigningKeyName" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName" />
      <MemberSignature Language="VB.NET" Value="Protected m_strSigningKeyName As String " />
      <MemberSignature Language="C++ CLI" Value="protected: System::String ^ m_strSigningKeyName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el nombre de la clave instalada que se va a utilizar para firmar el objeto <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver Resolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver Resolver" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.Resolver" />
      <MemberSignature Language="VB.NET" Value="Public Property Resolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ Resolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Establece el objeto <see cref="T:System.Xml.XmlResolver" /> actual.</summary>
        <value>Objeto <see cref="T:System.Xml.XmlResolver" /> actual. El valor predeterminado es un objeto <see cref="T:System.Xml.XmlSecureResolver" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Xml.XmlResolver> clase resuelve los recursos XML externos designados por un identificador uniforme de recursos (URI). Si no confía en el origen del archivo XML, no puede permitir que el archivo XML tener acceso a recursos del equipo designados por el identificador URI. Puede usar el <xref:System.Security.Cryptography.Xml.SignedXml.Resolver%2A> propiedad para controlar el nivel de acceso que los archivos XML a los recursos de equipo mediante la especificación de diferentes <xref:System.Xml.XmlResolver> objetos. Si no desea permitir que cualquier tipo de acceso, puede establecer esta propiedad en `null` (`Nothing` en Visual Basic).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeCanonicalizationMethods">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;string&gt; SafeCanonicalizationMethods { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;string&gt; SafeCanonicalizationMethods" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeCanonicalizationMethods As Collection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ SafeCanonicalizationMethods { System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[Compatible con .NET Framework 4.5.1 y versiones posteriores]  
  
 Obtiene los nombres de los métodos cuyos algoritmos de nombres canónicos se permiten de forma explícita.</summary>
        <value>Una colección de los nombres de los métodos que generan XML canónico con seguridad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Métodos de resolución de nombres canónicos convierten un documento XML en su forma canónica. Para obtener más información acerca de XML canónico, consulte [XML canónico](http://www.w3.org/TR/xml-c14n) en el sitio Web de W3C.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Signature">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.Signature Signature { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.Signature Signature" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.Signature" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Signature As Signature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::Signature ^ Signature { System::Security::Cryptography::Xml::Signature ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.Signature</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Security.Cryptography.Xml.Signature" /> del objeto <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> actual.</summary>
        <value>Objeto <see cref="T:System.Security.Cryptography.Xml.Signature" /> del objeto <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> propiedad representa la <`Signature`> elemento de una firma digital XML utilizando un <xref:System.Security.Cryptography.Xml.Signature> dentro de la propiedad de objeto.  El <`Signature`> elemento es el elemento raíz utilizado para la creación de firma digital XML y verificación.  
  
 Use la <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> propiedad que se va a recuperar el <xref:System.Security.Cryptography.Xml.Signature> objeto utilizado por la <xref:System.Security.Cryptography.Xml.SignedXml> objeto.  
  
 Para obtener más información sobre la `<Signature>` elemento, vea la especificación XMLDSIG, que está disponible en www.w3.org/TR/xmldsig-core/.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> propiedad para firmar y comprobar un documento XML completo utilizando una firma con doble cifrado.  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 El siguiente ejemplo de código utiliza el <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> propiedad para firmar y comprobar un objeto direccionable de identificador uniforme de recursos (URI) mediante una firma desasociada.  
  
 [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]
 [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]
 [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureFormatValidator">
      <MemberSignature Language="C#" Value="public Func&lt;System.Security.Cryptography.Xml.SignedXml,bool&gt; SignatureFormatValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Security.Cryptography.Xml.SignedXml, bool&gt; SignatureFormatValidator" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property SignatureFormatValidator As Func(Of SignedXml, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Security::Cryptography::Xml::SignedXml ^, bool&gt; ^ SignatureFormatValidator { Func&lt;System::Security::Cryptography::Xml::SignedXml ^, bool&gt; ^ get(); void set(Func&lt;System::Security::Cryptography::Xml::SignedXml ^, bool&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Security.Cryptography.Xml.SignedXml,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un delegado al que se va a llamar para validar el formato (no la seguridad criptográfica) de una signatura XML.</summary>
        <value>
          Es <see langword="true" /> si el formato es aceptable; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se puede utilizar para asegurarse de que se usan solo ciertas transformaciones, o que la firma usa un determinado algoritmo hash y así sucesivamente.  
  
 Establecer la propiedad en `null` quita toda la validación de formato de firma de la <xref:System.Security.Cryptography.Xml.SignedXml> objeto.  
  
 También puede leer el objeto delegado actual y se relacionan con él si desea.  
  
 Si está configurando un validador del formato, el delegado que suministra recibirá como un parámetro de entrada el <xref:System.Security.Cryptography.Xml.SignedXml> objeto que se va a comprobar y devuelve un valor booleano: `true` si el formato es aceptable, `false` si no lo está. Si el delegado devuelve `false` por cualquier motivo, la <xref:System.Security.Cryptography.Xml.SignedXml> objeto informará de que la firma XML no es válida.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureLength">
      <MemberSignature Language="C#" Value="public string SignatureLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureLength" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignatureLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureLength As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignatureLength { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la longitud de la firma para el objeto <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> actual.</summary>
        <value>La longitud de la firma del objeto <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> actual.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureMethod">
      <MemberSignature Language="C#" Value="public string SignatureMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureMethod" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignatureMethod { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el método de firma del objeto <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> actual.</summary>
        <value>Método de firma del objeto <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> propiedad representa la <`SignatureMethod`> elemento de una firma digital XML utilizando una cadena de identificador uniforme de recursos (URI) dentro de la propiedad. El <`SignatureMethod`> es un subelemento de la <`SignedInfo`> elemento.  
  
 Use la <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> propiedad que se va a recuperar el <`SignatureMethod`> URI utilizado por el <xref:System.Security.Cryptography.Xml.SignedXml> objeto. Esta propiedad es de solo lectura. Para obtener más información acerca de cómo especificar mediante programación un URI para el <`SignatureMethod`> elemento, vea la <xref:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod%2A> propiedad.  
  
 Para obtener más información sobre la `<SignatureMethod>` elemento, vea la especificación XMLDSIG, que está disponible en www.w3.org/TR/xmldsig-core/.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureValue">
      <MemberSignature Language="C#" Value="public byte[] SignatureValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SignatureValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureValue As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ SignatureValue { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor de firma del objeto <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> actual.</summary>
        <value>Matriz de bytes que contiene el valor de firma del objeto <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> propiedad representa la <`SignatureValue`> elemento de una firma digital XML utilizando una matriz de bytes incluida en la propiedad.  El <`SignatureValue`> es un subelemento de la <`Signature>` elemento.  
  
 Use la <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> propiedad que se va a recuperar el valor de la firma digital XML.  Esta propiedad se rellena automáticamente cuando se realiza una llamada correcta a la <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> método.  
  
 Para obtener más información sobre la `<SignatureValue>` elemento, vea la especificación XMLDSIG, que está disponible en www.w3.org/TR/xmldsig-core/.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignedInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.SignedInfo SignedInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.SignedInfo SignedInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignedInfo As SignedInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::SignedInfo ^ SignedInfo { System::Security::Cryptography::Xml::SignedInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.SignedInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> del objeto <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> actual.</summary>
        <value>Objeto <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> del objeto <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> propiedad representa la <`SignedInfo`> elemento de una firma digital XML utilizando una matriz de bytes incluida en la propiedad.  El <`SignedInfo`> es un subelemento de la <`Signature>` elemento.  
  
 Use la <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> propiedad que se va a recuperar el <xref:System.Security.Cryptography.Xml.SignedInfo> objeto que se usa por la <xref:System.Security.Cryptography.Xml.SignedXml> objeto para crear una firma digital XML.  
  
 Para obtener más información sobre la `<SignedInfo>` elemento, vea la especificación XMLDSIG, que está disponible en www.w3.org/TR/xmldsig-core/.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.AsymmetricAlgorithm SigningKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.AsymmetricAlgorithm SigningKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SigningKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SigningKey As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::AsymmetricAlgorithm ^ SigningKey { System::Security::Cryptography::AsymmetricAlgorithm ^ get(); void set(System::Security::Cryptography::AsymmetricAlgorithm ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la clave del algoritmo asimétrico que se utiliza para la firma de un objeto <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</summary>
        <value>Clave del algoritmo asimétrico que se utiliza para la firma del objeto <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice la <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A> propiedad para especificar la asimétrica tecla que desea usar para crear una firma digital XML.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un documento XML completo utilizando una firma con doble cifrado.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]  
  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un objeto direccionable de identificador uniforme de recursos (URI) mediante una firma desasociada.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CPP/exampledetached.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CS/exampledetached.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/VB/exampledetached.vb#1)]  
  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un solo elemento de un documento XML mediante una firma de protección.  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningKeyName">
      <MemberSignature Language="C#" Value="public string SigningKeyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SigningKeyName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SigningKeyName" />
      <MemberSignature Language="VB.NET" Value="Public Property SigningKeyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SigningKeyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre de la clave instalada que se va a utilizar para firmar el objeto <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</summary>
        <value>Nombre de la clave instalada que se va a utilizar para firmar el objeto <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDecryptionTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDecryptionTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDecryptionTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDecryptionTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDecryptionTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el identificador uniforme de recursos (URI) para la transformación de descifrado de modo XML. Este campo es constante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl> campo es "http://www.w3.org/2002/07/decrypt#XML".  
  
 Utilice este campo para proporcionar fácilmente un valor para uno de los atributos de identificador URI de un elemento utilizado para XMLDSIG.  
  
 Para obtener más información, vea la especificación de World Wide Web Consortium (W3C) en http://www.w3.org/2002/07/decrypt#XML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigBase64TransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigBase64TransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigBase64TransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigBase64TransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigBase64TransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el identificador uniforme de recursos (URI) para la transformación de base 64. Este campo es constante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl> campo es "http://www.w3.org/2000/09/xmldsig#base64".  
  
 Utilice este campo para proporcionar fácilmente un valor para uno de los atributos de identificador URI de un elemento utilizado para XMLDSIG.  
  
 El <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> clase implementa la transformación descrita por la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl> campo.  
  
 Para obtener más información, vea la especificación de World Wide Web Consortium (W3C) en http://www.w3.org/2000/09/xmldsig#base64.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar los miembros de la <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> clase.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigBase64Transform/CPP/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigBase64Transform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigBase64Transform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigC14NTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigC14NTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigC14NTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigC14NTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigC14NTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el identificador uniforme de recursos (URI) para la transformación de XML canónico. Este campo es constante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> campo es "http://www.w3.org/TR/2001/REC-xml-c14n-20010315".  
  
 Utilice este campo para proporcionar fácilmente un valor para uno de los atributos de identificador URI de un elemento utilizado para XMLDSIG.  
  
 El <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> clase implementa la transformación descrita por la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> campo.  
  
 Para obtener más información, vea la especificación de World Wide Web Consortium (W3C) en http://www.w3.org/TR/2001/REC-xml-c14n-20010315.  
  
 Este campo tiene el mismo valor que el <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> campo.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo llamar a los miembros de la <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> clase.  
  
 [!code-cpp[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CPP/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigC14NWithCommentsTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigC14NWithCommentsTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigC14NWithCommentsTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigC14NWithCommentsTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigC14NWithCommentsTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el identificador uniforme de recursos (URI) para la transformación de XML canónico, con comentarios. Este campo es constante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> campo es "http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments ".  
  
 Utilice este campo para proporcionar fácilmente un valor para uno de los atributos de identificador URI de un elemento utilizado para XMLDSIG.  
  
 El <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform> clase implementa la transformación descrita por la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> campo.  
  
 Para obtener más información, vea la especificación de World Wide Web Consortium (W3C) en http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments.  
  
 Este campo tiene el mismo valor que el <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> campo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigCanonicalizationUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigCanonicalizationUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigCanonicalizationUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigCanonicalizationUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigCanonicalizationUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el identificador uniforme de recursos (URI) del algoritmo de canonización estándar para las firmas digitales XML. Este campo es constante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> campo es "http://www.w3.org/TR/2001/REC-xml-c14n-20010315".  
  
 Utilice este campo para proporcionar fácilmente un valor para uno de los atributos de identificador URI de un elemento utilizado para XMLDSIG.  
  
 El <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> clase implementa la transformación descrita por la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> campo.  
  
 Para obtener más información, vea la especificación de World Wide Web Consortium (W3C) en http://www.w3.org/TR/2001/REC-xml-c14n-20010315.  
  
 Este campo tiene el mismo valor que el <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> campo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigCanonicalizationWithCommentsUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigCanonicalizationWithCommentsUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigCanonicalizationWithCommentsUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigCanonicalizationWithCommentsUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigCanonicalizationWithCommentsUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el identificador uniforme de recursos (URI) del algoritmo de canonización estándar para las firmas digitales XML e incluye comentarios. Este campo es constante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> campo es "http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments".  
  
 Utilice este campo para proporcionar fácilmente un valor para uno de los atributos de identificador URI de un elemento utilizado para XMLDSIG.  
  
 El <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform> clase implementa la transformación descrita por la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> campo.  
  
 Para obtener más información, vea la especificación de World Wide Web Consortium (W3C) en http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments.  
  
 Este campo tiene el mismo valor que el <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> campo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigDSAUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigDSAUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigDSAUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigDSAUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigDSAUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el identificador uniforme de recursos (URI) del algoritmo <see cref="T:System.Security.Cryptography.DSA" /> estándar para las firmas digitales XML. Este campo es constante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl> campo es "http://www.w3.org/2000/09/xmldsig#dsa-sha1".  
  
 Utilice este campo para proporcionar fácilmente un valor para uno de los atributos de identificador URI de un elemento utilizado para XMLDSIG.  
  
 Para obtener más información, vea la especificación de World Wide Web Consortium (W3C) en http://www.w3.org/2000/09/xmldsig#dsa-sha1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigEnvelopedSignatureTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigEnvelopedSignatureTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigEnvelopedSignatureTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigEnvelopedSignatureTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigEnvelopedSignatureTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el identificador uniforme de recursos (URI) para la transformación de firma con doble cifrado. Este campo es constante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl> campo es "http://www.w3.org/2000/09/xmldsig#enveloped-signature".  
  
 Utilice este campo para proporcionar fácilmente un valor para uno de los atributos de identificador URI de un elemento utilizado para XMLDSIG.  
  
 El <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> clase implementa la transformación descrita por la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl> campo.  
  
 Para obtener más información, vea la especificación de World Wide Web Consortium (W3C) en http://www.w3.org/2000/09/xmldsig#enveloped-signature.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar los miembros de la <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> clase.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/cpp/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigExcC14NTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigExcC14NTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigExcC14NTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigExcC14NTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigExcC14NTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el identificador uniforme de recursos (URI) para la canonización XML exclusiva. Este campo es constante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl> campo es "http://www.w3.org/2001/10/xml-exc-c14n#".  
  
 Utilice este campo para proporcionar fácilmente un valor para uno de los atributos de identificador URI de un elemento utilizado para XMLDSIG.  
  
 El <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> clase implementa la transformación descrita por la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl> campo.  
  
 Para obtener más información, vea la especificación de World Wide Web Consortium (W3C) en http://www.w3.org/2001/10/xml-exc-c14n#.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un documento XML utilizando la <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> clase.  Este ejemplo crea una firma con doble cifrado.  
  
 [!code-cpp[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/CS/example.cs#1)]
 [!code-vb[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigExcC14NWithCommentsTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigExcC14NWithCommentsTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigExcC14NWithCommentsTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigExcC14NWithCommentsTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigExcC14NWithCommentsTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el identificador uniforme de recursos (URI) para la canonización XML exclusiva, con comentarios. Este campo es constante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> campo es "http://www.w3.org/2001/10/xml-exc-c14n#WithComments".  
  
 Utilice este campo para proporcionar fácilmente un valor para uno de los atributos de identificador URI de un elemento utilizado para XMLDSIG.  
  
 El <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> clase implementa la transformación descrita por la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> campo.  
  
 Para obtener más información, vea la especificación de World Wide Web Consortium (W3C) en http://www.w3.org/2001/10/xml-exc-c14n#WithComments.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo firmar y comprobar un documento XML utilizando la <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> clase.  Este ejemplo crea una firma con doble cifrado.  
  
 [!code-cpp[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NWithCommentsTransform/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NWithCommentsTransform/CS/sample.cs#1)]
 [!code-vb[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NWithCommentsTransform/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigHMACSHA1Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigHMACSHA1Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigHMACSHA1Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigHMACSHA1Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigHMACSHA1Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el identificador uniforme de recursos (URI) del algoritmo <see cref="T:System.Security.Cryptography.HMACSHA1" /> estándar para las firmas digitales XML. Este campo es constante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url> campo es "http://www.w3.org/2000/09/xmldsig#hmac-sha1".  
  
 Utilice este campo para proporcionar fácilmente un valor para uno de los atributos de identificador URI de un elemento utilizado para XMLDSIG.  
  
 Para obtener más información, vea la especificación de World Wide Web Consortium (W3C) en http://www.w3.org/2000/09/xmldsig#hmac-sha1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigMinimalCanonicalizationUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigMinimalCanonicalizationUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigMinimalCanonicalizationUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigMinimalCanonicalizationUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigMinimalCanonicalizationUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el identificador uniforme de recursos (URI) del algoritmo de canonización mínima estándar para las firmas digitales XML. Este campo es constante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl> campo es "http://www.w3.org/2000/09/xmldsig#minimal".  
  
 Utilice este campo para proporcionar fácilmente un valor para uno de los atributos de identificador URI de un elemento utilizado para XMLDSIG.  
  
 Para obtener más información, vea la especificación de World Wide Web Consortium (W3C) en http://www.w3.org/2000/09/xmldsig#minimal.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigNamespaceUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigNamespaceUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigNamespaceUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigNamespaceUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigNamespaceUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el identificador uniforme de recursos (URI) del espacio de nombres estándar para las firmas digitales XML. Este campo es constante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl> campo es "http://www.w3.org/2000/09/xmldsig#".  
  
 Utilice este campo para proporcionar fácilmente un valor para uno de los atributos de identificador URI de un elemento utilizado para XMLDSIG.  
  
 Para obtener más información, vea la especificación de World Wide Web Consortium (W3C) en http://www.w3.org/2000/09/xmldsig#.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigRSASHA1Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigRSASHA1Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigRSASHA1Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigRSASHA1Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigRSASHA1Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el identificador uniforme de recursos (URI) del método de firma <see cref="T:System.Security.Cryptography.RSA" /> estándar para las firmas digitales XML. Este campo es constante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> campo es "http://www.w3.org/2000/09/xmldsig#rsa-sha1".  
  
 Utilice este campo para proporcionar fácilmente un valor para uno de los atributos de identificador URI de un elemento utilizado para XMLDSIG.  
  
 Para obtener más información, vea la especificación de World Wide Web Consortium (W3C) en http://www.w3.org/2000/09/xmldsig#rsa-sha1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigRSASHA256Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigRSASHA256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigRSASHA256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigRSASHA256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigRSASHA256Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el identificador uniforme de recursos (URI) para la variación de método de firma SHA-256 <see cref="T:System.Security.Cryptography.RSA" /> para firmas digitales XML. Este campo es constante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url> campo es "http://www.w3.org/2001/04/xmldsig-more#rsa-sha256".  
  
 Utilice este campo para proporcionar fácilmente un valor para uno de los atributos de identificador URI de un elemento utilizado para XMLDSIG.  
  
 Para obtener más información, vea la especificación de World Wide Web Consortium (W3C) en [ https://www.w3.org/2001/04/xmldsig-more#rsa-sha256 ](https://www.w3.org/2001/04/xmldsig-more#rsa-sha256).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigRSASHA384Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigRSASHA384Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigRSASHA384Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigRSASHA384Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigRSASHA384Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el identificador uniforme de recursos (URI) para la variación de método de firma SHA-384 <see cref="T:System.Security.Cryptography.RSA" /> para firmas digitales XML. Este campo es constante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url> campo es "http://www.w3.org/2001/04/xmldsig-more#rsa-sha384".  
  
 Utilice este campo para proporcionar fácilmente un valor para uno de los atributos de identificador URI de un elemento utilizado para XMLDSIG.  
  
 Para obtener más información, vea la especificación de World Wide Web Consortium (W3C) en [ https://www.w3.org/2001/04/xmldsig-more#rsa-sha384 ](https://www.w3.org/2001/04/xmldsig-more#rsa-sha384).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigRSASHA512Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigRSASHA512Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigRSASHA512Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigRSASHA512Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigRSASHA512Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el identificador uniforme de recursos (URI) para la variación de método de firma SHA-512 <see cref="T:System.Security.Cryptography.RSA" /> para firmas digitales XML. Este campo es constante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url> campo es "http://www.w3.org/2001/04/xmldsig-more#rsa-sha512".  
  
 Utilice este campo para proporcionar fácilmente un valor para uno de los atributos de identificador URI de un elemento utilizado para XMLDSIG.  
  
 Para obtener más información, vea la especificación de World Wide Web Consortium (W3C) en [ https://www.w3.org/2001/04/xmldsig-more#rsa-sha512 ](https://www.w3.org/2001/04/xmldsig-more#rsa-sha512).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigSHA1Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigSHA1Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigSHA1Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigSHA1Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigSHA1Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el identificador uniforme de recursos (URI) para el método implícito estándar <see cref="T:System.Security.Cryptography.SHA1" /> para firmas digitales XML. Este campo es constante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> campo es "http://www.w3.org/2000/09/xmldsig#sha1".  
  
 Utilice este campo para proporcionar fácilmente un valor para uno de los atributos de identificador URI de un elemento utilizado para XMLDSIG.  
  
 Para obtener más información, vea la especificación de World Wide Web Consortium (W3C) en http://www.w3.org/2000/09/xmldsig#sha1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigSHA256Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigSHA256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigSHA256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigSHA256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigSHA256Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el identificador uniforme de recursos (URI) para el método implícito estándar <see cref="T:System.Security.Cryptography.SHA256" /> para firmas digitales XML. Este campo es constante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url> campo es "http://www.w3.org/2001/04/xmlenc#sha256".  
  
 Utilice este campo para proporcionar fácilmente un valor para uno de los atributos de identificador URI de un elemento utilizado para XMLDSIG.  
  
 Para obtener más información, vea la especificación de World Wide Web Consortium (W3C) en [ http://www.w3.org/2001/04/xmlenc#sha256 ](http://www.w3.org/2001/04/xmlenc#sha256).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigSHA384Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigSHA384Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigSHA384Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigSHA384Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigSHA384Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el identificador uniforme de recursos (URI) para el método implícito estándar <see cref="T:System.Security.Cryptography.SHA384" /> para firmas digitales XML. Este campo es constante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url> campo es "http://www.w3.org/2001/04/xmldsig-more#sha384".  
  
 Utilice este campo para proporcionar fácilmente un valor para uno de los atributos de identificador URI de un elemento utilizado para XMLDSIG.  
  
 Para obtener más información, vea la especificación de World Wide Web Consortium (W3C) en [ https://www.w3.org/2001/04/xmldsig-more#sha384 ](https://www.w3.org/2001/04/xmldsig-more#sha384).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigSHA512Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigSHA512Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigSHA512Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigSHA512Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigSHA512Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el identificador uniforme de recursos (URI) para el método implícito estándar <see cref="T:System.Security.Cryptography.SHA512" /> para firmas digitales XML. Este campo es constante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url> campo es "http://www.w3.org/2001/04/xmlenc#sha512".  
  
 Utilice este campo para proporcionar fácilmente un valor para uno de los atributos de identificador URI de un elemento utilizado para XMLDSIG.  
  
 Para obtener más información, vea la especificación de World Wide Web Consortium (W3C) en [ http://www.w3.org/2001/04/xmlenc#sha512 ](http://www.w3.org/2001/04/xmlenc#sha512).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigXPathTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigXPathTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigXPathTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigXPathTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigXPathTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el identificador uniforme de recursos (URI) para XPath (lenguaje de rutas XML). Este campo es constante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl> campo es "http://www.w3.org/TR/1999/REC-xpath-19991116".  
  
 Utilice este campo para proporcionar fácilmente un valor para uno de los atributos de identificador URI de un elemento utilizado para XMLDSIG.  
  
 El <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> clase implementa la transformación descrita por la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl> campo.  
  
 Para obtener más información, vea la especificación de World Wide Web Consortium (W3C) en http://www.w3.org/TR/1999/REC-xpath-19991116.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo llamar a los miembros de la <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> clase.  
  
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigXsltTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigXsltTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigXsltTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigXsltTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigXsltTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el identificador uniforme de recursos (URI) para las transformaciones XSLT. Este campo es constante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl> campo es "http://www.w3.org/TR/1999/REC-xslt-19991116".  
  
 Utilice este campo para proporcionar fácilmente un valor para uno de los atributos de identificador URI de un elemento utilizado para XMLDSIG.  
  
 El <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> clase implementa la transformación descrita por la <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl> campo.  
  
 Para obtener más información, vea la especificación de World Wide Web Consortium (W3C) en http://www.w3.org/TR/1999/REC-xslt-19991116.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar los miembros de la <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> clase.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CPP/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlLicenseTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlLicenseTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlLicenseTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlLicenseTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlLicenseTransformUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el identificador uniforme de recursos (URI) del algoritmo de transformación de licencias utilizado para normalizar licencias XrML para firmas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> campo es "urn: mpeg:mpeg21:2003:01-REL-R-licenseTransform"  
  
 Utilice este campo para proporcionar fácilmente un valor para uno de los atributos de identificador URI de un elemento utilizado para XMLDSIG.  
  
 El <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> clase implementa la transformación descrita por la <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> campo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>