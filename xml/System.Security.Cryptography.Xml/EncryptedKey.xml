<Type Name="EncryptedKey" FullName="System.Security.Cryptography.Xml.EncryptedKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="13b1ddc53c37605d41c488bd5d383ec25fb53fac" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36625988" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EncryptedKey : System.Security.Cryptography.Xml.EncryptedType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EncryptedKey extends System.Security.Cryptography.Xml.EncryptedType" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.EncryptedKey" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EncryptedKey&#xA;Inherits EncryptedType" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedKey sealed : System::Security::Cryptography::Xml::EncryptedType" />
  <TypeSignature Language="F#" Value="type EncryptedKey = class&#xA;    inherit EncryptedType" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.EncryptedType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa el elemento <see langword="&lt;EncryptedKey&gt;" /> del cifrado XML. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta clase representa el `<EncryptedKey>` elemento en el cifrado XML. El `<EncryptedKey>` elemento se usa para enviar las claves de cifrado. Pueden crearse en un documento XML independiente, puede colocar dentro de un documento de la aplicación o estar dentro de un `<EncryptedData>` elemento como elemento secundario de un `<KeyInfo>` elemento. El valor de clave está siempre cifrado al destinatario. Cuando `<EncryptedKey>` es descifrar, la clave resultante estará disponible para el `<EncryptionMethod>` algoritmo sin ningún procesamiento adicional.  
  
 El `<EncryptedKey>` elemento es similar a la `<EncryptedData>` elemento de la <xref:System.Security.Cryptography.Xml.EncryptedData> clase salvo que los datos cifrados siempre están un valor de clave.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo cifrar y descifrar un elemento XML mediante la <xref:System.Security.Cryptography.Xml.EncryptedKey> clase. En este ejemplo, a continuación, muestra los valores de varias propiedades de la <xref:System.Security.Cryptography.Xml.EncryptedKey> clase en la consola.  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor crea una nueva instancia de la <xref:System.Security.Cryptography.Xml.EncryptedKey> clase. Para obtener más información sobre los estándares de cifrado XML, vea el documento XML Encryption Syntax and Processing en http://www.w3.org/TR/xmlenc-core/.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo cifrar y descifrar un elemento XML mediante la <xref:System.Security.Cryptography.Xml.EncryptedKey> clase. En este ejemplo, a continuación, muestra los valores de varias propiedades de la <xref:System.Security.Cryptography.Xml.EncryptedKey> clase en la consola.  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddReference">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Agrega un elemento de referencia <see langword="" />al elemento <see langword="&amp;lt;ReferenceList&amp;gt;" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddReference">
      <MemberSignature Language="C#" Value="public void AddReference (System.Security.Cryptography.Xml.DataReference dataReference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddReference(class System.Security.Cryptography.Xml.DataReference dataReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.DataReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddReference(System::Security::Cryptography::Xml::DataReference ^ dataReference);" />
      <MemberSignature Language="F#" Value="member this.AddReference : System.Security.Cryptography.Xml.DataReference -&gt; unit" Usage="encryptedKey.AddReference dataReference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataReference" Type="System.Security.Cryptography.Xml.DataReference" />
      </Parameters>
      <Docs>
        <param name="dataReference">Objeto <see cref="T:System.Security.Cryptography.Xml.DataReference" /> que se va a agregar a la propiedad <see cref="P:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList" />.</param>
        <summary>Agrega un elemento <see langword="&lt;DataReference&gt;" /> al elemento <see langword="&lt;ReferenceList&gt;" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método agrega un <xref:System.Security.Cryptography.Xml.DataReference> el objeto a la <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A> propiedad de la <xref:System.Security.Cryptography.Xml.EncryptedKey> objeto. El `<DataReference>` elemento apunta a los datos cifrados que se ha cifrado con la clave especificada en el `<EncryptedKey>` elemento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddReference">
      <MemberSignature Language="C#" Value="public void AddReference (System.Security.Cryptography.Xml.KeyReference keyReference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddReference(class System.Security.Cryptography.Xml.KeyReference keyReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.KeyReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddReference(System::Security::Cryptography::Xml::KeyReference ^ keyReference);" />
      <MemberSignature Language="F#" Value="member this.AddReference : System.Security.Cryptography.Xml.KeyReference -&gt; unit" Usage="encryptedKey.AddReference keyReference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyReference" Type="System.Security.Cryptography.Xml.KeyReference" />
      </Parameters>
      <Docs>
        <param name="keyReference">Objeto <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> que se va a agregar a la propiedad <see cref="P:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList" />.</param>
        <summary>Agrega un elemento <see langword="&lt;KeyReference&gt;" /> al elemento <see langword="&lt;ReferenceList&gt;" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método agrega un <xref:System.Security.Cryptography.Xml.KeyReference> el objeto a la <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A> propiedad de la <xref:System.Security.Cryptography.Xml.EncryptedKey> objeto. El `<KeyReference>` elemento apunta a una clave de cifrado que se ha cifrado con la clave especificada en el `<EncryptedKey>` elemento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CarriedKeyName">
      <MemberSignature Language="C#" Value="public string CarriedKeyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CarriedKeyName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName" />
      <MemberSignature Language="VB.NET" Value="Public Property CarriedKeyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CarriedKeyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CarriedKeyName : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el elemento <see langword="&lt;CarriedKeyName&gt;" /> opcional en cifrado XML.</summary>
        <value>Una cadena que representa un nombre para el valor de clave.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `<CarriedKeyName>` es un elemento opcional que asocia un nombre legible para el usuario a un valor de clave. Este nombre, a continuación, puede utilizarse para hacer referencia a la clave mediante el `<KeyName>` elemento dentro de la `<KeyInfo>` elemento. El mismo `<CarriedKeyName>` valor del elemento, a diferencia de un valor de identificador, puede aparecer varias veces en un solo documento. El valor de la clave debe ser el mismo en todos los `<EncryptedKey>` elementos identificados con el mismo `<CarriedKeyName>` nombre dentro de un documento XML. Tenga en cuenta que, dado que el espacio en blanco es significativo en el valor de la `<KeyName>` elemento, también es importante en el valor de espacio en blanco la `<CarriedKeyName>` elemento.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo cifrar y descifrar un elemento XML mediante la <xref:System.Security.Cryptography.Xml.EncryptedKey> clase. En este ejemplo, a continuación, muestra los valores de varias propiedades de la <xref:System.Security.Cryptography.Xml.EncryptedKey> clase en la consola.  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedKey.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlElement ^ GetXml();" />
      <MemberSignature Language="F#" Value="override this.GetXml : unit -&gt; System.Xml.XmlElement" Usage="encryptedKey.GetXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve la representación XML del objeto <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" />.</summary>
        <returns>Objeto <see cref="T:System.Xml.XmlElement" /> que representa el elemento <see langword="&lt;EncryptedKey&gt;" /> en el cifrado XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método para generar el `<EncryptedKey>` elemento en XML.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">El valor <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public override void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedKey.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberSignature Language="F#" Value="override this.LoadXml : System.Xml.XmlElement -&gt; unit" Usage="encryptedKey.LoadXml value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">Objeto <see cref="T:System.Xml.XmlElement" /> que representa un elemento XML que se ha de utilizar para el elemento <see langword="&lt;EncryptedKey&gt;" />.</param>
        <summary>Carga la información XML especificada en el elemento <see langword="&lt;EncryptedKey&gt;" /> en cifrado XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método para cargar un elemento XML existente en el `<EncryptedKey>` elemento representado por la <xref:System.Security.Cryptography.Xml.EncryptedData> objeto.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo cifrar y descifrar un elemento XML mediante la <xref:System.Security.Cryptography.Xml.EncryptedKey> clase. En este ejemplo, a continuación, muestra los valores de varias propiedades de la <xref:System.Security.Cryptography.Xml.EncryptedKey> clase en la consola.  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">El parámetro <paramref name="value" /> no contiene un elemento <see cref="T:System.Security.Cryptography.Xml.CipherData" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Recipient">
      <MemberSignature Language="C#" Value="public string Recipient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Recipient" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedKey.Recipient" />
      <MemberSignature Language="VB.NET" Value="Public Property Recipient As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Recipient { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Recipient : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedKey.Recipient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el atributo <see langword="Recipient" /> opcional en cifrado XML.</summary>
        <value>Una cadena que representa el valor del atributo <see langword="Recipient" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `<Recipient>` es un atributo opcional que contiene información acerca de qué destinatario está destinado a este valor de clave de cifrado. Su contenido es dependientes de la aplicación.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo cifrar y descifrar un elemento XML mediante la <xref:System.Security.Cryptography.Xml.EncryptedKey> clase. En este ejemplo, a continuación, muestra los valores de varias propiedades de la <xref:System.Security.Cryptography.Xml.EncryptedKey> clase en la consola.  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceList">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.ReferenceList ReferenceList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.ReferenceList ReferenceList" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferenceList As ReferenceList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::ReferenceList ^ ReferenceList { System::Security::Cryptography::Xml::ReferenceList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferenceList : System.Security.Cryptography.Xml.ReferenceList" Usage="System.Security.Cryptography.Xml.EncryptedKey.ReferenceList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.ReferenceList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el elemento <see langword="&lt;ReferenceList&gt;" /> en cifrado XML.</summary>
        <value>Un objeto <see cref="T:System.Security.Cryptography.Xml.ReferenceList" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `<ReferenceList>` es un elemento opcional que contiene punteros a datos y claves cifradas utilizando esta clave. La lista de referencia puede contener varias referencias a la `<EncryptedKey>` y `<EncryptedData>` elementos mediante el `<KeyReference>` y `<DataReference>` elementos respectivamente.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo cifrar y descifrar un elemento XML mediante la <xref:System.Security.Cryptography.Xml.EncryptedKey> clase. En este ejemplo, a continuación, muestra los valores de varias propiedades de la <xref:System.Security.Cryptography.Xml.EncryptedKey> clase en la consola.  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>